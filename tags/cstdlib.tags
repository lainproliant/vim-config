!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	/usr/include/dns_util.h	/^		dns_address_record_t *A;$/;"	m	union:__anon41::__anon42	access:public
AAAA	/usr/include/dns_util.h	/^		dns_in6_address_record_t *AAAA;$/;"	m	union:__anon41::__anon42	access:public
ABDAY_1	/usr/include/langinfo.h	/^#define	ABDAY_1	/;"	d
ABDAY_2	/usr/include/langinfo.h	/^#define	ABDAY_2	/;"	d
ABDAY_3	/usr/include/langinfo.h	/^#define	ABDAY_3	/;"	d
ABDAY_4	/usr/include/langinfo.h	/^#define	ABDAY_4	/;"	d
ABDAY_5	/usr/include/langinfo.h	/^#define	ABDAY_5	/;"	d
ABDAY_6	/usr/include/langinfo.h	/^#define	ABDAY_6	/;"	d
ABDAY_7	/usr/include/langinfo.h	/^#define	ABDAY_7	/;"	d
ABMON_1	/usr/include/langinfo.h	/^#define	ABMON_1	/;"	d
ABMON_10	/usr/include/langinfo.h	/^#define	ABMON_10	/;"	d
ABMON_11	/usr/include/langinfo.h	/^#define	ABMON_11	/;"	d
ABMON_12	/usr/include/langinfo.h	/^#define	ABMON_12	/;"	d
ABMON_2	/usr/include/langinfo.h	/^#define	ABMON_2	/;"	d
ABMON_3	/usr/include/langinfo.h	/^#define	ABMON_3	/;"	d
ABMON_4	/usr/include/langinfo.h	/^#define	ABMON_4	/;"	d
ABMON_5	/usr/include/langinfo.h	/^#define	ABMON_5	/;"	d
ABMON_6	/usr/include/langinfo.h	/^#define	ABMON_6	/;"	d
ABMON_7	/usr/include/langinfo.h	/^#define	ABMON_7	/;"	d
ABMON_8	/usr/include/langinfo.h	/^#define	ABMON_8	/;"	d
ABMON_9	/usr/include/langinfo.h	/^#define	ABMON_9	/;"	d
ABSENT_BOOLEAN	/usr/include/tic.h	/^#define ABSENT_BOOLEAN	/;"	d
ABSENT_NUMERIC	/usr/include/tic.h	/^#define ABSENT_NUMERIC	/;"	d
ABSENT_STRING	/usr/include/tic.h	/^#define ABSENT_STRING	/;"	d
ACCOUNTING	/usr/include/utmpx.h	/^#define ACCOUNTING	/;"	d
ACS_BBSS	/usr/include/curses.h	/^#define ACS_BBSS	/;"	d
ACS_BBSS	/usr/include/ncurses.h	/^#define ACS_BBSS	/;"	d
ACS_BLOCK	/usr/include/curses.h	/^#define ACS_BLOCK	/;"	d
ACS_BLOCK	/usr/include/ncurses.h	/^#define ACS_BLOCK	/;"	d
ACS_BOARD	/usr/include/curses.h	/^#define ACS_BOARD	/;"	d
ACS_BOARD	/usr/include/ncurses.h	/^#define ACS_BOARD	/;"	d
ACS_BSBS	/usr/include/curses.h	/^#define ACS_BSBS	/;"	d
ACS_BSBS	/usr/include/ncurses.h	/^#define ACS_BSBS	/;"	d
ACS_BSSB	/usr/include/curses.h	/^#define ACS_BSSB	/;"	d
ACS_BSSB	/usr/include/ncurses.h	/^#define ACS_BSSB	/;"	d
ACS_BSSS	/usr/include/curses.h	/^#define ACS_BSSS	/;"	d
ACS_BSSS	/usr/include/ncurses.h	/^#define ACS_BSSS	/;"	d
ACS_BTEE	/usr/include/curses.h	/^#define ACS_BTEE	/;"	d
ACS_BTEE	/usr/include/ncurses.h	/^#define ACS_BTEE	/;"	d
ACS_BULLET	/usr/include/curses.h	/^#define ACS_BULLET	/;"	d
ACS_BULLET	/usr/include/ncurses.h	/^#define ACS_BULLET	/;"	d
ACS_CKBOARD	/usr/include/curses.h	/^#define ACS_CKBOARD	/;"	d
ACS_CKBOARD	/usr/include/ncurses.h	/^#define ACS_CKBOARD	/;"	d
ACS_DARROW	/usr/include/curses.h	/^#define ACS_DARROW	/;"	d
ACS_DARROW	/usr/include/ncurses.h	/^#define ACS_DARROW	/;"	d
ACS_DEGREE	/usr/include/curses.h	/^#define ACS_DEGREE	/;"	d
ACS_DEGREE	/usr/include/ncurses.h	/^#define ACS_DEGREE	/;"	d
ACS_DIAMOND	/usr/include/curses.h	/^#define ACS_DIAMOND	/;"	d
ACS_DIAMOND	/usr/include/ncurses.h	/^#define ACS_DIAMOND	/;"	d
ACS_GEQUAL	/usr/include/curses.h	/^#define ACS_GEQUAL	/;"	d
ACS_GEQUAL	/usr/include/ncurses.h	/^#define ACS_GEQUAL	/;"	d
ACS_HLINE	/usr/include/curses.h	/^#define ACS_HLINE	/;"	d
ACS_HLINE	/usr/include/ncurses.h	/^#define ACS_HLINE	/;"	d
ACS_LANTERN	/usr/include/curses.h	/^#define ACS_LANTERN	/;"	d
ACS_LANTERN	/usr/include/ncurses.h	/^#define ACS_LANTERN	/;"	d
ACS_LARROW	/usr/include/curses.h	/^#define ACS_LARROW	/;"	d
ACS_LARROW	/usr/include/ncurses.h	/^#define ACS_LARROW	/;"	d
ACS_LEQUAL	/usr/include/curses.h	/^#define ACS_LEQUAL	/;"	d
ACS_LEQUAL	/usr/include/ncurses.h	/^#define ACS_LEQUAL	/;"	d
ACS_LLCORNER	/usr/include/curses.h	/^#define ACS_LLCORNER	/;"	d
ACS_LLCORNER	/usr/include/ncurses.h	/^#define ACS_LLCORNER	/;"	d
ACS_LRCORNER	/usr/include/curses.h	/^#define ACS_LRCORNER	/;"	d
ACS_LRCORNER	/usr/include/ncurses.h	/^#define ACS_LRCORNER	/;"	d
ACS_LTEE	/usr/include/curses.h	/^#define ACS_LTEE	/;"	d
ACS_LTEE	/usr/include/ncurses.h	/^#define ACS_LTEE	/;"	d
ACS_NEQUAL	/usr/include/curses.h	/^#define ACS_NEQUAL	/;"	d
ACS_NEQUAL	/usr/include/ncurses.h	/^#define ACS_NEQUAL	/;"	d
ACS_PI	/usr/include/curses.h	/^#define ACS_PI	/;"	d
ACS_PI	/usr/include/ncurses.h	/^#define ACS_PI	/;"	d
ACS_PLMINUS	/usr/include/curses.h	/^#define ACS_PLMINUS	/;"	d
ACS_PLMINUS	/usr/include/ncurses.h	/^#define ACS_PLMINUS	/;"	d
ACS_PLUS	/usr/include/curses.h	/^#define ACS_PLUS	/;"	d
ACS_PLUS	/usr/include/ncurses.h	/^#define ACS_PLUS	/;"	d
ACS_RARROW	/usr/include/curses.h	/^#define ACS_RARROW	/;"	d
ACS_RARROW	/usr/include/ncurses.h	/^#define ACS_RARROW	/;"	d
ACS_RTEE	/usr/include/curses.h	/^#define ACS_RTEE	/;"	d
ACS_RTEE	/usr/include/ncurses.h	/^#define ACS_RTEE	/;"	d
ACS_S1	/usr/include/curses.h	/^#define ACS_S1	/;"	d
ACS_S1	/usr/include/ncurses.h	/^#define ACS_S1	/;"	d
ACS_S3	/usr/include/curses.h	/^#define ACS_S3	/;"	d
ACS_S3	/usr/include/ncurses.h	/^#define ACS_S3	/;"	d
ACS_S7	/usr/include/curses.h	/^#define ACS_S7	/;"	d
ACS_S7	/usr/include/ncurses.h	/^#define ACS_S7	/;"	d
ACS_S9	/usr/include/curses.h	/^#define ACS_S9	/;"	d
ACS_S9	/usr/include/ncurses.h	/^#define ACS_S9	/;"	d
ACS_SBBS	/usr/include/curses.h	/^#define ACS_SBBS	/;"	d
ACS_SBBS	/usr/include/ncurses.h	/^#define ACS_SBBS	/;"	d
ACS_SBSB	/usr/include/curses.h	/^#define ACS_SBSB	/;"	d
ACS_SBSB	/usr/include/ncurses.h	/^#define ACS_SBSB	/;"	d
ACS_SBSS	/usr/include/curses.h	/^#define ACS_SBSS	/;"	d
ACS_SBSS	/usr/include/ncurses.h	/^#define ACS_SBSS	/;"	d
ACS_SSBB	/usr/include/curses.h	/^#define ACS_SSBB	/;"	d
ACS_SSBB	/usr/include/ncurses.h	/^#define ACS_SSBB	/;"	d
ACS_SSBS	/usr/include/curses.h	/^#define ACS_SSBS	/;"	d
ACS_SSBS	/usr/include/ncurses.h	/^#define ACS_SSBS	/;"	d
ACS_SSSB	/usr/include/curses.h	/^#define ACS_SSSB	/;"	d
ACS_SSSB	/usr/include/ncurses.h	/^#define ACS_SSSB	/;"	d
ACS_SSSS	/usr/include/curses.h	/^#define ACS_SSSS	/;"	d
ACS_SSSS	/usr/include/ncurses.h	/^#define ACS_SSSS	/;"	d
ACS_STERLING	/usr/include/curses.h	/^#define ACS_STERLING	/;"	d
ACS_STERLING	/usr/include/ncurses.h	/^#define ACS_STERLING	/;"	d
ACS_TTEE	/usr/include/curses.h	/^#define ACS_TTEE	/;"	d
ACS_TTEE	/usr/include/ncurses.h	/^#define ACS_TTEE	/;"	d
ACS_UARROW	/usr/include/curses.h	/^#define ACS_UARROW	/;"	d
ACS_UARROW	/usr/include/ncurses.h	/^#define ACS_UARROW	/;"	d
ACS_ULCORNER	/usr/include/curses.h	/^#define ACS_ULCORNER	/;"	d
ACS_ULCORNER	/usr/include/ncurses.h	/^#define ACS_ULCORNER	/;"	d
ACS_URCORNER	/usr/include/curses.h	/^#define ACS_URCORNER	/;"	d
ACS_URCORNER	/usr/include/ncurses.h	/^#define ACS_URCORNER	/;"	d
ACS_VLINE	/usr/include/curses.h	/^#define ACS_VLINE	/;"	d
ACS_VLINE	/usr/include/ncurses.h	/^#define ACS_VLINE	/;"	d
ACTION	/usr/include/search.h	/^} ACTION;$/;"	t	typeref:enum:__anon105
AC_DENY	/usr/include/tcpd.h	/^#define AC_DENY	/;"	d
AC_ERROR	/usr/include/tcpd.h	/^#define AC_ERROR	/;"	d
AC_PERMIT	/usr/include/tcpd.h	/^#define AC_PERMIT	/;"	d
AFSDB	/usr/include/dns_util.h	/^		dns_AFSDB_record_t *AFSDB;$/;"	m	union:__anon41::__anon42	access:public
AI_ADDRCONFIG	/usr/include/netdb.h	/^#define	AI_ADDRCONFIG	/;"	d
AI_ALL	/usr/include/netdb.h	/^#define	AI_ALL	/;"	d
AI_CANONNAME	/usr/include/netdb.h	/^#define	AI_CANONNAME	/;"	d
AI_DEFAULT	/usr/include/netdb.h	/^#define	AI_DEFAULT	/;"	d
AI_MASK	/usr/include/netdb.h	/^#define AI_MASK /;"	d
AI_NUMERICHOST	/usr/include/netdb.h	/^#define	AI_NUMERICHOST	/;"	d
AI_NUMERICSERV	/usr/include/netdb.h	/^#define	AI_NUMERICSERV	/;"	d
AI_PASSIVE	/usr/include/netdb.h	/^#define	AI_PASSIVE	/;"	d
AI_V4MAPPED	/usr/include/netdb.h	/^#define	AI_V4MAPPED	/;"	d
AI_V4MAPPED_CFG	/usr/include/netdb.h	/^#define	AI_V4MAPPED_CFG	/;"	d
ALL_MOUSE_EVENTS	/usr/include/curses.h	/^#define	ALL_MOUSE_EVENTS	/;"	d
ALL_MOUSE_EVENTS	/usr/include/ncurses.h	/^#define	ALL_MOUSE_EVENTS	/;"	d
ALT_DIGITS	/usr/include/langinfo.h	/^#define	ALT_DIGITS	/;"	d
AM_STR	/usr/include/langinfo.h	/^#define	AM_STR	/;"	d
ANDMISSING	/usr/include/term_entry.h	/^#define ANDMISSING(/;"	d
AREGTYPE	/usr/include/tar.h	/^#define	AREGTYPE	/;"	d
ARFMAG	/usr/include/ar.h	/^#define	ARFMAG	/;"	d
ARMAG	/usr/include/ar.h	/^#define	ARMAG	/;"	d
AR_EFMT1	/usr/include/ar.h	/^#define	AR_EFMT1	/;"	d
ASL_FILTER_MASK	/usr/include/asl.h	/^#define	ASL_FILTER_MASK(/;"	d
ASL_FILTER_MASK_ALERT	/usr/include/asl.h	/^#define ASL_FILTER_MASK_ALERT /;"	d
ASL_FILTER_MASK_CRIT	/usr/include/asl.h	/^#define ASL_FILTER_MASK_CRIT /;"	d
ASL_FILTER_MASK_DEBUG	/usr/include/asl.h	/^#define ASL_FILTER_MASK_DEBUG /;"	d
ASL_FILTER_MASK_EMERG	/usr/include/asl.h	/^#define ASL_FILTER_MASK_EMERG /;"	d
ASL_FILTER_MASK_ERR	/usr/include/asl.h	/^#define ASL_FILTER_MASK_ERR /;"	d
ASL_FILTER_MASK_INFO	/usr/include/asl.h	/^#define ASL_FILTER_MASK_INFO /;"	d
ASL_FILTER_MASK_NOTICE	/usr/include/asl.h	/^#define ASL_FILTER_MASK_NOTICE /;"	d
ASL_FILTER_MASK_UPTO	/usr/include/asl.h	/^#define	ASL_FILTER_MASK_UPTO(/;"	d
ASL_FILTER_MASK_WARNING	/usr/include/asl.h	/^#define ASL_FILTER_MASK_WARNING /;"	d
ASL_KEY_EXPIRE_TIME	/usr/include/asl.h	/^#define ASL_KEY_EXPIRE_TIME /;"	d
ASL_KEY_FACILITY	/usr/include/asl.h	/^#define ASL_KEY_FACILITY /;"	d
ASL_KEY_GID	/usr/include/asl.h	/^#define ASL_KEY_GID /;"	d
ASL_KEY_HOST	/usr/include/asl.h	/^#define ASL_KEY_HOST /;"	d
ASL_KEY_LEVEL	/usr/include/asl.h	/^#define ASL_KEY_LEVEL /;"	d
ASL_KEY_MSG	/usr/include/asl.h	/^#define ASL_KEY_MSG /;"	d
ASL_KEY_MSG_ID	/usr/include/asl.h	/^#define ASL_KEY_MSG_ID /;"	d
ASL_KEY_PID	/usr/include/asl.h	/^#define ASL_KEY_PID /;"	d
ASL_KEY_READ_GID	/usr/include/asl.h	/^#define ASL_KEY_READ_GID /;"	d
ASL_KEY_READ_UID	/usr/include/asl.h	/^#define ASL_KEY_READ_UID /;"	d
ASL_KEY_REF_PID	/usr/include/asl.h	/^#define ASL_KEY_REF_PID /;"	d
ASL_KEY_REF_PROC	/usr/include/asl.h	/^#define ASL_KEY_REF_PROC /;"	d
ASL_KEY_SENDER	/usr/include/asl.h	/^#define ASL_KEY_SENDER /;"	d
ASL_KEY_SESSION	/usr/include/asl.h	/^#define ASL_KEY_SESSION /;"	d
ASL_KEY_TIME	/usr/include/asl.h	/^#define ASL_KEY_TIME /;"	d
ASL_KEY_TIME_NSEC	/usr/include/asl.h	/^#define ASL_KEY_TIME_NSEC /;"	d
ASL_KEY_UID	/usr/include/asl.h	/^#define ASL_KEY_UID /;"	d
ASL_LEVEL_ALERT	/usr/include/asl.h	/^#define ASL_LEVEL_ALERT /;"	d
ASL_LEVEL_CRIT	/usr/include/asl.h	/^#define ASL_LEVEL_CRIT /;"	d
ASL_LEVEL_DEBUG	/usr/include/asl.h	/^#define ASL_LEVEL_DEBUG /;"	d
ASL_LEVEL_EMERG	/usr/include/asl.h	/^#define ASL_LEVEL_EMERG /;"	d
ASL_LEVEL_ERR	/usr/include/asl.h	/^#define ASL_LEVEL_ERR /;"	d
ASL_LEVEL_INFO	/usr/include/asl.h	/^#define ASL_LEVEL_INFO /;"	d
ASL_LEVEL_NOTICE	/usr/include/asl.h	/^#define ASL_LEVEL_NOTICE /;"	d
ASL_LEVEL_WARNING	/usr/include/asl.h	/^#define ASL_LEVEL_WARNING /;"	d
ASL_OPT_NO_DELAY	/usr/include/asl.h	/^#define ASL_OPT_NO_DELAY /;"	d
ASL_OPT_NO_REMOTE	/usr/include/asl.h	/^#define ASL_OPT_NO_REMOTE /;"	d
ASL_OPT_STDERR	/usr/include/asl.h	/^#define ASL_OPT_STDERR	/;"	d
ASL_QUERY_OP_CASEFOLD	/usr/include/asl.h	/^#define ASL_QUERY_OP_CASEFOLD /;"	d
ASL_QUERY_OP_EQUAL	/usr/include/asl.h	/^#define ASL_QUERY_OP_EQUAL /;"	d
ASL_QUERY_OP_GREATER	/usr/include/asl.h	/^#define ASL_QUERY_OP_GREATER /;"	d
ASL_QUERY_OP_GREATER_EQUAL	/usr/include/asl.h	/^#define ASL_QUERY_OP_GREATER_EQUAL /;"	d
ASL_QUERY_OP_LESS	/usr/include/asl.h	/^#define ASL_QUERY_OP_LESS /;"	d
ASL_QUERY_OP_LESS_EQUAL	/usr/include/asl.h	/^#define ASL_QUERY_OP_LESS_EQUAL /;"	d
ASL_QUERY_OP_NOT_EQUAL	/usr/include/asl.h	/^#define ASL_QUERY_OP_NOT_EQUAL /;"	d
ASL_QUERY_OP_NUMERIC	/usr/include/asl.h	/^#define ASL_QUERY_OP_NUMERIC /;"	d
ASL_QUERY_OP_PREFIX	/usr/include/asl.h	/^#define ASL_QUERY_OP_PREFIX	/;"	d
ASL_QUERY_OP_REGEX	/usr/include/asl.h	/^#define ASL_QUERY_OP_REGEX /;"	d
ASL_QUERY_OP_SUBSTRING	/usr/include/asl.h	/^#define ASL_QUERY_OP_SUBSTRING /;"	d
ASL_QUERY_OP_SUFFIX	/usr/include/asl.h	/^#define ASL_QUERY_OP_SUFFIX	/;"	d
ASL_QUERY_OP_TRUE	/usr/include/asl.h	/^#define ASL_QUERY_OP_TRUE /;"	d
ASL_STRING_ALERT	/usr/include/asl.h	/^#define ASL_STRING_ALERT	/;"	d
ASL_STRING_CRIT	/usr/include/asl.h	/^#define ASL_STRING_CRIT	/;"	d
ASL_STRING_DEBUG	/usr/include/asl.h	/^#define ASL_STRING_DEBUG	/;"	d
ASL_STRING_EMERG	/usr/include/asl.h	/^#define ASL_STRING_EMERG	/;"	d
ASL_STRING_ERR	/usr/include/asl.h	/^#define ASL_STRING_ERR	/;"	d
ASL_STRING_INFO	/usr/include/asl.h	/^#define ASL_STRING_INFO	/;"	d
ASL_STRING_NOTICE	/usr/include/asl.h	/^#define ASL_STRING_NOTICE /;"	d
ASL_STRING_WARNING	/usr/include/asl.h	/^#define ASL_STRING_WARNING /;"	d
ASL_TYPE_MSG	/usr/include/asl.h	/^#define ASL_TYPE_MSG /;"	d
ASL_TYPE_QUERY	/usr/include/asl.h	/^#define ASL_TYPE_QUERY /;"	d
ASSERT	/usr/include/fcgimisc.h	/^#define ASSERT(/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER	/usr/include/AvailabilityMacros.h	/^#define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^#define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6 /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER /;"	d
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER$/;"	d
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED	/usr/include/AvailabilityMacros.h	/^    #define AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED /;"	d
A_ALTCHARSET	/usr/include/curses.h	/^#define A_ALTCHARSET	/;"	d
A_ALTCHARSET	/usr/include/ncurses.h	/^#define A_ALTCHARSET	/;"	d
A_ATTRIBUTES	/usr/include/curses.h	/^#define A_ATTRIBUTES	/;"	d
A_ATTRIBUTES	/usr/include/ncurses.h	/^#define A_ATTRIBUTES	/;"	d
A_BLINK	/usr/include/curses.h	/^#define A_BLINK	/;"	d
A_BLINK	/usr/include/ncurses.h	/^#define A_BLINK	/;"	d
A_BOLD	/usr/include/curses.h	/^#define A_BOLD	/;"	d
A_BOLD	/usr/include/ncurses.h	/^#define A_BOLD	/;"	d
A_CHARTEXT	/usr/include/curses.h	/^#define A_CHARTEXT	/;"	d
A_CHARTEXT	/usr/include/ncurses.h	/^#define A_CHARTEXT	/;"	d
A_COLOR	/usr/include/curses.h	/^#define A_COLOR	/;"	d
A_COLOR	/usr/include/ncurses.h	/^#define A_COLOR	/;"	d
A_DIM	/usr/include/curses.h	/^#define A_DIM	/;"	d
A_DIM	/usr/include/ncurses.h	/^#define A_DIM	/;"	d
A_HORIZONTAL	/usr/include/curses.h	/^#define A_HORIZONTAL	/;"	d
A_HORIZONTAL	/usr/include/ncurses.h	/^#define A_HORIZONTAL	/;"	d
A_INVIS	/usr/include/curses.h	/^#define A_INVIS	/;"	d
A_INVIS	/usr/include/ncurses.h	/^#define A_INVIS	/;"	d
A_LEFT	/usr/include/curses.h	/^#define A_LEFT	/;"	d
A_LEFT	/usr/include/ncurses.h	/^#define A_LEFT	/;"	d
A_LOW	/usr/include/curses.h	/^#define A_LOW	/;"	d
A_LOW	/usr/include/ncurses.h	/^#define A_LOW	/;"	d
A_NORMAL	/usr/include/curses.h	/^#define A_NORMAL	/;"	d
A_NORMAL	/usr/include/ncurses.h	/^#define A_NORMAL	/;"	d
A_PROTECT	/usr/include/curses.h	/^#define A_PROTECT	/;"	d
A_PROTECT	/usr/include/ncurses.h	/^#define A_PROTECT	/;"	d
A_REVERSE	/usr/include/curses.h	/^#define A_REVERSE	/;"	d
A_REVERSE	/usr/include/ncurses.h	/^#define A_REVERSE	/;"	d
A_RIGHT	/usr/include/curses.h	/^#define A_RIGHT	/;"	d
A_RIGHT	/usr/include/ncurses.h	/^#define A_RIGHT	/;"	d
A_STANDOUT	/usr/include/curses.h	/^#define A_STANDOUT	/;"	d
A_STANDOUT	/usr/include/ncurses.h	/^#define A_STANDOUT	/;"	d
A_TOP	/usr/include/curses.h	/^#define A_TOP	/;"	d
A_TOP	/usr/include/ncurses.h	/^#define A_TOP	/;"	d
A_UNDERLINE	/usr/include/curses.h	/^#define A_UNDERLINE	/;"	d
A_UNDERLINE	/usr/include/ncurses.h	/^#define A_UNDERLINE	/;"	d
A_VERTICAL	/usr/include/curses.h	/^#define A_VERTICAL	/;"	d
A_VERTICAL	/usr/include/ncurses.h	/^#define A_VERTICAL	/;"	d
ActivateMask	/usr/include/tk.h	/^#define ActivateMask	/;"	d
ActivateNotify	/usr/include/tk.h	/^#define ActivateNotify	/;"	d
BERDecodeCallback	/usr/include/lber.h	/^typedef int (*BERDecodeCallback) LDAP_P(($/;"	t
BEREncodeCallback	/usr/include/lber.h	/^typedef int (*BEREncodeCallback) LDAP_P(($/;"	t
BER_ERRNO_FN	/usr/include/lber.h	/^typedef int* (*BER_ERRNO_FN) LDAP_P(( void ));$/;"	t
BER_LOG_PRINT_FN	/usr/include/lber.h	/^typedef void (*BER_LOG_PRINT_FN) LDAP_P(( LDAP_CONST char *buf ));$/;"	t
BER_MEMALLOC_FN	/usr/include/lber.h	/^typedef void* (BER_MEMALLOC_FN)	LDAP_P(( ber_len_t size, void *ctx ));$/;"	t
BER_MEMCALLOC_FN	/usr/include/lber.h	/^typedef void* (BER_MEMCALLOC_FN)	LDAP_P(( ber_len_t n, ber_len_t size, void *ctx ));$/;"	t
BER_MEMFREE_FN	/usr/include/lber.h	/^typedef void  (BER_MEMFREE_FN)		LDAP_P(( void *p, void *ctx ));$/;"	t
BER_MEMREALLOC_FN	/usr/include/lber.h	/^typedef void* (BER_MEMREALLOC_FN)	LDAP_P(( void *p, ber_len_t size, void *ctx ));$/;"	t
BKT	/usr/include/mpool.h	/^} BKT;$/;"	t	typeref:struct:_bkt
BLKTYPE	/usr/include/tar.h	/^#define	BLKTYPE	/;"	d
BLOCK_EXPORT	/usr/include/Block.h	/^#       define BLOCK_EXPORT /;"	d
BN_H_	/usr/include/tclTomMath.h	/^#define BN_H_$/;"	d
BOOKMARK	/usr/include/sqltypes.h	/^typedef SQLULEN			BOOKMARK;$/;"	t
BOOL	/usr/include/iodbcunix.h	/^typedef int			BOOL;$/;"	t
BOOLCOUNT	/usr/include/term.h	/^#define BOOLCOUNT /;"	d
BOOLEAN	/usr/include/tic.h	/^#define BOOLEAN /;"	d
BOOLWRITE	/usr/include/term.h	/^#define BOOLWRITE /;"	d
BOOT_TIME	/usr/include/utmpx.h	/^#define BOOT_TIME	/;"	d
BTREEINFO	/usr/include/db.h	/^} BTREEINFO;$/;"	t	typeref:struct:__anon13
BTREEMAGIC	/usr/include/db.h	/^#define	BTREEMAGIC	/;"	d
BTREEVERSION	/usr/include/db.h	/^#define	BTREEVERSION	/;"	d
BUFSIZ	/usr/include/stdio.h	/^#define	BUFSIZ	/;"	d
BUTTON1_CLICKED	/usr/include/curses.h	/^#define	BUTTON1_CLICKED	/;"	d
BUTTON1_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON1_CLICKED	/;"	d
BUTTON1_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON1_DOUBLE_CLICKED	/;"	d
BUTTON1_DOUBLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON1_DOUBLE_CLICKED	/;"	d
BUTTON1_PRESSED	/usr/include/curses.h	/^#define	BUTTON1_PRESSED	/;"	d
BUTTON1_PRESSED	/usr/include/ncurses.h	/^#define	BUTTON1_PRESSED	/;"	d
BUTTON1_RELEASED	/usr/include/curses.h	/^#define	BUTTON1_RELEASED	/;"	d
BUTTON1_RELEASED	/usr/include/ncurses.h	/^#define	BUTTON1_RELEASED	/;"	d
BUTTON1_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON1_RESERVED_EVENT	/;"	d
BUTTON1_RESERVED_EVENT	/usr/include/ncurses.h	/^#define	BUTTON1_RESERVED_EVENT	/;"	d
BUTTON1_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON1_TRIPLE_CLICKED	/;"	d
BUTTON1_TRIPLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON1_TRIPLE_CLICKED	/;"	d
BUTTON2_CLICKED	/usr/include/curses.h	/^#define	BUTTON2_CLICKED	/;"	d
BUTTON2_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON2_CLICKED	/;"	d
BUTTON2_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON2_DOUBLE_CLICKED	/;"	d
BUTTON2_DOUBLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON2_DOUBLE_CLICKED	/;"	d
BUTTON2_PRESSED	/usr/include/curses.h	/^#define	BUTTON2_PRESSED	/;"	d
BUTTON2_PRESSED	/usr/include/ncurses.h	/^#define	BUTTON2_PRESSED	/;"	d
BUTTON2_RELEASED	/usr/include/curses.h	/^#define	BUTTON2_RELEASED	/;"	d
BUTTON2_RELEASED	/usr/include/ncurses.h	/^#define	BUTTON2_RELEASED	/;"	d
BUTTON2_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON2_RESERVED_EVENT	/;"	d
BUTTON2_RESERVED_EVENT	/usr/include/ncurses.h	/^#define	BUTTON2_RESERVED_EVENT	/;"	d
BUTTON2_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON2_TRIPLE_CLICKED	/;"	d
BUTTON2_TRIPLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON2_TRIPLE_CLICKED	/;"	d
BUTTON3_CLICKED	/usr/include/curses.h	/^#define	BUTTON3_CLICKED	/;"	d
BUTTON3_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON3_CLICKED	/;"	d
BUTTON3_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON3_DOUBLE_CLICKED	/;"	d
BUTTON3_DOUBLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON3_DOUBLE_CLICKED	/;"	d
BUTTON3_PRESSED	/usr/include/curses.h	/^#define	BUTTON3_PRESSED	/;"	d
BUTTON3_PRESSED	/usr/include/ncurses.h	/^#define	BUTTON3_PRESSED	/;"	d
BUTTON3_RELEASED	/usr/include/curses.h	/^#define	BUTTON3_RELEASED	/;"	d
BUTTON3_RELEASED	/usr/include/ncurses.h	/^#define	BUTTON3_RELEASED	/;"	d
BUTTON3_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON3_RESERVED_EVENT	/;"	d
BUTTON3_RESERVED_EVENT	/usr/include/ncurses.h	/^#define	BUTTON3_RESERVED_EVENT	/;"	d
BUTTON3_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON3_TRIPLE_CLICKED	/;"	d
BUTTON3_TRIPLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON3_TRIPLE_CLICKED	/;"	d
BUTTON4_CLICKED	/usr/include/curses.h	/^#define	BUTTON4_CLICKED	/;"	d
BUTTON4_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON4_CLICKED	/;"	d
BUTTON4_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON4_DOUBLE_CLICKED	/;"	d
BUTTON4_DOUBLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON4_DOUBLE_CLICKED	/;"	d
BUTTON4_PRESSED	/usr/include/curses.h	/^#define	BUTTON4_PRESSED	/;"	d
BUTTON4_PRESSED	/usr/include/ncurses.h	/^#define	BUTTON4_PRESSED	/;"	d
BUTTON4_RELEASED	/usr/include/curses.h	/^#define	BUTTON4_RELEASED	/;"	d
BUTTON4_RELEASED	/usr/include/ncurses.h	/^#define	BUTTON4_RELEASED	/;"	d
BUTTON4_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON4_RESERVED_EVENT	/;"	d
BUTTON4_RESERVED_EVENT	/usr/include/ncurses.h	/^#define	BUTTON4_RESERVED_EVENT	/;"	d
BUTTON4_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON4_TRIPLE_CLICKED	/;"	d
BUTTON4_TRIPLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON4_TRIPLE_CLICKED	/;"	d
BUTTON5_CLICKED	/usr/include/curses.h	/^#define	BUTTON5_CLICKED	/;"	d
BUTTON5_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON5_CLICKED	/;"	d
BUTTON5_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON5_DOUBLE_CLICKED	/;"	d
BUTTON5_DOUBLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON5_DOUBLE_CLICKED	/;"	d
BUTTON5_PRESSED	/usr/include/curses.h	/^#define	BUTTON5_PRESSED	/;"	d
BUTTON5_PRESSED	/usr/include/ncurses.h	/^#define	BUTTON5_PRESSED	/;"	d
BUTTON5_RELEASED	/usr/include/curses.h	/^#define	BUTTON5_RELEASED	/;"	d
BUTTON5_RELEASED	/usr/include/ncurses.h	/^#define	BUTTON5_RELEASED	/;"	d
BUTTON5_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON5_TRIPLE_CLICKED	/;"	d
BUTTON5_TRIPLE_CLICKED	/usr/include/ncurses.h	/^#define	BUTTON5_TRIPLE_CLICKED	/;"	d
BUTTON_ALT	/usr/include/curses.h	/^#define	BUTTON_ALT	/;"	d
BUTTON_ALT	/usr/include/ncurses.h	/^#define	BUTTON_ALT	/;"	d
BUTTON_CLICK	/usr/include/curses.h	/^#define	BUTTON_CLICK(/;"	d
BUTTON_CLICK	/usr/include/ncurses.h	/^#define	BUTTON_CLICK(/;"	d
BUTTON_CTRL	/usr/include/curses.h	/^#define	BUTTON_CTRL	/;"	d
BUTTON_CTRL	/usr/include/ncurses.h	/^#define	BUTTON_CTRL	/;"	d
BUTTON_DOUBLE_CLICK	/usr/include/curses.h	/^#define	BUTTON_DOUBLE_CLICK(/;"	d
BUTTON_DOUBLE_CLICK	/usr/include/ncurses.h	/^#define	BUTTON_DOUBLE_CLICK(/;"	d
BUTTON_PRESS	/usr/include/curses.h	/^#define	BUTTON_PRESS(/;"	d
BUTTON_PRESS	/usr/include/ncurses.h	/^#define	BUTTON_PRESS(/;"	d
BUTTON_RELEASE	/usr/include/curses.h	/^#define	BUTTON_RELEASE(/;"	d
BUTTON_RELEASE	/usr/include/ncurses.h	/^#define	BUTTON_RELEASE(/;"	d
BUTTON_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON_RESERVED_EVENT(/;"	d
BUTTON_RESERVED_EVENT	/usr/include/ncurses.h	/^#define	BUTTON_RESERVED_EVENT(/;"	d
BUTTON_SHIFT	/usr/include/curses.h	/^#define	BUTTON_SHIFT	/;"	d
BUTTON_SHIFT	/usr/include/ncurses.h	/^#define	BUTTON_SHIFT	/;"	d
BUTTON_TRIPLE_CLICK	/usr/include/curses.h	/^#define	BUTTON_TRIPLE_CLICK(/;"	d
BUTTON_TRIPLE_CLICK	/usr/include/ncurses.h	/^#define	BUTTON_TRIPLE_CLICK(/;"	d
BYTE	/usr/include/iodbcunix.h	/^typedef unsigned char		BYTE;$/;"	t
BYTE	/usr/include/tic.h	/^#define BYTE(/;"	d
BYTE	/usr/include/tic.h	/^#undef  BYTE$/;"	d
BZ2_bzBuffToBuffCompress	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzBuffToBuffCompress) ( $/;"	p	signature:( char* dest, unsigned int* destLen, char* source, unsigned int sourceLen, int blockSize100k, int verbosity, int workFactor )
BZ2_bzBuffToBuffDecompress	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzBuffToBuffDecompress) ( $/;"	p	signature:( char* dest, unsigned int* destLen, char* source, unsigned int sourceLen, int small, int verbosity )
BZ2_bzCompress	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzCompress) ( $/;"	p	signature:( bz_stream* strm, int action )
BZ2_bzCompressEnd	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzCompressEnd) ( $/;"	p	signature:( bz_stream* strm )
BZ2_bzCompressInit	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzCompressInit) ( $/;"	p	signature:( bz_stream* strm, int blockSize100k, int verbosity, int workFactor )
BZ2_bzDecompress	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzDecompress) ( $/;"	p	signature:( bz_stream* strm )
BZ2_bzDecompressEnd	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzDecompressEnd) ( $/;"	p	signature:( bz_stream *strm )
BZ2_bzDecompressInit	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzDecompressInit) ( $/;"	p	signature:( bz_stream *strm, int verbosity, int small )
BZ2_bzRead	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzRead) ( $/;"	p	signature:( int* bzerror, BZFILE* b, void* buf, int len )
BZ2_bzReadClose	/usr/include/bzlib.h	/^BZ_EXTERN void BZ_API(BZ2_bzReadClose) ( $/;"	p	signature:( int* bzerror, BZFILE* b )
BZ2_bzReadGetUnused	/usr/include/bzlib.h	/^BZ_EXTERN void BZ_API(BZ2_bzReadGetUnused) ( $/;"	p	signature:( int* bzerror, BZFILE* b, void** unused, int* nUnused )
BZ2_bzReadOpen	/usr/include/bzlib.h	/^BZ_EXTERN BZFILE* BZ_API(BZ2_bzReadOpen) ( $/;"	p	signature:( int* bzerror, FILE* f, int verbosity, int small, void* unused, int nUnused )
BZ2_bzWrite	/usr/include/bzlib.h	/^BZ_EXTERN void BZ_API(BZ2_bzWrite) ( $/;"	p	signature:( int* bzerror, BZFILE* b, void* buf, int len )
BZ2_bzWriteClose	/usr/include/bzlib.h	/^BZ_EXTERN void BZ_API(BZ2_bzWriteClose) ( $/;"	p	signature:( int* bzerror, BZFILE* b, int abandon, unsigned int* nbytes_in, unsigned int* nbytes_out )
BZ2_bzWriteClose64	/usr/include/bzlib.h	/^BZ_EXTERN void BZ_API(BZ2_bzWriteClose64) ( $/;"	p	signature:( int* bzerror, BZFILE* b, int abandon, unsigned int* nbytes_in_lo32, unsigned int* nbytes_in_hi32, unsigned int* nbytes_out_lo32, unsigned int* nbytes_out_hi32 )
BZ2_bzWriteOpen	/usr/include/bzlib.h	/^BZ_EXTERN BZFILE* BZ_API(BZ2_bzWriteOpen) ( $/;"	p	signature:( int* bzerror, FILE* f, int blockSize100k, int verbosity, int workFactor )
BZ2_bzclose	/usr/include/bzlib.h	/^BZ_EXTERN void BZ_API(BZ2_bzclose) ($/;"	p	signature:( BZFILE* b )
BZ2_bzdopen	/usr/include/bzlib.h	/^BZ_EXTERN BZFILE * BZ_API(BZ2_bzdopen) ($/;"	p	signature:( int fd, const char *mode )
BZ2_bzerror	/usr/include/bzlib.h	/^BZ_EXTERN const char * BZ_API(BZ2_bzerror) ($/;"	p	signature:( BZFILE *b, int *errnum )
BZ2_bzflush	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzflush) ($/;"	p	signature:( BZFILE* b )
BZ2_bzlibVersion	/usr/include/bzlib.h	/^BZ_EXTERN const char * BZ_API(BZ2_bzlibVersion) ($/;"	p	signature:( void )
BZ2_bzopen	/usr/include/bzlib.h	/^BZ_EXTERN BZFILE * BZ_API(BZ2_bzopen) ($/;"	p	signature:( const char *path, const char *mode )
BZ2_bzread	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzread) ($/;"	p	signature:( BZFILE* b, void* buf, int len )
BZ2_bzwrite	/usr/include/bzlib.h	/^BZ_EXTERN int BZ_API(BZ2_bzwrite) ($/;"	p	signature:( BZFILE* b, void* buf, int len )
BZFILE	/usr/include/bzlib.h	/^typedef void BZFILE;$/;"	t
BZ_API	/usr/include/bzlib.h	/^#   define BZ_API(/;"	d
BZ_CONFIG_ERROR	/usr/include/bzlib.h	/^#define BZ_CONFIG_ERROR /;"	d
BZ_DATA_ERROR	/usr/include/bzlib.h	/^#define BZ_DATA_ERROR /;"	d
BZ_DATA_ERROR_MAGIC	/usr/include/bzlib.h	/^#define BZ_DATA_ERROR_MAGIC /;"	d
BZ_EXPORT	/usr/include/bzlib.h	/^#define BZ_EXPORT$/;"	d
BZ_EXTERN	/usr/include/bzlib.h	/^#   define BZ_EXTERN /;"	d
BZ_EXTERN	/usr/include/bzlib.h	/^#   define BZ_EXTERN$/;"	d
BZ_FINISH	/usr/include/bzlib.h	/^#define BZ_FINISH /;"	d
BZ_FINISH_OK	/usr/include/bzlib.h	/^#define BZ_FINISH_OK /;"	d
BZ_FLUSH	/usr/include/bzlib.h	/^#define BZ_FLUSH /;"	d
BZ_FLUSH_OK	/usr/include/bzlib.h	/^#define BZ_FLUSH_OK /;"	d
BZ_IO_ERROR	/usr/include/bzlib.h	/^#define BZ_IO_ERROR /;"	d
BZ_MAX_UNUSED	/usr/include/bzlib.h	/^#define BZ_MAX_UNUSED /;"	d
BZ_MEM_ERROR	/usr/include/bzlib.h	/^#define BZ_MEM_ERROR /;"	d
BZ_OK	/usr/include/bzlib.h	/^#define BZ_OK /;"	d
BZ_OUTBUFF_FULL	/usr/include/bzlib.h	/^#define BZ_OUTBUFF_FULL /;"	d
BZ_PARAM_ERROR	/usr/include/bzlib.h	/^#define BZ_PARAM_ERROR /;"	d
BZ_RUN	/usr/include/bzlib.h	/^#define BZ_RUN /;"	d
BZ_RUN_OK	/usr/include/bzlib.h	/^#define BZ_RUN_OK /;"	d
BZ_SEQUENCE_ERROR	/usr/include/bzlib.h	/^#define BZ_SEQUENCE_ERROR /;"	d
BZ_STREAM_END	/usr/include/bzlib.h	/^#define BZ_STREAM_END /;"	d
BZ_UNEXPECTED_EOF	/usr/include/bzlib.h	/^#define BZ_UNEXPECTED_EOF /;"	d
BerElement	/usr/include/lber.h	/^typedef struct berelement BerElement;$/;"	t	typeref:struct:berelement
BerMemoryFunctions	/usr/include/lber.h	/^} BerMemoryFunctions;$/;"	t	typeref:struct:lber_memory_fns
BerValue	/usr/include/lber.h	/^} BerValue;$/;"	t	typeref:struct:berval
BerVarray	/usr/include/lber.h	/^typedef BerValue *BerVarray;	\/* To distinguish from a single bv *\/$/;"	t
Block_copy	/usr/include/Block.h	/^#define Block_copy(/;"	d
Block_release	/usr/include/Block.h	/^#define Block_release(/;"	d
Booleans	/usr/include/term.h	/^    NCURSES_SBOOL  *Booleans;	\/* array of boolean values *\/$/;"	m	struct:termtype	access:public
Byte	/usr/include/zconf.h	/^#  define Byte /;"	d
Byte	/usr/include/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Bytef	/usr/include/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	/usr/include/zconf.h	/^#  define Bytef /;"	d
CACHE_ATTRIBUTES_VERSION_1	/usr/include/cache.h	/^#define CACHE_ATTRIBUTES_VERSION_1 /;"	d
CACHE_ATTRIBUTES_VERSION_2	/usr/include/cache.h	/^#define CACHE_ATTRIBUTES_VERSION_2 /;"	d
CALLBACK	/usr/include/iodbcunix.h	/^#define CALLBACK$/;"	d
CANCEL	/usr/include/tic.h	/^#define CANCEL /;"	d
CANCELLED_BOOLEAN	/usr/include/tic.h	/^#define CANCELLED_BOOLEAN	/;"	d
CANCELLED_NUMERIC	/usr/include/tic.h	/^#define CANCELLED_NUMERIC	/;"	d
CANCELLED_STRING	/usr/include/tic.h	/^#define CANCELLED_STRING	/;"	d
CCHARW_MAX	/usr/include/curses.h	/^#define CCHARW_MAX	/;"	d
CCHARW_MAX	/usr/include/ncurses.h	/^#define CCHARW_MAX	/;"	d
CC_ARGHACK	/usr/include/histedit.h	/^#define	CC_ARGHACK	/;"	d
CC_CURSOR	/usr/include/histedit.h	/^#define	CC_CURSOR	/;"	d
CC_EOF	/usr/include/histedit.h	/^#define	CC_EOF	/;"	d
CC_ERROR	/usr/include/histedit.h	/^#define	CC_ERROR	/;"	d
CC_FATAL	/usr/include/histedit.h	/^#define	CC_FATAL	/;"	d
CC_NEWLINE	/usr/include/histedit.h	/^#define	CC_NEWLINE	/;"	d
CC_NORM	/usr/include/histedit.h	/^#define	CC_NORM	/;"	d
CC_REDISPLAY	/usr/include/histedit.h	/^#define	CC_REDISPLAY	/;"	d
CC_REFRESH	/usr/include/histedit.h	/^#define	CC_REFRESH	/;"	d
CC_REFRESH_BEEP	/usr/include/histedit.h	/^#define	CC_REFRESH_BEEP	/;"	d
CHAR	/usr/include/tcl.h	/^typedef char CHAR;$/;"	t
CHECKINT_NO_ERROR	/usr/include/checkint.h	/^	CHECKINT_NO_ERROR = 0,$/;"	e	enum:__anon4
CHECKINT_OVERFLOW_ERROR	/usr/include/checkint.h	/^	CHECKINT_OVERFLOW_ERROR = (1 << 0),$/;"	e	enum:__anon4
CHECKINT_TYPE_ERROR	/usr/include/checkint.h	/^	CHECKINT_TYPE_ERROR = (1 << 1)$/;"	e	enum:__anon4
CHRTYPE	/usr/include/tar.h	/^#define	CHRTYPE	/;"	d
CLOCKS_PER_SEC	/usr/include/time.h	/^#define CLOCKS_PER_SEC /;"	d
CNAME	/usr/include/dns_util.h	/^		dns_domain_name_record_t *CNAME;$/;"	m	union:__anon41::__anon42	access:public
CODESET	/usr/include/langinfo.h	/^#define	CODESET	/;"	d
COLOR_BLACK	/usr/include/curses.h	/^#define COLOR_BLACK	/;"	d
COLOR_BLACK	/usr/include/ncurses.h	/^#define COLOR_BLACK	/;"	d
COLOR_BLUE	/usr/include/curses.h	/^#define COLOR_BLUE	/;"	d
COLOR_BLUE	/usr/include/ncurses.h	/^#define COLOR_BLUE	/;"	d
COLOR_CYAN	/usr/include/curses.h	/^#define COLOR_CYAN	/;"	d
COLOR_CYAN	/usr/include/ncurses.h	/^#define COLOR_CYAN	/;"	d
COLOR_GREEN	/usr/include/curses.h	/^#define COLOR_GREEN	/;"	d
COLOR_GREEN	/usr/include/ncurses.h	/^#define COLOR_GREEN	/;"	d
COLOR_MAGENTA	/usr/include/curses.h	/^#define COLOR_MAGENTA	/;"	d
COLOR_MAGENTA	/usr/include/ncurses.h	/^#define COLOR_MAGENTA	/;"	d
COLOR_PAIR	/usr/include/curses.h	/^#define COLOR_PAIR(/;"	d
COLOR_PAIR	/usr/include/ncurses.h	/^#define COLOR_PAIR(/;"	d
COLOR_RED	/usr/include/curses.h	/^#define COLOR_RED	/;"	d
COLOR_RED	/usr/include/ncurses.h	/^#define COLOR_RED	/;"	d
COLOR_WHITE	/usr/include/curses.h	/^#define COLOR_WHITE	/;"	d
COLOR_WHITE	/usr/include/ncurses.h	/^#define COLOR_WHITE	/;"	d
COLOR_YELLOW	/usr/include/curses.h	/^#define COLOR_YELLOW	/;"	d
COLOR_YELLOW	/usr/include/ncurses.h	/^#define COLOR_YELLOW	/;"	d
COMPAT_MODE	/usr/include/get_compat.h	/^#define COMPAT_MODE(/;"	d
CONST	/usr/include/tcl.h	/^#   define CONST /;"	d
CONST	/usr/include/tcl.h	/^#   define CONST$/;"	d
CONST	/usr/include/tcl.h	/^#undef CONST$/;"	d
CONST84	/usr/include/tcl.h	/^#      define CONST84 /;"	d
CONST84	/usr/include/tcl.h	/^#      define CONST84$/;"	d
CONST84	/usr/include/tcl.h	/^#   define CONST84$/;"	d
CONST84_RETURN	/usr/include/tcl.h	/^#      define CONST84_RETURN /;"	d
CONST84_RETURN	/usr/include/tcl.h	/^#   define CONST84_RETURN$/;"	d
CONTTYPE	/usr/include/tar.h	/^#define	CONTTYPE	/;"	d
COPYFILE_ACL	/usr/include/copyfile.h	/^#define COPYFILE_ACL	/;"	d
COPYFILE_ALL	/usr/include/copyfile.h	/^#define COPYFILE_ALL	/;"	d
COPYFILE_CHECK	/usr/include/copyfile.h	/^#define COPYFILE_CHECK	/;"	d
COPYFILE_CONTINUE	/usr/include/copyfile.h	/^#define	COPYFILE_CONTINUE	/;"	d
COPYFILE_COPY_DATA	/usr/include/copyfile.h	/^#define	COPYFILE_COPY_DATA	/;"	d
COPYFILE_DATA	/usr/include/copyfile.h	/^#define COPYFILE_DATA	/;"	d
COPYFILE_DISABLE_VAR	/usr/include/copyfile.h	/^#define	COPYFILE_DISABLE_VAR	/;"	d
COPYFILE_ERR	/usr/include/copyfile.h	/^#define	COPYFILE_ERR	/;"	d
COPYFILE_EXCL	/usr/include/copyfile.h	/^#define COPYFILE_EXCL	/;"	d
COPYFILE_FINISH	/usr/include/copyfile.h	/^#define	COPYFILE_FINISH	/;"	d
COPYFILE_METADATA	/usr/include/copyfile.h	/^#define COPYFILE_METADATA /;"	d
COPYFILE_MOVE	/usr/include/copyfile.h	/^#define COPYFILE_MOVE	/;"	d
COPYFILE_NOFOLLOW	/usr/include/copyfile.h	/^#define COPYFILE_NOFOLLOW	/;"	d
COPYFILE_NOFOLLOW_DST	/usr/include/copyfile.h	/^#define COPYFILE_NOFOLLOW_DST	/;"	d
COPYFILE_NOFOLLOW_SRC	/usr/include/copyfile.h	/^#define COPYFILE_NOFOLLOW_SRC	/;"	d
COPYFILE_PACK	/usr/include/copyfile.h	/^#define COPYFILE_PACK	/;"	d
COPYFILE_PROGRESS	/usr/include/copyfile.h	/^#define	COPYFILE_PROGRESS	/;"	d
COPYFILE_QUIT	/usr/include/copyfile.h	/^#define	COPYFILE_QUIT	/;"	d
COPYFILE_RECURSE_DIR	/usr/include/copyfile.h	/^#define	COPYFILE_RECURSE_DIR	/;"	d
COPYFILE_RECURSE_DIR_CLEANUP	/usr/include/copyfile.h	/^#define	COPYFILE_RECURSE_DIR_CLEANUP	/;"	d
COPYFILE_RECURSE_ERROR	/usr/include/copyfile.h	/^#define	COPYFILE_RECURSE_ERROR	/;"	d
COPYFILE_RECURSE_FILE	/usr/include/copyfile.h	/^#define	COPYFILE_RECURSE_FILE	/;"	d
COPYFILE_RECURSIVE	/usr/include/copyfile.h	/^#define	COPYFILE_RECURSIVE	/;"	d
COPYFILE_SECURITY	/usr/include/copyfile.h	/^#define COPYFILE_SECURITY /;"	d
COPYFILE_SKIP	/usr/include/copyfile.h	/^#define	COPYFILE_SKIP	/;"	d
COPYFILE_START	/usr/include/copyfile.h	/^#define	COPYFILE_START	/;"	d
COPYFILE_STAT	/usr/include/copyfile.h	/^#define COPYFILE_STAT	/;"	d
COPYFILE_STATE_COPIED	/usr/include/copyfile.h	/^#define	COPYFILE_STATE_COPIED	/;"	d
COPYFILE_STATE_DST_FD	/usr/include/copyfile.h	/^#define COPYFILE_STATE_DST_FD	/;"	d
COPYFILE_STATE_DST_FILENAME	/usr/include/copyfile.h	/^#define COPYFILE_STATE_DST_FILENAME	/;"	d
COPYFILE_STATE_QUARANTINE	/usr/include/copyfile.h	/^#define COPYFILE_STATE_QUARANTINE	/;"	d
COPYFILE_STATE_SRC_FD	/usr/include/copyfile.h	/^#define COPYFILE_STATE_SRC_FD	/;"	d
COPYFILE_STATE_SRC_FILENAME	/usr/include/copyfile.h	/^#define COPYFILE_STATE_SRC_FILENAME	/;"	d
COPYFILE_STATE_STATUS_CB	/usr/include/copyfile.h	/^#define	COPYFILE_STATE_STATUS_CB	/;"	d
COPYFILE_STATE_STATUS_CTX	/usr/include/copyfile.h	/^#define	COPYFILE_STATE_STATUS_CTX	/;"	d
COPYFILE_UNLINK	/usr/include/copyfile.h	/^#define COPYFILE_UNLINK	/;"	d
COPYFILE_UNPACK	/usr/include/copyfile.h	/^#define COPYFILE_UNPACK	/;"	d
COPYFILE_VERBOSE	/usr/include/copyfile.h	/^#define COPYFILE_VERBOSE	/;"	d
COPYFILE_XATTR	/usr/include/copyfile.h	/^#define COPYFILE_XATTR	/;"	d
CRNCYSTR	/usr/include/langinfo.h	/^#define	CRNCYSTR	/;"	d
CRTIMPORT	/usr/include/tcl.h	/^#           define CRTIMPORT /;"	d
CRTIMPORT	/usr/include/tcl.h	/^#           define CRTIMPORT$/;"	d
CRTIMPORT	/usr/include/tcl.h	/^#       define CRTIMPORT /;"	d
CRTIMPORT	/usr/include/tcl.h	/^#   define CRTIMPORT$/;"	d
CUR	/usr/include/term.h	/^#define CUR /;"	d
CURSES	/usr/include/curses.h	/^#define CURSES /;"	d
CURSES	/usr/include/ncurses.h	/^#define CURSES /;"	d
CURSES_H	/usr/include/curses.h	/^#define CURSES_H /;"	d
CURSES_H	/usr/include/ncurses.h	/^#define CURSES_H /;"	d
C_IRGRP	/usr/include/cpio.h	/^#define	C_IRGRP	/;"	d
C_IROTH	/usr/include/cpio.h	/^#define	C_IROTH	/;"	d
C_IRUSR	/usr/include/cpio.h	/^#define	C_IRUSR	/;"	d
C_ISBLK	/usr/include/cpio.h	/^#define	C_ISBLK	/;"	d
C_ISCHR	/usr/include/cpio.h	/^#define	C_ISCHR	/;"	d
C_ISCTG	/usr/include/cpio.h	/^#define	C_ISCTG	/;"	d
C_ISDIR	/usr/include/cpio.h	/^#define	C_ISDIR	/;"	d
C_ISFIFO	/usr/include/cpio.h	/^#define	C_ISFIFO /;"	d
C_ISGID	/usr/include/cpio.h	/^#define	C_ISGID	/;"	d
C_ISLNK	/usr/include/cpio.h	/^#define	C_ISLNK	/;"	d
C_ISREG	/usr/include/cpio.h	/^#define	C_ISREG	/;"	d
C_ISSOCK	/usr/include/cpio.h	/^#define	C_ISSOCK /;"	d
C_ISUID	/usr/include/cpio.h	/^#define	C_ISUID	/;"	d
C_ISVTX	/usr/include/cpio.h	/^#define	C_ISVTX	/;"	d
C_IWGRP	/usr/include/cpio.h	/^#define	C_IWGRP	/;"	d
C_IWOTH	/usr/include/cpio.h	/^#define	C_IWOTH	/;"	d
C_IWUSR	/usr/include/cpio.h	/^#define	C_IWUSR	/;"	d
C_IXGRP	/usr/include/cpio.h	/^#define	C_IXGRP	/;"	d
C_IXOTH	/usr/include/cpio.h	/^#define	C_IXOTH	/;"	d
C_IXUSR	/usr/include/cpio.h	/^#define	C_IXUSR	/;"	d
ClientData	/usr/include/fcgios.h	/^    typedef int *ClientData;$/;"	t
ClientData	/usr/include/fcgios.h	/^    typedef void *ClientData;$/;"	t
ClientData	/usr/include/tcl.h	/^	typedef int *ClientData;$/;"	t
ClientData	/usr/include/tcl.h	/^	typedef void *ClientData;$/;"	t
CompileTimeAssertionChecks_DNS_SD	/usr/include/dns_sd.h	/^struct CompileTimeAssertionChecks_DNS_SD$/;"	s
CompileTimeAssertionChecks_DNS_SD::assert0	/usr/include/dns_sd.h	/^    char assert0[(sizeof(union _TXTRecordRef_t) == 16) ? 1 : -1];$/;"	m	struct:CompileTimeAssertionChecks_DNS_SD	access:public
ConfigDSN	/usr/include/odbcinst.h	/^BOOL INSTAPI ConfigDSN ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszAttributes)
ConfigDSNW	/usr/include/odbcinst.h	/^BOOL INSTAPI ConfigDSNW ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCWSTR lpszDriver, LPCWSTR lpszAttributes)
ConfigDriver	/usr/include/odbcinst.h	/^BOOL INSTAPI ConfigDriver ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszArgs, LPSTR lpszMsg, WORD cbMsgMax, WORD * pcbMsgOut)
ConfigDriverW	/usr/include/odbcinst.h	/^BOOL INSTAPI ConfigDriverW ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCWSTR lpszDriver, LPCWSTR lpszArgs, LPWSTR lpszMsg, WORD cbMsgMax, WORD * pcbMsgOut)
ConfigTranslator	/usr/include/odbcinst.h	/^BOOL INSTAPI ConfigTranslator (HWND hwndParent,$/;"	p	signature:(HWND hwndParent, DWORD * pvOption)
DATE_STRUCT	/usr/include/sqltypes.h	/^DATE_STRUCT;$/;"	t	typeref:struct:tagDATE_STRUCT
DAYSPERLYEAR	/usr/include/tzfile.h	/^#define DAYSPERLYEAR	/;"	d
DAYSPERNYEAR	/usr/include/tzfile.h	/^#define DAYSPERNYEAR	/;"	d
DAYSPERWEEK	/usr/include/tzfile.h	/^#define DAYSPERWEEK	/;"	d
DAYS_PER_LYEAR	/usr/include/tzfile.h	/^#define DAYS_PER_LYEAR	/;"	d
DAYS_PER_NYEAR	/usr/include/tzfile.h	/^#define DAYS_PER_NYEAR	/;"	d
DAYS_PER_WEEK	/usr/include/tzfile.h	/^#define DAYS_PER_WEEK	/;"	d
DAY_1	/usr/include/langinfo.h	/^#define	DAY_1	/;"	d
DAY_2	/usr/include/langinfo.h	/^#define	DAY_2	/;"	d
DAY_3	/usr/include/langinfo.h	/^#define	DAY_3	/;"	d
DAY_4	/usr/include/langinfo.h	/^#define	DAY_4	/;"	d
DAY_5	/usr/include/langinfo.h	/^#define	DAY_5	/;"	d
DAY_6	/usr/include/langinfo.h	/^#define	DAY_6	/;"	d
DAY_7	/usr/include/langinfo.h	/^#define	DAY_7	/;"	d
DB	/usr/include/db.h	/^} DB;$/;"	t	typeref:struct:__db
DBDIRS	/usr/include/tic.h	/^} DBDIRS;$/;"	t	typeref:enum:__anon122
DBL_DIG	/usr/include/float.h	/^#define DBL_DIG	/;"	d
DBL_DIG	/usr/include/float.h	/^#undef DBL_DIG$/;"	d
DBL_EPSILON	/usr/include/float.h	/^#define DBL_EPSILON	/;"	d
DBL_EPSILON	/usr/include/float.h	/^#undef DBL_EPSILON$/;"	d
DBL_MANT_DIG	/usr/include/float.h	/^#define DBL_MANT_DIG	/;"	d
DBL_MANT_DIG	/usr/include/float.h	/^#undef DBL_MANT_DIG$/;"	d
DBL_MAX	/usr/include/float.h	/^#define DBL_MAX	/;"	d
DBL_MAX	/usr/include/float.h	/^#undef DBL_MAX$/;"	d
DBL_MAX_10_EXP	/usr/include/float.h	/^#define DBL_MAX_10_EXP	/;"	d
DBL_MAX_10_EXP	/usr/include/float.h	/^#undef DBL_MAX_10_EXP$/;"	d
DBL_MAX_EXP	/usr/include/float.h	/^#define DBL_MAX_EXP	/;"	d
DBL_MAX_EXP	/usr/include/float.h	/^#undef DBL_MAX_EXP$/;"	d
DBL_MIN	/usr/include/float.h	/^#define DBL_MIN	/;"	d
DBL_MIN	/usr/include/float.h	/^#undef DBL_MIN$/;"	d
DBL_MIN_10_EXP	/usr/include/float.h	/^#define DBL_MIN_10_EXP	/;"	d
DBL_MIN_10_EXP	/usr/include/float.h	/^#undef DBL_MIN_10_EXP$/;"	d
DBL_MIN_EXP	/usr/include/float.h	/^#define DBL_MIN_EXP	/;"	d
DBL_MIN_EXP	/usr/include/float.h	/^#undef DBL_MIN_EXP$/;"	d
DBM	/usr/include/ndbm.h	/^} DBM;$/;"	t	typeref:struct:__anon88
DBM_INSERT	/usr/include/ndbm.h	/^#define DBM_INSERT /;"	d
DBM_RDONLY	/usr/include/ndbm.h	/^#define DBM_RDONLY	/;"	d
DBM_REPLACE	/usr/include/ndbm.h	/^#define DBM_REPLACE /;"	d
DBM_SUFFIX	/usr/include/ndbm.h	/^#define	DBM_SUFFIX	/;"	d
DBT	/usr/include/db.h	/^} DBT;$/;"	t	typeref:struct:__anon11
DBTYPE	/usr/include/db.h	/^typedef enum { DB_BTREE, DB_HASH, DB_RECNO } DBTYPE;$/;"	t	typeref:enum:__anon12
DB_BTREE	/usr/include/db.h	/^typedef enum { DB_BTREE, DB_HASH, DB_RECNO } DBTYPE;$/;"	e	enum:__anon12
DB_HASH	/usr/include/db.h	/^typedef enum { DB_BTREE, DB_HASH, DB_RECNO } DBTYPE;$/;"	e	enum:__anon12
DB_LOCK	/usr/include/db.h	/^#define	DB_LOCK	/;"	d
DB_RECNO	/usr/include/db.h	/^typedef enum { DB_BTREE, DB_HASH, DB_RECNO } DBTYPE;$/;"	e	enum:__anon12
DB_SHMEM	/usr/include/db.h	/^#define	DB_SHMEM	/;"	d
DB_TXN	/usr/include/db.h	/^#define	DB_TXN	/;"	d
DEAD_PROCESS	/usr/include/utmpx.h	/^#define DEAD_PROCESS	/;"	d
DEBUG	/usr/include/tic.h	/^#define DEBUG(/;"	d
DEBUG_ASSERT_COMPONENT_NAME_STRING	/usr/include/AssertMacros.h	/^    #define DEBUG_ASSERT_COMPONENT_NAME_STRING /;"	d
DEBUG_ASSERT_MESSAGE	/usr/include/AssertMacros.h	/^      #define DEBUG_ASSERT_MESSAGE(/;"	d
DEBUG_ASSERT_PRODUCTION_CODE	/usr/include/AssertMacros.h	/^   #define DEBUG_ASSERT_PRODUCTION_CODE /;"	d
DEBUG_LEVEL	/usr/include/tic.h	/^#define DEBUG_LEVEL(/;"	d
DECIMAL_DIG	/usr/include/float.h	/^#define DECIMAL_DIG	/;"	d
DECIMAL_DIG	/usr/include/float.h	/^#undef DECIMAL_DIG$/;"	d
DEFAULT_FILEDSNPATH	/usr/include/odbcinst.h	/^#      define DEFAULT_FILEDSNPATH /;"	d
DEFAULT_FILEDSNPATH	/usr/include/odbcinst.h	/^#    define DEFAULT_FILEDSNPATH	/;"	d
DEPRECATED_ATTRIBUTE	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_ATTRIBUTE /;"	d
DEPRECATED_ATTRIBUTE	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_ATTRIBUTE$/;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER	/usr/include/AvailabilityMacros.h	/^#define DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER$/;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER$/;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER$/;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER$/;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER$/;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER /;"	d
DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER	/usr/include/AvailabilityMacros.h	/^    #define DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER$/;"	d
DIGIT	/usr/include/tclTomMath.h	/^#define DIGIT(/;"	d
DIGIT_BIT	/usr/include/tclTomMath.h	/^   #define DIGIT_BIT /;"	d
DIR	/usr/include/dirent.h	/^} DIR;$/;"	t	typeref:struct:__anon16
DIRBLKSIZ	/usr/include/dirent.h	/^#define	DIRBLKSIZ	/;"	d
DIRTYPE	/usr/include/tar.h	/^#define	DIRTYPE	/;"	d
DISKTAB	/usr/include/disktab.h	/^#define	DISKTAB	/;"	d
DLLAPI	/usr/include/fcgi_stdio.h	/^#define DLLAPI /;"	d
DLLAPI	/usr/include/fcgi_stdio.h	/^#define DLLAPI$/;"	d
DLLAPI	/usr/include/fcgiapp.h	/^#define DLLAPI /;"	d
DLLAPI	/usr/include/fcgiapp.h	/^#define DLLAPI$/;"	d
DLLAPI	/usr/include/fcgio.h	/^#define DLLAPI /;"	d
DLLAPI	/usr/include/fcgio.h	/^#define DLLAPI$/;"	d
DLLAPI	/usr/include/fcgios.h	/^#define DLLAPI /;"	d
DLLAPI	/usr/include/fcgios.h	/^#define DLLAPI$/;"	d
DLLEXPORT	/usr/include/tcl.h	/^#       define DLLEXPORT /;"	d
DLLEXPORT	/usr/include/tcl.h	/^#       define DLLEXPORT$/;"	d
DLLIMPORT	/usr/include/tcl.h	/^#       define DLLIMPORT /;"	d
DLLIMPORT	/usr/include/tcl.h	/^#       define DLLIMPORT$/;"	d
DLLIMPORT	/usr/include/tcl.h	/^#   define DLLIMPORT$/;"	d
DNSNULL	/usr/include/dns_util.h	/^		dns_raw_resource_record_t *DNSNULL;$/;"	m	union:__anon41::__anon42	access:public
DNSRecordRef	/usr/include/dns_sd.h	/^typedef struct _DNSRecordRef_t *DNSRecordRef;$/;"	t	typeref:struct:_DNSRecordRef_t
DNSSD_API	/usr/include/dns_sd.h	/^#define DNSSD_API /;"	d
DNSSD_API	/usr/include/dns_sd.h	/^#define DNSSD_API$/;"	d
DNSServiceAddRecord	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceAddRecord$/;"	p	signature:( DNSServiceRef sdRef, DNSRecordRef *RecordRef, DNSServiceFlags flags, uint16_t rrtype, uint16_t rdlen, const void *rdata, uint32_t ttl )
DNSServiceBrowse	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceBrowse$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *regtype, const char *domain, DNSServiceBrowseReply callBack, void *context )
DNSServiceBrowseReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceBrowseReply)$/;"	t
DNSServiceConstructFullName	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceConstructFullName$/;"	p	signature:( char *fullName, const char *service, const char *regtype, const char *domain )
DNSServiceCreateConnection	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceCreateConnection(DNSServiceRef *sdRef);$/;"	p	signature:(DNSServiceRef *sdRef)
DNSServiceDomainEnumReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceDomainEnumReply)$/;"	t
DNSServiceEnumerateDomains	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceEnumerateDomains$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceDomainEnumReply callBack, void *context )
DNSServiceErrorType	/usr/include/dns_sd.h	/^typedef int32_t  DNSServiceErrorType;$/;"	t
DNSServiceFlags	/usr/include/dns_sd.h	/^typedef uint32_t DNSServiceFlags;$/;"	t
DNSServiceGetAddrInfo	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceGetAddrInfo$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceProtocol protocol, const char *hostname, DNSServiceGetAddrInfoReply callBack, void *context )
DNSServiceGetAddrInfoReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceGetAddrInfoReply)$/;"	t
DNSServiceGetProperty	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceGetProperty$/;"	p	signature:( const char *property, void *result, uint32_t *size )
DNSServiceNATPortMappingCreate	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceNATPortMappingCreate$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceProtocol protocol, uint16_t internalPort, uint16_t externalPort, uint32_t ttl, DNSServiceNATPortMappingReply callBack, void *context )
DNSServiceNATPortMappingReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceNATPortMappingReply)$/;"	t
DNSServiceProcessResult	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceProcessResult(DNSServiceRef sdRef);$/;"	p	signature:(DNSServiceRef sdRef)
DNSServiceProtocol	/usr/include/dns_sd.h	/^typedef uint32_t DNSServiceProtocol;$/;"	t
DNSServiceQueryRecord	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceQueryRecord$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *fullname, uint16_t rrtype, uint16_t rrclass, DNSServiceQueryRecordReply callBack, void *context )
DNSServiceQueryRecordReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceQueryRecordReply)$/;"	t
DNSServiceReconfirmRecord	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceReconfirmRecord$/;"	p	signature:( DNSServiceFlags flags, uint32_t interfaceIndex, const char *fullname, uint16_t rrtype, uint16_t rrclass, uint16_t rdlen, const void *rdata )
DNSServiceRef	/usr/include/dns_sd.h	/^typedef struct _DNSServiceRef_t *DNSServiceRef;$/;"	t	typeref:struct:_DNSServiceRef_t
DNSServiceRefDeallocate	/usr/include/dns_sd.h	/^void DNSSD_API DNSServiceRefDeallocate(DNSServiceRef sdRef);$/;"	p	signature:(DNSServiceRef sdRef)
DNSServiceRefSockFD	/usr/include/dns_sd.h	/^int DNSSD_API DNSServiceRefSockFD(DNSServiceRef sdRef);$/;"	p	signature:(DNSServiceRef sdRef)
DNSServiceRegister	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceRegister$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *name, const char *regtype, const char *domain, const char *host, uint16_t port, uint16_t txtLen, const void *txtRecord, DNSServiceRegisterReply callBack, void *context )
DNSServiceRegisterRecord	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceRegisterRecord$/;"	p	signature:( DNSServiceRef sdRef, DNSRecordRef *RecordRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *fullname, uint16_t rrtype, uint16_t rrclass, uint16_t rdlen, const void *rdata, uint32_t ttl, DNSServiceRegisterRecordReply callBack, void *context )
DNSServiceRegisterRecordReply	/usr/include/dns_sd.h	/^ typedef void (DNSSD_API *DNSServiceRegisterRecordReply)$/;"	t
DNSServiceRegisterReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceRegisterReply)$/;"	t
DNSServiceRemoveRecord	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceRemoveRecord$/;"	p	signature:( DNSServiceRef sdRef, DNSRecordRef RecordRef, DNSServiceFlags flags )
DNSServiceResolve	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceResolve$/;"	p	signature:( DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *name, const char *regtype, const char *domain, DNSServiceResolveReply callBack, void *context )
DNSServiceResolveReply	/usr/include/dns_sd.h	/^typedef void (DNSSD_API *DNSServiceResolveReply)$/;"	t
DNSServiceSetDefaultDomainForUser	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceSetDefaultDomainForUser$/;"	p	signature:( DNSServiceFlags flags, const char *domain )
DNSServiceUpdateRecord	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API DNSServiceUpdateRecord$/;"	p	signature:( DNSServiceRef sdRef, DNSRecordRef RecordRef, DNSServiceFlags flags, uint16_t rdlen, const void *rdata, uint32_t ttl )
DNS_PRINT_AA	/usr/include/dns_util.h	/^#define DNS_PRINT_AA /;"	d
DNS_PRINT_ADDITIONAL	/usr/include/dns_util.h	/^#define DNS_PRINT_ADDITIONAL /;"	d
DNS_PRINT_ANSWER	/usr/include/dns_util.h	/^#define DNS_PRINT_ANSWER /;"	d
DNS_PRINT_AUTHORITY	/usr/include/dns_util.h	/^#define DNS_PRINT_AUTHORITY /;"	d
DNS_PRINT_OPCODE	/usr/include/dns_util.h	/^#define DNS_PRINT_OPCODE /;"	d
DNS_PRINT_PR	/usr/include/dns_util.h	/^#define DNS_PRINT_PR /;"	d
DNS_PRINT_QR	/usr/include/dns_util.h	/^#define DNS_PRINT_QR /;"	d
DNS_PRINT_QUESTION	/usr/include/dns_util.h	/^#define DNS_PRINT_QUESTION /;"	d
DNS_PRINT_RA	/usr/include/dns_util.h	/^#define DNS_PRINT_RA /;"	d
DNS_PRINT_RCODE	/usr/include/dns_util.h	/^#define DNS_PRINT_RCODE /;"	d
DNS_PRINT_RD	/usr/include/dns_util.h	/^#define DNS_PRINT_RD /;"	d
DNS_PRINT_SERVER	/usr/include/dns_util.h	/^#define DNS_PRINT_SERVER /;"	d
DNS_PRINT_TC	/usr/include/dns_util.h	/^#define DNS_PRINT_TC /;"	d
DNS_PRINT_XID	/usr/include/dns_util.h	/^#define DNS_PRINT_XID /;"	d
DNS_STATUS_BAD_HANDLE	/usr/include/dns_util.h	/^#define DNS_STATUS_BAD_HANDLE	/;"	d
DNS_STATUS_CONNECTION_FAILED	/usr/include/dns_util.h	/^#define DNS_STATUS_CONNECTION_FAILED	/;"	d
DNS_STATUS_MALFORMED_QUERY	/usr/include/dns_util.h	/^#define DNS_STATUS_MALFORMED_QUERY	/;"	d
DNS_STATUS_OK	/usr/include/dns_util.h	/^#define DNS_STATUS_OK	/;"	d
DNS_STATUS_RECEIVE_FAILED	/usr/include/dns_util.h	/^#define DNS_STATUS_RECEIVE_FAILED	/;"	d
DNS_STATUS_SEND_FAILED	/usr/include/dns_util.h	/^#define DNS_STATUS_SEND_FAILED	/;"	d
DNS_STATUS_TIMEOUT	/usr/include/dns_util.h	/^#define DNS_STATUS_TIMEOUT	/;"	d
DNS_STATUS_WRONG_QUESTION	/usr/include/dns_util.h	/^#define DNS_STATUS_WRONG_QUESTION	/;"	d
DNS_STATUS_WRONG_SERVER	/usr/include/dns_util.h	/^#define DNS_STATUS_WRONG_SERVER	/;"	d
DNS_STATUS_WRONG_XID	/usr/include/dns_util.h	/^#define DNS_STATUS_WRONG_XID	/;"	d
DTF_HIDEW	/usr/include/dirent.h	/^#define DTF_HIDEW	/;"	d
DTF_NODUP	/usr/include/dirent.h	/^#define DTF_NODUP	/;"	d
DTF_REWIND	/usr/include/dirent.h	/^#define DTF_REWIND	/;"	d
DTRACEDROP_AGGREGATION	/usr/include/dtrace.h	/^	DTRACEDROP_AGGREGATION,			\/* drop to aggregation buffer *\/$/;"	e	enum:__anon47
DTRACEDROP_DBLERROR	/usr/include/dtrace.h	/^	DTRACEDROP_DBLERROR			\/* error in ERROR probe *\/$/;"	e	enum:__anon47
DTRACEDROP_DYNAMIC	/usr/include/dtrace.h	/^	DTRACEDROP_DYNAMIC,			\/* dynamic drop *\/$/;"	e	enum:__anon47
DTRACEDROP_DYNDIRTY	/usr/include/dtrace.h	/^	DTRACEDROP_DYNDIRTY,			\/* dyn drop due to dirty *\/$/;"	e	enum:__anon47
DTRACEDROP_DYNRINSE	/usr/include/dtrace.h	/^	DTRACEDROP_DYNRINSE,			\/* dyn drop due to rinsing *\/$/;"	e	enum:__anon47
DTRACEDROP_PRINCIPAL	/usr/include/dtrace.h	/^	DTRACEDROP_PRINCIPAL,			\/* drop to principal buffer *\/$/;"	e	enum:__anon47
DTRACEDROP_SPEC	/usr/include/dtrace.h	/^	DTRACEDROP_SPEC,			\/* speculative drop *\/$/;"	e	enum:__anon47
DTRACEDROP_SPECBUSY	/usr/include/dtrace.h	/^	DTRACEDROP_SPECBUSY,			\/* spec drop due to busy *\/$/;"	e	enum:__anon47
DTRACEDROP_SPECUNAVAIL	/usr/include/dtrace.h	/^	DTRACEDROP_SPECUNAVAIL,			\/* spec drop due to unavail *\/$/;"	e	enum:__anon47
DTRACEDROP_STKSTROVERFLOW	/usr/include/dtrace.h	/^	DTRACEDROP_STKSTROVERFLOW,		\/* stack string tab overflow *\/$/;"	e	enum:__anon47
DTRACEFLOW_ENTRY	/usr/include/dtrace.h	/^	DTRACEFLOW_ENTRY,$/;"	e	enum:__anon45
DTRACEFLOW_NONE	/usr/include/dtrace.h	/^	DTRACEFLOW_NONE$/;"	e	enum:__anon45
DTRACEFLOW_RETURN	/usr/include/dtrace.h	/^	DTRACEFLOW_RETURN,$/;"	e	enum:__anon45
DTRACE_AGD_PRINTED	/usr/include/dtrace.h	/^#define	DTRACE_AGD_PRINTED	/;"	d
DTRACE_AGGWALK_ABORT	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_ABORT	/;"	d
DTRACE_AGGWALK_CLEAR	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_CLEAR	/;"	d
DTRACE_AGGWALK_DENORMALIZE	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_DENORMALIZE	/;"	d
DTRACE_AGGWALK_ERROR	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_ERROR	/;"	d
DTRACE_AGGWALK_NEXT	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_NEXT	/;"	d
DTRACE_AGGWALK_NORMALIZE	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_NORMALIZE	/;"	d
DTRACE_AGGWALK_REMOVE	/usr/include/dtrace.h	/^#define	DTRACE_AGGWALK_REMOVE	/;"	d
DTRACE_ATTR2STR_MAX	/usr/include/dtrace.h	/^#define	DTRACE_ATTR2STR_MAX	/;"	d
DTRACE_A_ANONYMOUS	/usr/include/dtrace.h	/^#define	DTRACE_A_ANONYMOUS	/;"	d
DTRACE_A_KEEPDELTA	/usr/include/dtrace.h	/^#define	DTRACE_A_KEEPDELTA	/;"	d
DTRACE_A_PERCPU	/usr/include/dtrace.h	/^#define	DTRACE_A_PERCPU	/;"	d
DTRACE_BUFDATA_AGGFORMAT	/usr/include/dtrace.h	/^#define	DTRACE_BUFDATA_AGGFORMAT	/;"	d
DTRACE_BUFDATA_AGGKEY	/usr/include/dtrace.h	/^#define	DTRACE_BUFDATA_AGGKEY	/;"	d
DTRACE_BUFDATA_AGGLAST	/usr/include/dtrace.h	/^#define	DTRACE_BUFDATA_AGGLAST	/;"	d
DTRACE_BUFDATA_AGGVAL	/usr/include/dtrace.h	/^#define	DTRACE_BUFDATA_AGGVAL	/;"	d
DTRACE_CONSUME_ABORT	/usr/include/dtrace.h	/^#define	DTRACE_CONSUME_ABORT	/;"	d
DTRACE_CONSUME_ERROR	/usr/include/dtrace.h	/^#define	DTRACE_CONSUME_ERROR	/;"	d
DTRACE_CONSUME_NEXT	/usr/include/dtrace.h	/^#define	DTRACE_CONSUME_NEXT	/;"	d
DTRACE_CONSUME_THIS	/usr/include/dtrace.h	/^#define	DTRACE_CONSUME_THIS	/;"	d
DTRACE_C_ARGREF	/usr/include/dtrace.h	/^#define	DTRACE_C_ARGREF	/;"	d
DTRACE_C_CPP	/usr/include/dtrace.h	/^#define	DTRACE_C_CPP	/;"	d
DTRACE_C_CTL	/usr/include/dtrace.h	/^#define	DTRACE_C_CTL	/;"	d
DTRACE_C_DEFARG	/usr/include/dtrace.h	/^#define	DTRACE_C_DEFARG	/;"	d
DTRACE_C_DIFV	/usr/include/dtrace.h	/^#define	DTRACE_C_DIFV	/;"	d
DTRACE_C_EATTR	/usr/include/dtrace.h	/^#define	DTRACE_C_EATTR	/;"	d
DTRACE_C_EMPTY	/usr/include/dtrace.h	/^#define	DTRACE_C_EMPTY	/;"	d
DTRACE_C_ETAGS	/usr/include/dtrace.h	/^#define	DTRACE_C_ETAGS	/;"	d
DTRACE_C_KNODEF	/usr/include/dtrace.h	/^#define	DTRACE_C_KNODEF	/;"	d
DTRACE_C_MASK	/usr/include/dtrace.h	/^#define	DTRACE_C_MASK	/;"	d
DTRACE_C_NOLIBS	/usr/include/dtrace.h	/^#define	DTRACE_C_NOLIBS	/;"	d
DTRACE_C_PSPEC	/usr/include/dtrace.h	/^#define	DTRACE_C_PSPEC	/;"	d
DTRACE_C_UNODEF	/usr/include/dtrace.h	/^#define	DTRACE_C_UNODEF	/;"	d
DTRACE_C_ZDEFS	/usr/include/dtrace.h	/^#define	DTRACE_C_ZDEFS	/;"	d
DTRACE_DESC2STR_MAX	/usr/include/dtrace.h	/^#define	DTRACE_DESC2STR_MAX	/;"	d
DTRACE_D_MASK	/usr/include/dtrace.h	/^#define	DTRACE_D_MASK	/;"	d
DTRACE_D_PROBES	/usr/include/dtrace.h	/^#define	DTRACE_D_PROBES	/;"	d
DTRACE_D_STRIP	/usr/include/dtrace.h	/^#define	DTRACE_D_STRIP	/;"	d
DTRACE_HANDLE_ABORT	/usr/include/dtrace.h	/^#define	DTRACE_HANDLE_ABORT	/;"	d
DTRACE_HANDLE_OK	/usr/include/dtrace.h	/^#define	DTRACE_HANDLE_OK	/;"	d
DTRACE_OBJ_CDEFS	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_CDEFS /;"	d
DTRACE_OBJ_DDEFS	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_DDEFS /;"	d
DTRACE_OBJ_EVERY	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_EVERY /;"	d
DTRACE_OBJ_EXEC	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_EXEC	/;"	d
DTRACE_OBJ_F_KERNEL	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_F_KERNEL	/;"	d
DTRACE_OBJ_F_PRIMARY	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_F_PRIMARY	/;"	d
DTRACE_OBJ_KMODS	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_KMODS /;"	d
DTRACE_OBJ_RTLD	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_RTLD	/;"	d
DTRACE_OBJ_UMODS	/usr/include/dtrace.h	/^#define	DTRACE_OBJ_UMODS /;"	d
DTRACE_O_ILP32	/usr/include/dtrace.h	/^#define	DTRACE_O_ILP32	/;"	d
DTRACE_O_LP64	/usr/include/dtrace.h	/^#define	DTRACE_O_LP64	/;"	d
DTRACE_O_MASK	/usr/include/dtrace.h	/^#define	DTRACE_O_MASK	/;"	d
DTRACE_O_NODEV	/usr/include/dtrace.h	/^#define	DTRACE_O_NODEV	/;"	d
DTRACE_O_NOSYS	/usr/include/dtrace.h	/^#define	DTRACE_O_NOSYS	/;"	d
DTRACE_STATUS_EXITED	/usr/include/dtrace.h	/^#define	DTRACE_STATUS_EXITED	/;"	d
DTRACE_STATUS_FILLED	/usr/include/dtrace.h	/^#define	DTRACE_STATUS_FILLED	/;"	d
DTRACE_STATUS_NONE	/usr/include/dtrace.h	/^#define	DTRACE_STATUS_NONE	/;"	d
DTRACE_STATUS_OKAY	/usr/include/dtrace.h	/^#define	DTRACE_STATUS_OKAY	/;"	d
DTRACE_STATUS_STOPPED	/usr/include/dtrace.h	/^#define	DTRACE_STATUS_STOPPED	/;"	d
DTRACE_VERSION	/usr/include/dtrace.h	/^#define	DTRACE_VERSION	/;"	d
DTRACE_WORKSTATUS_DONE	/usr/include/dtrace.h	/^	DTRACE_WORKSTATUS_DONE$/;"	e	enum:__anon46
DTRACE_WORKSTATUS_ERROR	/usr/include/dtrace.h	/^	DTRACE_WORKSTATUS_ERROR = -1,$/;"	e	enum:__anon46
DTRACE_WORKSTATUS_OKAY	/usr/include/dtrace.h	/^	DTRACE_WORKSTATUS_OKAY,$/;"	e	enum:__anon46
DWORD	/usr/include/iodbcunix.h	/^typedef unsigned int		DWORD;$/;"	t
D_FMT	/usr/include/langinfo.h	/^#define	D_FMT	/;"	d
D_MD_ORDER	/usr/include/langinfo.h	/^#define	D_MD_ORDER	/;"	d
D_T_FMT	/usr/include/langinfo.h	/^#define	D_T_FMT	/;"	d
Data1	/usr/include/sqltypes.h	/^    unsigned int	Data1;$/;"	m	struct:tagSQLGUID	access:public
Data2	/usr/include/sqltypes.h	/^    unsigned short	Data2;$/;"	m	struct:tagSQLGUID	access:public
Data3	/usr/include/sqltypes.h	/^    unsigned short	Data3;$/;"	m	struct:tagSQLGUID	access:public
Data4	/usr/include/sqltypes.h	/^    unsigned char	Data4[8];	\/* BYTE *\/$/;"	m	struct:tagSQLGUID	access:public
DeactivateNotify	/usr/include/tk.h	/^#define DeactivateNotify /;"	d
DictionaryInfo	/usr/include/mecab.h	/^  typedef struct mecab_dictionary_info_t DictionaryInfo;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_dictionary_info_t
Dl_info	/usr/include/dlfcn.h	/^} Dl_info;$/;"	t	typeref:struct:dl_info
EAI_ADDRFAMILY	/usr/include/netdb.h	/^#define	EAI_ADDRFAMILY	/;"	d
EAI_AGAIN	/usr/include/netdb.h	/^#define	EAI_AGAIN	/;"	d
EAI_BADFLAGS	/usr/include/netdb.h	/^#define	EAI_BADFLAGS	/;"	d
EAI_BADHINTS	/usr/include/netdb.h	/^#define	EAI_BADHINTS	/;"	d
EAI_FAIL	/usr/include/netdb.h	/^#define	EAI_FAIL	/;"	d
EAI_FAMILY	/usr/include/netdb.h	/^#define	EAI_FAMILY	/;"	d
EAI_MAX	/usr/include/netdb.h	/^#define	EAI_MAX	/;"	d
EAI_MEMORY	/usr/include/netdb.h	/^#define	EAI_MEMORY	/;"	d
EAI_NODATA	/usr/include/netdb.h	/^#define	EAI_NODATA	/;"	d
EAI_NONAME	/usr/include/netdb.h	/^#define	EAI_NONAME	/;"	d
EAI_OVERFLOW	/usr/include/netdb.h	/^#define	EAI_OVERFLOW	/;"	d
EAI_PROTOCOL	/usr/include/netdb.h	/^#define	EAI_PROTOCOL	/;"	d
EAI_SERVICE	/usr/include/netdb.h	/^#define	EAI_SERVICE	/;"	d
EAI_SOCKTYPE	/usr/include/netdb.h	/^#define	EAI_SOCKTYPE	/;"	d
EAI_SYSTEM	/usr/include/netdb.h	/^#define	EAI_SYSTEM	/;"	d
EL_ADDFN	/usr/include/histedit.h	/^#define	EL_ADDFN	/;"	d
EL_BIND	/usr/include/histedit.h	/^#define	EL_BIND	/;"	d
EL_BUILTIN_GETCFN	/usr/include/histedit.h	/^#define	EL_BUILTIN_GETCFN	/;"	d
EL_CLIENTDATA	/usr/include/histedit.h	/^#define	EL_CLIENTDATA	/;"	d
EL_ECHOTC	/usr/include/histedit.h	/^#define	EL_ECHOTC	/;"	d
EL_EDITMODE	/usr/include/histedit.h	/^#define	EL_EDITMODE	/;"	d
EL_EDITOR	/usr/include/histedit.h	/^#define	EL_EDITOR	/;"	d
EL_GETCFN	/usr/include/histedit.h	/^#define	EL_GETCFN	/;"	d
EL_GETFP	/usr/include/histedit.h	/^#define	EL_GETFP	/;"	d
EL_GETTC	/usr/include/histedit.h	/^#define	EL_GETTC	/;"	d
EL_HIST	/usr/include/histedit.h	/^#define	EL_HIST	/;"	d
EL_PREP_TERM	/usr/include/histedit.h	/^#define	EL_PREP_TERM /;"	d
EL_PROMPT	/usr/include/histedit.h	/^#define	EL_PROMPT	/;"	d
EL_REFRESH	/usr/include/histedit.h	/^#define EL_REFRESH	/;"	d
EL_RPROMPT	/usr/include/histedit.h	/^#define	EL_RPROMPT	/;"	d
EL_SETFP	/usr/include/histedit.h	/^#define	EL_SETFP	/;"	d
EL_SETTC	/usr/include/histedit.h	/^#define	EL_SETTC	/;"	d
EL_SETTY	/usr/include/histedit.h	/^#define	EL_SETTY	/;"	d
EL_SIGNAL	/usr/include/histedit.h	/^#define	EL_SIGNAL	/;"	d
EL_TELLTC	/usr/include/histedit.h	/^#define	EL_TELLTC	/;"	d
EL_TERMINAL	/usr/include/histedit.h	/^#define	EL_TERMINAL	/;"	d
EL_UNBUFFERED	/usr/include/histedit.h	/^#define	EL_UNBUFFERED	/;"	d
EMPTY	/usr/include/utmpx.h	/^#define EMPTY	/;"	d
ENTER	/usr/include/search.h	/^	FIND, ENTER$/;"	e	enum:__anon105
ENTRY	/usr/include/search.h	/^} ENTRY;$/;"	t	typeref:struct:entry
ENTRY	/usr/include/term_entry.h	/^ENTRY;$/;"	t	typeref:struct:entry
EOF	/usr/include/stdio.h	/^#define	EOF	/;"	d
EPOCH_WDAY	/usr/include/tzfile.h	/^#define EPOCH_WDAY	/;"	d
EPOCH_YEAR	/usr/include/tzfile.h	/^#define EPOCH_YEAR	/;"	d
ERA	/usr/include/langinfo.h	/^#define	ERA	/;"	d
ERA_D_FMT	/usr/include/langinfo.h	/^#define	ERA_D_FMT	/;"	d
ERA_D_T_FMT	/usr/include/langinfo.h	/^#define	ERA_D_T_FMT	/;"	d
ERA_T_FMT	/usr/include/langinfo.h	/^#define	ERA_T_FMT	/;"	d
ERR	/usr/include/curses.h	/^#define ERR /;"	d
ERR	/usr/include/curses.h	/^#undef	ERR$/;"	d
ERR	/usr/include/ncurses.h	/^#define ERR /;"	d
ERR	/usr/include/ncurses.h	/^#undef	ERR$/;"	d
ERROR_TABLE_BASE_prof	/usr/include/profile.h	/^#define ERROR_TABLE_BASE_prof /;"	d
ETI_MENU	/usr/include/menu.h	/^#define ETI_MENU$/;"	d
EXIT_FAILURE	/usr/include/stdlib.h	/^#define	EXIT_FAILURE	/;"	d
EXIT_SUCCESS	/usr/include/stdlib.h	/^#define	EXIT_SUCCESS	/;"	d
EXPORT	/usr/include/iodbcunix.h	/^#define EXPORT$/;"	d
EXPORT	/usr/include/odbcinst.h	/^#define EXPORT$/;"	d
EXPORT	/usr/include/sqltypes.h	/^#define EXPORT$/;"	d
EXTERN	/usr/include/tcl.h	/^#   define EXTERN /;"	d
EXTERN	/usr/include/tcl.h	/^#   undef EXTERN$/;"	d
EXT_NAMES	/usr/include/term_entry.h	/^#define EXT_NAMES(/;"	d
EX_CANTCREAT	/usr/include/sysexits.h	/^#define EX_CANTCREAT	/;"	d
EX_CONFIG	/usr/include/sysexits.h	/^#define EX_CONFIG	/;"	d
EX_DATAERR	/usr/include/sysexits.h	/^#define EX_DATAERR	/;"	d
EX_IOERR	/usr/include/sysexits.h	/^#define EX_IOERR	/;"	d
EX_NOHOST	/usr/include/sysexits.h	/^#define EX_NOHOST	/;"	d
EX_NOINPUT	/usr/include/sysexits.h	/^#define EX_NOINPUT	/;"	d
EX_NOPERM	/usr/include/sysexits.h	/^#define EX_NOPERM	/;"	d
EX_NOUSER	/usr/include/sysexits.h	/^#define EX_NOUSER	/;"	d
EX_OK	/usr/include/sysexits.h	/^#define EX_OK	/;"	d
EX_OSERR	/usr/include/sysexits.h	/^#define EX_OSERR	/;"	d
EX_OSFILE	/usr/include/sysexits.h	/^#define EX_OSFILE	/;"	d
EX_PROTOCOL	/usr/include/sysexits.h	/^#define EX_PROTOCOL	/;"	d
EX_SOFTWARE	/usr/include/sysexits.h	/^#define EX_SOFTWARE	/;"	d
EX_TEMPFAIL	/usr/include/sysexits.h	/^#define EX_TEMPFAIL	/;"	d
EX_UNAVAILABLE	/usr/include/sysexits.h	/^#define EX_UNAVAILABLE	/;"	d
EX_USAGE	/usr/include/sysexits.h	/^#define EX_USAGE	/;"	d
EX__BASE	/usr/include/sysexits.h	/^#define EX__BASE	/;"	d
EX__MAX	/usr/include/sysexits.h	/^#define EX__MAX	/;"	d
E_BAD_ARGUMENT	/usr/include/eti.h	/^#define	E_BAD_ARGUMENT	/;"	d
E_BAD_STATE	/usr/include/eti.h	/^#define	E_BAD_STATE	/;"	d
E_CONNECTED	/usr/include/eti.h	/^#define	E_CONNECTED	/;"	d
E_CURRENT	/usr/include/eti.h	/^#define	E_CURRENT	/;"	d
E_INVALID_FIELD	/usr/include/eti.h	/^#define	E_INVALID_FIELD	/;"	d
E_NOT_CONNECTED	/usr/include/eti.h	/^#define	E_NOT_CONNECTED	/;"	d
E_NOT_POSTED	/usr/include/eti.h	/^#define	E_NOT_POSTED	/;"	d
E_NOT_SELECTABLE	/usr/include/eti.h	/^#define	E_NOT_SELECTABLE	/;"	d
E_NO_MATCH	/usr/include/eti.h	/^#define	E_NO_MATCH	/;"	d
E_NO_ROOM	/usr/include/eti.h	/^#define	E_NO_ROOM	/;"	d
E_OK	/usr/include/eti.h	/^#define	E_OK	/;"	d
E_POSTED	/usr/include/eti.h	/^#define	E_POSTED	/;"	d
E_REQUEST_DENIED	/usr/include/eti.h	/^#define	E_REQUEST_DENIED	/;"	d
E_SYSTEM_ERROR	/usr/include/eti.h	/^#define	E_SYSTEM_ERROR	/;"	d
E_UNKNOWN_COMMAND	/usr/include/eti.h	/^#define	E_UNKNOWN_COMMAND	/;"	d
EditLine	/usr/include/histedit.h	/^typedef struct editline EditLine;$/;"	t	typeref:struct:editline
Expat_External_INCLUDED	/usr/include/expat_external.h	/^#define Expat_External_INCLUDED /;"	d
Expat_INCLUDED	/usr/include/expat.h	/^#define Expat_INCLUDED /;"	d
ExtBoolname	/usr/include/term_entry.h	/^#define ExtBoolname(/;"	d
ExtNumname	/usr/include/term_entry.h	/^#define ExtNumname(/;"	d
ExtStrname	/usr/include/term_entry.h	/^#define ExtStrname(/;"	d
FALSE	/usr/include/curses.h	/^#define FALSE /;"	d
FALSE	/usr/include/curses.h	/^#undef FALSE$/;"	d
FALSE	/usr/include/fcgimisc.h	/^#define FALSE /;"	d
FALSE	/usr/include/iodbcunix.h	/^#define FALSE	/;"	d
FALSE	/usr/include/ncurses.h	/^#define FALSE /;"	d
FALSE	/usr/include/ncurses.h	/^#undef FALSE$/;"	d
FAR	/usr/include/iodbcunix.h	/^#define FAR$/;"	d
FAR	/usr/include/zconf.h	/^#      define FAR /;"	d
FAR	/usr/include/zconf.h	/^#      undef FAR$/;"	d
FAR	/usr/include/zconf.h	/^#    undef FAR$/;"	d
FAR	/usr/include/zconf.h	/^#  define FAR$/;"	d
FCGIO_H	/usr/include/fcgio.h	/^#define FCGIO_H$/;"	d
FCGI_ABORT_REQUEST	/usr/include/fastcgi.h	/^#define FCGI_ABORT_REQUEST /;"	d
FCGI_AUTHORIZER	/usr/include/fastcgi.h	/^#define FCGI_AUTHORIZER /;"	d
FCGI_Accept	/usr/include/fcgi_stdio.h	/^DLLAPI int FCGI_Accept(void);$/;"	p	signature:(void)
FCGI_BEGIN_REQUEST	/usr/include/fastcgi.h	/^#define FCGI_BEGIN_REQUEST /;"	d
FCGI_BeginRequestBody	/usr/include/fastcgi.h	/^} FCGI_BeginRequestBody;$/;"	t	typeref:struct:__anon54
FCGI_BeginRequestRecord	/usr/include/fastcgi.h	/^} FCGI_BeginRequestRecord;$/;"	t	typeref:struct:__anon55
FCGI_CANT_MPX_CONN	/usr/include/fastcgi.h	/^#define FCGI_CANT_MPX_CONN /;"	d
FCGI_DATA	/usr/include/fastcgi.h	/^#define FCGI_DATA /;"	d
FCGI_END_REQUEST	/usr/include/fastcgi.h	/^#define FCGI_END_REQUEST /;"	d
FCGI_EndRequestBody	/usr/include/fastcgi.h	/^} FCGI_EndRequestBody;$/;"	t	typeref:struct:__anon56
FCGI_EndRequestRecord	/usr/include/fastcgi.h	/^} FCGI_EndRequestRecord;$/;"	t	typeref:struct:__anon57
FCGI_FAIL_ACCEPT_ON_INTR	/usr/include/fcgiapp.h	/^#define FCGI_FAIL_ACCEPT_ON_INTR	/;"	d
FCGI_FILE	/usr/include/fcgi_stdio.h	/^} FCGI_FILE;$/;"	t	typeref:struct:__anon60
FCGI_FILTER	/usr/include/fastcgi.h	/^#define FCGI_FILTER /;"	d
FCGI_Finish	/usr/include/fcgi_stdio.h	/^DLLAPI void FCGI_Finish(void);$/;"	p	signature:(void)
FCGI_GET_VALUES	/usr/include/fastcgi.h	/^#define FCGI_GET_VALUES /;"	d
FCGI_GET_VALUES_RESULT	/usr/include/fastcgi.h	/^#define FCGI_GET_VALUES_RESULT /;"	d
FCGI_HEADER_LEN	/usr/include/fastcgi.h	/^#define FCGI_HEADER_LEN /;"	d
FCGI_Header	/usr/include/fastcgi.h	/^} FCGI_Header;$/;"	t	typeref:struct:__anon53
FCGI_KEEP_CONN	/usr/include/fastcgi.h	/^#define FCGI_KEEP_CONN /;"	d
FCGI_LISTENSOCK_FILENO	/usr/include/fastcgi.h	/^#define FCGI_LISTENSOCK_FILENO /;"	d
FCGI_MAXTYPE	/usr/include/fastcgi.h	/^#define FCGI_MAXTYPE /;"	d
FCGI_MAX_CONNS	/usr/include/fastcgi.h	/^#define FCGI_MAX_CONNS /;"	d
FCGI_MAX_LENGTH	/usr/include/fastcgi.h	/^#define FCGI_MAX_LENGTH /;"	d
FCGI_MAX_REQS	/usr/include/fastcgi.h	/^#define FCGI_MAX_REQS /;"	d
FCGI_MPXS_CONNS	/usr/include/fastcgi.h	/^#define FCGI_MPXS_CONNS /;"	d
FCGI_NULL_REQUEST_ID	/usr/include/fastcgi.h	/^#define FCGI_NULL_REQUEST_ID /;"	d
FCGI_OVERLOADED	/usr/include/fastcgi.h	/^#define FCGI_OVERLOADED /;"	d
FCGI_PARAMS	/usr/include/fastcgi.h	/^#define FCGI_PARAMS /;"	d
FCGI_REQUEST_COMPLETE	/usr/include/fastcgi.h	/^#define FCGI_REQUEST_COMPLETE /;"	d
FCGI_RESPONDER	/usr/include/fastcgi.h	/^#define FCGI_RESPONDER /;"	d
FCGI_STDERR	/usr/include/fastcgi.h	/^#define FCGI_STDERR /;"	d
FCGI_STDIN	/usr/include/fastcgi.h	/^#define FCGI_STDIN /;"	d
FCGI_STDOUT	/usr/include/fastcgi.h	/^#define FCGI_STDOUT /;"	d
FCGI_SetExitStatus	/usr/include/fcgi_stdio.h	/^DLLAPI void FCGI_SetExitStatus(int status);$/;"	p	signature:(int status)
FCGI_StartFilterData	/usr/include/fcgi_stdio.h	/^DLLAPI int FCGI_StartFilterData(void);$/;"	p	signature:(void)
FCGI_ToFILE	/usr/include/fcgi_stdio.h	/^#define FCGI_ToFILE(/;"	d
FCGI_ToFcgiStream	/usr/include/fcgi_stdio.h	/^#define FCGI_ToFcgiStream(/;"	d
FCGI_UNKNOWN_ROLE	/usr/include/fastcgi.h	/^#define FCGI_UNKNOWN_ROLE /;"	d
FCGI_UNKNOWN_TYPE	/usr/include/fastcgi.h	/^#define FCGI_UNKNOWN_TYPE /;"	d
FCGI_UnknownTypeBody	/usr/include/fastcgi.h	/^} FCGI_UnknownTypeBody;$/;"	t	typeref:struct:__anon58
FCGI_UnknownTypeRecord	/usr/include/fastcgi.h	/^} FCGI_UnknownTypeRecord;$/;"	t	typeref:struct:__anon59
FCGI_VERSION_1	/usr/include/fastcgi.h	/^#define FCGI_VERSION_1 /;"	d
FCGI_clearerr	/usr/include/fcgi_stdio.h	/^DLLAPI void       FCGI_clearerr(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_errno	/usr/include/fcgiapp.h	/^    int FCGI_errno;                \/* error status *\/$/;"	m	struct:FCGX_Stream	access:public
FCGI_fclose	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fclose(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_fdopen	/usr/include/fcgi_stdio.h	/^DLLAPI FCGI_FILE *FCGI_fdopen(int fd, const char *mode);$/;"	p	signature:(int fd, const char *mode)
FCGI_feof	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_feof(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_ferror	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_ferror(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_fflush	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fflush(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_fgetc	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fgetc(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_fgetpos	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fgetpos(FCGI_FILE *fp, fpos_t *pos);$/;"	p	signature:(FCGI_FILE *fp, fpos_t *pos)
FCGI_fgets	/usr/include/fcgi_stdio.h	/^DLLAPI char      *FCGI_fgets(char *str, int size, FCGI_FILE *fp);$/;"	p	signature:(char *str, int size, FCGI_FILE *fp)
FCGI_fileno	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fileno(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_fopen	/usr/include/fcgi_stdio.h	/^DLLAPI FCGI_FILE *FCGI_fopen(const char *path, const char *mode);$/;"	p	signature:(const char *path, const char *mode)
FCGI_fprintf	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fprintf(FCGI_FILE *fp, const char *format, ...);$/;"	p	signature:(FCGI_FILE *fp, const char *format, ...)
FCGI_fputc	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fputc(int c, FCGI_FILE *fp);$/;"	p	signature:(int c, FCGI_FILE *fp)
FCGI_fputs	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fputs(const char *str, FCGI_FILE *fp);$/;"	p	signature:(const char *str, FCGI_FILE *fp)
FCGI_fread	/usr/include/fcgi_stdio.h	/^DLLAPI size_t     FCGI_fread(void *ptr, size_t size, size_t nmemb, FCGI_FILE *fp);$/;"	p	signature:(void *ptr, size_t size, size_t nmemb, FCGI_FILE *fp)
FCGI_freopen	/usr/include/fcgi_stdio.h	/^DLLAPI FCGI_FILE *FCGI_freopen(const char *path, const char *mode, FCGI_FILE *fp);$/;"	p	signature:(const char *path, const char *mode, FCGI_FILE *fp)
FCGI_fseek	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fseek(FCGI_FILE *fp, long offset, int whence);$/;"	p	signature:(FCGI_FILE *fp, long offset, int whence)
FCGI_fsetpos	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_fsetpos(FCGI_FILE *fp, const fpos_t *pos);$/;"	p	signature:(FCGI_FILE *fp, const fpos_t *pos)
FCGI_ftell	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_ftell(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_fwrite	/usr/include/fcgi_stdio.h	/^DLLAPI size_t     FCGI_fwrite(void *ptr, size_t size, size_t nmemb, FCGI_FILE *fp);$/;"	p	signature:(void *ptr, size_t size, size_t nmemb, FCGI_FILE *fp)
FCGI_getchar	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_getchar(void);$/;"	p	signature:(void)
FCGI_gets	/usr/include/fcgi_stdio.h	/^DLLAPI char      *FCGI_gets(char *str);$/;"	p	signature:(char *str)
FCGI_pclose	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_pclose(FCGI_FILE *);$/;"	p	signature:(FCGI_FILE *)
FCGI_perror	/usr/include/fcgi_stdio.h	/^DLLAPI void FCGI_perror(const char *str);$/;"	p	signature:(const char *str)
FCGI_popen	/usr/include/fcgi_stdio.h	/^DLLAPI FCGI_FILE *FCGI_popen(const char *cmd, const char *type);$/;"	p	signature:(const char *cmd, const char *type)
FCGI_printf	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_printf(const char *format, ...);$/;"	p	signature:(const char *format, ...)
FCGI_putchar	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_putchar(int c);$/;"	p	signature:(int c)
FCGI_puts	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_puts(const char *str);$/;"	p	signature:(const char *str)
FCGI_rewind	/usr/include/fcgi_stdio.h	/^DLLAPI void       FCGI_rewind(FCGI_FILE *fp);$/;"	p	signature:(FCGI_FILE *fp)
FCGI_setbuf	/usr/include/fcgi_stdio.h	/^DLLAPI void       FCGI_setbuf(FCGI_FILE *fp, char *buf);$/;"	p	signature:(FCGI_FILE *fp, char *buf)
FCGI_setvbuf	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_setvbuf(FCGI_FILE *fp, char *buf, int bufmode, size_t size);$/;"	p	signature:(FCGI_FILE *fp, char *buf, int bufmode, size_t size)
FCGI_stderr	/usr/include/fcgi_stdio.h	/^#define FCGI_stderr	/;"	d
FCGI_stdin	/usr/include/fcgi_stdio.h	/^#define FCGI_stdin	/;"	d
FCGI_stdout	/usr/include/fcgi_stdio.h	/^#define FCGI_stdout	/;"	d
FCGI_tmpfile	/usr/include/fcgi_stdio.h	/^DLLAPI FCGI_FILE *FCGI_tmpfile(void);$/;"	p	signature:(void)
FCGI_ungetc	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_ungetc(int c, FCGI_FILE *fp);$/;"	p	signature:(int c, FCGI_FILE *fp)
FCGI_vfprintf	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_vfprintf(FCGI_FILE *fp, const char *format, va_list ap);$/;"	p	signature:(FCGI_FILE *fp, const char *format, va_list ap)
FCGI_vprintf	/usr/include/fcgi_stdio.h	/^DLLAPI int        FCGI_vprintf(const char *format, va_list ap);$/;"	p	signature:(const char *format, va_list ap)
FCGX_Accept	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_Accept($/;"	p	signature:( FCGX_Stream **in, FCGX_Stream **out, FCGX_Stream **err, FCGX_ParamArray *envp)
FCGX_Accept_r	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_Accept_r(FCGX_Request *request);$/;"	p	signature:(FCGX_Request *request)
FCGX_CALL_SEQ_ERROR	/usr/include/fcgiapp.h	/^#define FCGX_CALL_SEQ_ERROR /;"	d
FCGX_ClearError	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_ClearError(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_CreateWriter	/usr/include/fcgiapp.h	/^DLLAPI FCGX_Stream *FCGX_CreateWriter($/;"	p	signature:( int socket, int requestId, int bufflen, int streamType)
FCGX_FClose	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_FClose(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_FFlush	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_FFlush(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_FPrintF	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_FPrintF(FCGX_Stream *stream, const char *format, ...);$/;"	p	signature:(FCGX_Stream *stream, const char *format, ...)
FCGX_Finish	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_Finish(void);$/;"	p	signature:(void)
FCGX_Finish_r	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_Finish_r(FCGX_Request *request);$/;"	p	signature:(FCGX_Request *request)
FCGX_Free	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_Free(FCGX_Request * request, int close);$/;"	p	signature:(FCGX_Request * request, int close)
FCGX_FreeStream	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_FreeStream(FCGX_Stream **stream);$/;"	p	signature:(FCGX_Stream **stream)
FCGX_GetChar	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_GetChar(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_GetError	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_GetError(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_GetLine	/usr/include/fcgiapp.h	/^DLLAPI char *FCGX_GetLine(char *str, int n, FCGX_Stream *stream);$/;"	p	signature:(char *str, int n, FCGX_Stream *stream)
FCGX_GetParam	/usr/include/fcgiapp.h	/^DLLAPI char *FCGX_GetParam(const char *name, FCGX_ParamArray envp);$/;"	p	signature:(const char *name, FCGX_ParamArray envp)
FCGX_GetStr	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_GetStr(char *str, int n, FCGX_Stream *stream);$/;"	p	signature:(char *str, int n, FCGX_Stream *stream)
FCGX_HasSeenEOF	/usr/include/fcgiapp.h	/^DLLAPI  int FCGX_HasSeenEOF(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_Init	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_Init(void);$/;"	p	signature:(void)
FCGX_InitRequest	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_InitRequest(FCGX_Request *request, int sock, int flags);$/;"	p	signature:(FCGX_Request *request, int sock, int flags)
FCGX_IsCGI	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_IsCGI(void);$/;"	p	signature:(void)
FCGX_OpenSocket	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_OpenSocket(const char *path, int backlog);$/;"	p	signature:(const char *path, int backlog)
FCGX_PARAMS_ERROR	/usr/include/fcgiapp.h	/^#define FCGX_PARAMS_ERROR /;"	d
FCGX_PROTOCOL_ERROR	/usr/include/fcgiapp.h	/^#define FCGX_PROTOCOL_ERROR /;"	d
FCGX_ParamArray	/usr/include/fcgiapp.h	/^typedef char **FCGX_ParamArray;$/;"	t
FCGX_PutChar	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_PutChar(int c, FCGX_Stream *stream);$/;"	p	signature:(int c, FCGX_Stream *stream)
FCGX_PutS	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_PutS(const char *str, FCGX_Stream *stream);$/;"	p	signature:(const char *str, FCGX_Stream *stream)
FCGX_PutStr	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_PutStr(const char *str, int n, FCGX_Stream *stream);$/;"	p	signature:(const char *str, int n, FCGX_Stream *stream)
FCGX_Request	/usr/include/fcgiapp.h	/^typedef struct FCGX_Request {$/;"	s
FCGX_Request	/usr/include/fcgiapp.h	/^} FCGX_Request;$/;"	t	typeref:struct:FCGX_Request
FCGX_Request::appStatus	/usr/include/fcgiapp.h	/^    int appStatus;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::envp	/usr/include/fcgiapp.h	/^	char **envp;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::err	/usr/include/fcgiapp.h	/^    FCGX_Stream *err;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::flags	/usr/include/fcgiapp.h	/^	int flags;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::in	/usr/include/fcgiapp.h	/^    FCGX_Stream *in;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::ipcFd	/usr/include/fcgiapp.h	/^    int ipcFd;               \/* < 0 means no connection *\/$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::isBeginProcessed	/usr/include/fcgiapp.h	/^    int isBeginProcessed;     \/* FCGI_BEGIN_REQUEST seen *\/$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::keepConnection	/usr/include/fcgiapp.h	/^    int keepConnection;       \/* don't close ipcFd at end of request *\/$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::listen_sock	/usr/include/fcgiapp.h	/^	int listen_sock;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::nWriters	/usr/include/fcgiapp.h	/^    int nWriters;             \/* number of open writers (0..2) *\/$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::out	/usr/include/fcgiapp.h	/^    FCGX_Stream *out;$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::paramsPtr	/usr/include/fcgiapp.h	/^    struct Params *paramsPtr;$/;"	m	struct:FCGX_Request	typeref:struct:FCGX_Request::Params	access:public
FCGX_Request::requestId	/usr/include/fcgiapp.h	/^    int requestId;            \/* valid if isBeginProcessed *\/$/;"	m	struct:FCGX_Request	access:public
FCGX_Request::role	/usr/include/fcgiapp.h	/^    int role;$/;"	m	struct:FCGX_Request	access:public
FCGX_SetExitStatus	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_SetExitStatus(int status, FCGX_Stream *stream);$/;"	p	signature:(int status, FCGX_Stream *stream)
FCGX_ShutdownPending	/usr/include/fcgiapp.h	/^DLLAPI void FCGX_ShutdownPending(void);$/;"	p	signature:(void)
FCGX_StartFilterData	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_StartFilterData(FCGX_Stream *stream);$/;"	p	signature:(FCGX_Stream *stream)
FCGX_Stream	/usr/include/fcgiapp.h	/^typedef struct FCGX_Stream {$/;"	s
FCGX_Stream	/usr/include/fcgiapp.h	/^} FCGX_Stream;$/;"	t	typeref:struct:FCGX_Stream
FCGX_Stream::FCGI_errno	/usr/include/fcgiapp.h	/^    int FCGI_errno;                \/* error status *\/$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::data	/usr/include/fcgiapp.h	/^    void *data;$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::emptyBuffProc	/usr/include/fcgiapp.h	/^    void (*emptyBuffProc) (struct FCGX_Stream *stream, int doClose);$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::fillBuffProc	/usr/include/fcgiapp.h	/^    void (*fillBuffProc) (struct FCGX_Stream *stream);$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::isClosed	/usr/include/fcgiapp.h	/^    int isClosed;$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::isReader	/usr/include/fcgiapp.h	/^    int isReader;$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::rdNext	/usr/include/fcgiapp.h	/^    unsigned char *rdNext;    \/* reader: first valid byte$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::stop	/usr/include/fcgiapp.h	/^    unsigned char *stop;      \/* reader: last valid byte + 1$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::stopUnget	/usr/include/fcgiapp.h	/^    unsigned char *stopUnget; \/* reader: first byte of current buffer$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::wasFCloseCalled	/usr/include/fcgiapp.h	/^    int wasFCloseCalled;$/;"	m	struct:FCGX_Stream	access:public
FCGX_Stream::wrNext	/usr/include/fcgiapp.h	/^    unsigned char *wrNext;    \/* writer: first free byte$/;"	m	struct:FCGX_Stream	access:public
FCGX_UNSUPPORTED_VERSION	/usr/include/fcgiapp.h	/^#define FCGX_UNSUPPORTED_VERSION /;"	d
FCGX_UnGetChar	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_UnGetChar(int c, FCGX_Stream *stream);$/;"	p	signature:(int c, FCGX_Stream *stream)
FCGX_VFPrintF	/usr/include/fcgiapp.h	/^DLLAPI int FCGX_VFPrintF(FCGX_Stream *stream, const char *format, va_list arg);$/;"	p	signature:(FCGX_Stream *stream, const char *format, va_list arg)
FIELD	/usr/include/form.h	/^} FIELD;$/;"	t	typeref:struct:fieldnode
FIELDTYPE	/usr/include/form.h	/^} FIELDTYPE;$/;"	t	typeref:struct:typenode
FIELD_CELL	/usr/include/form.h	/^typedef void *FIELD_CELL;$/;"	t
FIFOTYPE	/usr/include/tar.h	/^#define	FIFOTYPE	/;"	d
FILE	/usr/include/fcgi_stdio.h	/^#define	FILE /;"	d
FILE	/usr/include/fcgi_stdio.h	/^#undef  FILE$/;"	d
FILE	/usr/include/stdio.h	/^} FILE;$/;"	t	typeref:struct:__sFILE
FILENAME_MAX	/usr/include/stdio.h	/^#define	FILENAME_MAX	/;"	d
FILTER_APPLY_FN	/usr/include/slapi-plugin.h	/^typedef int (*FILTER_APPLY_FN)( Slapi_Filter *f, void *arg );$/;"	t
FIND	/usr/include/search.h	/^	FIND, ENTER$/;"	e	enum:__anon105
FLEX_STD	/usr/include/FlexLexer.h	/^#    define FLEX_STD /;"	d
FLT_DIG	/usr/include/float.h	/^#define FLT_DIG	/;"	d
FLT_DIG	/usr/include/float.h	/^#undef FLT_DIG$/;"	d
FLT_EPSILON	/usr/include/float.h	/^#define FLT_EPSILON	/;"	d
FLT_EPSILON	/usr/include/float.h	/^#undef FLT_EPSILON$/;"	d
FLT_EVAL_METHOD	/usr/include/float.h	/^#define FLT_EVAL_METHOD	/;"	d
FLT_EVAL_METHOD	/usr/include/float.h	/^#undef FLT_EVAL_METHOD$/;"	d
FLT_MANT_DIG	/usr/include/float.h	/^#define FLT_MANT_DIG	/;"	d
FLT_MANT_DIG	/usr/include/float.h	/^#undef FLT_MANT_DIG$/;"	d
FLT_MAX	/usr/include/float.h	/^#define FLT_MAX	/;"	d
FLT_MAX	/usr/include/float.h	/^#undef FLT_MAX$/;"	d
FLT_MAX_10_EXP	/usr/include/float.h	/^#define FLT_MAX_10_EXP	/;"	d
FLT_MAX_10_EXP	/usr/include/float.h	/^#undef FLT_MAX_10_EXP$/;"	d
FLT_MAX_EXP	/usr/include/float.h	/^#define FLT_MAX_EXP	/;"	d
FLT_MAX_EXP	/usr/include/float.h	/^#undef FLT_MAX_EXP$/;"	d
FLT_MIN	/usr/include/float.h	/^#define FLT_MIN	/;"	d
FLT_MIN	/usr/include/float.h	/^#undef FLT_MIN$/;"	d
FLT_MIN_10_EXP	/usr/include/float.h	/^#define FLT_MIN_10_EXP	/;"	d
FLT_MIN_10_EXP	/usr/include/float.h	/^#undef FLT_MIN_10_EXP$/;"	d
FLT_MIN_EXP	/usr/include/float.h	/^#define FLT_MIN_EXP	/;"	d
FLT_MIN_EXP	/usr/include/float.h	/^#undef FLT_MIN_EXP$/;"	d
FLT_RADIX	/usr/include/float.h	/^#define FLT_RADIX	/;"	d
FLT_RADIX	/usr/include/float.h	/^#undef FLT_RADIX$/;"	d
FLT_ROUNDS	/usr/include/float.h	/^#define FLT_ROUNDS /;"	d
FLT_ROUNDS	/usr/include/float.h	/^#undef FLT_ROUNDS$/;"	d
FNM_CASEFOLD	/usr/include/fnmatch.h	/^#define	FNM_CASEFOLD	/;"	d
FNM_FILE_NAME	/usr/include/fnmatch.h	/^#define	FNM_FILE_NAME	/;"	d
FNM_IGNORECASE	/usr/include/fnmatch.h	/^#define	FNM_IGNORECASE	/;"	d
FNM_LEADING_DIR	/usr/include/fnmatch.h	/^#define	FNM_LEADING_DIR	/;"	d
FNM_NOESCAPE	/usr/include/fnmatch.h	/^#define	FNM_NOESCAPE	/;"	d
FNM_NOMATCH	/usr/include/fnmatch.h	/^#define	FNM_NOMATCH	/;"	d
FNM_NOSYS	/usr/include/fnmatch.h	/^#define	FNM_NOSYS	/;"	d
FNM_PATHNAME	/usr/include/fnmatch.h	/^#define	FNM_PATHNAME	/;"	d
FNM_PERIOD	/usr/include/fnmatch.h	/^#define	FNM_PERIOD	/;"	d
FOPEN_MAX	/usr/include/stdio.h	/^#define	FOPEN_MAX	/;"	d
FORM	/usr/include/form.h	/^} FORM;$/;"	t	typeref:struct:formnode
FORM_H	/usr/include/form.h	/^#define FORM_H$/;"	d
FPARSELN_UNESCALL	/usr/include/util.h	/^#define	FPARSELN_UNESCALL	/;"	d
FPARSELN_UNESCCOMM	/usr/include/util.h	/^#define	FPARSELN_UNESCCOMM	/;"	d
FPARSELN_UNESCCONT	/usr/include/util.h	/^#define	FPARSELN_UNESCCONT	/;"	d
FPARSELN_UNESCESC	/usr/include/util.h	/^#define	FPARSELN_UNESCESC	/;"	d
FPARSELN_UNESCREST	/usr/include/util.h	/^#define	FPARSELN_UNESCREST	/;"	d
FSTAB	/usr/include/fstab.h	/^#define	FSTAB	/;"	d
FSTAB_RO	/usr/include/fstab.h	/^#define	FSTAB_RO	/;"	d
FSTAB_RQ	/usr/include/fstab.h	/^#define	FSTAB_RQ	/;"	d
FSTAB_RW	/usr/include/fstab.h	/^#define	FSTAB_RW	/;"	d
FSTAB_SW	/usr/include/fstab.h	/^#define	FSTAB_SW	/;"	d
FSTAB_XX	/usr/include/fstab.h	/^#define	FSTAB_XX	/;"	d
FTS	/usr/include/fts.h	/^} FTS;$/;"	t	typeref:struct:__anon62
FTSENT	/usr/include/fts.h	/^} FTSENT;$/;"	t	typeref:struct:_ftsent
FTS_AGAIN	/usr/include/fts.h	/^#define	FTS_AGAIN	/;"	d
FTS_BLOCK_COMPAR	/usr/include/fts.h	/^#define	FTS_BLOCK_COMPAR /;"	d
FTS_COMFOLLOW	/usr/include/fts.h	/^#define	FTS_COMFOLLOW	/;"	d
FTS_COMFOLLOWDIR	/usr/include/fts.h	/^#define	FTS_COMFOLLOWDIR /;"	d
FTS_D	/usr/include/fts.h	/^#define	FTS_D	/;"	d
FTS_DC	/usr/include/fts.h	/^#define	FTS_DC	/;"	d
FTS_DEFAULT	/usr/include/fts.h	/^#define	FTS_DEFAULT	/;"	d
FTS_DNR	/usr/include/fts.h	/^#define	FTS_DNR	/;"	d
FTS_DONTCHDIR	/usr/include/fts.h	/^#define	FTS_DONTCHDIR	/;"	d
FTS_DOT	/usr/include/fts.h	/^#define	FTS_DOT	/;"	d
FTS_DP	/usr/include/fts.h	/^#define	FTS_DP	/;"	d
FTS_ERR	/usr/include/fts.h	/^#define	FTS_ERR	/;"	d
FTS_F	/usr/include/fts.h	/^#define	FTS_F	/;"	d
FTS_FOLLOW	/usr/include/fts.h	/^#define	FTS_FOLLOW	/;"	d
FTS_INIT	/usr/include/fts.h	/^#define	FTS_INIT	/;"	d
FTS_ISW	/usr/include/fts.h	/^#define	FTS_ISW	/;"	d
FTS_LOGICAL	/usr/include/fts.h	/^#define	FTS_LOGICAL	/;"	d
FTS_NAMEONLY	/usr/include/fts.h	/^#define	FTS_NAMEONLY	/;"	d
FTS_NOCHDIR	/usr/include/fts.h	/^#define	FTS_NOCHDIR	/;"	d
FTS_NOINSTR	/usr/include/fts.h	/^#define	FTS_NOINSTR	/;"	d
FTS_NOSTAT	/usr/include/fts.h	/^#define	FTS_NOSTAT	/;"	d
FTS_NS	/usr/include/fts.h	/^#define	FTS_NS	/;"	d
FTS_NSOK	/usr/include/fts.h	/^#define	FTS_NSOK	/;"	d
FTS_OPTIONMASK	/usr/include/fts.h	/^#define	FTS_OPTIONMASK	/;"	d
FTS_PHYSICAL	/usr/include/fts.h	/^#define	FTS_PHYSICAL	/;"	d
FTS_ROOTLEVEL	/usr/include/fts.h	/^#define	FTS_ROOTLEVEL	/;"	d
FTS_ROOTPARENTLEVEL	/usr/include/fts.h	/^#define	FTS_ROOTPARENTLEVEL	/;"	d
FTS_SEEDOT	/usr/include/fts.h	/^#define	FTS_SEEDOT	/;"	d
FTS_SKIP	/usr/include/fts.h	/^#define	FTS_SKIP	/;"	d
FTS_SL	/usr/include/fts.h	/^#define	FTS_SL	/;"	d
FTS_SLNONE	/usr/include/fts.h	/^#define	FTS_SLNONE	/;"	d
FTS_STOP	/usr/include/fts.h	/^#define	FTS_STOP	/;"	d
FTS_SYMFOLLOW	/usr/include/fts.h	/^#define	FTS_SYMFOLLOW	/;"	d
FTS_W	/usr/include/fts.h	/^#define	FTS_W	/;"	d
FTS_WHITEOUT	/usr/include/fts.h	/^#define	FTS_WHITEOUT	/;"	d
FTS_XDEV	/usr/include/fts.h	/^#define	FTS_XDEV	/;"	d
FTW	/usr/include/ftw.h	/^struct FTW {$/;"	s
FTW::base	/usr/include/ftw.h	/^	int base;$/;"	m	struct:FTW	access:public
FTW::level	/usr/include/ftw.h	/^	int level;$/;"	m	struct:FTW	access:public
FTW_CHDIR	/usr/include/ftw.h	/^#define	FTW_CHDIR	/;"	d
FTW_D	/usr/include/ftw.h	/^#define	FTW_D	/;"	d
FTW_DEPTH	/usr/include/ftw.h	/^#define	FTW_DEPTH	/;"	d
FTW_DNR	/usr/include/ftw.h	/^#define	FTW_DNR	/;"	d
FTW_DP	/usr/include/ftw.h	/^#define	FTW_DP	/;"	d
FTW_F	/usr/include/ftw.h	/^#define	FTW_F	/;"	d
FTW_MOUNT	/usr/include/ftw.h	/^#define	FTW_MOUNT	/;"	d
FTW_NS	/usr/include/ftw.h	/^#define	FTW_NS	/;"	d
FTW_PHYS	/usr/include/ftw.h	/^#define	FTW_PHYS	/;"	d
FTW_SL	/usr/include/ftw.h	/^#define	FTW_SL	/;"	d
FTW_SLN	/usr/include/ftw.h	/^#define	FTW_SLN	/;"	d
F_LOCK	/usr/include/unistd.h	/^#define	F_LOCK /;"	d
F_TEST	/usr/include/unistd.h	/^#define	F_TEST /;"	d
F_TLOCK	/usr/include/unistd.h	/^#define	F_TLOCK /;"	d
F_ULOCK	/usr/include/unistd.h	/^#define	F_ULOCK /;"	d
Field_Options	/usr/include/form.h	/^typedef int Field_Options;$/;"	t
Filedes	/usr/include/term.h	/^    short	Filedes;	\/* file description being written to *\/$/;"	m	struct:term	access:public
FlexLexer	/usr/include/FlexLexer.h	/^class FlexLexer {$/;"	c
FlexLexer::YYLeng	/usr/include/FlexLexer.h	/^	int YYLeng()	const	{ return yyleng; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::YYText	/usr/include/FlexLexer.h	/^	const char* YYText() const	{ return yytext; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::debug	/usr/include/FlexLexer.h	/^	int debug() const		{ return yy_flex_debug; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::lineno	/usr/include/FlexLexer.h	/^	int lineno() const		{ return yylineno; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::set_debug	/usr/include/FlexLexer.h	/^	void set_debug( int flag )	{ yy_flex_debug = flag; }$/;"	f	class:FlexLexer	access:public	signature:( int flag )
FlexLexer::switch_streams	/usr/include/FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in = 0,$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in = 0, FLEX_STD ostream* new_out = 0 )
FlexLexer::yy_create_buffer	/usr/include/FlexLexer.h	/^		yy_create_buffer( FLEX_STD istream* s, int size ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
FlexLexer::yy_delete_buffer	/usr/include/FlexLexer.h	/^	virtual void yy_delete_buffer( struct yy_buffer_state* b ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* b )
FlexLexer::yy_flex_debug	/usr/include/FlexLexer.h	/^	int yy_flex_debug;	\/\/ only has effect with -d or "%option debug"$/;"	m	class:FlexLexer	access:protected
FlexLexer::yy_switch_to_buffer	/usr/include/FlexLexer.h	/^		yy_switch_to_buffer( struct yy_buffer_state* new_buffer ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
FlexLexer::yyleng	/usr/include/FlexLexer.h	/^	int yyleng;$/;"	m	class:FlexLexer	access:protected
FlexLexer::yylex	/usr/include/FlexLexer.h	/^	int yylex( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )$/;"	f	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
FlexLexer::yylex	/usr/include/FlexLexer.h	/^	virtual int yylex() = 0;$/;"	p	class:FlexLexer	access:public	signature:()
FlexLexer::yylineno	/usr/include/FlexLexer.h	/^	int yylineno;		\/\/ only maintained if you use %option yylineno$/;"	m	class:FlexLexer	access:protected
FlexLexer::yyrestart	/usr/include/FlexLexer.h	/^	virtual void yyrestart( FLEX_STD istream* s ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s )
FlexLexer::yytext	/usr/include/FlexLexer.h	/^	char* yytext;$/;"	m	class:FlexLexer	access:protected
FlexLexer::~FlexLexer	/usr/include/FlexLexer.h	/^	virtual ~FlexLexer()	{ }$/;"	f	class:FlexLexer	access:public	signature:()
ForceNaturalAlignment	/usr/include/dns_sd.h	/^typedef union _TXTRecordRef_t { char PrivateData[16]; char *ForceNaturalAlignment; } TXTRecordRef;$/;"	m	union:_TXTRecordRef_t	access:public
Form_Hook	/usr/include/form.h	/^typedef void (*Form_Hook)(FORM *);$/;"	t
Form_Options	/usr/include/form.h	/^typedef int Form_Options;$/;"	t
GCC_NORETURN	/usr/include/curses.h	/^#define	GCC_NORETURN /;"	d
GCC_NORETURN	/usr/include/ncurses.h	/^#define	GCC_NORETURN /;"	d
GCC_PRINTFLIKE	/usr/include/curses.h	/^#define GCC_PRINTFLIKE(/;"	d
GCC_PRINTFLIKE	/usr/include/ncurses.h	/^#define GCC_PRINTFLIKE(/;"	d
GCC_SCANFLIKE	/usr/include/curses.h	/^#define GCC_SCANFLIKE(/;"	d
GCC_SCANFLIKE	/usr/include/ncurses.h	/^#define GCC_SCANFLIKE(/;"	d
GCC_UNUSED	/usr/include/curses.h	/^#define	GCC_UNUSED /;"	d
GCC_UNUSED	/usr/include/ncurses.h	/^#define	GCC_UNUSED /;"	d
GET_TTY	/usr/include/term.h	/^#define GET_TTY(/;"	d
GET_TTY	/usr/include/term.h	/^#undef  GET_TTY$/;"	d
GElf_Addr	/usr/include/dtrace.h	/^#define GElf_Addr	/;"	d
GElf_Addr	/usr/include/dtrace.h	/^#undef GElf_Addr$/;"	d
GElf_Addr	/usr/include/dtrace.h	/^typedef unsigned long		GElf_Addr;$/;"	t
GElf_Addr	/usr/include/dtrace.h	/^typedef unsigned long long	GElf_Addr;$/;"	t
GElf_Half	/usr/include/dtrace.h	/^#define GElf_Half	/;"	d
GElf_Half	/usr/include/dtrace.h	/^#undef GElf_Half$/;"	d
GElf_Half	/usr/include/dtrace.h	/^typedef unsigned short		GElf_Half;$/;"	t
GElf_Sxword	/usr/include/dtrace.h	/^#define GElf_Sxword	/;"	d
GElf_Sxword	/usr/include/dtrace.h	/^#undef GElf_Sxword$/;"	d
GElf_Sxword	/usr/include/dtrace.h	/^typedef long			GElf_Sxword;$/;"	t
GElf_Sxword	/usr/include/dtrace.h	/^typedef long long		GElf_Sxword;$/;"	t
GElf_Sym	/usr/include/dtrace.h	/^#define GElf_Sym	/;"	d
GElf_Sym	/usr/include/dtrace.h	/^#undef GElf_Sym$/;"	d
GElf_Sym	/usr/include/dtrace.h	/^} GElf_Sym;$/;"	t	typeref:struct:__anon44
GElf_Word	/usr/include/dtrace.h	/^#define GElf_Word	/;"	d
GElf_Word	/usr/include/dtrace.h	/^#undef GElf_Word$/;"	d
GElf_Word	/usr/include/dtrace.h	/^typedef	unsigned int		GElf_Word;$/;"	t
GElf_Xword	/usr/include/dtrace.h	/^#define GElf_Xword	/;"	d
GElf_Xword	/usr/include/dtrace.h	/^#undef GElf_Xword$/;"	d
GElf_Xword	/usr/include/dtrace.h	/^typedef	unsigned long		GElf_Xword;$/;"	t
GElf_Xword	/usr/include/dtrace.h	/^typedef	unsigned long long	GElf_Xword;$/;"	t
GLOB_ABEND	/usr/include/glob.h	/^#define	GLOB_ABEND	/;"	d
GLOB_ABORTED	/usr/include/glob.h	/^#define	GLOB_ABORTED	/;"	d
GLOB_ALTDIRFUNC	/usr/include/glob.h	/^#define	GLOB_ALTDIRFUNC	/;"	d
GLOB_APPEND	/usr/include/glob.h	/^#define	GLOB_APPEND	/;"	d
GLOB_BRACE	/usr/include/glob.h	/^#define	GLOB_BRACE	/;"	d
GLOB_DOOFFS	/usr/include/glob.h	/^#define	GLOB_DOOFFS	/;"	d
GLOB_ERR	/usr/include/glob.h	/^#define	GLOB_ERR	/;"	d
GLOB_LIMIT	/usr/include/glob.h	/^#define	GLOB_LIMIT	/;"	d
GLOB_MAGCHAR	/usr/include/glob.h	/^#define	GLOB_MAGCHAR	/;"	d
GLOB_MARK	/usr/include/glob.h	/^#define	GLOB_MARK	/;"	d
GLOB_MAXPATH	/usr/include/glob.h	/^#define GLOB_MAXPATH	/;"	d
GLOB_NOCHECK	/usr/include/glob.h	/^#define	GLOB_NOCHECK	/;"	d
GLOB_NOESCAPE	/usr/include/glob.h	/^#define	GLOB_NOESCAPE	/;"	d
GLOB_NOMAGIC	/usr/include/glob.h	/^#define	GLOB_NOMAGIC	/;"	d
GLOB_NOMATCH	/usr/include/glob.h	/^#define	GLOB_NOMATCH	/;"	d
GLOB_NOSORT	/usr/include/glob.h	/^#define	GLOB_NOSORT	/;"	d
GLOB_NOSPACE	/usr/include/glob.h	/^#define	GLOB_NOSPACE	/;"	d
GLOB_NOSYS	/usr/include/glob.h	/^#define	GLOB_NOSYS	/;"	d
GLOB_QUOTE	/usr/include/glob.h	/^#define	GLOB_QUOTE	/;"	d
GLOB_TILDE	/usr/include/glob.h	/^#define	GLOB_TILDE	/;"	d
HASHINFO	/usr/include/db.h	/^} HASHINFO;$/;"	t	typeref:struct:__anon14
HASHKEY	/usr/include/mpool.h	/^#define	HASHKEY(/;"	d
HASHMAGIC	/usr/include/db.h	/^#define	HASHMAGIC	/;"	d
HASHSIZE	/usr/include/mpool.h	/^#define	HASHSIZE	/;"	d
HASHVERSION	/usr/include/db.h	/^#define	HASHVERSION	/;"	d
HASH_SZ	/usr/include/strhash.h	/^#define HASH_SZ /;"	d
HAVE_ARPA_INET_H	/usr/include/fcgi_config.h	/^#define HAVE_ARPA_INET_H /;"	d
HAVE_DECLSPEC	/usr/include/tcl.h	/^#   define HAVE_DECLSPEC /;"	d
HAVE_DLFCN_H	/usr/include/fcgi_config.h	/^#define HAVE_DLFCN_H /;"	d
HAVE_FILENO_PROTO	/usr/include/fcgi_config.h	/^#define HAVE_FILENO_PROTO /;"	d
HAVE_FPOS	/usr/include/fcgi_config.h	/^#define HAVE_FPOS /;"	d
HAVE_INTTYPES_H	/usr/include/fcgi_config.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_LIMITS_H	/usr/include/fcgi_config.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_MEMORY_H	/usr/include/fcgi_config.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_NETDB_H	/usr/include/fcgi_config.h	/^#define HAVE_NETDB_H /;"	d
HAVE_NETINET_IN_H	/usr/include/fcgi_config.h	/^#define HAVE_NETINET_IN_H /;"	d
HAVE_SOCKADDR_UN_SUN_LEN	/usr/include/fcgi_config.h	/^#define HAVE_SOCKADDR_UN_SUN_LEN /;"	d
HAVE_STDINT_H	/usr/include/fcgi_config.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDLIB_H	/usr/include/fcgi_config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STREAMBUF_CHAR_TYPE	/usr/include/fcgi_config.h	/^#define HAVE_STREAMBUF_CHAR_TYPE /;"	d
HAVE_STRERROR	/usr/include/fcgi_config.h	/^#define HAVE_STRERROR /;"	d
HAVE_STRINGS_H	/usr/include/fcgi_config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	/usr/include/fcgi_config.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRUCT_STAT64	/usr/include/tcl.h	/^#    undef HAVE_STRUCT_STAT64$/;"	d
HAVE_SYS_PARAM_H	/usr/include/fcgi_config.h	/^#define HAVE_SYS_PARAM_H /;"	d
HAVE_SYS_SOCKET_H	/usr/include/fcgi_config.h	/^#define HAVE_SYS_SOCKET_H /;"	d
HAVE_SYS_STAT_H	/usr/include/fcgi_config.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_TIME_H	/usr/include/fcgi_config.h	/^#define HAVE_SYS_TIME_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/fcgi_config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_UNISTD_H	/usr/include/fcgi_config.h	/^#define HAVE_UNISTD_H /;"	d
HDBC	/usr/include/sqltypes.h	/^typedef void *			HDBC;$/;"	t
HENV	/usr/include/sqltypes.h	/^typedef void *			HENV;$/;"	t
HINFO	/usr/include/dns_util.h	/^		dns_HINFO_record_t *HINFO;$/;"	m	union:__anon41::__anon42	access:public
HOSTNAME_KNOWN	/usr/include/tcpd.h	/^#define HOSTNAME_KNOWN(/;"	d
HOST_NOT_FOUND	/usr/include/netdb.h	/^#define	HOST_NOT_FOUND	/;"	d
HOURSPERDAY	/usr/include/tzfile.h	/^#define HOURSPERDAY	/;"	d
HOURS_PER_DAY	/usr/include/tzfile.h	/^#define HOURS_PER_DAY	/;"	d
HSTMT	/usr/include/sqltypes.h	/^typedef void *			HSTMT;$/;"	t
HWND	/usr/include/sqltypes.h	/^typedef SQLPOINTER 		HWND;$/;"	t
HWND	/usr/include/sqltypes.h	/^typedef WindowPtr 		HWND;$/;"	t
H_ADD	/usr/include/histedit.h	/^#define	H_ADD	/;"	d
H_APPEND	/usr/include/histedit.h	/^#define	H_APPEND	/;"	d
H_CLEAR	/usr/include/histedit.h	/^#define	H_CLEAR	/;"	d
H_CURR	/usr/include/histedit.h	/^#define	H_CURR	/;"	d
H_DEL	/usr/include/histedit.h	/^#define	H_DEL	/;"	d
H_DELDATA	/usr/include/histedit.h	/^#define	H_DELDATA	/;"	d
H_END	/usr/include/histedit.h	/^#define	H_END	/;"	d
H_ENTER	/usr/include/histedit.h	/^#define	H_ENTER	/;"	d
H_FIRST	/usr/include/histedit.h	/^#define	H_FIRST	/;"	d
H_FUNC	/usr/include/histedit.h	/^#define	H_FUNC	/;"	d
H_GETSIZE	/usr/include/histedit.h	/^#define	H_GETSIZE	/;"	d
H_GETUNIQUE	/usr/include/histedit.h	/^#define	H_GETUNIQUE	/;"	d
H_LAST	/usr/include/histedit.h	/^#define	H_LAST	/;"	d
H_LOAD	/usr/include/histedit.h	/^#define	H_LOAD	/;"	d
H_NEXT	/usr/include/histedit.h	/^#define	H_NEXT	/;"	d
H_NEXT_EVDATA	/usr/include/histedit.h	/^#define	H_NEXT_EVDATA	/;"	d
H_NEXT_EVENT	/usr/include/histedit.h	/^#define	H_NEXT_EVENT	/;"	d
H_NEXT_STR	/usr/include/histedit.h	/^#define	H_NEXT_STR	/;"	d
H_PREV	/usr/include/histedit.h	/^#define	H_PREV	/;"	d
H_PREV_EVENT	/usr/include/histedit.h	/^#define	H_PREV_EVENT	/;"	d
H_PREV_STR	/usr/include/histedit.h	/^#define	H_PREV_STR	/;"	d
H_REPLACE	/usr/include/histedit.h	/^#define	H_REPLACE	/;"	d
H_SAVE	/usr/include/histedit.h	/^#define	H_SAVE	/;"	d
H_SET	/usr/include/histedit.h	/^#define	H_SET	/;"	d
H_SETSIZE	/usr/include/histedit.h	/^#define	H_SETSIZE	/;"	d
H_SETUNIQUE	/usr/include/histedit.h	/^#define	H_SETUNIQUE	/;"	d
HistEvent	/usr/include/histedit.h	/^typedef struct HistEvent {$/;"	s
HistEvent	/usr/include/histedit.h	/^} HistEvent;$/;"	t	typeref:struct:HistEvent
HistEvent::num	/usr/include/histedit.h	/^	int		 num;$/;"	m	struct:HistEvent	access:public
HistEvent::str	/usr/include/histedit.h	/^	const char	*str;$/;"	m	struct:HistEvent	access:public
History	/usr/include/histedit.h	/^typedef struct history History;$/;"	t	typeref:struct:history
I	/usr/include/complex.h	/^#define I /;"	d
I	/usr/include/complex.h	/^#undef I$/;"	d
ICONV_GET_DISCARD_ILSEQ	/usr/include/iconv.h	/^#define ICONV_GET_DISCARD_ILSEQ /;"	d
ICONV_GET_TRANSLITERATE	/usr/include/iconv.h	/^#define ICONV_GET_TRANSLITERATE /;"	d
ICONV_SET_DISCARD_ILSEQ	/usr/include/iconv.h	/^#define ICONV_SET_DISCARD_ILSEQ /;"	d
ICONV_SET_FALLBACKS	/usr/include/iconv.h	/^#define ICONV_SET_FALLBACKS /;"	d
ICONV_SET_HOOKS	/usr/include/iconv.h	/^#define ICONV_SET_HOOKS /;"	d
ICONV_SET_TRANSLITERATE	/usr/include/iconv.h	/^#define ICONV_SET_TRANSLITERATE /;"	d
ICONV_TRIVIALP	/usr/include/iconv.h	/^#define ICONV_TRIVIALP /;"	d
ID_TYPE_GID	/usr/include/membership.h	/^#define ID_TYPE_GID	/;"	d
ID_TYPE_GROUPNAME	/usr/include/membership.h	/^#define ID_TYPE_GROUPNAME	/;"	d
ID_TYPE_GSS_EXPORT_NAME	/usr/include/membership.h	/^#define ID_TYPE_GSS_EXPORT_NAME	/;"	d
ID_TYPE_KERBEROS	/usr/include/membership.h	/^#define ID_TYPE_KERBEROS	/;"	d
ID_TYPE_SID	/usr/include/membership.h	/^#define ID_TYPE_SID	/;"	d
ID_TYPE_UID	/usr/include/membership.h	/^#define ID_TYPE_UID	/;"	d
ID_TYPE_USERNAME	/usr/include/membership.h	/^#define ID_TYPE_USERNAME	/;"	d
ID_TYPE_X509_DN	/usr/include/membership.h	/^#define ID_TYPE_X509_DN	/;"	d
IMPI_CLIENT_COLOR	/usr/include/mpi.h	/^    IMPI_CLIENT_COLOR,$/;"	e	enum:__anon77
IMPI_CLIENT_SIZE	/usr/include/mpi.h	/^    IMPI_CLIENT_SIZE,$/;"	e	enum:__anon77
IMPI_HOST_COLOR	/usr/include/mpi.h	/^    IMPI_HOST_COLOR$/;"	e	enum:__anon77
IMPI_HOST_SIZE	/usr/include/mpi.h	/^    IMPI_HOST_SIZE,$/;"	e	enum:__anon77
INIT_PROCESS	/usr/include/utmpx.h	/^#define INIT_PROCESS	/;"	d
INLINE	/usr/include/tcl.h	/^#   define INLINE$/;"	d
INSTAPI	/usr/include/odbcinst.h	/^#define INSTAPI /;"	d
INT16_C	/usr/include/stdint.h	/^#define INT16_C(/;"	d
INT16_MAX	/usr/include/stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	/usr/include/stdint.h	/^#define INT16_MIN /;"	d
INT32_C	/usr/include/stdint.h	/^#define INT32_C(/;"	d
INT32_MAX	/usr/include/stdint.h	/^#define INT32_MAX /;"	d
INT32_MIN	/usr/include/stdint.h	/^#define INT32_MIN /;"	d
INT64_C	/usr/include/stdint.h	/^#define INT64_C(/;"	d
INT64_MAX	/usr/include/stdint.h	/^#define INT64_MAX /;"	d
INT64_MIN	/usr/include/stdint.h	/^#define INT64_MIN /;"	d
INT8_C	/usr/include/stdint.h	/^#define INT8_C(/;"	d
INT8_MAX	/usr/include/stdint.h	/^#define INT8_MAX /;"	d
INT8_MIN	/usr/include/stdint.h	/^#define INT8_MIN /;"	d
INTMAX_C	/usr/include/stdint.h	/^#define INTMAX_C(/;"	d
INTMAX_MAX	/usr/include/stdint.h	/^#define INTMAX_MAX /;"	d
INTMAX_MIN	/usr/include/stdint.h	/^#define INTMAX_MIN /;"	d
INTPTR_MAX	/usr/include/stdint.h	/^#define INTPTR_MAX	/;"	d
INTPTR_MAX	/usr/include/stdint.h	/^#define INTPTR_MAX /;"	d
INTPTR_MIN	/usr/include/stdint.h	/^#define INTPTR_MIN	/;"	d
INTPTR_MIN	/usr/include/stdint.h	/^#define INTPTR_MIN /;"	d
INT_FAST16_MAX	/usr/include/stdint.h	/^#define INT_FAST16_MAX /;"	d
INT_FAST16_MIN	/usr/include/stdint.h	/^#define INT_FAST16_MIN /;"	d
INT_FAST32_MAX	/usr/include/stdint.h	/^#define INT_FAST32_MAX /;"	d
INT_FAST32_MIN	/usr/include/stdint.h	/^#define INT_FAST32_MIN /;"	d
INT_FAST64_MAX	/usr/include/stdint.h	/^#define INT_FAST64_MAX /;"	d
INT_FAST64_MIN	/usr/include/stdint.h	/^#define INT_FAST64_MIN /;"	d
INT_FAST8_MAX	/usr/include/stdint.h	/^#define INT_FAST8_MAX /;"	d
INT_FAST8_MIN	/usr/include/stdint.h	/^#define INT_FAST8_MIN /;"	d
INT_LEAST16_MAX	/usr/include/stdint.h	/^#define INT_LEAST16_MAX /;"	d
INT_LEAST16_MIN	/usr/include/stdint.h	/^#define INT_LEAST16_MIN /;"	d
INT_LEAST32_MAX	/usr/include/stdint.h	/^#define INT_LEAST32_MAX /;"	d
INT_LEAST32_MIN	/usr/include/stdint.h	/^#define INT_LEAST32_MIN /;"	d
INT_LEAST64_MAX	/usr/include/stdint.h	/^#define INT_LEAST64_MAX /;"	d
INT_LEAST64_MIN	/usr/include/stdint.h	/^#define INT_LEAST64_MIN /;"	d
INT_LEAST8_MAX	/usr/include/stdint.h	/^#define INT_LEAST8_MAX /;"	d
INT_LEAST8_MIN	/usr/include/stdint.h	/^#define INT_LEAST8_MIN /;"	d
IOV_MAX	/usr/include/limits.h	/^#define IOV_MAX	/;"	d
IPPORT_RESERVED	/usr/include/netdb.h	/^#define	IPPORT_RESERVED	/;"	d
IPV6_ABITS	/usr/include/tcpd.h	/^#define IPV6_ABITS /;"	d
ISDN	/usr/include/dns_util.h	/^		dns_ISDN_record_t *ISDN;$/;"	m	union:__anon41::__anon42	access:public
IS_NEG1	/usr/include/tic.h	/^#define IS_NEG1(/;"	d
IS_NEG2	/usr/include/tic.h	/^#define IS_NEG2(/;"	d
IS_TIC_MAGIC	/usr/include/tic.h	/^#define IS_TIC_MAGIC(/;"	d
ITEM	/usr/include/menu.h	/^} ITEM;$/;"	t	typeref:struct:tagITEM
Item_Options	/usr/include/menu.h	/^typedef int Item_Options;$/;"	t
JOIN	/usr/include/tcl.h	/^#  define JOIN(/;"	d
JOIN1	/usr/include/tcl.h	/^#  define JOIN1(/;"	d
JUSTIFY_CENTER	/usr/include/form.h	/^#define JUSTIFY_CENTER	/;"	d
JUSTIFY_LEFT	/usr/include/form.h	/^#define JUSTIFY_LEFT	/;"	d
JUSTIFY_RIGHT	/usr/include/form.h	/^#define JUSTIFY_RIGHT	/;"	d
KARATSUBA_MUL_CUTOFF	/usr/include/tclTomMath.h	/^MODULE_SCOPE int KARATSUBA_MUL_CUTOFF,$/;"	v
KARATSUBA_MUL_CUTOFF	/usr/include/tclTomMathDecls.h	/^#define KARATSUBA_MUL_CUTOFF /;"	d
KARATSUBA_SQR_CUTOFF	/usr/include/tclTomMath.h	/^           KARATSUBA_SQR_CUTOFF,$/;"	v
KARATSUBA_SQR_CUTOFF	/usr/include/tclTomMathDecls.h	/^#define KARATSUBA_SQR_CUTOFF /;"	d
KEY_A1	/usr/include/curses.h	/^#define KEY_A1	/;"	d
KEY_A1	/usr/include/ncurses.h	/^#define KEY_A1	/;"	d
KEY_A3	/usr/include/curses.h	/^#define KEY_A3	/;"	d
KEY_A3	/usr/include/ncurses.h	/^#define KEY_A3	/;"	d
KEY_B2	/usr/include/curses.h	/^#define KEY_B2	/;"	d
KEY_B2	/usr/include/ncurses.h	/^#define KEY_B2	/;"	d
KEY_BACKSPACE	/usr/include/curses.h	/^#define KEY_BACKSPACE	/;"	d
KEY_BACKSPACE	/usr/include/ncurses.h	/^#define KEY_BACKSPACE	/;"	d
KEY_BEG	/usr/include/curses.h	/^#define KEY_BEG	/;"	d
KEY_BEG	/usr/include/ncurses.h	/^#define KEY_BEG	/;"	d
KEY_BREAK	/usr/include/curses.h	/^#define KEY_BREAK	/;"	d
KEY_BREAK	/usr/include/ncurses.h	/^#define KEY_BREAK	/;"	d
KEY_BTAB	/usr/include/curses.h	/^#define KEY_BTAB	/;"	d
KEY_BTAB	/usr/include/ncurses.h	/^#define KEY_BTAB	/;"	d
KEY_C1	/usr/include/curses.h	/^#define KEY_C1	/;"	d
KEY_C1	/usr/include/ncurses.h	/^#define KEY_C1	/;"	d
KEY_C3	/usr/include/curses.h	/^#define KEY_C3	/;"	d
KEY_C3	/usr/include/ncurses.h	/^#define KEY_C3	/;"	d
KEY_CANCEL	/usr/include/curses.h	/^#define KEY_CANCEL	/;"	d
KEY_CANCEL	/usr/include/ncurses.h	/^#define KEY_CANCEL	/;"	d
KEY_CATAB	/usr/include/curses.h	/^#define KEY_CATAB	/;"	d
KEY_CATAB	/usr/include/ncurses.h	/^#define KEY_CATAB	/;"	d
KEY_CLEAR	/usr/include/curses.h	/^#define KEY_CLEAR	/;"	d
KEY_CLEAR	/usr/include/ncurses.h	/^#define KEY_CLEAR	/;"	d
KEY_CLOSE	/usr/include/curses.h	/^#define KEY_CLOSE	/;"	d
KEY_CLOSE	/usr/include/ncurses.h	/^#define KEY_CLOSE	/;"	d
KEY_CODE_YES	/usr/include/curses.h	/^#define KEY_CODE_YES	/;"	d
KEY_CODE_YES	/usr/include/ncurses.h	/^#define KEY_CODE_YES	/;"	d
KEY_COMMAND	/usr/include/curses.h	/^#define KEY_COMMAND	/;"	d
KEY_COMMAND	/usr/include/ncurses.h	/^#define KEY_COMMAND	/;"	d
KEY_COPY	/usr/include/curses.h	/^#define KEY_COPY	/;"	d
KEY_COPY	/usr/include/ncurses.h	/^#define KEY_COPY	/;"	d
KEY_CREATE	/usr/include/curses.h	/^#define KEY_CREATE	/;"	d
KEY_CREATE	/usr/include/ncurses.h	/^#define KEY_CREATE	/;"	d
KEY_CTAB	/usr/include/curses.h	/^#define KEY_CTAB	/;"	d
KEY_CTAB	/usr/include/ncurses.h	/^#define KEY_CTAB	/;"	d
KEY_DC	/usr/include/curses.h	/^#define KEY_DC	/;"	d
KEY_DC	/usr/include/ncurses.h	/^#define KEY_DC	/;"	d
KEY_DL	/usr/include/curses.h	/^#define KEY_DL	/;"	d
KEY_DL	/usr/include/ncurses.h	/^#define KEY_DL	/;"	d
KEY_DOWN	/usr/include/curses.h	/^#define KEY_DOWN	/;"	d
KEY_DOWN	/usr/include/ncurses.h	/^#define KEY_DOWN	/;"	d
KEY_EIC	/usr/include/curses.h	/^#define KEY_EIC	/;"	d
KEY_EIC	/usr/include/ncurses.h	/^#define KEY_EIC	/;"	d
KEY_END	/usr/include/curses.h	/^#define KEY_END	/;"	d
KEY_END	/usr/include/ncurses.h	/^#define KEY_END	/;"	d
KEY_ENTER	/usr/include/curses.h	/^#define KEY_ENTER	/;"	d
KEY_ENTER	/usr/include/ncurses.h	/^#define KEY_ENTER	/;"	d
KEY_EOL	/usr/include/curses.h	/^#define KEY_EOL	/;"	d
KEY_EOL	/usr/include/ncurses.h	/^#define KEY_EOL	/;"	d
KEY_EOS	/usr/include/curses.h	/^#define KEY_EOS	/;"	d
KEY_EOS	/usr/include/ncurses.h	/^#define KEY_EOS	/;"	d
KEY_EVENT	/usr/include/curses.h	/^#define KEY_EVENT	/;"	d
KEY_EVENT	/usr/include/ncurses.h	/^#define KEY_EVENT	/;"	d
KEY_EXIT	/usr/include/curses.h	/^#define KEY_EXIT	/;"	d
KEY_EXIT	/usr/include/ncurses.h	/^#define KEY_EXIT	/;"	d
KEY_F	/usr/include/curses.h	/^#define KEY_F(/;"	d
KEY_F	/usr/include/ncurses.h	/^#define KEY_F(/;"	d
KEY_F0	/usr/include/curses.h	/^#define KEY_F0	/;"	d
KEY_F0	/usr/include/ncurses.h	/^#define KEY_F0	/;"	d
KEY_FIND	/usr/include/curses.h	/^#define KEY_FIND	/;"	d
KEY_FIND	/usr/include/ncurses.h	/^#define KEY_FIND	/;"	d
KEY_HELP	/usr/include/curses.h	/^#define KEY_HELP	/;"	d
KEY_HELP	/usr/include/ncurses.h	/^#define KEY_HELP	/;"	d
KEY_HOME	/usr/include/curses.h	/^#define KEY_HOME	/;"	d
KEY_HOME	/usr/include/ncurses.h	/^#define KEY_HOME	/;"	d
KEY_IC	/usr/include/curses.h	/^#define KEY_IC	/;"	d
KEY_IC	/usr/include/ncurses.h	/^#define KEY_IC	/;"	d
KEY_IL	/usr/include/curses.h	/^#define KEY_IL	/;"	d
KEY_IL	/usr/include/ncurses.h	/^#define KEY_IL	/;"	d
KEY_LEFT	/usr/include/curses.h	/^#define KEY_LEFT	/;"	d
KEY_LEFT	/usr/include/ncurses.h	/^#define KEY_LEFT	/;"	d
KEY_LL	/usr/include/curses.h	/^#define KEY_LL	/;"	d
KEY_LL	/usr/include/ncurses.h	/^#define KEY_LL	/;"	d
KEY_MARK	/usr/include/curses.h	/^#define KEY_MARK	/;"	d
KEY_MARK	/usr/include/ncurses.h	/^#define KEY_MARK	/;"	d
KEY_MAX	/usr/include/curses.h	/^#define KEY_MAX	/;"	d
KEY_MAX	/usr/include/ncurses.h	/^#define KEY_MAX	/;"	d
KEY_MESSAGE	/usr/include/curses.h	/^#define KEY_MESSAGE	/;"	d
KEY_MESSAGE	/usr/include/ncurses.h	/^#define KEY_MESSAGE	/;"	d
KEY_MIN	/usr/include/curses.h	/^#define KEY_MIN	/;"	d
KEY_MIN	/usr/include/ncurses.h	/^#define KEY_MIN	/;"	d
KEY_MOUSE	/usr/include/curses.h	/^#define KEY_MOUSE	/;"	d
KEY_MOUSE	/usr/include/ncurses.h	/^#define KEY_MOUSE	/;"	d
KEY_MOVE	/usr/include/curses.h	/^#define KEY_MOVE	/;"	d
KEY_MOVE	/usr/include/ncurses.h	/^#define KEY_MOVE	/;"	d
KEY_NEXT	/usr/include/curses.h	/^#define KEY_NEXT	/;"	d
KEY_NEXT	/usr/include/ncurses.h	/^#define KEY_NEXT	/;"	d
KEY_NPAGE	/usr/include/curses.h	/^#define KEY_NPAGE	/;"	d
KEY_NPAGE	/usr/include/ncurses.h	/^#define KEY_NPAGE	/;"	d
KEY_OPEN	/usr/include/curses.h	/^#define KEY_OPEN	/;"	d
KEY_OPEN	/usr/include/ncurses.h	/^#define KEY_OPEN	/;"	d
KEY_OPTIONS	/usr/include/curses.h	/^#define KEY_OPTIONS	/;"	d
KEY_OPTIONS	/usr/include/ncurses.h	/^#define KEY_OPTIONS	/;"	d
KEY_PPAGE	/usr/include/curses.h	/^#define KEY_PPAGE	/;"	d
KEY_PPAGE	/usr/include/ncurses.h	/^#define KEY_PPAGE	/;"	d
KEY_PREVIOUS	/usr/include/curses.h	/^#define KEY_PREVIOUS	/;"	d
KEY_PREVIOUS	/usr/include/ncurses.h	/^#define KEY_PREVIOUS	/;"	d
KEY_PRINT	/usr/include/curses.h	/^#define KEY_PRINT	/;"	d
KEY_PRINT	/usr/include/ncurses.h	/^#define KEY_PRINT	/;"	d
KEY_REDO	/usr/include/curses.h	/^#define KEY_REDO	/;"	d
KEY_REDO	/usr/include/ncurses.h	/^#define KEY_REDO	/;"	d
KEY_REFERENCE	/usr/include/curses.h	/^#define KEY_REFERENCE	/;"	d
KEY_REFERENCE	/usr/include/ncurses.h	/^#define KEY_REFERENCE	/;"	d
KEY_REFRESH	/usr/include/curses.h	/^#define KEY_REFRESH	/;"	d
KEY_REFRESH	/usr/include/ncurses.h	/^#define KEY_REFRESH	/;"	d
KEY_REPLACE	/usr/include/curses.h	/^#define KEY_REPLACE	/;"	d
KEY_REPLACE	/usr/include/ncurses.h	/^#define KEY_REPLACE	/;"	d
KEY_RESET	/usr/include/curses.h	/^#define KEY_RESET	/;"	d
KEY_RESET	/usr/include/ncurses.h	/^#define KEY_RESET	/;"	d
KEY_RESIZE	/usr/include/curses.h	/^#define KEY_RESIZE	/;"	d
KEY_RESIZE	/usr/include/ncurses.h	/^#define KEY_RESIZE	/;"	d
KEY_RESTART	/usr/include/curses.h	/^#define KEY_RESTART	/;"	d
KEY_RESTART	/usr/include/ncurses.h	/^#define KEY_RESTART	/;"	d
KEY_RESUME	/usr/include/curses.h	/^#define KEY_RESUME	/;"	d
KEY_RESUME	/usr/include/ncurses.h	/^#define KEY_RESUME	/;"	d
KEY_RIGHT	/usr/include/curses.h	/^#define KEY_RIGHT	/;"	d
KEY_RIGHT	/usr/include/ncurses.h	/^#define KEY_RIGHT	/;"	d
KEY_SAVE	/usr/include/curses.h	/^#define KEY_SAVE	/;"	d
KEY_SAVE	/usr/include/ncurses.h	/^#define KEY_SAVE	/;"	d
KEY_SBEG	/usr/include/curses.h	/^#define KEY_SBEG	/;"	d
KEY_SBEG	/usr/include/ncurses.h	/^#define KEY_SBEG	/;"	d
KEY_SCANCEL	/usr/include/curses.h	/^#define KEY_SCANCEL	/;"	d
KEY_SCANCEL	/usr/include/ncurses.h	/^#define KEY_SCANCEL	/;"	d
KEY_SCOMMAND	/usr/include/curses.h	/^#define KEY_SCOMMAND	/;"	d
KEY_SCOMMAND	/usr/include/ncurses.h	/^#define KEY_SCOMMAND	/;"	d
KEY_SCOPY	/usr/include/curses.h	/^#define KEY_SCOPY	/;"	d
KEY_SCOPY	/usr/include/ncurses.h	/^#define KEY_SCOPY	/;"	d
KEY_SCREATE	/usr/include/curses.h	/^#define KEY_SCREATE	/;"	d
KEY_SCREATE	/usr/include/ncurses.h	/^#define KEY_SCREATE	/;"	d
KEY_SDC	/usr/include/curses.h	/^#define KEY_SDC	/;"	d
KEY_SDC	/usr/include/ncurses.h	/^#define KEY_SDC	/;"	d
KEY_SDL	/usr/include/curses.h	/^#define KEY_SDL	/;"	d
KEY_SDL	/usr/include/ncurses.h	/^#define KEY_SDL	/;"	d
KEY_SELECT	/usr/include/curses.h	/^#define KEY_SELECT	/;"	d
KEY_SELECT	/usr/include/ncurses.h	/^#define KEY_SELECT	/;"	d
KEY_SEND	/usr/include/curses.h	/^#define KEY_SEND	/;"	d
KEY_SEND	/usr/include/ncurses.h	/^#define KEY_SEND	/;"	d
KEY_SEOL	/usr/include/curses.h	/^#define KEY_SEOL	/;"	d
KEY_SEOL	/usr/include/ncurses.h	/^#define KEY_SEOL	/;"	d
KEY_SEXIT	/usr/include/curses.h	/^#define KEY_SEXIT	/;"	d
KEY_SEXIT	/usr/include/ncurses.h	/^#define KEY_SEXIT	/;"	d
KEY_SF	/usr/include/curses.h	/^#define KEY_SF	/;"	d
KEY_SF	/usr/include/ncurses.h	/^#define KEY_SF	/;"	d
KEY_SFIND	/usr/include/curses.h	/^#define KEY_SFIND	/;"	d
KEY_SFIND	/usr/include/ncurses.h	/^#define KEY_SFIND	/;"	d
KEY_SHELP	/usr/include/curses.h	/^#define KEY_SHELP	/;"	d
KEY_SHELP	/usr/include/ncurses.h	/^#define KEY_SHELP	/;"	d
KEY_SHOME	/usr/include/curses.h	/^#define KEY_SHOME	/;"	d
KEY_SHOME	/usr/include/ncurses.h	/^#define KEY_SHOME	/;"	d
KEY_SIC	/usr/include/curses.h	/^#define KEY_SIC	/;"	d
KEY_SIC	/usr/include/ncurses.h	/^#define KEY_SIC	/;"	d
KEY_SLEFT	/usr/include/curses.h	/^#define KEY_SLEFT	/;"	d
KEY_SLEFT	/usr/include/ncurses.h	/^#define KEY_SLEFT	/;"	d
KEY_SMESSAGE	/usr/include/curses.h	/^#define KEY_SMESSAGE	/;"	d
KEY_SMESSAGE	/usr/include/ncurses.h	/^#define KEY_SMESSAGE	/;"	d
KEY_SMOVE	/usr/include/curses.h	/^#define KEY_SMOVE	/;"	d
KEY_SMOVE	/usr/include/ncurses.h	/^#define KEY_SMOVE	/;"	d
KEY_SNEXT	/usr/include/curses.h	/^#define KEY_SNEXT	/;"	d
KEY_SNEXT	/usr/include/ncurses.h	/^#define KEY_SNEXT	/;"	d
KEY_SOPTIONS	/usr/include/curses.h	/^#define KEY_SOPTIONS	/;"	d
KEY_SOPTIONS	/usr/include/ncurses.h	/^#define KEY_SOPTIONS	/;"	d
KEY_SPREVIOUS	/usr/include/curses.h	/^#define KEY_SPREVIOUS	/;"	d
KEY_SPREVIOUS	/usr/include/ncurses.h	/^#define KEY_SPREVIOUS	/;"	d
KEY_SPRINT	/usr/include/curses.h	/^#define KEY_SPRINT	/;"	d
KEY_SPRINT	/usr/include/ncurses.h	/^#define KEY_SPRINT	/;"	d
KEY_SR	/usr/include/curses.h	/^#define KEY_SR	/;"	d
KEY_SR	/usr/include/ncurses.h	/^#define KEY_SR	/;"	d
KEY_SREDO	/usr/include/curses.h	/^#define KEY_SREDO	/;"	d
KEY_SREDO	/usr/include/ncurses.h	/^#define KEY_SREDO	/;"	d
KEY_SREPLACE	/usr/include/curses.h	/^#define KEY_SREPLACE	/;"	d
KEY_SREPLACE	/usr/include/ncurses.h	/^#define KEY_SREPLACE	/;"	d
KEY_SRESET	/usr/include/curses.h	/^#define KEY_SRESET	/;"	d
KEY_SRESET	/usr/include/ncurses.h	/^#define KEY_SRESET	/;"	d
KEY_SRIGHT	/usr/include/curses.h	/^#define KEY_SRIGHT	/;"	d
KEY_SRIGHT	/usr/include/ncurses.h	/^#define KEY_SRIGHT	/;"	d
KEY_SRSUME	/usr/include/curses.h	/^#define KEY_SRSUME	/;"	d
KEY_SRSUME	/usr/include/ncurses.h	/^#define KEY_SRSUME	/;"	d
KEY_SSAVE	/usr/include/curses.h	/^#define KEY_SSAVE	/;"	d
KEY_SSAVE	/usr/include/ncurses.h	/^#define KEY_SSAVE	/;"	d
KEY_SSUSPEND	/usr/include/curses.h	/^#define KEY_SSUSPEND	/;"	d
KEY_SSUSPEND	/usr/include/ncurses.h	/^#define KEY_SSUSPEND	/;"	d
KEY_STAB	/usr/include/curses.h	/^#define KEY_STAB	/;"	d
KEY_STAB	/usr/include/ncurses.h	/^#define KEY_STAB	/;"	d
KEY_SUNDO	/usr/include/curses.h	/^#define KEY_SUNDO	/;"	d
KEY_SUNDO	/usr/include/ncurses.h	/^#define KEY_SUNDO	/;"	d
KEY_SUSPEND	/usr/include/curses.h	/^#define KEY_SUSPEND	/;"	d
KEY_SUSPEND	/usr/include/ncurses.h	/^#define KEY_SUSPEND	/;"	d
KEY_UNDO	/usr/include/curses.h	/^#define KEY_UNDO	/;"	d
KEY_UNDO	/usr/include/ncurses.h	/^#define KEY_UNDO	/;"	d
KEY_UP	/usr/include/curses.h	/^#define KEY_UP	/;"	d
KEY_UP	/usr/include/ncurses.h	/^#define KEY_UP	/;"	d
KRB5_CALLCONV	/usr/include/profile.h	/^#define KRB5_CALLCONV$/;"	d
KRB5_CALLCONV_C	/usr/include/profile.h	/^#define KRB5_CALLCONV_C$/;"	d
LAUNCH_DATA_ARRAY	/usr/include/launch.h	/^	LAUNCH_DATA_ARRAY,$/;"	e	enum:__anon67
LAUNCH_DATA_BOOL	/usr/include/launch.h	/^	LAUNCH_DATA_BOOL,$/;"	e	enum:__anon67
LAUNCH_DATA_DICTIONARY	/usr/include/launch.h	/^	LAUNCH_DATA_DICTIONARY = 1,$/;"	e	enum:__anon67
LAUNCH_DATA_ERRNO	/usr/include/launch.h	/^	LAUNCH_DATA_ERRNO,$/;"	e	enum:__anon67
LAUNCH_DATA_FD	/usr/include/launch.h	/^	LAUNCH_DATA_FD,$/;"	e	enum:__anon67
LAUNCH_DATA_INTEGER	/usr/include/launch.h	/^	LAUNCH_DATA_INTEGER,$/;"	e	enum:__anon67
LAUNCH_DATA_MACHPORT	/usr/include/launch.h	/^	LAUNCH_DATA_MACHPORT,$/;"	e	enum:__anon67
LAUNCH_DATA_OPAQUE	/usr/include/launch.h	/^	LAUNCH_DATA_OPAQUE,$/;"	e	enum:__anon67
LAUNCH_DATA_REAL	/usr/include/launch.h	/^	LAUNCH_DATA_REAL,$/;"	e	enum:__anon67
LAUNCH_DATA_STRING	/usr/include/launch.h	/^	LAUNCH_DATA_STRING,$/;"	e	enum:__anon67
LAUNCH_JOBINETDCOMPATIBILITY_WAIT	/usr/include/launch.h	/^#define LAUNCH_JOBINETDCOMPATIBILITY_WAIT	/;"	d
LAUNCH_JOBKEY_ABANDONPROCESSGROUP	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_ABANDONPROCESSGROUP	/;"	d
LAUNCH_JOBKEY_BONJOURFDS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_BONJOURFDS	/;"	d
LAUNCH_JOBKEY_CAL_DAY	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_CAL_DAY	/;"	d
LAUNCH_JOBKEY_CAL_HOUR	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_CAL_HOUR	/;"	d
LAUNCH_JOBKEY_CAL_MINUTE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_CAL_MINUTE	/;"	d
LAUNCH_JOBKEY_CAL_MONTH	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_CAL_MONTH	/;"	d
LAUNCH_JOBKEY_CAL_WEEKDAY	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_CAL_WEEKDAY	/;"	d
LAUNCH_JOBKEY_DEBUG	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_DEBUG	/;"	d
LAUNCH_JOBKEY_DISABLED	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_DISABLED	/;"	d
LAUNCH_JOBKEY_DISABLED_MACHINETYPE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_DISABLED_MACHINETYPE	/;"	d
LAUNCH_JOBKEY_DISABLED_MODELNAME	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_DISABLED_MODELNAME	/;"	d
LAUNCH_JOBKEY_ENABLEGLOBBING	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_ENABLEGLOBBING	/;"	d
LAUNCH_JOBKEY_ENABLETRANSACTIONS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_ENABLETRANSACTIONS	/;"	d
LAUNCH_JOBKEY_ENVIRONMENTVARIABLES	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_ENVIRONMENTVARIABLES	/;"	d
LAUNCH_JOBKEY_EXITTIMEOUT	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_EXITTIMEOUT	/;"	d
LAUNCH_JOBKEY_GROUPNAME	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_GROUPNAME	/;"	d
LAUNCH_JOBKEY_HARDRESOURCELIMITS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_HARDRESOURCELIMITS	/;"	d
LAUNCH_JOBKEY_HOPEFULLYEXITSFIRST	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_HOPEFULLYEXITSFIRST	/;"	d
LAUNCH_JOBKEY_HOPEFULLYEXITSLAST	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_HOPEFULLYEXITSLAST /;"	d
LAUNCH_JOBKEY_IGNOREPROCESSGROUPATSHUTDOWN	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_IGNOREPROCESSGROUPATSHUTDOWN	/;"	d
LAUNCH_JOBKEY_INETDCOMPATIBILITY	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_INETDCOMPATIBILITY	/;"	d
LAUNCH_JOBKEY_INITGROUPS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_INITGROUPS	/;"	d
LAUNCH_JOBKEY_KEEPALIVE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE	/;"	d
LAUNCH_JOBKEY_KEEPALIVE_AFTERINITIALDEMAND	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE_AFTERINITIALDEMAND	/;"	d
LAUNCH_JOBKEY_KEEPALIVE_NETWORKSTATE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE_NETWORKSTATE	/;"	d
LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBACTIVE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBACTIVE	/;"	d
LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBENABLED	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBENABLED	/;"	d
LAUNCH_JOBKEY_KEEPALIVE_PATHSTATE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE_PATHSTATE	/;"	d
LAUNCH_JOBKEY_KEEPALIVE_SUCCESSFULEXIT	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_KEEPALIVE_SUCCESSFULEXIT	/;"	d
LAUNCH_JOBKEY_LABEL	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LABEL	/;"	d
LAUNCH_JOBKEY_LASTEXITSTATUS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LASTEXITSTATUS	/;"	d
LAUNCH_JOBKEY_LAUNCHONLYONCE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LAUNCHONLYONCE	/;"	d
LAUNCH_JOBKEY_LIMITLOADFROMHOSTS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LIMITLOADFROMHOSTS	/;"	d
LAUNCH_JOBKEY_LIMITLOADTOHOSTS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LIMITLOADTOHOSTS	/;"	d
LAUNCH_JOBKEY_LIMITLOADTOSESSIONTYPE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LIMITLOADTOSESSIONTYPE	/;"	d
LAUNCH_JOBKEY_LOWPRIORITYIO	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_LOWPRIORITYIO	/;"	d
LAUNCH_JOBKEY_MACHSERVICELOOKUPPOLICIES	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_MACHSERVICELOOKUPPOLICIES	/;"	d
LAUNCH_JOBKEY_MACHSERVICES	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_MACHSERVICES	/;"	d
LAUNCH_JOBKEY_MACH_DRAINMESSAGESONCRASH	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_MACH_DRAINMESSAGESONCRASH	/;"	d
LAUNCH_JOBKEY_MACH_HIDEUNTILCHECKIN	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_MACH_HIDEUNTILCHECKIN	/;"	d
LAUNCH_JOBKEY_MACH_RESETATCLOSE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_MACH_RESETATCLOSE	/;"	d
LAUNCH_JOBKEY_NICE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_NICE	/;"	d
LAUNCH_JOBKEY_ONDEMAND	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_ONDEMAND	/;"	d
LAUNCH_JOBKEY_PID	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_PID	/;"	d
LAUNCH_JOBKEY_POLICIES	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_POLICIES	/;"	d
LAUNCH_JOBKEY_PROGRAM	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_PROGRAM	/;"	d
LAUNCH_JOBKEY_PROGRAMARGUMENTS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_PROGRAMARGUMENTS	/;"	d
LAUNCH_JOBKEY_QUEUEDIRECTORIES	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_QUEUEDIRECTORIES	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_CORE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_CORE	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_CPU	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_CPU	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_DATA	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_DATA	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_FSIZE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_FSIZE	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_MEMLOCK	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_MEMLOCK	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_NOFILE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_NOFILE	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_NPROC	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_NPROC	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_RSS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_RSS	/;"	d
LAUNCH_JOBKEY_RESOURCELIMIT_STACK	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RESOURCELIMIT_STACK	/;"	d
LAUNCH_JOBKEY_ROOTDIRECTORY	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_ROOTDIRECTORY	/;"	d
LAUNCH_JOBKEY_RUNATLOAD	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_RUNATLOAD	/;"	d
LAUNCH_JOBKEY_SESSIONCREATE	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_SESSIONCREATE	/;"	d
LAUNCH_JOBKEY_SOCKETS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_SOCKETS	/;"	d
LAUNCH_JOBKEY_SOFTRESOURCELIMITS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_SOFTRESOURCELIMITS	/;"	d
LAUNCH_JOBKEY_STANDARDERRORPATH	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_STANDARDERRORPATH	/;"	d
LAUNCH_JOBKEY_STANDARDINPATH	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_STANDARDINPATH	/;"	d
LAUNCH_JOBKEY_STANDARDOUTPATH	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_STANDARDOUTPATH	/;"	d
LAUNCH_JOBKEY_STARTCALENDARINTERVAL	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_STARTCALENDARINTERVAL	/;"	d
LAUNCH_JOBKEY_STARTINTERVAL	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_STARTINTERVAL	/;"	d
LAUNCH_JOBKEY_STARTONMOUNT	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_STARTONMOUNT	/;"	d
LAUNCH_JOBKEY_THROTTLEINTERVAL	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_THROTTLEINTERVAL	/;"	d
LAUNCH_JOBKEY_TIMEOUT	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_TIMEOUT	/;"	d
LAUNCH_JOBKEY_UMASK	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_UMASK	/;"	d
LAUNCH_JOBKEY_USERENVIRONMENTVARIABLES	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_USERENVIRONMENTVARIABLES	/;"	d
LAUNCH_JOBKEY_USERNAME	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_USERNAME	/;"	d
LAUNCH_JOBKEY_WAITFORDEBUGGER	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_WAITFORDEBUGGER	/;"	d
LAUNCH_JOBKEY_WATCHPATHS	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_WATCHPATHS	/;"	d
LAUNCH_JOBKEY_WORKINGDIRECTORY	/usr/include/launch.h	/^#define LAUNCH_JOBKEY_WORKINGDIRECTORY	/;"	d
LAUNCH_JOBPOLICY_DENYCREATINGOTHERJOBS	/usr/include/launch.h	/^#define LAUNCH_JOBPOLICY_DENYCREATINGOTHERJOBS	/;"	d
LAUNCH_JOBSOCKETKEY_BONJOUR	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_BONJOUR	/;"	d
LAUNCH_JOBSOCKETKEY_FAMILY	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_FAMILY	/;"	d
LAUNCH_JOBSOCKETKEY_MULTICASTGROUP	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_MULTICASTGROUP	/;"	d
LAUNCH_JOBSOCKETKEY_NODENAME	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_NODENAME	/;"	d
LAUNCH_JOBSOCKETKEY_PASSIVE	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_PASSIVE	/;"	d
LAUNCH_JOBSOCKETKEY_PATHMODE	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_PATHMODE	/;"	d
LAUNCH_JOBSOCKETKEY_PATHNAME	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_PATHNAME	/;"	d
LAUNCH_JOBSOCKETKEY_PROTOCOL	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_PROTOCOL	/;"	d
LAUNCH_JOBSOCKETKEY_SECUREWITHKEY	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_SECUREWITHKEY	/;"	d
LAUNCH_JOBSOCKETKEY_SERVICENAME	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_SERVICENAME	/;"	d
LAUNCH_JOBSOCKETKEY_TYPE	/usr/include/launch.h	/^#define LAUNCH_JOBSOCKETKEY_TYPE	/;"	d
LAUNCH_KEY_CHECKIN	/usr/include/launch.h	/^#define LAUNCH_KEY_CHECKIN	/;"	d
LAUNCH_KEY_GETJOB	/usr/include/launch.h	/^#define LAUNCH_KEY_GETJOB	/;"	d
LAUNCH_KEY_GETJOBS	/usr/include/launch.h	/^#define LAUNCH_KEY_GETJOBS	/;"	d
LAUNCH_KEY_REMOVEJOB	/usr/include/launch.h	/^#define LAUNCH_KEY_REMOVEJOB	/;"	d
LAUNCH_KEY_STARTJOB	/usr/include/launch.h	/^#define LAUNCH_KEY_STARTJOB	/;"	d
LAUNCH_KEY_STOPJOB	/usr/include/launch.h	/^#define LAUNCH_KEY_STOPJOB	/;"	d
LAUNCH_KEY_SUBMITJOB	/usr/include/launch.h	/^#define LAUNCH_KEY_SUBMITJOB	/;"	d
LBER_BIG_TAG_MASK	/usr/include/lber.h	/^#define LBER_BIG_TAG_MASK	/;"	d
LBER_BITSTRING	/usr/include/lber.h	/^#define LBER_BITSTRING	/;"	d
LBER_BOOLEAN	/usr/include/lber.h	/^#define LBER_BOOLEAN	/;"	d
LBER_BV_ALLOC	/usr/include/lber.h	/^#define	LBER_BV_ALLOC	/;"	d
LBER_BV_NOTERM	/usr/include/lber.h	/^#define	LBER_BV_NOTERM	/;"	d
LBER_CLASS_APPLICATION	/usr/include/lber.h	/^#define LBER_CLASS_APPLICATION	/;"	d
LBER_CLASS_CONTEXT	/usr/include/lber.h	/^#define LBER_CLASS_CONTEXT	/;"	d
LBER_CLASS_MASK	/usr/include/lber.h	/^#define LBER_CLASS_MASK	/;"	d
LBER_CLASS_PRIVATE	/usr/include/lber.h	/^#define LBER_CLASS_PRIVATE	/;"	d
LBER_CLASS_UNIVERSAL	/usr/include/lber.h	/^#define LBER_CLASS_UNIVERSAL	/;"	d
LBER_CONSTRUCTED	/usr/include/lber.h	/^#define LBER_CONSTRUCTED	/;"	d
LBER_DEFAULT	/usr/include/lber.h	/^#define LBER_DEFAULT	/;"	d
LBER_ENCODING_MASK	/usr/include/lber.h	/^#define LBER_ENCODING_MASK	/;"	d
LBER_ENUMERATED	/usr/include/lber.h	/^#define LBER_ENUMERATED	/;"	d
LBER_ERROR	/usr/include/lber.h	/^#define LBER_ERROR	/;"	d
LBER_ERROR_MEMORY	/usr/include/lber.h	/^#define LBER_ERROR_MEMORY	/;"	d
LBER_ERROR_NONE	/usr/include/lber.h	/^#define LBER_ERROR_NONE	/;"	d
LBER_ERROR_PARAM	/usr/include/lber.h	/^#define LBER_ERROR_PARAM	/;"	d
LBER_F	/usr/include/ldap_cdefs.h	/^#	define LBER_F(/;"	d
LBER_FLUSH_FREE_ALWAYS	/usr/include/lber.h	/^#define LBER_FLUSH_FREE_ALWAYS	/;"	d
LBER_FLUSH_FREE_NEVER	/usr/include/lber.h	/^#define LBER_FLUSH_FREE_NEVER	/;"	d
LBER_FLUSH_FREE_ON_ERROR	/usr/include/lber.h	/^#define LBER_FLUSH_FREE_ON_ERROR	/;"	d
LBER_FLUSH_FREE_ON_SUCCESS	/usr/include/lber.h	/^#define LBER_FLUSH_FREE_ON_SUCCESS	/;"	d
LBER_INTEGER	/usr/include/lber.h	/^#define LBER_INTEGER	/;"	d
LBER_INT_T	/usr/include/lber_types.h	/^#define LBER_INT_T /;"	d
LBER_INVALID	/usr/include/lber.h	/^#define LBER_INVALID(/;"	d
LBER_LEN_T	/usr/include/lber_types.h	/^#define LBER_LEN_T /;"	d
LBER_MORE_TAG_MASK	/usr/include/lber.h	/^#define LBER_MORE_TAG_MASK	/;"	d
LBER_NULL	/usr/include/lber.h	/^#define LBER_NULL	/;"	d
LBER_OCTETSTRING	/usr/include/lber.h	/^#define LBER_OCTETSTRING	/;"	d
LBER_OPT_BER_BYTES_TO_WRITE	/usr/include/lber.h	/^#define LBER_OPT_BER_BYTES_TO_WRITE	/;"	d
LBER_OPT_BER_DEBUG	/usr/include/lber.h	/^#define LBER_OPT_BER_DEBUG	/;"	d
LBER_OPT_BER_MEMCTX	/usr/include/lber.h	/^#define LBER_OPT_BER_MEMCTX	/;"	d
LBER_OPT_BER_OPTIONS	/usr/include/lber.h	/^#define LBER_OPT_BER_OPTIONS	/;"	d
LBER_OPT_BER_REMAINING_BYTES	/usr/include/lber.h	/^#define LBER_OPT_BER_REMAINING_BYTES	/;"	d
LBER_OPT_BER_TOTAL_BYTES	/usr/include/lber.h	/^#define LBER_OPT_BER_TOTAL_BYTES	/;"	d
LBER_OPT_BYTES_TO_WRITE	/usr/include/lber.h	/^#define LBER_OPT_BYTES_TO_WRITE	/;"	d
LBER_OPT_DEBUG_LEVEL	/usr/include/lber.h	/^#define LBER_OPT_DEBUG_LEVEL	/;"	d
LBER_OPT_ERROR	/usr/include/lber.h	/^#define LBER_OPT_ERROR	/;"	d
LBER_OPT_ERROR_FN	/usr/include/lber.h	/^#define LBER_OPT_ERROR_FN	/;"	d
LBER_OPT_LOG_PRINT_FILE	/usr/include/lber.h	/^#define LBER_OPT_LOG_PRINT_FILE	/;"	d
LBER_OPT_LOG_PRINT_FN	/usr/include/lber.h	/^#define LBER_OPT_LOG_PRINT_FN	/;"	d
LBER_OPT_LOG_PROC	/usr/include/lber.h	/^#define LBER_OPT_LOG_PROC /;"	d
LBER_OPT_MEMORY_FNS	/usr/include/lber.h	/^#define LBER_OPT_MEMORY_FNS	/;"	d
LBER_OPT_MEMORY_INUSE	/usr/include/lber.h	/^#define LBER_OPT_MEMORY_INUSE	/;"	d
LBER_OPT_OFF	/usr/include/lber.h	/^#define LBER_OPT_OFF	/;"	d
LBER_OPT_ON	/usr/include/lber.h	/^#define LBER_OPT_ON	/;"	d
LBER_OPT_REMAINING_BYTES	/usr/include/lber.h	/^#define LBER_OPT_REMAINING_BYTES	/;"	d
LBER_OPT_SOCKBUF_DEBUG	/usr/include/lber.h	/^#define LBER_OPT_SOCKBUF_DEBUG	/;"	d
LBER_OPT_SOCKBUF_DESC	/usr/include/lber.h	/^#define LBER_OPT_SOCKBUF_DESC	/;"	d
LBER_OPT_SOCKBUF_OPTIONS	/usr/include/lber.h	/^#define LBER_OPT_SOCKBUF_OPTIONS	/;"	d
LBER_OPT_SUCCESS	/usr/include/lber.h	/^#define LBER_OPT_SUCCESS	/;"	d
LBER_OPT_TOTAL_BYTES	/usr/include/lber.h	/^#define LBER_OPT_TOTAL_BYTES	/;"	d
LBER_PRIMITIVE	/usr/include/lber.h	/^#define LBER_PRIMITIVE	/;"	d
LBER_SBIOD_CTRL_NEXT	/usr/include/lber.h	/^#define LBER_SBIOD_CTRL_NEXT(/;"	d
LBER_SBIOD_LEVEL_APPLICATION	/usr/include/lber.h	/^#define LBER_SBIOD_LEVEL_APPLICATION	/;"	d
LBER_SBIOD_LEVEL_PROVIDER	/usr/include/lber.h	/^#define LBER_SBIOD_LEVEL_PROVIDER	/;"	d
LBER_SBIOD_LEVEL_TRANSPORT	/usr/include/lber.h	/^#define LBER_SBIOD_LEVEL_TRANSPORT	/;"	d
LBER_SBIOD_READ_NEXT	/usr/include/lber.h	/^#define LBER_SBIOD_READ_NEXT(/;"	d
LBER_SBIOD_WRITE_NEXT	/usr/include/lber.h	/^#define LBER_SBIOD_WRITE_NEXT(/;"	d
LBER_SB_OPT_DATA_READY	/usr/include/lber.h	/^#define LBER_SB_OPT_DATA_READY	/;"	d
LBER_SB_OPT_DRAIN	/usr/include/lber.h	/^#define LBER_SB_OPT_DRAIN	/;"	d
LBER_SB_OPT_GET_FD	/usr/include/lber.h	/^#define LBER_SB_OPT_GET_FD	/;"	d
LBER_SB_OPT_GET_MAX_INCOMING	/usr/include/lber.h	/^#define LBER_SB_OPT_GET_MAX_INCOMING	/;"	d
LBER_SB_OPT_GET_SSL	/usr/include/lber.h	/^#define LBER_SB_OPT_GET_SSL	/;"	d
LBER_SB_OPT_HAS_IO	/usr/include/lber.h	/^#define LBER_SB_OPT_HAS_IO	/;"	d
LBER_SB_OPT_NEEDS_READ	/usr/include/lber.h	/^#define LBER_SB_OPT_NEEDS_READ	/;"	d
LBER_SB_OPT_NEEDS_WRITE	/usr/include/lber.h	/^#define LBER_SB_OPT_NEEDS_WRITE	/;"	d
LBER_SB_OPT_OPT_MAX	/usr/include/lber.h	/^#define LBER_SB_OPT_OPT_MAX	/;"	d
LBER_SB_OPT_SET_FD	/usr/include/lber.h	/^#define LBER_SB_OPT_SET_FD	/;"	d
LBER_SB_OPT_SET_MAX_INCOMING	/usr/include/lber.h	/^#define LBER_SB_OPT_SET_MAX_INCOMING	/;"	d
LBER_SB_OPT_SET_NONBLOCK	/usr/include/lber.h	/^#define LBER_SB_OPT_SET_NONBLOCK	/;"	d
LBER_SB_OPT_SET_READAHEAD	/usr/include/lber.h	/^#define LBER_SB_OPT_SET_READAHEAD	/;"	d
LBER_SB_OPT_UNGET_BUF	/usr/include/lber.h	/^#define LBER_SB_OPT_UNGET_BUF	/;"	d
LBER_SEQUENCE	/usr/include/lber.h	/^#define LBER_SEQUENCE	/;"	d
LBER_SET	/usr/include/lber.h	/^#define LBER_SET	/;"	d
LBER_SOCKET_T	/usr/include/lber_types.h	/^#define LBER_SOCKET_T /;"	d
LBER_TAG_T	/usr/include/lber_types.h	/^#define LBER_TAG_T /;"	d
LBER_USE_DER	/usr/include/lber.h	/^#define LBER_USE_DER	/;"	d
LBER_V	/usr/include/ldap_cdefs.h	/^#	define LBER_V(/;"	d
LC_ALL	/usr/include/locale.h	/^#define	LC_ALL	/;"	d
LC_ALL_MASK	/usr/include/xlocale.h	/^#define LC_ALL_MASK	/;"	d
LC_COLLATE	/usr/include/locale.h	/^#define	LC_COLLATE	/;"	d
LC_COLLATE_MASK	/usr/include/xlocale.h	/^#define LC_COLLATE_MASK	/;"	d
LC_CTYPE	/usr/include/locale.h	/^#define	LC_CTYPE	/;"	d
LC_CTYPE_MASK	/usr/include/xlocale.h	/^#define LC_CTYPE_MASK	/;"	d
LC_GLOBAL_LOCALE	/usr/include/xlocale.h	/^#define LC_GLOBAL_LOCALE	/;"	d
LC_MESSAGES	/usr/include/locale.h	/^#define	LC_MESSAGES	/;"	d
LC_MESSAGES_MASK	/usr/include/xlocale.h	/^#define LC_MESSAGES_MASK	/;"	d
LC_MONETARY	/usr/include/locale.h	/^#define	LC_MONETARY	/;"	d
LC_MONETARY_MASK	/usr/include/xlocale.h	/^#define LC_MONETARY_MASK	/;"	d
LC_NUMERIC	/usr/include/locale.h	/^#define	LC_NUMERIC	/;"	d
LC_NUMERIC_MASK	/usr/include/xlocale.h	/^#define LC_NUMERIC_MASK	/;"	d
LC_TIME	/usr/include/locale.h	/^#define	LC_TIME	/;"	d
LC_TIME_MASK	/usr/include/xlocale.h	/^#define LC_TIME_MASK	/;"	d
LDAP	/usr/include/ldap.h	/^typedef struct ldap LDAP;$/;"	t	typeref:struct:ldap
LDAPAPIFeatureInfo	/usr/include/ldap.h	/^} LDAPAPIFeatureInfo;$/;"	t	typeref:struct:ldap_apifeature_info
LDAPAPIInfo	/usr/include/ldap.h	/^} LDAPAPIInfo;$/;"	t	typeref:struct:ldapapiinfo
LDAPAVA	/usr/include/ldap.h	/^} LDAPAVA;$/;"	t	typeref:struct:ldap_ava
LDAPAttributeType	/usr/include/ldap_schema.h	/^} LDAPAttributeType;$/;"	t	typeref:struct:ldap_attributetype
LDAPContentRule	/usr/include/ldap_schema.h	/^} LDAPContentRule;$/;"	t	typeref:struct:ldap_contentrule
LDAPControl	/usr/include/ldap.h	/^} LDAPControl;$/;"	t	typeref:struct:ldapcontrol
LDAPDN	/usr/include/ldap.h	/^typedef LDAPRDN* LDAPDN;$/;"	t
LDAPDN_rewrite_func	/usr/include/ldap.h	/^typedef int LDAPDN_rewrite_func$/;"	t
LDAPMatchingRule	/usr/include/ldap_schema.h	/^} LDAPMatchingRule;$/;"	t	typeref:struct:ldap_matchingrule
LDAPMatchingRuleUse	/usr/include/ldap_schema.h	/^} LDAPMatchingRuleUse;$/;"	t	typeref:struct:ldap_matchingruleuse
LDAPMessage	/usr/include/ldap.h	/^typedef struct ldapmsg LDAPMessage;$/;"	t	typeref:struct:ldapmsg
LDAPMod	/usr/include/ldap.h	/^} LDAPMod;$/;"	t	typeref:struct:ldapmod
LDAPNameForm	/usr/include/ldap_schema.h	/^} LDAPNameForm;$/;"	t	typeref:struct:ldap_nameform
LDAPObjectClass	/usr/include/ldap_schema.h	/^} LDAPObjectClass;$/;"	t	typeref:struct:ldap_objectclass
LDAPPasswordPolicyError	/usr/include/ldap.h	/^} LDAPPasswordPolicyError;$/;"	t	typeref:enum:passpolicyerror_enum
LDAPRDN	/usr/include/ldap.h	/^typedef LDAPAVA** LDAPRDN;$/;"	t
LDAPS_PORT	/usr/include/ldap.h	/^#define LDAPS_PORT	/;"	d
LDAPSchemaExtensionItem	/usr/include/ldap_schema.h	/^} LDAPSchemaExtensionItem;$/;"	t	typeref:struct:ldap_schema_extension_item
LDAPSortKey	/usr/include/ldap.h	/^} LDAPSortKey;$/;"	t	typeref:struct:ldapsortkey
LDAPStructureRule	/usr/include/ldap_schema.h	/^} LDAPStructureRule;$/;"	t	typeref:struct:ldap_structurerule
LDAPSyntax	/usr/include/ldap_schema.h	/^} LDAPSyntax;$/;"	t	typeref:struct:ldap_syntax
LDAPURLDesc	/usr/include/ldap.h	/^} LDAPURLDesc;$/;"	t	typeref:struct:ldap_url_desc
LDAPVLVInfo	/usr/include/ldap.h	/^} LDAPVLVInfo;$/;"	t	typeref:struct:ldapvlvinfo
LDAP_ADMINLIMIT_EXCEEDED	/usr/include/ldap.h	/^#define LDAP_ADMINLIMIT_EXCEEDED	/;"	d
LDAP_AFFECTS_MULTIPLE_DSAS	/usr/include/ldap.h	/^#define LDAP_AFFECTS_MULTIPLE_DSAS	/;"	d
LDAP_ALIAS_DEREF_PROBLEM	/usr/include/ldap.h	/^#define LDAP_ALIAS_DEREF_PROBLEM	/;"	d
LDAP_ALIAS_PROBLEM	/usr/include/ldap.h	/^#define LDAP_ALIAS_PROBLEM	/;"	d
LDAP_ALL_OPERATIONAL_ATTRIBUTES	/usr/include/ldap.h	/^#define LDAP_ALL_OPERATIONAL_ATTRIBUTES	/;"	d
LDAP_ALL_USER_ATTRIBUTES	/usr/include/ldap.h	/^#define LDAP_ALL_USER_ATTRIBUTES	/;"	d
LDAP_ALREADY_EXISTS	/usr/include/ldap.h	/^#define LDAP_ALREADY_EXISTS	/;"	d
LDAP_API_ERROR	/usr/include/ldap.h	/^#define LDAP_API_ERROR(/;"	d
LDAP_API_FEATURE_CANCEL	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_CANCEL /;"	d
LDAP_API_FEATURE_PAGED_RESULTS	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_PAGED_RESULTS /;"	d
LDAP_API_FEATURE_PASSWD_MODIFY	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_PASSWD_MODIFY /;"	d
LDAP_API_FEATURE_PASSWORD_POLICY	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_PASSWORD_POLICY /;"	d
LDAP_API_FEATURE_REFRESH	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_REFRESH /;"	d
LDAP_API_FEATURE_SERVER_SIDE_SORT	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_SERVER_SIDE_SORT /;"	d
LDAP_API_FEATURE_THREAD_SAFE	/usr/include/ldap.h	/^#	define	LDAP_API_FEATURE_THREAD_SAFE /;"	d
LDAP_API_FEATURE_TURN	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_TURN /;"	d
LDAP_API_FEATURE_VIRTUAL_LIST_VIEW	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_VIRTUAL_LIST_VIEW /;"	d
LDAP_API_FEATURE_WHOAMI	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_WHOAMI /;"	d
LDAP_API_FEATURE_X_OPENLDAP	/usr/include/ldap.h	/^#define LDAP_API_FEATURE_X_OPENLDAP /;"	d
LDAP_API_FEATURE_X_OPENLDAP_THREAD_SAFE	/usr/include/ldap_features.h	/^#define LDAP_API_FEATURE_X_OPENLDAP_THREAD_SAFE /;"	d
LDAP_API_INFO_VERSION	/usr/include/ldap.h	/^#define LDAP_API_INFO_VERSION	/;"	d
LDAP_API_RESULT	/usr/include/ldap.h	/^#define LDAP_API_RESULT(/;"	d
LDAP_API_VERSION	/usr/include/ldap.h	/^#define LDAP_API_VERSION	/;"	d
LDAP_ASSERTION_FAILED	/usr/include/ldap.h	/^#define LDAP_ASSERTION_FAILED	/;"	d
LDAP_ATTR_ERROR	/usr/include/ldap.h	/^#define LDAP_ATTR_ERROR(/;"	d
LDAP_AUTH_KRBV4	/usr/include/ldap.h	/^#define LDAP_AUTH_KRBV4 /;"	d
LDAP_AUTH_KRBV41	/usr/include/ldap.h	/^#define LDAP_AUTH_KRBV41 /;"	d
LDAP_AUTH_KRBV42	/usr/include/ldap.h	/^#define LDAP_AUTH_KRBV42 /;"	d
LDAP_AUTH_METHOD_NOT_SUPPORTED	/usr/include/ldap.h	/^#define LDAP_AUTH_METHOD_NOT_SUPPORTED	/;"	d
LDAP_AUTH_NONE	/usr/include/ldap.h	/^#define LDAP_AUTH_NONE /;"	d
LDAP_AUTH_SASL	/usr/include/ldap.h	/^#define LDAP_AUTH_SASL /;"	d
LDAP_AUTH_SIMPLE	/usr/include/ldap.h	/^#define LDAP_AUTH_SIMPLE /;"	d
LDAP_AUTH_UNKNOWN	/usr/include/ldap.h	/^#define LDAP_AUTH_UNKNOWN	/;"	d
LDAP_AVA_BINARY	/usr/include/ldap.h	/^#define LDAP_AVA_BINARY	/;"	d
LDAP_AVA_FREE_ATTR	/usr/include/ldap.h	/^#define LDAP_AVA_FREE_ATTR	/;"	d
LDAP_AVA_FREE_VALUE	/usr/include/ldap.h	/^#define LDAP_AVA_FREE_VALUE	/;"	d
LDAP_AVA_NONPRINTABLE	/usr/include/ldap.h	/^#define LDAP_AVA_NONPRINTABLE	/;"	d
LDAP_AVA_NULL	/usr/include/ldap.h	/^#define LDAP_AVA_NULL	/;"	d
LDAP_AVA_STRING	/usr/include/ldap.h	/^#define LDAP_AVA_STRING	/;"	d
LDAP_AVL_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_AVL_F(/;"	d
LDAP_AVL_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_AVL_V(/;"	d
LDAP_BEGIN_DECL	/usr/include/ldap_cdefs.h	/^#	define LDAP_BEGIN_DECL	/;"	d
LDAP_BUSY	/usr/include/ldap.h	/^#define LDAP_BUSY	/;"	d
LDAP_CANCELLED	/usr/include/ldap.h	/^#define LDAP_CANCELLED	/;"	d
LDAP_CANNOT_CANCEL	/usr/include/ldap.h	/^#define LDAP_CANNOT_CANCEL	/;"	d
LDAP_CHAINING_PREFERRED	/usr/include/ldap.h	/^#define	LDAP_CHAINING_PREFERRED	/;"	d
LDAP_CHAINING_REQUIRED	/usr/include/ldap.h	/^#define	LDAP_CHAINING_REQUIRED	/;"	d
LDAP_CLIENT_LOOP	/usr/include/ldap.h	/^#define LDAP_CLIENT_LOOP	/;"	d
LDAP_COMPARE_FALSE	/usr/include/ldap.h	/^#define LDAP_COMPARE_FALSE	/;"	d
LDAP_COMPARE_TRUE	/usr/include/ldap.h	/^#define LDAP_COMPARE_TRUE	/;"	d
LDAP_CONCAT	/usr/include/ldap_cdefs.h	/^#	define LDAP_CONCAT(/;"	d
LDAP_CONCAT1	/usr/include/ldap_cdefs.h	/^#	define LDAP_CONCAT1(/;"	d
LDAP_CONFIDENTIALITY_REQUIRED	/usr/include/ldap.h	/^#define LDAP_CONFIDENTIALITY_REQUIRED	/;"	d
LDAP_CONNECT_ERROR	/usr/include/ldap.h	/^#define LDAP_CONNECT_ERROR	/;"	d
LDAP_CONST	/usr/include/ldap_cdefs.h	/^#	define LDAP_CONST	/;"	d
LDAP_CONSTRAINT_VIOLATION	/usr/include/ldap.h	/^#define LDAP_CONSTRAINT_VIOLATION	/;"	d
LDAP_CONTROL_ASSERT	/usr/include/ldap.h	/^#define LDAP_CONTROL_ASSERT	/;"	d
LDAP_CONTROL_DONTUSECOPY	/usr/include/ldap.h	/^#define LDAP_CONTROL_DONTUSECOPY	/;"	d
LDAP_CONTROL_DUPENT	/usr/include/ldap.h	/^#define LDAP_CONTROL_DUPENT	/;"	d
LDAP_CONTROL_DUPENT_ENTRY	/usr/include/ldap.h	/^#define LDAP_CONTROL_DUPENT_ENTRY	/;"	d
LDAP_CONTROL_DUPENT_REQUEST	/usr/include/ldap.h	/^#define LDAP_CONTROL_DUPENT_REQUEST	/;"	d
LDAP_CONTROL_DUPENT_RESPONSE	/usr/include/ldap.h	/^#define LDAP_CONTROL_DUPENT_RESPONSE	/;"	d
LDAP_CONTROL_MANAGEDIT	/usr/include/ldap.h	/^#define LDAP_CONTROL_MANAGEDIT	/;"	d
LDAP_CONTROL_MANAGEDSAIT	/usr/include/ldap.h	/^#define LDAP_CONTROL_MANAGEDSAIT	/;"	d
LDAP_CONTROL_NOOP	/usr/include/ldap.h	/^#define LDAP_CONTROL_NOOP	/;"	d
LDAP_CONTROL_NOT_FOUND	/usr/include/ldap.h	/^#define LDAP_CONTROL_NOT_FOUND	/;"	d
LDAP_CONTROL_NO_SUBORDINATES	/usr/include/ldap.h	/^#define LDAP_CONTROL_NO_SUBORDINATES	/;"	d
LDAP_CONTROL_PAGEDRESULTS	/usr/include/ldap.h	/^#define LDAP_CONTROL_PAGEDRESULTS	/;"	d
LDAP_CONTROL_PASSWORDPOLICYREQUEST	/usr/include/ldap.h	/^#define LDAP_CONTROL_PASSWORDPOLICYREQUEST	/;"	d
LDAP_CONTROL_PASSWORDPOLICYRESPONSE	/usr/include/ldap.h	/^#define LDAP_CONTROL_PASSWORDPOLICYRESPONSE	/;"	d
LDAP_CONTROL_PERSIST_ENTRY_CHANGE_ADD	/usr/include/ldap.h	/^#define LDAP_CONTROL_PERSIST_ENTRY_CHANGE_ADD	/;"	d
LDAP_CONTROL_PERSIST_ENTRY_CHANGE_DELETE	/usr/include/ldap.h	/^#define LDAP_CONTROL_PERSIST_ENTRY_CHANGE_DELETE	/;"	d
LDAP_CONTROL_PERSIST_ENTRY_CHANGE_MODIFY	/usr/include/ldap.h	/^#define LDAP_CONTROL_PERSIST_ENTRY_CHANGE_MODIFY	/;"	d
LDAP_CONTROL_PERSIST_ENTRY_CHANGE_NOTICE	/usr/include/ldap.h	/^#define LDAP_CONTROL_PERSIST_ENTRY_CHANGE_NOTICE	/;"	d
LDAP_CONTROL_PERSIST_ENTRY_CHANGE_RENAME	/usr/include/ldap.h	/^#define LDAP_CONTROL_PERSIST_ENTRY_CHANGE_RENAME	/;"	d
LDAP_CONTROL_PERSIST_REQUEST	/usr/include/ldap.h	/^#define LDAP_CONTROL_PERSIST_REQUEST	/;"	d
LDAP_CONTROL_POST_READ	/usr/include/ldap.h	/^#define LDAP_CONTROL_POST_READ	/;"	d
LDAP_CONTROL_PRE_READ	/usr/include/ldap.h	/^#define LDAP_CONTROL_PRE_READ	/;"	d
LDAP_CONTROL_PROXY_AUTHZ	/usr/include/ldap.h	/^#define LDAP_CONTROL_PROXY_AUTHZ	/;"	d
LDAP_CONTROL_RELAX	/usr/include/ldap.h	/^#define LDAP_CONTROL_RELAX	/;"	d
LDAP_CONTROL_SLURP	/usr/include/ldap.h	/^#define LDAP_CONTROL_SLURP	/;"	d
LDAP_CONTROL_SORTREQUEST	/usr/include/ldap.h	/^#define LDAP_CONTROL_SORTREQUEST /;"	d
LDAP_CONTROL_SORTRESPONSE	/usr/include/ldap.h	/^#define LDAP_CONTROL_SORTRESPONSE	/;"	d
LDAP_CONTROL_SUBENTRIES	/usr/include/ldap.h	/^#define LDAP_CONTROL_SUBENTRIES	/;"	d
LDAP_CONTROL_SYNC	/usr/include/ldap.h	/^#define LDAP_CONTROL_SYNC	/;"	d
LDAP_CONTROL_SYNC_DONE	/usr/include/ldap.h	/^#define LDAP_CONTROL_SYNC_DONE	/;"	d
LDAP_CONTROL_SYNC_STATE	/usr/include/ldap.h	/^#define LDAP_CONTROL_SYNC_STATE	/;"	d
LDAP_CONTROL_VALSORT	/usr/include/ldap.h	/^#define LDAP_CONTROL_VALSORT	/;"	d
LDAP_CONTROL_VALUESRETURNFILTER	/usr/include/ldap.h	/^#define LDAP_CONTROL_VALUESRETURNFILTER /;"	d
LDAP_CONTROL_VLVREQUEST	/usr/include/ldap.h	/^#define LDAP_CONTROL_VLVREQUEST /;"	d
LDAP_CONTROL_VLVRESPONSE	/usr/include/ldap.h	/^#define LDAP_CONTROL_VLVRESPONSE /;"	d
LDAP_CONTROL_X_CHAINING_BEHAVIOR	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_CHAINING_BEHAVIOR	/;"	d
LDAP_CONTROL_X_DOMAIN_SCOPE	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_DOMAIN_SCOPE	/;"	d
LDAP_CONTROL_X_EXTENDED_DN	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_EXTENDED_DN	/;"	d
LDAP_CONTROL_X_INCREMENTAL_VALUES	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_INCREMENTAL_VALUES	/;"	d
LDAP_CONTROL_X_PERMISSIVE_MODIFY	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_PERMISSIVE_MODIFY	/;"	d
LDAP_CONTROL_X_RETURNCONTREF	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_RETURNCONTREF	/;"	d
LDAP_CONTROL_X_SEARCH_OPTIONS	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_SEARCH_OPTIONS	/;"	d
LDAP_CONTROL_X_SESSION_TRACKING	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_SESSION_TRACKING	/;"	d
LDAP_CONTROL_X_SESSION_TRACKING_RADIUS_ACCT_MULTI_SESSION_ID	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_SESSION_TRACKING_RADIUS_ACCT_MULTI_SESSION_ID /;"	d
LDAP_CONTROL_X_SESSION_TRACKING_RADIUS_ACCT_SESSION_ID	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_SESSION_TRACKING_RADIUS_ACCT_SESSION_ID /;"	d
LDAP_CONTROL_X_SESSION_TRACKING_USERNAME	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_SESSION_TRACKING_USERNAME /;"	d
LDAP_CONTROL_X_TREE_DELETE	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_TREE_DELETE	/;"	d
LDAP_CONTROL_X_TXN_SPEC	/usr/include/ldap.h	/^#define LDAP_CONTROL_X_TXN_SPEC	/;"	d
LDAP_CUP_INVALID_DATA	/usr/include/ldap.h	/^#define LDAP_CUP_INVALID_DATA	/;"	d
LDAP_CUP_RELOAD_REQUIRED	/usr/include/ldap.h	/^#define LDAP_CUP_RELOAD_REQUIRED	/;"	d
LDAP_CUP_RESOURCES_EXHAUSTED	/usr/include/ldap.h	/^#define LDAP_CUP_RESOURCES_EXHAUSTED	/;"	d
LDAP_CUP_SECURITY_VIOLATION	/usr/include/ldap.h	/^#define LDAP_CUP_SECURITY_VIOLATION	/;"	d
LDAP_CUP_UNSUPPORTED_SCHEME	/usr/include/ldap.h	/^#define LDAP_CUP_UNSUPPORTED_SCHEME	/;"	d
LDAP_DECODING_ERROR	/usr/include/ldap.h	/^#define LDAP_DECODING_ERROR	/;"	d
LDAP_DEPRECATED	/usr/include/ldap.h	/^#define LDAP_DEPRECATED /;"	d
LDAP_DEREF_ALWAYS	/usr/include/ldap.h	/^#define LDAP_DEREF_ALWAYS	/;"	d
LDAP_DEREF_FINDING	/usr/include/ldap.h	/^#define LDAP_DEREF_FINDING	/;"	d
LDAP_DEREF_NEVER	/usr/include/ldap.h	/^#define LDAP_DEREF_NEVER	/;"	d
LDAP_DEREF_SEARCHING	/usr/include/ldap.h	/^#define LDAP_DEREF_SEARCHING	/;"	d
LDAP_DN_FORMAT_AD_CANONICAL	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_AD_CANONICAL	/;"	d
LDAP_DN_FORMAT_DCE	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_DCE	/;"	d
LDAP_DN_FORMAT_LBER	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_LBER	/;"	d
LDAP_DN_FORMAT_LDAP	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_LDAP	/;"	d
LDAP_DN_FORMAT_LDAPV2	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_LDAPV2	/;"	d
LDAP_DN_FORMAT_LDAPV3	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_LDAPV3	/;"	d
LDAP_DN_FORMAT_MASK	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_MASK	/;"	d
LDAP_DN_FORMAT_UFN	/usr/include/ldap.h	/^#define LDAP_DN_FORMAT_UFN	/;"	d
LDAP_DN_PEDANTIC	/usr/include/ldap.h	/^#define LDAP_DN_PEDANTIC	/;"	d
LDAP_DN_PRETTY	/usr/include/ldap.h	/^#define LDAP_DN_PRETTY	/;"	d
LDAP_DN_P_NOLEADTRAILSPACES	/usr/include/ldap.h	/^#define LDAP_DN_P_NOLEADTRAILSPACES	/;"	d
LDAP_DN_P_NOSPACEAFTERRDN	/usr/include/ldap.h	/^#define LDAP_DN_P_NOSPACEAFTERRDN	/;"	d
LDAP_DN_SKIP	/usr/include/ldap.h	/^#define LDAP_DN_SKIP	/;"	d
LDAP_ENCODING_ERROR	/usr/include/ldap.h	/^#define LDAP_ENCODING_ERROR	/;"	d
LDAP_END_DECL	/usr/include/ldap_cdefs.h	/^#	define LDAP_END_DECL	/;"	d
LDAP_EXOP_CANCEL	/usr/include/ldap.h	/^#define LDAP_EXOP_CANCEL	/;"	d
LDAP_EXOP_MODIFY_PASSWD	/usr/include/ldap.h	/^#define LDAP_EXOP_MODIFY_PASSWD	/;"	d
LDAP_EXOP_REFRESH	/usr/include/ldap.h	/^#define	LDAP_EXOP_REFRESH	/;"	d
LDAP_EXOP_START_TLS	/usr/include/ldap.h	/^#define LDAP_EXOP_START_TLS	/;"	d
LDAP_EXOP_TURN	/usr/include/ldap.h	/^#define LDAP_EXOP_TURN	/;"	d
LDAP_EXOP_WHO_AM_I	/usr/include/ldap.h	/^#define LDAP_EXOP_WHO_AM_I	/;"	d
LDAP_EXOP_X_CANCEL	/usr/include/ldap.h	/^#define LDAP_EXOP_X_CANCEL	/;"	d
LDAP_EXOP_X_CHAINEDREQUEST	/usr/include/ldap.h	/^#define LDAP_EXOP_X_CHAINEDREQUEST	/;"	d
LDAP_EXOP_X_TURN	/usr/include/ldap.h	/^#define LDAP_EXOP_X_TURN	/;"	d
LDAP_EXOP_X_TXN_ABORTED_NOTICE	/usr/include/ldap.h	/^#define LDAP_EXOP_X_TXN_ABORTED_NOTICE	/;"	d
LDAP_EXOP_X_TXN_END	/usr/include/ldap.h	/^#define LDAP_EXOP_X_TXN_END	/;"	d
LDAP_EXOP_X_TXN_START	/usr/include/ldap.h	/^#define LDAP_EXOP_X_TXN_START	/;"	d
LDAP_EXOP_X_WHO_AM_I	/usr/include/ldap.h	/^#define LDAP_EXOP_X_WHO_AM_I	/;"	d
LDAP_E_ERROR	/usr/include/ldap.h	/^#define LDAP_E_ERROR(/;"	d
LDAP_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_F(/;"	d
LDAP_FEATURE_ABSOLUTE_FILTERS	/usr/include/ldap.h	/^#define LDAP_FEATURE_ABSOLUTE_FILTERS /;"	d
LDAP_FEATURE_ALL_OP_ATTRS	/usr/include/ldap.h	/^#define LDAP_FEATURE_ALL_OP_ATTRS	/;"	d
LDAP_FEATURE_CHILDREN_SCOPE	/usr/include/ldap.h	/^#define LDAP_FEATURE_CHILDREN_SCOPE /;"	d
LDAP_FEATURE_INFO_VERSION	/usr/include/ldap.h	/^#define LDAP_FEATURE_INFO_VERSION /;"	d
LDAP_FEATURE_LANGUAGE_RANGE_OPTIONS	/usr/include/ldap.h	/^#define LDAP_FEATURE_LANGUAGE_RANGE_OPTIONS /;"	d
LDAP_FEATURE_LANGUAGE_TAG_OPTIONS	/usr/include/ldap.h	/^#define LDAP_FEATURE_LANGUAGE_TAG_OPTIONS /;"	d
LDAP_FEATURE_MODIFY_INCREMENT	/usr/include/ldap.h	/^#define LDAP_FEATURE_MODIFY_INCREMENT /;"	d
LDAP_FEATURE_OBJECTCLASS_ATTRS	/usr/include/ldap.h	/^#define LDAP_FEATURE_OBJECTCLASS_ATTRS /;"	d
LDAP_FEATURE_SUBORDINATE_SCOPE	/usr/include/ldap.h	/^#define LDAP_FEATURE_SUBORDINATE_SCOPE /;"	d
LDAP_FEATURE_X_CANCHAINOPS	/usr/include/ldap.h	/^#define LDAP_FEATURE_X_CANCHAINOPS	/;"	d
LDAP_FILTER_AND	/usr/include/ldap.h	/^#define LDAP_FILTER_AND	/;"	d
LDAP_FILTER_AND	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_AND /;"	d
LDAP_FILTER_APPROX	/usr/include/ldap.h	/^#define LDAP_FILTER_APPROX /;"	d
LDAP_FILTER_APPROX	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_APPROX /;"	d
LDAP_FILTER_EQUALITY	/usr/include/ldap.h	/^#define LDAP_FILTER_EQUALITY /;"	d
LDAP_FILTER_EQUALITY	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_EQUALITY /;"	d
LDAP_FILTER_ERROR	/usr/include/ldap.h	/^#define LDAP_FILTER_ERROR	/;"	d
LDAP_FILTER_EXT	/usr/include/ldap.h	/^#define LDAP_FILTER_EXT	/;"	d
LDAP_FILTER_EXT_DNATTRS	/usr/include/ldap.h	/^#define LDAP_FILTER_EXT_DNATTRS	/;"	d
LDAP_FILTER_EXT_MATCH	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_EXT_MATCH /;"	d
LDAP_FILTER_EXT_OID	/usr/include/ldap.h	/^#define LDAP_FILTER_EXT_OID	/;"	d
LDAP_FILTER_EXT_TYPE	/usr/include/ldap.h	/^#define LDAP_FILTER_EXT_TYPE	/;"	d
LDAP_FILTER_EXT_VALUE	/usr/include/ldap.h	/^#define LDAP_FILTER_EXT_VALUE	/;"	d
LDAP_FILTER_GE	/usr/include/ldap.h	/^#define LDAP_FILTER_GE /;"	d
LDAP_FILTER_GE	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_GE /;"	d
LDAP_FILTER_LE	/usr/include/ldap.h	/^#define LDAP_FILTER_LE /;"	d
LDAP_FILTER_LE	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_LE /;"	d
LDAP_FILTER_NOT	/usr/include/ldap.h	/^#define LDAP_FILTER_NOT	/;"	d
LDAP_FILTER_NOT	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_NOT /;"	d
LDAP_FILTER_OR	/usr/include/ldap.h	/^#define LDAP_FILTER_OR	/;"	d
LDAP_FILTER_OR	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_OR /;"	d
LDAP_FILTER_PRESENT	/usr/include/ldap.h	/^#define LDAP_FILTER_PRESENT /;"	d
LDAP_FILTER_PRESENT	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_PRESENT /;"	d
LDAP_FILTER_SUBSTRINGS	/usr/include/ldap.h	/^#define LDAP_FILTER_SUBSTRINGS /;"	d
LDAP_FILTER_SUBSTRINGS	/usr/include/slapi-plugin.h	/^#define LDAP_FILTER_SUBSTRINGS /;"	d
LDAP_GCCATTR	/usr/include/ldap_cdefs.h	/^#	define LDAP_GCCATTR(/;"	d
LDAP_INAPPROPRIATE_AUTH	/usr/include/ldap.h	/^#define LDAP_INAPPROPRIATE_AUTH	/;"	d
LDAP_INAPPROPRIATE_MATCHING	/usr/include/ldap.h	/^#define LDAP_INAPPROPRIATE_MATCHING	/;"	d
LDAP_INSUFFICIENT_ACCESS	/usr/include/ldap.h	/^#define LDAP_INSUFFICIENT_ACCESS	/;"	d
LDAP_INVALID_CREDENTIALS	/usr/include/ldap.h	/^#define LDAP_INVALID_CREDENTIALS	/;"	d
LDAP_INVALID_DN_SYNTAX	/usr/include/ldap.h	/^#define LDAP_INVALID_DN_SYNTAX	/;"	d
LDAP_INVALID_SYNTAX	/usr/include/ldap.h	/^#define LDAP_INVALID_SYNTAX	/;"	d
LDAP_IS_LEAF	/usr/include/ldap.h	/^#define LDAP_IS_LEAF	/;"	d
LDAP_LDIF_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_LDIF_F(/;"	d
LDAP_LDIF_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_LDIF_V(/;"	d
LDAP_LIBC_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_LIBC_F(/;"	d
LDAP_LIBC_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_LIBC_V(/;"	d
LDAP_LOCAL_ERROR	/usr/include/ldap.h	/^#define LDAP_LOCAL_ERROR	/;"	d
LDAP_LOOP_DETECT	/usr/include/ldap.h	/^#define LDAP_LOOP_DETECT	/;"	d
LDAP_LUNICODE_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_LUNICODE_F(/;"	d
LDAP_LUNICODE_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_LUNICODE_V(/;"	d
LDAP_LUTIL_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_LUTIL_F(/;"	d
LDAP_LUTIL_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_LUTIL_V(/;"	d
LDAP_MAXINT	/usr/include/ldap.h	/^#define LDAP_MAXINT /;"	d
LDAP_MAX_UTF8_LEN	/usr/include/ldap_utf8.h	/^#define LDAP_MAX_UTF8_LEN /;"	d
LDAP_MOD_ADD	/usr/include/ldap.h	/^#define LDAP_MOD_ADD	/;"	d
LDAP_MOD_BVALUES	/usr/include/ldap.h	/^#define LDAP_MOD_BVALUES	/;"	d
LDAP_MOD_DELETE	/usr/include/ldap.h	/^#define LDAP_MOD_DELETE	/;"	d
LDAP_MOD_INCREMENT	/usr/include/ldap.h	/^#define LDAP_MOD_INCREMENT	/;"	d
LDAP_MOD_OP	/usr/include/ldap.h	/^#define LDAP_MOD_OP	/;"	d
LDAP_MOD_REPLACE	/usr/include/ldap.h	/^#define LDAP_MOD_REPLACE	/;"	d
LDAP_MORE_RESULTS_TO_RETURN	/usr/include/ldap.h	/^#define LDAP_MORE_RESULTS_TO_RETURN	/;"	d
LDAP_MSG_ALL	/usr/include/ldap.h	/^#define LDAP_MSG_ALL	/;"	d
LDAP_MSG_ONE	/usr/include/ldap.h	/^#define LDAP_MSG_ONE	/;"	d
LDAP_MSG_RECEIVED	/usr/include/ldap.h	/^#define LDAP_MSG_RECEIVED	/;"	d
LDAP_NAME_ERROR	/usr/include/ldap.h	/^#define LDAP_NAME_ERROR(/;"	d
LDAP_NAMING_VIOLATION	/usr/include/ldap.h	/^#define LDAP_NAMING_VIOLATION	/;"	d
LDAP_NEXTREF_PROC	/usr/include/ldap.h	/^typedef int (LDAP_NEXTREF_PROC) LDAP_P(($/;"	t
LDAP_NOTICE_DISCONNECT	/usr/include/ldap.h	/^#define LDAP_NOTICE_DISCONNECT /;"	d
LDAP_NOTICE_OF_DISCONNECTION	/usr/include/ldap.h	/^#define	LDAP_NOTICE_OF_DISCONNECTION	/;"	d
LDAP_NOT_ALLOWED_ON_NONLEAF	/usr/include/ldap.h	/^#define LDAP_NOT_ALLOWED_ON_NONLEAF	/;"	d
LDAP_NOT_ALLOWED_ON_RDN	/usr/include/ldap.h	/^#define LDAP_NOT_ALLOWED_ON_RDN	/;"	d
LDAP_NOT_SUPPORTED	/usr/include/ldap.h	/^#define LDAP_NOT_SUPPORTED	/;"	d
LDAP_NO_ATTRS	/usr/include/ldap.h	/^#define LDAP_NO_ATTRS	/;"	d
LDAP_NO_LIMIT	/usr/include/ldap.h	/^#define LDAP_NO_LIMIT	/;"	d
LDAP_NO_MEMORY	/usr/include/ldap.h	/^#define LDAP_NO_MEMORY	/;"	d
LDAP_NO_OBJECT_CLASS_MODS	/usr/include/ldap.h	/^#define LDAP_NO_OBJECT_CLASS_MODS	/;"	d
LDAP_NO_RESULTS_RETURNED	/usr/include/ldap.h	/^#define LDAP_NO_RESULTS_RETURNED	/;"	d
LDAP_NO_SUCH_ATTRIBUTE	/usr/include/ldap.h	/^#define LDAP_NO_SUCH_ATTRIBUTE	/;"	d
LDAP_NO_SUCH_OBJECT	/usr/include/ldap.h	/^#define LDAP_NO_SUCH_OBJECT	/;"	d
LDAP_NO_SUCH_OPERATION	/usr/include/ldap.h	/^#define LDAP_NO_SUCH_OPERATION	/;"	d
LDAP_OBJECT_CLASS_VIOLATION	/usr/include/ldap.h	/^#define LDAP_OBJECT_CLASS_VIOLATION	/;"	d
LDAP_OPERATIONS_ERROR	/usr/include/ldap.h	/^#define LDAP_OPERATIONS_ERROR	/;"	d
LDAP_OPT_API_EXTENSION_BASE	/usr/include/ldap.h	/^#define LDAP_OPT_API_EXTENSION_BASE /;"	d
LDAP_OPT_API_FEATURE_INFO	/usr/include/ldap.h	/^#define LDAP_OPT_API_FEATURE_INFO	/;"	d
LDAP_OPT_API_INFO	/usr/include/ldap.h	/^#define LDAP_OPT_API_INFO	/;"	d
LDAP_OPT_CLIENT_CONTROLS	/usr/include/ldap.h	/^#define LDAP_OPT_CLIENT_CONTROLS	/;"	d
LDAP_OPT_CONNECT_ASYNC	/usr/include/ldap.h	/^#define	LDAP_OPT_CONNECT_ASYNC	/;"	d
LDAP_OPT_DEBUG_LEVEL	/usr/include/ldap.h	/^#define LDAP_OPT_DEBUG_LEVEL	/;"	d
LDAP_OPT_DEFBASE	/usr/include/ldap.h	/^#define LDAP_OPT_DEFBASE	/;"	d
LDAP_OPT_DEREF	/usr/include/ldap.h	/^#define LDAP_OPT_DEREF	/;"	d
LDAP_OPT_DESC	/usr/include/ldap.h	/^#define LDAP_OPT_DESC	/;"	d
LDAP_OPT_DIAGNOSTIC_MESSAGE	/usr/include/ldap.h	/^#define LDAP_OPT_DIAGNOSTIC_MESSAGE	/;"	d
LDAP_OPT_ERROR	/usr/include/ldap.h	/^#define	LDAP_OPT_ERROR	/;"	d
LDAP_OPT_ERROR_NUMBER	/usr/include/ldap.h	/^#define LDAP_OPT_ERROR_NUMBER	/;"	d
LDAP_OPT_ERROR_STRING	/usr/include/ldap.h	/^#define LDAP_OPT_ERROR_STRING	/;"	d
LDAP_OPT_HOST_NAME	/usr/include/ldap.h	/^#define LDAP_OPT_HOST_NAME	/;"	d
LDAP_OPT_MATCHED_DN	/usr/include/ldap.h	/^#define LDAP_OPT_MATCHED_DN	/;"	d
LDAP_OPT_NETWORK_TIMEOUT	/usr/include/ldap.h	/^#define LDAP_OPT_NETWORK_TIMEOUT	/;"	d
LDAP_OPT_NOREVERSE_LOOKUP	/usr/include/ldap.h	/^#define LDAP_OPT_NOREVERSE_LOOKUP	/;"	d
LDAP_OPT_OFF	/usr/include/ldap.h	/^#define LDAP_OPT_OFF	/;"	d
LDAP_OPT_ON	/usr/include/ldap.h	/^#define LDAP_OPT_ON	/;"	d
LDAP_OPT_PRIVATE_EXTENSION_BASE	/usr/include/ldap.h	/^#define LDAP_OPT_PRIVATE_EXTENSION_BASE /;"	d
LDAP_OPT_PROTOCOL_VERSION	/usr/include/ldap.h	/^#define LDAP_OPT_PROTOCOL_VERSION	/;"	d
LDAP_OPT_REFERRALS	/usr/include/ldap.h	/^#define LDAP_OPT_REFERRALS	/;"	d
LDAP_OPT_REFERRAL_URLS	/usr/include/ldap.h	/^#define LDAP_OPT_REFERRAL_URLS /;"	d
LDAP_OPT_REFHOPLIMIT	/usr/include/ldap.h	/^#define LDAP_OPT_REFHOPLIMIT	/;"	d
LDAP_OPT_RESTART	/usr/include/ldap.h	/^#define LDAP_OPT_RESTART	/;"	d
LDAP_OPT_RESULT_CODE	/usr/include/ldap.h	/^#define LDAP_OPT_RESULT_CODE	/;"	d
LDAP_OPT_SERVER_CONTROLS	/usr/include/ldap.h	/^#define LDAP_OPT_SERVER_CONTROLS	/;"	d
LDAP_OPT_SIZELIMIT	/usr/include/ldap.h	/^#define LDAP_OPT_SIZELIMIT	/;"	d
LDAP_OPT_SOCKBUF	/usr/include/ldap.h	/^#define LDAP_OPT_SOCKBUF /;"	d
LDAP_OPT_SUCCESS	/usr/include/ldap.h	/^#define LDAP_OPT_SUCCESS	/;"	d
LDAP_OPT_TIMELIMIT	/usr/include/ldap.h	/^#define LDAP_OPT_TIMELIMIT	/;"	d
LDAP_OPT_TIMEOUT	/usr/include/ldap.h	/^#define LDAP_OPT_TIMEOUT	/;"	d
LDAP_OPT_URI	/usr/include/ldap.h	/^#define LDAP_OPT_URI	/;"	d
LDAP_OPT_X_SASL_AUTHCID	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_AUTHCID	/;"	d
LDAP_OPT_X_SASL_AUTHZID	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_AUTHZID	/;"	d
LDAP_OPT_X_SASL_MAXBUFSIZE	/usr/include/ldap.h	/^#define	LDAP_OPT_X_SASL_MAXBUFSIZE	/;"	d
LDAP_OPT_X_SASL_MECH	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_MECH	/;"	d
LDAP_OPT_X_SASL_REALM	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_REALM	/;"	d
LDAP_OPT_X_SASL_SECPROPS	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_SECPROPS	/;"	d
LDAP_OPT_X_SASL_SSF	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_SSF	/;"	d
LDAP_OPT_X_SASL_SSF_EXTERNAL	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_SSF_EXTERNAL	/;"	d
LDAP_OPT_X_SASL_SSF_MAX	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_SSF_MAX	/;"	d
LDAP_OPT_X_SASL_SSF_MIN	/usr/include/ldap.h	/^#define LDAP_OPT_X_SASL_SSF_MIN	/;"	d
LDAP_OPT_X_TLS	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS	/;"	d
LDAP_OPT_X_TLS_ALLOW	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_ALLOW	/;"	d
LDAP_OPT_X_TLS_CACERTDIR	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CACERTDIR	/;"	d
LDAP_OPT_X_TLS_CACERTFILE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CACERTFILE	/;"	d
LDAP_OPT_X_TLS_CERTFILE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CERTFILE	/;"	d
LDAP_OPT_X_TLS_CIPHER_SUITE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CIPHER_SUITE	/;"	d
LDAP_OPT_X_TLS_CONNECT_ARG	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CONNECT_ARG	/;"	d
LDAP_OPT_X_TLS_CONNECT_CB	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CONNECT_CB	/;"	d
LDAP_OPT_X_TLS_CRLCHECK	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CRLCHECK	/;"	d
LDAP_OPT_X_TLS_CRLFILE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CRLFILE	/;"	d
LDAP_OPT_X_TLS_CRL_ALL	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CRL_ALL	/;"	d
LDAP_OPT_X_TLS_CRL_NONE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CRL_NONE	/;"	d
LDAP_OPT_X_TLS_CRL_PEER	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CRL_PEER	/;"	d
LDAP_OPT_X_TLS_CTX	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_CTX	/;"	d
LDAP_OPT_X_TLS_DEMAND	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_DEMAND	/;"	d
LDAP_OPT_X_TLS_DHFILE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_DHFILE	/;"	d
LDAP_OPT_X_TLS_HARD	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_HARD	/;"	d
LDAP_OPT_X_TLS_KEYFILE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_KEYFILE	/;"	d
LDAP_OPT_X_TLS_NEVER	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_NEVER	/;"	d
LDAP_OPT_X_TLS_NEWCTX	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_NEWCTX	/;"	d
LDAP_OPT_X_TLS_PASSPHRASE_TOOL	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_PASSPHRASE_TOOL	/;"	d
LDAP_OPT_X_TLS_RANDOM_FILE	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_RANDOM_FILE	/;"	d
LDAP_OPT_X_TLS_REQUIRE_CERT	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_REQUIRE_CERT	/;"	d
LDAP_OPT_X_TLS_SSL_CTX	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_SSL_CTX	/;"	d
LDAP_OPT_X_TLS_TRY	/usr/include/ldap.h	/^#define LDAP_OPT_X_TLS_TRY	/;"	d
LDAP_OTHER	/usr/include/ldap.h	/^#define LDAP_OTHER	/;"	d
LDAP_P	/usr/include/ldap_cdefs.h	/^#	define LDAP_P(/;"	d
LDAP_PARAM_ERROR	/usr/include/ldap.h	/^#define LDAP_PARAM_ERROR	/;"	d
LDAP_PARTIAL_RESULTS	/usr/include/ldap.h	/^#define LDAP_PARTIAL_RESULTS	/;"	d
LDAP_PORT	/usr/include/ldap.h	/^#define LDAP_PORT	/;"	d
LDAP_PROTOCOL_ERROR	/usr/include/ldap.h	/^#define LDAP_PROTOCOL_ERROR	/;"	d
LDAP_PROXIED_AUTHORIZATION_DENIED	/usr/include/ldap.h	/^#define LDAP_PROXIED_AUTHORIZATION_DENIED	/;"	d
LDAP_RANGE	/usr/include/ldap.h	/^#define LDAP_RANGE(/;"	d
LDAP_REBIND_PROC	/usr/include/ldap.h	/^typedef int (LDAP_REBIND_PROC) LDAP_P(($/;"	t
LDAP_REFERRAL	/usr/include/ldap.h	/^#define	LDAP_REFERRAL	/;"	d
LDAP_REFERRALS_PREFERRED	/usr/include/ldap.h	/^#define LDAP_REFERRALS_PREFERRED	/;"	d
LDAP_REFERRALS_REQUIRED	/usr/include/ldap.h	/^#define LDAP_REFERRALS_REQUIRED	/;"	d
LDAP_REFERRAL_LIMIT_EXCEEDED	/usr/include/ldap.h	/^#define LDAP_REFERRAL_LIMIT_EXCEEDED	/;"	d
LDAP_REQ_ABANDON	/usr/include/ldap.h	/^#define LDAP_REQ_ABANDON	/;"	d
LDAP_REQ_ADD	/usr/include/ldap.h	/^#define LDAP_REQ_ADD	/;"	d
LDAP_REQ_BIND	/usr/include/ldap.h	/^#define LDAP_REQ_BIND	/;"	d
LDAP_REQ_COMPARE	/usr/include/ldap.h	/^#define LDAP_REQ_COMPARE	/;"	d
LDAP_REQ_DELETE	/usr/include/ldap.h	/^#define LDAP_REQ_DELETE	/;"	d
LDAP_REQ_EXTENDED	/usr/include/ldap.h	/^#define LDAP_REQ_EXTENDED	/;"	d
LDAP_REQ_MODDN	/usr/include/ldap.h	/^#define LDAP_REQ_MODDN	/;"	d
LDAP_REQ_MODIFY	/usr/include/ldap.h	/^#define LDAP_REQ_MODIFY	/;"	d
LDAP_REQ_MODRDN	/usr/include/ldap.h	/^#define LDAP_REQ_MODRDN	/;"	d
LDAP_REQ_RENAME	/usr/include/ldap.h	/^#define LDAP_REQ_RENAME	/;"	d
LDAP_REQ_SEARCH	/usr/include/ldap.h	/^#define LDAP_REQ_SEARCH	/;"	d
LDAP_REQ_UNBIND	/usr/include/ldap.h	/^#define LDAP_REQ_UNBIND	/;"	d
LDAP_RESULTS_TOO_LARGE	/usr/include/ldap.h	/^#define LDAP_RESULTS_TOO_LARGE	/;"	d
LDAP_RES_ADD	/usr/include/ldap.h	/^#define LDAP_RES_ADD	/;"	d
LDAP_RES_ANY	/usr/include/ldap.h	/^#define LDAP_RES_ANY	/;"	d
LDAP_RES_BIND	/usr/include/ldap.h	/^#define LDAP_RES_BIND	/;"	d
LDAP_RES_COMPARE	/usr/include/ldap.h	/^#define LDAP_RES_COMPARE	/;"	d
LDAP_RES_DELETE	/usr/include/ldap.h	/^#define LDAP_RES_DELETE	/;"	d
LDAP_RES_EXTENDED	/usr/include/ldap.h	/^#define LDAP_RES_EXTENDED	/;"	d
LDAP_RES_INTERMEDIATE	/usr/include/ldap.h	/^#define LDAP_RES_INTERMEDIATE	/;"	d
LDAP_RES_MODDN	/usr/include/ldap.h	/^#define LDAP_RES_MODDN	/;"	d
LDAP_RES_MODIFY	/usr/include/ldap.h	/^#define LDAP_RES_MODIFY	/;"	d
LDAP_RES_MODRDN	/usr/include/ldap.h	/^#define LDAP_RES_MODRDN	/;"	d
LDAP_RES_RENAME	/usr/include/ldap.h	/^#define LDAP_RES_RENAME	/;"	d
LDAP_RES_SEARCH_ENTRY	/usr/include/ldap.h	/^#define LDAP_RES_SEARCH_ENTRY	/;"	d
LDAP_RES_SEARCH_REFERENCE	/usr/include/ldap.h	/^#define LDAP_RES_SEARCH_REFERENCE	/;"	d
LDAP_RES_SEARCH_RESULT	/usr/include/ldap.h	/^#define LDAP_RES_SEARCH_RESULT	/;"	d
LDAP_RES_UNSOLICITED	/usr/include/ldap.h	/^#define LDAP_RES_UNSOLICITED	/;"	d
LDAP_REWRITE_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_REWRITE_F(/;"	d
LDAP_REWRITE_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_REWRITE_V(/;"	d
LDAP_ROOT_DSE	/usr/include/ldap.h	/^#define LDAP_ROOT_DSE	/;"	d
LDAP_SASL_AUTOMATIC	/usr/include/ldap.h	/^#define LDAP_SASL_AUTOMATIC	/;"	d
LDAP_SASL_BIND_IN_PROGRESS	/usr/include/ldap.h	/^#define	LDAP_SASL_BIND_IN_PROGRESS	/;"	d
LDAP_SASL_INTERACTIVE	/usr/include/ldap.h	/^#define LDAP_SASL_INTERACTIVE	/;"	d
LDAP_SASL_INTERACT_PROC	/usr/include/ldap.h	/^typedef int (LDAP_SASL_INTERACT_PROC) LDAP_P(($/;"	t
LDAP_SASL_NULL	/usr/include/ldap.h	/^#define LDAP_SASL_NULL	/;"	d
LDAP_SASL_QUIET	/usr/include/ldap.h	/^#define LDAP_SASL_QUIET	/;"	d
LDAP_SASL_SIMPLE	/usr/include/ldap.h	/^#define LDAP_SASL_SIMPLE	/;"	d
LDAP_SCHEMA_ABSTRACT	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ABSTRACT	/;"	d
LDAP_SCHEMA_ALLOW_ALL	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_ALL	/;"	d
LDAP_SCHEMA_ALLOW_DESCR	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_DESCR	/;"	d
LDAP_SCHEMA_ALLOW_DESCR_PREFIX	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_DESCR_PREFIX	/;"	d
LDAP_SCHEMA_ALLOW_NONE	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_NONE	/;"	d
LDAP_SCHEMA_ALLOW_NO_OID	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_NO_OID	/;"	d
LDAP_SCHEMA_ALLOW_OID_MACRO	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_OID_MACRO	/;"	d
LDAP_SCHEMA_ALLOW_OUT_OF_ORDER_FIELDS	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_OUT_OF_ORDER_FIELDS /;"	d
LDAP_SCHEMA_ALLOW_QUOTED	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_ALLOW_QUOTED	/;"	d
LDAP_SCHEMA_AUXILIARY	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_AUXILIARY	/;"	d
LDAP_SCHEMA_DIRECTORY_OPERATION	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_DIRECTORY_OPERATION	/;"	d
LDAP_SCHEMA_DISTRIBUTED_OPERATION	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_DISTRIBUTED_OPERATION	/;"	d
LDAP_SCHEMA_DSA_OPERATION	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_DSA_OPERATION	/;"	d
LDAP_SCHEMA_NO	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_NO	/;"	d
LDAP_SCHEMA_SKIP	/usr/include/ldap_schema.h	/^#define	LDAP_SCHEMA_SKIP	/;"	d
LDAP_SCHEMA_STRUCTURAL	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_STRUCTURAL	/;"	d
LDAP_SCHEMA_USER_APPLICATIONS	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_USER_APPLICATIONS	/;"	d
LDAP_SCHEMA_YES	/usr/include/ldap_schema.h	/^#define LDAP_SCHEMA_YES	/;"	d
LDAP_SCHERR_BADDESC	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_BADDESC	/;"	d
LDAP_SCHERR_BADNAME	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_BADNAME	/;"	d
LDAP_SCHERR_BADSUP	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_BADSUP	/;"	d
LDAP_SCHERR_DUPOPT	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_DUPOPT	/;"	d
LDAP_SCHERR_EMPTY	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_EMPTY	/;"	d
LDAP_SCHERR_MISSING	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_MISSING	/;"	d
LDAP_SCHERR_NODIGIT	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_NODIGIT	/;"	d
LDAP_SCHERR_NOLEFTPAREN	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_NOLEFTPAREN	/;"	d
LDAP_SCHERR_NORIGHTPAREN	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_NORIGHTPAREN	/;"	d
LDAP_SCHERR_OUTOFMEM	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_OUTOFMEM	/;"	d
LDAP_SCHERR_OUT_OF_ORDER	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_OUT_OF_ORDER	/;"	d
LDAP_SCHERR_UNEXPTOKEN	/usr/include/ldap_schema.h	/^#define LDAP_SCHERR_UNEXPTOKEN	/;"	d
LDAP_SCOPE_BASE	/usr/include/ldap.h	/^#define LDAP_SCOPE_BASE	/;"	d
LDAP_SCOPE_BASEOBJECT	/usr/include/ldap.h	/^#define LDAP_SCOPE_BASEOBJECT	/;"	d
LDAP_SCOPE_CHILDREN	/usr/include/ldap.h	/^#define LDAP_SCOPE_CHILDREN	/;"	d
LDAP_SCOPE_DEFAULT	/usr/include/ldap.h	/^#define LDAP_SCOPE_DEFAULT	/;"	d
LDAP_SCOPE_ONE	/usr/include/ldap.h	/^#define LDAP_SCOPE_ONE	/;"	d
LDAP_SCOPE_ONELEVEL	/usr/include/ldap.h	/^#define LDAP_SCOPE_ONELEVEL	/;"	d
LDAP_SCOPE_SUB	/usr/include/ldap.h	/^#define LDAP_SCOPE_SUB	/;"	d
LDAP_SCOPE_SUBORDINATE	/usr/include/ldap.h	/^#define LDAP_SCOPE_SUBORDINATE	/;"	d
LDAP_SCOPE_SUBTREE	/usr/include/ldap.h	/^#define LDAP_SCOPE_SUBTREE	/;"	d
LDAP_SEARCH_FLAG_DOMAIN_SCOPE	/usr/include/ldap.h	/^#define LDAP_SEARCH_FLAG_DOMAIN_SCOPE /;"	d
LDAP_SEARCH_FLAG_PHANTOM_ROOT	/usr/include/ldap.h	/^#define LDAP_SEARCH_FLAG_PHANTOM_ROOT /;"	d
LDAP_SECURITY_ERROR	/usr/include/ldap.h	/^#define LDAP_SECURITY_ERROR(/;"	d
LDAP_SERVER_DOWN	/usr/include/ldap.h	/^#define LDAP_SERVER_DOWN	/;"	d
LDAP_SERVICE_ERROR	/usr/include/ldap.h	/^#define LDAP_SERVICE_ERROR(/;"	d
LDAP_SIZELIMIT_EXCEEDED	/usr/include/ldap.h	/^#define LDAP_SIZELIMIT_EXCEEDED	/;"	d
LDAP_SLAPD_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_SLAPD_F(/;"	d
LDAP_SLAPD_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_SLAPD_V(/;"	d
LDAP_SLAPI_F	/usr/include/ldap_cdefs.h	/^#	define LDAP_SLAPI_F(/;"	d
LDAP_SLAPI_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_SLAPI_V(/;"	d
LDAP_SORT_AD_CMP_PROC	/usr/include/ldap.h	/^typedef int (LDAP_SORT_AD_CMP_PROC) LDAP_P(( \/* deprecated *\/$/;"	t
LDAP_SORT_AV_CMP_PROC	/usr/include/ldap.h	/^typedef int (LDAP_SORT_AV_CMP_PROC) LDAP_P(( \/* deprecated *\/$/;"	t
LDAP_STRING	/usr/include/ldap_cdefs.h	/^#	define LDAP_STRING(/;"	d
LDAP_STRONGER_AUTH_REQUIRED	/usr/include/ldap.h	/^#define LDAP_STRONGER_AUTH_REQUIRED	/;"	d
LDAP_STRONG_AUTH_NOT_SUPPORTED	/usr/include/ldap.h	/^#define LDAP_STRONG_AUTH_NOT_SUPPORTED	/;"	d
LDAP_STRONG_AUTH_REQUIRED	/usr/include/ldap.h	/^#define LDAP_STRONG_AUTH_REQUIRED	/;"	d
LDAP_SUBSTRING_ANY	/usr/include/ldap.h	/^#define LDAP_SUBSTRING_ANY	/;"	d
LDAP_SUBSTRING_FINAL	/usr/include/ldap.h	/^#define LDAP_SUBSTRING_FINAL	/;"	d
LDAP_SUBSTRING_INITIAL	/usr/include/ldap.h	/^#define LDAP_SUBSTRING_INITIAL	/;"	d
LDAP_SUCCESS	/usr/include/ldap.h	/^#define LDAP_SUCCESS	/;"	d
LDAP_SYNC_ADD	/usr/include/ldap.h	/^#define LDAP_SYNC_ADD	/;"	d
LDAP_SYNC_CAPI_ADD	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_ADD		= LDAP_SYNC_ADD,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_DELETE	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_DELETE		= LDAP_SYNC_DELETE,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_DELETES	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_DELETES		= ( LDAP_SYNC_CAPI_PHASE_FLAG | LDAP_SYNC_CAPI_DELETE ),$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_DELETES_IDSET	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_DELETES_IDSET	= ( LDAP_SYNC_CAPI_DELETES | LDAP_SYNC_CAPI_IDSET_FLAG ),$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_DONE	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_DONE		= ( LDAP_SYNC_CAPI_DONE_FLAG | LDAP_SYNC_CAPI_PRESENTS )$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_DONE_FLAG	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_DONE_FLAG	= 0x40U,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_IDSET_FLAG	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_IDSET_FLAG	= 0x20U,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_MODIFY	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_MODIFY		= LDAP_SYNC_MODIFY,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_NONE	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_NONE		= -1,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_PHASE_FLAG	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_PHASE_FLAG	= 0x10U,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_PRESENT	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_PRESENT		= LDAP_SYNC_PRESENT,$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_PRESENTS	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_PRESENTS		= ( LDAP_SYNC_CAPI_PHASE_FLAG | LDAP_SYNC_CAPI_PRESENT ),$/;"	e	enum:__anon68
LDAP_SYNC_CAPI_PRESENTS_IDSET	/usr/include/ldap.h	/^	LDAP_SYNC_CAPI_PRESENTS_IDSET	= ( LDAP_SYNC_CAPI_PRESENTS | LDAP_SYNC_CAPI_IDSET_FLAG ),$/;"	e	enum:__anon68
LDAP_SYNC_DELETE	/usr/include/ldap.h	/^#define LDAP_SYNC_DELETE	/;"	d
LDAP_SYNC_INFO	/usr/include/ldap.h	/^#define LDAP_SYNC_INFO	/;"	d
LDAP_SYNC_MODIFY	/usr/include/ldap.h	/^#define LDAP_SYNC_MODIFY	/;"	d
LDAP_SYNC_NONE	/usr/include/ldap.h	/^#define LDAP_SYNC_NONE	/;"	d
LDAP_SYNC_OID	/usr/include/ldap.h	/^#define LDAP_SYNC_OID	/;"	d
LDAP_SYNC_PRESENT	/usr/include/ldap.h	/^#define LDAP_SYNC_PRESENT	/;"	d
LDAP_SYNC_REFRESH_AND_PERSIST	/usr/include/ldap.h	/^#define LDAP_SYNC_REFRESH_AND_PERSIST	/;"	d
LDAP_SYNC_REFRESH_DELETES	/usr/include/ldap.h	/^#define LDAP_SYNC_REFRESH_DELETES	/;"	d
LDAP_SYNC_REFRESH_ONLY	/usr/include/ldap.h	/^#define LDAP_SYNC_REFRESH_ONLY	/;"	d
LDAP_SYNC_REFRESH_PRESENTS	/usr/include/ldap.h	/^#define LDAP_SYNC_REFRESH_PRESENTS	/;"	d
LDAP_SYNC_REFRESH_REQUIRED	/usr/include/ldap.h	/^#define LDAP_SYNC_REFRESH_REQUIRED	/;"	d
LDAP_SYNC_RESERVED	/usr/include/ldap.h	/^#define LDAP_SYNC_RESERVED	/;"	d
LDAP_TAG_CONTROLS	/usr/include/ldap.h	/^#define LDAP_TAG_CONTROLS	/;"	d
LDAP_TAG_EXOP_MODIFY_PASSWD_GEN	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_MODIFY_PASSWD_GEN	/;"	d
LDAP_TAG_EXOP_MODIFY_PASSWD_ID	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_MODIFY_PASSWD_ID	/;"	d
LDAP_TAG_EXOP_MODIFY_PASSWD_NEW	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_MODIFY_PASSWD_NEW	/;"	d
LDAP_TAG_EXOP_MODIFY_PASSWD_OLD	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_MODIFY_PASSWD_OLD	/;"	d
LDAP_TAG_EXOP_REFRESH_REQ_DN	/usr/include/ldap.h	/^#define	LDAP_TAG_EXOP_REFRESH_REQ_DN	/;"	d
LDAP_TAG_EXOP_REFRESH_REQ_TTL	/usr/include/ldap.h	/^#define	LDAP_TAG_EXOP_REFRESH_REQ_TTL	/;"	d
LDAP_TAG_EXOP_REFRESH_RES_TTL	/usr/include/ldap.h	/^#define	LDAP_TAG_EXOP_REFRESH_RES_TTL	/;"	d
LDAP_TAG_EXOP_REQ_OID	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_REQ_OID /;"	d
LDAP_TAG_EXOP_REQ_VALUE	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_REQ_VALUE /;"	d
LDAP_TAG_EXOP_RES_OID	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_RES_OID /;"	d
LDAP_TAG_EXOP_RES_VALUE	/usr/include/ldap.h	/^#define LDAP_TAG_EXOP_RES_VALUE /;"	d
LDAP_TAG_IM_RES_OID	/usr/include/ldap.h	/^#define LDAP_TAG_IM_RES_OID /;"	d
LDAP_TAG_IM_RES_VALUE	/usr/include/ldap.h	/^#define LDAP_TAG_IM_RES_VALUE /;"	d
LDAP_TAG_LDAPCRED	/usr/include/ldap.h	/^#define LDAP_TAG_LDAPCRED	/;"	d
LDAP_TAG_LDAPDN	/usr/include/ldap.h	/^#define LDAP_TAG_LDAPDN	/;"	d
LDAP_TAG_MESSAGE	/usr/include/ldap.h	/^#define LDAP_TAG_MESSAGE	/;"	d
LDAP_TAG_MSGID	/usr/include/ldap.h	/^#define LDAP_TAG_MSGID	/;"	d
LDAP_TAG_NEWSUPERIOR	/usr/include/ldap.h	/^#define LDAP_TAG_NEWSUPERIOR	/;"	d
LDAP_TAG_REFERRAL	/usr/include/ldap.h	/^#define LDAP_TAG_REFERRAL	/;"	d
LDAP_TAG_REFRESHDELETES	/usr/include/ldap.h	/^#define LDAP_TAG_REFRESHDELETES	/;"	d
LDAP_TAG_REFRESHDONE	/usr/include/ldap.h	/^#define LDAP_TAG_REFRESHDONE	/;"	d
LDAP_TAG_RELOAD_HINT	/usr/include/ldap.h	/^#define LDAP_TAG_RELOAD_HINT	/;"	d
LDAP_TAG_SASL_RES_CREDS	/usr/include/ldap.h	/^#define LDAP_TAG_SASL_RES_CREDS	/;"	d
LDAP_TAG_SYNC_COOKIE	/usr/include/ldap.h	/^#define LDAP_TAG_SYNC_COOKIE	/;"	d
LDAP_TAG_SYNC_ID_SET	/usr/include/ldap.h	/^#define	LDAP_TAG_SYNC_ID_SET	/;"	d
LDAP_TAG_SYNC_NEW_COOKIE	/usr/include/ldap.h	/^#define LDAP_TAG_SYNC_NEW_COOKIE	/;"	d
LDAP_TAG_SYNC_REFRESH_DELETE	/usr/include/ldap.h	/^#define LDAP_TAG_SYNC_REFRESH_DELETE	/;"	d
LDAP_TAG_SYNC_REFRESH_PRESENT	/usr/include/ldap.h	/^#define LDAP_TAG_SYNC_REFRESH_PRESENT	/;"	d
LDAP_TIMELIMIT_EXCEEDED	/usr/include/ldap.h	/^#define LDAP_TIMELIMIT_EXCEEDED	/;"	d
LDAP_TIMEOUT	/usr/include/ldap.h	/^#define LDAP_TIMEOUT	/;"	d
LDAP_TOO_LATE	/usr/include/ldap.h	/^#define LDAP_TOO_LATE	/;"	d
LDAP_TYPE_OR_VALUE_EXISTS	/usr/include/ldap.h	/^#define LDAP_TYPE_OR_VALUE_EXISTS	/;"	d
LDAP_UCS4_INVALID	/usr/include/ldap_utf8.h	/^#define LDAP_UCS4_INVALID /;"	d
LDAP_UNAVAILABLE	/usr/include/ldap.h	/^#define LDAP_UNAVAILABLE	/;"	d
LDAP_UNAVAILABLE_CRITICAL_EXTENSION	/usr/include/ldap.h	/^#define	LDAP_UNAVAILABLE_CRITICAL_EXTENSION	/;"	d
LDAP_UNDEFINED_TYPE	/usr/include/ldap.h	/^#define LDAP_UNDEFINED_TYPE	/;"	d
LDAP_UNWILLING_TO_PERFORM	/usr/include/ldap.h	/^#define LDAP_UNWILLING_TO_PERFORM	/;"	d
LDAP_UPDATE_ERROR	/usr/include/ldap.h	/^#define LDAP_UPDATE_ERROR(/;"	d
LDAP_URLEXT_X_FAILEDNAME	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_FAILEDNAME	/;"	d
LDAP_URLEXT_X_FAILEDNAMEOID	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_FAILEDNAMEOID	/;"	d
LDAP_URLEXT_X_LOCALREF	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_LOCALREF	/;"	d
LDAP_URLEXT_X_LOCALREFOID	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_LOCALREFOID	/;"	d
LDAP_URLEXT_X_REFTYPE	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_REFTYPE	/;"	d
LDAP_URLEXT_X_REFTYPEOID	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_REFTYPEOID	/;"	d
LDAP_URLEXT_X_SEARCHEDSUBTREE	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_SEARCHEDSUBTREE	/;"	d
LDAP_URLEXT_X_SEARCHEDSUBTREEOID	/usr/include/ldap.h	/^#define LDAP_URLEXT_X_SEARCHEDSUBTREEOID /;"	d
LDAP_URLLIST_PROC	/usr/include/ldap.h	/^typedef int (LDAP_URLLIST_PROC) LDAP_P(($/;"	t
LDAP_URL_ERR_BADATTRS	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADATTRS	/;"	d
LDAP_URL_ERR_BADENCLOSURE	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADENCLOSURE /;"	d
LDAP_URL_ERR_BADEXTS	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADEXTS	/;"	d
LDAP_URL_ERR_BADFILTER	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADFILTER	/;"	d
LDAP_URL_ERR_BADHOST	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADHOST	/;"	d
LDAP_URL_ERR_BADSCHEME	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADSCHEME	/;"	d
LDAP_URL_ERR_BADSCOPE	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADSCOPE	/;"	d
LDAP_URL_ERR_BADURL	/usr/include/ldap.h	/^#define LDAP_URL_ERR_BADURL	/;"	d
LDAP_URL_ERR_MEM	/usr/include/ldap.h	/^#define LDAP_URL_ERR_MEM	/;"	d
LDAP_URL_ERR_PARAM	/usr/include/ldap.h	/^#define LDAP_URL_ERR_PARAM	/;"	d
LDAP_URL_SUCCESS	/usr/include/ldap.h	/^#define LDAP_URL_SUCCESS	/;"	d
LDAP_USER_CANCELLED	/usr/include/ldap.h	/^#define LDAP_USER_CANCELLED	/;"	d
LDAP_V	/usr/include/ldap_cdefs.h	/^#	define LDAP_V(/;"	d
LDAP_VENDOR_NAME	/usr/include/ldap.h	/^#define LDAP_VENDOR_NAME	/;"	d
LDAP_VENDOR_VERSION	/usr/include/ldap_features.h	/^#define LDAP_VENDOR_VERSION /;"	d
LDAP_VENDOR_VERSION_MAJOR	/usr/include/ldap_features.h	/^#define LDAP_VENDOR_VERSION_MAJOR /;"	d
LDAP_VENDOR_VERSION_MINOR	/usr/include/ldap_features.h	/^#define LDAP_VENDOR_VERSION_MINOR /;"	d
LDAP_VENDOR_VERSION_PATCH	/usr/include/ldap_features.h	/^#define LDAP_VENDOR_VERSION_PATCH /;"	d
LDAP_VERSION	/usr/include/ldap.h	/^#define	LDAP_VERSION	/;"	d
LDAP_VERSION1	/usr/include/ldap.h	/^#define LDAP_VERSION1	/;"	d
LDAP_VERSION2	/usr/include/ldap.h	/^#define LDAP_VERSION2	/;"	d
LDAP_VERSION3	/usr/include/ldap.h	/^#define LDAP_VERSION3	/;"	d
LDAP_VERSION_MAX	/usr/include/ldap.h	/^#define LDAP_VERSION_MAX	/;"	d
LDAP_VERSION_MIN	/usr/include/ldap.h	/^#define LDAP_VERSION_MIN	/;"	d
LDAP_XSTRING	/usr/include/ldap_cdefs.h	/^#	define LDAP_XSTRING(/;"	d
LDAP_X_ASSERTION_FAILED	/usr/include/ldap.h	/^#define LDAP_X_ASSERTION_FAILED	/;"	d
LDAP_X_CANNOT_CHAIN	/usr/include/ldap.h	/^#define LDAP_X_CANNOT_CHAIN	/;"	d
LDAP_X_CONNECTING	/usr/include/ldap.h	/^#define	LDAP_X_CONNECTING	/;"	d
LDAP_X_DISTPROC_BASE	/usr/include/ldap.h	/^#define LDAP_X_DISTPROC_BASE	/;"	d
LDAP_X_ERROR	/usr/include/ldap.h	/^#define LDAP_X_ERROR(/;"	d
LDAP_X_INVALIDREFERENCE	/usr/include/ldap.h	/^#define LDAP_X_INVALIDREFERENCE	/;"	d
LDAP_X_NO_OPERATION	/usr/include/ldap.h	/^#define LDAP_X_NO_OPERATION	/;"	d
LDAP_X_NO_REFERRALS_FOUND	/usr/include/ldap.h	/^#define	LDAP_X_NO_REFERRALS_FOUND	/;"	d
LDAP_X_PROXY_AUTHZ_FAILURE	/usr/include/ldap.h	/^#define LDAP_X_PROXY_AUTHZ_FAILURE	/;"	d
LDAP_X_SYNC_REFRESH_REQUIRED	/usr/include/ldap.h	/^#define LDAP_X_SYNC_REFRESH_REQUIRED	/;"	d
LDAP_X_TXN	/usr/include/ldap.h	/^#define LDAP_X_TXN	/;"	d
LDAP_X_TXN_ID_INVALID	/usr/include/ldap.h	/^#define LDAP_X_TXN_ID_INVALID	/;"	d
LDAP_X_TXN_SPECIFY_OKAY	/usr/include/ldap.h	/^#define LDAP_X_TXN_SPECIFY_OKAY	/;"	d
LDBL_DIG	/usr/include/float.h	/^#define LDBL_DIG	/;"	d
LDBL_DIG	/usr/include/float.h	/^#undef LDBL_DIG$/;"	d
LDBL_EPSILON	/usr/include/float.h	/^#define LDBL_EPSILON	/;"	d
LDBL_EPSILON	/usr/include/float.h	/^#undef LDBL_EPSILON$/;"	d
LDBL_MANT_DIG	/usr/include/float.h	/^#define LDBL_MANT_DIG	/;"	d
LDBL_MANT_DIG	/usr/include/float.h	/^#undef LDBL_MANT_DIG$/;"	d
LDBL_MAX	/usr/include/float.h	/^#define LDBL_MAX	/;"	d
LDBL_MAX	/usr/include/float.h	/^#undef LDBL_MAX$/;"	d
LDBL_MAX_10_EXP	/usr/include/float.h	/^#define LDBL_MAX_10_EXP	/;"	d
LDBL_MAX_10_EXP	/usr/include/float.h	/^#undef LDBL_MAX_10_EXP$/;"	d
LDBL_MAX_EXP	/usr/include/float.h	/^#define LDBL_MAX_EXP	/;"	d
LDBL_MAX_EXP	/usr/include/float.h	/^#undef LDBL_MAX_EXP$/;"	d
LDBL_MIN	/usr/include/float.h	/^#define LDBL_MIN	/;"	d
LDBL_MIN	/usr/include/float.h	/^#undef LDBL_MIN$/;"	d
LDBL_MIN_10_EXP	/usr/include/float.h	/^#define LDBL_MIN_10_EXP	/;"	d
LDBL_MIN_10_EXP	/usr/include/float.h	/^#undef LDBL_MIN_10_EXP$/;"	d
LDBL_MIN_EXP	/usr/include/float.h	/^#define LDBL_MIN_EXP	/;"	d
LDBL_MIN_EXP	/usr/include/float.h	/^#undef LDBL_MIN_EXP$/;"	d
LDOUBLE	/usr/include/sqltypes.h	/^typedef double			LDOUBLE;$/;"	t
LIBEDIT_MAJOR	/usr/include/histedit.h	/^#define	LIBEDIT_MAJOR /;"	d
LIBEDIT_MINOR	/usr/include/histedit.h	/^#define	LIBEDIT_MINOR /;"	d
LNKTYPE	/usr/include/tar.h	/^#define	LNKTYPE	/;"	d
LOC	/usr/include/dns_util.h	/^		dns_LOC_record_t *LOC;$/;"	m	union:__anon41::__anon42	access:public
LOCALDOMAINPARTS	/usr/include/resolv.h	/^#define	LOCALDOMAINPARTS	/;"	d
LOGIN_PROCESS	/usr/include/utmpx.h	/^#define LOGIN_PROCESS	/;"	d
LONG	/usr/include/tcl.h	/^typedef long LONG;$/;"	t
LOW_MSB	/usr/include/tic.h	/^#define LOW_MSB(/;"	d
LPCSTR	/usr/include/iodbcunix.h	/^typedef const char *		LPCSTR;$/;"	t
LPCWSTR	/usr/include/iodbcunix.h	/^typedef const wchar_t *		LPCWSTR;$/;"	t
LPDWORD	/usr/include/iodbcunix.h	/^typedef DWORD *			LPDWORD;$/;"	t
LPSTR	/usr/include/iodbcunix.h	/^typedef char *			LPSTR;$/;"	t
LPWSTR	/usr/include/iodbcunix.h	/^typedef wchar_t *		LPWSTR;$/;"	t
LTDL_H	/usr/include/ltdl.h	/^#define LTDL_H /;"	d
LTDL_SET_PRELOADED_SYMBOLS	/usr/include/ltdl.h	/^#define LTDL_SET_PRELOADED_SYMBOLS(/;"	d
LTM_PRIME_2MSB_ON	/usr/include/tclTomMath.h	/^#define LTM_PRIME_2MSB_ON /;"	d
LTM_PRIME_BBS	/usr/include/tclTomMath.h	/^#define LTM_PRIME_BBS /;"	d
LTM_PRIME_SAFE	/usr/include/tclTomMath.h	/^#define LTM_PRIME_SAFE /;"	d
LT_STRLEN	/usr/include/ltdl.h	/^#define LT_STRLEN(/;"	d
L_ctermid	/usr/include/stdio.h	/^#define	L_ctermid	/;"	d
L_tmpnam	/usr/include/stdio.h	/^#define	L_tmpnam	/;"	d
LearnerNode	/usr/include/mecab.h	/^  typedef struct mecab_learner_node_t    LearnerNode;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_learner_node_t
LearnerPath	/usr/include/mecab.h	/^  typedef struct mecab_learner_path_t    LearnerPath;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_learner_path_t
LexerError	/usr/include/FlexLexer.h	/^	virtual void LexerError( const char* msg );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* msg )
LexerInput	/usr/include/FlexLexer.h	/^	virtual int LexerInput( char* buf, int max_size );$/;"	p	class:yyFlexLexer	access:protected	signature:( char* buf, int max_size )
LexerOutput	/usr/include/FlexLexer.h	/^	virtual void LexerOutput( const char* buf, int size );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* buf, int size )
LineInfo	/usr/include/histedit.h	/^} LineInfo;$/;"	t	typeref:struct:lineinfo
MAC_OS_X_VERSION_10_0	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_0 /;"	d
MAC_OS_X_VERSION_10_1	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_1 /;"	d
MAC_OS_X_VERSION_10_2	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_2 /;"	d
MAC_OS_X_VERSION_10_3	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_3 /;"	d
MAC_OS_X_VERSION_10_4	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_4 /;"	d
MAC_OS_X_VERSION_10_5	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_5 /;"	d
MAC_OS_X_VERSION_10_6	/usr/include/AvailabilityMacros.h	/^#define MAC_OS_X_VERSION_10_6 /;"	d
MAC_OS_X_VERSION_MAX_ALLOWED	/usr/include/AvailabilityMacros.h	/^        #define MAC_OS_X_VERSION_MAX_ALLOWED /;"	d
MAC_OS_X_VERSION_MIN_REQUIRED	/usr/include/AvailabilityMacros.h	/^            #define MAC_OS_X_VERSION_MIN_REQUIRED /;"	d
MAC_OS_X_VERSION_MIN_REQUIRED	/usr/include/AvailabilityMacros.h	/^        #define MAC_OS_X_VERSION_MIN_REQUIRED /;"	d
MAGIC	/usr/include/cpio.h	/^#define	MAGIC	/;"	d
MAGIC	/usr/include/tic.h	/^#define MAGIC	/;"	d
MAX	/usr/include/tclTomMath.h	/^   #define MAX(/;"	d
MAXDFLSRCH	/usr/include/resolv.h	/^#define	MAXDFLSRCH	/;"	d
MAXDNSRCH	/usr/include/resolv.h	/^#define	MAXDNSRCH	/;"	d
MAXNS	/usr/include/resolv.h	/^#define	MAXNS	/;"	d
MAXPATHLEN	/usr/include/fcgios.h	/^#define MAXPATHLEN /;"	d
MAXRESOLVSORT	/usr/include/resolv.h	/^#define	MAXRESOLVSORT	/;"	d
MAXSEG_64K	/usr/include/zconf.h	/^#  define MAXSEG_64K$/;"	d
MAX_ALIAS	/usr/include/tic.h	/^#define MAX_ALIAS	/;"	d
MAX_COMMAND	/usr/include/form.h	/^#  define MAX_COMMAND /;"	d
MAX_COMMAND	/usr/include/menu.h	/^#  define MAX_COMMAND /;"	d
MAX_CROSSLINKS	/usr/include/term_entry.h	/^#define MAX_CROSSLINKS	/;"	d
MAX_DEBUG_LEVEL	/usr/include/tic.h	/^#define MAX_DEBUG_LEVEL /;"	d
MAX_ENTRY_SIZE	/usr/include/tic.h	/^#define MAX_ENTRY_SIZE	/;"	d
MAX_FORM_COMMAND	/usr/include/form.h	/^#define MAX_FORM_COMMAND /;"	d
MAX_LINE	/usr/include/term_entry.h	/^#define MAX_LINE	/;"	d
MAX_MEM_LEVEL	/usr/include/zconf.h	/^#    define MAX_MEM_LEVEL /;"	d
MAX_MENU_COMMAND	/usr/include/menu.h	/^#define MAX_MENU_COMMAND /;"	d
MAX_NAME_SIZE	/usr/include/tic.h	/^#define MAX_NAME_SIZE	/;"	d
MAX_PAGE_NUMBER	/usr/include/db.h	/^#define	MAX_PAGE_NUMBER	/;"	d
MAX_PAGE_OFFSET	/usr/include/db.h	/^#define	MAX_PAGE_OFFSET	/;"	d
MAX_REC_NUMBER	/usr/include/db.h	/^#define	MAX_REC_NUMBER	/;"	d
MAX_TERMCAP_LENGTH	/usr/include/tic.h	/^#define MAX_TERMCAP_LENGTH	/;"	d
MAX_TERMINFO_LENGTH	/usr/include/tic.h	/^#define MAX_TERMINFO_LENGTH	/;"	d
MAX_USES	/usr/include/term_entry.h	/^#define MAX_USES	/;"	d
MAX_WBITS	/usr/include/zconf.h	/^#  define MAX_WBITS /;"	d
MB	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MB;$/;"	m	union:__anon41::__anon42	access:public
MB_CUR_MAX	/usr/include/stdlib.h	/^#define	MB_CUR_MAX	/;"	d
MB_CUR_MAX	/usr/include/xlocale.h	/^#define MB_CUR_MAX	/;"	d
MB_CUR_MAX	/usr/include/xlocale.h	/^#undef MB_CUR_MAX$/;"	d
MB_CUR_MAX_L	/usr/include/stdlib.h	/^#define	MB_CUR_MAX_L(/;"	d
MB_CUR_MAX_L	/usr/include/xlocale.h	/^#define MB_CUR_MAX_L(/;"	d
MD	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MD;		\/* Obsolete *\/$/;"	m	union:__anon41::__anon42	access:public
MECAB_BOS_NODE	/usr/include/mecab.h	/^#define MECAB_BOS_NODE /;"	d
MECAB_DLL_EXTERN	/usr/include/mecab.h	/^#    define MECAB_DLL_EXTERN /;"	d
MECAB_DLL_EXTERN	/usr/include/mecab.h	/^#  define MECAB_DLL_EXTERN /;"	d
MECAB_EOS_NODE	/usr/include/mecab.h	/^#define MECAB_EOS_NODE /;"	d
MECAB_MECAB_H	/usr/include/mecab.h	/^#define MECAB_MECAB_H$/;"	d
MECAB_NOR_NODE	/usr/include/mecab.h	/^#define MECAB_NOR_NODE /;"	d
MECAB_SYS_DIC	/usr/include/mecab.h	/^#define MECAB_SYS_DIC /;"	d
MECAB_UNK_DIC	/usr/include/mecab.h	/^#define MECAB_UNK_DIC /;"	d
MECAB_UNK_NODE	/usr/include/mecab.h	/^#define MECAB_UNK_NODE /;"	d
MECAB_USR_DIC	/usr/include/mecab.h	/^#define MECAB_USR_DIC /;"	d
MENU	/usr/include/menu.h	/^} MENU;$/;"	t	typeref:struct:tagMENU
MEVENT	/usr/include/curses.h	/^MEVENT;$/;"	t	typeref:struct:__anon10
MEVENT	/usr/include/ncurses.h	/^MEVENT;$/;"	t	typeref:struct:__anon86
MF	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MF;		\/* Obsolete *\/$/;"	m	union:__anon41::__anon42	access:public
MG	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MG;$/;"	m	union:__anon41::__anon42	access:public
MIN	/usr/include/tclTomMath.h	/^   #define MIN(/;"	d
MINFO	/usr/include/dns_util.h	/^		dns_MINFO_record_t *MINFO;$/;"	m	union:__anon41::__anon42	access:public
MINSPERHOUR	/usr/include/tzfile.h	/^#define MINSPERHOUR	/;"	d
MINS_PER_HOUR	/usr/include/tzfile.h	/^#define MINS_PER_HOUR	/;"	d
MIN_FORM_COMMAND	/usr/include/form.h	/^#define MIN_FORM_COMMAND /;"	d
MIN_MENU_COMMAND	/usr/include/menu.h	/^#define MIN_MENU_COMMAND /;"	d
MM_APPL	/usr/include/fmtmsg.h	/^#define	MM_APPL	/;"	d
MM_CONSOLE	/usr/include/fmtmsg.h	/^#define	MM_CONSOLE	/;"	d
MM_ERROR	/usr/include/fmtmsg.h	/^#define	MM_ERROR	/;"	d
MM_FIRM	/usr/include/fmtmsg.h	/^#define	MM_FIRM	/;"	d
MM_HALT	/usr/include/fmtmsg.h	/^#define	MM_HALT	/;"	d
MM_HARD	/usr/include/fmtmsg.h	/^#define	MM_HARD	/;"	d
MM_INFO	/usr/include/fmtmsg.h	/^#define	MM_INFO	/;"	d
MM_NOCON	/usr/include/fmtmsg.h	/^#define	MM_NOCON	/;"	d
MM_NOMSG	/usr/include/fmtmsg.h	/^#define	MM_NOMSG	/;"	d
MM_NOSEV	/usr/include/fmtmsg.h	/^#define	MM_NOSEV	/;"	d
MM_NOTOK	/usr/include/fmtmsg.h	/^#define	MM_NOTOK	/;"	d
MM_NRECOV	/usr/include/fmtmsg.h	/^#define	MM_NRECOV	/;"	d
MM_NULLACT	/usr/include/fmtmsg.h	/^#define	MM_NULLACT	/;"	d
MM_NULLLBL	/usr/include/fmtmsg.h	/^#define	MM_NULLLBL	/;"	d
MM_NULLMC	/usr/include/fmtmsg.h	/^#define	MM_NULLMC	/;"	d
MM_NULLSEV	/usr/include/fmtmsg.h	/^#define	MM_NULLSEV	/;"	d
MM_NULLTAG	/usr/include/fmtmsg.h	/^#define	MM_NULLTAG	/;"	d
MM_NULLTXT	/usr/include/fmtmsg.h	/^#define	MM_NULLTXT	/;"	d
MM_OK	/usr/include/fmtmsg.h	/^#define	MM_OK	/;"	d
MM_OPSYS	/usr/include/fmtmsg.h	/^#define	MM_OPSYS	/;"	d
MM_PRINT	/usr/include/fmtmsg.h	/^#define	MM_PRINT	/;"	d
MM_RECOVER	/usr/include/fmtmsg.h	/^#define	MM_RECOVER	/;"	d
MM_SOFT	/usr/include/fmtmsg.h	/^#define	MM_SOFT	/;"	d
MM_UTIL	/usr/include/fmtmsg.h	/^#define	MM_UTIL	/;"	d
MM_WARNING	/usr/include/fmtmsg.h	/^#define	MM_WARNING	/;"	d
MODULE_SCOPE	/usr/include/tclTomMath.h	/^#define MODULE_SCOPE /;"	d
MONSPERYEAR	/usr/include/tzfile.h	/^#define MONSPERYEAR	/;"	d
MONS_PER_YEAR	/usr/include/tzfile.h	/^#define MONS_PER_YEAR	/;"	d
MON_1	/usr/include/langinfo.h	/^#define	MON_1	/;"	d
MON_10	/usr/include/langinfo.h	/^#define	MON_10	/;"	d
MON_11	/usr/include/langinfo.h	/^#define	MON_11	/;"	d
MON_12	/usr/include/langinfo.h	/^#define	MON_12	/;"	d
MON_2	/usr/include/langinfo.h	/^#define	MON_2	/;"	d
MON_3	/usr/include/langinfo.h	/^#define	MON_3	/;"	d
MON_4	/usr/include/langinfo.h	/^#define	MON_4	/;"	d
MON_5	/usr/include/langinfo.h	/^#define	MON_5	/;"	d
MON_6	/usr/include/langinfo.h	/^#define	MON_6	/;"	d
MON_7	/usr/include/langinfo.h	/^#define	MON_7	/;"	d
MON_8	/usr/include/langinfo.h	/^#define	MON_8	/;"	d
MON_9	/usr/include/langinfo.h	/^#define	MON_9	/;"	d
MPIO_Request	/usr/include/mpi.h	/^#define MPIO_Request /;"	d
MPIO_Test	/usr/include/mpi.h	/^#define MPIO_Test /;"	d
MPIO_Wait	/usr/include/mpi.h	/^#define MPIO_Wait /;"	d
MPI_2COMPLEX	/usr/include/mpi.h	/^#define MPI_2COMPLEX /;"	d
MPI_2DOUBLE_COMPLEX	/usr/include/mpi.h	/^#define MPI_2DOUBLE_COMPLEX /;"	d
MPI_2DOUBLE_PRECISION	/usr/include/mpi.h	/^#define MPI_2DOUBLE_PRECISION /;"	d
MPI_2INT	/usr/include/mpi.h	/^#define MPI_2INT /;"	d
MPI_2INTEGER	/usr/include/mpi.h	/^#define MPI_2INTEGER /;"	d
MPI_2REAL	/usr/include/mpi.h	/^#define MPI_2REAL /;"	d
MPI_ANY_SOURCE	/usr/include/mpi.h	/^#define MPI_ANY_SOURCE /;"	d
MPI_ANY_TAG	/usr/include/mpi.h	/^#define MPI_ANY_TAG /;"	d
MPI_APPNUM	/usr/include/mpi.h	/^    MPI_APPNUM,$/;"	e	enum:__anon77
MPI_ARGVS_NULL	/usr/include/mpi.h	/^#define MPI_ARGVS_NULL /;"	d
MPI_ARGV_NULL	/usr/include/mpi.h	/^#define MPI_ARGV_NULL /;"	d
MPI_Abort	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Abort(MPI_Comm comm, int errorcode);$/;"	p	signature:(MPI_Comm comm, int errorcode)
MPI_Accumulate	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Accumulate(void *origin_addr, int origin_count, MPI_Datatype origin_datatype,$/;"	p	signature:(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win)
MPI_Add_error_class	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Add_error_class(int *errorclass);$/;"	p	signature:(int *errorclass)
MPI_Add_error_code	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Add_error_code(int errorclass, int *errorcode);$/;"	p	signature:(int errorclass, int *errorcode)
MPI_Add_error_string	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Add_error_string(int errorcode, char *string);$/;"	p	signature:(int errorcode, char *string)
MPI_Address	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Address(void *location, MPI_Aint *address);$/;"	p	signature:(void *location, MPI_Aint *address)
MPI_Aint	/usr/include/mpi.h	/^typedef OMPI_PTRDIFF_TYPE MPI_Aint;$/;"	t
MPI_Allgather	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Allgather(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm)
MPI_Allgatherv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Allgatherv(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, MPI_Comm comm)
MPI_Alloc_mem	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Alloc_mem(MPI_Aint size, MPI_Info info, $/;"	p	signature:(MPI_Aint size, MPI_Info info, void *baseptr)
MPI_Allreduce	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Allreduce(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
MPI_Alltoall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Alltoall(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm)
MPI_Alltoallv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Alltoallv(void *sendbuf, int *sendcounts, int *sdispls, $/;"	p	signature:(void *sendbuf, int *sendcounts, int *sdispls, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *rdispls, MPI_Datatype recvtype, MPI_Comm comm)
MPI_Alltoallw	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Alltoallw(void *sendbuf, int *sendcounts, int *sdispls, MPI_Datatype *sendtypes, $/;"	p	signature:(void *sendbuf, int *sendcounts, int *sdispls, MPI_Datatype *sendtypes, void *recvbuf, int *recvcounts, int *rdispls, MPI_Datatype *recvtypes, MPI_Comm comm)
MPI_Attr_delete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Attr_delete(MPI_Comm comm, int keyval);$/;"	p	signature:(MPI_Comm comm, int keyval)
MPI_Attr_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Attr_get(MPI_Comm comm, int keyval, void *attribute_val, int *flag);$/;"	p	signature:(MPI_Comm comm, int keyval, void *attribute_val, int *flag)
MPI_Attr_put	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Attr_put(MPI_Comm comm, int keyval, void *attribute_val);$/;"	p	signature:(MPI_Comm comm, int keyval, void *attribute_val)
MPI_BAND	/usr/include/mpi.h	/^#define MPI_BAND /;"	d
MPI_BOR	/usr/include/mpi.h	/^#define MPI_BOR /;"	d
MPI_BOTTOM	/usr/include/mpi.h	/^#define MPI_BOTTOM /;"	d
MPI_BSEND_OVERHEAD	/usr/include/mpi.h	/^#define MPI_BSEND_OVERHEAD /;"	d
MPI_BXOR	/usr/include/mpi.h	/^#define MPI_BXOR /;"	d
MPI_BYTE	/usr/include/mpi.h	/^#define MPI_BYTE /;"	d
MPI_Barrier	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Barrier(MPI_Comm comm);$/;"	p	signature:(MPI_Comm comm)
MPI_Bcast	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Bcast(void *buffer, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm)
MPI_Bsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Bsend(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
MPI_Bsend_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Bsend_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Buffer_attach	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Buffer_attach(void *buffer, int size);$/;"	p	signature:(void *buffer, int size)
MPI_Buffer_detach	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Buffer_detach(void *buffer, int *size);$/;"	p	signature:(void *buffer, int *size)
MPI_CART	/usr/include/mpi.h	/^#define MPI_CART /;"	d
MPI_CHAR	/usr/include/mpi.h	/^#define MPI_CHAR /;"	d
MPI_CHARACTER	/usr/include/mpi.h	/^#define MPI_CHARACTER /;"	d
MPI_COMBINER_CONTIGUOUS	/usr/include/mpi.h	/^  MPI_COMBINER_CONTIGUOUS,$/;"	e	enum:__anon80
MPI_COMBINER_DARRAY	/usr/include/mpi.h	/^  MPI_COMBINER_DARRAY,$/;"	e	enum:__anon80
MPI_COMBINER_DUP	/usr/include/mpi.h	/^  MPI_COMBINER_DUP,$/;"	e	enum:__anon80
MPI_COMBINER_F90_COMPLEX	/usr/include/mpi.h	/^  MPI_COMBINER_F90_COMPLEX,$/;"	e	enum:__anon80
MPI_COMBINER_F90_INTEGER	/usr/include/mpi.h	/^  MPI_COMBINER_F90_INTEGER,$/;"	e	enum:__anon80
MPI_COMBINER_F90_REAL	/usr/include/mpi.h	/^  MPI_COMBINER_F90_REAL,$/;"	e	enum:__anon80
MPI_COMBINER_HINDEXED	/usr/include/mpi.h	/^  MPI_COMBINER_HINDEXED,$/;"	e	enum:__anon80
MPI_COMBINER_HINDEXED_INTEGER	/usr/include/mpi.h	/^  MPI_COMBINER_HINDEXED_INTEGER,$/;"	e	enum:__anon80
MPI_COMBINER_HVECTOR	/usr/include/mpi.h	/^  MPI_COMBINER_HVECTOR,$/;"	e	enum:__anon80
MPI_COMBINER_HVECTOR_INTEGER	/usr/include/mpi.h	/^  MPI_COMBINER_HVECTOR_INTEGER,$/;"	e	enum:__anon80
MPI_COMBINER_INDEXED	/usr/include/mpi.h	/^  MPI_COMBINER_INDEXED,$/;"	e	enum:__anon80
MPI_COMBINER_INDEXED_BLOCK	/usr/include/mpi.h	/^  MPI_COMBINER_INDEXED_BLOCK,$/;"	e	enum:__anon80
MPI_COMBINER_NAMED	/usr/include/mpi.h	/^  MPI_COMBINER_NAMED,$/;"	e	enum:__anon80
MPI_COMBINER_RESIZED	/usr/include/mpi.h	/^  MPI_COMBINER_RESIZED$/;"	e	enum:__anon80
MPI_COMBINER_STRUCT	/usr/include/mpi.h	/^  MPI_COMBINER_STRUCT,$/;"	e	enum:__anon80
MPI_COMBINER_STRUCT_INTEGER	/usr/include/mpi.h	/^  MPI_COMBINER_STRUCT_INTEGER,$/;"	e	enum:__anon80
MPI_COMBINER_SUBARRAY	/usr/include/mpi.h	/^  MPI_COMBINER_SUBARRAY,$/;"	e	enum:__anon80
MPI_COMBINER_VECTOR	/usr/include/mpi.h	/^  MPI_COMBINER_VECTOR,$/;"	e	enum:__anon80
MPI_COMM_DUP_FN	/usr/include/mpi.h	/^#define MPI_COMM_DUP_FN /;"	d
MPI_COMM_NULL	/usr/include/mpi.h	/^#define MPI_COMM_NULL /;"	d
MPI_COMM_NULL_COPY_FN	/usr/include/mpi.h	/^#define MPI_COMM_NULL_COPY_FN /;"	d
MPI_COMM_NULL_DELETE_FN	/usr/include/mpi.h	/^#define MPI_COMM_NULL_DELETE_FN /;"	d
MPI_COMM_SELF	/usr/include/mpi.h	/^#define MPI_COMM_SELF /;"	d
MPI_COMM_WORLD	/usr/include/mpi.h	/^#define MPI_COMM_WORLD /;"	d
MPI_COMPLEX	/usr/include/mpi.h	/^#define MPI_COMPLEX /;"	d
MPI_COMPLEX16	/usr/include/mpi.h	/^#define MPI_COMPLEX16 /;"	d
MPI_COMPLEX32	/usr/include/mpi.h	/^#define MPI_COMPLEX32 /;"	d
MPI_COMPLEX8	/usr/include/mpi.h	/^#define MPI_COMPLEX8 /;"	d
MPI_CONGRUENT	/usr/include/mpi.h	/^  MPI_CONGRUENT,$/;"	e	enum:__anon78
MPI_Cancel	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cancel(MPI_Request *request);$/;"	p	signature:(MPI_Request *request)
MPI_Cart_coords	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_coords(MPI_Comm comm, int rank, int maxdims, int *coords);$/;"	p	signature:(MPI_Comm comm, int rank, int maxdims, int *coords)
MPI_Cart_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_create(MPI_Comm old_comm, int ndims, int *dims, $/;"	p	signature:(MPI_Comm old_comm, int ndims, int *dims, int *periods, int reorder, MPI_Comm *comm_cart)
MPI_Cart_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_get(MPI_Comm comm, int maxdims, int *dims, $/;"	p	signature:(MPI_Comm comm, int maxdims, int *dims, int *periods, int *coords)
MPI_Cart_map	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_map(MPI_Comm comm, int ndims, int *dims, $/;"	p	signature:(MPI_Comm comm, int ndims, int *dims, int *periods, int *newrank)
MPI_Cart_rank	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_rank(MPI_Comm comm, int *coords, int *rank);$/;"	p	signature:(MPI_Comm comm, int *coords, int *rank)
MPI_Cart_shift	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_shift(MPI_Comm comm, int direction, int disp, $/;"	p	signature:(MPI_Comm comm, int direction, int disp, int *rank_source, int *rank_dest)
MPI_Cart_sub	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cart_sub(MPI_Comm comm, int *remain_dims, MPI_Comm *new_comm);$/;"	p	signature:(MPI_Comm comm, int *remain_dims, MPI_Comm *new_comm)
MPI_Cartdim_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Cartdim_get(MPI_Comm comm, int *ndims);$/;"	p	signature:(MPI_Comm comm, int *ndims)
MPI_Close_port	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Close_port(char *port_name);$/;"	p	signature:(char *port_name)
MPI_Comm	/usr/include/mpi.h	/^typedef struct ompi_communicator_t *MPI_Comm;$/;"	t	typeref:struct:ompi_communicator_t
MPI_Comm_accept	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_accept(char *port_name, MPI_Info info, int root, $/;"	p	signature:(char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm)
MPI_Comm_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Comm_c2f(MPI_Comm comm);$/;"	p	signature:(MPI_Comm comm)
MPI_Comm_call_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_call_errhandler(MPI_Comm comm, int errorcode);$/;"	p	signature:(MPI_Comm comm, int errorcode)
MPI_Comm_compare	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_compare(MPI_Comm comm1, MPI_Comm comm2, int *result);$/;"	p	signature:(MPI_Comm comm1, MPI_Comm comm2, int *result)
MPI_Comm_connect	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_connect(char *port_name, MPI_Info info, int root, $/;"	p	signature:(char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm)
MPI_Comm_copy_attr_function	/usr/include/mpi.h	/^typedef int (MPI_Comm_copy_attr_function)(MPI_Comm, int, void *,$/;"	t
MPI_Comm_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_create(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm);$/;"	p	signature:(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm)
MPI_Comm_create_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_create_errhandler(MPI_Comm_errhandler_fn *function, $/;"	p	signature:(MPI_Comm_errhandler_fn *function, MPI_Errhandler *errhandler)
MPI_Comm_create_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_create_keyval(MPI_Comm_copy_attr_function *comm_copy_attr_fn, $/;"	p	signature:(MPI_Comm_copy_attr_function *comm_copy_attr_fn, MPI_Comm_delete_attr_function *comm_delete_attr_fn, int *comm_keyval, void *extra_state)
MPI_Comm_delete_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_delete_attr(MPI_Comm comm, int comm_keyval);$/;"	p	signature:(MPI_Comm comm, int comm_keyval)
MPI_Comm_delete_attr_function	/usr/include/mpi.h	/^typedef int (MPI_Comm_delete_attr_function)(MPI_Comm, int, void *, void *);$/;"	t
MPI_Comm_disconnect	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_disconnect(MPI_Comm *comm);$/;"	p	signature:(MPI_Comm *comm)
MPI_Comm_dup	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_dup(MPI_Comm comm, MPI_Comm *newcomm);$/;"	p	signature:(MPI_Comm comm, MPI_Comm *newcomm)
MPI_Comm_errhandler_fn	/usr/include/mpi.h	/^typedef void (MPI_Comm_errhandler_fn)(MPI_Comm *, int *, ...);$/;"	t
MPI_Comm_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Comm MPI_Comm_f2c(MPI_Fint comm);$/;"	p	signature:(MPI_Fint comm)
MPI_Comm_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_free(MPI_Comm *comm);$/;"	p	signature:(MPI_Comm *comm)
MPI_Comm_free_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_free_keyval(int *comm_keyval);$/;"	p	signature:(int *comm_keyval)
MPI_Comm_get_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_get_attr(MPI_Comm comm, int comm_keyval, $/;"	p	signature:(MPI_Comm comm, int comm_keyval, void *attribute_val, int *flag)
MPI_Comm_get_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_get_errhandler(MPI_Comm comm, MPI_Errhandler *erhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler *erhandler)
MPI_Comm_get_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_get_name(MPI_Comm comm, char *comm_name, int *resultlen);$/;"	p	signature:(MPI_Comm comm, char *comm_name, int *resultlen)
MPI_Comm_get_parent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_get_parent(MPI_Comm *parent);$/;"	p	signature:(MPI_Comm *parent)
MPI_Comm_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_group(MPI_Comm comm, MPI_Group *group);$/;"	p	signature:(MPI_Comm comm, MPI_Group *group)
MPI_Comm_join	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_join(int fd, MPI_Comm *intercomm);$/;"	p	signature:(int fd, MPI_Comm *intercomm)
MPI_Comm_rank	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_rank(MPI_Comm comm, int *rank);$/;"	p	signature:(MPI_Comm comm, int *rank)
MPI_Comm_remote_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_remote_group(MPI_Comm comm, MPI_Group *group);$/;"	p	signature:(MPI_Comm comm, MPI_Group *group)
MPI_Comm_remote_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_remote_size(MPI_Comm comm, int *size);$/;"	p	signature:(MPI_Comm comm, int *size)
MPI_Comm_set_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_set_attr(MPI_Comm comm, int comm_keyval, void *attribute_val);$/;"	p	signature:(MPI_Comm comm, int comm_keyval, void *attribute_val)
MPI_Comm_set_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_set_errhandler(MPI_Comm comm, MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler errhandler)
MPI_Comm_set_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_set_name(MPI_Comm comm, char *comm_name);$/;"	p	signature:(MPI_Comm comm, char *comm_name)
MPI_Comm_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_size(MPI_Comm comm, int *size);$/;"	p	signature:(MPI_Comm comm, int *size)
MPI_Comm_spawn	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_spawn(char *command, char **argv, int maxprocs, MPI_Info info, $/;"	p	signature:(char *command, char **argv, int maxprocs, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *intercomm, int *array_of_errcodes)
MPI_Comm_spawn_multiple	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_spawn_multiple(int count, char **array_of_commands, char ***array_of_argv, $/;"	p	signature:(int count, char **array_of_commands, char ***array_of_argv, int *array_of_maxprocs, MPI_Info *array_of_info, int root, MPI_Comm comm, MPI_Comm *intercomm, int *array_of_errcodes)
MPI_Comm_split	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_split(MPI_Comm comm, int color, int key, MPI_Comm *newcomm);$/;"	p	signature:(MPI_Comm comm, int color, int key, MPI_Comm *newcomm)
MPI_Comm_test_inter	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Comm_test_inter(MPI_Comm comm, int *flag);$/;"	p	signature:(MPI_Comm comm, int *flag)
MPI_Copy_function	/usr/include/mpi.h	/^typedef int (MPI_Copy_function)(MPI_Comm, int, void *,$/;"	t
MPI_DATATYPE_NULL	/usr/include/mpi.h	/^#define MPI_DATATYPE_NULL /;"	d
MPI_DISPLACEMENT_CURRENT	/usr/include/mpi.h	/^#define MPI_DISPLACEMENT_CURRENT /;"	d
MPI_DISTRIBUTE_BLOCK	/usr/include/mpi.h	/^#define MPI_DISTRIBUTE_BLOCK /;"	d
MPI_DISTRIBUTE_CYCLIC	/usr/include/mpi.h	/^#define MPI_DISTRIBUTE_CYCLIC /;"	d
MPI_DISTRIBUTE_DFLT_DARG	/usr/include/mpi.h	/^#define MPI_DISTRIBUTE_DFLT_DARG /;"	d
MPI_DISTRIBUTE_NONE	/usr/include/mpi.h	/^#define MPI_DISTRIBUTE_NONE /;"	d
MPI_DOUBLE	/usr/include/mpi.h	/^#define MPI_DOUBLE /;"	d
MPI_DOUBLE_COMPLEX	/usr/include/mpi.h	/^#define MPI_DOUBLE_COMPLEX /;"	d
MPI_DOUBLE_INT	/usr/include/mpi.h	/^#define MPI_DOUBLE_INT /;"	d
MPI_DOUBLE_PRECISION	/usr/include/mpi.h	/^#define MPI_DOUBLE_PRECISION /;"	d
MPI_DUP_FN	/usr/include/mpi.h	/^#define MPI_DUP_FN /;"	d
MPI_Datarep_conversion_function	/usr/include/mpi.h	/^typedef int (MPI_Datarep_conversion_function)(void *, MPI_Datatype, $/;"	t
MPI_Datarep_extent_function	/usr/include/mpi.h	/^typedef int (MPI_Datarep_extent_function)(MPI_Datatype, MPI_Aint *, void *);$/;"	t
MPI_Datatype	/usr/include/mpi.h	/^typedef struct ompi_datatype_t *MPI_Datatype;$/;"	t	typeref:struct:ompi_datatype_t
MPI_Delete_function	/usr/include/mpi.h	/^typedef int (MPI_Delete_function)(MPI_Comm, int, void *, void *);$/;"	t
MPI_Dims_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Dims_create(int nnodes, int ndims, int *dims);$/;"	p	signature:(int nnodes, int ndims, int *dims)
MPI_ERRCODES_IGNORE	/usr/include/mpi.h	/^#define MPI_ERRCODES_IGNORE /;"	d
MPI_ERRHANDLER_NULL	/usr/include/mpi.h	/^#define MPI_ERRHANDLER_NULL /;"	d
MPI_ERROR	/usr/include/mpi.h	/^  int MPI_ERROR;$/;"	m	struct:ompi_status_public_t	access:public
MPI_ERRORS_ARE_FATAL	/usr/include/mpi.h	/^#define MPI_ERRORS_ARE_FATAL /;"	d
MPI_ERRORS_RETURN	/usr/include/mpi.h	/^#define MPI_ERRORS_RETURN /;"	d
MPI_ERR_ACCESS	/usr/include/mpi.h	/^#define MPI_ERR_ACCESS /;"	d
MPI_ERR_AMODE	/usr/include/mpi.h	/^#define MPI_ERR_AMODE /;"	d
MPI_ERR_ARG	/usr/include/mpi.h	/^#define MPI_ERR_ARG /;"	d
MPI_ERR_ASSERT	/usr/include/mpi.h	/^#define MPI_ERR_ASSERT /;"	d
MPI_ERR_BAD_FILE	/usr/include/mpi.h	/^#define MPI_ERR_BAD_FILE /;"	d
MPI_ERR_BASE	/usr/include/mpi.h	/^#define MPI_ERR_BASE /;"	d
MPI_ERR_BUFFER	/usr/include/mpi.h	/^#define MPI_ERR_BUFFER /;"	d
MPI_ERR_COMM	/usr/include/mpi.h	/^#define MPI_ERR_COMM /;"	d
MPI_ERR_CONVERSION	/usr/include/mpi.h	/^#define MPI_ERR_CONVERSION /;"	d
MPI_ERR_COUNT	/usr/include/mpi.h	/^#define MPI_ERR_COUNT /;"	d
MPI_ERR_DIMS	/usr/include/mpi.h	/^#define MPI_ERR_DIMS /;"	d
MPI_ERR_DISP	/usr/include/mpi.h	/^#define MPI_ERR_DISP /;"	d
MPI_ERR_DUP_DATAREP	/usr/include/mpi.h	/^#define MPI_ERR_DUP_DATAREP /;"	d
MPI_ERR_FILE	/usr/include/mpi.h	/^#define MPI_ERR_FILE /;"	d
MPI_ERR_FILE_EXISTS	/usr/include/mpi.h	/^#define MPI_ERR_FILE_EXISTS /;"	d
MPI_ERR_FILE_IN_USE	/usr/include/mpi.h	/^#define MPI_ERR_FILE_IN_USE /;"	d
MPI_ERR_GROUP	/usr/include/mpi.h	/^#define MPI_ERR_GROUP /;"	d
MPI_ERR_INFO	/usr/include/mpi.h	/^#define MPI_ERR_INFO /;"	d
MPI_ERR_INFO_KEY	/usr/include/mpi.h	/^#define MPI_ERR_INFO_KEY /;"	d
MPI_ERR_INFO_NOKEY	/usr/include/mpi.h	/^#define MPI_ERR_INFO_NOKEY /;"	d
MPI_ERR_INFO_VALUE	/usr/include/mpi.h	/^#define MPI_ERR_INFO_VALUE /;"	d
MPI_ERR_INTERN	/usr/include/mpi.h	/^#define MPI_ERR_INTERN /;"	d
MPI_ERR_IN_STATUS	/usr/include/mpi.h	/^#define MPI_ERR_IN_STATUS /;"	d
MPI_ERR_IO	/usr/include/mpi.h	/^#define MPI_ERR_IO /;"	d
MPI_ERR_KEYVAL	/usr/include/mpi.h	/^#define MPI_ERR_KEYVAL /;"	d
MPI_ERR_LASTCODE	/usr/include/mpi.h	/^#define MPI_ERR_LASTCODE /;"	d
MPI_ERR_LOCKTYPE	/usr/include/mpi.h	/^#define MPI_ERR_LOCKTYPE /;"	d
MPI_ERR_NAME	/usr/include/mpi.h	/^#define MPI_ERR_NAME /;"	d
MPI_ERR_NOT_SAME	/usr/include/mpi.h	/^#define MPI_ERR_NOT_SAME /;"	d
MPI_ERR_NO_MEM	/usr/include/mpi.h	/^#define MPI_ERR_NO_MEM /;"	d
MPI_ERR_NO_SPACE	/usr/include/mpi.h	/^#define MPI_ERR_NO_SPACE /;"	d
MPI_ERR_NO_SUCH_FILE	/usr/include/mpi.h	/^#define MPI_ERR_NO_SUCH_FILE /;"	d
MPI_ERR_OP	/usr/include/mpi.h	/^#define MPI_ERR_OP /;"	d
MPI_ERR_OTHER	/usr/include/mpi.h	/^#define MPI_ERR_OTHER /;"	d
MPI_ERR_PENDING	/usr/include/mpi.h	/^#define MPI_ERR_PENDING /;"	d
MPI_ERR_PORT	/usr/include/mpi.h	/^#define MPI_ERR_PORT /;"	d
MPI_ERR_QUOTA	/usr/include/mpi.h	/^#define MPI_ERR_QUOTA /;"	d
MPI_ERR_RANK	/usr/include/mpi.h	/^#define MPI_ERR_RANK /;"	d
MPI_ERR_READ_ONLY	/usr/include/mpi.h	/^#define MPI_ERR_READ_ONLY /;"	d
MPI_ERR_REQUEST	/usr/include/mpi.h	/^#define MPI_ERR_REQUEST /;"	d
MPI_ERR_RMA_CONFLICT	/usr/include/mpi.h	/^#define MPI_ERR_RMA_CONFLICT /;"	d
MPI_ERR_RMA_SYNC	/usr/include/mpi.h	/^#define MPI_ERR_RMA_SYNC /;"	d
MPI_ERR_ROOT	/usr/include/mpi.h	/^#define MPI_ERR_ROOT /;"	d
MPI_ERR_SERVICE	/usr/include/mpi.h	/^#define MPI_ERR_SERVICE /;"	d
MPI_ERR_SIZE	/usr/include/mpi.h	/^#define MPI_ERR_SIZE /;"	d
MPI_ERR_SPAWN	/usr/include/mpi.h	/^#define MPI_ERR_SPAWN /;"	d
MPI_ERR_SYSRESOURCE	/usr/include/mpi.h	/^#define MPI_ERR_SYSRESOURCE /;"	d
MPI_ERR_TAG	/usr/include/mpi.h	/^#define MPI_ERR_TAG /;"	d
MPI_ERR_TOPOLOGY	/usr/include/mpi.h	/^#define MPI_ERR_TOPOLOGY /;"	d
MPI_ERR_TRUNCATE	/usr/include/mpi.h	/^#define MPI_ERR_TRUNCATE /;"	d
MPI_ERR_TYPE	/usr/include/mpi.h	/^#define MPI_ERR_TYPE /;"	d
MPI_ERR_UNKNOWN	/usr/include/mpi.h	/^#define MPI_ERR_UNKNOWN /;"	d
MPI_ERR_UNSUPPORTED_DATAREP	/usr/include/mpi.h	/^#define MPI_ERR_UNSUPPORTED_DATAREP /;"	d
MPI_ERR_UNSUPPORTED_OPERATION	/usr/include/mpi.h	/^#define MPI_ERR_UNSUPPORTED_OPERATION /;"	d
MPI_ERR_WIN	/usr/include/mpi.h	/^#define MPI_ERR_WIN /;"	d
MPI_Errhandler	/usr/include/mpi.h	/^typedef struct ompi_errhandler_t *MPI_Errhandler;$/;"	t	typeref:struct:ompi_errhandler_t
MPI_Errhandler_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Errhandler_c2f(MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Errhandler errhandler)
MPI_Errhandler_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Errhandler_create(MPI_Handler_function *function, $/;"	p	signature:(MPI_Handler_function *function, MPI_Errhandler *errhandler)
MPI_Errhandler_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Errhandler MPI_Errhandler_f2c(MPI_Fint errhandler);$/;"	p	signature:(MPI_Fint errhandler)
MPI_Errhandler_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Errhandler_free(MPI_Errhandler *errhandler);$/;"	p	signature:(MPI_Errhandler *errhandler)
MPI_Errhandler_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Errhandler_get(MPI_Comm comm, MPI_Errhandler *errhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler *errhandler)
MPI_Errhandler_set	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Errhandler_set(MPI_Comm comm, MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler errhandler)
MPI_Error_class	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Error_class(int errorcode, int *errorclass);$/;"	p	signature:(int errorcode, int *errorclass)
MPI_Error_string	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Error_string(int errorcode, char *string, int *resultlen);$/;"	p	signature:(int errorcode, char *string, int *resultlen)
MPI_Exscan	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Exscan(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
MPI_FILE_NULL	/usr/include/mpi.h	/^#define MPI_FILE_NULL /;"	d
MPI_FLOAT	/usr/include/mpi.h	/^#define MPI_FLOAT /;"	d
MPI_FLOAT_INT	/usr/include/mpi.h	/^#define MPI_FLOAT_INT /;"	d
MPI_File	/usr/include/mpi.h	/^typedef struct ompi_file_t *MPI_File;$/;"	t	typeref:struct:ompi_file_t
MPI_File_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_File_c2f(MPI_File file);$/;"	p	signature:(MPI_File file)
MPI_File_call_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_call_errhandler(MPI_File fh, int errorcode);$/;"	p	signature:(MPI_File fh, int errorcode)
MPI_File_close	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_close(MPI_File *fh);$/;"	p	signature:(MPI_File *fh)
MPI_File_create_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_create_errhandler(MPI_File_errhandler_fn *function,$/;"	p	signature:(MPI_File_errhandler_fn *function, MPI_Errhandler *errhandler)
MPI_File_delete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_delete(char *filename, MPI_Info info);$/;"	p	signature:(char *filename, MPI_Info info)
MPI_File_errhandler_fn	/usr/include/mpi.h	/^typedef void (MPI_File_errhandler_fn)(MPI_File *, int *, ...);$/;"	t
MPI_File_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_File MPI_File_f2c(MPI_Fint file);$/;"	p	signature:(MPI_Fint file)
MPI_File_get_amode	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_amode(MPI_File fh, int *amode);$/;"	p	signature:(MPI_File fh, int *amode)
MPI_File_get_atomicity	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_atomicity(MPI_File fh, int *flag);$/;"	p	signature:(MPI_File fh, int *flag)
MPI_File_get_byte_offset	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_byte_offset(MPI_File fh, MPI_Offset offset,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, MPI_Offset *disp)
MPI_File_get_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_errhandler( MPI_File file, MPI_Errhandler *errhandler);$/;"	p	signature:( MPI_File file, MPI_Errhandler *errhandler)
MPI_File_get_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_group(MPI_File fh, MPI_Group *group);$/;"	p	signature:(MPI_File fh, MPI_Group *group)
MPI_File_get_info	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_info(MPI_File fh, MPI_Info *info_used);$/;"	p	signature:(MPI_File fh, MPI_Info *info_used)
MPI_File_get_position	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_position(MPI_File fh, MPI_Offset *offset);$/;"	p	signature:(MPI_File fh, MPI_Offset *offset)
MPI_File_get_position_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_position_shared(MPI_File fh, MPI_Offset *offset);$/;"	p	signature:(MPI_File fh, MPI_Offset *offset)
MPI_File_get_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_size(MPI_File fh, MPI_Offset *size);$/;"	p	signature:(MPI_File fh, MPI_Offset *size)
MPI_File_get_type_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_type_extent(MPI_File fh, MPI_Datatype datatype,$/;"	p	signature:(MPI_File fh, MPI_Datatype datatype, MPI_Aint *extent)
MPI_File_get_view	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_get_view(MPI_File fh, MPI_Offset *disp,$/;"	p	signature:(MPI_File fh, MPI_Offset *disp, MPI_Datatype *etype, MPI_Datatype *filetype, char *datarep)
MPI_File_iread	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_iread(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
MPI_File_iread_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_iread_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
MPI_File_iread_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_iread_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
MPI_File_iwrite	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_iwrite(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
MPI_File_iwrite_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_iwrite_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
MPI_File_iwrite_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_iwrite_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
MPI_File_open	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_open(MPI_Comm comm, char *filename, int amode,$/;"	p	signature:(MPI_Comm comm, char *filename, int amode, MPI_Info info, MPI_File *fh)
MPI_File_preallocate	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_preallocate(MPI_File fh, MPI_Offset size);$/;"	p	signature:(MPI_File fh, MPI_Offset size)
MPI_File_read	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_read_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_all(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_read_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_all_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
MPI_File_read_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
MPI_File_read_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_read_at_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_at_all(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_read_at_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype)
MPI_File_read_at_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_at_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
MPI_File_read_ordered	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_ordered(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_read_ordered_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_ordered_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
MPI_File_read_ordered_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_ordered_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
MPI_File_read_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_read_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_seek	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_seek(MPI_File fh, MPI_Offset offset, int whence);$/;"	p	signature:(MPI_File fh, MPI_Offset offset, int whence)
MPI_File_seek_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_seek_shared(MPI_File fh, MPI_Offset offset, int whence);$/;"	p	signature:(MPI_File fh, MPI_Offset offset, int whence)
MPI_File_set_atomicity	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_set_atomicity(MPI_File fh, int flag);$/;"	p	signature:(MPI_File fh, int flag)
MPI_File_set_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_set_errhandler( MPI_File file, MPI_Errhandler errhandler);$/;"	p	signature:( MPI_File file, MPI_Errhandler errhandler)
MPI_File_set_info	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_set_info(MPI_File fh, MPI_Info info);$/;"	p	signature:(MPI_File fh, MPI_Info info)
MPI_File_set_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_set_size(MPI_File fh, MPI_Offset size);$/;"	p	signature:(MPI_File fh, MPI_Offset size)
MPI_File_set_view	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_set_view(MPI_File fh, MPI_Offset disp, MPI_Datatype etype,$/;"	p	signature:(MPI_File fh, MPI_Offset disp, MPI_Datatype etype, MPI_Datatype filetype, char *datarep, MPI_Info info)
MPI_File_sync	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_sync(MPI_File fh);$/;"	p	signature:(MPI_File fh)
MPI_File_write	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_write_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_all(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_write_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_all_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
MPI_File_write_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
MPI_File_write_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_write_at_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_at_all(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_write_at_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype)
MPI_File_write_at_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_at_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
MPI_File_write_ordered	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_ordered(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_File_write_ordered_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_ordered_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
MPI_File_write_ordered_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_ordered_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
MPI_File_write_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_File_write_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
MPI_Finalize	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Finalize(void);$/;"	p	signature:(void)
MPI_Finalized	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Finalized(int *flag);$/;"	p	signature:(int *flag)
MPI_Fint	/usr/include/mpi.h	/^#define MPI_Fint /;"	d
MPI_Free_mem	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Free_mem(void *base);$/;"	p	signature:(void *base)
MPI_GRAPH	/usr/include/mpi.h	/^#define MPI_GRAPH /;"	d
MPI_GROUP_EMPTY	/usr/include/mpi.h	/^#define MPI_GROUP_EMPTY /;"	d
MPI_GROUP_NULL	/usr/include/mpi.h	/^#define MPI_GROUP_NULL /;"	d
MPI_Gather	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Gather(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)
MPI_Gatherv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Gatherv(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, int root, MPI_Comm comm)
MPI_Get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Get(void *origin_addr, int origin_count, $/;"	p	signature:(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win)
MPI_Get_address	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Get_address(void *location, MPI_Aint *address);$/;"	p	signature:(void *location, MPI_Aint *address)
MPI_Get_count	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Get_count(MPI_Status *status, MPI_Datatype datatype, int *count);$/;"	p	signature:(MPI_Status *status, MPI_Datatype datatype, int *count)
MPI_Get_elements	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Get_elements(MPI_Status *status, MPI_Datatype datatype, int *count);$/;"	p	signature:(MPI_Status *status, MPI_Datatype datatype, int *count)
MPI_Get_processor_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Get_processor_name(char *name, int *resultlen);$/;"	p	signature:(char *name, int *resultlen)
MPI_Get_version	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Get_version(int *version, int *subversion);$/;"	p	signature:(int *version, int *subversion)
MPI_Graph_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Graph_create(MPI_Comm comm_old, int nnodes, int *index, $/;"	p	signature:(MPI_Comm comm_old, int nnodes, int *index, int *edges, int reorder, MPI_Comm *comm_graph)
MPI_Graph_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Graph_get(MPI_Comm comm, int maxindex, int maxedges, $/;"	p	signature:(MPI_Comm comm, int maxindex, int maxedges, int *index, int *edges)
MPI_Graph_map	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Graph_map(MPI_Comm comm, int nnodes, int *index, int *edges, $/;"	p	signature:(MPI_Comm comm, int nnodes, int *index, int *edges, int *newrank)
MPI_Graph_neighbors	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Graph_neighbors(MPI_Comm comm, int rank, int maxneighbors, $/;"	p	signature:(MPI_Comm comm, int rank, int maxneighbors, int *neighbors)
MPI_Graph_neighbors_count	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Graph_neighbors_count(MPI_Comm comm, int rank, int *nneighbors);$/;"	p	signature:(MPI_Comm comm, int rank, int *nneighbors)
MPI_Graphdims_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Graphdims_get(MPI_Comm comm, int *nnodes, int *nedges);$/;"	p	signature:(MPI_Comm comm, int *nnodes, int *nedges)
MPI_Grequest_cancel_function	/usr/include/mpi.h	/^typedef int (MPI_Grequest_cancel_function)(void *, int); $/;"	t
MPI_Grequest_complete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Grequest_complete(MPI_Request request);$/;"	p	signature:(MPI_Request request)
MPI_Grequest_free_function	/usr/include/mpi.h	/^typedef int (MPI_Grequest_free_function)(void *);$/;"	t
MPI_Grequest_query_function	/usr/include/mpi.h	/^typedef int (MPI_Grequest_query_function)(void *, MPI_Status *);$/;"	t
MPI_Grequest_start	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Grequest_start(MPI_Grequest_query_function *query_fn,$/;"	p	signature:(MPI_Grequest_query_function *query_fn, MPI_Grequest_free_function *free_fn, MPI_Grequest_cancel_function *cancel_fn, void *extra_state, MPI_Request *request)
MPI_Group	/usr/include/mpi.h	/^typedef struct ompi_group_t *MPI_Group;$/;"	t	typeref:struct:ompi_group_t
MPI_Group_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Group_c2f(MPI_Group group);$/;"	p	signature:(MPI_Group group)
MPI_Group_compare	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_compare(MPI_Group group1, MPI_Group group2, int *result);$/;"	p	signature:(MPI_Group group1, MPI_Group group2, int *result)
MPI_Group_difference	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_difference(MPI_Group group1, MPI_Group group2, $/;"	p	signature:(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)
MPI_Group_excl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_excl(MPI_Group group, int n, int *ranks, $/;"	p	signature:(MPI_Group group, int n, int *ranks, MPI_Group *newgroup)
MPI_Group_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Group MPI_Group_f2c(MPI_Fint group);$/;"	p	signature:(MPI_Fint group)
MPI_Group_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_free(MPI_Group *group);$/;"	p	signature:(MPI_Group *group)
MPI_Group_incl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_incl(MPI_Group group, int n, int *ranks, $/;"	p	signature:(MPI_Group group, int n, int *ranks, MPI_Group *newgroup)
MPI_Group_intersection	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_intersection(MPI_Group group1, MPI_Group group2, $/;"	p	signature:(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)
MPI_Group_range_excl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_range_excl(MPI_Group group, int n, int ranges[][3], $/;"	p	signature:(MPI_Group group, int n, int ranges[][3], MPI_Group *newgroup)
MPI_Group_range_incl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_range_incl(MPI_Group group, int n, int ranges[][3], $/;"	p	signature:(MPI_Group group, int n, int ranges[][3], MPI_Group *newgroup)
MPI_Group_rank	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_rank(MPI_Group group, int *rank);$/;"	p	signature:(MPI_Group group, int *rank)
MPI_Group_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_size(MPI_Group group, int *size);$/;"	p	signature:(MPI_Group group, int *size)
MPI_Group_translate_ranks	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_translate_ranks(MPI_Group group1, int n, int *ranks1, $/;"	p	signature:(MPI_Group group1, int n, int *ranks1, MPI_Group group2, int *ranks2)
MPI_Group_union	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Group_union(MPI_Group group1, MPI_Group group2, $/;"	p	signature:(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)
MPI_HOST	/usr/include/mpi.h	/^    MPI_HOST,$/;"	e	enum:__anon77
MPI_Handler_function	/usr/include/mpi.h	/^typedef void (MPI_Handler_function)(MPI_Comm *, int *, ...);$/;"	t
MPI_IDENT	/usr/include/mpi.h	/^  MPI_IDENT,$/;"	e	enum:__anon78
MPI_INFO_NULL	/usr/include/mpi.h	/^#define MPI_INFO_NULL /;"	d
MPI_INT	/usr/include/mpi.h	/^#define MPI_INT /;"	d
MPI_INTEGER	/usr/include/mpi.h	/^#define MPI_INTEGER /;"	d
MPI_INTEGER1	/usr/include/mpi.h	/^#define MPI_INTEGER1 /;"	d
MPI_INTEGER16	/usr/include/mpi.h	/^#define MPI_INTEGER16 /;"	d
MPI_INTEGER2	/usr/include/mpi.h	/^#define MPI_INTEGER2 /;"	d
MPI_INTEGER4	/usr/include/mpi.h	/^#define MPI_INTEGER4 /;"	d
MPI_INTEGER8	/usr/include/mpi.h	/^#define MPI_INTEGER8 /;"	d
MPI_IN_PLACE	/usr/include/mpi.h	/^#define MPI_IN_PLACE /;"	d
MPI_IO	/usr/include/mpi.h	/^    MPI_IO,$/;"	e	enum:__anon77
MPI_Ibsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Ibsend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Info	/usr/include/mpi.h	/^typedef struct ompi_info_t *MPI_Info;$/;"	t	typeref:struct:ompi_info_t
MPI_Info_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Info_c2f(MPI_Info info);$/;"	p	signature:(MPI_Info info)
MPI_Info_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_create(MPI_Info *info);$/;"	p	signature:(MPI_Info *info)
MPI_Info_delete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_delete(MPI_Info info, char *key);$/;"	p	signature:(MPI_Info info, char *key)
MPI_Info_dup	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_dup(MPI_Info info, MPI_Info *newinfo);$/;"	p	signature:(MPI_Info info, MPI_Info *newinfo)
MPI_Info_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Info MPI_Info_f2c(MPI_Fint info);$/;"	p	signature:(MPI_Fint info)
MPI_Info_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_free(MPI_Info *info);$/;"	p	signature:(MPI_Info *info)
MPI_Info_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_get(MPI_Info info, char *key, int valuelen, $/;"	p	signature:(MPI_Info info, char *key, int valuelen, char *value, int *flag)
MPI_Info_get_nkeys	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_get_nkeys(MPI_Info info, int *nkeys);$/;"	p	signature:(MPI_Info info, int *nkeys)
MPI_Info_get_nthkey	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_get_nthkey(MPI_Info info, int n, char *key);$/;"	p	signature:(MPI_Info info, int n, char *key)
MPI_Info_get_valuelen	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_get_valuelen(MPI_Info info, char *key, int *valuelen, $/;"	p	signature:(MPI_Info info, char *key, int *valuelen, int *flag)
MPI_Info_set	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Info_set(MPI_Info info, char *key, char *value);$/;"	p	signature:(MPI_Info info, char *key, char *value)
MPI_Init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Init(int *argc, char ***argv);$/;"	p	signature:(int *argc, char ***argv)
MPI_Init_thread	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Init_thread(int *argc, char ***argv, int required, $/;"	p	signature:(int *argc, char ***argv, int required, int *provided)
MPI_Initialized	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Initialized(int *flag);$/;"	p	signature:(int *flag)
MPI_Intercomm_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Intercomm_create(MPI_Comm local_comm, int local_leader, $/;"	p	signature:(MPI_Comm local_comm, int local_leader, MPI_Comm bridge_comm, int remote_leader, int tag, MPI_Comm *newintercomm)
MPI_Intercomm_merge	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Intercomm_merge(MPI_Comm intercomm, int high, $/;"	p	signature:(MPI_Comm intercomm, int high, MPI_Comm *newintercomm)
MPI_Iprobe	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Iprobe(int source, int tag, MPI_Comm comm, int *flag, $/;"	p	signature:(int source, int tag, MPI_Comm comm, int *flag, MPI_Status *status)
MPI_Irecv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Irecv(void *buf, int count, MPI_Datatype datatype, int source, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Irsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Irsend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Is_thread_main	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Is_thread_main(int *flag);$/;"	p	signature:(int *flag)
MPI_Isend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Isend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Issend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Issend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_KEYVAL_INVALID	/usr/include/mpi.h	/^#define MPI_KEYVAL_INVALID /;"	d
MPI_Keyval_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Keyval_create(MPI_Copy_function *copy_fn, $/;"	p	signature:(MPI_Copy_function *copy_fn, MPI_Delete_function *delete_fn, int *keyval, void *extra_state)
MPI_Keyval_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Keyval_free(int *keyval);$/;"	p	signature:(int *keyval)
MPI_LAND	/usr/include/mpi.h	/^#define MPI_LAND /;"	d
MPI_LASTUSEDCODE	/usr/include/mpi.h	/^    MPI_LASTUSEDCODE,$/;"	e	enum:__anon77
MPI_LB	/usr/include/mpi.h	/^#define MPI_LB /;"	d
MPI_LOCK_EXCLUSIVE	/usr/include/mpi.h	/^#define MPI_LOCK_EXCLUSIVE /;"	d
MPI_LOCK_SHARED	/usr/include/mpi.h	/^#define MPI_LOCK_SHARED /;"	d
MPI_LOGICAL	/usr/include/mpi.h	/^#define MPI_LOGICAL /;"	d
MPI_LONG	/usr/include/mpi.h	/^#define MPI_LONG /;"	d
MPI_LONG_DOUBLE	/usr/include/mpi.h	/^#define MPI_LONG_DOUBLE /;"	d
MPI_LONG_DOUBLE_INT	/usr/include/mpi.h	/^#define MPI_LONG_DOUBLE_INT /;"	d
MPI_LONG_INT	/usr/include/mpi.h	/^#define MPI_LONG_INT /;"	d
MPI_LONG_LONG	/usr/include/mpi.h	/^#define MPI_LONG_LONG /;"	d
MPI_LONG_LONG_INT	/usr/include/mpi.h	/^#define MPI_LONG_LONG_INT /;"	d
MPI_LOR	/usr/include/mpi.h	/^#define MPI_LOR /;"	d
MPI_LXOR	/usr/include/mpi.h	/^#define MPI_LXOR /;"	d
MPI_Lookup_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Lookup_name(char *service_name, MPI_Info info, char *port_name);$/;"	p	signature:(char *service_name, MPI_Info info, char *port_name)
MPI_MAX	/usr/include/mpi.h	/^#define MPI_MAX /;"	d
MPI_MAXLOC	/usr/include/mpi.h	/^#define MPI_MAXLOC /;"	d
MPI_MAX_DATAREP_STRING	/usr/include/mpi.h	/^#define MPI_MAX_DATAREP_STRING /;"	d
MPI_MAX_ERROR_STRING	/usr/include/mpi.h	/^#define MPI_MAX_ERROR_STRING /;"	d
MPI_MAX_INFO_KEY	/usr/include/mpi.h	/^#define MPI_MAX_INFO_KEY /;"	d
MPI_MAX_INFO_VAL	/usr/include/mpi.h	/^#define MPI_MAX_INFO_VAL /;"	d
MPI_MAX_NAME_LEN	/usr/include/mpi.h	/^#define MPI_MAX_NAME_LEN /;"	d
MPI_MAX_OBJECT_NAME	/usr/include/mpi.h	/^#define MPI_MAX_OBJECT_NAME /;"	d
MPI_MAX_PORT_NAME	/usr/include/mpi.h	/^#define MPI_MAX_PORT_NAME /;"	d
MPI_MAX_PROCESSOR_NAME	/usr/include/mpi.h	/^#define MPI_MAX_PROCESSOR_NAME /;"	d
MPI_MIN	/usr/include/mpi.h	/^#define MPI_MIN /;"	d
MPI_MINLOC	/usr/include/mpi.h	/^#define MPI_MINLOC /;"	d
MPI_MODE_APPEND	/usr/include/mpi.h	/^#define MPI_MODE_APPEND /;"	d
MPI_MODE_CREATE	/usr/include/mpi.h	/^#define MPI_MODE_CREATE /;"	d
MPI_MODE_DELETE_ON_CLOSE	/usr/include/mpi.h	/^#define MPI_MODE_DELETE_ON_CLOSE /;"	d
MPI_MODE_EXCL	/usr/include/mpi.h	/^#define MPI_MODE_EXCL /;"	d
MPI_MODE_NOCHECK	/usr/include/mpi.h	/^#define MPI_MODE_NOCHECK /;"	d
MPI_MODE_NOPRECEDE	/usr/include/mpi.h	/^#define MPI_MODE_NOPRECEDE /;"	d
MPI_MODE_NOPUT	/usr/include/mpi.h	/^#define MPI_MODE_NOPUT /;"	d
MPI_MODE_NOSTORE	/usr/include/mpi.h	/^#define MPI_MODE_NOSTORE /;"	d
MPI_MODE_NOSUCCEED	/usr/include/mpi.h	/^#define MPI_MODE_NOSUCCEED /;"	d
MPI_MODE_RDONLY	/usr/include/mpi.h	/^#define MPI_MODE_RDONLY /;"	d
MPI_MODE_RDWR	/usr/include/mpi.h	/^#define MPI_MODE_RDWR /;"	d
MPI_MODE_SEQUENTIAL	/usr/include/mpi.h	/^#define MPI_MODE_SEQUENTIAL /;"	d
MPI_MODE_UNIQUE_OPEN	/usr/include/mpi.h	/^#define MPI_MODE_UNIQUE_OPEN /;"	d
MPI_MODE_WRONLY	/usr/include/mpi.h	/^#define MPI_MODE_WRONLY /;"	d
MPI_NULL_COPY_FN	/usr/include/mpi.h	/^#define MPI_NULL_COPY_FN /;"	d
MPI_NULL_DELETE_FN	/usr/include/mpi.h	/^#define MPI_NULL_DELETE_FN /;"	d
MPI_OP_NULL	/usr/include/mpi.h	/^#define MPI_OP_NULL /;"	d
MPI_ORDER_C	/usr/include/mpi.h	/^#define MPI_ORDER_C /;"	d
MPI_ORDER_FORTRAN	/usr/include/mpi.h	/^#define MPI_ORDER_FORTRAN /;"	d
MPI_Offset	/usr/include/mpi.h	/^typedef OMPI_MPI_OFFSET_TYPE MPI_Offset;$/;"	t
MPI_Op	/usr/include/mpi.h	/^typedef struct ompi_op_t *MPI_Op;$/;"	t	typeref:struct:ompi_op_t
MPI_Op_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Op_c2f(MPI_Op op); $/;"	p	signature:(MPI_Op op)
MPI_Op_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Op_create(MPI_User_function *function, int commute, MPI_Op *op);$/;"	p	signature:(MPI_User_function *function, int commute, MPI_Op *op)
MPI_Op_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Op MPI_Op_f2c(MPI_Fint op);$/;"	p	signature:(MPI_Fint op)
MPI_Op_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Op_free(MPI_Op *op);$/;"	p	signature:(MPI_Op *op)
MPI_Open_port	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Open_port(MPI_Info info, char *port_name);$/;"	p	signature:(MPI_Info info, char *port_name)
MPI_PACKED	/usr/include/mpi.h	/^#define MPI_PACKED /;"	d
MPI_PROC_NULL	/usr/include/mpi.h	/^#define MPI_PROC_NULL /;"	d
MPI_PROD	/usr/include/mpi.h	/^#define MPI_PROD /;"	d
MPI_Pack	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Pack(void *inbuf, int incount, MPI_Datatype datatype, $/;"	p	signature:(void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, int outsize, int *position, MPI_Comm comm)
MPI_Pack_external	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Pack_external(char *datarep, void *inbuf, int incount,$/;"	p	signature:(char *datarep, void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, MPI_Aint outsize, MPI_Aint *position)
MPI_Pack_external_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Pack_external_size(char *datarep, int incount, $/;"	p	signature:(char *datarep, int incount, MPI_Datatype datatype, MPI_Aint *size)
MPI_Pack_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Pack_size(int incount, MPI_Datatype datatype, MPI_Comm comm, $/;"	p	signature:(int incount, MPI_Datatype datatype, MPI_Comm comm, int *size)
MPI_Pcontrol	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Pcontrol(const int level, ...);$/;"	p	signature:(const int level, ...)
MPI_Probe	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Probe(int source, int tag, MPI_Comm comm, MPI_Status *status);$/;"	p	signature:(int source, int tag, MPI_Comm comm, MPI_Status *status)
MPI_Publish_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Publish_name(char *service_name, MPI_Info info, $/;"	p	signature:(char *service_name, MPI_Info info, char *port_name)
MPI_Put	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Put(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, $/;"	p	signature:(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win)
MPI_Query_thread	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Query_thread(int *provided);$/;"	p	signature:(int *provided)
MPI_REAL	/usr/include/mpi.h	/^#define MPI_REAL /;"	d
MPI_REAL16	/usr/include/mpi.h	/^#define MPI_REAL16 /;"	d
MPI_REAL4	/usr/include/mpi.h	/^#define MPI_REAL4 /;"	d
MPI_REAL8	/usr/include/mpi.h	/^#define MPI_REAL8 /;"	d
MPI_REPLACE	/usr/include/mpi.h	/^#define MPI_REPLACE /;"	d
MPI_REQUEST_NULL	/usr/include/mpi.h	/^#define MPI_REQUEST_NULL /;"	d
MPI_ROOT	/usr/include/mpi.h	/^#define MPI_ROOT /;"	d
MPI_Recv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Recv(void *buf, int count, MPI_Datatype datatype, int source, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status)
MPI_Recv_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Recv_init(void *buf, int count, MPI_Datatype datatype, int source,$/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Reduce	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Reduce(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm)
MPI_Reduce_scatter	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Reduce_scatter(void *sendbuf, void *recvbuf, int *recvcounts, $/;"	p	signature:(void *sendbuf, void *recvbuf, int *recvcounts, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
MPI_Register_datarep	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Register_datarep(char *datarep, $/;"	p	signature:(char *datarep, MPI_Datarep_conversion_function *read_conversion_fn, MPI_Datarep_conversion_function *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state)
MPI_Request	/usr/include/mpi.h	/^typedef struct ompi_request_t *MPI_Request;$/;"	t	typeref:struct:ompi_request_t
MPI_Request_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Request_c2f(MPI_Request request);$/;"	p	signature:(MPI_Request request)
MPI_Request_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Request MPI_Request_f2c(MPI_Fint request);$/;"	p	signature:(MPI_Fint request)
MPI_Request_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Request_free(MPI_Request *request);$/;"	p	signature:(MPI_Request *request)
MPI_Request_get_status	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Request_get_status(MPI_Request request, int *flag, $/;"	p	signature:(MPI_Request request, int *flag, MPI_Status *status)
MPI_Rsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Rsend(void *ibuf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *ibuf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
MPI_Rsend_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Rsend_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_SEEK_CUR	/usr/include/mpi.h	/^#define MPI_SEEK_CUR /;"	d
MPI_SEEK_END	/usr/include/mpi.h	/^#define MPI_SEEK_END /;"	d
MPI_SEEK_SET	/usr/include/mpi.h	/^#define MPI_SEEK_SET /;"	d
MPI_SHORT	/usr/include/mpi.h	/^#define MPI_SHORT /;"	d
MPI_SHORT_INT	/usr/include/mpi.h	/^#define MPI_SHORT_INT /;"	d
MPI_SIGNED_CHAR	/usr/include/mpi.h	/^#define MPI_SIGNED_CHAR /;"	d
MPI_SIMILAR	/usr/include/mpi.h	/^  MPI_SIMILAR,$/;"	e	enum:__anon78
MPI_SOURCE	/usr/include/mpi.h	/^  int MPI_SOURCE;$/;"	m	struct:ompi_status_public_t	access:public
MPI_STATUSES_IGNORE	/usr/include/mpi.h	/^#define MPI_STATUSES_IGNORE /;"	d
MPI_STATUS_IGNORE	/usr/include/mpi.h	/^#define MPI_STATUS_IGNORE /;"	d
MPI_SUBVERSION	/usr/include/mpi.h	/^#define MPI_SUBVERSION /;"	d
MPI_SUCCESS	/usr/include/mpi.h	/^#define MPI_SUCCESS /;"	d
MPI_SUM	/usr/include/mpi.h	/^#define MPI_SUM /;"	d
MPI_Scan	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Scan(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
MPI_Scatter	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Scatter(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)
MPI_Scatterv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Scatterv(void *sendbuf, int *sendcounts, int *displs, $/;"	p	signature:(void *sendbuf, int *sendcounts, int *displs, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)
MPI_Send	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Send(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
MPI_Send_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Send_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Sendrecv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Sendrecv(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status)
MPI_Sendrecv_replace	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Sendrecv_replace(void * buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void * buf, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Status *status)
MPI_Ssend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Ssend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
MPI_Ssend_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Ssend_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
MPI_Start	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Start(MPI_Request *request);$/;"	p	signature:(MPI_Request *request)
MPI_Startall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Startall(int count, MPI_Request *array_of_requests);$/;"	p	signature:(int count, MPI_Request *array_of_requests)
MPI_Status	/usr/include/mpi.h	/^typedef struct ompi_status_public_t MPI_Status;$/;"	t	typeref:struct:ompi_status_public_t
MPI_Status_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Status_c2f(MPI_Status *c_status, MPI_Fint *f_status);$/;"	p	signature:(MPI_Status *c_status, MPI_Fint *f_status)
MPI_Status_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Status_f2c(MPI_Fint *f_status, MPI_Status *c_status);$/;"	p	signature:(MPI_Fint *f_status, MPI_Status *c_status)
MPI_Status_set_cancelled	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Status_set_cancelled(MPI_Status *status, int flag);$/;"	p	signature:(MPI_Status *status, int flag)
MPI_Status_set_elements	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Status_set_elements(MPI_Status *status, MPI_Datatype datatype,$/;"	p	signature:(MPI_Status *status, MPI_Datatype datatype, int count)
MPI_TAG	/usr/include/mpi.h	/^  int MPI_TAG;$/;"	m	struct:ompi_status_public_t	access:public
MPI_TAG_UB	/usr/include/mpi.h	/^    MPI_TAG_UB,$/;"	e	enum:__anon77
MPI_THREAD_FUNNELED	/usr/include/mpi.h	/^  MPI_THREAD_FUNNELED,$/;"	e	enum:__anon79
MPI_THREAD_MULTIPLE	/usr/include/mpi.h	/^  MPI_THREAD_MULTIPLE$/;"	e	enum:__anon79
MPI_THREAD_SERIALIZED	/usr/include/mpi.h	/^  MPI_THREAD_SERIALIZED,$/;"	e	enum:__anon79
MPI_THREAD_SINGLE	/usr/include/mpi.h	/^  MPI_THREAD_SINGLE,$/;"	e	enum:__anon79
MPI_TYPECLASS_COMPLEX	/usr/include/mpi.h	/^#define MPI_TYPECLASS_COMPLEX /;"	d
MPI_TYPECLASS_INTEGER	/usr/include/mpi.h	/^#define MPI_TYPECLASS_INTEGER /;"	d
MPI_TYPECLASS_REAL	/usr/include/mpi.h	/^#define MPI_TYPECLASS_REAL /;"	d
MPI_TYPE_DUP_FN	/usr/include/mpi.h	/^#define MPI_TYPE_DUP_FN /;"	d
MPI_TYPE_NULL_COPY_FN	/usr/include/mpi.h	/^#define MPI_TYPE_NULL_COPY_FN /;"	d
MPI_TYPE_NULL_DELETE_FN	/usr/include/mpi.h	/^#define MPI_TYPE_NULL_DELETE_FN /;"	d
MPI_Test	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Test(MPI_Request *request, int *flag, MPI_Status *status);$/;"	p	signature:(MPI_Request *request, int *flag, MPI_Status *status)
MPI_Test_cancelled	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Test_cancelled(MPI_Status *status, int *flag);$/;"	p	signature:(MPI_Status *status, int *flag)
MPI_Testall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Testall(int count, MPI_Request array_of_requests[], int *flag, $/;"	p	signature:(int count, MPI_Request array_of_requests[], int *flag, MPI_Status array_of_statuses[])
MPI_Testany	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Testany(int count, MPI_Request array_of_requests[], int *index, $/;"	p	signature:(int count, MPI_Request array_of_requests[], int *index, int *flag, MPI_Status *status)
MPI_Testsome	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Testsome(int incount, MPI_Request array_of_requests[], $/;"	p	signature:(int incount, MPI_Request array_of_requests[], int *outcount, int array_of_indices[], MPI_Status array_of_statuses[])
MPI_Topo_test	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Topo_test(MPI_Comm comm, int *status);$/;"	p	signature:(MPI_Comm comm, int *status)
MPI_Type_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Type_c2f(MPI_Datatype datatype);$/;"	p	signature:(MPI_Datatype datatype)
MPI_Type_commit	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_commit(MPI_Datatype *type);$/;"	p	signature:(MPI_Datatype *type)
MPI_Type_contiguous	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_contiguous(int count, MPI_Datatype oldtype, $/;"	p	signature:(int count, MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_copy_attr_function	/usr/include/mpi.h	/^typedef int (MPI_Type_copy_attr_function)(MPI_Datatype, int, void *,$/;"	t
MPI_Type_create_darray	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_darray(int size, int rank, int ndims, $/;"	p	signature:(int size, int rank, int ndims, int gsize_array[], int distrib_array[], int darg_array[], int psize_array[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_create_f90_complex	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_f90_complex(int p, int r, MPI_Datatype *newtype);$/;"	p	signature:(int p, int r, MPI_Datatype *newtype)
MPI_Type_create_f90_integer	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_f90_integer(int r, MPI_Datatype *newtype);$/;"	p	signature:(int r, MPI_Datatype *newtype)
MPI_Type_create_f90_real	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_f90_real(int p, int r, MPI_Datatype *newtype);$/;"	p	signature:(int p, int r, MPI_Datatype *newtype)
MPI_Type_create_hindexed	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_hindexed(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_create_hvector	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_hvector(int count, int blocklength, MPI_Aint stride, $/;"	p	signature:(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_create_indexed_block	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_indexed_block(int count, int blocklength,$/;"	p	signature:(int count, int blocklength, int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_create_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_keyval(MPI_Type_copy_attr_function *type_copy_attr_fn, $/;"	p	signature:(MPI_Type_copy_attr_function *type_copy_attr_fn, MPI_Type_delete_attr_function *type_delete_attr_fn, int *type_keyval, void *extra_state)
MPI_Type_create_resized	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_resized(MPI_Datatype oldtype, MPI_Aint lb, $/;"	p	signature:(MPI_Datatype oldtype, MPI_Aint lb, MPI_Aint extent, MPI_Datatype *newtype)
MPI_Type_create_struct	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_struct(int count, int array_of_block_lengths[], $/;"	p	signature:(int count, int array_of_block_lengths[], MPI_Aint array_of_displacements[], MPI_Datatype array_of_types[], MPI_Datatype *newtype)
MPI_Type_create_subarray	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_create_subarray(int ndims, int size_array[], int subsize_array[], $/;"	p	signature:(int ndims, int size_array[], int subsize_array[], int start_array[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_delete_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_delete_attr(MPI_Datatype type, int type_keyval);$/;"	p	signature:(MPI_Datatype type, int type_keyval)
MPI_Type_delete_attr_function	/usr/include/mpi.h	/^typedef int (MPI_Type_delete_attr_function)(MPI_Datatype, int,$/;"	t
MPI_Type_dup	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_dup(MPI_Datatype type, MPI_Datatype *newtype);$/;"	p	signature:(MPI_Datatype type, MPI_Datatype *newtype)
MPI_Type_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_extent(MPI_Datatype type, MPI_Aint *extent);$/;"	p	signature:(MPI_Datatype type, MPI_Aint *extent)
MPI_Type_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Datatype MPI_Type_f2c(MPI_Fint datatype);$/;"	p	signature:(MPI_Fint datatype)
MPI_Type_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_free(MPI_Datatype *type);$/;"	p	signature:(MPI_Datatype *type)
MPI_Type_free_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_free_keyval(int *type_keyval);$/;"	p	signature:(int *type_keyval)
MPI_Type_get_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_get_attr(MPI_Datatype type, int type_keyval, $/;"	p	signature:(MPI_Datatype type, int type_keyval, void *attribute_val, int *flag)
MPI_Type_get_contents	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_get_contents(MPI_Datatype mtype, int max_integers, $/;"	p	signature:(MPI_Datatype mtype, int max_integers, int max_addresses, int max_datatypes, int array_of_integers[], MPI_Aint array_of_addresses[], MPI_Datatype array_of_datatypes[])
MPI_Type_get_envelope	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_get_envelope(MPI_Datatype type, int *num_integers, $/;"	p	signature:(MPI_Datatype type, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner)
MPI_Type_get_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_get_extent(MPI_Datatype type, MPI_Aint *lb, $/;"	p	signature:(MPI_Datatype type, MPI_Aint *lb, MPI_Aint *extent)
MPI_Type_get_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_get_name(MPI_Datatype type, char *type_name, $/;"	p	signature:(MPI_Datatype type, char *type_name, int *resultlen)
MPI_Type_get_true_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_get_true_extent(MPI_Datatype datatype, MPI_Aint *true_lb, $/;"	p	signature:(MPI_Datatype datatype, MPI_Aint *true_lb, MPI_Aint *true_extent)
MPI_Type_hindexed	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_hindexed(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_hvector	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_hvector(int count, int blocklength, MPI_Aint stride, $/;"	p	signature:(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_indexed	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_indexed(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_Type_lb	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_lb(MPI_Datatype type, MPI_Aint *lb);$/;"	p	signature:(MPI_Datatype type, MPI_Aint *lb)
MPI_Type_match_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_match_size(int typeclass, int size, MPI_Datatype *type);$/;"	p	signature:(int typeclass, int size, MPI_Datatype *type)
MPI_Type_set_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_set_attr(MPI_Datatype type, int type_keyval, $/;"	p	signature:(MPI_Datatype type, int type_keyval, void *attr_val)
MPI_Type_set_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_set_name(MPI_Datatype type, char *type_name);$/;"	p	signature:(MPI_Datatype type, char *type_name)
MPI_Type_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_size(MPI_Datatype type, int *size);$/;"	p	signature:(MPI_Datatype type, int *size)
MPI_Type_struct	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_struct(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype array_of_types[], MPI_Datatype *newtype)
MPI_Type_ub	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_ub(MPI_Datatype mtype, MPI_Aint *ub);$/;"	p	signature:(MPI_Datatype mtype, MPI_Aint *ub)
MPI_Type_vector	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Type_vector(int count, int blocklength, int stride, $/;"	p	signature:(int count, int blocklength, int stride, MPI_Datatype oldtype, MPI_Datatype *newtype)
MPI_UB	/usr/include/mpi.h	/^#define MPI_UB /;"	d
MPI_UNDEFINED	/usr/include/mpi.h	/^#define MPI_UNDEFINED /;"	d
MPI_UNEQUAL	/usr/include/mpi.h	/^  MPI_UNEQUAL$/;"	e	enum:__anon78
MPI_UNIVERSE_SIZE	/usr/include/mpi.h	/^    MPI_UNIVERSE_SIZE,$/;"	e	enum:__anon77
MPI_UNSIGNED	/usr/include/mpi.h	/^#define MPI_UNSIGNED /;"	d
MPI_UNSIGNED_CHAR	/usr/include/mpi.h	/^#define MPI_UNSIGNED_CHAR /;"	d
MPI_UNSIGNED_LONG	/usr/include/mpi.h	/^#define MPI_UNSIGNED_LONG /;"	d
MPI_UNSIGNED_LONG_LONG	/usr/include/mpi.h	/^#define MPI_UNSIGNED_LONG_LONG /;"	d
MPI_UNSIGNED_SHORT	/usr/include/mpi.h	/^#define MPI_UNSIGNED_SHORT /;"	d
MPI_Unpack	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Unpack(void *inbuf, int insize, int *position, $/;"	p	signature:(void *inbuf, int insize, int *position, void *outbuf, int outcount, MPI_Datatype datatype, MPI_Comm comm)
MPI_Unpack_external	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Unpack_external (char *datarep, void *inbuf, MPI_Aint insize,$/;"	p	signature:(char *datarep, void *inbuf, MPI_Aint insize, MPI_Aint *position, void *outbuf, int outcount, MPI_Datatype datatype)
MPI_Unpublish_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Unpublish_name(char *service_name, MPI_Info info, char *port_name);$/;"	p	signature:(char *service_name, MPI_Info info, char *port_name)
MPI_User_function	/usr/include/mpi.h	/^typedef void (MPI_User_function)(void *, void *, int *, MPI_Datatype *);$/;"	t
MPI_VERSION	/usr/include/mpi.h	/^#define MPI_VERSION /;"	d
MPI_WCHAR	/usr/include/mpi.h	/^#define MPI_WCHAR /;"	d
MPI_WIN_BASE	/usr/include/mpi.h	/^    MPI_WIN_BASE,$/;"	e	enum:__anon77
MPI_WIN_DISP_UNIT	/usr/include/mpi.h	/^    MPI_WIN_DISP_UNIT,$/;"	e	enum:__anon77
MPI_WIN_DUP_FN	/usr/include/mpi.h	/^#define MPI_WIN_DUP_FN /;"	d
MPI_WIN_NULL	/usr/include/mpi.h	/^#define MPI_WIN_NULL /;"	d
MPI_WIN_NULL_COPY_FN	/usr/include/mpi.h	/^#define MPI_WIN_NULL_COPY_FN /;"	d
MPI_WIN_NULL_DELETE_FN	/usr/include/mpi.h	/^#define MPI_WIN_NULL_DELETE_FN /;"	d
MPI_WIN_SIZE	/usr/include/mpi.h	/^    MPI_WIN_SIZE,$/;"	e	enum:__anon77
MPI_WTIME_IS_GLOBAL	/usr/include/mpi.h	/^    MPI_WTIME_IS_GLOBAL,$/;"	e	enum:__anon77
MPI_Wait	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);$/;"	p	signature:(MPI_Request *request, MPI_Status *status)
MPI_Waitall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request *array_of_requests, $/;"	p	signature:(int count, MPI_Request *array_of_requests, MPI_Status *array_of_statuses)
MPI_Waitany	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Waitany(int count, MPI_Request *array_of_requests, $/;"	p	signature:(int count, MPI_Request *array_of_requests, int *index, MPI_Status *status)
MPI_Waitsome	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Waitsome(int incount, MPI_Request *array_of_requests, $/;"	p	signature:(int incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses)
MPI_Win	/usr/include/mpi.h	/^typedef struct ompi_win_t *MPI_Win;$/;"	t	typeref:struct:ompi_win_t
MPI_Win_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint MPI_Win_c2f(MPI_Win win);$/;"	p	signature:(MPI_Win win)
MPI_Win_call_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_call_errhandler(MPI_Win win, int errorcode);$/;"	p	signature:(MPI_Win win, int errorcode)
MPI_Win_complete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_complete(MPI_Win win);$/;"	p	signature:(MPI_Win win)
MPI_Win_copy_attr_function	/usr/include/mpi.h	/^typedef int (MPI_Win_copy_attr_function)(MPI_Win, int, void *,$/;"	t
MPI_Win_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_create(void *base, MPI_Aint size, int disp_unit, $/;"	p	signature:(void *base, MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, MPI_Win *win)
MPI_Win_create_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_create_errhandler(MPI_Win_errhandler_fn *function, $/;"	p	signature:(MPI_Win_errhandler_fn *function, MPI_Errhandler *errhandler)
MPI_Win_create_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_create_keyval(MPI_Win_copy_attr_function *win_copy_attr_fn, $/;"	p	signature:(MPI_Win_copy_attr_function *win_copy_attr_fn, MPI_Win_delete_attr_function *win_delete_attr_fn, int *win_keyval, void *extra_state)
MPI_Win_delete_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_delete_attr(MPI_Win win, int win_keyval);$/;"	p	signature:(MPI_Win win, int win_keyval)
MPI_Win_delete_attr_function	/usr/include/mpi.h	/^typedef int (MPI_Win_delete_attr_function)(MPI_Win, int, void *, void *);$/;"	t
MPI_Win_errhandler_fn	/usr/include/mpi.h	/^typedef void (MPI_Win_errhandler_fn)(MPI_Win *, int *, ...);$/;"	t
MPI_Win_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Win MPI_Win_f2c(MPI_Fint win);$/;"	p	signature:(MPI_Fint win)
MPI_Win_fence	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_fence(int assert, MPI_Win win);$/;"	p	signature:(int assert, MPI_Win win)
MPI_Win_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_free(MPI_Win *win);$/;"	p	signature:(MPI_Win *win)
MPI_Win_free_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_free_keyval(int *win_keyval);$/;"	p	signature:(int *win_keyval)
MPI_Win_get_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_get_attr(MPI_Win win, int win_keyval, $/;"	p	signature:(MPI_Win win, int win_keyval, void *attribute_val, int *flag)
MPI_Win_get_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_get_errhandler(MPI_Win win, MPI_Errhandler *errhandler);$/;"	p	signature:(MPI_Win win, MPI_Errhandler *errhandler)
MPI_Win_get_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_get_group(MPI_Win win, MPI_Group *group);$/;"	p	signature:(MPI_Win win, MPI_Group *group)
MPI_Win_get_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_get_name(MPI_Win win, char *win_name, int *resultlen);$/;"	p	signature:(MPI_Win win, char *win_name, int *resultlen)
MPI_Win_lock	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_lock(int lock_type, int rank, int assert, MPI_Win win);$/;"	p	signature:(int lock_type, int rank, int assert, MPI_Win win)
MPI_Win_post	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_post(MPI_Group group, int assert, MPI_Win win);$/;"	p	signature:(MPI_Group group, int assert, MPI_Win win)
MPI_Win_set_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_set_attr(MPI_Win win, int win_keyval, void *attribute_val);$/;"	p	signature:(MPI_Win win, int win_keyval, void *attribute_val)
MPI_Win_set_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_set_errhandler(MPI_Win win, MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Win win, MPI_Errhandler errhandler)
MPI_Win_set_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_set_name(MPI_Win win, char *win_name);$/;"	p	signature:(MPI_Win win, char *win_name)
MPI_Win_start	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_start(MPI_Group group, int assert, MPI_Win win);$/;"	p	signature:(MPI_Group group, int assert, MPI_Win win)
MPI_Win_test	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_test(MPI_Win win, int *flag);$/;"	p	signature:(MPI_Win win, int *flag)
MPI_Win_unlock	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_unlock(int rank, MPI_Win win);$/;"	p	signature:(int rank, MPI_Win win)
MPI_Win_wait	/usr/include/mpi.h	/^OMPI_DECLSPEC  int MPI_Win_wait(MPI_Win win);$/;"	p	signature:(MPI_Win win)
MPI_Wtick	/usr/include/mpi.h	/^OMPI_DECLSPEC  double MPI_Wtick(void);$/;"	p	signature:(void)
MPI_Wtime	/usr/include/mpi.h	/^OMPI_DECLSPEC  double MPI_Wtime(void);$/;"	p	signature:(void)
MPOOL	/usr/include/mpool.h	/^typedef struct MPOOL {$/;"	s
MPOOL	/usr/include/mpool.h	/^} MPOOL;$/;"	t	typeref:struct:MPOOL
MPOOL::cachehit	/usr/include/mpool.h	/^	unsigned long	cachehit;$/;"	m	struct:MPOOL	access:public
MPOOL::cachemiss	/usr/include/mpool.h	/^	unsigned long	cachemiss;$/;"	m	struct:MPOOL	access:public
MPOOL::curcache	/usr/include/mpool.h	/^	pgno_t	curcache;		\/* current number of cached pages *\/$/;"	m	struct:MPOOL	access:public
MPOOL::fd	/usr/include/mpool.h	/^	int	fd;			\/* file descriptor *\/$/;"	m	struct:MPOOL	access:public
MPOOL::hqh	/usr/include/mpool.h	/^	TAILQ_HEAD(_hqh, _bkt) hqh[HASHSIZE];$/;"	m	struct:MPOOL	access:public
MPOOL::lqh	/usr/include/mpool.h	/^	TAILQ_HEAD(_lqh, _bkt) lqh;	\/* lru queue head *\/$/;"	m	struct:MPOOL	access:public
MPOOL::maxcache	/usr/include/mpool.h	/^	pgno_t	maxcache;		\/* max number of cached pages *\/$/;"	m	struct:MPOOL	access:public
MPOOL::npages	/usr/include/mpool.h	/^	pgno_t	npages;			\/* number of pages in the file *\/$/;"	m	struct:MPOOL	access:public
MPOOL::pagealloc	/usr/include/mpool.h	/^	unsigned long	pagealloc;$/;"	m	struct:MPOOL	access:public
MPOOL::pageflush	/usr/include/mpool.h	/^	unsigned long	pageflush;$/;"	m	struct:MPOOL	access:public
MPOOL::pageget	/usr/include/mpool.h	/^	unsigned long	pageget;$/;"	m	struct:MPOOL	access:public
MPOOL::pagenew	/usr/include/mpool.h	/^	unsigned long	pagenew;$/;"	m	struct:MPOOL	access:public
MPOOL::pageput	/usr/include/mpool.h	/^	unsigned long	pageput;$/;"	m	struct:MPOOL	access:public
MPOOL::pageread	/usr/include/mpool.h	/^	unsigned long	pageread;$/;"	m	struct:MPOOL	access:public
MPOOL::pagesize	/usr/include/mpool.h	/^	unsigned long	pagesize;	\/* file page size *\/$/;"	m	struct:MPOOL	access:public
MPOOL::pagewrite	/usr/include/mpool.h	/^	unsigned long	pagewrite;$/;"	m	struct:MPOOL	access:public
MPOOL::pgcookie	/usr/include/mpool.h	/^	void	*pgcookie;		\/* cookie for page in\/out routines *\/$/;"	m	struct:MPOOL	access:public
MPOOL::pgin	/usr/include/mpool.h	/^	void    (*pgin)(void *, pgno_t, void *);$/;"	m	struct:MPOOL	access:public
MPOOL::pgout	/usr/include/mpool.h	/^	void    (*pgout)(void *, pgno_t, void *);$/;"	m	struct:MPOOL	access:public
MPOOL_DIRTY	/usr/include/mpool.h	/^#define	MPOOL_DIRTY	/;"	d
MPOOL_PINNED	/usr/include/mpool.h	/^#define	MPOOL_PINNED	/;"	d
MP_28BIT	/usr/include/tclTomMath.h	/^   #define MP_28BIT$/;"	d
MP_64BIT	/usr/include/tclTomMath.h	/^      #define MP_64BIT$/;"	d
MP_DIGIT_BIT	/usr/include/tclTomMath.h	/^#define MP_DIGIT_BIT /;"	d
MP_DIGIT_DECLARED	/usr/include/tcl.h	/^#define MP_DIGIT_DECLARED$/;"	d
MP_DIGIT_DECLARED	/usr/include/tclTomMath.h	/^#define MP_DIGIT_DECLARED$/;"	d
MP_DIGIT_MAX	/usr/include/tclTomMath.h	/^#define MP_DIGIT_MAX /;"	d
MP_EQ	/usr/include/tclTomMath.h	/^#define MP_EQ /;"	d
MP_GT	/usr/include/tclTomMath.h	/^#define MP_GT /;"	d
MP_INT_DECLARED	/usr/include/tcl.h	/^#define MP_INT_DECLARED$/;"	d
MP_INT_DECLARED	/usr/include/tclTomMath.h	/^#define MP_INT_DECLARED$/;"	d
MP_LT	/usr/include/tclTomMath.h	/^#define MP_LT /;"	d
MP_MASK	/usr/include/tclTomMath.h	/^#define MP_MASK /;"	d
MP_MEM	/usr/include/tclTomMath.h	/^#define MP_MEM /;"	d
MP_NEG	/usr/include/tclTomMath.h	/^#define MP_NEG /;"	d
MP_NO	/usr/include/tclTomMath.h	/^#define MP_NO /;"	d
MP_OKAY	/usr/include/tclTomMath.h	/^#define MP_OKAY /;"	d
MP_PREC	/usr/include/tclTomMath.h	/^      #define MP_PREC /;"	d
MP_RANGE	/usr/include/tclTomMath.h	/^#define MP_RANGE /;"	d
MP_VAL	/usr/include/tclTomMath.h	/^#define MP_VAL /;"	d
MP_WARRAY	/usr/include/tclTomMath.h	/^#define MP_WARRAY /;"	d
MP_YES	/usr/include/tclTomMath.h	/^#define MP_YES /;"	d
MP_ZPOS	/usr/include/tclTomMath.h	/^#define MP_ZPOS /;"	d
MR	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MR;$/;"	m	union:__anon41::__anon42	access:public
MSDOS	/usr/include/zconf.h	/^#  define MSDOS$/;"	d
MX	/usr/include/dns_util.h	/^		dns_MX_record_t *MX;$/;"	m	union:__anon41::__anon42	access:public
M_16_SWAP	/usr/include/db.h	/^#define	M_16_SWAP(/;"	d
M_32_SWAP	/usr/include/db.h	/^#define	M_32_SWAP(/;"	d
MeCab	/usr/include/mecab.h	/^namespace MeCab {$/;"	n
MeCab::DictionaryInfo	/usr/include/mecab.h	/^  typedef struct mecab_dictionary_info_t DictionaryInfo;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_dictionary_info_t
MeCab::LearnerNode	/usr/include/mecab.h	/^  typedef struct mecab_learner_node_t    LearnerNode;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_learner_node_t
MeCab::LearnerPath	/usr/include/mecab.h	/^  typedef struct mecab_learner_path_t    LearnerPath;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_learner_path_t
MeCab::Node	/usr/include/mecab.h	/^  typedef struct mecab_node_t            Node;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_node_t
MeCab::Path	/usr/include/mecab.h	/^  typedef struct mecab_path_t            Path;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_path_t
MeCab::Tagger	/usr/include/mecab.h	/^  class Tagger {$/;"	c	namespace:MeCab
MeCab::Tagger::all_morphs	/usr/include/mecab.h	/^    virtual bool  all_morphs() const                          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
MeCab::Tagger::create	/usr/include/mecab.h	/^    static Tagger* create(const char *arg);$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *arg)
MeCab::Tagger::create	/usr/include/mecab.h	/^    static Tagger* create(int argc, char **argv);$/;"	p	class:MeCab::Tagger	access:public	signature:(int argc, char **argv)
MeCab::Tagger::dictionary_info	/usr/include/mecab.h	/^    virtual const DictionaryInfo* dictionary_info() const = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
MeCab::Tagger::formatNode	/usr/include/mecab.h	/^    virtual const char* formatNode(const Node *node)          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const Node *node)
MeCab::Tagger::formatNode	/usr/include/mecab.h	/^    virtual const char* formatNode(const Node *node, char *ostr, size_t olen) = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const Node *node, char *ostr, size_t olen)
MeCab::Tagger::lattice_level	/usr/include/mecab.h	/^    virtual int   lattice_level() const                       = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
MeCab::Tagger::next	/usr/include/mecab.h	/^    virtual const char* next()                                = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:()
MeCab::Tagger::next	/usr/include/mecab.h	/^    virtual const char* next(char *ostr , size_t olen)                        = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(char *ostr , size_t olen)
MeCab::Tagger::nextNode	/usr/include/mecab.h	/^    virtual const Node* nextNode()                            = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:()
MeCab::Tagger::parse	/usr/include/mecab.h	/^    virtual const char* parse(const char *str)                = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str)
MeCab::Tagger::parse	/usr/include/mecab.h	/^    virtual const char* parse(const char *str, size_t len)                          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len)
MeCab::Tagger::parse	/usr/include/mecab.h	/^    virtual const char* parse(const char *str, size_t len, char *ostr, size_t olen) = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len, char *ostr, size_t olen)
MeCab::Tagger::parseNBest	/usr/include/mecab.h	/^    virtual const char* parseNBest(size_t N, const char *str) = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(size_t N, const char *str)
MeCab::Tagger::parseNBest	/usr/include/mecab.h	/^    virtual const char* parseNBest(size_t N, const char *str, size_t len)           = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(size_t N, const char *str, size_t len)
MeCab::Tagger::parseNBest	/usr/include/mecab.h	/^    virtual const char* parseNBest(size_t N, const char *str,$/;"	p	class:MeCab::Tagger	access:public	signature:(size_t N, const char *str, size_t len, char *ostr, size_t olen)
MeCab::Tagger::parseNBestInit	/usr/include/mecab.h	/^    virtual bool  parseNBestInit(const char *str)             = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str)
MeCab::Tagger::parseNBestInit	/usr/include/mecab.h	/^    virtual bool  parseNBestInit(const char *str, size_t len)                       = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len)
MeCab::Tagger::parseToNode	/usr/include/mecab.h	/^    virtual const Node* parseToNode(const char *str)          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str)
MeCab::Tagger::parseToNode	/usr/include/mecab.h	/^    virtual const Node* parseToNode(const char *str, size_t len)                    = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len)
MeCab::Tagger::partial	/usr/include/mecab.h	/^    virtual bool  partial() const                             = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
MeCab::Tagger::set_all_morphs	/usr/include/mecab.h	/^    virtual void  set_all_morphs(bool all_morphs)             = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(bool all_morphs)
MeCab::Tagger::set_lattice_level	/usr/include/mecab.h	/^    virtual void  set_lattice_level(int level)                = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(int level)
MeCab::Tagger::set_partial	/usr/include/mecab.h	/^    virtual void  set_partial(bool partial)                   = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(bool partial)
MeCab::Tagger::set_theta	/usr/include/mecab.h	/^    virtual void  set_theta(float theta)                      = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(float theta)
MeCab::Tagger::theta	/usr/include/mecab.h	/^    virtual float theta() const                               = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
MeCab::Tagger::version	/usr/include/mecab.h	/^    static const char *version();$/;"	p	class:MeCab::Tagger	access:public	signature:()
MeCab::Tagger::what	/usr/include/mecab.h	/^    virtual const char* what() = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:()
MeCab::Tagger::~Tagger	/usr/include/mecab.h	/^    virtual ~Tagger() {}$/;"	f	class:MeCab::Tagger	access:public	signature:()
MeCab::Token	/usr/include/mecab.h	/^  typedef struct mecab_token_t           Token;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_token_t
MeCab::createTagger	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN Tagger *createTagger(const char *arg);$/;"	p	namespace:MeCab	signature:(const char *arg)
MeCab::createTagger	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN Tagger *createTagger(int argc, char **argv);$/;"	p	namespace:MeCab	signature:(int argc, char **argv)
MeCab::getTaggerError	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char* getTaggerError();$/;"	p	namespace:MeCab	signature:()
Menu_Hook	/usr/include/menu.h	/^typedef void (*Menu_Hook)(struct tagMENU *);$/;"	t
Menu_Options	/usr/include/menu.h	/^typedef int Menu_Options;$/;"	t
MouseWheelEvent	/usr/include/tk.h	/^#define MouseWheelEvent /;"	d
MouseWheelMask	/usr/include/tk.h	/^#define MouseWheelMask	/;"	d
NAMES	/usr/include/tic.h	/^#define NAMES /;"	d
NAMESIZE	/usr/include/term.h	/^#define NAMESIZE /;"	d
NCURSES_ACS	/usr/include/curses.h	/^#define NCURSES_ACS(/;"	d
NCURSES_ACS	/usr/include/ncurses.h	/^#define NCURSES_ACS(/;"	d
NCURSES_API	/usr/include/ncurses_dll.h	/^#  define NCURSES_API /;"	d
NCURSES_API	/usr/include/ncurses_dll.h	/^#  undef NCURSES_API$/;"	d
NCURSES_ATTR_SHIFT	/usr/include/curses.h	/^#define NCURSES_ATTR_SHIFT /;"	d
NCURSES_ATTR_SHIFT	/usr/include/ncurses.h	/^#define NCURSES_ATTR_SHIFT /;"	d
NCURSES_ATTR_T	/usr/include/curses.h	/^#define NCURSES_ATTR_T /;"	d
NCURSES_ATTR_T	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attroff (NCURSES_ATTR_T);			\/* generated *\/$/;"	v
NCURSES_ATTR_T	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attron (NCURSES_ATTR_T);			\/* generated *\/$/;"	v
NCURSES_ATTR_T	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attrset (NCURSES_ATTR_T);			\/* generated *\/$/;"	v
NCURSES_ATTR_T	/usr/include/ncurses.h	/^#define NCURSES_ATTR_T /;"	d
NCURSES_ATTR_T	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) attroff (NCURSES_ATTR_T);			\/* generated *\/$/;"	v
NCURSES_ATTR_T	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) attron (NCURSES_ATTR_T);			\/* generated *\/$/;"	v
NCURSES_ATTR_T	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) attrset (NCURSES_ATTR_T);			\/* generated *\/$/;"	v
NCURSES_BITS	/usr/include/curses.h	/^#define NCURSES_BITS(/;"	d
NCURSES_BITS	/usr/include/ncurses.h	/^#define NCURSES_BITS(/;"	d
NCURSES_BOOL	/usr/include/curses.h	/^#define NCURSES_BOOL /;"	d
NCURSES_BOOL	/usr/include/curses.h	/^typedef unsigned char NCURSES_BOOL;$/;"	t
NCURSES_BOOL	/usr/include/ncurses.h	/^#define NCURSES_BOOL /;"	d
NCURSES_BOOL	/usr/include/ncurses.h	/^typedef unsigned char NCURSES_BOOL;$/;"	t
NCURSES_BUTTON_CLICKED	/usr/include/curses.h	/^#define	NCURSES_BUTTON_CLICKED	/;"	d
NCURSES_BUTTON_CLICKED	/usr/include/ncurses.h	/^#define	NCURSES_BUTTON_CLICKED	/;"	d
NCURSES_BUTTON_PRESSED	/usr/include/curses.h	/^#define	NCURSES_BUTTON_PRESSED	/;"	d
NCURSES_BUTTON_PRESSED	/usr/include/ncurses.h	/^#define	NCURSES_BUTTON_PRESSED	/;"	d
NCURSES_BUTTON_RELEASED	/usr/include/curses.h	/^#define	NCURSES_BUTTON_RELEASED	/;"	d
NCURSES_BUTTON_RELEASED	/usr/include/ncurses.h	/^#define	NCURSES_BUTTON_RELEASED	/;"	d
NCURSES_CAST	/usr/include/curses.h	/^#define NCURSES_CAST(/;"	d
NCURSES_CAST	/usr/include/ncurses.h	/^#define NCURSES_CAST(/;"	d
NCURSES_CH_T	/usr/include/curses.h	/^#define NCURSES_CH_T /;"	d
NCURSES_CH_T	/usr/include/curses.h	/^#undef	NCURSES_CH_T$/;"	d
NCURSES_CH_T	/usr/include/ncurses.h	/^#define NCURSES_CH_T /;"	d
NCURSES_CH_T	/usr/include/ncurses.h	/^#undef	NCURSES_CH_T$/;"	d
NCURSES_COLOR_T	/usr/include/curses.h	/^#define	NCURSES_COLOR_T /;"	d
NCURSES_COLOR_T	/usr/include/curses.h	/^#undef	NCURSES_COLOR_T$/;"	d
NCURSES_COLOR_T	/usr/include/ncurses.h	/^#define	NCURSES_COLOR_T /;"	d
NCURSES_COLOR_T	/usr/include/ncurses.h	/^#undef	NCURSES_COLOR_T$/;"	d
NCURSES_CONST	/usr/include/curses.h	/^#define NCURSES_CONST /;"	d
NCURSES_CONST	/usr/include/curses.h	/^#undef  NCURSES_CONST$/;"	d
NCURSES_CONST	/usr/include/ncurses.h	/^#define NCURSES_CONST /;"	d
NCURSES_CONST	/usr/include/ncurses.h	/^#undef  NCURSES_CONST$/;"	d
NCURSES_CONST	/usr/include/term.h	/^#define NCURSES_CONST /;"	d
NCURSES_CONST	/usr/include/term.h	/^#undef  NCURSES_CONST$/;"	d
NCURSES_CONST	/usr/include/termcap.h	/^#define NCURSES_CONST /;"	d
NCURSES_CONST	/usr/include/termcap.h	/^#undef  NCURSES_CONST /;"	d
NCURSES_DLL	/usr/include/ncurses_dll.h	/^#undef NCURSES_DLL$/;"	d
NCURSES_DLL_H_incl	/usr/include/ncurses_dll.h	/^#define NCURSES_DLL_H_incl /;"	d
NCURSES_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	NCURSES_DOUBLE_CLICKED	/;"	d
NCURSES_DOUBLE_CLICKED	/usr/include/ncurses.h	/^#define	NCURSES_DOUBLE_CLICKED	/;"	d
NCURSES_ENABLE_STDBOOL_H	/usr/include/curses.h	/^#define NCURSES_ENABLE_STDBOOL_H /;"	d
NCURSES_ENABLE_STDBOOL_H	/usr/include/ncurses.h	/^#define NCURSES_ENABLE_STDBOOL_H /;"	d
NCURSES_ETI_H_incl	/usr/include/eti.h	/^#define NCURSES_ETI_H_incl /;"	d
NCURSES_EVENT_VERSION	/usr/include/curses.h	/^#  define NCURSES_EVENT_VERSION	/;"	d
NCURSES_EVENT_VERSION	/usr/include/ncurses.h	/^#  define NCURSES_EVENT_VERSION	/;"	d
NCURSES_EXPORT	/usr/include/ncurses_dll.h	/^#  define NCURSES_EXPORT(/;"	d
NCURSES_EXPORT	/usr/include/ncurses_dll.h	/^#  undef NCURSES_EXPORT$/;"	d
NCURSES_EXPORT_VAR	/usr/include/ncurses_dll.h	/^#  define NCURSES_EXPORT_VAR(/;"	d
NCURSES_EXPORT_VAR	/usr/include/ncurses_dll.h	/^#  undef NCURSES_EXPORT_VAR$/;"	d
NCURSES_EXT_FUNCS	/usr/include/curses.h	/^#define NCURSES_EXT_FUNCS /;"	d
NCURSES_EXT_FUNCS	/usr/include/curses.h	/^#undef  NCURSES_EXT_FUNCS$/;"	d
NCURSES_EXT_FUNCS	/usr/include/ncurses.h	/^#define NCURSES_EXT_FUNCS /;"	d
NCURSES_EXT_FUNCS	/usr/include/ncurses.h	/^#undef  NCURSES_EXT_FUNCS$/;"	d
NCURSES_FIELD_INTERNALS	/usr/include/form.h	/^#define NCURSES_FIELD_INTERNALS /;"	d
NCURSES_IMPEXP	/usr/include/ncurses_dll.h	/^#    define NCURSES_IMPEXP /;"	d
NCURSES_IMPEXP	/usr/include/ncurses_dll.h	/^#  define NCURSES_IMPEXP /;"	d
NCURSES_IMPEXP	/usr/include/ncurses_dll.h	/^#  undef NCURSES_IMPEXP$/;"	d
NCURSES_INLINE	/usr/include/curses.h	/^#define NCURSES_INLINE /;"	d
NCURSES_INLINE	/usr/include/curses.h	/^#undef NCURSES_INLINE$/;"	d
NCURSES_INLINE	/usr/include/ncurses.h	/^#define NCURSES_INLINE /;"	d
NCURSES_INLINE	/usr/include/ncurses.h	/^#undef NCURSES_INLINE$/;"	d
NCURSES_MOUSE_MASK	/usr/include/curses.h	/^#define NCURSES_MOUSE_MASK(/;"	d
NCURSES_MOUSE_MASK	/usr/include/ncurses.h	/^#define NCURSES_MOUSE_MASK(/;"	d
NCURSES_MOUSE_VERSION	/usr/include/curses.h	/^#define NCURSES_MOUSE_VERSION /;"	d
NCURSES_MOUSE_VERSION	/usr/include/ncurses.h	/^#define NCURSES_MOUSE_VERSION /;"	d
NCURSES_OPAQUE	/usr/include/curses.h	/^#define NCURSES_OPAQUE /;"	d
NCURSES_OPAQUE	/usr/include/ncurses.h	/^#define NCURSES_OPAQUE /;"	d
NCURSES_OSPEED	/usr/include/termcap.h	/^#define NCURSES_OSPEED /;"	d
NCURSES_OSPEED	/usr/include/termcap.h	/^#undef  NCURSES_OSPEED /;"	d
NCURSES_PANEL_H_incl	/usr/include/panel.h	/^#define NCURSES_PANEL_H_incl /;"	d
NCURSES_PUBLIC_VAR	/usr/include/ncurses_dll.h	/^#define NCURSES_PUBLIC_VAR(/;"	d
NCURSES_RESERVED_EVENT	/usr/include/curses.h	/^#define	NCURSES_RESERVED_EVENT	/;"	d
NCURSES_RESERVED_EVENT	/usr/include/ncurses.h	/^#define	NCURSES_RESERVED_EVENT	/;"	d
NCURSES_SBOOL	/usr/include/term.h	/^#define NCURSES_SBOOL /;"	d
NCURSES_SBOOL	/usr/include/term.h	/^#undef  NCURSES_SBOOL$/;"	d
NCURSES_SCREEN_CB	/usr/include/curses.h	/^typedef int (*NCURSES_SCREEN_CB)(SCREEN *, void *);$/;"	t
NCURSES_SCREEN_CB	/usr/include/ncurses.h	/^typedef int (*NCURSES_SCREEN_CB)(SCREEN *, void *);$/;"	t
NCURSES_SIZE_T	/usr/include/curses.h	/^#define	NCURSES_SIZE_T /;"	d
NCURSES_SIZE_T	/usr/include/curses.h	/^#undef	NCURSES_SIZE_T$/;"	d
NCURSES_SIZE_T	/usr/include/ncurses.h	/^#define	NCURSES_SIZE_T /;"	d
NCURSES_SIZE_T	/usr/include/ncurses.h	/^#undef	NCURSES_SIZE_T$/;"	d
NCURSES_STATIC	/usr/include/ncurses_dll.h	/^#      undef NCURSES_STATIC$/;"	d
NCURSES_STATIC	/usr/include/ncurses_dll.h	/^#define NCURSES_STATIC$/;"	d
NCURSES_TERMCAP_H_incl	/usr/include/termcap.h	/^#define NCURSES_TERMCAP_H_incl	/;"	d
NCURSES_TERM_ENTRY_H_incl	/usr/include/term_entry.h	/^#define NCURSES_TERM_ENTRY_H_incl /;"	d
NCURSES_TERM_H_incl	/usr/include/term.h	/^#define NCURSES_TERM_H_incl /;"	d
NCURSES_TPARM_VARARGS	/usr/include/curses.h	/^#define NCURSES_TPARM_VARARGS /;"	d
NCURSES_TPARM_VARARGS	/usr/include/curses.h	/^#undef NCURSES_TPARM_VARARGS$/;"	d
NCURSES_TPARM_VARARGS	/usr/include/ncurses.h	/^#define NCURSES_TPARM_VARARGS /;"	d
NCURSES_TPARM_VARARGS	/usr/include/ncurses.h	/^#undef NCURSES_TPARM_VARARGS$/;"	d
NCURSES_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	NCURSES_TRIPLE_CLICKED	/;"	d
NCURSES_TRIPLE_CLICKED	/usr/include/ncurses.h	/^#define	NCURSES_TRIPLE_CLICKED	/;"	d
NCURSES_UNCTRL_H_incl	/usr/include/unctrl.h	/^#define NCURSES_UNCTRL_H_incl	/;"	d
NCURSES_VERSION	/usr/include/curses.h	/^#define NCURSES_VERSION /;"	d
NCURSES_VERSION	/usr/include/curses.h	/^#undef  NCURSES_VERSION$/;"	d
NCURSES_VERSION	/usr/include/ncurses.h	/^#define NCURSES_VERSION /;"	d
NCURSES_VERSION	/usr/include/ncurses.h	/^#undef  NCURSES_VERSION$/;"	d
NCURSES_VERSION	/usr/include/term.h	/^#define NCURSES_VERSION /;"	d
NCURSES_VERSION	/usr/include/term.h	/^#undef  NCURSES_VERSION$/;"	d
NCURSES_VERSION	/usr/include/termcap.h	/^#define NCURSES_VERSION /;"	d
NCURSES_VERSION	/usr/include/termcap.h	/^#undef  NCURSES_VERSION$/;"	d
NCURSES_VERSION	/usr/include/unctrl.h	/^#define NCURSES_VERSION /;"	d
NCURSES_VERSION	/usr/include/unctrl.h	/^#undef  NCURSES_VERSION$/;"	d
NCURSES_VERSION_MAJOR	/usr/include/curses.h	/^#define NCURSES_VERSION_MAJOR /;"	d
NCURSES_VERSION_MAJOR	/usr/include/ncurses.h	/^#define NCURSES_VERSION_MAJOR /;"	d
NCURSES_VERSION_MINOR	/usr/include/curses.h	/^#define NCURSES_VERSION_MINOR /;"	d
NCURSES_VERSION_MINOR	/usr/include/ncurses.h	/^#define NCURSES_VERSION_MINOR /;"	d
NCURSES_VERSION_PATCH	/usr/include/curses.h	/^#define NCURSES_VERSION_PATCH /;"	d
NCURSES_VERSION_PATCH	/usr/include/ncurses.h	/^#define NCURSES_VERSION_PATCH /;"	d
NCURSES_WACS	/usr/include/curses.h	/^#define NCURSES_WACS(/;"	d
NCURSES_WACS	/usr/include/ncurses.h	/^#define NCURSES_WACS(/;"	d
NCURSES_WINDOW_CB	/usr/include/curses.h	/^typedef int (*NCURSES_WINDOW_CB)(WINDOW *, void *);$/;"	t
NCURSES_WINDOW_CB	/usr/include/ncurses.h	/^typedef int (*NCURSES_WINDOW_CB)(WINDOW *, void *);$/;"	t
NCURSES_WRAPPED_VAR	/usr/include/ncurses_dll.h	/^#define NCURSES_WRAPPED_VAR(/;"	d
NCURSES_XNAMES	/usr/include/term.h	/^#define NCURSES_XNAMES /;"	d
NCURSES_XNAMES	/usr/include/term.h	/^#undef  NCURSES_XNAMES$/;"	d
NEAR	/usr/include/iodbcunix.h	/^#define NEAR$/;"	d
NETDB_INTERNAL	/usr/include/netdb.h	/^#define	NETDB_INTERNAL	/;"	d
NETDB_SUCCESS	/usr/include/netdb.h	/^#define	NETDB_SUCCESS	/;"	d
NEW_TIME	/usr/include/utmpx.h	/^#define NEW_TIME	/;"	d
NI_DGRAM	/usr/include/netdb.h	/^#define	NI_DGRAM	/;"	d
NI_MAXHOST	/usr/include/netdb.h	/^#define	NI_MAXHOST	/;"	d
NI_MAXSERV	/usr/include/netdb.h	/^#define	NI_MAXSERV	/;"	d
NI_NAMEREQD	/usr/include/netdb.h	/^#define	NI_NAMEREQD	/;"	d
NI_NOFQDN	/usr/include/netdb.h	/^#define	NI_NOFQDN	/;"	d
NI_NUMERICHOST	/usr/include/netdb.h	/^#define	NI_NUMERICHOST	/;"	d
NI_NUMERICSERV	/usr/include/netdb.h	/^#define	NI_NUMERICSERV	/;"	d
NI_WITHSCOPEID	/usr/include/netdb.h	/^#define NI_WITHSCOPEID	/;"	d
NL_ARGMAX	/usr/include/limits.h	/^#define NL_ARGMAX	/;"	d
NL_CAT_LOCALE	/usr/include/nl_types.h	/^#define	NL_CAT_LOCALE	/;"	d
NL_LANGMAX	/usr/include/limits.h	/^#define NL_LANGMAX	/;"	d
NL_MSGMAX	/usr/include/limits.h	/^#define NL_MSGMAX	/;"	d
NL_NMAX	/usr/include/limits.h	/^#define NL_NMAX	/;"	d
NL_SETD	/usr/include/nl_types.h	/^#define	NL_SETD	/;"	d
NL_SETMAX	/usr/include/limits.h	/^#define NL_SETMAX	/;"	d
NL_TEXTMAX	/usr/include/limits.h	/^#define NL_TEXTMAX	/;"	d
NOEXPR	/usr/include/langinfo.h	/^#define	NOEXPR	/;"	d
NOSTR	/usr/include/langinfo.h	/^#define	NOSTR	/;"	d
NOTFOUND	/usr/include/tic.h	/^#define NOTFOUND	/;"	d
NOTIFY_REUSE	/usr/include/notify.h	/^#define NOTIFY_REUSE /;"	d
NOTIFY_STATUS_FAILED	/usr/include/notify.h	/^#define NOTIFY_STATUS_FAILED /;"	d
NOTIFY_STATUS_INVALID_FILE	/usr/include/notify.h	/^#define NOTIFY_STATUS_INVALID_FILE /;"	d
NOTIFY_STATUS_INVALID_NAME	/usr/include/notify.h	/^#define NOTIFY_STATUS_INVALID_NAME /;"	d
NOTIFY_STATUS_INVALID_PORT	/usr/include/notify.h	/^#define NOTIFY_STATUS_INVALID_PORT /;"	d
NOTIFY_STATUS_INVALID_REQUEST	/usr/include/notify.h	/^#define NOTIFY_STATUS_INVALID_REQUEST /;"	d
NOTIFY_STATUS_INVALID_SIGNAL	/usr/include/notify.h	/^#define NOTIFY_STATUS_INVALID_SIGNAL /;"	d
NOTIFY_STATUS_INVALID_TOKEN	/usr/include/notify.h	/^#define NOTIFY_STATUS_INVALID_TOKEN /;"	d
NOTIFY_STATUS_NOT_AUTHORIZED	/usr/include/notify.h	/^#define NOTIFY_STATUS_NOT_AUTHORIZED /;"	d
NOTIFY_STATUS_OK	/usr/include/notify.h	/^#define NOTIFY_STATUS_OK /;"	d
NOT_INADDR	/usr/include/tcpd.h	/^#define NOT_INADDR(/;"	d
NO_ADDRESS	/usr/include/netdb.h	/^#define	NO_ADDRESS	/;"	d
NO_DATA	/usr/include/netdb.h	/^#define	NO_DATA	/;"	d
NO_DUMMY_DECL	/usr/include/zconf.h	/^#  define NO_DUMMY_DECL$/;"	d
NO_JUSTIFICATION	/usr/include/form.h	/^#define NO_JUSTIFICATION	/;"	d
NO_PUSHBACK	/usr/include/tic.h	/^#define NO_PUSHBACK	/;"	d
NO_RECOVERY	/usr/include/netdb.h	/^#define	NO_RECOVERY	/;"	d
NO_vsnprintf	/usr/include/zconf.h	/^#  define NO_vsnprintf$/;"	d
NS	/usr/include/dns_util.h	/^		dns_domain_name_record_t *NS;$/;"	m	union:__anon41::__anon42	access:public
NSAdminApplicationDirectory	/usr/include/NSSystemDirectories.h	/^    NSAdminApplicationDirectory = 4,        \/\/ system and network administration applications (Applications\/Utilities)$/;"	e	enum:__anon1
NSAllApplicationsDirectory	/usr/include/NSSystemDirectories.h	/^    NSAllApplicationsDirectory = 100,       \/\/ all directories where applications can occur (Applications, Applications\/Utilities, Developer\/Applications, ...)$/;"	e	enum:__anon1
NSAllDomainsMask	/usr/include/NSSystemDirectories.h	/^   NSAllDomainsMask = 0x0ffff	\/\/ all domains: all of the above and more, future items$/;"	e	enum:__anon2
NSAllLibrariesDirectory	/usr/include/NSSystemDirectories.h	/^    NSAllLibrariesDirectory = 101           \/\/ all directories where resources can occur (Library, Developer)$/;"	e	enum:__anon1
NSApplicationDirectory	/usr/include/NSSystemDirectories.h	/^    NSApplicationDirectory = 1,             \/\/ supported applications (Applications)$/;"	e	enum:__anon1
NSApplicationSupportDirectory	/usr/include/NSSystemDirectories.h	/^    NSApplicationSupportDirectory = 14,     \/\/ location of application support files (plug-ins, etc) (Library\/Application Support)$/;"	e	enum:__anon1
NSAutosavedInformationDirectory	/usr/include/NSSystemDirectories.h	/^    NSAutosavedInformationDirectory = 11,   \/\/ location of user's directory for use with autosaving (~\/Documents\/Autosaved)$/;"	e	enum:__anon1
NSCachesDirectory	/usr/include/NSSystemDirectories.h	/^    NSCachesDirectory = 13,                 \/\/ location of discardable cache files (Library\/Caches)$/;"	e	enum:__anon1
NSCoreServiceDirectory	/usr/include/NSSystemDirectories.h	/^    NSCoreServiceDirectory = 10,            \/\/ location of core services (System\/Library\/CoreServices)$/;"	e	enum:__anon1
NSDemoApplicationDirectory	/usr/include/NSSystemDirectories.h	/^    NSDemoApplicationDirectory = 2,         \/\/ unsupported applications, demonstration versions (Applications\/GrabBag)$/;"	e	enum:__anon1
NSDesktopDirectory	/usr/include/NSSystemDirectories.h	/^    NSDesktopDirectory = 12,                \/\/ location of user's Desktop (Desktop)$/;"	e	enum:__anon1
NSDeveloperApplicationDirectory	/usr/include/NSSystemDirectories.h	/^    NSDeveloperApplicationDirectory = 3,    \/\/ developer applications (Developer\/Applications)$/;"	e	enum:__anon1
NSDeveloperDirectory	/usr/include/NSSystemDirectories.h	/^    NSDeveloperDirectory = 6,               \/\/ developer resources (Developer)$/;"	e	enum:__anon1
NSDocumentDirectory	/usr/include/NSSystemDirectories.h	/^    NSDocumentDirectory = 9,                \/\/ documents (Documents)$/;"	e	enum:__anon1
NSDocumentationDirectory	/usr/include/NSSystemDirectories.h	/^    NSDocumentationDirectory = 8,           \/\/ documentation (Library\/Documentation)$/;"	e	enum:__anon1
NSDownloadsDirectory	/usr/include/NSSystemDirectories.h	/^    NSDownloadsDirectory = 15,              \/\/ location of user's Downloads directory (Downloads)$/;"	e	enum:__anon1
NSGetNextSearchPathEnumeration	/usr/include/NSSystemDirectories.h	/^extern NSSearchPathEnumerationState NSGetNextSearchPathEnumeration(NSSearchPathEnumerationState state, char *path);$/;"	p	signature:(NSSearchPathEnumerationState state, char *path)
NSInputMethodsDirectory	/usr/include/NSSystemDirectories.h	/^    NSInputMethodsDirectory = 16,           \/\/ input methods (Library\/Input Methods)$/;"	e	enum:__anon1
NSLibraryDirectory	/usr/include/NSSystemDirectories.h	/^    NSLibraryDirectory = 5,                 \/\/ various user-visible documentation, support, and configuration files, resources (Library)$/;"	e	enum:__anon1
NSLocalDomainMask	/usr/include/NSSystemDirectories.h	/^   NSLocalDomainMask = 2,	\/\/ local to the current machine --- place to install items available to everyone on this machine$/;"	e	enum:__anon2
NSMoviesDirectory	/usr/include/NSSystemDirectories.h	/^    NSMoviesDirectory = 17,                 \/\/ location of user's Movies directory (~\/Movies)$/;"	e	enum:__anon1
NSMusicDirectory	/usr/include/NSSystemDirectories.h	/^    NSMusicDirectory = 18,                  \/\/ location of user's Music directory (~\/Music)$/;"	e	enum:__anon1
NSNetworkDomainMask	/usr/include/NSSystemDirectories.h	/^   NSNetworkDomainMask = 4, 	\/\/ publically available location in the local area network --- place to install items available on the network (\/Network)$/;"	e	enum:__anon2
NSPicturesDirectory	/usr/include/NSSystemDirectories.h	/^    NSPicturesDirectory = 19,               \/\/ location of user's Pictures directory (~\/Pictures)$/;"	e	enum:__anon1
NSPreferencePanesDirectory	/usr/include/NSSystemDirectories.h	/^    NSPreferencePanesDirectory = 22,        \/\/ location of the PreferencePanes directory for use with System Preferences (Library\/PreferencePanes)$/;"	e	enum:__anon1
NSPrinterDescriptionDirectory	/usr/include/NSSystemDirectories.h	/^    NSPrinterDescriptionDirectory = 20,     \/\/ location of system's PPDs directory (Library\/Printers\/PPDs)$/;"	e	enum:__anon1
NSSearchPathDirectory	/usr/include/NSSystemDirectories.h	/^} NSSearchPathDirectory;$/;"	t	typeref:enum:__anon1
NSSearchPathDomainMask	/usr/include/NSSystemDirectories.h	/^} NSSearchPathDomainMask;$/;"	t	typeref:enum:__anon2
NSSearchPathEnumerationState	/usr/include/NSSystemDirectories.h	/^typedef unsigned int NSSearchPathEnumerationState;$/;"	t
NSSharedPublicDirectory	/usr/include/NSSystemDirectories.h	/^    NSSharedPublicDirectory = 21,           \/\/ location of user's Public sharing directory (~\/Public)$/;"	e	enum:__anon1
NSStartSearchPathEnumeration	/usr/include/NSSystemDirectories.h	/^extern NSSearchPathEnumerationState NSStartSearchPathEnumeration(NSSearchPathDirectory dir, NSSearchPathDomainMask domainMask);$/;"	p	signature:(NSSearchPathDirectory dir, NSSearchPathDomainMask domainMask)
NSSystemDomainMask	/usr/include/NSSystemDirectories.h	/^   NSSystemDomainMask = 8,	\/\/ provided by Apple$/;"	e	enum:__anon2
NSUserDirectory	/usr/include/NSSystemDirectories.h	/^    NSUserDirectory = 7,                    \/\/ user home directories (Users)$/;"	e	enum:__anon1
NSUserDomainMask	/usr/include/NSSystemDirectories.h	/^   NSUserDomainMask = 1,	\/\/ user's home directory --- place to install user's personal items (~)$/;"	e	enum:__anon2
NS_ALG_DH	/usr/include/nameser.h	/^#define	NS_ALG_DH /;"	d
NS_ALG_DSA	/usr/include/nameser.h	/^#define	NS_ALG_DSA /;"	d
NS_ALG_DSS	/usr/include/nameser.h	/^#define	NS_ALG_DSS /;"	d
NS_ALG_EXPIRE_ONLY	/usr/include/nameser.h	/^#define	NS_ALG_EXPIRE_ONLY	/;"	d
NS_ALG_MD5RSA	/usr/include/nameser.h	/^#define	NS_ALG_MD5RSA	/;"	d
NS_ALG_PRIVATE_OID	/usr/include/nameser.h	/^#define	NS_ALG_PRIVATE_OID	/;"	d
NS_CMPRSFLGS	/usr/include/nameser.h	/^#define NS_CMPRSFLGS	/;"	d
NS_DEFAULTPORT	/usr/include/nameser.h	/^#define NS_DEFAULTPORT	/;"	d
NS_DSA_MAX_BYTES	/usr/include/nameser.h	/^#define NS_DSA_MAX_BYTES /;"	d
NS_DSA_MIN_SIZE	/usr/include/nameser.h	/^#define NS_DSA_MIN_SIZE /;"	d
NS_DSA_SIG_SIZE	/usr/include/nameser.h	/^#define NS_DSA_SIG_SIZE /;"	d
NS_GET16	/usr/include/nameser.h	/^#define NS_GET16(/;"	d
NS_GET32	/usr/include/nameser.h	/^#define NS_GET32(/;"	d
NS_HFIXEDSZ	/usr/include/nameser.h	/^#define NS_HFIXEDSZ	/;"	d
NS_IN6ADDRSZ	/usr/include/nameser.h	/^#define NS_IN6ADDRSZ	/;"	d
NS_INADDRSZ	/usr/include/nameser.h	/^#define NS_INADDRSZ	/;"	d
NS_INT16SZ	/usr/include/nameser.h	/^#define NS_INT16SZ	/;"	d
NS_INT32SZ	/usr/include/nameser.h	/^#define NS_INT32SZ	/;"	d
NS_INT8SZ	/usr/include/nameser.h	/^#define NS_INT8SZ	/;"	d
NS_KEY_EXTENDED_FLAGS	/usr/include/nameser.h	/^#define	NS_KEY_EXTENDED_FLAGS	/;"	d
NS_KEY_NAME_ENTITY	/usr/include/nameser.h	/^#define	NS_KEY_NAME_ENTITY	/;"	d
NS_KEY_NAME_RESERVED	/usr/include/nameser.h	/^#define	NS_KEY_NAME_RESERVED	/;"	d
NS_KEY_NAME_TYPE	/usr/include/nameser.h	/^#define	NS_KEY_NAME_TYPE	/;"	d
NS_KEY_NAME_USER	/usr/include/nameser.h	/^#define	NS_KEY_NAME_USER	/;"	d
NS_KEY_NAME_ZONE	/usr/include/nameser.h	/^#define	NS_KEY_NAME_ZONE	/;"	d
NS_KEY_NO_AUTH	/usr/include/nameser.h	/^#define	NS_KEY_NO_AUTH	/;"	d
NS_KEY_NO_CONF	/usr/include/nameser.h	/^#define	NS_KEY_NO_CONF	/;"	d
NS_KEY_PROT_ANY	/usr/include/nameser.h	/^#define NS_KEY_PROT_ANY	/;"	d
NS_KEY_PROT_DNSSEC	/usr/include/nameser.h	/^#define NS_KEY_PROT_DNSSEC /;"	d
NS_KEY_PROT_EMAIL	/usr/include/nameser.h	/^#define NS_KEY_PROT_EMAIL /;"	d
NS_KEY_PROT_IPSEC	/usr/include/nameser.h	/^#define NS_KEY_PROT_IPSEC /;"	d
NS_KEY_PROT_TLS	/usr/include/nameser.h	/^#define NS_KEY_PROT_TLS /;"	d
NS_KEY_RESERVED10	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED10	/;"	d
NS_KEY_RESERVED11	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED11	/;"	d
NS_KEY_RESERVED2	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED2	/;"	d
NS_KEY_RESERVED4	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED4	/;"	d
NS_KEY_RESERVED5	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED5	/;"	d
NS_KEY_RESERVED8	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED8	/;"	d
NS_KEY_RESERVED9	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED9	/;"	d
NS_KEY_RESERVED_BITMASK	/usr/include/nameser.h	/^#define	NS_KEY_RESERVED_BITMASK /;"	d
NS_KEY_RESERVED_BITMASK2	/usr/include/nameser.h	/^#define NS_KEY_RESERVED_BITMASK2 /;"	d
NS_KEY_SIGNATORYMASK	/usr/include/nameser.h	/^#define	NS_KEY_SIGNATORYMASK	/;"	d
NS_KEY_TYPEMASK	/usr/include/nameser.h	/^#define	NS_KEY_TYPEMASK	/;"	d
NS_KEY_TYPE_AUTH_CONF	/usr/include/nameser.h	/^#define	NS_KEY_TYPE_AUTH_CONF	/;"	d
NS_KEY_TYPE_AUTH_ONLY	/usr/include/nameser.h	/^#define	NS_KEY_TYPE_AUTH_ONLY	/;"	d
NS_KEY_TYPE_CONF_ONLY	/usr/include/nameser.h	/^#define	NS_KEY_TYPE_CONF_ONLY	/;"	d
NS_KEY_TYPE_NO_KEY	/usr/include/nameser.h	/^#define	NS_KEY_TYPE_NO_KEY	/;"	d
NS_MAXCDNAME	/usr/include/nameser.h	/^#define NS_MAXCDNAME	/;"	d
NS_MAXDNAME	/usr/include/nameser.h	/^#define NS_MAXDNAME	/;"	d
NS_MAXLABEL	/usr/include/nameser.h	/^#define NS_MAXLABEL	/;"	d
NS_MD5RSA_MAX_BASE64	/usr/include/nameser.h	/^#define	NS_MD5RSA_MAX_BASE64	/;"	d
NS_MD5RSA_MAX_BITS	/usr/include/nameser.h	/^#define	NS_MD5RSA_MAX_BITS	/;"	d
NS_MD5RSA_MAX_BYTES	/usr/include/nameser.h	/^#define	NS_MD5RSA_MAX_BYTES	/;"	d
NS_MD5RSA_MAX_SIZE	/usr/include/nameser.h	/^#define NS_MD5RSA_MAX_SIZE	/;"	d
NS_MD5RSA_MIN_BITS	/usr/include/nameser.h	/^#define	NS_MD5RSA_MIN_BITS	/;"	d
NS_MD5RSA_MIN_SIZE	/usr/include/nameser.h	/^#define NS_MD5RSA_MIN_SIZE	/;"	d
NS_NXT_BITS	/usr/include/nameser.h	/^#define	NS_NXT_BITS /;"	d
NS_NXT_BIT_CLEAR	/usr/include/nameser.h	/^#define	NS_NXT_BIT_CLEAR(/;"	d
NS_NXT_BIT_ISSET	/usr/include/nameser.h	/^#define	NS_NXT_BIT_ISSET(/;"	d
NS_NXT_BIT_SET	/usr/include/nameser.h	/^#define	NS_NXT_BIT_SET(/;"	d
NS_NXT_MAX	/usr/include/nameser.h	/^#define NS_NXT_MAX /;"	d
NS_OPT_DNSSEC_OK	/usr/include/nameser.h	/^#define NS_OPT_DNSSEC_OK	/;"	d
NS_PACKETSZ	/usr/include/nameser.h	/^#define NS_PACKETSZ	/;"	d
NS_PUT16	/usr/include/nameser.h	/^#define NS_PUT16(/;"	d
NS_PUT32	/usr/include/nameser.h	/^#define NS_PUT32(/;"	d
NS_QFIXEDSZ	/usr/include/nameser.h	/^#define NS_QFIXEDSZ	/;"	d
NS_RRFIXEDSZ	/usr/include/nameser.h	/^#define NS_RRFIXEDSZ	/;"	d
NS_SIG_ALG	/usr/include/nameser.h	/^#define	NS_SIG_ALG	/;"	d
NS_SIG_EXPIR	/usr/include/nameser.h	/^#define	NS_SIG_EXPIR	/;"	d
NS_SIG_FOOT	/usr/include/nameser.h	/^#define	NS_SIG_FOOT	/;"	d
NS_SIG_LABELS	/usr/include/nameser.h	/^#define	NS_SIG_LABELS	/;"	d
NS_SIG_OTTL	/usr/include/nameser.h	/^#define	NS_SIG_OTTL	/;"	d
NS_SIG_SIGNED	/usr/include/nameser.h	/^#define	NS_SIG_SIGNED	/;"	d
NS_SIG_SIGNER	/usr/include/nameser.h	/^#define	NS_SIG_SIGNER	/;"	d
NS_SIG_TYPE	/usr/include/nameser.h	/^#define	NS_SIG_TYPE	/;"	d
NS_TSIG_ALG_HMAC_MD5	/usr/include/nameser.h	/^#define NS_TSIG_ALG_HMAC_MD5 /;"	d
NS_TSIG_ERROR_FORMERR	/usr/include/nameser.h	/^#define NS_TSIG_ERROR_FORMERR /;"	d
NS_TSIG_ERROR_NO_SPACE	/usr/include/nameser.h	/^#define NS_TSIG_ERROR_NO_SPACE /;"	d
NS_TSIG_ERROR_NO_TSIG	/usr/include/nameser.h	/^#define NS_TSIG_ERROR_NO_TSIG /;"	d
NS_TSIG_FUDGE	/usr/include/nameser.h	/^#define NS_TSIG_FUDGE /;"	d
NS_TSIG_TCP_COUNT	/usr/include/nameser.h	/^#define NS_TSIG_TCP_COUNT /;"	d
NTSID_MAX_AUTHORITIES	/usr/include/ntsid.h	/^#define NTSID_MAX_AUTHORITIES /;"	d
NULL	/usr/include/_locale.h	/^#define NULL	/;"	d
NULL	/usr/include/stddef.h	/^#define NULL /;"	d
NULL	/usr/include/stdio.h	/^#define NULL /;"	d
NULL	/usr/include/stdlib.h	/^#define NULL /;"	d
NULL	/usr/include/string.h	/^#define NULL /;"	d
NULL	/usr/include/time.h	/^#define NULL /;"	d
NULL	/usr/include/unistd.h	/^#define	NULL /;"	d
NULL	/usr/include/wchar.h	/^#define	NULL	/;"	d
NULLHOOK	/usr/include/term_entry.h	/^#define NULLHOOK /;"	d
NUMBER	/usr/include/tic.h	/^#define NUMBER /;"	d
NUMCOUNT	/usr/include/term.h	/^#define NUMCOUNT /;"	d
NUMWRITE	/usr/include/term.h	/^#define NUMWRITE /;"	d
NUM_BOOLEANS	/usr/include/term_entry.h	/^#define NUM_BOOLEANS(/;"	d
NUM_EXT_NAMES	/usr/include/term_entry.h	/^#define NUM_EXT_NAMES(/;"	d
NUM_NUMBERS	/usr/include/term_entry.h	/^#define NUM_NUMBERS(/;"	d
NUM_PARM	/usr/include/tic.h	/^#define NUM_PARM /;"	d
NUM_STATIC_TOKENS	/usr/include/tcl.h	/^#define NUM_STATIC_TOKENS /;"	d
NUM_STRINGS	/usr/include/term_entry.h	/^#define NUM_STRINGS(/;"	d
N_ABS	/usr/include/nlist.h	/^#define	N_ABS	/;"	d
N_BCOMM	/usr/include/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	/usr/include/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	/usr/include/stab.h	/^#define	N_BSLINE	/;"	d
N_BSS	/usr/include/nlist.h	/^#define	N_BSS	/;"	d
N_COMM	/usr/include/nlist.h	/^#define	N_COMM	/;"	d
N_DATA	/usr/include/nlist.h	/^#define	N_DATA	/;"	d
N_DSLINE	/usr/include/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	/usr/include/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	/usr/include/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	/usr/include/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	/usr/include/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	/usr/include/stab.h	/^#define	N_EXCL	/;"	d
N_EXT	/usr/include/nlist.h	/^#define	N_EXT	/;"	d
N_FN	/usr/include/nlist.h	/^#define	N_FN	/;"	d
N_FNAME	/usr/include/stab.h	/^#define	N_FNAME	/;"	d
N_FORMAT	/usr/include/nlist.h	/^#define	N_FORMAT	/;"	d
N_FUN	/usr/include/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	/usr/include/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	/usr/include/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	/usr/include/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	/usr/include/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	/usr/include/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	/usr/include/stab.h	/^#define	N_MAIN	/;"	d
N_PC	/usr/include/stab.h	/^#define	N_PC	/;"	d
N_PSYM	/usr/include/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	/usr/include/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	/usr/include/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	/usr/include/stab.h	/^#define	N_SLINE	/;"	d
N_SO	/usr/include/stab.h	/^#define	N_SO	/;"	d
N_SOL	/usr/include/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	/usr/include/stab.h	/^#define	N_SSYM	/;"	d
N_STAB	/usr/include/nlist.h	/^#define	N_STAB	/;"	d
N_STSYM	/usr/include/stab.h	/^#define	N_STSYM	/;"	d
N_TEXT	/usr/include/nlist.h	/^#define	N_TEXT	/;"	d
N_TYPE	/usr/include/nlist.h	/^#define	N_TYPE	/;"	d
N_UNDF	/usr/include/nlist.h	/^#define	N_UNDF	/;"	d
Node	/usr/include/mecab.h	/^  typedef struct mecab_node_t            Node;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_node_t
Nttyb	/usr/include/term.h	/^		Nttyb;		\/* current state of the terminal *\/$/;"	m	struct:term	access:public
Numbers	/usr/include/term.h	/^    short *Numbers;		\/* array of integer values *\/$/;"	m	struct:termtype	access:public
OARMAG1	/usr/include/ar.h	/^#define	OARMAG1	/;"	d
OARMAG2	/usr/include/ar.h	/^#define	OARMAG2	/;"	d
ODBCINT64	/usr/include/sqltypes.h	/^#   define ODBCINT64	/;"	d
ODBCINT64	/usr/include/sqltypes.h	/^#  define ODBCINT64 /;"	d
ODBCVER	/usr/include/odbcinst.h	/^#define ODBCVER /;"	d
ODBCVER	/usr/include/sql.h	/^#define ODBCVER	/;"	d
ODBCVER	/usr/include/sqltypes.h	/^#define ODBCVER	/;"	d
ODBC_ADD_DSN	/usr/include/odbcinst.h	/^#define ODBC_ADD_DSN	/;"	d
ODBC_ADD_SYS_DSN	/usr/include/odbcinst.h	/^#define ODBC_ADD_SYS_DSN /;"	d
ODBC_BOTH_DSN	/usr/include/odbcinst.h	/^#define ODBC_BOTH_DSN	/;"	d
ODBC_CONFIG_DRIVER	/usr/include/odbcinst.h	/^#define ODBC_CONFIG_DRIVER	/;"	d
ODBC_CONFIG_DRIVER_MAX	/usr/include/odbcinst.h	/^#define ODBC_CONFIG_DRIVER_MAX	/;"	d
ODBC_CONFIG_DSN	/usr/include/odbcinst.h	/^#define ODBC_CONFIG_DSN	/;"	d
ODBC_CONFIG_SYS_DSN	/usr/include/odbcinst.h	/^#define ODBC_CONFIG_SYS_DSN	/;"	d
ODBC_ERROR_COMPONENT_NOT_FOUND	/usr/include/odbcinst.h	/^#define ODBC_ERROR_COMPONENT_NOT_FOUND /;"	d
ODBC_ERROR_CREATE_DSN_FAILED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_CREATE_DSN_FAILED /;"	d
ODBC_ERROR_DRIVER_SPECIFIC	/usr/include/odbcinst.h	/^#define ODBC_ERROR_DRIVER_SPECIFIC	/;"	d
ODBC_ERROR_GENERAL_ERR	/usr/include/odbcinst.h	/^#define ODBC_ERROR_GENERAL_ERR /;"	d
ODBC_ERROR_INVALID_BUFF_LEN	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_BUFF_LEN /;"	d
ODBC_ERROR_INVALID_DSN	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_DSN /;"	d
ODBC_ERROR_INVALID_HWND	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_HWND /;"	d
ODBC_ERROR_INVALID_INF	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_INF /;"	d
ODBC_ERROR_INVALID_KEYWORD_VALUE	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_KEYWORD_VALUE /;"	d
ODBC_ERROR_INVALID_LOG_FILE	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_LOG_FILE /;"	d
ODBC_ERROR_INVALID_NAME	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_NAME /;"	d
ODBC_ERROR_INVALID_PARAM_SEQUENCE	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_PARAM_SEQUENCE /;"	d
ODBC_ERROR_INVALID_PATH	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_PATH /;"	d
ODBC_ERROR_INVALID_REQUEST_TYPE	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_REQUEST_TYPE /;"	d
ODBC_ERROR_INVALID_STR	/usr/include/odbcinst.h	/^#define ODBC_ERROR_INVALID_STR /;"	d
ODBC_ERROR_LOAD_LIB_FAILED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_LOAD_LIB_FAILED /;"	d
ODBC_ERROR_OUTPUT_STRING_TRUNCATED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_OUTPUT_STRING_TRUNCATED /;"	d
ODBC_ERROR_OUT_OF_MEM	/usr/include/odbcinst.h	/^#define ODBC_ERROR_OUT_OF_MEM /;"	d
ODBC_ERROR_REMOVE_DSN_FAILED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_REMOVE_DSN_FAILED /;"	d
ODBC_ERROR_REQUEST_FAILED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_REQUEST_FAILED /;"	d
ODBC_ERROR_USAGE_UPDATE_FAILED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_USAGE_UPDATE_FAILED /;"	d
ODBC_ERROR_USER_CANCELED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_USER_CANCELED /;"	d
ODBC_ERROR_WRITING_SYSINFO_FAILED	/usr/include/odbcinst.h	/^#define ODBC_ERROR_WRITING_SYSINFO_FAILED /;"	d
ODBC_INSTALL_COMPLETE	/usr/include/odbcinst.h	/^#define ODBC_INSTALL_COMPLETE	/;"	d
ODBC_INSTALL_DRIVER	/usr/include/odbcinst.h	/^#define ODBC_INSTALL_DRIVER	/;"	d
ODBC_INSTALL_INQUIRY	/usr/include/odbcinst.h	/^#define	ODBC_INSTALL_INQUIRY	/;"	d
ODBC_REMOVE_DEFAULT_DSN	/usr/include/odbcinst.h	/^#define	 ODBC_REMOVE_DEFAULT_DSN	/;"	d
ODBC_REMOVE_DRIVER	/usr/include/odbcinst.h	/^#define ODBC_REMOVE_DRIVER	/;"	d
ODBC_REMOVE_DSN	/usr/include/odbcinst.h	/^#define ODBC_REMOVE_DSN	/;"	d
ODBC_REMOVE_SYS_DSN	/usr/include/odbcinst.h	/^#define ODBC_REMOVE_SYS_DSN	/;"	d
ODBC_SYSTEM_DSN	/usr/include/odbcinst.h	/^#define ODBC_SYSTEM_DSN	/;"	d
ODBC_USER_DSN	/usr/include/odbcinst.h	/^#define ODBC_USER_DSN	/;"	d
OF	/usr/include/zconf.h	/^#    define OF(/;"	d
OK	/usr/include/curses.h	/^#define OK /;"	d
OK	/usr/include/curses.h	/^#undef	OK$/;"	d
OK	/usr/include/ncurses.h	/^#define OK /;"	d
OK	/usr/include/ncurses.h	/^#undef	OK$/;"	d
OLD_TIME	/usr/include/utmpx.h	/^#define OLD_TIME	/;"	d
OMPI_BUILDING	/usr/include/mpi.h	/^#define OMPI_BUILDING /;"	d
OMPI_CXX_SUPPORTS_2D_CONST_CAST	/usr/include/mpi.h	/^#define OMPI_CXX_SUPPORTS_2D_CONST_CAST /;"	d
OMPI_C_MPI_COMM_DUP_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_COMM_DUP_FN( MPI_Comm comm, int comm_keyval, $/;"	p	signature:( MPI_Comm comm, int comm_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_COMM_NULL_COPY_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_COMM_NULL_COPY_FN( MPI_Comm comm, $/;"	p	signature:( MPI_Comm comm, int comm_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_COMM_NULL_DELETE_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_COMM_NULL_DELETE_FN( MPI_Comm comm, $/;"	p	signature:( MPI_Comm comm, int comm_keyval, void* attribute_val_out, void* extra_state )
OMPI_C_MPI_DUP_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_DUP_FN( MPI_Comm comm, int comm_keyval, $/;"	p	signature:( MPI_Comm comm, int comm_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_NULL_COPY_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_NULL_COPY_FN( MPI_Comm comm, int comm_keyval, $/;"	p	signature:( MPI_Comm comm, int comm_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_NULL_DELETE_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_NULL_DELETE_FN( MPI_Comm comm, int comm_keyval,$/;"	p	signature:( MPI_Comm comm, int comm_keyval, void* attribute_val_out, void* extra_state )
OMPI_C_MPI_TYPE_DUP_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_TYPE_DUP_FN( MPI_Datatype datatype, $/;"	p	signature:( MPI_Datatype datatype, int type_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_TYPE_NULL_COPY_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_TYPE_NULL_COPY_FN( MPI_Datatype datatype, $/;"	p	signature:( MPI_Datatype datatype, int type_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_TYPE_NULL_DELETE_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_TYPE_NULL_DELETE_FN( MPI_Datatype datatype, $/;"	p	signature:( MPI_Datatype datatype, int type_keyval, void* attribute_val_out, void* extra_state )
OMPI_C_MPI_WIN_DUP_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_WIN_DUP_FN( MPI_Win window, int win_keyval, $/;"	p	signature:( MPI_Win window, int win_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_WIN_NULL_COPY_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_WIN_NULL_COPY_FN( MPI_Win window, int win_keyval, $/;"	p	signature:( MPI_Win window, int win_keyval, void* extra_state, void* attribute_val_in, void* attribute_val_out, int* flag )
OMPI_C_MPI_WIN_NULL_DELETE_FN	/usr/include/mpi.h	/^OMPI_DECLSPEC int OMPI_C_MPI_WIN_NULL_DELETE_FN( MPI_Win window, $/;"	p	signature:( MPI_Win window, int win_keyval, void* attribute_val_out, void* extra_state )
OMPI_DECLSPEC	/usr/include/mpi.h	/^#define OMPI_DECLSPEC /;"	d
OMPI_DECLSPEC	/usr/include/mpi.h	/^#define OMPI_DECLSPEC$/;"	d
OMPI_HAVE_CXX_EXCEPTION_SUPPORT	/usr/include/mpi.h	/^#define OMPI_HAVE_CXX_EXCEPTION_SUPPORT /;"	d
OMPI_HAVE_FORTRAN_INTEGER1	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_INTEGER1 /;"	d
OMPI_HAVE_FORTRAN_INTEGER16	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_INTEGER16 /;"	d
OMPI_HAVE_FORTRAN_INTEGER2	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_INTEGER2 /;"	d
OMPI_HAVE_FORTRAN_INTEGER4	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_INTEGER4 /;"	d
OMPI_HAVE_FORTRAN_INTEGER8	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_INTEGER8 /;"	d
OMPI_HAVE_FORTRAN_REAL16	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_REAL16 /;"	d
OMPI_HAVE_FORTRAN_REAL4	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_REAL4 /;"	d
OMPI_HAVE_FORTRAN_REAL8	/usr/include/mpi.h	/^#define OMPI_HAVE_FORTRAN_REAL8 /;"	d
OMPI_HAVE_LONG_LONG	/usr/include/mpi.h	/^#define OMPI_HAVE_LONG_LONG /;"	d
OMPI_HAVE_SYS_TIME_H	/usr/include/mpi.h	/^#define OMPI_HAVE_SYS_TIME_H /;"	d
OMPI_MAJOR_VERSION	/usr/include/mpi.h	/^#define OMPI_MAJOR_VERSION /;"	d
OMPI_MINOR_VERSION	/usr/include/mpi.h	/^#define OMPI_MINOR_VERSION /;"	d
OMPI_MPI_H	/usr/include/mpi.h	/^#define OMPI_MPI_H$/;"	d
OMPI_MPI_OFFSET_TYPE	/usr/include/mpi.h	/^#define OMPI_MPI_OFFSET_TYPE /;"	d
OMPI_OFFSET_DATATYPE	/usr/include/mpi.h	/^#define OMPI_OFFSET_DATATYPE /;"	d
OMPI_PTRDIFF_TYPE	/usr/include/mpi.h	/^#define OMPI_PTRDIFF_TYPE /;"	d
OMPI_RELEASE_VERSION	/usr/include/mpi.h	/^#define OMPI_RELEASE_VERSION /;"	d
OMPI_SIZEOF_BOOL	/usr/include/mpi.h	/^#define OMPI_SIZEOF_BOOL /;"	d
OMPI_SIZEOF_INT	/usr/include/mpi.h	/^#define OMPI_SIZEOF_INT /;"	d
OMPI_STDC_HEADERS	/usr/include/mpi.h	/^#define OMPI_STDC_HEADERS /;"	d
OMPI_WANT_CXX_BINDINGS	/usr/include/mpi.h	/^#define OMPI_WANT_CXX_BINDINGS /;"	d
OMPI_WANT_F77_BINDINGS	/usr/include/mpi.h	/^#define OMPI_WANT_F77_BINDINGS /;"	d
OMPI_WANT_F90_BINDINGS	/usr/include/mpi.h	/^#define OMPI_WANT_F90_BINDINGS /;"	d
OMPI_WANT_MPI_CXX_SEEK	/usr/include/mpi.h	/^#define OMPI_WANT_MPI_CXX_SEEK /;"	d
OPENDEV_BLCK	/usr/include/util.h	/^#define OPENDEV_BLCK	/;"	d
OPENDEV_PART	/usr/include/util.h	/^#define OPENDEV_PART	/;"	d
OPEN_MPI	/usr/include/mpi.h	/^#define OPEN_MPI /;"	d
OPTIMIZE_ALL	/usr/include/curses.h	/^#define OPTIMIZE_ALL	/;"	d
OPTIMIZE_ALL	/usr/include/ncurses.h	/^#define OPTIMIZE_ALL	/;"	d
OPTIMIZE_HASHMAP	/usr/include/curses.h	/^#define OPTIMIZE_HASHMAP	/;"	d
OPTIMIZE_HASHMAP	/usr/include/ncurses.h	/^#define OPTIMIZE_HASHMAP	/;"	d
OPTIMIZE_MVCUR	/usr/include/curses.h	/^#define OPTIMIZE_MVCUR	/;"	d
OPTIMIZE_MVCUR	/usr/include/ncurses.h	/^#define OPTIMIZE_MVCUR	/;"	d
OPTIMIZE_SCROLL	/usr/include/curses.h	/^#define OPTIMIZE_SCROLL	/;"	d
OPTIMIZE_SCROLL	/usr/include/ncurses.h	/^#define OPTIMIZE_SCROLL	/;"	d
OPT_CAST	/usr/include/tclTomMath.h	/^#define  OPT_CAST(/;"	d
OS2	/usr/include/zconf.h	/^#  define OS2$/;"	d
OS_Accept	/usr/include/fcgios.h	/^DLLAPI int OS_Accept(int listen_sock, int fail_on_intr, const char *webServerAddrs);$/;"	p	signature:(int listen_sock, int fail_on_intr, const char *webServerAddrs)
OS_AsyncProc	/usr/include/fcgios.h	/^typedef void (*OS_AsyncProc) (ClientData clientData, int len);$/;"	t
OS_AsyncRead	/usr/include/fcgios.h	/^DLLAPI int OS_AsyncRead(int fd, int offset, void *buf, int len,$/;"	p	signature:(int fd, int offset, void *buf, int len, OS_AsyncProc procPtr, ClientData clientData)
OS_AsyncReadStdin	/usr/include/fcgios.h	/^DLLAPI int OS_AsyncReadStdin(void *buf, int len, OS_AsyncProc procPtr,$/;"	p	signature:(void *buf, int len, OS_AsyncProc procPtr, ClientData clientData)
OS_AsyncWrite	/usr/include/fcgios.h	/^DLLAPI int OS_AsyncWrite(int fd, int offset, void *buf, int len,$/;"	p	signature:(int fd, int offset, void *buf, int len, OS_AsyncProc procPtr, ClientData clientData)
OS_Close	/usr/include/fcgios.h	/^DLLAPI int OS_Close(int fd);$/;"	p	signature:(int fd)
OS_CloseRead	/usr/include/fcgios.h	/^DLLAPI int OS_CloseRead(int fd);$/;"	p	signature:(int fd)
OS_CreateLocalIpcFd	/usr/include/fcgios.h	/^DLLAPI int OS_CreateLocalIpcFd(const char *bindPath, int backlog);$/;"	p	signature:(const char *bindPath, int backlog)
OS_DoIo	/usr/include/fcgios.h	/^DLLAPI int OS_DoIo(struct timeval *tmo);$/;"	p	signature:(struct timeval *tmo)
OS_Errno	/usr/include/fcgios.h	/^#define OS_Errno /;"	d
OS_FcgiConnect	/usr/include/fcgios.h	/^DLLAPI int OS_FcgiConnect(char *bindPath);$/;"	p	signature:(char *bindPath)
OS_IpcClose	/usr/include/fcgios.h	/^DLLAPI int OS_IpcClose(int ipcFd);$/;"	p	signature:(int ipcFd)
OS_IsFcgi	/usr/include/fcgios.h	/^DLLAPI int OS_IsFcgi(int sock);$/;"	p	signature:(int sock)
OS_LibInit	/usr/include/fcgios.h	/^DLLAPI int OS_LibInit(int stdioFds[3]);$/;"	p	signature:(int stdioFds[3])
OS_LibShutdown	/usr/include/fcgios.h	/^DLLAPI void OS_LibShutdown(void);$/;"	p	signature:(void)
OS_Read	/usr/include/fcgios.h	/^DLLAPI int OS_Read(int fd, char * buf, size_t len);$/;"	p	signature:(int fd, char * buf, size_t len)
OS_SetErrno	/usr/include/fcgios.h	/^#define OS_SetErrno(/;"	d
OS_SetFlags	/usr/include/fcgios.h	/^DLLAPI void OS_SetFlags(int fd, int flags);$/;"	p	signature:(int fd, int flags)
OS_ShutdownPending	/usr/include/fcgios.h	/^DLLAPI void OS_ShutdownPending(void);$/;"	p	signature:(void)
OS_SpawnChild	/usr/include/fcgios.h	/^DLLAPI int OS_SpawnChild(char *execPath, int listenFd);$/;"	p	signature:(char *execPath, int listenFd)
OS_Write	/usr/include/fcgios.h	/^DLLAPI int OS_Write(int fd, char * buf, size_t len);$/;"	p	signature:(int fd, char * buf, size_t len)
O_ACTIVE	/usr/include/form.h	/^#define O_ACTIVE	/;"	d
O_AUTOSKIP	/usr/include/form.h	/^#define O_AUTOSKIP	/;"	d
O_BLANK	/usr/include/form.h	/^#define O_BLANK	/;"	d
O_BS_OVERLOAD	/usr/include/form.h	/^#define O_BS_OVERLOAD	/;"	d
O_EDIT	/usr/include/form.h	/^#define O_EDIT	/;"	d
O_IGNORECASE	/usr/include/menu.h	/^#define O_IGNORECASE /;"	d
O_NL_OVERLOAD	/usr/include/form.h	/^#define O_NL_OVERLOAD	/;"	d
O_NONBLOCK	/usr/include/fcgios.h	/^#define O_NONBLOCK /;"	d
O_NONCYCLIC	/usr/include/menu.h	/^#define O_NONCYCLIC /;"	d
O_NULLOK	/usr/include/form.h	/^#define O_NULLOK	/;"	d
O_ONEVALUE	/usr/include/menu.h	/^#define O_ONEVALUE /;"	d
O_PASSOK	/usr/include/form.h	/^#define O_PASSOK	/;"	d
O_PUBLIC	/usr/include/form.h	/^#define O_PUBLIC	/;"	d
O_ROWMAJOR	/usr/include/menu.h	/^#define O_ROWMAJOR /;"	d
O_SELECTABLE	/usr/include/menu.h	/^#define O_SELECTABLE /;"	d
O_SHOWDESC	/usr/include/menu.h	/^#define O_SHOWDESC /;"	d
O_SHOWMATCH	/usr/include/menu.h	/^#define O_SHOWMATCH /;"	d
O_STATIC	/usr/include/form.h	/^#define O_STATIC	/;"	d
O_VISIBLE	/usr/include/form.h	/^#define O_VISIBLE	/;"	d
O_WRAP	/usr/include/form.h	/^#define O_WRAP	/;"	d
Ottyb	/usr/include/term.h	/^    TTY		Ottyb,		\/* original state of the terminal *\/$/;"	m	struct:term	access:public
PACKAGE	/usr/include/fcgi_config.h	/^#define PACKAGE /;"	d
PAIRED	/usr/include/term_entry.h	/^#define PAIRED(/;"	d
PAIR_NUMBER	/usr/include/curses.h	/^#define PAIR_NUMBER(/;"	d
PAIR_NUMBER	/usr/include/ncurses.h	/^#define PAIR_NUMBER(/;"	d
PANEL	/usr/include/panel.h	/^} PANEL;$/;"	t	typeref:struct:panel
PASCAL	/usr/include/iodbcunix.h	/^#define PASCAL$/;"	d
PASS_MAX	/usr/include/limits.h	/^#define PASS_MAX	/;"	d
PIDLOCK_NONBLOCK	/usr/include/util.h	/^#define	PIDLOCK_NONBLOCK	/;"	d
PIDLOCK_USEHOSTNAME	/usr/include/util.h	/^#define PIDLOCK_USEHOSTNAME	/;"	d
PMPI_Abort	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Abort(MPI_Comm comm, int errorcode);$/;"	p	signature:(MPI_Comm comm, int errorcode)
PMPI_Accumulate	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Accumulate(void *origin_addr, int origin_count, MPI_Datatype origin_datatype,$/;"	p	signature:(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win)
PMPI_Add_error_class	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Add_error_class(int *errorclass);$/;"	p	signature:(int *errorclass)
PMPI_Add_error_code	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Add_error_code(int errorclass, int *errorcode);$/;"	p	signature:(int errorclass, int *errorcode)
PMPI_Add_error_string	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Add_error_string(int errorcode, char *string);$/;"	p	signature:(int errorcode, char *string)
PMPI_Address	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Address(void *location, MPI_Aint *address);$/;"	p	signature:(void *location, MPI_Aint *address)
PMPI_Allgather	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Allgather(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm)
PMPI_Allgatherv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Allgatherv(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, MPI_Comm comm)
PMPI_Alloc_mem	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Alloc_mem(MPI_Aint size, MPI_Info info, $/;"	p	signature:(MPI_Aint size, MPI_Info info, void *baseptr)
PMPI_Allreduce	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Allreduce(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
PMPI_Alltoall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Alltoall(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm)
PMPI_Alltoallv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Alltoallv(void *sendbuf, int *sendcounts, int *sdispls, $/;"	p	signature:(void *sendbuf, int *sendcounts, int *sdispls, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *rdispls, MPI_Datatype recvtype, MPI_Comm comm)
PMPI_Alltoallw	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Alltoallw(void *sendbuf, int *sendcounts, int *sdispls, MPI_Datatype *sendtypes, $/;"	p	signature:(void *sendbuf, int *sendcounts, int *sdispls, MPI_Datatype *sendtypes, void *recvbuf, int *recvcounts, int *rdispls, MPI_Datatype *recvtypes, MPI_Comm comm)
PMPI_Attr_delete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Attr_delete(MPI_Comm comm, int keyval);$/;"	p	signature:(MPI_Comm comm, int keyval)
PMPI_Attr_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Attr_get(MPI_Comm comm, int keyval, void *attribute_val, int *flag);$/;"	p	signature:(MPI_Comm comm, int keyval, void *attribute_val, int *flag)
PMPI_Attr_put	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Attr_put(MPI_Comm comm, int keyval, void *attribute_val);$/;"	p	signature:(MPI_Comm comm, int keyval, void *attribute_val)
PMPI_Barrier	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Barrier(MPI_Comm comm);$/;"	p	signature:(MPI_Comm comm)
PMPI_Bcast	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Bcast(void *buffer, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm)
PMPI_Bsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Bsend(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
PMPI_Bsend_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Bsend_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Buffer_attach	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Buffer_attach(void *buffer, int size);$/;"	p	signature:(void *buffer, int size)
PMPI_Buffer_detach	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Buffer_detach(void *buffer, int *size);$/;"	p	signature:(void *buffer, int *size)
PMPI_Cancel	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cancel(MPI_Request *request);$/;"	p	signature:(MPI_Request *request)
PMPI_Cart_coords	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_coords(MPI_Comm comm, int rank, int maxdims, int *coords);$/;"	p	signature:(MPI_Comm comm, int rank, int maxdims, int *coords)
PMPI_Cart_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_create(MPI_Comm old_comm, int ndims, int *dims, $/;"	p	signature:(MPI_Comm old_comm, int ndims, int *dims, int *periods, int reorder, MPI_Comm *comm_cart)
PMPI_Cart_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_get(MPI_Comm comm, int maxdims, int *dims, $/;"	p	signature:(MPI_Comm comm, int maxdims, int *dims, int *periods, int *coords)
PMPI_Cart_map	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_map(MPI_Comm comm, int ndims, int *dims, $/;"	p	signature:(MPI_Comm comm, int ndims, int *dims, int *periods, int *newrank)
PMPI_Cart_rank	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_rank(MPI_Comm comm, int *coords, int *rank);$/;"	p	signature:(MPI_Comm comm, int *coords, int *rank)
PMPI_Cart_shift	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_shift(MPI_Comm comm, int direction, int disp, $/;"	p	signature:(MPI_Comm comm, int direction, int disp, int *rank_source, int *rank_dest)
PMPI_Cart_sub	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cart_sub(MPI_Comm comm, int *remain_dims, MPI_Comm *new_comm);$/;"	p	signature:(MPI_Comm comm, int *remain_dims, MPI_Comm *new_comm)
PMPI_Cartdim_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Cartdim_get(MPI_Comm comm, int *ndims);$/;"	p	signature:(MPI_Comm comm, int *ndims)
PMPI_Close_port	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Close_port(char *port_name);$/;"	p	signature:(char *port_name)
PMPI_Comm_accept	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_accept(char *port_name, MPI_Info info, int root, $/;"	p	signature:(char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm)
PMPI_Comm_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Comm_c2f(MPI_Comm comm);$/;"	p	signature:(MPI_Comm comm)
PMPI_Comm_call_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_call_errhandler(MPI_Comm comm, int errorcode);$/;"	p	signature:(MPI_Comm comm, int errorcode)
PMPI_Comm_compare	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_compare(MPI_Comm comm1, MPI_Comm comm2, int *result);$/;"	p	signature:(MPI_Comm comm1, MPI_Comm comm2, int *result)
PMPI_Comm_connect	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_connect(char *port_name, MPI_Info info, int root, $/;"	p	signature:(char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm)
PMPI_Comm_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_create(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm);$/;"	p	signature:(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm)
PMPI_Comm_create_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_create_errhandler(MPI_Comm_errhandler_fn *function, $/;"	p	signature:(MPI_Comm_errhandler_fn *function, MPI_Errhandler *errhandler)
PMPI_Comm_create_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_create_keyval(MPI_Comm_copy_attr_function *comm_copy_attr_fn, $/;"	p	signature:(MPI_Comm_copy_attr_function *comm_copy_attr_fn, MPI_Comm_delete_attr_function *comm_delete_attr_fn, int *comm_keyval, void *extra_state)
PMPI_Comm_delete_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_delete_attr(MPI_Comm comm, int comm_keyval);$/;"	p	signature:(MPI_Comm comm, int comm_keyval)
PMPI_Comm_disconnect	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_disconnect(MPI_Comm *comm);$/;"	p	signature:(MPI_Comm *comm)
PMPI_Comm_dup	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_dup(MPI_Comm comm, MPI_Comm *newcomm);$/;"	p	signature:(MPI_Comm comm, MPI_Comm *newcomm)
PMPI_Comm_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Comm PMPI_Comm_f2c(MPI_Fint comm);$/;"	p	signature:(MPI_Fint comm)
PMPI_Comm_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_free(MPI_Comm *comm);$/;"	p	signature:(MPI_Comm *comm)
PMPI_Comm_free_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_free_keyval(int *comm_keyval);$/;"	p	signature:(int *comm_keyval)
PMPI_Comm_get_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_get_attr(MPI_Comm comm, int comm_keyval, $/;"	p	signature:(MPI_Comm comm, int comm_keyval, void *attribute_val, int *flag)
PMPI_Comm_get_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_get_errhandler(MPI_Comm comm, MPI_Errhandler *erhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler *erhandler)
PMPI_Comm_get_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_get_name(MPI_Comm comm, char *comm_name, int *resultlen);$/;"	p	signature:(MPI_Comm comm, char *comm_name, int *resultlen)
PMPI_Comm_get_parent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_get_parent(MPI_Comm *parent);$/;"	p	signature:(MPI_Comm *parent)
PMPI_Comm_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_group(MPI_Comm comm, MPI_Group *group);$/;"	p	signature:(MPI_Comm comm, MPI_Group *group)
PMPI_Comm_join	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_join(int fd, MPI_Comm *intercomm);$/;"	p	signature:(int fd, MPI_Comm *intercomm)
PMPI_Comm_rank	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_rank(MPI_Comm comm, int *rank);$/;"	p	signature:(MPI_Comm comm, int *rank)
PMPI_Comm_remote_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_remote_group(MPI_Comm comm, MPI_Group *group);$/;"	p	signature:(MPI_Comm comm, MPI_Group *group)
PMPI_Comm_remote_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_remote_size(MPI_Comm comm, int *size);$/;"	p	signature:(MPI_Comm comm, int *size)
PMPI_Comm_set_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_set_attr(MPI_Comm comm, int comm_keyval, void *attribute_val);$/;"	p	signature:(MPI_Comm comm, int comm_keyval, void *attribute_val)
PMPI_Comm_set_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_set_errhandler(MPI_Comm comm, MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler errhandler)
PMPI_Comm_set_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_set_name(MPI_Comm comm, char *comm_name);$/;"	p	signature:(MPI_Comm comm, char *comm_name)
PMPI_Comm_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_size(MPI_Comm comm, int *size);$/;"	p	signature:(MPI_Comm comm, int *size)
PMPI_Comm_spawn	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_spawn(char *command, char **argv, int maxprocs, MPI_Info info, $/;"	p	signature:(char *command, char **argv, int maxprocs, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *intercomm, int *array_of_errcodes)
PMPI_Comm_spawn_multiple	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_spawn_multiple(int count, char **array_of_commands, char ***array_of_argv, $/;"	p	signature:(int count, char **array_of_commands, char ***array_of_argv, int *array_of_maxprocs, MPI_Info *array_of_info, int root, MPI_Comm comm, MPI_Comm *intercomm, int *array_of_errcodes)
PMPI_Comm_split	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_split(MPI_Comm comm, int color, int key, MPI_Comm *newcomm);$/;"	p	signature:(MPI_Comm comm, int color, int key, MPI_Comm *newcomm)
PMPI_Comm_test_inter	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Comm_test_inter(MPI_Comm comm, int *flag);$/;"	p	signature:(MPI_Comm comm, int *flag)
PMPI_Dims_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Dims_create(int nnodes, int ndims, int *dims);$/;"	p	signature:(int nnodes, int ndims, int *dims)
PMPI_Errhandler_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Errhandler_c2f(MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Errhandler errhandler)
PMPI_Errhandler_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Errhandler_create(MPI_Handler_function *function,$/;"	p	signature:(MPI_Handler_function *function, MPI_Errhandler *errhandler)
PMPI_Errhandler_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Errhandler PMPI_Errhandler_f2c(MPI_Fint errhandler);$/;"	p	signature:(MPI_Fint errhandler)
PMPI_Errhandler_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Errhandler_free(MPI_Errhandler *errhandler);$/;"	p	signature:(MPI_Errhandler *errhandler)
PMPI_Errhandler_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Errhandler_get(MPI_Comm comm, MPI_Errhandler *errhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler *errhandler)
PMPI_Errhandler_set	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Errhandler_set(MPI_Comm comm, MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Comm comm, MPI_Errhandler errhandler)
PMPI_Error_class	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Error_class(int errorcode, int *errorclass);$/;"	p	signature:(int errorcode, int *errorclass)
PMPI_Error_string	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Error_string(int errorcode, char *string, int *resultlen);$/;"	p	signature:(int errorcode, char *string, int *resultlen)
PMPI_Exscan	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Exscan(void *sendbuf, void *recvbuf, int count,$/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
PMPI_File_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_File_c2f(MPI_File file);$/;"	p	signature:(MPI_File file)
PMPI_File_call_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_call_errhandler(MPI_File fh, int errorcode);$/;"	p	signature:(MPI_File fh, int errorcode)
PMPI_File_close	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_close(MPI_File *fh);$/;"	p	signature:(MPI_File *fh)
PMPI_File_create_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_create_errhandler(MPI_File_errhandler_fn *function,$/;"	p	signature:(MPI_File_errhandler_fn *function, MPI_Errhandler *errhandler)
PMPI_File_delete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_delete(char *filename, MPI_Info info);$/;"	p	signature:(char *filename, MPI_Info info)
PMPI_File_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_File PMPI_File_f2c(MPI_Fint file);$/;"	p	signature:(MPI_Fint file)
PMPI_File_get_amode	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_amode(MPI_File fh, int *amode);$/;"	p	signature:(MPI_File fh, int *amode)
PMPI_File_get_atomicity	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_atomicity(MPI_File fh, int *flag);$/;"	p	signature:(MPI_File fh, int *flag)
PMPI_File_get_byte_offset	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_byte_offset(MPI_File fh, MPI_Offset offset,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, MPI_Offset *disp)
PMPI_File_get_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_errhandler( MPI_File file, MPI_Errhandler *errhandler);$/;"	p	signature:( MPI_File file, MPI_Errhandler *errhandler)
PMPI_File_get_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_group(MPI_File fh, MPI_Group *group);$/;"	p	signature:(MPI_File fh, MPI_Group *group)
PMPI_File_get_info	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_info(MPI_File fh, MPI_Info *info_used);$/;"	p	signature:(MPI_File fh, MPI_Info *info_used)
PMPI_File_get_position	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_position(MPI_File fh, MPI_Offset *offset);$/;"	p	signature:(MPI_File fh, MPI_Offset *offset)
PMPI_File_get_position_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_position_shared(MPI_File fh, MPI_Offset *offset);$/;"	p	signature:(MPI_File fh, MPI_Offset *offset)
PMPI_File_get_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_size(MPI_File fh, MPI_Offset *size);$/;"	p	signature:(MPI_File fh, MPI_Offset *size)
PMPI_File_get_type_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_type_extent(MPI_File fh, MPI_Datatype datatype,$/;"	p	signature:(MPI_File fh, MPI_Datatype datatype, MPI_Aint *extent)
PMPI_File_get_view	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_get_view(MPI_File fh, MPI_Offset *disp,$/;"	p	signature:(MPI_File fh, MPI_Offset *disp, MPI_Datatype *etype, MPI_Datatype *filetype, char *datarep)
PMPI_File_iread	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_iread(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
PMPI_File_iread_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_iread_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
PMPI_File_iread_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_iread_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
PMPI_File_iwrite	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_iwrite(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
PMPI_File_iwrite_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_iwrite_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
PMPI_File_iwrite_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_iwrite_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request)
PMPI_File_open	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_open(MPI_Comm comm, char *filename, int amode,$/;"	p	signature:(MPI_Comm comm, char *filename, int amode, MPI_Info info, MPI_File *fh)
PMPI_File_preallocate	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_preallocate(MPI_File fh, MPI_Offset size);$/;"	p	signature:(MPI_File fh, MPI_Offset size)
PMPI_File_read	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_read_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_all(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_read_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_all_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
PMPI_File_read_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
PMPI_File_read_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_read_at_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_at_all(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_read_at_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype)
PMPI_File_read_at_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_at_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
PMPI_File_read_ordered	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_ordered(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_read_ordered_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_ordered_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
PMPI_File_read_ordered_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_ordered_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
PMPI_File_read_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_read_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_seek	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_seek(MPI_File fh, MPI_Offset offset, int whence);$/;"	p	signature:(MPI_File fh, MPI_Offset offset, int whence)
PMPI_File_seek_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_seek_shared(MPI_File fh, MPI_Offset offset, int whence);$/;"	p	signature:(MPI_File fh, MPI_Offset offset, int whence)
PMPI_File_set_atomicity	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_set_atomicity(MPI_File fh, int flag);$/;"	p	signature:(MPI_File fh, int flag)
PMPI_File_set_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_set_errhandler( MPI_File file, MPI_Errhandler errhandler);$/;"	p	signature:( MPI_File file, MPI_Errhandler errhandler)
PMPI_File_set_info	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_set_info(MPI_File fh, MPI_Info info);$/;"	p	signature:(MPI_File fh, MPI_Info info)
PMPI_File_set_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_set_size(MPI_File fh, MPI_Offset size);$/;"	p	signature:(MPI_File fh, MPI_Offset size)
PMPI_File_set_view	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_set_view(MPI_File fh, MPI_Offset disp, MPI_Datatype etype,$/;"	p	signature:(MPI_File fh, MPI_Offset disp, MPI_Datatype etype, MPI_Datatype filetype, char *datarep, MPI_Info info)
PMPI_File_sync	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_sync(MPI_File fh);$/;"	p	signature:(MPI_File fh)
PMPI_File_write	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_write_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_all(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_write_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_all_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
PMPI_File_write_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
PMPI_File_write_at	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_at(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_write_at_all	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_at_all(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_write_at_all_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf,$/;"	p	signature:(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype)
PMPI_File_write_at_all_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_at_all_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
PMPI_File_write_ordered	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_ordered(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_File_write_ordered_begin	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_ordered_begin(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype)
PMPI_File_write_ordered_end	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_ordered_end(MPI_File fh, void *buf, MPI_Status *status);$/;"	p	signature:(MPI_File fh, void *buf, MPI_Status *status)
PMPI_File_write_shared	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_File_write_shared(MPI_File fh, void *buf, int count,$/;"	p	signature:(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status)
PMPI_Finalize	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Finalize(void);$/;"	p	signature:(void)
PMPI_Finalized	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Finalized(int *flag);$/;"	p	signature:(int *flag)
PMPI_Free_mem	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Free_mem(void *base);$/;"	p	signature:(void *base)
PMPI_Gather	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Gather(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)
PMPI_Gatherv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Gatherv(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, int root, MPI_Comm comm)
PMPI_Get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Get(void *origin_addr, int origin_count, $/;"	p	signature:(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win)
PMPI_Get_address	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Get_address(void *location, MPI_Aint *address);$/;"	p	signature:(void *location, MPI_Aint *address)
PMPI_Get_count	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Get_count(MPI_Status *status, MPI_Datatype datatype, int *count);$/;"	p	signature:(MPI_Status *status, MPI_Datatype datatype, int *count)
PMPI_Get_elements	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Get_elements(MPI_Status *status, MPI_Datatype datatype, $/;"	p	signature:(MPI_Status *status, MPI_Datatype datatype, int *count)
PMPI_Get_processor_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Get_processor_name(char *name, int *resultlen);$/;"	p	signature:(char *name, int *resultlen)
PMPI_Get_version	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Get_version(int *version, int *subversion);$/;"	p	signature:(int *version, int *subversion)
PMPI_Graph_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Graph_create(MPI_Comm comm_old, int nnodes, int *index, $/;"	p	signature:(MPI_Comm comm_old, int nnodes, int *index, int *edges, int reorder, MPI_Comm *comm_graph)
PMPI_Graph_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Graph_get(MPI_Comm comm, int maxindex, int maxedges, $/;"	p	signature:(MPI_Comm comm, int maxindex, int maxedges, int *index, int *edges)
PMPI_Graph_map	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Graph_map(MPI_Comm comm, int nnodes, int *index, int *edges, $/;"	p	signature:(MPI_Comm comm, int nnodes, int *index, int *edges, int *newrank)
PMPI_Graph_neighbors	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Graph_neighbors(MPI_Comm comm, int rank, int maxneighbors, $/;"	p	signature:(MPI_Comm comm, int rank, int maxneighbors, int *neighbors)
PMPI_Graph_neighbors_count	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Graph_neighbors_count(MPI_Comm comm, int rank, int *nneighbors);$/;"	p	signature:(MPI_Comm comm, int rank, int *nneighbors)
PMPI_Graphdims_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Graphdims_get(MPI_Comm comm, int *nnodes, int *nedges);$/;"	p	signature:(MPI_Comm comm, int *nnodes, int *nedges)
PMPI_Grequest_complete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Grequest_complete(MPI_Request request);$/;"	p	signature:(MPI_Request request)
PMPI_Grequest_start	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Grequest_start(MPI_Grequest_query_function *query_fn,$/;"	p	signature:(MPI_Grequest_query_function *query_fn, MPI_Grequest_free_function *free_fn, MPI_Grequest_cancel_function *cancel_fn, void *extra_state, MPI_Request *request)
PMPI_Group_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Group_c2f(MPI_Group group);$/;"	p	signature:(MPI_Group group)
PMPI_Group_compare	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_compare(MPI_Group group1, MPI_Group group2, int *result);$/;"	p	signature:(MPI_Group group1, MPI_Group group2, int *result)
PMPI_Group_difference	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_difference(MPI_Group group1, MPI_Group group2, $/;"	p	signature:(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)
PMPI_Group_excl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_excl(MPI_Group group, int n, int *ranks, $/;"	p	signature:(MPI_Group group, int n, int *ranks, MPI_Group *newgroup)
PMPI_Group_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Group PMPI_Group_f2c(MPI_Fint group);$/;"	p	signature:(MPI_Fint group)
PMPI_Group_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_free(MPI_Group *group);$/;"	p	signature:(MPI_Group *group)
PMPI_Group_incl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_incl(MPI_Group group, int n, int *ranks, $/;"	p	signature:(MPI_Group group, int n, int *ranks, MPI_Group *newgroup)
PMPI_Group_intersection	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_intersection(MPI_Group group1, MPI_Group group2, $/;"	p	signature:(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)
PMPI_Group_range_excl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_range_excl(MPI_Group group, int n, int ranges[][3], $/;"	p	signature:(MPI_Group group, int n, int ranges[][3], MPI_Group *newgroup)
PMPI_Group_range_incl	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_range_incl(MPI_Group group, int n, int ranges[][3], $/;"	p	signature:(MPI_Group group, int n, int ranges[][3], MPI_Group *newgroup)
PMPI_Group_rank	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_rank(MPI_Group group, int *rank);$/;"	p	signature:(MPI_Group group, int *rank)
PMPI_Group_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_size(MPI_Group group, int *size);$/;"	p	signature:(MPI_Group group, int *size)
PMPI_Group_translate_ranks	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_translate_ranks(MPI_Group group1, int n, int *ranks1, $/;"	p	signature:(MPI_Group group1, int n, int *ranks1, MPI_Group group2, int *ranks2)
PMPI_Group_union	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Group_union(MPI_Group group1, MPI_Group group2, $/;"	p	signature:(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)
PMPI_Ibsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Ibsend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Info_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Info_c2f(MPI_Info info);$/;"	p	signature:(MPI_Info info)
PMPI_Info_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_create(MPI_Info *info);$/;"	p	signature:(MPI_Info *info)
PMPI_Info_delete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_delete(MPI_Info info, char *key);$/;"	p	signature:(MPI_Info info, char *key)
PMPI_Info_dup	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_dup(MPI_Info info, MPI_Info *newinfo);$/;"	p	signature:(MPI_Info info, MPI_Info *newinfo)
PMPI_Info_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Info PMPI_Info_f2c(MPI_Fint info);$/;"	p	signature:(MPI_Fint info)
PMPI_Info_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_free(MPI_Info *info);$/;"	p	signature:(MPI_Info *info)
PMPI_Info_get	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_get(MPI_Info info, char *key, int valuelen, $/;"	p	signature:(MPI_Info info, char *key, int valuelen, char *value, int *flag)
PMPI_Info_get_nkeys	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_get_nkeys(MPI_Info info, int *nkeys);$/;"	p	signature:(MPI_Info info, int *nkeys)
PMPI_Info_get_nthkey	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_get_nthkey(MPI_Info info, int n, char *key);$/;"	p	signature:(MPI_Info info, int n, char *key)
PMPI_Info_get_valuelen	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_get_valuelen(MPI_Info info, char *key, int *valuelen, $/;"	p	signature:(MPI_Info info, char *key, int *valuelen, int *flag)
PMPI_Info_set	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Info_set(MPI_Info info, char *key, char *value);$/;"	p	signature:(MPI_Info info, char *key, char *value)
PMPI_Init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Init(int *argc, char ***argv);$/;"	p	signature:(int *argc, char ***argv)
PMPI_Init_thread	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Init_thread(int *argc, char ***argv, int required, $/;"	p	signature:(int *argc, char ***argv, int required, int *provided)
PMPI_Initialized	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Initialized(int *flag);$/;"	p	signature:(int *flag)
PMPI_Intercomm_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Intercomm_create(MPI_Comm local_comm, int local_leader, $/;"	p	signature:(MPI_Comm local_comm, int local_leader, MPI_Comm bridge_comm, int remote_leader, int tag, MPI_Comm *newintercomm)
PMPI_Intercomm_merge	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Intercomm_merge(MPI_Comm intercomm, int high, $/;"	p	signature:(MPI_Comm intercomm, int high, MPI_Comm *newintercomm)
PMPI_Iprobe	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Iprobe(int source, int tag, MPI_Comm comm, int *flag, $/;"	p	signature:(int source, int tag, MPI_Comm comm, int *flag, MPI_Status *status)
PMPI_Irecv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Irecv(void *buf, int count, MPI_Datatype datatype, int source, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Irsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Irsend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Is_thread_main	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Is_thread_main(int *flag);$/;"	p	signature:(int *flag)
PMPI_Isend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Isend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Issend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Issend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Keyval_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Keyval_create(MPI_Copy_function *copy_fn, $/;"	p	signature:(MPI_Copy_function *copy_fn, MPI_Delete_function *delete_fn, int *keyval, void *extra_state)
PMPI_Keyval_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Keyval_free(int *keyval);$/;"	p	signature:(int *keyval)
PMPI_Lookup_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Lookup_name(char *service_name, MPI_Info info, char *port_name);$/;"	p	signature:(char *service_name, MPI_Info info, char *port_name)
PMPI_Op_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Op_c2f(MPI_Op op); $/;"	p	signature:(MPI_Op op)
PMPI_Op_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Op_create(MPI_User_function *function, int commute, $/;"	p	signature:(MPI_User_function *function, int commute, MPI_Op *op)
PMPI_Op_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Op PMPI_Op_f2c(MPI_Fint op);$/;"	p	signature:(MPI_Fint op)
PMPI_Op_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Op_free(MPI_Op *op);$/;"	p	signature:(MPI_Op *op)
PMPI_Open_port	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Open_port(MPI_Info info, char *port_name);$/;"	p	signature:(MPI_Info info, char *port_name)
PMPI_Pack	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Pack(void *inbuf, int incount, MPI_Datatype datatype, $/;"	p	signature:(void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, int outsize, int *position, MPI_Comm comm)
PMPI_Pack_external	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Pack_external(char *datarep, void *inbuf, int incount,$/;"	p	signature:(char *datarep, void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, MPI_Aint outsize, MPI_Aint *position)
PMPI_Pack_external_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Pack_external_size(char *datarep, int incount, $/;"	p	signature:(char *datarep, int incount, MPI_Datatype datatype, MPI_Aint *size)
PMPI_Pack_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Pack_size(int incount, MPI_Datatype datatype, MPI_Comm comm, $/;"	p	signature:(int incount, MPI_Datatype datatype, MPI_Comm comm, int *size)
PMPI_Pcontrol	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Pcontrol(const int level, ...);$/;"	p	signature:(const int level, ...)
PMPI_Probe	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Probe(int source, int tag, MPI_Comm comm, MPI_Status *status);$/;"	p	signature:(int source, int tag, MPI_Comm comm, MPI_Status *status)
PMPI_Publish_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Publish_name(char *service_name, MPI_Info info, $/;"	p	signature:(char *service_name, MPI_Info info, char *port_name)
PMPI_Put	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Put(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, $/;"	p	signature:(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win)
PMPI_Query_thread	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Query_thread(int *provided);$/;"	p	signature:(int *provided)
PMPI_Recv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Recv(void *buf, int count, MPI_Datatype datatype, int source, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status)
PMPI_Recv_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Recv_init(void *buf, int count, MPI_Datatype datatype, int source,$/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Reduce	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Reduce(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm)
PMPI_Reduce_scatter	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Reduce_scatter(void *sendbuf, void *recvbuf, int *recvcounts, $/;"	p	signature:(void *sendbuf, void *recvbuf, int *recvcounts, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
PMPI_Register_datarep	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Register_datarep(char *datarep, $/;"	p	signature:(char *datarep, MPI_Datarep_conversion_function *read_conversion_fn, MPI_Datarep_conversion_function *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state)
PMPI_Request_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Request_c2f(MPI_Request request);$/;"	p	signature:(MPI_Request request)
PMPI_Request_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Request PMPI_Request_f2c(MPI_Fint request);$/;"	p	signature:(MPI_Fint request)
PMPI_Request_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Request_free(MPI_Request *request);$/;"	p	signature:(MPI_Request *request)
PMPI_Request_get_status	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Request_get_status(MPI_Request request, int *flag, $/;"	p	signature:(MPI_Request request, int *flag, MPI_Status *status)
PMPI_Rsend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Rsend(void *ibuf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *ibuf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
PMPI_Rsend_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Rsend_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Scan	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Scan(void *sendbuf, void *recvbuf, int count, $/;"	p	signature:(void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)
PMPI_Scatter	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Scatter(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)
PMPI_Scatterv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Scatterv(void *sendbuf, int *sendcounts, int *displs, $/;"	p	signature:(void *sendbuf, int *sendcounts, int *displs, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)
PMPI_Send	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Send(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
PMPI_Send_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Send_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Sendrecv	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Sendrecv(void *sendbuf, int sendcount, MPI_Datatype sendtype, $/;"	p	signature:(void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status)
PMPI_Sendrecv_replace	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Sendrecv_replace(void * buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void * buf, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Status *status)
PMPI_Ssend	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Ssend(void *buf, int count, MPI_Datatype datatype, int dest, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm)
PMPI_Ssend_init	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Ssend_init(void *buf, int count, MPI_Datatype datatype, $/;"	p	signature:(void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request)
PMPI_Start	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Start(MPI_Request *request);$/;"	p	signature:(MPI_Request *request)
PMPI_Startall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Startall(int count, MPI_Request *array_of_requests);$/;"	p	signature:(int count, MPI_Request *array_of_requests)
PMPI_Status_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Status_c2f(MPI_Status *c_status, MPI_Fint *f_status);$/;"	p	signature:(MPI_Status *c_status, MPI_Fint *f_status)
PMPI_Status_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Status_f2c(MPI_Fint *f_status, MPI_Status *c_status);$/;"	p	signature:(MPI_Fint *f_status, MPI_Status *c_status)
PMPI_Status_set_cancelled	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Status_set_cancelled(MPI_Status *status, int flag);$/;"	p	signature:(MPI_Status *status, int flag)
PMPI_Status_set_elements	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Status_set_elements(MPI_Status *status, MPI_Datatype datatype,$/;"	p	signature:(MPI_Status *status, MPI_Datatype datatype, int count)
PMPI_Test	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Test(MPI_Request *request, int *flag, MPI_Status *status);$/;"	p	signature:(MPI_Request *request, int *flag, MPI_Status *status)
PMPI_Test_cancelled	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Test_cancelled(MPI_Status *status, int *flag);$/;"	p	signature:(MPI_Status *status, int *flag)
PMPI_Testall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Testall(int count, MPI_Request array_of_requests[], int *flag, $/;"	p	signature:(int count, MPI_Request array_of_requests[], int *flag, MPI_Status array_of_statuses[])
PMPI_Testany	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Testany(int count, MPI_Request array_of_requests[], int *index, int *flag, MPI_Status *status);$/;"	p	signature:(int count, MPI_Request array_of_requests[], int *index, int *flag, MPI_Status *status)
PMPI_Testsome	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Testsome(int incount, MPI_Request array_of_requests[], $/;"	p	signature:(int incount, MPI_Request array_of_requests[], int *outcount, int array_of_indices[], MPI_Status array_of_statuses[])
PMPI_Topo_test	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Topo_test(MPI_Comm comm, int *status);$/;"	p	signature:(MPI_Comm comm, int *status)
PMPI_Type_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Type_c2f(MPI_Datatype datatype);$/;"	p	signature:(MPI_Datatype datatype)
PMPI_Type_commit	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_commit(MPI_Datatype *type);$/;"	p	signature:(MPI_Datatype *type)
PMPI_Type_contiguous	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_contiguous(int count, MPI_Datatype oldtype, $/;"	p	signature:(int count, MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_create_darray	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_darray(int size, int rank, int ndims, $/;"	p	signature:(int size, int rank, int ndims, int gsize_array[], int distrib_array[], int darg_array[], int psize_array[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_create_f90_complex	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_f90_complex(int p, int r, MPI_Datatype *newtype);$/;"	p	signature:(int p, int r, MPI_Datatype *newtype)
PMPI_Type_create_f90_integer	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_f90_integer(int r, MPI_Datatype *newtype);$/;"	p	signature:(int r, MPI_Datatype *newtype)
PMPI_Type_create_f90_real	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_f90_real(int p, int r, MPI_Datatype *newtype);$/;"	p	signature:(int p, int r, MPI_Datatype *newtype)
PMPI_Type_create_hindexed	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_hindexed(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_create_hvector	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_hvector(int count, int blocklength, MPI_Aint stride, $/;"	p	signature:(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_create_indexed_block	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_indexed_block(int count, int blocklength,$/;"	p	signature:(int count, int blocklength, int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_create_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_keyval(MPI_Type_copy_attr_function *type_copy_attr_fn, $/;"	p	signature:(MPI_Type_copy_attr_function *type_copy_attr_fn, MPI_Type_delete_attr_function *type_delete_attr_fn, int *type_keyval, void *extra_state)
PMPI_Type_create_resized	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_resized(MPI_Datatype oldtype, MPI_Aint lb, $/;"	p	signature:(MPI_Datatype oldtype, MPI_Aint lb, MPI_Aint extent, MPI_Datatype *newtype)
PMPI_Type_create_struct	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_struct(int count, int array_of_block_lengths[], $/;"	p	signature:(int count, int array_of_block_lengths[], MPI_Aint array_of_displacements[], MPI_Datatype array_of_types[], MPI_Datatype *newtype)
PMPI_Type_create_subarray	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_create_subarray(int ndims, int size_array[], int subsize_array[], $/;"	p	signature:(int ndims, int size_array[], int subsize_array[], int start_array[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_delete_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_delete_attr(MPI_Datatype type, int type_keyval);$/;"	p	signature:(MPI_Datatype type, int type_keyval)
PMPI_Type_dup	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_dup(MPI_Datatype type, MPI_Datatype *newtype);$/;"	p	signature:(MPI_Datatype type, MPI_Datatype *newtype)
PMPI_Type_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_extent(MPI_Datatype type, MPI_Aint *extent);$/;"	p	signature:(MPI_Datatype type, MPI_Aint *extent)
PMPI_Type_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Datatype PMPI_Type_f2c(MPI_Fint datatype);$/;"	p	signature:(MPI_Fint datatype)
PMPI_Type_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_free(MPI_Datatype *type);$/;"	p	signature:(MPI_Datatype *type)
PMPI_Type_free_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_free_keyval(int *type_keyval);$/;"	p	signature:(int *type_keyval)
PMPI_Type_get_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_get_attr(MPI_Datatype type, int type_keyval, $/;"	p	signature:(MPI_Datatype type, int type_keyval, void *attribute_val, int *flag)
PMPI_Type_get_contents	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_get_contents(MPI_Datatype mtype, int max_integers, $/;"	p	signature:(MPI_Datatype mtype, int max_integers, int max_addresses, int max_datatypes, int array_of_integers[], MPI_Aint array_of_addresses[], MPI_Datatype array_of_datatypes[])
PMPI_Type_get_envelope	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_get_envelope(MPI_Datatype type, int *num_integers, $/;"	p	signature:(MPI_Datatype type, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner)
PMPI_Type_get_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_get_extent(MPI_Datatype type, MPI_Aint *lb, $/;"	p	signature:(MPI_Datatype type, MPI_Aint *lb, MPI_Aint *extent)
PMPI_Type_get_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_get_name(MPI_Datatype type, char *type_name, $/;"	p	signature:(MPI_Datatype type, char *type_name, int *resultlen)
PMPI_Type_get_true_extent	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_get_true_extent(MPI_Datatype datatype, MPI_Aint *true_lb, $/;"	p	signature:(MPI_Datatype datatype, MPI_Aint *true_lb, MPI_Aint *true_extent)
PMPI_Type_hindexed	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_hindexed(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_hvector	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_hvector(int count, int blocklength, MPI_Aint stride, $/;"	p	signature:(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_indexed	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_indexed(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Type_lb	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_lb(MPI_Datatype type, MPI_Aint *lb);$/;"	p	signature:(MPI_Datatype type, MPI_Aint *lb)
PMPI_Type_match_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_match_size(int typeclass, int size, MPI_Datatype *type);$/;"	p	signature:(int typeclass, int size, MPI_Datatype *type)
PMPI_Type_set_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_set_attr(MPI_Datatype type, int type_keyval, $/;"	p	signature:(MPI_Datatype type, int type_keyval, void *attr_val)
PMPI_Type_set_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_set_name(MPI_Datatype type, char *type_name);$/;"	p	signature:(MPI_Datatype type, char *type_name)
PMPI_Type_size	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_size(MPI_Datatype type, int *size);$/;"	p	signature:(MPI_Datatype type, int *size)
PMPI_Type_struct	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_struct(int count, int array_of_blocklengths[], $/;"	p	signature:(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype array_of_types[], MPI_Datatype *newtype)
PMPI_Type_ub	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_ub(MPI_Datatype mtype, MPI_Aint *ub);$/;"	p	signature:(MPI_Datatype mtype, MPI_Aint *ub)
PMPI_Type_vector	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Type_vector(int count, int blocklength, int stride, $/;"	p	signature:(int count, int blocklength, int stride, MPI_Datatype oldtype, MPI_Datatype *newtype)
PMPI_Unpack	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Unpack(void *inbuf, int insize, int *position, $/;"	p	signature:(void *inbuf, int insize, int *position, void *outbuf, int outcount, MPI_Datatype datatype, MPI_Comm comm)
PMPI_Unpack_external	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Unpack_external (char *datarep, void *inbuf, MPI_Aint insize,$/;"	p	signature:(char *datarep, void *inbuf, MPI_Aint insize, MPI_Aint *position, void *outbuf, int outcount, MPI_Datatype datatype)
PMPI_Unpublish_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Unpublish_name(char *service_name, MPI_Info info, $/;"	p	signature:(char *service_name, MPI_Info info, char *port_name)
PMPI_Wait	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Wait(MPI_Request *request, MPI_Status *status);$/;"	p	signature:(MPI_Request *request, MPI_Status *status)
PMPI_Waitall	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Waitall(int count, MPI_Request *array_of_requests, $/;"	p	signature:(int count, MPI_Request *array_of_requests, MPI_Status *array_of_statuses)
PMPI_Waitany	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Waitany(int count, MPI_Request *array_of_requests, $/;"	p	signature:(int count, MPI_Request *array_of_requests, int *index, MPI_Status *status)
PMPI_Waitsome	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Waitsome(int incount, MPI_Request *array_of_requests, $/;"	p	signature:(int incount, MPI_Request *array_of_requests, int *outcount, int *array_of_indices, MPI_Status *array_of_statuses)
PMPI_Win_c2f	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Fint PMPI_Win_c2f(MPI_Win win);$/;"	p	signature:(MPI_Win win)
PMPI_Win_call_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_call_errhandler(MPI_Win win, int errorcode);$/;"	p	signature:(MPI_Win win, int errorcode)
PMPI_Win_complete	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_complete(MPI_Win win);$/;"	p	signature:(MPI_Win win)
PMPI_Win_create	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_create(void *base, MPI_Aint size, int disp_unit, $/;"	p	signature:(void *base, MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, MPI_Win *win)
PMPI_Win_create_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_create_errhandler(MPI_Win_errhandler_fn *function, $/;"	p	signature:(MPI_Win_errhandler_fn *function, MPI_Errhandler *errhandler)
PMPI_Win_create_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_create_keyval(MPI_Win_copy_attr_function *win_copy_attr_fn, $/;"	p	signature:(MPI_Win_copy_attr_function *win_copy_attr_fn, MPI_Win_delete_attr_function *win_delete_attr_fn, int *win_keyval, void *extra_state)
PMPI_Win_delete_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_delete_attr(MPI_Win win, int win_keyval);$/;"	p	signature:(MPI_Win win, int win_keyval)
PMPI_Win_f2c	/usr/include/mpi.h	/^OMPI_DECLSPEC  MPI_Win PMPI_Win_f2c(MPI_Fint win);$/;"	p	signature:(MPI_Fint win)
PMPI_Win_fence	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_fence(int assert, MPI_Win win);$/;"	p	signature:(int assert, MPI_Win win)
PMPI_Win_free	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_free(MPI_Win *win);$/;"	p	signature:(MPI_Win *win)
PMPI_Win_free_keyval	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_free_keyval(int *win_keyval);$/;"	p	signature:(int *win_keyval)
PMPI_Win_get_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_get_attr(MPI_Win win, int win_keyval, $/;"	p	signature:(MPI_Win win, int win_keyval, void *attribute_val, int *flag)
PMPI_Win_get_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_get_errhandler(MPI_Win win, MPI_Errhandler *errhandler);$/;"	p	signature:(MPI_Win win, MPI_Errhandler *errhandler)
PMPI_Win_get_group	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_get_group(MPI_Win win, MPI_Group *group);$/;"	p	signature:(MPI_Win win, MPI_Group *group)
PMPI_Win_get_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_get_name(MPI_Win win, char *win_name, int *resultlen);$/;"	p	signature:(MPI_Win win, char *win_name, int *resultlen)
PMPI_Win_lock	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_lock(int lock_type, int rank, int assert, MPI_Win win);$/;"	p	signature:(int lock_type, int rank, int assert, MPI_Win win)
PMPI_Win_post	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_post(MPI_Group group, int assert, MPI_Win win);$/;"	p	signature:(MPI_Group group, int assert, MPI_Win win)
PMPI_Win_set_attr	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_set_attr(MPI_Win win, int win_keyval, void *attribute_val);$/;"	p	signature:(MPI_Win win, int win_keyval, void *attribute_val)
PMPI_Win_set_errhandler	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_set_errhandler(MPI_Win win, MPI_Errhandler errhandler);$/;"	p	signature:(MPI_Win win, MPI_Errhandler errhandler)
PMPI_Win_set_name	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_set_name(MPI_Win win, char *win_name);$/;"	p	signature:(MPI_Win win, char *win_name)
PMPI_Win_start	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_start(MPI_Group group, int assert, MPI_Win win);$/;"	p	signature:(MPI_Group group, int assert, MPI_Win win)
PMPI_Win_test	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_test(MPI_Win win, int *flag);$/;"	p	signature:(MPI_Win win, int *flag)
PMPI_Win_unlock	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_unlock(int rank, MPI_Win win);$/;"	p	signature:(int rank, MPI_Win win)
PMPI_Win_wait	/usr/include/mpi.h	/^OMPI_DECLSPEC  int PMPI_Win_wait(MPI_Win win);$/;"	p	signature:(MPI_Win win)
PMPI_Wtick	/usr/include/mpi.h	/^OMPI_DECLSPEC  double PMPI_Wtick(void);$/;"	p	signature:(void)
PMPI_Wtime	/usr/include/mpi.h	/^OMPI_DECLSPEC  double PMPI_Wtime(void);$/;"	p	signature:(void)
PM_STR	/usr/include/langinfo.h	/^#define	PM_STR	/;"	d
PP_accountLocked	/usr/include/ldap.h	/^       PP_accountLocked = 1,$/;"	e	enum:passpolicyerror_enum
PP_changeAfterReset	/usr/include/ldap.h	/^       PP_changeAfterReset = 2,$/;"	e	enum:passpolicyerror_enum
PP_insufficientPasswordQuality	/usr/include/ldap.h	/^       PP_insufficientPasswordQuality = 5,$/;"	e	enum:passpolicyerror_enum
PP_mustSupplyOldPassword	/usr/include/ldap.h	/^       PP_mustSupplyOldPassword = 4,$/;"	e	enum:passpolicyerror_enum
PP_noError	/usr/include/ldap.h	/^       PP_noError = 65535$/;"	e	enum:passpolicyerror_enum
PP_passwordExpired	/usr/include/ldap.h	/^       PP_passwordExpired = 0,$/;"	e	enum:passpolicyerror_enum
PP_passwordInHistory	/usr/include/ldap.h	/^       PP_passwordInHistory = 8,$/;"	e	enum:passpolicyerror_enum
PP_passwordModNotAllowed	/usr/include/ldap.h	/^       PP_passwordModNotAllowed = 3,$/;"	e	enum:passpolicyerror_enum
PP_passwordTooShort	/usr/include/ldap.h	/^       PP_passwordTooShort = 6,$/;"	e	enum:passpolicyerror_enum
PP_passwordTooYoung	/usr/include/ldap.h	/^       PP_passwordTooYoung = 7,$/;"	e	enum:passpolicyerror_enum
PRESENT	/usr/include/term_entry.h	/^#define PRESENT(/;"	d
PRIME_SIZE	/usr/include/tclTomMath.h	/^   #define PRIME_SIZE /;"	d
PRIVATE_INFO	/usr/include/tic.h	/^#define PRIVATE_INFO	/;"	d
PRIX16	/usr/include/inttypes.h	/^#  define PRIX16 /;"	d
PRIX32	/usr/include/inttypes.h	/^#  define PRIX32 /;"	d
PRIX64	/usr/include/inttypes.h	/^#  define PRIX64 /;"	d
PRIX8	/usr/include/inttypes.h	/^#  define PRIX8 /;"	d
PRIXFAST16	/usr/include/inttypes.h	/^#  define PRIXFAST16 /;"	d
PRIXFAST32	/usr/include/inttypes.h	/^#  define PRIXFAST32 /;"	d
PRIXFAST64	/usr/include/inttypes.h	/^#  define PRIXFAST64 /;"	d
PRIXFAST8	/usr/include/inttypes.h	/^#  define PRIXFAST8 /;"	d
PRIXLEAST16	/usr/include/inttypes.h	/^#  define PRIXLEAST16 /;"	d
PRIXLEAST32	/usr/include/inttypes.h	/^#  define PRIXLEAST32 /;"	d
PRIXLEAST64	/usr/include/inttypes.h	/^#  define PRIXLEAST64 /;"	d
PRIXLEAST8	/usr/include/inttypes.h	/^#  define PRIXLEAST8 /;"	d
PRIXMAX	/usr/include/inttypes.h	/^#  define PRIXMAX /;"	d
PRIXPTR	/usr/include/inttypes.h	/^#  define PRIXPTR /;"	d
PRId16	/usr/include/inttypes.h	/^#  define PRId16 /;"	d
PRId32	/usr/include/inttypes.h	/^#  define PRId32 /;"	d
PRId64	/usr/include/inttypes.h	/^#  define PRId64 /;"	d
PRId8	/usr/include/inttypes.h	/^#  define PRId8 /;"	d
PRIdFAST16	/usr/include/inttypes.h	/^#  define PRIdFAST16 /;"	d
PRIdFAST32	/usr/include/inttypes.h	/^#  define PRIdFAST32 /;"	d
PRIdFAST64	/usr/include/inttypes.h	/^#  define PRIdFAST64 /;"	d
PRIdFAST8	/usr/include/inttypes.h	/^#  define PRIdFAST8 /;"	d
PRIdLEAST16	/usr/include/inttypes.h	/^#  define PRIdLEAST16 /;"	d
PRIdLEAST32	/usr/include/inttypes.h	/^#  define PRIdLEAST32 /;"	d
PRIdLEAST64	/usr/include/inttypes.h	/^#  define PRIdLEAST64 /;"	d
PRIdLEAST8	/usr/include/inttypes.h	/^#  define PRIdLEAST8 /;"	d
PRIdMAX	/usr/include/inttypes.h	/^#  define PRIdMAX /;"	d
PRIdPTR	/usr/include/inttypes.h	/^#  define PRIdPTR /;"	d
PRIi16	/usr/include/inttypes.h	/^#  define PRIi16 /;"	d
PRIi32	/usr/include/inttypes.h	/^#  define PRIi32 /;"	d
PRIi64	/usr/include/inttypes.h	/^#  define PRIi64 /;"	d
PRIi8	/usr/include/inttypes.h	/^#  define PRIi8 /;"	d
PRIiFAST16	/usr/include/inttypes.h	/^#  define PRIiFAST16 /;"	d
PRIiFAST32	/usr/include/inttypes.h	/^#  define PRIiFAST32 /;"	d
PRIiFAST64	/usr/include/inttypes.h	/^#  define PRIiFAST64 /;"	d
PRIiFAST8	/usr/include/inttypes.h	/^#  define PRIiFAST8 /;"	d
PRIiLEAST16	/usr/include/inttypes.h	/^#  define PRIiLEAST16 /;"	d
PRIiLEAST32	/usr/include/inttypes.h	/^#  define PRIiLEAST32 /;"	d
PRIiLEAST64	/usr/include/inttypes.h	/^#  define PRIiLEAST64 /;"	d
PRIiLEAST8	/usr/include/inttypes.h	/^#  define PRIiLEAST8 /;"	d
PRIiMAX	/usr/include/inttypes.h	/^#  define PRIiMAX /;"	d
PRIiPTR	/usr/include/inttypes.h	/^#  define PRIiPTR /;"	d
PRIo16	/usr/include/inttypes.h	/^#  define PRIo16 /;"	d
PRIo32	/usr/include/inttypes.h	/^#  define PRIo32 /;"	d
PRIo64	/usr/include/inttypes.h	/^#  define PRIo64 /;"	d
PRIo8	/usr/include/inttypes.h	/^#  define PRIo8 /;"	d
PRIoFAST16	/usr/include/inttypes.h	/^#  define PRIoFAST16 /;"	d
PRIoFAST32	/usr/include/inttypes.h	/^#  define PRIoFAST32 /;"	d
PRIoFAST64	/usr/include/inttypes.h	/^#  define PRIoFAST64 /;"	d
PRIoFAST8	/usr/include/inttypes.h	/^#  define PRIoFAST8 /;"	d
PRIoLEAST16	/usr/include/inttypes.h	/^#  define PRIoLEAST16 /;"	d
PRIoLEAST32	/usr/include/inttypes.h	/^#  define PRIoLEAST32 /;"	d
PRIoLEAST64	/usr/include/inttypes.h	/^#  define PRIoLEAST64 /;"	d
PRIoLEAST8	/usr/include/inttypes.h	/^#  define PRIoLEAST8 /;"	d
PRIoMAX	/usr/include/inttypes.h	/^#  define PRIoMAX /;"	d
PRIoPTR	/usr/include/inttypes.h	/^#  define PRIoPTR /;"	d
PRIu16	/usr/include/inttypes.h	/^#  define PRIu16 /;"	d
PRIu32	/usr/include/inttypes.h	/^#  define PRIu32 /;"	d
PRIu64	/usr/include/inttypes.h	/^#  define PRIu64 /;"	d
PRIu8	/usr/include/inttypes.h	/^#  define PRIu8 /;"	d
PRIuFAST16	/usr/include/inttypes.h	/^#  define PRIuFAST16 /;"	d
PRIuFAST32	/usr/include/inttypes.h	/^#  define PRIuFAST32 /;"	d
PRIuFAST64	/usr/include/inttypes.h	/^#  define PRIuFAST64 /;"	d
PRIuFAST8	/usr/include/inttypes.h	/^#  define PRIuFAST8 /;"	d
PRIuLEAST16	/usr/include/inttypes.h	/^#  define PRIuLEAST16 /;"	d
PRIuLEAST32	/usr/include/inttypes.h	/^#  define PRIuLEAST32 /;"	d
PRIuLEAST64	/usr/include/inttypes.h	/^#  define PRIuLEAST64 /;"	d
PRIuLEAST8	/usr/include/inttypes.h	/^#  define PRIuLEAST8 /;"	d
PRIuMAX	/usr/include/inttypes.h	/^#  define PRIuMAX /;"	d
PRIuPTR	/usr/include/inttypes.h	/^#  define PRIuPTR /;"	d
PRIx16	/usr/include/inttypes.h	/^#  define PRIx16 /;"	d
PRIx32	/usr/include/inttypes.h	/^#  define PRIx32 /;"	d
PRIx64	/usr/include/inttypes.h	/^#  define PRIx64 /;"	d
PRIx8	/usr/include/inttypes.h	/^#  define PRIx8 /;"	d
PRIxFAST16	/usr/include/inttypes.h	/^#  define PRIxFAST16 /;"	d
PRIxFAST32	/usr/include/inttypes.h	/^#  define PRIxFAST32 /;"	d
PRIxFAST64	/usr/include/inttypes.h	/^#  define PRIxFAST64 /;"	d
PRIxFAST8	/usr/include/inttypes.h	/^#  define PRIxFAST8 /;"	d
PRIxLEAST16	/usr/include/inttypes.h	/^#  define PRIxLEAST16 /;"	d
PRIxLEAST32	/usr/include/inttypes.h	/^#  define PRIxLEAST32 /;"	d
PRIxLEAST64	/usr/include/inttypes.h	/^#  define PRIxLEAST64 /;"	d
PRIxLEAST8	/usr/include/inttypes.h	/^#  define PRIxLEAST8 /;"	d
PRIxMAX	/usr/include/inttypes.h	/^#  define PRIxMAX /;"	d
PRIxPTR	/usr/include/inttypes.h	/^#  define PRIxPTR /;"	d
PROC_LISTPIDSPATH_EXCLUDE_EVTONLY	/usr/include/libproc.h	/^#define PROC_LISTPIDSPATH_EXCLUDE_EVTONLY	/;"	d
PROC_LISTPIDSPATH_PATH_IS_VOLUME	/usr/include/libproc.h	/^#define PROC_LISTPIDSPATH_PATH_IS_VOLUME	/;"	d
PROC_SETPC_NONE	/usr/include/libproc.h	/^#define PROC_SETPC_NONE	/;"	d
PROC_SETPC_SUSPEND	/usr/include/libproc.h	/^#define PROC_SETPC_SUSPEND	/;"	d
PROC_SETPC_TERMINATE	/usr/include/libproc.h	/^#define PROC_SETPC_TERMINATE	/;"	d
PROC_SETPC_THROTTLEMEM	/usr/include/libproc.h	/^#define PROC_SETPC_THROTTLEMEM	/;"	d
PROFILE_ITER_LIST_SECTION	/usr/include/profile.h	/^#define PROFILE_ITER_LIST_SECTION	/;"	d
PROFILE_ITER_RELATIONS_ONLY	/usr/include/profile.h	/^#define PROFILE_ITER_RELATIONS_ONLY	/;"	d
PROFILE_ITER_SECTIONS_ONLY	/usr/include/profile.h	/^#define PROFILE_ITER_SECTIONS_ONLY	/;"	d
PROF_ADD_NOT_SECTION	/usr/include/profile.h	/^#define PROF_ADD_NOT_SECTION /;"	d
PROF_BAD_BOOLEAN	/usr/include/profile.h	/^#define PROF_BAD_BOOLEAN /;"	d
PROF_BAD_GROUP_LVL	/usr/include/profile.h	/^#define PROF_BAD_GROUP_LVL /;"	d
PROF_BAD_INTEGER	/usr/include/profile.h	/^#define PROF_BAD_INTEGER /;"	d
PROF_BAD_LINK_LIST	/usr/include/profile.h	/^#define PROF_BAD_LINK_LIST /;"	d
PROF_BAD_NAMESET	/usr/include/profile.h	/^#define PROF_BAD_NAMESET /;"	d
PROF_BAD_PARENT_PTR	/usr/include/profile.h	/^#define PROF_BAD_PARENT_PTR /;"	d
PROF_EINVAL	/usr/include/profile.h	/^#define PROF_EINVAL /;"	d
PROF_END_OF_SECTIONS	/usr/include/profile.h	/^#define PROF_END_OF_SECTIONS /;"	d
PROF_EXISTS	/usr/include/profile.h	/^#define PROF_EXISTS /;"	d
PROF_EXTRA_CBRACE	/usr/include/profile.h	/^#define PROF_EXTRA_CBRACE /;"	d
PROF_FAIL_OPEN	/usr/include/profile.h	/^#define PROF_FAIL_OPEN /;"	d
PROF_INVALID_SECTION	/usr/include/profile.h	/^#define PROF_INVALID_SECTION /;"	d
PROF_MAGIC_FILE	/usr/include/profile.h	/^#define PROF_MAGIC_FILE /;"	d
PROF_MAGIC_FILE_DATA	/usr/include/profile.h	/^#define PROF_MAGIC_FILE_DATA /;"	d
PROF_MAGIC_ITERATOR	/usr/include/profile.h	/^#define PROF_MAGIC_ITERATOR /;"	d
PROF_MAGIC_NODE	/usr/include/profile.h	/^#define PROF_MAGIC_NODE /;"	d
PROF_MAGIC_PROFILE	/usr/include/profile.h	/^#define PROF_MAGIC_PROFILE /;"	d
PROF_MAGIC_SECTION	/usr/include/profile.h	/^#define PROF_MAGIC_SECTION /;"	d
PROF_MISSING_OBRACE	/usr/include/profile.h	/^#define PROF_MISSING_OBRACE /;"	d
PROF_NO_PROFILE	/usr/include/profile.h	/^#define PROF_NO_PROFILE /;"	d
PROF_NO_RELATION	/usr/include/profile.h	/^#define PROF_NO_RELATION /;"	d
PROF_NO_SECTION	/usr/include/profile.h	/^#define PROF_NO_SECTION /;"	d
PROF_READ_ONLY	/usr/include/profile.h	/^#define PROF_READ_ONLY /;"	d
PROF_RELATION_SYNTAX	/usr/include/profile.h	/^#define PROF_RELATION_SYNTAX /;"	d
PROF_SECTION_NOTOP	/usr/include/profile.h	/^#define PROF_SECTION_NOTOP /;"	d
PROF_SECTION_SYNTAX	/usr/include/profile.h	/^#define PROF_SECTION_SYNTAX /;"	d
PROF_SECTION_WITH_VALUE	/usr/include/profile.h	/^#define PROF_SECTION_WITH_VALUE /;"	d
PROF_SET_SECTION_VALUE	/usr/include/profile.h	/^#define PROF_SET_SECTION_VALUE /;"	d
PROF_TOPSECTION_ITER_NOSUPP	/usr/include/profile.h	/^#define PROF_TOPSECTION_ITER_NOSUPP /;"	d
PROF_VERSION	/usr/include/profile.h	/^#define PROF_VERSION /;"	d
PTHREAD_CANCELED	/usr/include/pthread.h	/^#define PTHREAD_CANCELED	/;"	d
PTHREAD_CANCEL_ASYNCHRONOUS	/usr/include/pthread.h	/^#define PTHREAD_CANCEL_ASYNCHRONOUS /;"	d
PTHREAD_CANCEL_DEFERRED	/usr/include/pthread.h	/^#define PTHREAD_CANCEL_DEFERRED /;"	d
PTHREAD_CANCEL_DISABLE	/usr/include/pthread.h	/^#define PTHREAD_CANCEL_DISABLE /;"	d
PTHREAD_CANCEL_ENABLE	/usr/include/pthread.h	/^#define PTHREAD_CANCEL_ENABLE /;"	d
PTHREAD_COND_INITIALIZER	/usr/include/pthread.h	/^#define PTHREAD_COND_INITIALIZER /;"	d
PTHREAD_CREATE_DETACHED	/usr/include/pthread.h	/^#define PTHREAD_CREATE_DETACHED /;"	d
PTHREAD_CREATE_JOINABLE	/usr/include/pthread.h	/^#define PTHREAD_CREATE_JOINABLE /;"	d
PTHREAD_DESTRUCTOR_ITERATIONS	/usr/include/limits.h	/^#define PTHREAD_DESTRUCTOR_ITERATIONS /;"	d
PTHREAD_EXPLICIT_SCHED	/usr/include/pthread.h	/^#define PTHREAD_EXPLICIT_SCHED /;"	d
PTHREAD_INHERIT_SCHED	/usr/include/pthread.h	/^#define PTHREAD_INHERIT_SCHED /;"	d
PTHREAD_KEYS_MAX	/usr/include/limits.h	/^#define PTHREAD_KEYS_MAX /;"	d
PTHREAD_MUTEX_DEFAULT	/usr/include/pthread.h	/^#define PTHREAD_MUTEX_DEFAULT	/;"	d
PTHREAD_MUTEX_ERRORCHECK	/usr/include/pthread.h	/^#define PTHREAD_MUTEX_ERRORCHECK	/;"	d
PTHREAD_MUTEX_INITIALIZER	/usr/include/pthread.h	/^#define PTHREAD_MUTEX_INITIALIZER /;"	d
PTHREAD_MUTEX_NORMAL	/usr/include/pthread.h	/^#define PTHREAD_MUTEX_NORMAL	/;"	d
PTHREAD_MUTEX_RECURSIVE	/usr/include/pthread.h	/^#define PTHREAD_MUTEX_RECURSIVE	/;"	d
PTHREAD_ONCE_INIT	/usr/include/pthread.h	/^#define PTHREAD_ONCE_INIT /;"	d
PTHREAD_PRIO_INHERIT	/usr/include/pthread.h	/^#define PTHREAD_PRIO_INHERIT /;"	d
PTHREAD_PRIO_NONE	/usr/include/pthread.h	/^#define PTHREAD_PRIO_NONE /;"	d
PTHREAD_PRIO_PROTECT	/usr/include/pthread.h	/^#define PTHREAD_PRIO_PROTECT /;"	d
PTHREAD_PROCESS_PRIVATE	/usr/include/pthread.h	/^#define PTHREAD_PROCESS_PRIVATE /;"	d
PTHREAD_PROCESS_SHARED	/usr/include/pthread.h	/^#define PTHREAD_PROCESS_SHARED /;"	d
PTHREAD_RWLOCK_INITIALIZER	/usr/include/pthread.h	/^#define PTHREAD_RWLOCK_INITIALIZER /;"	d
PTHREAD_SCOPE_PROCESS	/usr/include/pthread.h	/^#define PTHREAD_SCOPE_PROCESS /;"	d
PTHREAD_SCOPE_SYSTEM	/usr/include/pthread.h	/^#define PTHREAD_SCOPE_SYSTEM /;"	d
PTHREAD_STACK_MIN	/usr/include/limits.h	/^#define PTHREAD_STACK_MIN /;"	d
PTR	/usr/include/dns_util.h	/^		dns_domain_name_record_t *PTR;$/;"	m	union:__anon41::__anon42	access:public
PTR	/usr/include/sqltypes.h	/^typedef void *              	PTR;$/;"	t
PTRDIFF_MAX	/usr/include/stdint.h	/^#define PTRDIFF_MAX	/;"	d
PTRDIFF_MAX	/usr/include/stdint.h	/^#define PTRDIFF_MAX /;"	d
PTRDIFF_MIN	/usr/include/stdint.h	/^#define PTRDIFF_MIN	/;"	d
PTRDIFF_MIN	/usr/include/stdint.h	/^#define PTRDIFF_MIN /;"	d
PUBLIC_API	/usr/include/cache.h	/^#define PUBLIC_API /;"	d
PUBLIC_API	/usr/include/cache.h	/^#define PUBLIC_API$/;"	d
PUBLIC_API	/usr/include/cache_callbacks.h	/^#define PUBLIC_API /;"	d
PUBLIC_API	/usr/include/cache_callbacks.h	/^#define PUBLIC_API$/;"	d
P_16_COPY	/usr/include/db.h	/^#define	P_16_COPY(/;"	d
P_16_SWAP	/usr/include/db.h	/^#define	P_16_SWAP(/;"	d
P_32_COPY	/usr/include/db.h	/^#define	P_32_COPY(/;"	d
P_32_SWAP	/usr/include/db.h	/^#define	P_32_SWAP(/;"	d
P_tmpdir	/usr/include/stdio.h	/^#define	P_tmpdir	/;"	d
Path	/usr/include/mecab.h	/^  typedef struct mecab_path_t            Path;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_path_t
PrivateData	/usr/include/dns_sd.h	/^typedef union _TXTRecordRef_t { char PrivateData[16]; char *ForceNaturalAlignment; } TXTRecordRef;$/;"	m	union:_TXTRecordRef_t	access:public
RADIXCHAR	/usr/include/langinfo.h	/^#define	RADIXCHAR	/;"	d
RAND_MAX	/usr/include/stdlib.h	/^#define	RAND_MAX	/;"	d
RANLIBMAG	/usr/include/ranlib.h	/^#define	RANLIBMAG	/;"	d
RANLIBSKEW	/usr/include/ranlib.h	/^#define	RANLIBSKEW	/;"	d
READABLE_UNIX_FD_DROP_DEAD_TIMEVAL	/usr/include/fcgios.h	/^#define READABLE_UNIX_FD_DROP_DEAD_TIMEVAL /;"	d
RECNOINFO	/usr/include/db.h	/^} RECNOINFO;$/;"	t	typeref:struct:__anon15
REGTYPE	/usr/include/tar.h	/^#define	REGTYPE	/;"	d
REG_ASSERT	/usr/include/regex.h	/^#define	REG_ASSERT	/;"	d
REG_ATOI	/usr/include/regex.h	/^#define	REG_ATOI	/;"	d
REG_BACKR	/usr/include/regex.h	/^#define	REG_BACKR	/;"	d
REG_BADBR	/usr/include/regex.h	/^#define	REG_BADBR	/;"	d
REG_BADPAT	/usr/include/regex.h	/^#define	REG_BADPAT	/;"	d
REG_BADRPT	/usr/include/regex.h	/^#define	REG_BADRPT	/;"	d
REG_BASIC	/usr/include/regex.h	/^#define	REG_BASIC	/;"	d
REG_DUMP	/usr/include/regex.h	/^#define	REG_DUMP	/;"	d
REG_EBRACE	/usr/include/regex.h	/^#define	REG_EBRACE	/;"	d
REG_EBRACK	/usr/include/regex.h	/^#define	REG_EBRACK	/;"	d
REG_ECOLLATE	/usr/include/regex.h	/^#define	REG_ECOLLATE	/;"	d
REG_ECTYPE	/usr/include/regex.h	/^#define	REG_ECTYPE	/;"	d
REG_EESCAPE	/usr/include/regex.h	/^#define	REG_EESCAPE	/;"	d
REG_EMPTY	/usr/include/regex.h	/^#define	REG_EMPTY	/;"	d
REG_ENOSYS	/usr/include/regex.h	/^#define	REG_ENOSYS	/;"	d
REG_EPAREN	/usr/include/regex.h	/^#define	REG_EPAREN	/;"	d
REG_ERANGE	/usr/include/regex.h	/^#define	REG_ERANGE	/;"	d
REG_ESPACE	/usr/include/regex.h	/^#define	REG_ESPACE	/;"	d
REG_ESUBREG	/usr/include/regex.h	/^#define	REG_ESUBREG	/;"	d
REG_EXTENDED	/usr/include/regex.h	/^#define	REG_EXTENDED	/;"	d
REG_ICASE	/usr/include/regex.h	/^#define	REG_ICASE	/;"	d
REG_ILLSEQ	/usr/include/regex.h	/^#define	REG_ILLSEQ	/;"	d
REG_INVARG	/usr/include/regex.h	/^#define	REG_INVARG	/;"	d
REG_ITOA	/usr/include/regex.h	/^#define	REG_ITOA	/;"	d
REG_LARGE	/usr/include/regex.h	/^#define	REG_LARGE	/;"	d
REG_NEWLINE	/usr/include/regex.h	/^#define	REG_NEWLINE	/;"	d
REG_NOMATCH	/usr/include/regex.h	/^#define	REG_NOMATCH	/;"	d
REG_NOSPEC	/usr/include/regex.h	/^#define	REG_NOSPEC	/;"	d
REG_NOSUB	/usr/include/regex.h	/^#define	REG_NOSUB	/;"	d
REG_NOTBOL	/usr/include/regex.h	/^#define	REG_NOTBOL	/;"	d
REG_NOTEOL	/usr/include/regex.h	/^#define	REG_NOTEOL	/;"	d
REG_PEND	/usr/include/regex.h	/^#define	REG_PEND	/;"	d
REG_STARTEND	/usr/include/regex.h	/^#define	REG_STARTEND	/;"	d
REG_TRACE	/usr/include/regex.h	/^#define	REG_TRACE	/;"	d
REMOVEFILE_KEEP_PARENT	/usr/include/removefile.h	/^	REMOVEFILE_KEEP_PARENT = (1 << 1),			\/\/ Remove contents but not directory itself$/;"	e	enum:__anon94
REMOVEFILE_PROCEED	/usr/include/removefile.h	/^	REMOVEFILE_PROCEED = 0,$/;"	e	enum:__anon96
REMOVEFILE_RECURSIVE	/usr/include/removefile.h	/^	REMOVEFILE_RECURSIVE = (1 << 0),			\/\/ If path is a directory, recurse (depth first traversal)$/;"	e	enum:__anon94
REMOVEFILE_SECURE_1_PASS	/usr/include/removefile.h	/^	REMOVEFILE_SECURE_1_PASS = (1 << 4),	\/\/ 1 pass single overwrite$/;"	e	enum:__anon94
REMOVEFILE_SECURE_35_PASS	/usr/include/removefile.h	/^	REMOVEFILE_SECURE_35_PASS  = (1 << 3),	\/\/ 35-pass Gutmann algorithm (overrides REMOVEFILE_SECURE_7_PASS)$/;"	e	enum:__anon94
REMOVEFILE_SECURE_7_PASS	/usr/include/removefile.h	/^	REMOVEFILE_SECURE_7_PASS = (1 << 2),		\/\/ 7 pass DoD algorithm$/;"	e	enum:__anon94
REMOVEFILE_SKIP	/usr/include/removefile.h	/^	REMOVEFILE_SKIP = 1,$/;"	e	enum:__anon96
REMOVEFILE_STATE_CONFIRM_CALLBACK	/usr/include/removefile.h	/^	REMOVEFILE_STATE_CONFIRM_CALLBACK = 1,	\/\/ removefile_callback_t$/;"	e	enum:__anon95
REMOVEFILE_STATE_CONFIRM_CONTEXT	/usr/include/removefile.h	/^	REMOVEFILE_STATE_CONFIRM_CONTEXT = 2,		\/\/ void*$/;"	e	enum:__anon95
REMOVEFILE_STATE_ERRNO	/usr/include/removefile.h	/^	REMOVEFILE_STATE_ERRNO = 5,					\/\/ int (read-only)$/;"	e	enum:__anon95
REMOVEFILE_STATE_ERROR_CALLBACK	/usr/include/removefile.h	/^	REMOVEFILE_STATE_ERROR_CALLBACK = 3,		\/\/ removefile_callback_t$/;"	e	enum:__anon95
REMOVEFILE_STATE_ERROR_CONTEXT	/usr/include/removefile.h	/^	REMOVEFILE_STATE_ERROR_CONTEXT = 4,		\/\/ void*$/;"	e	enum:__anon95
REMOVEFILE_STATE_STATUS_CALLBACK	/usr/include/removefile.h	/^	REMOVEFILE_STATE_STATUS_CALLBACK = 6,		\/\/ removefile_callback_t$/;"	e	enum:__anon95
REMOVEFILE_STATE_STATUS_CONTEXT	/usr/include/removefile.h	/^	REMOVEFILE_STATE_STATUS_CONTEXT = 7,		\/\/ void*$/;"	e	enum:__anon95
REMOVEFILE_STOP	/usr/include/removefile.h	/^	REMOVEFILE_STOP = 2,$/;"	e	enum:__anon96
REPORT_MOUSE_POSITION	/usr/include/curses.h	/^#define	REPORT_MOUSE_POSITION	/;"	d
REPORT_MOUSE_POSITION	/usr/include/ncurses.h	/^#define	REPORT_MOUSE_POSITION	/;"	d
REQ_BACK_PATTERN	/usr/include/menu.h	/^#define REQ_BACK_PATTERN /;"	d
REQ_BEG_FIELD	/usr/include/form.h	/^#define REQ_BEG_FIELD	/;"	d
REQ_BEG_LINE	/usr/include/form.h	/^#define REQ_BEG_LINE	/;"	d
REQ_CLEAR_PATTERN	/usr/include/menu.h	/^#define REQ_CLEAR_PATTERN /;"	d
REQ_CLR_EOF	/usr/include/form.h	/^#define REQ_CLR_EOF	/;"	d
REQ_CLR_EOL	/usr/include/form.h	/^#define REQ_CLR_EOL	/;"	d
REQ_CLR_FIELD	/usr/include/form.h	/^#define REQ_CLR_FIELD	/;"	d
REQ_DEL_CHAR	/usr/include/form.h	/^#define REQ_DEL_CHAR	/;"	d
REQ_DEL_LINE	/usr/include/form.h	/^#define REQ_DEL_LINE	/;"	d
REQ_DEL_PREV	/usr/include/form.h	/^#define REQ_DEL_PREV	/;"	d
REQ_DEL_WORD	/usr/include/form.h	/^#define REQ_DEL_WORD	/;"	d
REQ_DOWN_CHAR	/usr/include/form.h	/^#define REQ_DOWN_CHAR	/;"	d
REQ_DOWN_FIELD	/usr/include/form.h	/^#define REQ_DOWN_FIELD	/;"	d
REQ_DOWN_ITEM	/usr/include/menu.h	/^#define REQ_DOWN_ITEM /;"	d
REQ_END_FIELD	/usr/include/form.h	/^#define REQ_END_FIELD	/;"	d
REQ_END_LINE	/usr/include/form.h	/^#define REQ_END_LINE	/;"	d
REQ_FIRST_FIELD	/usr/include/form.h	/^#define REQ_FIRST_FIELD	/;"	d
REQ_FIRST_ITEM	/usr/include/menu.h	/^#define REQ_FIRST_ITEM /;"	d
REQ_FIRST_PAGE	/usr/include/form.h	/^#define REQ_FIRST_PAGE	/;"	d
REQ_INS_CHAR	/usr/include/form.h	/^#define REQ_INS_CHAR	/;"	d
REQ_INS_LINE	/usr/include/form.h	/^#define REQ_INS_LINE	/;"	d
REQ_INS_MODE	/usr/include/form.h	/^#define REQ_INS_MODE	/;"	d
REQ_LAST_FIELD	/usr/include/form.h	/^#define REQ_LAST_FIELD	/;"	d
REQ_LAST_ITEM	/usr/include/menu.h	/^#define REQ_LAST_ITEM /;"	d
REQ_LAST_PAGE	/usr/include/form.h	/^#define REQ_LAST_PAGE	/;"	d
REQ_LEFT_CHAR	/usr/include/form.h	/^#define REQ_LEFT_CHAR	/;"	d
REQ_LEFT_FIELD	/usr/include/form.h	/^#define REQ_LEFT_FIELD	/;"	d
REQ_LEFT_ITEM	/usr/include/menu.h	/^#define REQ_LEFT_ITEM /;"	d
REQ_NEW_LINE	/usr/include/form.h	/^#define REQ_NEW_LINE	/;"	d
REQ_NEXT_CHAR	/usr/include/form.h	/^#define REQ_NEXT_CHAR	/;"	d
REQ_NEXT_CHOICE	/usr/include/form.h	/^#define REQ_NEXT_CHOICE	/;"	d
REQ_NEXT_FIELD	/usr/include/form.h	/^#define REQ_NEXT_FIELD	/;"	d
REQ_NEXT_ITEM	/usr/include/menu.h	/^#define REQ_NEXT_ITEM /;"	d
REQ_NEXT_LINE	/usr/include/form.h	/^#define REQ_NEXT_LINE	/;"	d
REQ_NEXT_MATCH	/usr/include/menu.h	/^#define REQ_NEXT_MATCH /;"	d
REQ_NEXT_PAGE	/usr/include/form.h	/^#define REQ_NEXT_PAGE	/;"	d
REQ_NEXT_WORD	/usr/include/form.h	/^#define REQ_NEXT_WORD	/;"	d
REQ_OVL_MODE	/usr/include/form.h	/^#define REQ_OVL_MODE	/;"	d
REQ_PREV_CHAR	/usr/include/form.h	/^#define REQ_PREV_CHAR	/;"	d
REQ_PREV_CHOICE	/usr/include/form.h	/^#define REQ_PREV_CHOICE	/;"	d
REQ_PREV_FIELD	/usr/include/form.h	/^#define REQ_PREV_FIELD	/;"	d
REQ_PREV_ITEM	/usr/include/menu.h	/^#define REQ_PREV_ITEM /;"	d
REQ_PREV_LINE	/usr/include/form.h	/^#define REQ_PREV_LINE	/;"	d
REQ_PREV_MATCH	/usr/include/menu.h	/^#define REQ_PREV_MATCH /;"	d
REQ_PREV_PAGE	/usr/include/form.h	/^#define REQ_PREV_PAGE	/;"	d
REQ_PREV_WORD	/usr/include/form.h	/^#define REQ_PREV_WORD	/;"	d
REQ_RIGHT_CHAR	/usr/include/form.h	/^#define REQ_RIGHT_CHAR	/;"	d
REQ_RIGHT_FIELD	/usr/include/form.h	/^#define REQ_RIGHT_FIELD	/;"	d
REQ_RIGHT_ITEM	/usr/include/menu.h	/^#define REQ_RIGHT_ITEM /;"	d
REQ_SCR_BCHAR	/usr/include/form.h	/^#define REQ_SCR_BCHAR	/;"	d
REQ_SCR_BHPAGE	/usr/include/form.h	/^#define REQ_SCR_BHPAGE	/;"	d
REQ_SCR_BLINE	/usr/include/form.h	/^#define REQ_SCR_BLINE	/;"	d
REQ_SCR_BPAGE	/usr/include/form.h	/^#define REQ_SCR_BPAGE	/;"	d
REQ_SCR_DLINE	/usr/include/menu.h	/^#define REQ_SCR_DLINE /;"	d
REQ_SCR_DPAGE	/usr/include/menu.h	/^#define REQ_SCR_DPAGE /;"	d
REQ_SCR_FCHAR	/usr/include/form.h	/^#define REQ_SCR_FCHAR	/;"	d
REQ_SCR_FHPAGE	/usr/include/form.h	/^#define REQ_SCR_FHPAGE	/;"	d
REQ_SCR_FLINE	/usr/include/form.h	/^#define REQ_SCR_FLINE	/;"	d
REQ_SCR_FPAGE	/usr/include/form.h	/^#define REQ_SCR_FPAGE	/;"	d
REQ_SCR_HBHALF	/usr/include/form.h	/^#define REQ_SCR_HBHALF	/;"	d
REQ_SCR_HBLINE	/usr/include/form.h	/^#define REQ_SCR_HBLINE	/;"	d
REQ_SCR_HFHALF	/usr/include/form.h	/^#define REQ_SCR_HFHALF	/;"	d
REQ_SCR_HFLINE	/usr/include/form.h	/^#define REQ_SCR_HFLINE	/;"	d
REQ_SCR_ULINE	/usr/include/menu.h	/^#define REQ_SCR_ULINE /;"	d
REQ_SCR_UPAGE	/usr/include/menu.h	/^#define REQ_SCR_UPAGE /;"	d
REQ_SFIRST_FIELD	/usr/include/form.h	/^#define REQ_SFIRST_FIELD /;"	d
REQ_SLAST_FIELD	/usr/include/form.h	/^#define REQ_SLAST_FIELD	/;"	d
REQ_SNEXT_FIELD	/usr/include/form.h	/^#define REQ_SNEXT_FIELD	/;"	d
REQ_SPREV_FIELD	/usr/include/form.h	/^#define REQ_SPREV_FIELD	/;"	d
REQ_TOGGLE_ITEM	/usr/include/menu.h	/^#define REQ_TOGGLE_ITEM /;"	d
REQ_UP_CHAR	/usr/include/form.h	/^#define REQ_UP_CHAR	/;"	d
REQ_UP_FIELD	/usr/include/form.h	/^#define REQ_UP_FIELD	/;"	d
REQ_UP_ITEM	/usr/include/menu.h	/^#define REQ_UP_ITEM /;"	d
REQ_VALIDATION	/usr/include/form.h	/^#define REQ_VALIDATION	/;"	d
RES_AAONLY	/usr/include/resolv.h	/^#define RES_AAONLY	/;"	d
RES_BLAST	/usr/include/resolv.h	/^#define	RES_BLAST	/;"	d
RES_DEBUG	/usr/include/resolv.h	/^#define RES_DEBUG	/;"	d
RES_DEFAULT	/usr/include/resolv.h	/^#define RES_DEFAULT	/;"	d
RES_DEFNAMES	/usr/include/resolv.h	/^#define RES_DEFNAMES	/;"	d
RES_DFLRETRY	/usr/include/resolv.h	/^#define	RES_DFLRETRY	/;"	d
RES_DNSRCH	/usr/include/resolv.h	/^#define RES_DNSRCH	/;"	d
RES_EXHAUSTIVE	/usr/include/resolv.h	/^#define	RES_EXHAUSTIVE	/;"	d
RES_F_CONN	/usr/include/resolv.h	/^#define	RES_F_CONN	/;"	d
RES_F_EDNS0ERR	/usr/include/resolv.h	/^#define	RES_F_EDNS0ERR	/;"	d
RES_F_VC	/usr/include/resolv.h	/^#define	RES_F_VC	/;"	d
RES_IGNTC	/usr/include/resolv.h	/^#define RES_IGNTC	/;"	d
RES_INIT	/usr/include/resolv.h	/^#define RES_INIT	/;"	d
RES_INSECURE1	/usr/include/resolv.h	/^#define	RES_INSECURE1	/;"	d
RES_INSECURE2	/usr/include/resolv.h	/^#define	RES_INSECURE2	/;"	d
RES_IPV4ONLY	/usr/include/resolv.h	/^#define	RES_IPV4ONLY	/;"	d
RES_IPV6ONLY	/usr/include/resolv.h	/^#define	RES_IPV6ONLY	/;"	d
RES_KEEPTSIG	/usr/include/resolv.h	/^#define	RES_KEEPTSIG	/;"	d
RES_MAXNDOTS	/usr/include/resolv.h	/^#define	RES_MAXNDOTS	/;"	d
RES_MAXRETRANS	/usr/include/resolv.h	/^#define	RES_MAXRETRANS	/;"	d
RES_MAXRETRY	/usr/include/resolv.h	/^#define	RES_MAXRETRY	/;"	d
RES_MAXTIME	/usr/include/resolv.h	/^#define	RES_MAXTIME	/;"	d
RES_NOALIASES	/usr/include/resolv.h	/^#define	RES_NOALIASES	/;"	d
RES_NOCHECKNAME	/usr/include/resolv.h	/^#define	RES_NOCHECKNAME	/;"	d
RES_NOTLDQUERY	/usr/include/resolv.h	/^#define RES_NOTLDQUERY	/;"	d
RES_NO_BITSTRING	/usr/include/resolv.h	/^#define RES_NO_BITSTRING /;"	d
RES_NO_NIBBLE	/usr/include/resolv.h	/^#define RES_NO_NIBBLE	/;"	d
RES_NO_NIBBLE2	/usr/include/resolv.h	/^#define RES_NO_NIBBLE2	/;"	d
RES_PRF_ADD	/usr/include/resolv.h	/^#define RES_PRF_ADD	/;"	d
RES_PRF_ANS	/usr/include/resolv.h	/^#define RES_PRF_ANS	/;"	d
RES_PRF_AUTH	/usr/include/resolv.h	/^#define RES_PRF_AUTH	/;"	d
RES_PRF_CLASS	/usr/include/resolv.h	/^#define RES_PRF_CLASS /;"	d
RES_PRF_CMD	/usr/include/resolv.h	/^#define RES_PRF_CMD	/;"	d
RES_PRF_HEAD1	/usr/include/resolv.h	/^#define RES_PRF_HEAD1	/;"	d
RES_PRF_HEAD2	/usr/include/resolv.h	/^#define RES_PRF_HEAD2	/;"	d
RES_PRF_HEADX	/usr/include/resolv.h	/^#define RES_PRF_HEADX	/;"	d
RES_PRF_INIT	/usr/include/resolv.h	/^#define RES_PRF_INIT	/;"	d
RES_PRF_QUERY	/usr/include/resolv.h	/^#define RES_PRF_QUERY	/;"	d
RES_PRF_QUES	/usr/include/resolv.h	/^#define RES_PRF_QUES	/;"	d
RES_PRF_REPLY	/usr/include/resolv.h	/^#define RES_PRF_REPLY	/;"	d
RES_PRF_STATS	/usr/include/resolv.h	/^#define RES_PRF_STATS	/;"	d
RES_PRF_TRUNC	/usr/include/resolv.h	/^#define RES_PRF_TRUNC	/;"	d
RES_PRF_TTLID	/usr/include/resolv.h	/^#define RES_PRF_TTLID	/;"	d
RES_PRF_UPDATE	/usr/include/resolv.h	/^#define RES_PRF_UPDATE	/;"	d
RES_PRIMARY	/usr/include/resolv.h	/^#define RES_PRIMARY	/;"	d
RES_RECURSE	/usr/include/resolv.h	/^#define RES_RECURSE	/;"	d
RES_ROTATE	/usr/include/resolv.h	/^#define RES_ROTATE	/;"	d
RES_SET_H_ERRNO	/usr/include/resolv.h	/^#define RES_SET_H_ERRNO(/;"	d
RES_STAYOPEN	/usr/include/resolv.h	/^#define RES_STAYOPEN	/;"	d
RES_TIMEOUT	/usr/include/resolv.h	/^#define	RES_TIMEOUT	/;"	d
RES_USEVC	/usr/include/resolv.h	/^#define RES_USEVC	/;"	d
RES_USE_A6	/usr/include/resolv.h	/^#define RES_USE_A6	/;"	d
RES_USE_DNAME	/usr/include/resolv.h	/^#define RES_USE_DNAME	/;"	d
RES_USE_DNSSEC	/usr/include/resolv.h	/^#define RES_USE_DNSSEC	/;"	d
RES_USE_EDNS0	/usr/include/resolv.h	/^#define RES_USE_EDNS0	/;"	d
RES_USE_INET6	/usr/include/resolv.h	/^#define	RES_USE_INET6	/;"	d
RETCODE	/usr/include/sqltypes.h	/^typedef signed short		RETCODE;$/;"	t
RET_ERROR	/usr/include/db.h	/^#define	RET_ERROR	/;"	d
RET_SPECIAL	/usr/include/db.h	/^#define	RET_SPECIAL	/;"	d
RET_SUCCESS	/usr/include/db.h	/^#define	RET_SUCCESS	/;"	d
RP	/usr/include/dns_util.h	/^		dns_RP_record_t *RP;$/;"	m	union:__anon41::__anon42	access:public
RPP_ECHO_OFF	/usr/include/readpassphrase.h	/^#define RPP_ECHO_OFF /;"	d
RPP_ECHO_ON	/usr/include/readpassphrase.h	/^#define RPP_ECHO_ON /;"	d
RPP_FORCELOWER	/usr/include/readpassphrase.h	/^#define RPP_FORCELOWER /;"	d
RPP_FORCEUPPER	/usr/include/readpassphrase.h	/^#define RPP_FORCEUPPER /;"	d
RPP_REQUIRE_TTY	/usr/include/readpassphrase.h	/^#define RPP_REQUIRE_TTY /;"	d
RPP_SEVENBIT	/usr/include/readpassphrase.h	/^#define RPP_SEVENBIT /;"	d
RQ_CLIENT_ADDR	/usr/include/tcpd.h	/^#define RQ_CLIENT_ADDR	/;"	d
RQ_CLIENT_NAME	/usr/include/tcpd.h	/^#define RQ_CLIENT_NAME	/;"	d
RQ_CLIENT_SIN	/usr/include/tcpd.h	/^#define RQ_CLIENT_SIN	/;"	d
RQ_DAEMON	/usr/include/tcpd.h	/^#define RQ_DAEMON	/;"	d
RQ_FILE	/usr/include/tcpd.h	/^#define RQ_FILE	/;"	d
RQ_SERVER_ADDR	/usr/include/tcpd.h	/^#define RQ_SERVER_ADDR	/;"	d
RQ_SERVER_NAME	/usr/include/tcpd.h	/^#define RQ_SERVER_NAME	/;"	d
RQ_SERVER_SIN	/usr/include/tcpd.h	/^#define RQ_SERVER_SIN	/;"	d
RQ_USER	/usr/include/tcpd.h	/^#define RQ_USER	/;"	d
RT	/usr/include/dns_util.h	/^		dns_RT_record_t *RT;$/;"	m	union:__anon41::__anon42	access:public
RTLD_DEFAULT	/usr/include/dlfcn.h	/^#define	RTLD_DEFAULT	/;"	d
RTLD_FIRST	/usr/include/dlfcn.h	/^#define RTLD_FIRST	/;"	d
RTLD_GLOBAL	/usr/include/dlfcn.h	/^#define RTLD_GLOBAL	/;"	d
RTLD_LAZY	/usr/include/dlfcn.h	/^#define RTLD_LAZY	/;"	d
RTLD_LOCAL	/usr/include/dlfcn.h	/^#define RTLD_LOCAL	/;"	d
RTLD_MAIN_ONLY	/usr/include/dlfcn.h	/^#define	RTLD_MAIN_ONLY	/;"	d
RTLD_NEXT	/usr/include/dlfcn.h	/^#define	RTLD_NEXT	/;"	d
RTLD_NODELETE	/usr/include/dlfcn.h	/^#define RTLD_NODELETE	/;"	d
RTLD_NOLOAD	/usr/include/dlfcn.h	/^#define RTLD_NOLOAD	/;"	d
RTLD_NOW	/usr/include/dlfcn.h	/^#define RTLD_NOW	/;"	d
RTLD_SELF	/usr/include/dlfcn.h	/^#define	RTLD_SELF	/;"	d
RUN_LVL	/usr/include/utmpx.h	/^#define RUN_LVL	/;"	d
R_CURSOR	/usr/include/db.h	/^#define	R_CURSOR	/;"	d
R_DUP	/usr/include/db.h	/^#define	R_DUP	/;"	d
R_FIRST	/usr/include/db.h	/^#define	R_FIRST	/;"	d
R_FIXEDLEN	/usr/include/db.h	/^#define	R_FIXEDLEN	/;"	d
R_IAFTER	/usr/include/db.h	/^#define	R_IAFTER	/;"	d
R_IBEFORE	/usr/include/db.h	/^#define	R_IBEFORE	/;"	d
R_LAST	/usr/include/db.h	/^#define	R_LAST	/;"	d
R_NEXT	/usr/include/db.h	/^#define	R_NEXT	/;"	d
R_NOKEY	/usr/include/db.h	/^#define	R_NOKEY	/;"	d
R_NOOVERWRITE	/usr/include/db.h	/^#define	R_NOOVERWRITE	/;"	d
R_PREV	/usr/include/db.h	/^#define	R_PREV	/;"	d
R_RECNOSYNC	/usr/include/db.h	/^#define	R_RECNOSYNC	/;"	d
R_SETCURSOR	/usr/include/db.h	/^#define	R_SETCURSOR	/;"	d
R_SNAPSHOT	/usr/include/db.h	/^#define	R_SNAPSHOT	/;"	d
SANDBOX_FILTER_GLOBAL_NAME	/usr/include/sandbox.h	/^	SANDBOX_FILTER_GLOBAL_NAME,$/;"	e	enum:sandbox_filter_type
SANDBOX_FILTER_LOCAL_NAME	/usr/include/sandbox.h	/^	SANDBOX_FILTER_LOCAL_NAME$/;"	e	enum:sandbox_filter_type
SANDBOX_FILTER_NONE	/usr/include/sandbox.h	/^	SANDBOX_FILTER_NONE,$/;"	e	enum:sandbox_filter_type
SANDBOX_FILTER_PATH	/usr/include/sandbox.h	/^	SANDBOX_FILTER_PATH,$/;"	e	enum:sandbox_filter_type
SANDBOX_NAMED	/usr/include/sandbox.h	/^#define SANDBOX_NAMED	/;"	d
SANDBOX_NAMED_BUILTIN	/usr/include/sandbox.h	/^#define SANDBOX_NAMED_BUILTIN	/;"	d
SANDBOX_NAMED_EXTERNAL	/usr/include/sandbox.h	/^#define SANDBOX_NAMED_EXTERNAL	/;"	d
SANDBOX_NAMED_MASK	/usr/include/sandbox.h	/^#define SANDBOX_NAMED_MASK	/;"	d
SARMAG	/usr/include/ar.h	/^#define	SARMAG	/;"	d
SCHAR	/usr/include/sqltypes.h	/^typedef signed char		SCHAR;$/;"	t
SCHED_FIFO	/usr/include/pthread_impl.h	/^#define SCHED_FIFO /;"	d
SCHED_OTHER	/usr/include/pthread_impl.h	/^#define SCHED_OTHER /;"	d
SCHED_RR	/usr/include/pthread_impl.h	/^#define SCHED_RR /;"	d
SCNd16	/usr/include/inttypes.h	/^#  define SCNd16 /;"	d
SCNd32	/usr/include/inttypes.h	/^#  define SCNd32 /;"	d
SCNd64	/usr/include/inttypes.h	/^#  define SCNd64 /;"	d
SCNd8	/usr/include/inttypes.h	/^#    define SCNd8 /;"	d
SCNdFAST16	/usr/include/inttypes.h	/^#  define SCNdFAST16 /;"	d
SCNdFAST32	/usr/include/inttypes.h	/^#  define SCNdFAST32 /;"	d
SCNdFAST64	/usr/include/inttypes.h	/^#  define SCNdFAST64 /;"	d
SCNdFAST8	/usr/include/inttypes.h	/^#  define SCNdFAST8 /;"	d
SCNdLEAST16	/usr/include/inttypes.h	/^#  define SCNdLEAST16 /;"	d
SCNdLEAST32	/usr/include/inttypes.h	/^#  define SCNdLEAST32 /;"	d
SCNdLEAST64	/usr/include/inttypes.h	/^#  define SCNdLEAST64 /;"	d
SCNdLEAST8	/usr/include/inttypes.h	/^#  define SCNdLEAST8 /;"	d
SCNdMAX	/usr/include/inttypes.h	/^#  define SCNdMAX /;"	d
SCNdPTR	/usr/include/inttypes.h	/^#  define SCNdPTR /;"	d
SCNi16	/usr/include/inttypes.h	/^#  define SCNi16 /;"	d
SCNi32	/usr/include/inttypes.h	/^#  define SCNi32 /;"	d
SCNi64	/usr/include/inttypes.h	/^#  define SCNi64 /;"	d
SCNi8	/usr/include/inttypes.h	/^#    define SCNi8 /;"	d
SCNiFAST16	/usr/include/inttypes.h	/^#  define SCNiFAST16 /;"	d
SCNiFAST32	/usr/include/inttypes.h	/^#  define SCNiFAST32 /;"	d
SCNiFAST64	/usr/include/inttypes.h	/^#  define SCNiFAST64 /;"	d
SCNiFAST8	/usr/include/inttypes.h	/^#  define SCNiFAST8 /;"	d
SCNiLEAST16	/usr/include/inttypes.h	/^#  define SCNiLEAST16 /;"	d
SCNiLEAST32	/usr/include/inttypes.h	/^#  define SCNiLEAST32 /;"	d
SCNiLEAST64	/usr/include/inttypes.h	/^#  define SCNiLEAST64 /;"	d
SCNiLEAST8	/usr/include/inttypes.h	/^#  define SCNiLEAST8 /;"	d
SCNiMAX	/usr/include/inttypes.h	/^#  define SCNiMAX /;"	d
SCNiPTR	/usr/include/inttypes.h	/^#  define SCNiPTR /;"	d
SCNo16	/usr/include/inttypes.h	/^#  define SCNo16 /;"	d
SCNo32	/usr/include/inttypes.h	/^#  define SCNo32 /;"	d
SCNo64	/usr/include/inttypes.h	/^#  define SCNo64 /;"	d
SCNo8	/usr/include/inttypes.h	/^#    define SCNo8 /;"	d
SCNoFAST16	/usr/include/inttypes.h	/^#  define SCNoFAST16 /;"	d
SCNoFAST32	/usr/include/inttypes.h	/^#  define SCNoFAST32 /;"	d
SCNoFAST64	/usr/include/inttypes.h	/^#  define SCNoFAST64 /;"	d
SCNoFAST8	/usr/include/inttypes.h	/^#  define SCNoFAST8 /;"	d
SCNoLEAST16	/usr/include/inttypes.h	/^#  define SCNoLEAST16 /;"	d
SCNoLEAST32	/usr/include/inttypes.h	/^#  define SCNoLEAST32 /;"	d
SCNoLEAST64	/usr/include/inttypes.h	/^#  define SCNoLEAST64 /;"	d
SCNoLEAST8	/usr/include/inttypes.h	/^#  define SCNoLEAST8 /;"	d
SCNoMAX	/usr/include/inttypes.h	/^#  define SCNoMAX /;"	d
SCNoPTR	/usr/include/inttypes.h	/^#  define SCNoPTR /;"	d
SCNu16	/usr/include/inttypes.h	/^#  define SCNu16 /;"	d
SCNu32	/usr/include/inttypes.h	/^#  define SCNu32 /;"	d
SCNu64	/usr/include/inttypes.h	/^#  define SCNu64 /;"	d
SCNu8	/usr/include/inttypes.h	/^#    define SCNu8 /;"	d
SCNuFAST16	/usr/include/inttypes.h	/^#  define SCNuFAST16 /;"	d
SCNuFAST32	/usr/include/inttypes.h	/^#  define SCNuFAST32 /;"	d
SCNuFAST64	/usr/include/inttypes.h	/^#  define SCNuFAST64 /;"	d
SCNuFAST8	/usr/include/inttypes.h	/^#  define SCNuFAST8 /;"	d
SCNuLEAST16	/usr/include/inttypes.h	/^#  define SCNuLEAST16 /;"	d
SCNuLEAST32	/usr/include/inttypes.h	/^#  define SCNuLEAST32 /;"	d
SCNuLEAST64	/usr/include/inttypes.h	/^#  define SCNuLEAST64 /;"	d
SCNuLEAST8	/usr/include/inttypes.h	/^#  define SCNuLEAST8 /;"	d
SCNuMAX	/usr/include/inttypes.h	/^#  define SCNuMAX /;"	d
SCNuPTR	/usr/include/inttypes.h	/^#  define SCNuPTR /;"	d
SCNx16	/usr/include/inttypes.h	/^#  define SCNx16 /;"	d
SCNx32	/usr/include/inttypes.h	/^#  define SCNx32 /;"	d
SCNx64	/usr/include/inttypes.h	/^#  define SCNx64 /;"	d
SCNx8	/usr/include/inttypes.h	/^#    define SCNx8 /;"	d
SCNxFAST16	/usr/include/inttypes.h	/^#  define SCNxFAST16 /;"	d
SCNxFAST32	/usr/include/inttypes.h	/^#  define SCNxFAST32 /;"	d
SCNxFAST64	/usr/include/inttypes.h	/^#  define SCNxFAST64 /;"	d
SCNxFAST8	/usr/include/inttypes.h	/^#  define SCNxFAST8 /;"	d
SCNxLEAST16	/usr/include/inttypes.h	/^#  define SCNxLEAST16 /;"	d
SCNxLEAST32	/usr/include/inttypes.h	/^#  define SCNxLEAST32 /;"	d
SCNxLEAST64	/usr/include/inttypes.h	/^#  define SCNxLEAST64 /;"	d
SCNxLEAST8	/usr/include/inttypes.h	/^#  define SCNxLEAST8 /;"	d
SCNxMAX	/usr/include/inttypes.h	/^#  define SCNxMAX /;"	d
SCNxPTR	/usr/include/inttypes.h	/^#  define SCNxPTR /;"	d
SCOPE_DELIMITER	/usr/include/netdb.h	/^#define	SCOPE_DELIMITER	/;"	d
SCREEN	/usr/include/curses.h	/^typedef struct screen  SCREEN;$/;"	t	typeref:struct:screen
SCREEN	/usr/include/ncurses.h	/^typedef struct screen  SCREEN;$/;"	t	typeref:struct:screen
SDOUBLE	/usr/include/sqltypes.h	/^typedef double			SDOUBLE;$/;"	t
SDWORD	/usr/include/sqltypes.h	/^typedef long int		SDWORD;$/;"	t
SECSPERDAY	/usr/include/tzfile.h	/^#define SECSPERDAY	/;"	d
SECSPERHOUR	/usr/include/tzfile.h	/^#define SECSPERHOUR	/;"	d
SECSPERMIN	/usr/include/tzfile.h	/^#define SECSPERMIN	/;"	d
SECS_PER_DAY	/usr/include/tzfile.h	/^#define SECS_PER_DAY	/;"	d
SECS_PER_HOUR	/usr/include/tzfile.h	/^#define SECS_PER_HOUR	/;"	d
SECS_PER_MIN	/usr/include/tzfile.h	/^#define SECS_PER_MIN	/;"	d
SEEK_CUR	/usr/include/stdio.h	/^#define	SEEK_CUR	/;"	d
SEEK_CUR	/usr/include/zconf.h	/^#  define SEEK_CUR /;"	d
SEEK_END	/usr/include/stdio.h	/^#define	SEEK_END	/;"	d
SEEK_END	/usr/include/zconf.h	/^#  define SEEK_END /;"	d
SEEK_SET	/usr/include/stdio.h	/^#define	SEEK_SET	/;"	d
SEEK_SET	/usr/include/zconf.h	/^#  define SEEK_SET /;"	d
SET_TTY	/usr/include/term.h	/^#define SET_TTY(/;"	d
SET_TTY	/usr/include/term.h	/^#undef  SET_TTY$/;"	d
SFLOAT	/usr/include/sqltypes.h	/^typedef float			SFLOAT;$/;"	t
SGADDRP	/usr/include/tcpd.h	/^#define SGADDRP(/;"	d
SGADDRSZ	/usr/include/tcpd.h	/^#define SGADDRSZ(/;"	d
SGFAM	/usr/include/tcpd.h	/^#define SGFAM(/;"	d
SGPORT	/usr/include/tcpd.h	/^#define SGPORT(/;"	d
SGSOCKADDRSZ	/usr/include/tcpd.h	/^#define SGSOCKADDRSZ(/;"	d
SG_IS_UNSPECIFIED	/usr/include/tcpd.h	/^#define SG_IS_UNSPECIFIED(/;"	d
SHORT	/usr/include/tcl.h	/^typedef short SHORT;$/;"	t
SHUTDOWN_TIME	/usr/include/utmpx.h	/^#define SHUTDOWN_TIME	/;"	d
SIGN	/usr/include/tclTomMath.h	/^#define SIGN(/;"	d
SIGNATURE	/usr/include/utmpx.h	/^#define SIGNATURE	/;"	d
SIG_ATOMIC_MAX	/usr/include/stdint.h	/^#define SIG_ATOMIC_MAX	/;"	d
SIG_ATOMIC_MIN	/usr/include/stdint.h	/^#define SIG_ATOMIC_MIN	/;"	d
SIZEOF_LONG	/usr/include/iodbcunix.h	/^#define SIZEOF_LONG	/;"	d
SIZE_MAX	/usr/include/stdint.h	/^#define SIZE_MAX	/;"	d
SIZE_MAX	/usr/include/stdint.h	/^#define SIZE_MAX /;"	d
SLAPD_AUTH_NONE	/usr/include/slapi-plugin.h	/^#define SLAPD_AUTH_NONE /;"	d
SLAPD_AUTH_SASL	/usr/include/slapi-plugin.h	/^#define SLAPD_AUTH_SASL /;"	d
SLAPD_AUTH_SIMPLE	/usr/include/slapi-plugin.h	/^#define SLAPD_AUTH_SIMPLE /;"	d
SLAPD_AUTH_SSL	/usr/include/slapi-plugin.h	/^#define SLAPD_AUTH_SSL /;"	d
SLAPI_ABANDON_MSGID	/usr/include/slapi-plugin.h	/^#define SLAPI_ABANDON_MSGID	/;"	d
SLAPI_ACL_ADD	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_ADD /;"	d
SLAPI_ACL_ALL	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_ALL /;"	d
SLAPI_ACL_COMPARE	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_COMPARE /;"	d
SLAPI_ACL_DELETE	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_DELETE /;"	d
SLAPI_ACL_PROXY	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_PROXY /;"	d
SLAPI_ACL_READ	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_READ /;"	d
SLAPI_ACL_SEARCH	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_SEARCH /;"	d
SLAPI_ACL_SELF	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_SELF /;"	d
SLAPI_ACL_WRITE	/usr/include/slapi-plugin.h	/^#define SLAPI_ACL_WRITE /;"	d
SLAPI_ADD_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_ENTRY	/;"	d
SLAPI_ADD_EXISTING_DN_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_EXISTING_DN_ENTRY	/;"	d
SLAPI_ADD_EXISTING_UNIQUEID_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_EXISTING_UNIQUEID_ENTRY	/;"	d
SLAPI_ADD_PARENT_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_PARENT_ENTRY	/;"	d
SLAPI_ADD_PARENT_UNIQUEID	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_PARENT_UNIQUEID	/;"	d
SLAPI_ADD_RESCONTROL	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_RESCONTROL	/;"	d
SLAPI_ADD_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_ADD_TARGET	/;"	d
SLAPI_ATTR_FLAG_COLLECTIVE	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_COLLECTIVE	/;"	d
SLAPI_ATTR_FLAG_NOUSERMOD	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_NOUSERMOD	/;"	d
SLAPI_ATTR_FLAG_OBSOLETE	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_OBSOLETE	/;"	d
SLAPI_ATTR_FLAG_OPATTR	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_OPATTR	/;"	d
SLAPI_ATTR_FLAG_READONLY	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_READONLY	/;"	d
SLAPI_ATTR_FLAG_SINGLE	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_SINGLE	/;"	d
SLAPI_ATTR_FLAG_STD_ATTR	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_FLAG_STD_ATTR	/;"	d
SLAPI_ATTR_OBJECTCLASS	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_OBJECTCLASS	/;"	d
SLAPI_ATTR_UNIQUEID	/usr/include/slapi-plugin.h	/^#define SLAPI_ATTR_UNIQUEID	/;"	d
SLAPI_BACKEND	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND	/;"	d
SLAPI_BACKEND_FLAG_GLOBAL_OVERLAY	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_GLOBAL_OVERLAY	/;"	d
SLAPI_BACKEND_FLAG_GLUE_INSTANCE	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_GLUE_INSTANCE	/;"	d
SLAPI_BACKEND_FLAG_GLUE_LINKED	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_GLUE_LINKED	/;"	d
SLAPI_BACKEND_FLAG_GLUE_SUBORDINATE	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_GLUE_SUBORDINATE	/;"	d
SLAPI_BACKEND_FLAG_NOLASTMOD	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_NOLASTMOD	/;"	d
SLAPI_BACKEND_FLAG_NO_SCHEMA_CHECK	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_NO_SCHEMA_CHECK	/;"	d
SLAPI_BACKEND_FLAG_OVERLAY	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_OVERLAY	/;"	d
SLAPI_BACKEND_FLAG_SHADOW	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_SHADOW	/;"	d
SLAPI_BACKEND_FLAG_SLURP_SHADOW	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_SLURP_SHADOW	/;"	d
SLAPI_BACKEND_FLAG_SYNC_SHADOW	/usr/include/slapi-plugin.h	/^#define SLAPI_BACKEND_FLAG_SYNC_SHADOW	/;"	d
SLAPI_BE_LASTMOD	/usr/include/slapi-plugin.h	/^#define SLAPI_BE_LASTMOD /;"	d
SLAPI_BE_MONITORDN	/usr/include/slapi-plugin.h	/^#define SLAPI_BE_MONITORDN	/;"	d
SLAPI_BE_READONLY	/usr/include/slapi-plugin.h	/^#define SLAPI_BE_READONLY /;"	d
SLAPI_BE_TYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_BE_TYPE /;"	d
SLAPI_BIND_ANONYMOUS	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_ANONYMOUS	/;"	d
SLAPI_BIND_CREDENTIALS	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_CREDENTIALS	/;"	d
SLAPI_BIND_FAIL	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_FAIL	/;"	d
SLAPI_BIND_METHOD	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_METHOD	/;"	d
SLAPI_BIND_RET_SASLCREDS	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_RET_SASLCREDS	/;"	d
SLAPI_BIND_SASLMECHANISM	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_SASLMECHANISM	/;"	d
SLAPI_BIND_SUCCESS	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_SUCCESS	/;"	d
SLAPI_BIND_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_BIND_TARGET	/;"	d
SLAPI_COMPARE_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_COMPARE_TARGET	/;"	d
SLAPI_COMPARE_TYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_COMPARE_TYPE	/;"	d
SLAPI_COMPARE_VALUE	/usr/include/slapi-plugin.h	/^#define SLAPI_COMPARE_VALUE	/;"	d
SLAPI_CONFIG_ARGC	/usr/include/slapi-plugin.h	/^#define SLAPI_CONFIG_ARGC	/;"	d
SLAPI_CONFIG_ARGV	/usr/include/slapi-plugin.h	/^#define SLAPI_CONFIG_ARGV	/;"	d
SLAPI_CONFIG_FILENAME	/usr/include/slapi-plugin.h	/^#define SLAPI_CONFIG_FILENAME	/;"	d
SLAPI_CONFIG_LINENO	/usr/include/slapi-plugin.h	/^#define SLAPI_CONFIG_LINENO	/;"	d
SLAPI_CONNECTION	/usr/include/slapi-plugin.h	/^#define SLAPI_CONNECTION	/;"	d
SLAPI_CONN_AUTHMETHOD	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_AUTHMETHOD /;"	d
SLAPI_CONN_AUTHTYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_AUTHTYPE /;"	d
SLAPI_CONN_CERT	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_CERT /;"	d
SLAPI_CONN_CLIENTIP	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_CLIENTIP	/;"	d
SLAPI_CONN_DN	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_DN /;"	d
SLAPI_CONN_ID	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_ID /;"	d
SLAPI_CONN_SERVERIP	/usr/include/slapi-plugin.h	/^#define SLAPI_CONN_SERVERIP	/;"	d
SLAPI_CONTROLS_ARG	/usr/include/slapi-plugin.h	/^#define SLAPI_CONTROLS_ARG	/;"	d
SLAPI_DELETE_EXISTING_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_DELETE_EXISTING_ENTRY	/;"	d
SLAPI_DELETE_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_DELETE_TARGET	/;"	d
SLAPI_EXT_CONNECTION	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_CONNECTION /;"	d
SLAPI_EXT_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_ENTRY /;"	d
SLAPI_EXT_MTNODE	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_MTNODE /;"	d
SLAPI_EXT_OPERATION	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_OPERATION /;"	d
SLAPI_EXT_OP_REQ_OID	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_OP_REQ_OID	/;"	d
SLAPI_EXT_OP_REQ_VALUE	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_OP_REQ_VALUE	/;"	d
SLAPI_EXT_OP_RET_OID	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_OP_RET_OID	/;"	d
SLAPI_EXT_OP_RET_VALUE	/usr/include/slapi-plugin.h	/^#define SLAPI_EXT_OP_RET_VALUE	/;"	d
SLAPI_F	/usr/include/ldap_cdefs.h	/^#	define SLAPI_F(/;"	d
SLAPI_FAIL_DISKFULL	/usr/include/slapi-plugin.h	/^#define SLAPI_FAIL_DISKFULL	/;"	d
SLAPI_FAIL_GENERAL	/usr/include/slapi-plugin.h	/^#define SLAPI_FAIL_GENERAL	/;"	d
SLAPI_FILTER_SCAN_CONTINUE	/usr/include/slapi-plugin.h	/^#define SLAPI_FILTER_SCAN_CONTINUE	/;"	d
SLAPI_FILTER_SCAN_ERROR	/usr/include/slapi-plugin.h	/^#define SLAPI_FILTER_SCAN_ERROR	/;"	d
SLAPI_FILTER_SCAN_NOMORE	/usr/include/slapi-plugin.h	/^#define SLAPI_FILTER_SCAN_NOMORE	/;"	d
SLAPI_FILTER_SCAN_STOP	/usr/include/slapi-plugin.h	/^#define SLAPI_FILTER_SCAN_STOP	/;"	d
SLAPI_FILTER_UNKNOWN_FILTER_TYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_FILTER_UNKNOWN_FILTER_TYPE	/;"	d
SLAPI_IS_INTERNAL_OPERATION	/usr/include/slapi-plugin.h	/^#define SLAPI_IS_INTERNAL_OPERATION /;"	d
SLAPI_IS_REPLICATED_OPERATION	/usr/include/slapi-plugin.h	/^#define SLAPI_IS_REPLICATED_OPERATION	/;"	d
SLAPI_LOG_ACL	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_ACL /;"	d
SLAPI_LOG_ARGS	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_ARGS /;"	d
SLAPI_LOG_BER	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_BER /;"	d
SLAPI_LOG_CACHE	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_CACHE /;"	d
SLAPI_LOG_CONFIG	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_CONFIG /;"	d
SLAPI_LOG_CONNS	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_CONNS /;"	d
SLAPI_LOG_FATAL	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_FATAL /;"	d
SLAPI_LOG_FILTER	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_FILTER /;"	d
SLAPI_LOG_HOUSE	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_HOUSE /;"	d
SLAPI_LOG_PACKETS	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_PACKETS /;"	d
SLAPI_LOG_PARSE	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_PARSE /;"	d
SLAPI_LOG_PLUGIN	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_PLUGIN /;"	d
SLAPI_LOG_REPL	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_REPL /;"	d
SLAPI_LOG_SHELL	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_SHELL /;"	d
SLAPI_LOG_TIMING	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_TIMING /;"	d
SLAPI_LOG_TRACE	/usr/include/slapi-plugin.h	/^#define SLAPI_LOG_TRACE /;"	d
SLAPI_MANAGEDSAIT	/usr/include/slapi-plugin.h	/^#define SLAPI_MANAGEDSAIT /;"	d
SLAPI_MATCHINGRULE_DESC	/usr/include/slapi-plugin.h	/^#define SLAPI_MATCHINGRULE_DESC	/;"	d
SLAPI_MATCHINGRULE_NAME	/usr/include/slapi-plugin.h	/^#define SLAPI_MATCHINGRULE_NAME	/;"	d
SLAPI_MATCHINGRULE_OBSOLETE	/usr/include/slapi-plugin.h	/^#define SLAPI_MATCHINGRULE_OBSOLETE	/;"	d
SLAPI_MATCHINGRULE_OID	/usr/include/slapi-plugin.h	/^#define SLAPI_MATCHINGRULE_OID	/;"	d
SLAPI_MATCHINGRULE_SYNTAX	/usr/include/slapi-plugin.h	/^#define SLAPI_MATCHINGRULE_SYNTAX	/;"	d
SLAPI_MODIFY_EXISTING_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_MODIFY_EXISTING_ENTRY	/;"	d
SLAPI_MODIFY_MODS	/usr/include/slapi-plugin.h	/^#define SLAPI_MODIFY_MODS	/;"	d
SLAPI_MODIFY_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_MODIFY_TARGET	/;"	d
SLAPI_MODRDN_DELOLDRDN	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_DELOLDRDN	/;"	d
SLAPI_MODRDN_EXISTING_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_EXISTING_ENTRY /;"	d
SLAPI_MODRDN_NEWPARENT_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_NEWPARENT_ENTRY	/;"	d
SLAPI_MODRDN_NEWRDN	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_NEWRDN	/;"	d
SLAPI_MODRDN_NEWSUPERIOR	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_NEWSUPERIOR	/;"	d
SLAPI_MODRDN_NEWSUPERIOR_ADDRESS	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_NEWSUPERIOR_ADDRESS	/;"	d
SLAPI_MODRDN_PARENT_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_PARENT_ENTRY	/;"	d
SLAPI_MODRDN_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_TARGET	/;"	d
SLAPI_MODRDN_TARGET_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_MODRDN_TARGET_ENTRY	/;"	d
SLAPI_NENTRIES	/usr/include/slapi-plugin.h	/^#define	SLAPI_NENTRIES	/;"	d
SLAPI_OPERATION	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION	/;"	d
SLAPI_OPERATION_ABANDON	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_ABANDON /;"	d
SLAPI_OPERATION_ADD	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_ADD /;"	d
SLAPI_OPERATION_ANY	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_ANY /;"	d
SLAPI_OPERATION_AUTHTYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_AUTHTYPE /;"	d
SLAPI_OPERATION_BIND	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_BIND /;"	d
SLAPI_OPERATION_COMPARE	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_COMPARE /;"	d
SLAPI_OPERATION_DELETE	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_DELETE /;"	d
SLAPI_OPERATION_EXTENDED	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_EXTENDED /;"	d
SLAPI_OPERATION_ID	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_ID /;"	d
SLAPI_OPERATION_MODDN	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_MODDN /;"	d
SLAPI_OPERATION_MODIFY	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_MODIFY /;"	d
SLAPI_OPERATION_MODRDN	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_MODRDN /;"	d
SLAPI_OPERATION_MSGID	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_MSGID	/;"	d
SLAPI_OPERATION_NONE	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_NONE /;"	d
SLAPI_OPERATION_SEARCH	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_SEARCH /;"	d
SLAPI_OPERATION_TYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_TYPE	/;"	d
SLAPI_OPERATION_UNBIND	/usr/include/slapi-plugin.h	/^#define SLAPI_OPERATION_UNBIND /;"	d
SLAPI_OPINITIATED_TIME	/usr/include/slapi-plugin.h	/^#define SLAPI_OPINITIATED_TIME	/;"	d
SLAPI_OP_EQUAL	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_EQUAL	/;"	d
SLAPI_OP_FLAG_NEVER_CHAIN	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_FLAG_NEVER_CHAIN	/;"	d
SLAPI_OP_GREATER	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_GREATER	/;"	d
SLAPI_OP_GREATER_OR_EQUAL	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_GREATER_OR_EQUAL	/;"	d
SLAPI_OP_LESS	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_LESS	/;"	d
SLAPI_OP_LESS_OR_EQUAL	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_LESS_OR_EQUAL	/;"	d
SLAPI_OP_SUBSTRING	/usr/include/slapi-plugin.h	/^#define SLAPI_OP_SUBSTRING	/;"	d
SLAPI_PARENT_TXN	/usr/include/slapi-plugin.h	/^#define SLAPI_PARENT_TXN	/;"	d
SLAPI_PLUGIN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN	/;"	d
SLAPI_PLUGIN_ACL_ALLOW_ACCESS	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ACL_ALLOW_ACCESS	/;"	d
SLAPI_PLUGIN_ACL_INIT	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ACL_INIT	/;"	d
SLAPI_PLUGIN_ACL_MODS_ALLOWED	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ACL_MODS_ALLOWED	/;"	d
SLAPI_PLUGIN_ACL_MODS_UPDATE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ACL_MODS_UPDATE	/;"	d
SLAPI_PLUGIN_ACL_SYNTAX_CHECK	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ACL_SYNTAX_CHECK	/;"	d
SLAPI_PLUGIN_ARGC	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ARGC	/;"	d
SLAPI_PLUGIN_ARGV	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_ARGV	/;"	d
SLAPI_PLUGIN_AUDIT	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_AUDIT /;"	d
SLAPI_PLUGIN_AUDIT_DATA	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_AUDIT_DATA /;"	d
SLAPI_PLUGIN_AUDIT_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_AUDIT_FN /;"	d
SLAPI_PLUGIN_BE_POST_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_POST_ADD_FN	/;"	d
SLAPI_PLUGIN_BE_POST_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_POST_DELETE_FN	/;"	d
SLAPI_PLUGIN_BE_POST_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_POST_MODIFY_FN	/;"	d
SLAPI_PLUGIN_BE_POST_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_POST_MODRDN_FN	/;"	d
SLAPI_PLUGIN_BE_PRE_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_PRE_ADD_FN	/;"	d
SLAPI_PLUGIN_BE_PRE_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_PRE_DELETE_FN	/;"	d
SLAPI_PLUGIN_BE_PRE_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_PRE_MODIFY_FN	/;"	d
SLAPI_PLUGIN_BE_PRE_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_BE_PRE_MODRDN_FN	/;"	d
SLAPI_PLUGIN_CLOSE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_CLOSE_FN	/;"	d
SLAPI_PLUGIN_CURRENT_VERSION	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_CURRENT_VERSION /;"	d
SLAPI_PLUGIN_DATABASE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DATABASE /;"	d
SLAPI_PLUGIN_DB_ABANDON_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_ABANDON_FN	/;"	d
SLAPI_PLUGIN_DB_ABORT_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_ABORT_FN	/;"	d
SLAPI_PLUGIN_DB_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_ADD_FN	/;"	d
SLAPI_PLUGIN_DB_ARCHIVE2DB_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_ARCHIVE2DB_FN	/;"	d
SLAPI_PLUGIN_DB_BEGIN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_BEGIN_FN	/;"	d
SLAPI_PLUGIN_DB_BIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_BIND_FN	/;"	d
SLAPI_PLUGIN_DB_COMMIT_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_COMMIT_FN	/;"	d
SLAPI_PLUGIN_DB_COMPARE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_COMPARE_FN	/;"	d
SLAPI_PLUGIN_DB_CONFIG_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_CONFIG_FN	/;"	d
SLAPI_PLUGIN_DB_DB2ARCHIVE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_DB2ARCHIVE_FN	/;"	d
SLAPI_PLUGIN_DB_DB2LDIF_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_DB2LDIF_FN	/;"	d
SLAPI_PLUGIN_DB_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_DELETE_FN	/;"	d
SLAPI_PLUGIN_DB_ENTRY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_ENTRY_FN	/;"	d
SLAPI_PLUGIN_DB_FLUSH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_FLUSH_FN	/;"	d
SLAPI_PLUGIN_DB_FREE_RESULT_SET_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_FREE_RESULT_SET_FN	/;"	d
SLAPI_PLUGIN_DB_LDIF2DB_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_LDIF2DB_FN	/;"	d
SLAPI_PLUGIN_DB_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_MODIFY_FN	/;"	d
SLAPI_PLUGIN_DB_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_MODRDN_FN	/;"	d
SLAPI_PLUGIN_DB_NEXT_SEARCH_ENTRY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_NEXT_SEARCH_ENTRY_FN	/;"	d
SLAPI_PLUGIN_DB_REFERRAL_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_REFERRAL_FN	/;"	d
SLAPI_PLUGIN_DB_RESULT_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_RESULT_FN	/;"	d
SLAPI_PLUGIN_DB_SEARCH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_SEARCH_FN	/;"	d
SLAPI_PLUGIN_DB_SEQ_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_SEQ_FN	/;"	d
SLAPI_PLUGIN_DB_SIZE_FN	/usr/include/slapi-plugin.h	/^#define	SLAPI_PLUGIN_DB_SIZE_FN	/;"	d
SLAPI_PLUGIN_DB_TEST_FN	/usr/include/slapi-plugin.h	/^#define	SLAPI_PLUGIN_DB_TEST_FN	/;"	d
SLAPI_PLUGIN_DB_UNBIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DB_UNBIND_FN	/;"	d
SLAPI_PLUGIN_DESCRIPTION	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DESCRIPTION	/;"	d
SLAPI_PLUGIN_DESTROY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_DESTROY_FN	/;"	d
SLAPI_PLUGIN_EXTENDEDOP	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_EXTENDEDOP /;"	d
SLAPI_PLUGIN_EXTENDED_NOT_HANDLED	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_EXTENDED_NOT_HANDLED /;"	d
SLAPI_PLUGIN_EXTENDED_SENT_RESULT	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_EXTENDED_SENT_RESULT	/;"	d
SLAPI_PLUGIN_EXT_OP_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_EXT_OP_FN	/;"	d
SLAPI_PLUGIN_EXT_OP_OIDLIST	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_EXT_OP_OIDLIST	/;"	d
SLAPI_PLUGIN_IDENTITY	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_IDENTITY	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_ABANDON_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_ABANDON_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_ADD_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_BIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_BIND_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_COMPARE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_COMPARE_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_DELETE_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_MODIFY_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_MODRDN_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_SEARCH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_SEARCH_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_POST_UNBIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_POST_UNBIND_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_ABANDON_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_ABANDON_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_ADD_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_BIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_BIND_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_COMPARE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_COMPARE_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_DELETE_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_MODIFY_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_MODRDN_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_SEARCH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_SEARCH_FN	/;"	d
SLAPI_PLUGIN_INTERNAL_PRE_UNBIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTERNAL_PRE_UNBIND_FN	/;"	d
SLAPI_PLUGIN_INTOP_RESULT	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTOP_RESULT	/;"	d
SLAPI_PLUGIN_INTOP_SEARCH_ENTRIES	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTOP_SEARCH_ENTRIES	/;"	d
SLAPI_PLUGIN_INTOP_SEARCH_REFERRALS	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_INTOP_SEARCH_REFERRALS	/;"	d
SLAPI_PLUGIN_MATCHINGRULE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MATCHINGRULE /;"	d
SLAPI_PLUGIN_MR_FILTER_CREATE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_FILTER_CREATE_FN	/;"	d
SLAPI_PLUGIN_MR_FILTER_INDEX_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_FILTER_INDEX_FN	/;"	d
SLAPI_PLUGIN_MR_FILTER_MATCH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_FILTER_MATCH_FN	/;"	d
SLAPI_PLUGIN_MR_FILTER_RESET_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_FILTER_RESET_FN	/;"	d
SLAPI_PLUGIN_MR_FILTER_REUSABLE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_FILTER_REUSABLE	/;"	d
SLAPI_PLUGIN_MR_INDEXER_CREATE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_INDEXER_CREATE_FN	/;"	d
SLAPI_PLUGIN_MR_INDEX_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_INDEX_FN	/;"	d
SLAPI_PLUGIN_MR_KEYS	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_KEYS	/;"	d
SLAPI_PLUGIN_MR_OID	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_OID	/;"	d
SLAPI_PLUGIN_MR_QUERY_OPERATOR	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_QUERY_OPERATOR	/;"	d
SLAPI_PLUGIN_MR_TYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_TYPE	/;"	d
SLAPI_PLUGIN_MR_USAGE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_USAGE	/;"	d
SLAPI_PLUGIN_MR_USAGE_INDEX	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_USAGE_INDEX	/;"	d
SLAPI_PLUGIN_MR_USAGE_SORT	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_USAGE_SORT	/;"	d
SLAPI_PLUGIN_MR_VALUE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_VALUE	/;"	d
SLAPI_PLUGIN_MR_VALUES	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_MR_VALUES	/;"	d
SLAPI_PLUGIN_OBJECT	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_OBJECT	/;"	d
SLAPI_PLUGIN_OPRETURN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_OPRETURN	/;"	d
SLAPI_PLUGIN_POSTOPERATION	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POSTOPERATION /;"	d
SLAPI_PLUGIN_POST_ABANDON_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_ABANDON_FN	/;"	d
SLAPI_PLUGIN_POST_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_ADD_FN	/;"	d
SLAPI_PLUGIN_POST_BIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_BIND_FN	/;"	d
SLAPI_PLUGIN_POST_COMPARE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_COMPARE_FN	/;"	d
SLAPI_PLUGIN_POST_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_DELETE_FN	/;"	d
SLAPI_PLUGIN_POST_ENTRY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_ENTRY_FN	/;"	d
SLAPI_PLUGIN_POST_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_MODIFY_FN	/;"	d
SLAPI_PLUGIN_POST_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_MODRDN_FN	/;"	d
SLAPI_PLUGIN_POST_REFERRAL_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_REFERRAL_FN	/;"	d
SLAPI_PLUGIN_POST_RESULT_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_RESULT_FN	/;"	d
SLAPI_PLUGIN_POST_SEARCH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_SEARCH_FN	/;"	d
SLAPI_PLUGIN_POST_UNBIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_POST_UNBIND_FN	/;"	d
SLAPI_PLUGIN_PREOPERATION	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PREOPERATION /;"	d
SLAPI_PLUGIN_PRE_ABANDON_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_ABANDON_FN	/;"	d
SLAPI_PLUGIN_PRE_ADD_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_ADD_FN	/;"	d
SLAPI_PLUGIN_PRE_BIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_BIND_FN	/;"	d
SLAPI_PLUGIN_PRE_COMPARE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_COMPARE_FN	/;"	d
SLAPI_PLUGIN_PRE_DELETE_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_DELETE_FN	/;"	d
SLAPI_PLUGIN_PRE_ENTRY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_ENTRY_FN	/;"	d
SLAPI_PLUGIN_PRE_MODIFY_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_MODIFY_FN	/;"	d
SLAPI_PLUGIN_PRE_MODRDN_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_MODRDN_FN	/;"	d
SLAPI_PLUGIN_PRE_REFERRAL_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_REFERRAL_FN	/;"	d
SLAPI_PLUGIN_PRE_RESULT_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_RESULT_FN	/;"	d
SLAPI_PLUGIN_PRE_SEARCH_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_SEARCH_FN	/;"	d
SLAPI_PLUGIN_PRE_UNBIND_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRE_UNBIND_FN	/;"	d
SLAPI_PLUGIN_PRIVATE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_PRIVATE	/;"	d
SLAPI_PLUGIN_START_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_START_FN	/;"	d
SLAPI_PLUGIN_SYNTAX	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX /;"	d
SLAPI_PLUGIN_SYNTAX_ASSERTION2KEYS_AVA	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_ASSERTION2KEYS_AVA	/;"	d
SLAPI_PLUGIN_SYNTAX_ASSERTION2KEYS_SUB	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_ASSERTION2KEYS_SUB	/;"	d
SLAPI_PLUGIN_SYNTAX_COMPARE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_COMPARE	/;"	d
SLAPI_PLUGIN_SYNTAX_FILTER_AVA	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_FILTER_AVA	/;"	d
SLAPI_PLUGIN_SYNTAX_FILTER_SUB	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_FILTER_SUB	/;"	d
SLAPI_PLUGIN_SYNTAX_FLAGS	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_FLAGS	/;"	d
SLAPI_PLUGIN_SYNTAX_FLAG_ORDERING	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_FLAG_ORDERING	/;"	d
SLAPI_PLUGIN_SYNTAX_FLAG_ORKEYS	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_FLAG_ORKEYS	/;"	d
SLAPI_PLUGIN_SYNTAX_NAMES	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_NAMES	/;"	d
SLAPI_PLUGIN_SYNTAX_OID	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_OID	/;"	d
SLAPI_PLUGIN_SYNTAX_VALUES2KEYS	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_SYNTAX_VALUES2KEYS	/;"	d
SLAPI_PLUGIN_TYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_TYPE	/;"	d
SLAPI_PLUGIN_VERSION	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_VERSION	/;"	d
SLAPI_PLUGIN_VERSION_01	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_VERSION_01 /;"	d
SLAPI_PLUGIN_VERSION_02	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_VERSION_02 /;"	d
SLAPI_PLUGIN_VERSION_03	/usr/include/slapi-plugin.h	/^#define SLAPI_PLUGIN_VERSION_03 /;"	d
SLAPI_REQCONTROLS	/usr/include/slapi-plugin.h	/^#define SLAPI_REQCONTROLS	/;"	d
SLAPI_REQUESTOR_DN	/usr/include/slapi-plugin.h	/^#define SLAPI_REQUESTOR_DN	/;"	d
SLAPI_REQUESTOR_ISROOT	/usr/include/slapi-plugin.h	/^#define SLAPI_REQUESTOR_ISROOT	/;"	d
SLAPI_REQUESTOR_ISUPDATEDN	/usr/include/slapi-plugin.h	/^#define SLAPI_REQUESTOR_ISUPDATEDN	/;"	d
SLAPI_RESCONTROLS	/usr/include/slapi-plugin.h	/^#define SLAPI_RESCONTROLS	/;"	d
SLAPI_RESULT_CODE	/usr/include/slapi-plugin.h	/^#define SLAPI_RESULT_CODE /;"	d
SLAPI_RESULT_MATCHED	/usr/include/slapi-plugin.h	/^#define SLAPI_RESULT_MATCHED /;"	d
SLAPI_RESULT_TEXT	/usr/include/slapi-plugin.h	/^#define SLAPI_RESULT_TEXT /;"	d
SLAPI_SEARCH_ATTRS	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_ATTRS	/;"	d
SLAPI_SEARCH_ATTRSONLY	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_ATTRSONLY	/;"	d
SLAPI_SEARCH_DEREF	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_DEREF	/;"	d
SLAPI_SEARCH_FILTER	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_FILTER	/;"	d
SLAPI_SEARCH_REFERRALS	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_REFERRALS	/;"	d
SLAPI_SEARCH_RESULT_ENTRY	/usr/include/slapi-plugin.h	/^#define	SLAPI_SEARCH_RESULT_ENTRY	/;"	d
SLAPI_SEARCH_RESULT_SET	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_RESULT_SET	/;"	d
SLAPI_SEARCH_SCOPE	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_SCOPE	/;"	d
SLAPI_SEARCH_SIZELIMIT	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_SIZELIMIT	/;"	d
SLAPI_SEARCH_STRFILTER	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_STRFILTER	/;"	d
SLAPI_SEARCH_TARGET	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_TARGET	/;"	d
SLAPI_SEARCH_TIMELIMIT	/usr/include/slapi-plugin.h	/^#define SLAPI_SEARCH_TIMELIMIT	/;"	d
SLAPI_STR2ENTRY_ADDRDNVALS	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_ADDRDNVALS	/;"	d
SLAPI_STR2ENTRY_BIGENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_BIGENTRY	/;"	d
SLAPI_STR2ENTRY_EXPAND_OBJECTCLASSES	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_EXPAND_OBJECTCLASSES	/;"	d
SLAPI_STR2ENTRY_IGNORE_STATE	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_IGNORE_STATE	/;"	d
SLAPI_STR2ENTRY_INCLUDE_VERSION_STR	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_INCLUDE_VERSION_STR	/;"	d
SLAPI_STR2ENTRY_NOT_WELL_FORMED_LDIF	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_NOT_WELL_FORMED_LDIF	/;"	d
SLAPI_STR2ENTRY_REMOVEDUPVALS	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_REMOVEDUPVALS	/;"	d
SLAPI_STR2ENTRY_TOMBSTONE_CHECK	/usr/include/slapi-plugin.h	/^#define SLAPI_STR2ENTRY_TOMBSTONE_CHECK	/;"	d
SLAPI_TARGET_ADDRESS	/usr/include/slapi-plugin.h	/^#define SLAPI_TARGET_ADDRESS	/;"	d
SLAPI_TARGET_DN	/usr/include/slapi-plugin.h	/^#define SLAPI_TARGET_DN	/;"	d
SLAPI_TARGET_UNIQUEID	/usr/include/slapi-plugin.h	/^#define SLAPI_TARGET_UNIQUEID	/;"	d
SLAPI_TXN	/usr/include/slapi-plugin.h	/^#define SLAPI_TXN	/;"	d
SLAPI_TYPE_CMP_BASE	/usr/include/slapi-plugin.h	/^#define SLAPI_TYPE_CMP_BASE	/;"	d
SLAPI_TYPE_CMP_EXACT	/usr/include/slapi-plugin.h	/^#define SLAPI_TYPE_CMP_EXACT	/;"	d
SLAPI_TYPE_CMP_SUBTYPE	/usr/include/slapi-plugin.h	/^#define SLAPI_TYPE_CMP_SUBTYPE	/;"	d
SLAPI_V	/usr/include/ldap_cdefs.h	/^#	define SLAPI_V(/;"	d
SLAPI_X_ADD_STRUCTURAL_CLASS	/usr/include/slapi-plugin.h	/^#define SLAPI_X_ADD_STRUCTURAL_CLASS	/;"	d
SLAPI_X_CONN_CLIENTPATH	/usr/include/slapi-plugin.h	/^#define SLAPI_X_CONN_CLIENTPATH	/;"	d
SLAPI_X_CONN_IS_UDP	/usr/include/slapi-plugin.h	/^#define SLAPI_X_CONN_IS_UDP	/;"	d
SLAPI_X_CONN_SASL_CONTEXT	/usr/include/slapi-plugin.h	/^#define SLAPI_X_CONN_SASL_CONTEXT	/;"	d
SLAPI_X_CONN_SERVERPATH	/usr/include/slapi-plugin.h	/^#define SLAPI_X_CONN_SERVERPATH	/;"	d
SLAPI_X_CONN_SSF	/usr/include/slapi-plugin.h	/^#define SLAPI_X_CONN_SSF	/;"	d
SLAPI_X_GROUP_ATTRIBUTE	/usr/include/slapi-plugin.h	/^#define SLAPI_X_GROUP_ATTRIBUTE	/;"	d
SLAPI_X_GROUP_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_X_GROUP_ENTRY	/;"	d
SLAPI_X_GROUP_OPERATION_DN	/usr/include/slapi-plugin.h	/^#define SLAPI_X_GROUP_OPERATION_DN	/;"	d
SLAPI_X_GROUP_TARGET_ENTRY	/usr/include/slapi-plugin.h	/^#define SLAPI_X_GROUP_TARGET_ENTRY	/;"	d
SLAPI_X_MANAGEDIT	/usr/include/slapi-plugin.h	/^#define SLAPI_X_MANAGEDIT	/;"	d
SLAPI_X_OPERATION_DELETE_GLUE_PARENT	/usr/include/slapi-plugin.h	/^#define SLAPI_X_OPERATION_DELETE_GLUE_PARENT	/;"	d
SLAPI_X_OPERATION_NO_SCHEMA_CHECK	/usr/include/slapi-plugin.h	/^#define SLAPI_X_OPERATION_NO_SCHEMA_CHECK	/;"	d
SLAPI_X_OPERATION_NO_SUBORDINATE_GLUE	/usr/include/slapi-plugin.h	/^#define SLAPI_X_OPERATION_NO_SUBORDINATE_GLUE	/;"	d
SLAPI_X_PLUGIN_POST_GROUP_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_X_PLUGIN_POST_GROUP_FN	/;"	d
SLAPI_X_PLUGIN_PRE_GROUP_FN	/usr/include/slapi-plugin.h	/^#define SLAPI_X_PLUGIN_PRE_GROUP_FN	/;"	d
SLAPI_X_RELAX	/usr/include/slapi-plugin.h	/^#define SLAPI_X_RELAX	/;"	d
SLONG	/usr/include/sqltypes.h	/^typedef signed long		SLONG;$/;"	t
SMALL_MEDIUM	/usr/include/zconf.h	/^#    define SMALL_MEDIUM$/;"	d
SOA	/usr/include/dns_util.h	/^		dns_SOA_record_t *SOA;$/;"	m	union:__anon41::__anon42	access:public
SQLAllocConnect	/usr/include/sql.h	/^SQLRETURN SQL_API SQLAllocConnect ($/;"	p	signature:( SQLHENV EnvironmentHandle, SQLHDBC * ConnectionHandle)
SQLAllocEnv	/usr/include/sql.h	/^SQLRETURN SQL_API SQLAllocEnv ($/;"	p	signature:( SQLHENV * EnvironmentHandle)
SQLAllocEnv	/usr/include/sqlext.h	/^#define SQLAllocEnv(/;"	d
SQLAllocHandle	/usr/include/sql.h	/^SQLRETURN SQL_API SQLAllocHandle ($/;"	p	signature:( SQLSMALLINT HandleType, SQLHANDLE InputHandle, SQLHANDLE * OutputHandle)
SQLAllocHandle	/usr/include/sqlext.h	/^#define SQLAllocHandle	/;"	d
SQLAllocHandleStd	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLAllocHandleStd ($/;"	p	signature:( SQLSMALLINT fHandleType, SQLHANDLE hInput, SQLHANDLE * phOutput)
SQLAllocStmt	/usr/include/sql.h	/^SQLRETURN SQL_API SQLAllocStmt ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLHSTMT * StatementHandle)
SQLBIGINT	/usr/include/sqltypes.h	/^typedef signed   ODBCINT64	SQLBIGINT;$/;"	t
SQLBindCol	/usr/include/sql.h	/^SQLRETURN SQL_API SQLBindCol ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType, SQLPOINTER TargetValue, SQLLEN BufferLength, SQLLEN * StrLen_or_Ind)
SQLBindParam	/usr/include/sql.h	/^SQLRETURN SQL_API SQLBindParam ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT ParameterNumber, SQLSMALLINT ValueType, SQLSMALLINT ParameterType, SQLULEN LengthPrecision, SQLSMALLINT ParameterScale, SQLPOINTER ParameterValue, SQLLEN * StrLen_or_Ind)
SQLBindParameter	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLBindParameter ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT ipar, SQLSMALLINT fParamType, SQLSMALLINT fCType, SQLSMALLINT fSqlType, SQLULEN cbColDef, SQLSMALLINT ibScale, SQLPOINTER rgbValue, SQLLEN cbValueMax, SQLLEN * pcbValue)
SQLBrowseConnect	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLBrowseConnect ($/;"	p	signature:( SQLHDBC hdbc, SQLCHAR * szConnStrIn, SQLSMALLINT cbConnStrIn, SQLCHAR * szConnStrOut, SQLSMALLINT cbConnStrOutMax, SQLSMALLINT * pcbConnStrOut)
SQLBrowseConnect	/usr/include/sqlucode.h	/^#define SQLBrowseConnect	/;"	d
SQLBrowseConnectA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLBrowseConnectA ($/;"	p	signature:( SQLHDBC hdbc, SQLCHAR * szConnStrIn, SQLSMALLINT cbConnStrIn, SQLCHAR * szConnStrOut, SQLSMALLINT cbConnStrOutMax, SQLSMALLINT * pcbConnStrOut)
SQLBrowseConnectW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLBrowseConnectW ($/;"	p	signature:( SQLHDBC hdbc, SQLWCHAR * szConnStrIn, SQLSMALLINT cbConnStrIn, SQLWCHAR * szConnStrOut, SQLSMALLINT cbConnStrOutMax, SQLSMALLINT * pcbConnStrOut)
SQLBulkOperations	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLBulkOperations ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLSMALLINT Operation)
SQLCHAR	/usr/include/sqltypes.h	/^typedef unsigned char		SQLCHAR;$/;"	t
SQLCancel	/usr/include/sql.h	/^SQLRETURN SQL_API SQLCancel ($/;"	p	signature:( SQLHSTMT StatementHandle)
SQLCloseCursor	/usr/include/sql.h	/^SQLRETURN SQL_API SQLCloseCursor ($/;"	p	signature:( SQLHSTMT StatementHandle)
SQLColAttribute	/usr/include/sql.h	/^SQLRETURN SQL_API SQLColAttribute ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT ColumnNumber, SQLUSMALLINT FieldIdentifier, SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength, SQLSMALLINT * StringLength, SQLLEN * NumericAttribute)
SQLColAttribute	/usr/include/sqlucode.h	/^#define SQLColAttribute	/;"	d
SQLColAttributeA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColAttributeA ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT iCol, SQLUSMALLINT iField, SQLPOINTER pCharAttr, SQLSMALLINT cbCharAttrMax, SQLSMALLINT * pcbCharAttr, SQLLEN * pNumAttr)
SQLColAttributeW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColAttributeW ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT iCol, SQLUSMALLINT iField, SQLPOINTER pCharAttr, SQLSMALLINT cbCharAttrMax, SQLSMALLINT * pcbCharAttr, SQLLEN * pNumAttr)
SQLColAttributes	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLColAttributes ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT icol, SQLUSMALLINT fDescType, SQLPOINTER rgbDesc, SQLSMALLINT cbDescMax, SQLSMALLINT * pcbDesc, SQLLEN * pfDesc)
SQLColAttributes	/usr/include/sqlucode.h	/^#define SQLColAttributes	/;"	d
SQLColAttributesA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColAttributesA ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT icol, SQLUSMALLINT fDescType, SQLPOINTER rgbDesc, SQLSMALLINT cbDescMax, SQLSMALLINT * pcbDesc, SQLLEN * pfDesc)
SQLColAttributesW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColAttributesW ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT icol, SQLUSMALLINT fDescType, SQLPOINTER rgbDesc, SQLSMALLINT cbDescMax, SQLSMALLINT * pcbDesc, SQLLEN * pfDesc)
SQLColumnPrivileges	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLColumnPrivileges ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName, SQLCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLColumnPrivileges	/usr/include/sqlucode.h	/^#define SQLColumnPrivileges	/;"	d
SQLColumnPrivilegesA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColumnPrivilegesA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName, SQLCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLColumnPrivilegesW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColumnPrivilegesW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName, SQLWCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLColumns	/usr/include/sql.h	/^SQLRETURN SQL_API SQLColumns ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * CatalogName, SQLSMALLINT NameLength1, SQLCHAR * SchemaName, SQLSMALLINT NameLength2, SQLCHAR * TableName, SQLSMALLINT NameLength3, SQLCHAR * ColumnName, SQLSMALLINT NameLength4)
SQLColumns	/usr/include/sqlucode.h	/^#define SQLColumns	/;"	d
SQLColumnsA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColumnsA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName, SQLCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLColumnsW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLColumnsW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName, SQLWCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLConfigDataSource	/usr/include/odbcinst.h	/^#define  SQLConfigDataSource /;"	d
SQLConfigDataSource	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLConfigDataSource ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszAttributes)
SQLConfigDataSourceW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLConfigDataSourceW ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCWSTR lpszDriver, LPCWSTR lpszAttributes)
SQLConfigDriver	/usr/include/odbcinst.h	/^#define  SQLConfigDriver /;"	d
SQLConfigDriver	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLConfigDriver ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszArgs, LPSTR lpszMsg, WORD cbMsgMax, WORD * pcbMsgOut)
SQLConfigDriverW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLConfigDriverW ($/;"	p	signature:( HWND hwndParent, WORD fRequest, LPCWSTR lpszDriver, LPCWSTR lpszArgs, LPWSTR lpszMsg, WORD cbMsgMax, WORD * pcbMsgOut)
SQLConnect	/usr/include/sql.h	/^SQLRETURN SQL_API SQLConnect ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLCHAR * ServerName, SQLSMALLINT NameLength1, SQLCHAR * UserName, SQLSMALLINT NameLength2, SQLCHAR * Authentication, SQLSMALLINT NameLength3)
SQLConnect	/usr/include/sqlucode.h	/^#define SQLConnect	/;"	d
SQLConnectA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLConnectA ($/;"	p	signature:( SQLHDBC hdbc, SQLCHAR * szDSN, SQLSMALLINT cbDSN, SQLCHAR * szUID, SQLSMALLINT cbUID, SQLCHAR * szAuthStr, SQLSMALLINT cbAuthStr)
SQLConnectW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLConnectW ($/;"	p	signature:( SQLHDBC hdbc, SQLWCHAR * szDSN, SQLSMALLINT cbDSN, SQLWCHAR * szUID, SQLSMALLINT cbUID, SQLWCHAR * szAuthStr, SQLSMALLINT cbAuthStr)
SQLCopyDesc	/usr/include/sql.h	/^SQLRETURN SQL_API SQLCopyDesc ($/;"	p	signature:( SQLHDESC SourceDescHandle, SQLHDESC TargetDescHandle)
SQLCreateDataSource	/usr/include/odbcinst.h	/^#define  SQLCreateDataSource /;"	d
SQLCreateDataSource	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLCreateDataSource ($/;"	p	signature:( HWND hwndParent, LPCSTR lpszDSN)
SQLCreateDataSourceW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLCreateDataSourceW ($/;"	p	signature:( HWND hwndParent, LPCWSTR lpszDSN)
SQLDATE	/usr/include/sqltypes.h	/^typedef unsigned char		SQLDATE;$/;"	t
SQLDECIMAL	/usr/include/sqltypes.h	/^typedef unsigned char		SQLDECIMAL;$/;"	t
SQLDOUBLE	/usr/include/sqltypes.h	/^typedef double			SQLDOUBLE;$/;"	t
SQLDataSources	/usr/include/sql.h	/^SQLRETURN SQL_API SQLDataSources ($/;"	p	signature:( SQLHENV EnvironmentHandle, SQLUSMALLINT Direction, SQLCHAR * ServerName, SQLSMALLINT BufferLength1, SQLSMALLINT * NameLength1, SQLCHAR * Description, SQLSMALLINT BufferLength2, SQLSMALLINT * NameLength2)
SQLDataSources	/usr/include/sqlucode.h	/^#define SQLDataSources	/;"	d
SQLDataSourcesA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDataSourcesA ($/;"	p	signature:( SQLHENV henv, SQLUSMALLINT fDirection, SQLCHAR * szDSN, SQLSMALLINT cbDSNMax, SQLSMALLINT * pcbDSN, SQLCHAR * szDescription, SQLSMALLINT cbDescriptionMax, SQLSMALLINT * pcbDescription)
SQLDataSourcesW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDataSourcesW ($/;"	p	signature:( SQLHENV henv, SQLUSMALLINT fDirection, SQLWCHAR * szDSN, SQLSMALLINT cbDSNMax, SQLSMALLINT * pcbDSN, SQLWCHAR * szDescription, SQLSMALLINT cbDescriptionMax, SQLSMALLINT * pcbDescription)
SQLDescribeCol	/usr/include/sql.h	/^SQLRETURN SQL_API SQLDescribeCol ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT ColumnNumber, SQLCHAR * ColumnName, SQLSMALLINT BufferLength, SQLSMALLINT * NameLength, SQLSMALLINT * DataType, SQLULEN * ColumnSize, SQLSMALLINT * DecimalDigits, SQLSMALLINT * Nullable)
SQLDescribeCol	/usr/include/sqlucode.h	/^#define SQLDescribeCol	/;"	d
SQLDescribeColA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDescribeColA ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT icol, SQLCHAR * szColName, SQLSMALLINT cbColNameMax, SQLSMALLINT * pcbColName, SQLSMALLINT * pfSqlType, SQLULEN * pcbColDef, SQLSMALLINT * pibScale, SQLSMALLINT * pfNullable)
SQLDescribeColW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDescribeColW ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT icol, SQLWCHAR * szColName, SQLSMALLINT cbColNameMax, SQLSMALLINT * pcbColName, SQLSMALLINT * pfSqlType, SQLULEN * pcbColDef, SQLSMALLINT * pibScale, SQLSMALLINT * pfNullable)
SQLDescribeParam	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLDescribeParam ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT ipar, SQLSMALLINT * pfSqlType, SQLULEN * pcbParamDef, SQLSMALLINT * pibScale, SQLSMALLINT * pfNullable)
SQLDisconnect	/usr/include/sql.h	/^SQLRETURN SQL_API SQLDisconnect ($/;"	p	signature:( SQLHDBC ConnectionHandle)
SQLDriverConnect	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLDriverConnect ($/;"	p	signature:( SQLHDBC hdbc, SQLHWND hwnd, SQLCHAR * szConnStrIn, SQLSMALLINT cbConnStrIn, SQLCHAR * szConnStrOut, SQLSMALLINT cbConnStrOutMax, SQLSMALLINT * pcbConnStrOut, SQLUSMALLINT fDriverCompletion)
SQLDriverConnect	/usr/include/sqlucode.h	/^#define SQLDriverConnect	/;"	d
SQLDriverConnectA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDriverConnectA ($/;"	p	signature:( SQLHDBC hdbc, SQLHWND hwnd, SQLCHAR * szConnStrIn, SQLSMALLINT cbConnStrIn, SQLCHAR * szConnStrOut, SQLSMALLINT cbConnStrOutMax, SQLSMALLINT * pcbConnStrOut, SQLUSMALLINT fDriverCompletion)
SQLDriverConnectW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDriverConnectW ($/;"	p	signature:( SQLHDBC hdbc, SQLHWND hwnd, SQLWCHAR * szConnStrIn, SQLSMALLINT cbConnStrIn, SQLWCHAR * szConnStrOut, SQLSMALLINT cbConnStrOutMax, SQLSMALLINT * pcbConnStrOut, SQLUSMALLINT fDriverCompletion)
SQLDrivers	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLDrivers ($/;"	p	signature:( SQLHENV henv, SQLUSMALLINT fDirection, SQLCHAR * szDriverDesc, SQLSMALLINT cbDriverDescMax, SQLSMALLINT * pcbDriverDesc, SQLCHAR * szDriverAttributes, SQLSMALLINT cbDrvrAttrMax, SQLSMALLINT * pcbDrvrAttr)
SQLDrivers	/usr/include/sqlucode.h	/^#define SQLDrivers	/;"	d
SQLDriversA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDriversA ($/;"	p	signature:( SQLHENV henv, SQLUSMALLINT fDirection, SQLCHAR * szDriverDesc, SQLSMALLINT cbDriverDescMax, SQLSMALLINT * pcbDriverDesc, SQLCHAR * szDriverAttributes, SQLSMALLINT cbDrvrAttrMax, SQLSMALLINT * pcbDrvrAttr)
SQLDriversW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLDriversW ($/;"	p	signature:( SQLHENV henv, SQLUSMALLINT fDirection, SQLWCHAR * szDriverDesc, SQLSMALLINT cbDriverDescMax, SQLSMALLINT * pcbDriverDesc, SQLWCHAR * szDriverAttributes, SQLSMALLINT cbDrvrAttrMax, SQLSMALLINT * pcbDrvrAttr)
SQLEndTran	/usr/include/sql.h	/^SQLRETURN SQL_API SQLEndTran ($/;"	p	signature:( SQLSMALLINT HandleType, SQLHANDLE Handle, SQLSMALLINT CompletionType)
SQLError	/usr/include/sql.h	/^SQLRETURN SQL_API SQLError ($/;"	p	signature:( SQLHENV EnvironmentHandle, SQLHDBC ConnectionHandle, SQLHSTMT StatementHandle, SQLCHAR * Sqlstate, SQLINTEGER * NativeError, SQLCHAR * MessageText, SQLSMALLINT BufferLength, SQLSMALLINT * TextLength)
SQLError	/usr/include/sqlucode.h	/^#define SQLError	/;"	d
SQLErrorA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLErrorA ($/;"	p	signature:( SQLHENV henv, SQLHDBC hdbc, SQLHSTMT hstmt, SQLCHAR * szSqlState, SQLINTEGER * pfNativeError, SQLCHAR * szErrorMsg, SQLSMALLINT cbErrorMsgMax, SQLSMALLINT * pcbErrorMsg)
SQLErrorW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLErrorW ($/;"	p	signature:( SQLHENV henv, SQLHDBC hdbc, SQLHSTMT hstmt, SQLWCHAR * szSqlState, SQLINTEGER * pfNativeError, SQLWCHAR * szErrorMsg, SQLSMALLINT cbErrorMsgMax, SQLSMALLINT * pcbErrorMsg)
SQLExecDirect	/usr/include/sql.h	/^SQLRETURN SQL_API SQLExecDirect ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * StatementText, SQLINTEGER TextLength)
SQLExecDirect	/usr/include/sqlucode.h	/^#define SQLExecDirect	/;"	d
SQLExecDirectA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLExecDirectA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szSqlStr, SQLINTEGER cbSqlStr)
SQLExecDirectW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLExecDirectW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szSqlStr, SQLINTEGER cbSqlStr)
SQLExecute	/usr/include/sql.h	/^SQLRETURN SQL_API SQLExecute ($/;"	p	signature:( SQLHSTMT StatementHandle)
SQLExtendedFetch	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLExtendedFetch ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT fFetchType, SQLLEN irow, SQLULEN * pcrow, SQLUSMALLINT * rgfRowStatus)
SQLFLOAT	/usr/include/sqltypes.h	/^typedef double			SQLFLOAT;$/;"	t
SQLFetch	/usr/include/sql.h	/^SQLRETURN SQL_API SQLFetch ($/;"	p	signature:( SQLHSTMT StatementHandle)
SQLFetchScroll	/usr/include/sql.h	/^SQLRETURN SQL_API SQLFetchScroll ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLSMALLINT FetchOrientation, SQLLEN FetchOffset)
SQLForeignKeys	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLForeignKeys ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szPkCatalogName, SQLSMALLINT cbPkCatalogName, SQLCHAR * szPkSchemaName, SQLSMALLINT cbPkSchemaName, SQLCHAR * szPkTableName, SQLSMALLINT cbPkTableName, SQLCHAR * szFkCatalogName, SQLSMALLINT cbFkCatalogName, SQLCHAR * szFkSchemaName, SQLSMALLINT cbFkSchemaName, SQLCHAR * szFkTableName, SQLSMALLINT cbFkTableName)
SQLForeignKeys	/usr/include/sqlucode.h	/^#define SQLForeignKeys	/;"	d
SQLForeignKeysA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLForeignKeysA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szPkCatalogName, SQLSMALLINT cbPkCatalogName, SQLCHAR * szPkSchemaName, SQLSMALLINT cbPkSchemaName, SQLCHAR * szPkTableName, SQLSMALLINT cbPkTableName, SQLCHAR * szFkCatalogName, SQLSMALLINT cbFkCatalogName, SQLCHAR * szFkSchemaName, SQLSMALLINT cbFkSchemaName, SQLCHAR * szFkTableName, SQLSMALLINT cbFkTableName)
SQLForeignKeysW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLForeignKeysW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szPkCatalogName, SQLSMALLINT cbPkCatalogName, SQLWCHAR * szPkSchemaName, SQLSMALLINT cbPkSchemaName, SQLWCHAR * szPkTableName, SQLSMALLINT cbPkTableName, SQLWCHAR * szFkCatalogName, SQLSMALLINT cbFkCatalogName, SQLWCHAR * szFkSchemaName, SQLSMALLINT cbFkSchemaName, SQLWCHAR * szFkTableName, SQLSMALLINT cbFkTableName)
SQLFreeConnect	/usr/include/sql.h	/^SQLRETURN SQL_API SQLFreeConnect ($/;"	p	signature:( SQLHDBC ConnectionHandle)
SQLFreeEnv	/usr/include/sql.h	/^SQLRETURN SQL_API SQLFreeEnv ($/;"	p	signature:( SQLHENV EnvironmentHandle)
SQLFreeHandle	/usr/include/sql.h	/^SQLRETURN SQL_API SQLFreeHandle ($/;"	p	signature:( SQLSMALLINT HandleType, SQLHANDLE Handle)
SQLFreeStmt	/usr/include/sql.h	/^SQLRETURN SQL_API SQLFreeStmt ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT Option)
SQLGUID	/usr/include/sqltypes.h	/^SQLGUID;$/;"	t	typeref:struct:tagSQLGUID
SQLGUID	/usr/include/sqltypes.h	/^typedef GUID 			SQLGUID;$/;"	t
SQLGetAvailableDrivers	/usr/include/odbcinst.h	/^#define  SQLGetAvailableDrivers /;"	d
SQLGetAvailableDrivers	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLGetAvailableDrivers ($/;"	p	signature:( LPCSTR lpszInfFile, LPSTR lpszBuf, WORD cbBufMax, WORD * pcbBufOut)
SQLGetAvailableDriversW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLGetAvailableDriversW ($/;"	p	signature:( LPCWSTR lpszInfFile, LPWSTR lpszBuf, WORD cbBufMax, WORD * pcbBufOut)
SQLGetConfigMode	/usr/include/odbcinst.h	/^SQLGetConfigMode ($/;"	p	signature:( UWORD* pwConfigMode)
SQLGetConnectAttr	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetConnectAttr ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER * StringLength)
SQLGetConnectAttr	/usr/include/sqlucode.h	/^#define SQLGetConnectAttr	/;"	d
SQLGetConnectAttrA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetConnectAttrA ($/;"	p	signature:( SQLHDBC hdbc, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValueMax, SQLINTEGER * pcbValue)
SQLGetConnectAttrW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetConnectAttrW ($/;"	p	signature:( SQLHDBC hdbc, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValueMax, SQLINTEGER * pcbValue)
SQLGetConnectOption	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetConnectOption ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLUSMALLINT Option, SQLPOINTER Value)
SQLGetConnectOption	/usr/include/sqlucode.h	/^#define SQLGetConnectOption	/;"	d
SQLGetConnectOptionA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetConnectOptionA ($/;"	p	signature:( SQLHDBC hdbc, SQLUSMALLINT fOption, SQLPOINTER pvParam)
SQLGetConnectOptionW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetConnectOptionW ($/;"	p	signature:( SQLHDBC hdbc, SQLUSMALLINT fOption, SQLPOINTER pvParam)
SQLGetCursorName	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetCursorName ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * CursorName, SQLSMALLINT BufferLength, SQLSMALLINT * NameLength)
SQLGetCursorName	/usr/include/sqlucode.h	/^#define SQLGetCursorName	/;"	d
SQLGetCursorNameA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetCursorNameA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCursor, SQLSMALLINT cbCursorMax, SQLSMALLINT * pcbCursor)
SQLGetCursorNameW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetCursorNameW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCursor, SQLSMALLINT cbCursorMax, SQLSMALLINT * pcbCursor)
SQLGetData	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetData ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType, SQLPOINTER TargetValue, SQLLEN BufferLength, SQLLEN * StrLen_or_Ind)
SQLGetDescField	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetDescField ($/;"	p	signature:( SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER * StringLength)
SQLGetDescField	/usr/include/sqlucode.h	/^#define SQLGetDescField	/;"	d
SQLGetDescFieldA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDescFieldA ($/;"	p	signature:( SQLHDESC hdesc, SQLSMALLINT iRecord, SQLSMALLINT iField, SQLPOINTER rgbValue, SQLINTEGER cbValueMax, SQLINTEGER * pcbValue)
SQLGetDescFieldW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDescFieldW ($/;"	p	signature:( SQLHDESC hdesc, SQLSMALLINT iRecord, SQLSMALLINT iField, SQLPOINTER rgbValue, SQLINTEGER cbValueMax, SQLINTEGER * pcbValue)
SQLGetDescRec	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetDescRec ($/;"	p	signature:( SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLCHAR * Name, SQLSMALLINT BufferLength, SQLSMALLINT * StringLength, SQLSMALLINT * Type, SQLSMALLINT * SubType, SQLLEN * Length, SQLSMALLINT * Precision, SQLSMALLINT * Scale, SQLSMALLINT * Nullable)
SQLGetDescRec	/usr/include/sqlucode.h	/^#define SQLGetDescRec	/;"	d
SQLGetDescRecA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDescRecA ($/;"	p	signature:( SQLHDESC hdesc, SQLSMALLINT iRecord, SQLCHAR * szName, SQLSMALLINT cbNameMax, SQLSMALLINT * pcbName, SQLSMALLINT * pfType, SQLSMALLINT * pfSubType, SQLLEN * pLength, SQLSMALLINT * pPrecision, SQLSMALLINT * pScale, SQLSMALLINT * pNullable)
SQLGetDescRecW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDescRecW ($/;"	p	signature:( SQLHDESC hdesc, SQLSMALLINT iRecord, SQLWCHAR * szName, SQLSMALLINT cbNameMax, SQLSMALLINT * pcbName, SQLSMALLINT * pfType, SQLSMALLINT * pfSubType, SQLLEN * pLength, SQLSMALLINT * pPrecision, SQLSMALLINT * pScale, SQLSMALLINT * pNullable)
SQLGetDiagField	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetDiagField ($/;"	p	signature:( SQLSMALLINT HandleType, SQLHANDLE Handle, SQLSMALLINT RecNumber, SQLSMALLINT DiagIdentifier, SQLPOINTER DiagInfo, SQLSMALLINT BufferLength, SQLSMALLINT * StringLength)
SQLGetDiagField	/usr/include/sqlucode.h	/^#define SQLGetDiagField	/;"	d
SQLGetDiagFieldA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDiagFieldA ($/;"	p	signature:( SQLSMALLINT fHandleType, SQLHANDLE handle, SQLSMALLINT iRecord, SQLSMALLINT fDiagField, SQLPOINTER rgbDiagInfo, SQLSMALLINT cbDiagInfoMax, SQLSMALLINT * pcbDiagInfo)
SQLGetDiagFieldW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDiagFieldW ($/;"	p	signature:( SQLSMALLINT fHandleType, SQLHANDLE handle, SQLSMALLINT iRecord, SQLSMALLINT fDiagField, SQLPOINTER rgbDiagInfo, SQLSMALLINT cbDiagInfoMax, SQLSMALLINT * pcbDiagInfo)
SQLGetDiagRec	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetDiagRec ($/;"	p	signature:( SQLSMALLINT HandleType, SQLHANDLE Handle, SQLSMALLINT RecNumber, SQLCHAR * Sqlstate, SQLINTEGER * NativeError, SQLCHAR * MessageText, SQLSMALLINT BufferLength, SQLSMALLINT * TextLength)
SQLGetDiagRec	/usr/include/sqlucode.h	/^#define SQLGetDiagRec	/;"	d
SQLGetDiagRecA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDiagRecA ($/;"	p	signature:( SQLSMALLINT fHandleType, SQLHANDLE handle, SQLSMALLINT iRecord, SQLCHAR * szSqlState, SQLINTEGER * pfNativeError, SQLCHAR * szErrorMsg, SQLSMALLINT cbErrorMsgMax, SQLSMALLINT * pcbErrorMsg)
SQLGetDiagRecW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetDiagRecW ($/;"	p	signature:( SQLSMALLINT fHandleType, SQLHANDLE handle, SQLSMALLINT iRecord, SQLWCHAR * szSqlState, SQLINTEGER * pfNativeError, SQLWCHAR * szErrorMsg, SQLSMALLINT cbErrorMsgMax, SQLSMALLINT * pcbErrorMsg)
SQLGetEnvAttr	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetEnvAttr ($/;"	p	signature:( SQLHENV EnvironmentHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER * StringLength)
SQLGetFunctions	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetFunctions ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLUSMALLINT FunctionId, SQLUSMALLINT * Supported)
SQLGetInfo	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetInfo ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLUSMALLINT InfoType, SQLPOINTER InfoValue, SQLSMALLINT BufferLength, SQLSMALLINT * StringLength)
SQLGetInfo	/usr/include/sqlucode.h	/^#define SQLGetInfo	/;"	d
SQLGetInfoA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetInfoA ($/;"	p	signature:( SQLHDBC hdbc, SQLUSMALLINT fInfoType, SQLPOINTER rgbInfoValue, SQLSMALLINT cbInfoValueMax, SQLSMALLINT * pcbInfoValue)
SQLGetInfoW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetInfoW ($/;"	p	signature:( SQLHDBC hdbc, SQLUSMALLINT fInfoType, SQLPOINTER rgbInfoValue, SQLSMALLINT cbInfoValueMax, SQLSMALLINT * pcbInfoValue)
SQLGetInstalledDrivers	/usr/include/odbcinst.h	/^#define  SQLGetInstalledDrivers /;"	d
SQLGetInstalledDrivers	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLGetInstalledDrivers ($/;"	p	signature:( LPSTR lpszBuf, WORD cbBufMax, WORD * pcbBufOut)
SQLGetInstalledDriversW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLGetInstalledDriversW ($/;"	p	signature:( LPWSTR lpszBuf, WORD cbBufMax, WORD * pcbBufOut)
SQLGetPrivateProfileString	/usr/include/odbcinst.h	/^#define	 SQLGetPrivateProfileString /;"	d
SQLGetPrivateProfileString	/usr/include/odbcinst.h	/^int INSTAPI SQLGetPrivateProfileString ($/;"	p	signature:( LPCSTR lpszSection, LPCSTR lpszEntry, LPCSTR lpszDefault, LPSTR lpszRetBuffer, int cbRetBuffer, LPCSTR lpszFilename)
SQLGetPrivateProfileStringW	/usr/include/odbcinst.h	/^int INSTAPI SQLGetPrivateProfileStringW ($/;"	p	signature:( LPCWSTR lpszSection, LPCWSTR lpszEntry, LPCWSTR lpszDefault, LPWSTR lpszRetBuffer, int cbRetBuffer, LPCWSTR lpszFilename)
SQLGetStmtAttr	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetStmtAttr ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER BufferLength, SQLINTEGER * StringLength)
SQLGetStmtAttr	/usr/include/sqlucode.h	/^#define SQLGetStmtAttr	/;"	d
SQLGetStmtAttrA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetStmtAttrA ($/;"	p	signature:( SQLHSTMT hstmt, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValueMax, SQLINTEGER * pcbValue)
SQLGetStmtAttrW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetStmtAttrW ($/;"	p	signature:( SQLHSTMT hstmt, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValueMax, SQLINTEGER * pcbValue)
SQLGetStmtOption	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetStmtOption ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT Option, SQLPOINTER Value)
SQLGetTranslator	/usr/include/odbcinst.h	/^#define  SQLGetTranslator /;"	d
SQLGetTranslator	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLGetTranslator ($/;"	p	signature:( HWND hwnd, LPSTR lpszName, WORD cbNameMax, WORD * pcbNameOut, LPSTR lpszPath, WORD cbPathMax, WORD * pcbPathOut, DWORD * pvOption)
SQLGetTranslatorW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLGetTranslatorW ($/;"	p	signature:( HWND hwnd, LPWSTR lpszName, WORD cbNameMax, WORD * pcbNameOut, LPWSTR lpszPath, WORD cbPathMax, WORD * pcbPathOut, DWORD * pvOption)
SQLGetTypeInfo	/usr/include/sql.h	/^SQLRETURN SQL_API SQLGetTypeInfo ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLSMALLINT DataType)
SQLGetTypeInfo	/usr/include/sqlucode.h	/^#define SQLGetTypeInfo	/;"	d
SQLGetTypeInfoA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetTypeInfoA ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLSMALLINT DataType)
SQLGetTypeInfoW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLGetTypeInfoW ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLSMALLINT DataType)
SQLHANDLE	/usr/include/sqltypes.h	/^typedef void *			SQLHANDLE;$/;"	t
SQLHDBC	/usr/include/sqltypes.h	/^typedef SQLHANDLE		SQLHDBC;$/;"	t
SQLHDESC	/usr/include/sqltypes.h	/^typedef SQLHANDLE		SQLHDESC;$/;"	t
SQLHENV	/usr/include/sqltypes.h	/^typedef SQLHANDLE		SQLHENV;$/;"	t
SQLHSTMT	/usr/include/sqltypes.h	/^typedef SQLHANDLE		SQLHSTMT;$/;"	t
SQLHWND	/usr/include/sqltypes.h	/^typedef HWND			SQLHWND;$/;"	t
SQLHWND	/usr/include/sqltypes.h	/^typedef HWND 			SQLHWND;$/;"	t
SQLHWND	/usr/include/sqltypes.h	/^typedef SQLPOINTER 		SQLHWND;$/;"	t
SQLINTEGER	/usr/include/sqltypes.h	/^typedef signed int		SQLINTEGER;$/;"	t
SQLINTEGER	/usr/include/sqltypes.h	/^typedef signed long		SQLINTEGER;$/;"	t
SQLINTERVAL	/usr/include/sqltypes.h	/^SQLINTERVAL;$/;"	t	typeref:enum:__anon107
SQLITE3_TEXT	/usr/include/sqlite3.h	/^#define SQLITE3_TEXT /;"	d
SQLITE_ABORT	/usr/include/sqlite3.h	/^#define SQLITE_ABORT /;"	d
SQLITE_ACCESS_EXISTS	/usr/include/sqlite3.h	/^#define SQLITE_ACCESS_EXISTS /;"	d
SQLITE_ACCESS_READ	/usr/include/sqlite3.h	/^#define SQLITE_ACCESS_READ /;"	d
SQLITE_ACCESS_READWRITE	/usr/include/sqlite3.h	/^#define SQLITE_ACCESS_READWRITE /;"	d
SQLITE_ALTER_TABLE	/usr/include/sqlite3.h	/^#define SQLITE_ALTER_TABLE /;"	d
SQLITE_ANALYZE	/usr/include/sqlite3.h	/^#define SQLITE_ANALYZE /;"	d
SQLITE_ANY	/usr/include/sqlite3.h	/^#define SQLITE_ANY /;"	d
SQLITE_ATTACH	/usr/include/sqlite3.h	/^#define SQLITE_ATTACH /;"	d
SQLITE_AUTH	/usr/include/sqlite3.h	/^#define SQLITE_AUTH /;"	d
SQLITE_BLOB	/usr/include/sqlite3.h	/^#define SQLITE_BLOB /;"	d
SQLITE_BUSY	/usr/include/sqlite3.h	/^#define SQLITE_BUSY /;"	d
SQLITE_CANTOPEN	/usr/include/sqlite3.h	/^#define SQLITE_CANTOPEN /;"	d
SQLITE_CONFIG_GETMALLOC	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_GETMALLOC /;"	d
SQLITE_CONFIG_GETMUTEX	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_GETMUTEX /;"	d
SQLITE_CONFIG_GETPCACHE	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_GETPCACHE /;"	d
SQLITE_CONFIG_HEAP	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_HEAP /;"	d
SQLITE_CONFIG_LOOKASIDE	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_LOOKASIDE /;"	d
SQLITE_CONFIG_MALLOC	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_MALLOC /;"	d
SQLITE_CONFIG_MEMSTATUS	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_MEMSTATUS /;"	d
SQLITE_CONFIG_MULTITHREAD	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_MULTITHREAD /;"	d
SQLITE_CONFIG_MUTEX	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_MUTEX /;"	d
SQLITE_CONFIG_PAGECACHE	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_PAGECACHE /;"	d
SQLITE_CONFIG_PCACHE	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_PCACHE /;"	d
SQLITE_CONFIG_SCRATCH	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_SCRATCH /;"	d
SQLITE_CONFIG_SERIALIZED	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_SERIALIZED /;"	d
SQLITE_CONFIG_SINGLETHREAD	/usr/include/sqlite3.h	/^#define SQLITE_CONFIG_SINGLETHREAD /;"	d
SQLITE_CONSTRAINT	/usr/include/sqlite3.h	/^#define SQLITE_CONSTRAINT /;"	d
SQLITE_COPY	/usr/include/sqlite3.h	/^#define SQLITE_COPY /;"	d
SQLITE_CORRUPT	/usr/include/sqlite3.h	/^#define SQLITE_CORRUPT /;"	d
SQLITE_CREATE_INDEX	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_INDEX /;"	d
SQLITE_CREATE_TABLE	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_TABLE /;"	d
SQLITE_CREATE_TEMP_INDEX	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_TEMP_INDEX /;"	d
SQLITE_CREATE_TEMP_TABLE	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_TEMP_TABLE /;"	d
SQLITE_CREATE_TEMP_TRIGGER	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_TEMP_TRIGGER /;"	d
SQLITE_CREATE_TEMP_VIEW	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_TEMP_VIEW /;"	d
SQLITE_CREATE_TRIGGER	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_TRIGGER /;"	d
SQLITE_CREATE_VIEW	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_VIEW /;"	d
SQLITE_CREATE_VTABLE	/usr/include/sqlite3.h	/^#define SQLITE_CREATE_VTABLE /;"	d
SQLITE_DBCONFIG_LOOKASIDE	/usr/include/sqlite3.h	/^#define SQLITE_DBCONFIG_LOOKASIDE /;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	/usr/include/sqlite3.h	/^#define SQLITE_DBSTATUS_LOOKASIDE_USED /;"	d
SQLITE_DELETE	/usr/include/sqlite3.h	/^#define SQLITE_DELETE /;"	d
SQLITE_DENY	/usr/include/sqlite3.h	/^#define SQLITE_DENY /;"	d
SQLITE_DEPRECATED	/usr/include/sqlite3.h	/^#define SQLITE_DEPRECATED$/;"	d
SQLITE_DETACH	/usr/include/sqlite3.h	/^#define SQLITE_DETACH /;"	d
SQLITE_DONE	/usr/include/sqlite3.h	/^#define SQLITE_DONE /;"	d
SQLITE_DROP_INDEX	/usr/include/sqlite3.h	/^#define SQLITE_DROP_INDEX /;"	d
SQLITE_DROP_TABLE	/usr/include/sqlite3.h	/^#define SQLITE_DROP_TABLE /;"	d
SQLITE_DROP_TEMP_INDEX	/usr/include/sqlite3.h	/^#define SQLITE_DROP_TEMP_INDEX /;"	d
SQLITE_DROP_TEMP_TABLE	/usr/include/sqlite3.h	/^#define SQLITE_DROP_TEMP_TABLE /;"	d
SQLITE_DROP_TEMP_TRIGGER	/usr/include/sqlite3.h	/^#define SQLITE_DROP_TEMP_TRIGGER /;"	d
SQLITE_DROP_TEMP_VIEW	/usr/include/sqlite3.h	/^#define SQLITE_DROP_TEMP_VIEW /;"	d
SQLITE_DROP_TRIGGER	/usr/include/sqlite3.h	/^#define SQLITE_DROP_TRIGGER /;"	d
SQLITE_DROP_VIEW	/usr/include/sqlite3.h	/^#define SQLITE_DROP_VIEW /;"	d
SQLITE_DROP_VTABLE	/usr/include/sqlite3.h	/^#define SQLITE_DROP_VTABLE /;"	d
SQLITE_EMPTY	/usr/include/sqlite3.h	/^#define SQLITE_EMPTY /;"	d
SQLITE_ERROR	/usr/include/sqlite3.h	/^#define SQLITE_ERROR /;"	d
SQLITE_EXPERIMENTAL	/usr/include/sqlite3.h	/^#define SQLITE_EXPERIMENTAL$/;"	d
SQLITE_EXTENSION_INIT1	/usr/include/sqlite3ext.h	/^#define SQLITE_EXTENSION_INIT1 /;"	d
SQLITE_EXTENSION_INIT2	/usr/include/sqlite3ext.h	/^#define SQLITE_EXTENSION_INIT2(/;"	d
SQLITE_EXTERN	/usr/include/sqlite3.h	/^# define SQLITE_EXTERN /;"	d
SQLITE_FCNTL_LOCKSTATE	/usr/include/sqlite3.h	/^#define SQLITE_FCNTL_LOCKSTATE /;"	d
SQLITE_FLOAT	/usr/include/sqlite3.h	/^#define SQLITE_FLOAT /;"	d
SQLITE_FORMAT	/usr/include/sqlite3.h	/^#define SQLITE_FORMAT /;"	d
SQLITE_FULL	/usr/include/sqlite3.h	/^#define SQLITE_FULL /;"	d
SQLITE_FUNCTION	/usr/include/sqlite3.h	/^#define SQLITE_FUNCTION /;"	d
SQLITE_GET_LOCKPROXYFILE	/usr/include/sqlite3.h	/^#define SQLITE_GET_LOCKPROXYFILE /;"	d
SQLITE_IGNORE	/usr/include/sqlite3.h	/^#define SQLITE_IGNORE /;"	d
SQLITE_INDEX_CONSTRAINT_EQ	/usr/include/sqlite3.h	/^#define SQLITE_INDEX_CONSTRAINT_EQ /;"	d
SQLITE_INDEX_CONSTRAINT_GE	/usr/include/sqlite3.h	/^#define SQLITE_INDEX_CONSTRAINT_GE /;"	d
SQLITE_INDEX_CONSTRAINT_GT	/usr/include/sqlite3.h	/^#define SQLITE_INDEX_CONSTRAINT_GT /;"	d
SQLITE_INDEX_CONSTRAINT_LE	/usr/include/sqlite3.h	/^#define SQLITE_INDEX_CONSTRAINT_LE /;"	d
SQLITE_INDEX_CONSTRAINT_LT	/usr/include/sqlite3.h	/^#define SQLITE_INDEX_CONSTRAINT_LT /;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	/usr/include/sqlite3.h	/^#define SQLITE_INDEX_CONSTRAINT_MATCH /;"	d
SQLITE_INSERT	/usr/include/sqlite3.h	/^#define SQLITE_INSERT /;"	d
SQLITE_INTEGER	/usr/include/sqlite3.h	/^#define SQLITE_INTEGER /;"	d
SQLITE_INTERNAL	/usr/include/sqlite3.h	/^#define SQLITE_INTERNAL /;"	d
SQLITE_INTERRUPT	/usr/include/sqlite3.h	/^#define SQLITE_INTERRUPT /;"	d
SQLITE_IOCAP_ATOMIC	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC /;"	d
SQLITE_IOCAP_ATOMIC16K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC16K /;"	d
SQLITE_IOCAP_ATOMIC1K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC1K /;"	d
SQLITE_IOCAP_ATOMIC2K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC2K /;"	d
SQLITE_IOCAP_ATOMIC32K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC32K /;"	d
SQLITE_IOCAP_ATOMIC4K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC4K /;"	d
SQLITE_IOCAP_ATOMIC512	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC512 /;"	d
SQLITE_IOCAP_ATOMIC64K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC64K /;"	d
SQLITE_IOCAP_ATOMIC8K	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_ATOMIC8K /;"	d
SQLITE_IOCAP_SAFE_APPEND	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_SAFE_APPEND /;"	d
SQLITE_IOCAP_SEQUENTIAL	/usr/include/sqlite3.h	/^#define SQLITE_IOCAP_SEQUENTIAL /;"	d
SQLITE_IOERR	/usr/include/sqlite3.h	/^#define SQLITE_IOERR /;"	d
SQLITE_IOERR_ACCESS	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_ACCESS /;"	d
SQLITE_IOERR_BLOCKED	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_BLOCKED /;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_CHECKRESERVEDLOCK /;"	d
SQLITE_IOERR_CLOSE	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_CLOSE /;"	d
SQLITE_IOERR_DELETE	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_DELETE /;"	d
SQLITE_IOERR_DIR_CLOSE	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_DIR_CLOSE /;"	d
SQLITE_IOERR_DIR_FSYNC	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_DIR_FSYNC /;"	d
SQLITE_IOERR_FSTAT	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_FSTAT /;"	d
SQLITE_IOERR_FSYNC	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_FSYNC /;"	d
SQLITE_IOERR_LOCK	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_LOCK /;"	d
SQLITE_IOERR_NOMEM	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_NOMEM /;"	d
SQLITE_IOERR_RDLOCK	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_RDLOCK /;"	d
SQLITE_IOERR_READ	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_READ /;"	d
SQLITE_IOERR_SHORT_READ	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_SHORT_READ /;"	d
SQLITE_IOERR_TRUNCATE	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_TRUNCATE /;"	d
SQLITE_IOERR_UNLOCK	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_UNLOCK /;"	d
SQLITE_IOERR_WRITE	/usr/include/sqlite3.h	/^#define SQLITE_IOERR_WRITE /;"	d
SQLITE_LAST_ERRNO	/usr/include/sqlite3.h	/^#define SQLITE_LAST_ERRNO /;"	d
SQLITE_LIMIT_ATTACHED	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_ATTACHED /;"	d
SQLITE_LIMIT_COLUMN	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_COLUMN /;"	d
SQLITE_LIMIT_COMPOUND_SELECT	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_COMPOUND_SELECT /;"	d
SQLITE_LIMIT_EXPR_DEPTH	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_EXPR_DEPTH /;"	d
SQLITE_LIMIT_FUNCTION_ARG	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_FUNCTION_ARG /;"	d
SQLITE_LIMIT_LENGTH	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_LENGTH /;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_LIKE_PATTERN_LENGTH /;"	d
SQLITE_LIMIT_SQL_LENGTH	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_SQL_LENGTH /;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_VARIABLE_NUMBER /;"	d
SQLITE_LIMIT_VDBE_OP	/usr/include/sqlite3.h	/^#define SQLITE_LIMIT_VDBE_OP /;"	d
SQLITE_LOCKED	/usr/include/sqlite3.h	/^#define SQLITE_LOCKED /;"	d
SQLITE_LOCKED_SHAREDCACHE	/usr/include/sqlite3.h	/^#define SQLITE_LOCKED_SHAREDCACHE /;"	d
SQLITE_LOCK_EXCLUSIVE	/usr/include/sqlite3.h	/^#define SQLITE_LOCK_EXCLUSIVE /;"	d
SQLITE_LOCK_NONE	/usr/include/sqlite3.h	/^#define SQLITE_LOCK_NONE /;"	d
SQLITE_LOCK_PENDING	/usr/include/sqlite3.h	/^#define SQLITE_LOCK_PENDING /;"	d
SQLITE_LOCK_RESERVED	/usr/include/sqlite3.h	/^#define SQLITE_LOCK_RESERVED /;"	d
SQLITE_LOCK_SHARED	/usr/include/sqlite3.h	/^#define SQLITE_LOCK_SHARED /;"	d
SQLITE_MISMATCH	/usr/include/sqlite3.h	/^#define SQLITE_MISMATCH /;"	d
SQLITE_MISUSE	/usr/include/sqlite3.h	/^#define SQLITE_MISUSE /;"	d
SQLITE_MUTEX_FAST	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_FAST /;"	d
SQLITE_MUTEX_RECURSIVE	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_RECURSIVE /;"	d
SQLITE_MUTEX_STATIC_LRU	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_LRU /;"	d
SQLITE_MUTEX_STATIC_LRU2	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_LRU2 /;"	d
SQLITE_MUTEX_STATIC_MASTER	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_MASTER /;"	d
SQLITE_MUTEX_STATIC_MEM	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_MEM /;"	d
SQLITE_MUTEX_STATIC_MEM2	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_MEM2 /;"	d
SQLITE_MUTEX_STATIC_OPEN	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_OPEN /;"	d
SQLITE_MUTEX_STATIC_PRNG	/usr/include/sqlite3.h	/^#define SQLITE_MUTEX_STATIC_PRNG /;"	d
SQLITE_NOLFS	/usr/include/sqlite3.h	/^#define SQLITE_NOLFS /;"	d
SQLITE_NOMEM	/usr/include/sqlite3.h	/^#define SQLITE_NOMEM /;"	d
SQLITE_NOTADB	/usr/include/sqlite3.h	/^#define SQLITE_NOTADB /;"	d
SQLITE_NOTFOUND	/usr/include/sqlite3.h	/^#define SQLITE_NOTFOUND /;"	d
SQLITE_NULL	/usr/include/sqlite3.h	/^#define SQLITE_NULL /;"	d
SQLITE_OK	/usr/include/sqlite3.h	/^#define SQLITE_OK /;"	d
SQLITE_OPEN_AUTOPROXY	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_AUTOPROXY /;"	d
SQLITE_OPEN_CREATE	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_CREATE /;"	d
SQLITE_OPEN_DELETEONCLOSE	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_DELETEONCLOSE /;"	d
SQLITE_OPEN_EXCLUSIVE	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_EXCLUSIVE /;"	d
SQLITE_OPEN_FULLMUTEX	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_FULLMUTEX /;"	d
SQLITE_OPEN_MAIN_DB	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_MAIN_DB /;"	d
SQLITE_OPEN_MAIN_JOURNAL	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_MAIN_JOURNAL /;"	d
SQLITE_OPEN_MASTER_JOURNAL	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_MASTER_JOURNAL /;"	d
SQLITE_OPEN_NOMUTEX	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_NOMUTEX /;"	d
SQLITE_OPEN_READONLY	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_READONLY /;"	d
SQLITE_OPEN_READWRITE	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_READWRITE /;"	d
SQLITE_OPEN_SUBJOURNAL	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_SUBJOURNAL /;"	d
SQLITE_OPEN_TEMP_DB	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_TEMP_DB /;"	d
SQLITE_OPEN_TEMP_JOURNAL	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_TEMP_JOURNAL /;"	d
SQLITE_OPEN_TRANSIENT_DB	/usr/include/sqlite3.h	/^#define SQLITE_OPEN_TRANSIENT_DB /;"	d
SQLITE_PERM	/usr/include/sqlite3.h	/^#define SQLITE_PERM /;"	d
SQLITE_PRAGMA	/usr/include/sqlite3.h	/^#define SQLITE_PRAGMA /;"	d
SQLITE_PROTOCOL	/usr/include/sqlite3.h	/^#define SQLITE_PROTOCOL /;"	d
SQLITE_RANGE	/usr/include/sqlite3.h	/^#define SQLITE_RANGE /;"	d
SQLITE_READ	/usr/include/sqlite3.h	/^#define SQLITE_READ /;"	d
SQLITE_READONLY	/usr/include/sqlite3.h	/^#define SQLITE_READONLY /;"	d
SQLITE_REINDEX	/usr/include/sqlite3.h	/^#define SQLITE_REINDEX /;"	d
SQLITE_ROW	/usr/include/sqlite3.h	/^#define SQLITE_ROW /;"	d
SQLITE_SAVEPOINT	/usr/include/sqlite3.h	/^#define SQLITE_SAVEPOINT /;"	d
SQLITE_SCHEMA	/usr/include/sqlite3.h	/^#define SQLITE_SCHEMA /;"	d
SQLITE_SELECT	/usr/include/sqlite3.h	/^#define SQLITE_SELECT /;"	d
SQLITE_SET_LOCKPROXYFILE	/usr/include/sqlite3.h	/^#define SQLITE_SET_LOCKPROXYFILE /;"	d
SQLITE_STATIC	/usr/include/sqlite3.h	/^#define SQLITE_STATIC /;"	d
SQLITE_STATUS_MALLOC_SIZE	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_MALLOC_SIZE /;"	d
SQLITE_STATUS_MEMORY_USED	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_MEMORY_USED /;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_PAGECACHE_OVERFLOW /;"	d
SQLITE_STATUS_PAGECACHE_SIZE	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_PAGECACHE_SIZE /;"	d
SQLITE_STATUS_PAGECACHE_USED	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_PAGECACHE_USED /;"	d
SQLITE_STATUS_PARSER_STACK	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_PARSER_STACK /;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_SCRATCH_OVERFLOW /;"	d
SQLITE_STATUS_SCRATCH_SIZE	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_SCRATCH_SIZE /;"	d
SQLITE_STATUS_SCRATCH_USED	/usr/include/sqlite3.h	/^#define SQLITE_STATUS_SCRATCH_USED /;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	/usr/include/sqlite3.h	/^#define SQLITE_STMTSTATUS_FULLSCAN_STEP /;"	d
SQLITE_STMTSTATUS_SORT	/usr/include/sqlite3.h	/^#define SQLITE_STMTSTATUS_SORT /;"	d
SQLITE_SYNC_DATAONLY	/usr/include/sqlite3.h	/^#define SQLITE_SYNC_DATAONLY /;"	d
SQLITE_SYNC_FULL	/usr/include/sqlite3.h	/^#define SQLITE_SYNC_FULL /;"	d
SQLITE_SYNC_NORMAL	/usr/include/sqlite3.h	/^#define SQLITE_SYNC_NORMAL /;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS /;"	d
SQLITE_TESTCTRL_BITVEC_TEST	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_BITVEC_TEST /;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_FAULT_INSTALL /;"	d
SQLITE_TESTCTRL_PENDING_BYTE	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_PENDING_BYTE /;"	d
SQLITE_TESTCTRL_PRNG_RESET	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_PRNG_RESET /;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_PRNG_RESTORE /;"	d
SQLITE_TESTCTRL_PRNG_SAVE	/usr/include/sqlite3.h	/^#define SQLITE_TESTCTRL_PRNG_SAVE /;"	d
SQLITE_TEXT	/usr/include/sqlite3.h	/^# define SQLITE_TEXT /;"	d
SQLITE_TEXT	/usr/include/sqlite3.h	/^# undef SQLITE_TEXT$/;"	d
SQLITE_TOOBIG	/usr/include/sqlite3.h	/^#define SQLITE_TOOBIG /;"	d
SQLITE_TRANSACTION	/usr/include/sqlite3.h	/^#define SQLITE_TRANSACTION /;"	d
SQLITE_TRANSIENT	/usr/include/sqlite3.h	/^#define SQLITE_TRANSIENT /;"	d
SQLITE_UPDATE	/usr/include/sqlite3.h	/^#define SQLITE_UPDATE /;"	d
SQLITE_UTF16	/usr/include/sqlite3.h	/^#define SQLITE_UTF16 /;"	d
SQLITE_UTF16BE	/usr/include/sqlite3.h	/^#define SQLITE_UTF16BE /;"	d
SQLITE_UTF16LE	/usr/include/sqlite3.h	/^#define SQLITE_UTF16LE /;"	d
SQLITE_UTF16_ALIGNED	/usr/include/sqlite3.h	/^#define SQLITE_UTF16_ALIGNED /;"	d
SQLITE_UTF8	/usr/include/sqlite3.h	/^#define SQLITE_UTF8 /;"	d
SQLITE_VERSION	/usr/include/sqlite3.h	/^# undef SQLITE_VERSION$/;"	d
SQLITE_VERSION	/usr/include/sqlite3.h	/^#define SQLITE_VERSION /;"	d
SQLITE_VERSION_NUMBER	/usr/include/sqlite3.h	/^# undef SQLITE_VERSION_NUMBER$/;"	d
SQLITE_VERSION_NUMBER	/usr/include/sqlite3.h	/^#define SQLITE_VERSION_NUMBER /;"	d
SQLInstallDriver	/usr/include/odbcinst.h	/^#define  SQLInstallDriver /;"	d
SQLInstallDriver	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallDriver ($/;"	p	signature:( LPCSTR lpszInfFile, LPCSTR lpszDriver, LPSTR lpszPath, WORD cbPathMax, WORD * pcbPathOut)
SQLInstallDriverEx	/usr/include/odbcinst.h	/^#define  SQLInstallDriverEx /;"	d
SQLInstallDriverEx	/usr/include/odbcinst.h	/^SQLInstallDriverEx ($/;"	p	signature:( LPCSTR lpszDriver, LPCSTR lpszPathIn, LPSTR lpszPathOut, WORD cbPathOutMax, WORD* pcbPathOut, WORD fRequest, LPDWORD lpdwUsageCount)
SQLInstallDriverExW	/usr/include/odbcinst.h	/^SQLInstallDriverExW ($/;"	p	signature:( LPCWSTR lpszDriver, LPCWSTR lpszPathIn, LPWSTR lpszPathOut, WORD cbPathOutMax, WORD* pcbPathOut, WORD fRequest, LPDWORD lpdwUsageCount)
SQLInstallDriverManager	/usr/include/odbcinst.h	/^#define  SQLInstallDriverManager /;"	d
SQLInstallDriverManager	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallDriverManager ($/;"	p	signature:( LPSTR lpszPath, WORD cbPathMax, WORD * pcbPathOut)
SQLInstallDriverManagerW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallDriverManagerW ($/;"	p	signature:( LPWSTR lpszPath, WORD cbPathMax, WORD * pcbPathOut)
SQLInstallDriverW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallDriverW ($/;"	p	signature:( LPCWSTR lpszInfFile, LPCWSTR lpszDriver, LPWSTR lpszPath, WORD cbPathMax, WORD * pcbPathOut)
SQLInstallODBC	/usr/include/odbcinst.h	/^#define  SQLInstallODBC /;"	d
SQLInstallODBC	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallODBC ($/;"	p	signature:( HWND hwndParent, LPCSTR lpszInfFile, LPCSTR lpszSrcPath, LPCSTR lpszDrivers)
SQLInstallODBCW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallODBCW ($/;"	p	signature:( HWND hwndParent, LPCWSTR lpszInfFile, LPCWSTR lpszSrcPath, LPCWSTR lpszDrivers)
SQLInstallTranslator	/usr/include/odbcinst.h	/^#define  SQLInstallTranslator /;"	d
SQLInstallTranslator	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallTranslator ($/;"	p	signature:( LPCSTR lpszInfFile, LPCSTR lpszTranslator, LPCSTR lpszPathIn, LPSTR lpszPathOut, WORD cbPathOutMax, WORD * pcbPathOut, WORD fRequest, LPDWORD lpdwUsageCount)
SQLInstallTranslatorEx	/usr/include/odbcinst.h	/^#define  SQLInstallTranslatorEx /;"	d
SQLInstallTranslatorEx	/usr/include/odbcinst.h	/^SQLInstallTranslatorEx ($/;"	p	signature:( LPCSTR lpszTranslator, LPCSTR lpszPathIn, LPSTR lpszPathOut, WORD cbPathOutMax, WORD* pcbPathOut, WORD fRequest, LPDWORD lpdwUsageCount)
SQLInstallTranslatorExW	/usr/include/odbcinst.h	/^SQLInstallTranslatorExW ($/;"	p	signature:( LPCWSTR lpszTranslator, LPCWSTR lpszPathIn, LPWSTR lpszPathOut, WORD cbPathOutMax, WORD* pcbPathOut, WORD fRequest, LPDWORD lpdwUsageCount)
SQLInstallTranslatorW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLInstallTranslatorW ($/;"	p	signature:( LPCWSTR lpszInfFile, LPCWSTR lpszTranslator, LPCWSTR lpszPathIn, LPWSTR lpszPathOut, WORD cbPathOutMax, WORD * pcbPathOut, WORD fRequest, LPDWORD lpdwUsageCount)
SQLInstallerError	/usr/include/odbcinst.h	/^#define	 SQLInstallerError /;"	d
SQLInstallerError	/usr/include/odbcinst.h	/^SQLInstallerError ($/;"	p	signature:( WORD iError, DWORD* pfErrorCode, LPSTR lpszErrorMsg, WORD cbErrorMsgMax, WORD* pcbErrorMsg)
SQLInstallerErrorW	/usr/include/odbcinst.h	/^SQLInstallerErrorW ($/;"	p	signature:( WORD iError, DWORD* pfErrorCode, LPWSTR lpszErrorMsg, WORD cbErrorMsgMax, WORD* pcbErrorMsg)
SQLLEN	/usr/include/sqltypes.h	/^#define SQLLEN	/;"	d
SQLLEN	/usr/include/sqltypes.h	/^typedef INT64			SQLLEN;$/;"	t
SQLLEN	/usr/include/sqltypes.h	/^typedef long			SQLLEN;$/;"	t
SQLManageDataSources	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLManageDataSources (HWND hwndParent);$/;"	p	signature:(HWND hwndParent)
SQLMoreResults	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLMoreResults ($/;"	p	signature:( SQLHSTMT hstmt)
SQLNUMERIC	/usr/include/sqltypes.h	/^typedef unsigned char		SQLNUMERIC;$/;"	t
SQLNativeSql	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLNativeSql ($/;"	p	signature:( SQLHDBC hdbc, SQLCHAR * szSqlStrIn, SQLINTEGER cbSqlStrIn, SQLCHAR * szSqlStr, SQLINTEGER cbSqlStrMax, SQLINTEGER * pcbSqlStr)
SQLNativeSql	/usr/include/sqlucode.h	/^#define SQLNativeSql	/;"	d
SQLNativeSqlA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLNativeSqlA ($/;"	p	signature:( SQLHDBC hdbc, SQLCHAR * szSqlStrIn, SQLINTEGER cbSqlStrIn, SQLCHAR * szSqlStr, SQLINTEGER cbSqlStrMax, SQLINTEGER * pcbSqlStr)
SQLNativeSqlW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLNativeSqlW ($/;"	p	signature:( SQLHDBC hdbc, SQLWCHAR * szSqlStrIn, SQLINTEGER cbSqlStrIn, SQLWCHAR * szSqlStr, SQLINTEGER cbSqlStrMax, SQLINTEGER * pcbSqlStr)
SQLNumParams	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLNumParams ($/;"	p	signature:( SQLHSTMT hstmt, SQLSMALLINT * pcpar)
SQLNumResultCols	/usr/include/sql.h	/^SQLRETURN SQL_API SQLNumResultCols ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLSMALLINT * ColumnCount)
SQLPOINTER	/usr/include/sqltypes.h	/^typedef void *              	SQLPOINTER;$/;"	t
SQLParamData	/usr/include/sql.h	/^SQLRETURN SQL_API SQLParamData ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLPOINTER * Value)
SQLParamOptions	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLParamOptions ($/;"	p	signature:( SQLHSTMT hstmt, SQLULEN crow, SQLULEN * pirow)
SQLPostInstallerError	/usr/include/odbcinst.h	/^#define	 SQLPostInstallerError /;"	d
SQLPostInstallerError	/usr/include/odbcinst.h	/^SQLPostInstallerError ($/;"	p	signature:( DWORD fErrorCode, LPSTR szErrorMsg)
SQLPostInstallerErrorW	/usr/include/odbcinst.h	/^SQLPostInstallerErrorW ($/;"	p	signature:( DWORD fErrorCode, LPWSTR szErrorMsg)
SQLPrepare	/usr/include/sql.h	/^SQLRETURN SQL_API SQLPrepare ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * StatementText, SQLINTEGER TextLength)
SQLPrepare	/usr/include/sqlucode.h	/^#define SQLPrepare	/;"	d
SQLPrepareA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLPrepareA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szSqlStr, SQLINTEGER cbSqlStr)
SQLPrepareW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLPrepareW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szSqlStr, SQLINTEGER cbSqlStr)
SQLPrimaryKeys	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLPrimaryKeys ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName)
SQLPrimaryKeys	/usr/include/sqlucode.h	/^#define SQLPrimaryKeys	/;"	d
SQLPrimaryKeysA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLPrimaryKeysA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName)
SQLPrimaryKeysW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLPrimaryKeysW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName)
SQLProcedureColumns	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLProcedureColumns ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szProcName, SQLSMALLINT cbProcName, SQLCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLProcedureColumns	/usr/include/sqlucode.h	/^#define SQLProcedureColumns	/;"	d
SQLProcedureColumnsA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLProcedureColumnsA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szProcName, SQLSMALLINT cbProcName, SQLCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLProcedureColumnsW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLProcedureColumnsW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szProcName, SQLSMALLINT cbProcName, SQLWCHAR * szColumnName, SQLSMALLINT cbColumnName)
SQLProcedures	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLProcedures ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szProcName, SQLSMALLINT cbProcName)
SQLProcedures	/usr/include/sqlucode.h	/^#define SQLProcedures	/;"	d
SQLProceduresA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLProceduresA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szProcName, SQLSMALLINT cbProcName)
SQLProceduresW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLProceduresW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szProcName, SQLSMALLINT cbProcName)
SQLPutData	/usr/include/sql.h	/^SQLRETURN SQL_API SQLPutData ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLPOINTER Data, SQLLEN StrLen_or_Ind)
SQLREAL	/usr/include/sqltypes.h	/^typedef float			SQLREAL;$/;"	t
SQLRETURN	/usr/include/sqltypes.h	/^typedef SQLSMALLINT		SQLRETURN;$/;"	t
SQLROWCOUNT	/usr/include/sqltypes.h	/^typedef SQLULEN 		SQLROWCOUNT;$/;"	t
SQLROWOFFSET	/usr/include/sqltypes.h	/^typedef SQLLEN			SQLROWOFFSET;$/;"	t
SQLROWSETSIZE	/usr/include/sqltypes.h	/^typedef SQLULEN 		SQLROWSETSIZE;$/;"	t
SQLReadFileDSN	/usr/include/odbcinst.h	/^#define  SQLReadFileDSN /;"	d
SQLReadFileDSN	/usr/include/odbcinst.h	/^SQLReadFileDSN ($/;"	p	signature:( LPCSTR lpszFileName, LPCSTR lpszAppName, LPCSTR lpszKeyName, LPSTR lpszString, WORD cbString, WORD* pcbString)
SQLReadFileDSNW	/usr/include/odbcinst.h	/^SQLReadFileDSNW ($/;"	p	signature:( LPCWSTR lpszFileName, LPCWSTR lpszAppName, LPCWSTR lpszKeyName, LPWSTR lpszString, WORD cbString, WORD* pcbString)
SQLRemoveDSNFromIni	/usr/include/odbcinst.h	/^#define  SQLRemoveDSNFromIni /;"	d
SQLRemoveDSNFromIni	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveDSNFromIni (LPCSTR lpszDSN);$/;"	p	signature:(LPCSTR lpszDSN)
SQLRemoveDSNFromIniW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveDSNFromIniW (LPCWSTR lpszDSN);$/;"	p	signature:(LPCWSTR lpszDSN)
SQLRemoveDefaultDataSource	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveDefaultDataSource (void);$/;"	p	signature:(void)
SQLRemoveDriver	/usr/include/odbcinst.h	/^#define  SQLRemoveDriver /;"	d
SQLRemoveDriver	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveDriver ($/;"	p	signature:( LPCSTR lpszDriver, BOOL fRemoveDSN, LPDWORD lpdwUsageCount)
SQLRemoveDriverManager	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveDriverManager (LPDWORD lpdwUsageCount);$/;"	p	signature:(LPDWORD lpdwUsageCount)
SQLRemoveDriverW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveDriverW ($/;"	p	signature:( LPCWSTR lpszDriver, BOOL fRemoveDSN, LPDWORD lpdwUsageCount)
SQLRemoveTranslator	/usr/include/odbcinst.h	/^#define  SQLRemoveTranslator /;"	d
SQLRemoveTranslator	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveTranslator ($/;"	p	signature:( LPCSTR lpszTranslator, LPDWORD lpdwUsageCount)
SQLRemoveTranslatorW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLRemoveTranslatorW ($/;"	p	signature:( LPCWSTR lpszTranslator, LPDWORD lpdwUsageCount)
SQLRowCount	/usr/include/sql.h	/^SQLRETURN SQL_API SQLRowCount ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLLEN * RowCount)
SQLSCHAR	/usr/include/sqltypes.h	/^typedef signed char		SQLSCHAR;$/;"	t
SQLSETPOSIROW	/usr/include/sqltypes.h	/^#define SQLSETPOSIROW	/;"	d
SQLSETPOSIROW	/usr/include/sqltypes.h	/^typedef UINT64			SQLSETPOSIROW;$/;"	t
SQLSETPOSIROW	/usr/include/sqltypes.h	/^typedef unsigned short		SQLSETPOSIROW;$/;"	t
SQLSMALLINT	/usr/include/sqltypes.h	/^typedef signed short		SQLSMALLINT;$/;"	t
SQLSetConfigMode	/usr/include/odbcinst.h	/^SQLSetConfigMode ($/;"	p	signature:( UWORD wConfigMode)
SQLSetConnectAttr	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetConnectAttr ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER StringLength)
SQLSetConnectAttr	/usr/include/sqlucode.h	/^#define SQLSetConnectAttr	/;"	d
SQLSetConnectAttrA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetConnectAttrA ($/;"	p	signature:( SQLHDBC hdbc, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValue)
SQLSetConnectAttrW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetConnectAttrW ($/;"	p	signature:( SQLHDBC hdbc, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValue)
SQLSetConnectOption	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetConnectOption ($/;"	p	signature:( SQLHDBC ConnectionHandle, SQLUSMALLINT Option, SQLULEN Value)
SQLSetConnectOption	/usr/include/sqlucode.h	/^#define SQLSetConnectOption	/;"	d
SQLSetConnectOptionA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetConnectOptionA ($/;"	p	signature:( SQLHDBC hdbc, SQLUSMALLINT fOption, SQLULEN vParam)
SQLSetConnectOptionW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetConnectOptionW ($/;"	p	signature:( SQLHDBC hdbc, SQLUSMALLINT fOption, SQLULEN vParam)
SQLSetCursorName	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetCursorName ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * CursorName, SQLSMALLINT NameLength)
SQLSetCursorName	/usr/include/sqlucode.h	/^#define SQLSetCursorName	/;"	d
SQLSetCursorNameA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetCursorNameA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCursor, SQLSMALLINT cbCursor)
SQLSetCursorNameW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetCursorNameW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCursor, SQLSMALLINT cbCursor)
SQLSetDescField	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetDescField ($/;"	p	signature:( SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier, SQLPOINTER Value, SQLINTEGER BufferLength)
SQLSetDescField	/usr/include/sqlucode.h	/^#define SQLSetDescField	/;"	d
SQLSetDescFieldA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetDescFieldA ($/;"	p	signature:( SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier, SQLPOINTER Value, SQLINTEGER BufferLength)
SQLSetDescFieldW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetDescFieldW ($/;"	p	signature:( SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier, SQLPOINTER Value, SQLINTEGER BufferLength)
SQLSetDescRec	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetDescRec ($/;"	p	signature:( SQLHDESC DescriptorHandle, SQLSMALLINT RecNumber, SQLSMALLINT Type, SQLSMALLINT SubType, SQLLEN Length, SQLSMALLINT Precision, SQLSMALLINT Scale, SQLPOINTER Data, SQLLEN * StringLength, SQLLEN * Indicator)
SQLSetEnvAttr	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetEnvAttr ($/;"	p	signature:( SQLHENV EnvironmentHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER StringLength)
SQLSetParam	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetParam ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT ParameterNumber, SQLSMALLINT ValueType, SQLSMALLINT ParameterType, SQLULEN LengthPrecision, SQLSMALLINT ParameterScale, SQLPOINTER ParameterValue, SQLLEN * StrLen_or_Ind)
SQLSetPos	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLSetPos ($/;"	p	signature:( SQLHSTMT hstmt, SQLSETPOSIROW irow, SQLUSMALLINT fOption, SQLUSMALLINT fLock)
SQLSetScrollOptions	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLSetScrollOptions (		\/* Use SQLSetStmtOptions *\/$/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT fConcurrency, SQLLEN crowKeyset, SQLUSMALLINT crowRowset)
SQLSetStmtAttr	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetStmtAttr ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLINTEGER Attribute, SQLPOINTER Value, SQLINTEGER StringLength)
SQLSetStmtAttr	/usr/include/sqlucode.h	/^#define SQLSetStmtAttr	/;"	d
SQLSetStmtAttrA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetStmtAttrA ($/;"	p	signature:( SQLHSTMT hstmt, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValueMax)
SQLSetStmtAttrW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSetStmtAttrW ($/;"	p	signature:( SQLHSTMT hstmt, SQLINTEGER fAttribute, SQLPOINTER rgbValue, SQLINTEGER cbValueMax)
SQLSetStmtOption	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSetStmtOption ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT Option, SQLULEN Value)
SQLSpecialColumns	/usr/include/sql.h	/^SQLRETURN SQL_API SQLSpecialColumns ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLUSMALLINT IdentifierType, SQLCHAR * CatalogName, SQLSMALLINT NameLength1, SQLCHAR * SchemaName, SQLSMALLINT NameLength2, SQLCHAR * TableName, SQLSMALLINT NameLength3, SQLUSMALLINT Scope, SQLUSMALLINT Nullable)
SQLSpecialColumns	/usr/include/sqlucode.h	/^#define SQLSpecialColumns	/;"	d
SQLSpecialColumnsA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSpecialColumnsA ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT fColType, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName, SQLUSMALLINT fScope, SQLUSMALLINT fNullable)
SQLSpecialColumnsW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLSpecialColumnsW ($/;"	p	signature:( SQLHSTMT hstmt, SQLUSMALLINT fColType, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName, SQLUSMALLINT fScope, SQLUSMALLINT fNullable)
SQLStatistics	/usr/include/sql.h	/^SQLRETURN SQL_API SQLStatistics ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * CatalogName, SQLSMALLINT NameLength1, SQLCHAR * SchemaName, SQLSMALLINT NameLength2, SQLCHAR * TableName, SQLSMALLINT NameLength3, SQLUSMALLINT Unique, SQLUSMALLINT Reserved)
SQLStatistics	/usr/include/sqlucode.h	/^#define SQLStatistics	/;"	d
SQLStatisticsA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLStatisticsA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName, SQLUSMALLINT fUnique, SQLUSMALLINT fAccuracy)
SQLStatisticsW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLStatisticsW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName, SQLUSMALLINT fUnique, SQLUSMALLINT fAccuracy)
SQLTCHAR	/usr/include/sqltypes.h	/^typedef SQLCHAR         	SQLTCHAR;$/;"	t
SQLTCHAR	/usr/include/sqltypes.h	/^typedef SQLWCHAR        	SQLTCHAR;$/;"	t
SQLTIME	/usr/include/sqltypes.h	/^typedef unsigned char		SQLTIME;$/;"	t
SQLTIMESTAMP	/usr/include/sqltypes.h	/^typedef unsigned char		SQLTIMESTAMP;$/;"	t
SQLTRANSID	/usr/include/sqltypes.h	/^typedef SQLULEN 		SQLTRANSID;$/;"	t
SQLTablePrivileges	/usr/include/sqlext.h	/^SQLRETURN SQL_API SQLTablePrivileges ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName)
SQLTablePrivileges	/usr/include/sqlucode.h	/^#define SQLTablePrivileges	/;"	d
SQLTablePrivilegesA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLTablePrivilegesA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName)
SQLTablePrivilegesW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLTablePrivilegesW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName)
SQLTables	/usr/include/sql.h	/^SQLRETURN SQL_API SQLTables ($/;"	p	signature:( SQLHSTMT StatementHandle, SQLCHAR * CatalogName, SQLSMALLINT NameLength1, SQLCHAR * SchemaName, SQLSMALLINT NameLength2, SQLCHAR * TableName, SQLSMALLINT NameLength3, SQLCHAR * TableType, SQLSMALLINT NameLength4)
SQLTables	/usr/include/sqlucode.h	/^#define SQLTables	/;"	d
SQLTablesA	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLTablesA ($/;"	p	signature:( SQLHSTMT hstmt, SQLCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLCHAR * szTableName, SQLSMALLINT cbTableName, SQLCHAR * szTableType, SQLSMALLINT cbTableType)
SQLTablesW	/usr/include/sqlucode.h	/^SQLRETURN SQL_API SQLTablesW ($/;"	p	signature:( SQLHSTMT hstmt, SQLWCHAR * szCatalogName, SQLSMALLINT cbCatalogName, SQLWCHAR * szSchemaName, SQLSMALLINT cbSchemaName, SQLWCHAR * szTableName, SQLSMALLINT cbTableName, SQLWCHAR * szTableType, SQLSMALLINT cbTableType)
SQLTransact	/usr/include/sql.h	/^SQLRETURN SQL_API SQLTransact ($/;"	p	signature:( SQLHENV EnvironmentHandle, SQLHDBC ConnectionHandle, SQLUSMALLINT CompletionType)
SQLUBIGINT	/usr/include/sqltypes.h	/^typedef unsigned ODBCINT64	SQLUBIGINT;$/;"	t
SQLUINTEGER	/usr/include/sqltypes.h	/^typedef unsigned int		SQLUINTEGER;$/;"	t
SQLUINTEGER	/usr/include/sqltypes.h	/^typedef unsigned long		SQLUINTEGER;$/;"	t
SQLULEN	/usr/include/sqltypes.h	/^#define SQLULEN /;"	d
SQLULEN	/usr/include/sqltypes.h	/^typedef UINT64			SQLULEN;$/;"	t
SQLULEN	/usr/include/sqltypes.h	/^typedef unsigned long		SQLULEN;$/;"	t
SQLUSMALLINT	/usr/include/sqltypes.h	/^typedef unsigned short		SQLUSMALLINT;$/;"	t
SQLVARCHAR	/usr/include/sqltypes.h	/^typedef unsigned char		SQLVARCHAR;$/;"	t
SQLValidDSN	/usr/include/odbcinst.h	/^#define  SQLValidDSN /;"	d
SQLValidDSN	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLValidDSN (LPCSTR lpszDSN);$/;"	p	signature:(LPCSTR lpszDSN)
SQLValidDSNW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLValidDSNW (LPCWSTR lpszDSN);$/;"	p	signature:(LPCWSTR lpszDSN)
SQLWCHAR	/usr/include/sqltypes.h	/^typedef unsigned short SQLWCHAR;$/;"	t
SQLWCHAR	/usr/include/sqltypes.h	/^typedef wchar_t SQLWCHAR;$/;"	t
SQLWriteDSNToIni	/usr/include/odbcinst.h	/^#define  SQLWriteDSNToIni /;"	d
SQLWriteDSNToIni	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLWriteDSNToIni ($/;"	p	signature:( LPCSTR lpszDSN, LPCSTR lpszDriver)
SQLWriteDSNToIniW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLWriteDSNToIniW ($/;"	p	signature:( LPCWSTR lpszDSN, LPCWSTR lpszDriver)
SQLWriteFileDSN	/usr/include/odbcinst.h	/^#define  SQLWriteFileDSN /;"	d
SQLWriteFileDSN	/usr/include/odbcinst.h	/^SQLWriteFileDSN ($/;"	p	signature:( LPCSTR lpszFileName, LPCSTR lpszAppName, LPCSTR lpszKeyName, LPSTR lpszString)
SQLWriteFileDSNW	/usr/include/odbcinst.h	/^SQLWriteFileDSNW ($/;"	p	signature:( LPCWSTR lpszFileName, LPCWSTR lpszAppName, LPCWSTR lpszKeyName, LPWSTR lpszString)
SQLWritePrivateProfileString	/usr/include/odbcinst.h	/^#define  SQLWritePrivateProfileString /;"	d
SQLWritePrivateProfileString	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLWritePrivateProfileString ($/;"	p	signature:( LPCSTR lpszSection, LPCSTR lpszEntry, LPCSTR lpszString, LPCSTR lpszFilename)
SQLWritePrivateProfileStringW	/usr/include/odbcinst.h	/^BOOL INSTAPI SQLWritePrivateProfileStringW ($/;"	p	signature:( LPCWSTR lpszSection, LPCWSTR lpszEntry, LPCWSTR lpszString, LPCWSTR lpszFilename)
SQL_AA_FALSE	/usr/include/sqlext.h	/^#define SQL_AA_FALSE	/;"	d
SQL_AA_TRUE	/usr/include/sqlext.h	/^#define SQL_AA_TRUE	/;"	d
SQL_ACCESSIBLE_PROCEDURES	/usr/include/sql.h	/^#define SQL_ACCESSIBLE_PROCEDURES	/;"	d
SQL_ACCESSIBLE_TABLES	/usr/include/sql.h	/^#define SQL_ACCESSIBLE_TABLES	/;"	d
SQL_ACCESS_MODE	/usr/include/sqlext.h	/^#define SQL_ACCESS_MODE	/;"	d
SQL_ACTIVE_CONNECTIONS	/usr/include/sqlext.h	/^#define SQL_ACTIVE_CONNECTIONS	/;"	d
SQL_ACTIVE_ENVIRONMENTS	/usr/include/sqlext.h	/^#define SQL_ACTIVE_ENVIRONMENTS	/;"	d
SQL_ACTIVE_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_ACTIVE_STATEMENTS	/;"	d
SQL_ADD	/usr/include/sqlext.h	/^#define SQL_ADD	/;"	d
SQL_ADD_RECORD	/usr/include/sqlext.h	/^#define SQL_ADD_RECORD(/;"	d
SQL_AD_ADD_CONSTRAINT_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_AD_ADD_CONSTRAINT_DEFERRABLE	/;"	d
SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED	/usr/include/sqlext.h	/^#define SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED	/;"	d
SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE	/usr/include/sqlext.h	/^#define SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE	/;"	d
SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE	/;"	d
SQL_AD_ADD_DOMAIN_CONSTRAINT	/usr/include/sqlext.h	/^#define SQL_AD_ADD_DOMAIN_CONSTRAINT	/;"	d
SQL_AD_ADD_DOMAIN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_AD_ADD_DOMAIN_DEFAULT	/;"	d
SQL_AD_CONSTRAINT_NAME_DEFINITION	/usr/include/sqlext.h	/^#define SQL_AD_CONSTRAINT_NAME_DEFINITION	/;"	d
SQL_AD_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_AD_DEFAULT	/;"	d
SQL_AD_DROP_DOMAIN_CONSTRAINT	/usr/include/sqlext.h	/^#define SQL_AD_DROP_DOMAIN_CONSTRAINT	/;"	d
SQL_AD_DROP_DOMAIN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_AD_DROP_DOMAIN_DEFAULT	/;"	d
SQL_AD_OFF	/usr/include/iodbcext.h	/^#define SQL_AD_OFF	/;"	d
SQL_AD_ON	/usr/include/iodbcext.h	/^#define SQL_AD_ON	/;"	d
SQL_AF_ALL	/usr/include/sqlext.h	/^#define SQL_AF_ALL	/;"	d
SQL_AF_AVG	/usr/include/sqlext.h	/^#define SQL_AF_AVG	/;"	d
SQL_AF_COUNT	/usr/include/sqlext.h	/^#define SQL_AF_COUNT	/;"	d
SQL_AF_DISTINCT	/usr/include/sqlext.h	/^#define SQL_AF_DISTINCT	/;"	d
SQL_AF_MAX	/usr/include/sqlext.h	/^#define SQL_AF_MAX	/;"	d
SQL_AF_MIN	/usr/include/sqlext.h	/^#define SQL_AF_MIN	/;"	d
SQL_AF_SUM	/usr/include/sqlext.h	/^#define SQL_AF_SUM	/;"	d
SQL_AGGREGATE_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_AGGREGATE_FUNCTIONS	/;"	d
SQL_ALL_CATALOGS	/usr/include/sqlext.h	/^#define SQL_ALL_CATALOGS	/;"	d
SQL_ALL_CATALOGSW	/usr/include/sqlucode.h	/^#define SQL_ALL_CATALOGSW	/;"	d
SQL_ALL_EXCEPT_LIKE	/usr/include/sqlext.h	/^#define SQL_ALL_EXCEPT_LIKE	/;"	d
SQL_ALL_SCHEMAS	/usr/include/sqlext.h	/^#define SQL_ALL_SCHEMAS	/;"	d
SQL_ALL_SCHEMASW	/usr/include/sqlucode.h	/^#define SQL_ALL_SCHEMASW	/;"	d
SQL_ALL_TABLE_TYPES	/usr/include/sqlext.h	/^#define SQL_ALL_TABLE_TYPES	/;"	d
SQL_ALL_TABLE_TYPESW	/usr/include/sqlucode.h	/^#define SQL_ALL_TABLE_TYPESW	/;"	d
SQL_ALL_TYPES	/usr/include/sql.h	/^#define SQL_ALL_TYPES	/;"	d
SQL_ALTER_DOMAIN	/usr/include/sqlext.h	/^#define SQL_ALTER_DOMAIN	/;"	d
SQL_ALTER_TABLE	/usr/include/sql.h	/^#define SQL_ALTER_TABLE	/;"	d
SQL_AM_CONNECTION	/usr/include/sql.h	/^#define SQL_AM_CONNECTION	/;"	d
SQL_AM_CONNECTION	/usr/include/sqlext.h	/^#define SQL_AM_CONNECTION	/;"	d
SQL_AM_NONE	/usr/include/sql.h	/^#define SQL_AM_NONE	/;"	d
SQL_AM_NONE	/usr/include/sqlext.h	/^#define SQL_AM_NONE	/;"	d
SQL_AM_STATEMENT	/usr/include/sql.h	/^#define SQL_AM_STATEMENT	/;"	d
SQL_AM_STATEMENT	/usr/include/sqlext.h	/^#define SQL_AM_STATEMENT	/;"	d
SQL_AO_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_AO_DEFAULT	/;"	d
SQL_AO_OFF	/usr/include/iodbcext.h	/^#define SQL_AO_OFF	/;"	d
SQL_AO_ON	/usr/include/iodbcext.h	/^#define SQL_AO_ON	/;"	d
SQL_API	/usr/include/sqltypes.h	/^#define SQL_API	/;"	d
SQL_API	/usr/include/sqltypes.h	/^#define SQL_API$/;"	d
SQL_API_ALL_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_API_ALL_FUNCTIONS	/;"	d
SQL_API_LOADBYORDINAL	/usr/include/sqlext.h	/^#define SQL_API_LOADBYORDINAL	/;"	d
SQL_API_ODBC3_ALL_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_API_ODBC3_ALL_FUNCTIONS	/;"	d
SQL_API_ODBC3_ALL_FUNCTIONS_SIZE	/usr/include/sqlext.h	/^#define SQL_API_ODBC3_ALL_FUNCTIONS_SIZE	/;"	d
SQL_API_SQLALLOCCONNECT	/usr/include/sql.h	/^#define SQL_API_SQLALLOCCONNECT	/;"	d
SQL_API_SQLALLOCENV	/usr/include/sql.h	/^#define SQL_API_SQLALLOCENV	/;"	d
SQL_API_SQLALLOCHANDLE	/usr/include/sql.h	/^#define SQL_API_SQLALLOCHANDLE	/;"	d
SQL_API_SQLALLOCHANDLESTD	/usr/include/sqlext.h	/^#define SQL_API_SQLALLOCHANDLESTD	/;"	d
SQL_API_SQLALLOCSTMT	/usr/include/sql.h	/^#define SQL_API_SQLALLOCSTMT	/;"	d
SQL_API_SQLBINDCOL	/usr/include/sql.h	/^#define SQL_API_SQLBINDCOL	/;"	d
SQL_API_SQLBINDPARAM	/usr/include/sql.h	/^#define SQL_API_SQLBINDPARAM	/;"	d
SQL_API_SQLBINDPARAMETER	/usr/include/sqlext.h	/^#define SQL_API_SQLBINDPARAMETER	/;"	d
SQL_API_SQLBROWSECONNECT	/usr/include/sqlext.h	/^#define SQL_API_SQLBROWSECONNECT	/;"	d
SQL_API_SQLBULKOPERATIONS	/usr/include/sqlext.h	/^#define SQL_API_SQLBULKOPERATIONS	/;"	d
SQL_API_SQLCANCEL	/usr/include/sql.h	/^#define SQL_API_SQLCANCEL	/;"	d
SQL_API_SQLCLOSECURSOR	/usr/include/sql.h	/^#define SQL_API_SQLCLOSECURSOR	/;"	d
SQL_API_SQLCOLATTRIBUTE	/usr/include/sql.h	/^#define SQL_API_SQLCOLATTRIBUTE	/;"	d
SQL_API_SQLCOLATTRIBUTES	/usr/include/sqlext.h	/^#define SQL_API_SQLCOLATTRIBUTES	/;"	d
SQL_API_SQLCOLUMNPRIVILEGES	/usr/include/sqlext.h	/^#define SQL_API_SQLCOLUMNPRIVILEGES	/;"	d
SQL_API_SQLCOLUMNS	/usr/include/sql.h	/^#define SQL_API_SQLCOLUMNS	/;"	d
SQL_API_SQLCONNECT	/usr/include/sql.h	/^#define SQL_API_SQLCONNECT	/;"	d
SQL_API_SQLCOPYDESC	/usr/include/sql.h	/^#define SQL_API_SQLCOPYDESC	/;"	d
SQL_API_SQLDATASOURCES	/usr/include/sql.h	/^#define SQL_API_SQLDATASOURCES	/;"	d
SQL_API_SQLDESCRIBECOL	/usr/include/sql.h	/^#define SQL_API_SQLDESCRIBECOL	/;"	d
SQL_API_SQLDESCRIBEPARAM	/usr/include/sqlext.h	/^#define SQL_API_SQLDESCRIBEPARAM	/;"	d
SQL_API_SQLDISCONNECT	/usr/include/sql.h	/^#define SQL_API_SQLDISCONNECT	/;"	d
SQL_API_SQLDRIVERCONNECT	/usr/include/sqlext.h	/^#define SQL_API_SQLDRIVERCONNECT	/;"	d
SQL_API_SQLDRIVERS	/usr/include/sqlext.h	/^#define SQL_API_SQLDRIVERS	/;"	d
SQL_API_SQLENDTRAN	/usr/include/sql.h	/^#define SQL_API_SQLENDTRAN	/;"	d
SQL_API_SQLERROR	/usr/include/sql.h	/^#define SQL_API_SQLERROR	/;"	d
SQL_API_SQLEXECDIRECT	/usr/include/sql.h	/^#define SQL_API_SQLEXECDIRECT	/;"	d
SQL_API_SQLEXECUTE	/usr/include/sql.h	/^#define SQL_API_SQLEXECUTE	/;"	d
SQL_API_SQLEXTENDEDFETCH	/usr/include/sqlext.h	/^#define SQL_API_SQLEXTENDEDFETCH	/;"	d
SQL_API_SQLFETCH	/usr/include/sql.h	/^#define SQL_API_SQLFETCH	/;"	d
SQL_API_SQLFETCHSCROLL	/usr/include/sql.h	/^#define SQL_API_SQLFETCHSCROLL	/;"	d
SQL_API_SQLFOREIGNKEYS	/usr/include/sqlext.h	/^#define SQL_API_SQLFOREIGNKEYS	/;"	d
SQL_API_SQLFREECONNECT	/usr/include/sql.h	/^#define SQL_API_SQLFREECONNECT	/;"	d
SQL_API_SQLFREEENV	/usr/include/sql.h	/^#define SQL_API_SQLFREEENV	/;"	d
SQL_API_SQLFREEHANDLE	/usr/include/sql.h	/^#define SQL_API_SQLFREEHANDLE	/;"	d
SQL_API_SQLFREESTMT	/usr/include/sql.h	/^#define SQL_API_SQLFREESTMT	/;"	d
SQL_API_SQLGETCONNECTATTR	/usr/include/sql.h	/^#define SQL_API_SQLGETCONNECTATTR	/;"	d
SQL_API_SQLGETCONNECTOPTION	/usr/include/sql.h	/^#define SQL_API_SQLGETCONNECTOPTION	/;"	d
SQL_API_SQLGETCURSORNAME	/usr/include/sql.h	/^#define SQL_API_SQLGETCURSORNAME	/;"	d
SQL_API_SQLGETDATA	/usr/include/sql.h	/^#define SQL_API_SQLGETDATA	/;"	d
SQL_API_SQLGETDESCFIELD	/usr/include/sql.h	/^#define SQL_API_SQLGETDESCFIELD	/;"	d
SQL_API_SQLGETDESCREC	/usr/include/sql.h	/^#define SQL_API_SQLGETDESCREC	/;"	d
SQL_API_SQLGETDIAGFIELD	/usr/include/sql.h	/^#define SQL_API_SQLGETDIAGFIELD	/;"	d
SQL_API_SQLGETDIAGREC	/usr/include/sql.h	/^#define SQL_API_SQLGETDIAGREC	/;"	d
SQL_API_SQLGETENVATTR	/usr/include/sql.h	/^#define SQL_API_SQLGETENVATTR	/;"	d
SQL_API_SQLGETFUNCTIONS	/usr/include/sql.h	/^#define SQL_API_SQLGETFUNCTIONS	/;"	d
SQL_API_SQLGETINFO	/usr/include/sql.h	/^#define SQL_API_SQLGETINFO	/;"	d
SQL_API_SQLGETSTMTATTR	/usr/include/sql.h	/^#define SQL_API_SQLGETSTMTATTR	/;"	d
SQL_API_SQLGETSTMTOPTION	/usr/include/sql.h	/^#define SQL_API_SQLGETSTMTOPTION	/;"	d
SQL_API_SQLGETTYPEINFO	/usr/include/sql.h	/^#define SQL_API_SQLGETTYPEINFO	/;"	d
SQL_API_SQLMORERESULTS	/usr/include/sqlext.h	/^#define SQL_API_SQLMORERESULTS	/;"	d
SQL_API_SQLNATIVESQL	/usr/include/sqlext.h	/^#define SQL_API_SQLNATIVESQL	/;"	d
SQL_API_SQLNUMPARAMS	/usr/include/sqlext.h	/^#define SQL_API_SQLNUMPARAMS	/;"	d
SQL_API_SQLNUMRESULTCOLS	/usr/include/sql.h	/^#define SQL_API_SQLNUMRESULTCOLS	/;"	d
SQL_API_SQLPARAMDATA	/usr/include/sql.h	/^#define SQL_API_SQLPARAMDATA	/;"	d
SQL_API_SQLPARAMOPTIONS	/usr/include/sqlext.h	/^#define SQL_API_SQLPARAMOPTIONS	/;"	d
SQL_API_SQLPREPARE	/usr/include/sql.h	/^#define SQL_API_SQLPREPARE	/;"	d
SQL_API_SQLPRIMARYKEYS	/usr/include/sqlext.h	/^#define SQL_API_SQLPRIMARYKEYS	/;"	d
SQL_API_SQLPROCEDURECOLUMNS	/usr/include/sqlext.h	/^#define SQL_API_SQLPROCEDURECOLUMNS	/;"	d
SQL_API_SQLPROCEDURES	/usr/include/sqlext.h	/^#define SQL_API_SQLPROCEDURES	/;"	d
SQL_API_SQLPUTDATA	/usr/include/sql.h	/^#define SQL_API_SQLPUTDATA	/;"	d
SQL_API_SQLROWCOUNT	/usr/include/sql.h	/^#define SQL_API_SQLROWCOUNT	/;"	d
SQL_API_SQLSETCONNECTATTR	/usr/include/sql.h	/^#define SQL_API_SQLSETCONNECTATTR	/;"	d
SQL_API_SQLSETCONNECTOPTION	/usr/include/sql.h	/^#define SQL_API_SQLSETCONNECTOPTION	/;"	d
SQL_API_SQLSETCURSORNAME	/usr/include/sql.h	/^#define SQL_API_SQLSETCURSORNAME	/;"	d
SQL_API_SQLSETDESCFIELD	/usr/include/sql.h	/^#define SQL_API_SQLSETDESCFIELD	/;"	d
SQL_API_SQLSETDESCREC	/usr/include/sql.h	/^#define SQL_API_SQLSETDESCREC	/;"	d
SQL_API_SQLSETENVATTR	/usr/include/sql.h	/^#define SQL_API_SQLSETENVATTR	/;"	d
SQL_API_SQLSETPARAM	/usr/include/sql.h	/^#define SQL_API_SQLSETPARAM	/;"	d
SQL_API_SQLSETPOS	/usr/include/sqlext.h	/^#define SQL_API_SQLSETPOS	/;"	d
SQL_API_SQLSETSCROLLOPTIONS	/usr/include/sqlext.h	/^#define SQL_API_SQLSETSCROLLOPTIONS	/;"	d
SQL_API_SQLSETSTMTATTR	/usr/include/sql.h	/^#define SQL_API_SQLSETSTMTATTR	/;"	d
SQL_API_SQLSETSTMTOPTION	/usr/include/sql.h	/^#define SQL_API_SQLSETSTMTOPTION	/;"	d
SQL_API_SQLSPECIALCOLUMNS	/usr/include/sql.h	/^#define SQL_API_SQLSPECIALCOLUMNS	/;"	d
SQL_API_SQLSTATISTICS	/usr/include/sql.h	/^#define SQL_API_SQLSTATISTICS	/;"	d
SQL_API_SQLTABLEPRIVILEGES	/usr/include/sqlext.h	/^#define SQL_API_SQLTABLEPRIVILEGES	/;"	d
SQL_API_SQLTABLES	/usr/include/sql.h	/^#define SQL_API_SQLTABLES	/;"	d
SQL_API_SQLTRANSACT	/usr/include/sql.h	/^#define SQL_API_SQLTRANSACT	/;"	d
SQL_APPEND_KEYS	/usr/include/iodbcext.h	/^#define SQL_APPEND_KEYS	/;"	d
SQL_APPLICATION_NAME	/usr/include/iodbcext.h	/^#define SQL_APPLICATION_NAME	/;"	d
SQL_ARD_TYPE	/usr/include/sql.h	/^#define SQL_ARD_TYPE	/;"	d
SQL_ASYNC_ENABLE	/usr/include/sqlext.h	/^#define SQL_ASYNC_ENABLE	/;"	d
SQL_ASYNC_ENABLE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_ASYNC_ENABLE_DEFAULT	/;"	d
SQL_ASYNC_ENABLE_OFF	/usr/include/sqlext.h	/^#define SQL_ASYNC_ENABLE_OFF	/;"	d
SQL_ASYNC_ENABLE_ON	/usr/include/sqlext.h	/^#define SQL_ASYNC_ENABLE_ON	/;"	d
SQL_ASYNC_MODE	/usr/include/sqlext.h	/^#define SQL_ASYNC_MODE	/;"	d
SQL_ATOMIC_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_ATOMIC_DEFAULT /;"	d
SQL_ATOMIC_NO	/usr/include/iodbcext.h	/^#define SQL_ATOMIC_NO /;"	d
SQL_ATOMIC_YES	/usr/include/iodbcext.h	/^#define SQL_ATOMIC_YES /;"	d
SQL_ATTR_ACCESS_MODE	/usr/include/sqlext.h	/^#define SQL_ATTR_ACCESS_MODE	/;"	d
SQL_ATTR_ANSI_APP	/usr/include/sqlext.h	/^#define SQL_ATTR_ANSI_APP	/;"	d
SQL_ATTR_APPEND_KEYS	/usr/include/iodbcext.h	/^#define SQL_ATTR_APPEND_KEYS /;"	d
SQL_ATTR_APP_PARAM_DESC	/usr/include/sql.h	/^#define SQL_ATTR_APP_PARAM_DESC	/;"	d
SQL_ATTR_APP_ROW_DESC	/usr/include/sql.h	/^#define SQL_ATTR_APP_ROW_DESC	/;"	d
SQL_ATTR_ASYNC_ENABLE	/usr/include/sqlext.h	/^#define SQL_ATTR_ASYNC_ENABLE	/;"	d
SQL_ATTR_AUTOCOMMIT	/usr/include/sqlext.h	/^#define SQL_ATTR_AUTOCOMMIT	/;"	d
SQL_ATTR_AUTO_IPD	/usr/include/sql.h	/^#define SQL_ATTR_AUTO_IPD	/;"	d
SQL_ATTR_CLOSEOPEN	/usr/include/iodbcext.h	/^#define  SQL_ATTR_CLOSEOPEN /;"	d
SQL_ATTR_CLOSE_BEHAVIOR	/usr/include/iodbcext.h	/^#define  SQL_ATTR_CLOSE_BEHAVIOR /;"	d
SQL_ATTR_CONCURRENCY	/usr/include/sqlext.h	/^#define SQL_ATTR_CONCURRENCY	/;"	d
SQL_ATTR_CONNECTION_DEAD	/usr/include/iodbcext.h	/^#define SQL_ATTR_CONNECTION_DEAD	/;"	d
SQL_ATTR_CONNECTION_DEAD	/usr/include/sqlext.h	/^#define SQL_ATTR_CONNECTION_DEAD	/;"	d
SQL_ATTR_CONNECTION_POOLING	/usr/include/sqlext.h	/^#define SQL_ATTR_CONNECTION_POOLING	/;"	d
SQL_ATTR_CONNECTION_TIMEOUT	/usr/include/sqlext.h	/^#define SQL_ATTR_CONNECTION_TIMEOUT	/;"	d
SQL_ATTR_CONNECTTYPE	/usr/include/iodbcext.h	/^#define SQL_ATTR_CONNECTTYPE /;"	d
SQL_ATTR_CONN_CONTEXT	/usr/include/iodbcext.h	/^#define SQL_ATTR_CONN_CONTEXT /;"	d
SQL_ATTR_CP_MATCH	/usr/include/sqlext.h	/^#define SQL_ATTR_CP_MATCH	/;"	d
SQL_ATTR_CURRENT_CATALOG	/usr/include/sqlext.h	/^#define SQL_ATTR_CURRENT_CATALOG	/;"	d
SQL_ATTR_CURRENT_PACKAGE_SET	/usr/include/iodbcext.h	/^#define  SQL_ATTR_CURRENT_PACKAGE_SET /;"	d
SQL_ATTR_CURRENT_SCHEMA	/usr/include/iodbcext.h	/^#define SQL_ATTR_CURRENT_SCHEMA /;"	d
SQL_ATTR_CURSOR_HOLD	/usr/include/iodbcext.h	/^#define  SQL_ATTR_CURSOR_HOLD /;"	d
SQL_ATTR_CURSOR_SCROLLABLE	/usr/include/sql.h	/^#define SQL_ATTR_CURSOR_SCROLLABLE	/;"	d
SQL_ATTR_CURSOR_SENSITIVITY	/usr/include/sql.h	/^#define SQL_ATTR_CURSOR_SENSITIVITY	/;"	d
SQL_ATTR_CURSOR_TYPE	/usr/include/sqlext.h	/^#define SQL_ATTR_CURSOR_TYPE	/;"	d
SQL_ATTR_DB2ESTIMATE	/usr/include/iodbcext.h	/^#define SQL_ATTR_DB2ESTIMATE /;"	d
SQL_ATTR_DB2EXPLAIN	/usr/include/iodbcext.h	/^#define SQL_ATTR_DB2EXPLAIN /;"	d
SQL_ATTR_DEFERRED_PREPARE	/usr/include/iodbcext.h	/^#define  SQL_ATTR_DEFERRED_PREPARE /;"	d
SQL_ATTR_DISCONNECT_BEHAVIOR	/usr/include/sqlext.h	/^#define SQL_ATTR_DISCONNECT_BEHAVIOR	/;"	d
SQL_ATTR_EARLYCLOSE	/usr/include/iodbcext.h	/^#define  SQL_ATTR_EARLYCLOSE /;"	d
SQL_ATTR_ENABLE_AUTO_IPD	/usr/include/sqlext.h	/^#define SQL_ATTR_ENABLE_AUTO_IPD	/;"	d
SQL_ATTR_ENLIST_IN_DTC	/usr/include/iodbcext.h	/^#define SQL_ATTR_ENLIST_IN_DTC	/;"	d
SQL_ATTR_ENLIST_IN_DTC	/usr/include/sqlext.h	/^#define SQL_ATTR_ENLIST_IN_DTC	/;"	d
SQL_ATTR_ENLIST_IN_XA	/usr/include/iodbcext.h	/^#define SQL_ATTR_ENLIST_IN_XA	/;"	d
SQL_ATTR_ENLIST_IN_XA	/usr/include/sqlext.h	/^#define SQL_ATTR_ENLIST_IN_XA	/;"	d
SQL_ATTR_FETCH_BOOKMARK_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_FETCH_BOOKMARK_PTR	/;"	d
SQL_ATTR_FORCE_CONVERSION_ON_CLIENT	/usr/include/iodbcext.h	/^#define SQL_ATTR_FORCE_CONVERSION_ON_CLIENT /;"	d
SQL_ATTR_IMP_PARAM_DESC	/usr/include/sql.h	/^#define SQL_ATTR_IMP_PARAM_DESC	/;"	d
SQL_ATTR_IMP_ROW_DESC	/usr/include/sql.h	/^#define SQL_ATTR_IMP_ROW_DESC	/;"	d
SQL_ATTR_INHERIT_NULL_CONNECT	/usr/include/iodbcext.h	/^#define SQL_ATTR_INHERIT_NULL_CONNECT /;"	d
SQL_ATTR_KEYSET_SIZE	/usr/include/sqlext.h	/^#define SQL_ATTR_KEYSET_SIZE	/;"	d
SQL_ATTR_LOGIN_TIMEOUT	/usr/include/sqlext.h	/^#define SQL_ATTR_LOGIN_TIMEOUT	/;"	d
SQL_ATTR_LONGDATA_COMPAT	/usr/include/iodbcext.h	/^#define SQL_ATTR_LONGDATA_COMPAT /;"	d
SQL_ATTR_MAXCONN	/usr/include/iodbcext.h	/^#define SQL_ATTR_MAXCONN /;"	d
SQL_ATTR_MAX_LENGTH	/usr/include/sqlext.h	/^#define SQL_ATTR_MAX_LENGTH	/;"	d
SQL_ATTR_MAX_ROWS	/usr/include/sqlext.h	/^#define SQL_ATTR_MAX_ROWS	/;"	d
SQL_ATTR_METADATA_ID	/usr/include/sql.h	/^#define SQL_ATTR_METADATA_ID	/;"	d
SQL_ATTR_MINMEMORY_USAGE	/usr/include/iodbcext.h	/^#define SQL_ATTR_MINMEMORY_USAGE /;"	d
SQL_ATTR_NODESCRIBE	/usr/include/iodbcext.h	/^#define  SQL_ATTR_NODESCRIBE /;"	d
SQL_ATTR_NODESCRIBE_INPUT	/usr/include/iodbcext.h	/^#define  SQL_ATTR_NODESCRIBE_INPUT /;"	d
SQL_ATTR_NODESCRIBE_OUTPUT	/usr/include/iodbcext.h	/^#define  SQL_ATTR_NODESCRIBE_OUTPUT /;"	d
SQL_ATTR_NOSCAN	/usr/include/sqlext.h	/^#define SQL_ATTR_NOSCAN	/;"	d
SQL_ATTR_ODBC_CURSORS	/usr/include/sqlext.h	/^#define SQL_ATTR_ODBC_CURSORS	/;"	d
SQL_ATTR_ODBC_VERSION	/usr/include/sqlext.h	/^#define SQL_ATTR_ODBC_VERSION	/;"	d
SQL_ATTR_OUTPUT_NTS	/usr/include/sql.h	/^#define SQL_ATTR_OUTPUT_NTS	/;"	d
SQL_ATTR_PACKET_SIZE	/usr/include/sqlext.h	/^#define SQL_ATTR_PACKET_SIZE	/;"	d
SQL_ATTR_PARAMOPT_ATOMIC	/usr/include/iodbcext.h	/^#define SQL_ATTR_PARAMOPT_ATOMIC /;"	d
SQL_ATTR_PARAMSET_SIZE	/usr/include/sqlext.h	/^#define SQL_ATTR_PARAMSET_SIZE	/;"	d
SQL_ATTR_PARAMS_PROCESSED_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_PARAMS_PROCESSED_PTR	/;"	d
SQL_ATTR_PARAM_BIND_OFFSET_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_PARAM_BIND_OFFSET_PTR	/;"	d
SQL_ATTR_PARAM_BIND_TYPE	/usr/include/sqlext.h	/^#define SQL_ATTR_PARAM_BIND_TYPE	/;"	d
SQL_ATTR_PARAM_OPERATION_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_PARAM_OPERATION_PTR	/;"	d
SQL_ATTR_PARAM_STATUS_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_PARAM_STATUS_PTR	/;"	d
SQL_ATTR_PARSE_FWD_ONLY_REQ	/usr/include/iodbcext.h	/^#define SQL_ATTR_PARSE_FWD_ONLY_REQ /;"	d
SQL_ATTR_PROCESSCTL	/usr/include/iodbcext.h	/^#define  SQL_ATTR_PROCESSCTL /;"	d
SQL_ATTR_QUERY_TIMEOUT	/usr/include/sqlext.h	/^#define SQL_ATTR_QUERY_TIMEOUT	/;"	d
SQL_ATTR_QUIET_MODE	/usr/include/sqlext.h	/^#define SQL_ATTR_QUIET_MODE	/;"	d
SQL_ATTR_READONLY	/usr/include/sqlext.h	/^#define SQL_ATTR_READONLY	/;"	d
SQL_ATTR_READWRITE_UNKNOWN	/usr/include/sqlext.h	/^#define SQL_ATTR_READWRITE_UNKNOWN	/;"	d
SQL_ATTR_RETRIEVE_DATA	/usr/include/sqlext.h	/^#define SQL_ATTR_RETRIEVE_DATA	/;"	d
SQL_ATTR_ROWS_FETCHED_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_ROWS_FETCHED_PTR	/;"	d
SQL_ATTR_ROW_ARRAY_SIZE	/usr/include/sqlext.h	/^#define SQL_ATTR_ROW_ARRAY_SIZE	/;"	d
SQL_ATTR_ROW_BIND_OFFSET_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_ROW_BIND_OFFSET_PTR	/;"	d
SQL_ATTR_ROW_BIND_TYPE	/usr/include/sqlext.h	/^#define SQL_ATTR_ROW_BIND_TYPE	/;"	d
SQL_ATTR_ROW_NUMBER	/usr/include/sqlext.h	/^#define SQL_ATTR_ROW_NUMBER	/;"	d
SQL_ATTR_ROW_OPERATION_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_ROW_OPERATION_PTR	/;"	d
SQL_ATTR_ROW_STATUS_PTR	/usr/include/sqlext.h	/^#define SQL_ATTR_ROW_STATUS_PTR	/;"	d
SQL_ATTR_SIMULATE_CURSOR	/usr/include/sqlext.h	/^#define SQL_ATTR_SIMULATE_CURSOR	/;"	d
SQL_ATTR_STMTTXN_ISOLATION	/usr/include/iodbcext.h	/^#define SQL_ATTR_STMTTXN_ISOLATION /;"	d
SQL_ATTR_SYNC_POINT	/usr/include/iodbcext.h	/^#define SQL_ATTR_SYNC_POINT /;"	d
SQL_ATTR_TRACE	/usr/include/sqlext.h	/^#define SQL_ATTR_TRACE	/;"	d
SQL_ATTR_TRACEFILE	/usr/include/sqlext.h	/^#define SQL_ATTR_TRACEFILE	/;"	d
SQL_ATTR_TRANSLATE_LIB	/usr/include/sqlext.h	/^#define SQL_ATTR_TRANSLATE_LIB	/;"	d
SQL_ATTR_TRANSLATE_OPTION	/usr/include/sqlext.h	/^#define SQL_ATTR_TRANSLATE_OPTION	/;"	d
SQL_ATTR_TXN_ISOLATION	/usr/include/sqlext.h	/^#define SQL_ATTR_TXN_ISOLATION	/;"	d
SQL_ATTR_USE_BOOKMARKS	/usr/include/sqlext.h	/^#define SQL_ATTR_USE_BOOKMARKS	/;"	d
SQL_ATTR_WCHARTYPE	/usr/include/iodbcext.h	/^#define SQL_ATTR_WCHARTYPE /;"	d
SQL_ATTR_WCHAR_SIZE	/usr/include/iodbcext.h	/^#define SQL_ATTR_WCHAR_SIZE	/;"	d
SQL_ATTR_WRITE	/usr/include/sqlext.h	/^#define SQL_ATTR_WRITE	/;"	d
SQL_AT_ADD_COLUMN	/usr/include/sql.h	/^#define SQL_AT_ADD_COLUMN	/;"	d
SQL_AT_ADD_COLUMN_COLLATION	/usr/include/sqlext.h	/^#define SQL_AT_ADD_COLUMN_COLLATION	/;"	d
SQL_AT_ADD_COLUMN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_AT_ADD_COLUMN_DEFAULT	/;"	d
SQL_AT_ADD_COLUMN_SINGLE	/usr/include/sqlext.h	/^#define SQL_AT_ADD_COLUMN_SINGLE	/;"	d
SQL_AT_ADD_CONSTRAINT	/usr/include/sql.h	/^#define SQL_AT_ADD_CONSTRAINT	/;"	d
SQL_AT_ADD_TABLE_CONSTRAINT	/usr/include/sqlext.h	/^#define SQL_AT_ADD_TABLE_CONSTRAINT	/;"	d
SQL_AT_CONSTRAINT_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_AT_CONSTRAINT_DEFERRABLE	/;"	d
SQL_AT_CONSTRAINT_INITIALLY_DEFERRED	/usr/include/sqlext.h	/^#define SQL_AT_CONSTRAINT_INITIALLY_DEFERRED	/;"	d
SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE	/usr/include/sqlext.h	/^#define SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE	/;"	d
SQL_AT_CONSTRAINT_NAME_DEFINITION	/usr/include/sqlext.h	/^#define SQL_AT_CONSTRAINT_NAME_DEFINITION	/;"	d
SQL_AT_CONSTRAINT_NON_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_AT_CONSTRAINT_NON_DEFERRABLE	/;"	d
SQL_AT_DROP_COLUMN	/usr/include/sql.h	/^#define SQL_AT_DROP_COLUMN	/;"	d
SQL_AT_DROP_COLUMN_CASCADE	/usr/include/sqlext.h	/^#define SQL_AT_DROP_COLUMN_CASCADE	/;"	d
SQL_AT_DROP_COLUMN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_AT_DROP_COLUMN_DEFAULT	/;"	d
SQL_AT_DROP_COLUMN_RESTRICT	/usr/include/sqlext.h	/^#define SQL_AT_DROP_COLUMN_RESTRICT	/;"	d
SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE	/usr/include/sqlext.h	/^#define SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE	/;"	d
SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT	/usr/include/sqlext.h	/^#define SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT	/;"	d
SQL_AT_SET_COLUMN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_AT_SET_COLUMN_DEFAULT	/;"	d
SQL_AUTOCOMMIT	/usr/include/sqlext.h	/^#define SQL_AUTOCOMMIT	/;"	d
SQL_AUTOCOMMIT_DEFAULT	/usr/include/sqlext.h	/^#define SQL_AUTOCOMMIT_DEFAULT	/;"	d
SQL_AUTOCOMMIT_OFF	/usr/include/sqlext.h	/^#define SQL_AUTOCOMMIT_OFF	/;"	d
SQL_AUTOCOMMIT_ON	/usr/include/sqlext.h	/^#define SQL_AUTOCOMMIT_ON	/;"	d
SQL_BATCH_ROW_COUNT	/usr/include/sqlext.h	/^#define SQL_BATCH_ROW_COUNT	/;"	d
SQL_BATCH_SUPPORT	/usr/include/sqlext.h	/^#define SQL_BATCH_SUPPORT	/;"	d
SQL_BCP_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_BCP_DEFAULT	/;"	d
SQL_BCP_OFF	/usr/include/iodbcext.h	/^#define SQL_BCP_OFF	/;"	d
SQL_BCP_ON	/usr/include/iodbcext.h	/^#define SQL_BCP_ON	/;"	d
SQL_BEST_ROWID	/usr/include/sqlext.h	/^#define SQL_BEST_ROWID	/;"	d
SQL_BIGINT	/usr/include/sqlext.h	/^#define SQL_BIGINT	/;"	d
SQL_BINARY	/usr/include/sqlext.h	/^#define SQL_BINARY	/;"	d
SQL_BIND_BY_COLUMN	/usr/include/sqlext.h	/^#define SQL_BIND_BY_COLUMN	/;"	d
SQL_BIND_TYPE	/usr/include/sqlext.h	/^#define SQL_BIND_TYPE	/;"	d
SQL_BIND_TYPE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_BIND_TYPE_DEFAULT	/;"	d
SQL_BIT	/usr/include/sqlext.h	/^#define SQL_BIT	/;"	d
SQL_BOOKMARK_PERSISTENCE	/usr/include/sqlext.h	/^#define SQL_BOOKMARK_PERSISTENCE	/;"	d
SQL_BP_CLOSE	/usr/include/sqlext.h	/^#define SQL_BP_CLOSE	/;"	d
SQL_BP_DELETE	/usr/include/sqlext.h	/^#define SQL_BP_DELETE	/;"	d
SQL_BP_DROP	/usr/include/sqlext.h	/^#define SQL_BP_DROP	/;"	d
SQL_BP_OTHER_HSTMT	/usr/include/sqlext.h	/^#define SQL_BP_OTHER_HSTMT	/;"	d
SQL_BP_SCROLL	/usr/include/sqlext.h	/^#define SQL_BP_SCROLL	/;"	d
SQL_BP_TRANSACTION	/usr/include/sqlext.h	/^#define SQL_BP_TRANSACTION	/;"	d
SQL_BP_UPDATE	/usr/include/sqlext.h	/^#define SQL_BP_UPDATE	/;"	d
SQL_BRC_EXPLICIT	/usr/include/sqlext.h	/^#define SQL_BRC_EXPLICIT	/;"	d
SQL_BRC_PROCEDURES	/usr/include/sqlext.h	/^#define SQL_BRC_PROCEDURES	/;"	d
SQL_BRC_ROLLED_UP	/usr/include/sqlext.h	/^#define SQL_BRC_ROLLED_UP	/;"	d
SQL_BS_ROW_COUNT_EXPLICIT	/usr/include/sqlext.h	/^#define SQL_BS_ROW_COUNT_EXPLICIT	/;"	d
SQL_BS_ROW_COUNT_PROC	/usr/include/sqlext.h	/^#define SQL_BS_ROW_COUNT_PROC	/;"	d
SQL_BS_SELECT_EXPLICIT	/usr/include/sqlext.h	/^#define SQL_BS_SELECT_EXPLICIT	/;"	d
SQL_BS_SELECT_PROC	/usr/include/sqlext.h	/^#define SQL_BS_SELECT_PROC	/;"	d
SQL_CA1_ABSOLUTE	/usr/include/sqlext.h	/^#define SQL_CA1_ABSOLUTE	/;"	d
SQL_CA1_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_CA1_BOOKMARK	/;"	d
SQL_CA1_BULK_ADD	/usr/include/sqlext.h	/^#define SQL_CA1_BULK_ADD	/;"	d
SQL_CA1_BULK_DELETE_BY_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_CA1_BULK_DELETE_BY_BOOKMARK	/;"	d
SQL_CA1_BULK_FETCH_BY_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_CA1_BULK_FETCH_BY_BOOKMARK	/;"	d
SQL_CA1_BULK_UPDATE_BY_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_CA1_BULK_UPDATE_BY_BOOKMARK	/;"	d
SQL_CA1_LOCK_EXCLUSIVE	/usr/include/sqlext.h	/^#define SQL_CA1_LOCK_EXCLUSIVE	/;"	d
SQL_CA1_LOCK_NO_CHANGE	/usr/include/sqlext.h	/^#define SQL_CA1_LOCK_NO_CHANGE	/;"	d
SQL_CA1_LOCK_UNLOCK	/usr/include/sqlext.h	/^#define SQL_CA1_LOCK_UNLOCK	/;"	d
SQL_CA1_NEXT	/usr/include/sqlext.h	/^#define SQL_CA1_NEXT	/;"	d
SQL_CA1_POSITIONED_DELETE	/usr/include/sqlext.h	/^#define SQL_CA1_POSITIONED_DELETE	/;"	d
SQL_CA1_POSITIONED_UPDATE	/usr/include/sqlext.h	/^#define SQL_CA1_POSITIONED_UPDATE	/;"	d
SQL_CA1_POS_DELETE	/usr/include/sqlext.h	/^#define SQL_CA1_POS_DELETE	/;"	d
SQL_CA1_POS_POSITION	/usr/include/sqlext.h	/^#define SQL_CA1_POS_POSITION	/;"	d
SQL_CA1_POS_REFRESH	/usr/include/sqlext.h	/^#define SQL_CA1_POS_REFRESH	/;"	d
SQL_CA1_POS_UPDATE	/usr/include/sqlext.h	/^#define SQL_CA1_POS_UPDATE	/;"	d
SQL_CA1_RELATIVE	/usr/include/sqlext.h	/^#define SQL_CA1_RELATIVE	/;"	d
SQL_CA1_SELECT_FOR_UPDATE	/usr/include/sqlext.h	/^#define SQL_CA1_SELECT_FOR_UPDATE	/;"	d
SQL_CA2_CRC_APPROXIMATE	/usr/include/sqlext.h	/^#define SQL_CA2_CRC_APPROXIMATE	/;"	d
SQL_CA2_CRC_EXACT	/usr/include/sqlext.h	/^#define SQL_CA2_CRC_EXACT	/;"	d
SQL_CA2_LOCK_CONCURRENCY	/usr/include/sqlext.h	/^#define SQL_CA2_LOCK_CONCURRENCY	/;"	d
SQL_CA2_MAX_ROWS_AFFECTS_ALL	/usr/include/sqlext.h	/^#define SQL_CA2_MAX_ROWS_AFFECTS_ALL	/;"	d
SQL_CA2_MAX_ROWS_CATALOG	/usr/include/sqlext.h	/^#define SQL_CA2_MAX_ROWS_CATALOG	/;"	d
SQL_CA2_MAX_ROWS_DELETE	/usr/include/sqlext.h	/^#define SQL_CA2_MAX_ROWS_DELETE	/;"	d
SQL_CA2_MAX_ROWS_INSERT	/usr/include/sqlext.h	/^#define SQL_CA2_MAX_ROWS_INSERT	/;"	d
SQL_CA2_MAX_ROWS_SELECT	/usr/include/sqlext.h	/^#define SQL_CA2_MAX_ROWS_SELECT	/;"	d
SQL_CA2_MAX_ROWS_UPDATE	/usr/include/sqlext.h	/^#define SQL_CA2_MAX_ROWS_UPDATE	/;"	d
SQL_CA2_OPT_ROWVER_CONCURRENCY	/usr/include/sqlext.h	/^#define SQL_CA2_OPT_ROWVER_CONCURRENCY	/;"	d
SQL_CA2_OPT_VALUES_CONCURRENCY	/usr/include/sqlext.h	/^#define SQL_CA2_OPT_VALUES_CONCURRENCY	/;"	d
SQL_CA2_READ_ONLY_CONCURRENCY	/usr/include/sqlext.h	/^#define SQL_CA2_READ_ONLY_CONCURRENCY	/;"	d
SQL_CA2_SENSITIVITY_ADDITIONS	/usr/include/sqlext.h	/^#define SQL_CA2_SENSITIVITY_ADDITIONS	/;"	d
SQL_CA2_SENSITIVITY_DELETIONS	/usr/include/sqlext.h	/^#define SQL_CA2_SENSITIVITY_DELETIONS	/;"	d
SQL_CA2_SENSITIVITY_UPDATES	/usr/include/sqlext.h	/^#define SQL_CA2_SENSITIVITY_UPDATES	/;"	d
SQL_CA2_SIMULATE_NON_UNIQUE	/usr/include/sqlext.h	/^#define SQL_CA2_SIMULATE_NON_UNIQUE	/;"	d
SQL_CA2_SIMULATE_TRY_UNIQUE	/usr/include/sqlext.h	/^#define SQL_CA2_SIMULATE_TRY_UNIQUE	/;"	d
SQL_CA2_SIMULATE_UNIQUE	/usr/include/sqlext.h	/^#define SQL_CA2_SIMULATE_UNIQUE	/;"	d
SQL_CASCADE	/usr/include/sqlext.h	/^#define SQL_CASCADE	/;"	d
SQL_CATALOG_LOCATION	/usr/include/sqlext.h	/^#define SQL_CATALOG_LOCATION	/;"	d
SQL_CATALOG_NAME	/usr/include/sql.h	/^#define SQL_CATALOG_NAME	/;"	d
SQL_CATALOG_NAME_SEPARATOR	/usr/include/sqlext.h	/^#define SQL_CATALOG_NAME_SEPARATOR	/;"	d
SQL_CATALOG_TERM	/usr/include/sqlext.h	/^#define SQL_CATALOG_TERM	/;"	d
SQL_CATALOG_USAGE	/usr/include/sqlext.h	/^#define SQL_CATALOG_USAGE	/;"	d
SQL_CA_CONSTRAINT_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_CA_CONSTRAINT_DEFERRABLE	/;"	d
SQL_CA_CONSTRAINT_INITIALLY_DEFERRED	/usr/include/sqlext.h	/^#define SQL_CA_CONSTRAINT_INITIALLY_DEFERRED	/;"	d
SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE	/usr/include/sqlext.h	/^#define SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE	/;"	d
SQL_CA_CONSTRAINT_NON_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_CA_CONSTRAINT_NON_DEFERRABLE	/;"	d
SQL_CA_CREATE_ASSERTION	/usr/include/sqlext.h	/^#define SQL_CA_CREATE_ASSERTION	/;"	d
SQL_CB_CLOSE	/usr/include/sql.h	/^#define SQL_CB_CLOSE	/;"	d
SQL_CB_DELETE	/usr/include/sql.h	/^#define SQL_CB_DELETE	/;"	d
SQL_CB_NON_NULL	/usr/include/sqlext.h	/^#define SQL_CB_NON_NULL	/;"	d
SQL_CB_NULL	/usr/include/sqlext.h	/^#define SQL_CB_NULL	/;"	d
SQL_CB_PRESERVE	/usr/include/sql.h	/^#define SQL_CB_PRESERVE	/;"	d
SQL_CCOL_CREATE_COLLATION	/usr/include/sqlext.h	/^#define SQL_CCOL_CREATE_COLLATION	/;"	d
SQL_CCS_COLLATE_CLAUSE	/usr/include/sqlext.h	/^#define SQL_CCS_COLLATE_CLAUSE	/;"	d
SQL_CCS_CREATE_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_CCS_CREATE_CHARACTER_SET	/;"	d
SQL_CCS_LIMITED_COLLATION	/usr/include/sqlext.h	/^#define SQL_CCS_LIMITED_COLLATION	/;"	d
SQL_CC_CLOSE	/usr/include/sqlext.h	/^#define SQL_CC_CLOSE	/;"	d
SQL_CC_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_CC_DEFAULT /;"	d
SQL_CC_DELETE	/usr/include/sqlext.h	/^#define SQL_CC_DELETE	/;"	d
SQL_CC_NO_RELEASE	/usr/include/iodbcext.h	/^#define SQL_CC_NO_RELEASE /;"	d
SQL_CC_PRESERVE	/usr/include/sqlext.h	/^#define SQL_CC_PRESERVE	/;"	d
SQL_CC_RELEASE	/usr/include/iodbcext.h	/^#define SQL_CC_RELEASE /;"	d
SQL_CDO_COLLATION	/usr/include/sqlext.h	/^#define SQL_CDO_COLLATION	/;"	d
SQL_CDO_CONSTRAINT	/usr/include/sqlext.h	/^#define SQL_CDO_CONSTRAINT	/;"	d
SQL_CDO_CONSTRAINT_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_CDO_CONSTRAINT_DEFERRABLE	/;"	d
SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED	/usr/include/sqlext.h	/^#define SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED	/;"	d
SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE	/usr/include/sqlext.h	/^#define SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE	/;"	d
SQL_CDO_CONSTRAINT_NAME_DEFINITION	/usr/include/sqlext.h	/^#define SQL_CDO_CONSTRAINT_NAME_DEFINITION	/;"	d
SQL_CDO_CONSTRAINT_NON_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_CDO_CONSTRAINT_NON_DEFERRABLE	/;"	d
SQL_CDO_CREATE_DOMAIN	/usr/include/sqlext.h	/^#define SQL_CDO_CREATE_DOMAIN	/;"	d
SQL_CDO_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CDO_DEFAULT	/;"	d
SQL_CD_FALSE	/usr/include/sqlext.h	/^#define SQL_CD_FALSE	/;"	d
SQL_CD_TRUE	/usr/include/sqlext.h	/^#define SQL_CD_TRUE	/;"	d
SQL_CHAR	/usr/include/sql.h	/^#define SQL_CHAR	/;"	d
SQL_CLOSE	/usr/include/sql.h	/^#define SQL_CLOSE	/;"	d
SQL_CLOSE_BEHAVIOR	/usr/include/iodbcext.h	/^#define  SQL_CLOSE_BEHAVIOR /;"	d
SQL_CL_END	/usr/include/sqlext.h	/^#define SQL_CL_END	/;"	d
SQL_CL_START	/usr/include/sqlext.h	/^#define SQL_CL_START	/;"	d
SQL_CN_ANY	/usr/include/sqlext.h	/^#define SQL_CN_ANY	/;"	d
SQL_CN_DIFFERENT	/usr/include/sqlext.h	/^#define SQL_CN_DIFFERENT	/;"	d
SQL_CN_NONE	/usr/include/sqlext.h	/^#define SQL_CN_NONE	/;"	d
SQL_CODE_DATE	/usr/include/sql.h	/^#define SQL_CODE_DATE	/;"	d
SQL_CODE_DAY	/usr/include/sqlext.h	/^#define SQL_CODE_DAY	/;"	d
SQL_CODE_DAY_TO_HOUR	/usr/include/sqlext.h	/^#define SQL_CODE_DAY_TO_HOUR	/;"	d
SQL_CODE_DAY_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_CODE_DAY_TO_MINUTE	/;"	d
SQL_CODE_DAY_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_CODE_DAY_TO_SECOND	/;"	d
SQL_CODE_HOUR	/usr/include/sqlext.h	/^#define SQL_CODE_HOUR	/;"	d
SQL_CODE_HOUR_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_CODE_HOUR_TO_MINUTE	/;"	d
SQL_CODE_HOUR_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_CODE_HOUR_TO_SECOND	/;"	d
SQL_CODE_MINUTE	/usr/include/sqlext.h	/^#define SQL_CODE_MINUTE	/;"	d
SQL_CODE_MINUTE_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_CODE_MINUTE_TO_SECOND	/;"	d
SQL_CODE_MONTH	/usr/include/sqlext.h	/^#define SQL_CODE_MONTH	/;"	d
SQL_CODE_SECOND	/usr/include/sqlext.h	/^#define SQL_CODE_SECOND	/;"	d
SQL_CODE_TIME	/usr/include/sql.h	/^#define SQL_CODE_TIME	/;"	d
SQL_CODE_TIMESTAMP	/usr/include/sql.h	/^#define SQL_CODE_TIMESTAMP	/;"	d
SQL_CODE_YEAR	/usr/include/sqlext.h	/^#define SQL_CODE_YEAR	/;"	d
SQL_CODE_YEAR_TO_MONTH	/usr/include/sqlext.h	/^#define SQL_CODE_YEAR_TO_MONTH	/;"	d
SQL_COLATT_OPT_MAX	/usr/include/sqlext.h	/^#define SQL_COLATT_OPT_MAX	/;"	d
SQL_COLATT_OPT_MIN	/usr/include/sqlext.h	/^#define SQL_COLATT_OPT_MIN	/;"	d
SQL_COLLATION_SEQ	/usr/include/sql.h	/^#define SQL_COLLATION_SEQ	/;"	d
SQL_COLUMN_ALIAS	/usr/include/sqlext.h	/^#define SQL_COLUMN_ALIAS	/;"	d
SQL_COLUMN_AUTO_INCREMENT	/usr/include/sqlext.h	/^#define SQL_COLUMN_AUTO_INCREMENT	/;"	d
SQL_COLUMN_CASE_SENSITIVE	/usr/include/sqlext.h	/^#define SQL_COLUMN_CASE_SENSITIVE	/;"	d
SQL_COLUMN_COUNT	/usr/include/sqlext.h	/^#define SQL_COLUMN_COUNT	/;"	d
SQL_COLUMN_DISPLAY_SIZE	/usr/include/sqlext.h	/^#define SQL_COLUMN_DISPLAY_SIZE	/;"	d
SQL_COLUMN_DRIVER_START	/usr/include/sqlext.h	/^#define SQL_COLUMN_DRIVER_START	/;"	d
SQL_COLUMN_EXPR	/usr/include/iodbcext.h	/^#define SQL_COLUMN_EXPR	/;"	d
SQL_COLUMN_IGNORE	/usr/include/sqlext.h	/^#define SQL_COLUMN_IGNORE	/;"	d
SQL_COLUMN_KEY	/usr/include/iodbcext.h	/^#define SQL_COLUMN_KEY /;"	d
SQL_COLUMN_LABEL	/usr/include/sqlext.h	/^#define SQL_COLUMN_LABEL	/;"	d
SQL_COLUMN_LENGTH	/usr/include/sqlext.h	/^#define SQL_COLUMN_LENGTH	/;"	d
SQL_COLUMN_MONEY	/usr/include/sqlext.h	/^#define SQL_COLUMN_MONEY	/;"	d
SQL_COLUMN_NAME	/usr/include/sqlext.h	/^#define SQL_COLUMN_NAME	/;"	d
SQL_COLUMN_NULLABLE	/usr/include/sqlext.h	/^#define SQL_COLUMN_NULLABLE	/;"	d
SQL_COLUMN_NUMBER_UNKNOWN	/usr/include/sqlext.h	/^#define SQL_COLUMN_NUMBER_UNKNOWN	/;"	d
SQL_COLUMN_OWNER_NAME	/usr/include/sqlext.h	/^#define SQL_COLUMN_OWNER_NAME	/;"	d
SQL_COLUMN_PRECISION	/usr/include/sqlext.h	/^#define SQL_COLUMN_PRECISION	/;"	d
SQL_COLUMN_QUALIFIER_NAME	/usr/include/sqlext.h	/^#define SQL_COLUMN_QUALIFIER_NAME	/;"	d
SQL_COLUMN_ROWVER	/usr/include/iodbcext.h	/^#define SQL_COLUMN_ROWVER /;"	d
SQL_COLUMN_SCALE	/usr/include/sqlext.h	/^#define SQL_COLUMN_SCALE	/;"	d
SQL_COLUMN_SEARCHABLE	/usr/include/sqlext.h	/^#define SQL_COLUMN_SEARCHABLE	/;"	d
SQL_COLUMN_TABLE_NAME	/usr/include/sqlext.h	/^#define SQL_COLUMN_TABLE_NAME	/;"	d
SQL_COLUMN_TYPE	/usr/include/sqlext.h	/^#define SQL_COLUMN_TYPE	/;"	d
SQL_COLUMN_TYPE_NAME	/usr/include/sqlext.h	/^#define SQL_COLUMN_TYPE_NAME	/;"	d
SQL_COLUMN_UNSIGNED	/usr/include/sqlext.h	/^#define SQL_COLUMN_UNSIGNED	/;"	d
SQL_COLUMN_UPDATABLE	/usr/include/sqlext.h	/^#define SQL_COLUMN_UPDATABLE	/;"	d
SQL_COL_PRED_BASIC	/usr/include/sqlext.h	/^#define SQL_COL_PRED_BASIC	/;"	d
SQL_COL_PRED_CHAR	/usr/include/sqlext.h	/^#define SQL_COL_PRED_CHAR	/;"	d
SQL_COMMIT	/usr/include/sql.h	/^#define SQL_COMMIT	/;"	d
SQL_CONCAT_NULL_BEHAVIOR	/usr/include/sqlext.h	/^#define SQL_CONCAT_NULL_BEHAVIOR	/;"	d
SQL_CONCURRENCY	/usr/include/sqlext.h	/^#define SQL_CONCURRENCY	/;"	d
SQL_CONCURRENT_TRANS	/usr/include/iodbcext.h	/^#define SQL_CONCURRENT_TRANS /;"	d
SQL_CONCUR_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CONCUR_DEFAULT	/;"	d
SQL_CONCUR_LOCK	/usr/include/sqlext.h	/^#define SQL_CONCUR_LOCK	/;"	d
SQL_CONCUR_READ_ONLY	/usr/include/sqlext.h	/^#define SQL_CONCUR_READ_ONLY	/;"	d
SQL_CONCUR_ROWVER	/usr/include/sqlext.h	/^#define SQL_CONCUR_ROWVER	/;"	d
SQL_CONCUR_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_CONCUR_TIMESTAMP	/;"	d
SQL_CONCUR_VALUES	/usr/include/sqlext.h	/^#define SQL_CONCUR_VALUES	/;"	d
SQL_CONCUR_VAL_EXTENT	/usr/include/iodbcext.h	/^#define SQL_CONCUR_VAL_EXTENT	/;"	d
SQL_CONNECTTYPE	/usr/include/iodbcext.h	/^#define SQL_CONNECTTYPE /;"	d
SQL_CONNECTTYPE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_CONNECTTYPE_DEFAULT /;"	d
SQL_CONNECT_OPT_DRVR_START	/usr/include/sqlext.h	/^#define SQL_CONNECT_OPT_DRVR_START	/;"	d
SQL_CONN_CONTEXT	/usr/include/iodbcext.h	/^#define SQL_CONN_CONTEXT /;"	d
SQL_CONN_OPT_MAX	/usr/include/sqlext.h	/^#define SQL_CONN_OPT_MAX	/;"	d
SQL_CONN_OPT_MIN	/usr/include/sqlext.h	/^#define SQL_CONN_OPT_MIN	/;"	d
SQL_CONVERT_BIGINT	/usr/include/sqlext.h	/^#define SQL_CONVERT_BIGINT	/;"	d
SQL_CONVERT_BINARY	/usr/include/sqlext.h	/^#define SQL_CONVERT_BINARY	/;"	d
SQL_CONVERT_BIT	/usr/include/sqlext.h	/^#define SQL_CONVERT_BIT	/;"	d
SQL_CONVERT_CHAR	/usr/include/sqlext.h	/^#define SQL_CONVERT_CHAR	/;"	d
SQL_CONVERT_DATE	/usr/include/sqlext.h	/^#define SQL_CONVERT_DATE	/;"	d
SQL_CONVERT_DECIMAL	/usr/include/sqlext.h	/^#define SQL_CONVERT_DECIMAL	/;"	d
SQL_CONVERT_DOUBLE	/usr/include/sqlext.h	/^#define SQL_CONVERT_DOUBLE	/;"	d
SQL_CONVERT_FLOAT	/usr/include/sqlext.h	/^#define SQL_CONVERT_FLOAT	/;"	d
SQL_CONVERT_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_CONVERT_FUNCTIONS	/;"	d
SQL_CONVERT_INTEGER	/usr/include/sqlext.h	/^#define SQL_CONVERT_INTEGER	/;"	d
SQL_CONVERT_INTERVAL_DAY_TIME	/usr/include/sqlext.h	/^#define SQL_CONVERT_INTERVAL_DAY_TIME	/;"	d
SQL_CONVERT_INTERVAL_YEAR_MONTH	/usr/include/sqlext.h	/^#define SQL_CONVERT_INTERVAL_YEAR_MONTH	/;"	d
SQL_CONVERT_LONGVARBINARY	/usr/include/sqlext.h	/^#define SQL_CONVERT_LONGVARBINARY	/;"	d
SQL_CONVERT_LONGVARCHAR	/usr/include/sqlext.h	/^#define SQL_CONVERT_LONGVARCHAR	/;"	d
SQL_CONVERT_NUMERIC	/usr/include/sqlext.h	/^#define SQL_CONVERT_NUMERIC	/;"	d
SQL_CONVERT_REAL	/usr/include/sqlext.h	/^#define SQL_CONVERT_REAL	/;"	d
SQL_CONVERT_SMALLINT	/usr/include/sqlext.h	/^#define SQL_CONVERT_SMALLINT	/;"	d
SQL_CONVERT_TIME	/usr/include/sqlext.h	/^#define SQL_CONVERT_TIME	/;"	d
SQL_CONVERT_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_CONVERT_TIMESTAMP	/;"	d
SQL_CONVERT_TINYINT	/usr/include/sqlext.h	/^#define SQL_CONVERT_TINYINT	/;"	d
SQL_CONVERT_VARBINARY	/usr/include/sqlext.h	/^#define SQL_CONVERT_VARBINARY	/;"	d
SQL_CONVERT_VARCHAR	/usr/include/sqlext.h	/^#define SQL_CONVERT_VARCHAR	/;"	d
SQL_CONVERT_WCHAR	/usr/include/sqlext.h	/^#define SQL_CONVERT_WCHAR	/;"	d
SQL_CONVERT_WLONGVARCHAR	/usr/include/sqlext.h	/^#define SQL_CONVERT_WLONGVARCHAR	/;"	d
SQL_CONVERT_WVARCHAR	/usr/include/sqlext.h	/^#define SQL_CONVERT_WVARCHAR	/;"	d
SQL_COORDINATED_TRANS	/usr/include/iodbcext.h	/^#define SQL_COORDINATED_TRANS /;"	d
SQL_COPT_SS_ANSI_NPW	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_ANSI_NPW	/;"	d
SQL_COPT_SS_ANSI_OEM	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_ANSI_OEM	/;"	d
SQL_COPT_SS_BASE	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_BASE	/;"	d
SQL_COPT_SS_BCP	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_BCP	/;"	d
SQL_COPT_SS_CONNECTION_DEAD	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_CONNECTION_DEAD	/;"	d
SQL_COPT_SS_ENLIST_IN_DTC	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_ENLIST_IN_DTC	/;"	d
SQL_COPT_SS_ENLIST_IN_XA	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_ENLIST_IN_XA	/;"	d
SQL_COPT_SS_FALLBACK_CONNECT	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_FALLBACK_CONNECT	/;"	d
SQL_COPT_SS_INTEGRATED_SECURITY	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_INTEGRATED_SECURITY	/;"	d
SQL_COPT_SS_MAX_USED	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_MAX_USED	/;"	d
SQL_COPT_SS_PERF_DATA	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PERF_DATA	/;"	d
SQL_COPT_SS_PERF_DATA_LOG	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PERF_DATA_LOG	/;"	d
SQL_COPT_SS_PERF_DATA_LOG_NOW	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PERF_DATA_LOG_NOW	/;"	d
SQL_COPT_SS_PERF_QUERY	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PERF_QUERY	/;"	d
SQL_COPT_SS_PERF_QUERY_INTERVAL	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PERF_QUERY_INTERVAL /;"	d
SQL_COPT_SS_PERF_QUERY_LOG	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PERF_QUERY_LOG	/;"	d
SQL_COPT_SS_PRESERVE_CURSORS	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_PRESERVE_CURSORS	/;"	d
SQL_COPT_SS_QUOTED_IDENT	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_QUOTED_IDENT	/;"	d
SQL_COPT_SS_REMOTE_PWD	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_REMOTE_PWD	/;"	d
SQL_COPT_SS_USER_DATA	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_USER_DATA	/;"	d
SQL_COPT_SS_USE_PROC_FOR_PREP	/usr/include/iodbcext.h	/^#define SQL_COPT_SS_USE_PROC_FOR_PREP	/;"	d
SQL_CORRELATION_NAME	/usr/include/sqlext.h	/^#define SQL_CORRELATION_NAME	/;"	d
SQL_CP_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CP_DEFAULT	/;"	d
SQL_CP_MATCH_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CP_MATCH_DEFAULT	/;"	d
SQL_CP_OFF	/usr/include/sqlext.h	/^#define SQL_CP_OFF	/;"	d
SQL_CP_ONE_PER_DRIVER	/usr/include/sqlext.h	/^#define SQL_CP_ONE_PER_DRIVER	/;"	d
SQL_CP_ONE_PER_HENV	/usr/include/sqlext.h	/^#define SQL_CP_ONE_PER_HENV	/;"	d
SQL_CP_RELAXED_MATCH	/usr/include/sqlext.h	/^#define SQL_CP_RELAXED_MATCH	/;"	d
SQL_CP_STRICT_MATCH	/usr/include/sqlext.h	/^#define SQL_CP_STRICT_MATCH	/;"	d
SQL_CREATE_ASSERTION	/usr/include/sqlext.h	/^#define SQL_CREATE_ASSERTION	/;"	d
SQL_CREATE_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_CREATE_CHARACTER_SET	/;"	d
SQL_CREATE_COLLATION	/usr/include/sqlext.h	/^#define SQL_CREATE_COLLATION	/;"	d
SQL_CREATE_DOMAIN	/usr/include/sqlext.h	/^#define SQL_CREATE_DOMAIN	/;"	d
SQL_CREATE_SCHEMA	/usr/include/sqlext.h	/^#define SQL_CREATE_SCHEMA	/;"	d
SQL_CREATE_TABLE	/usr/include/sqlext.h	/^#define SQL_CREATE_TABLE	/;"	d
SQL_CREATE_TRANSLATION	/usr/include/sqlext.h	/^#define SQL_CREATE_TRANSLATION	/;"	d
SQL_CREATE_VIEW	/usr/include/sqlext.h	/^#define SQL_CREATE_VIEW	/;"	d
SQL_CR_CLOSE	/usr/include/sqlext.h	/^#define SQL_CR_CLOSE	/;"	d
SQL_CR_DELETE	/usr/include/sqlext.h	/^#define SQL_CR_DELETE	/;"	d
SQL_CR_PRESERVE	/usr/include/sqlext.h	/^#define SQL_CR_PRESERVE	/;"	d
SQL_CS_AUTHORIZATION	/usr/include/sqlext.h	/^#define SQL_CS_AUTHORIZATION	/;"	d
SQL_CS_CREATE_SCHEMA	/usr/include/sqlext.h	/^#define SQL_CS_CREATE_SCHEMA	/;"	d
SQL_CS_DEFAULT_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_CS_DEFAULT_CHARACTER_SET	/;"	d
SQL_CTR_CREATE_TRANSLATION	/usr/include/sqlext.h	/^#define SQL_CTR_CREATE_TRANSLATION	/;"	d
SQL_CT_COLUMN_COLLATION	/usr/include/sqlext.h	/^#define SQL_CT_COLUMN_COLLATION	/;"	d
SQL_CT_COLUMN_CONSTRAINT	/usr/include/sqlext.h	/^#define SQL_CT_COLUMN_CONSTRAINT	/;"	d
SQL_CT_COLUMN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CT_COLUMN_DEFAULT	/;"	d
SQL_CT_COMMIT_DELETE	/usr/include/sqlext.h	/^#define SQL_CT_COMMIT_DELETE	/;"	d
SQL_CT_COMMIT_PRESERVE	/usr/include/sqlext.h	/^#define SQL_CT_COMMIT_PRESERVE	/;"	d
SQL_CT_CONSTRAINT_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_CT_CONSTRAINT_DEFERRABLE	/;"	d
SQL_CT_CONSTRAINT_INITIALLY_DEFERRED	/usr/include/sqlext.h	/^#define SQL_CT_CONSTRAINT_INITIALLY_DEFERRED	/;"	d
SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE	/usr/include/sqlext.h	/^#define SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE	/;"	d
SQL_CT_CONSTRAINT_NAME_DEFINITION	/usr/include/sqlext.h	/^#define SQL_CT_CONSTRAINT_NAME_DEFINITION	/;"	d
SQL_CT_CONSTRAINT_NON_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_CT_CONSTRAINT_NON_DEFERRABLE	/;"	d
SQL_CT_CREATE_TABLE	/usr/include/sqlext.h	/^#define SQL_CT_CREATE_TABLE	/;"	d
SQL_CT_GLOBAL_TEMPORARY	/usr/include/sqlext.h	/^#define SQL_CT_GLOBAL_TEMPORARY	/;"	d
SQL_CT_LOCAL_TEMPORARY	/usr/include/sqlext.h	/^#define SQL_CT_LOCAL_TEMPORARY	/;"	d
SQL_CT_TABLE_CONSTRAINT	/usr/include/sqlext.h	/^#define SQL_CT_TABLE_CONSTRAINT	/;"	d
SQL_CURRENT_QUALIFIER	/usr/include/sqlext.h	/^#define SQL_CURRENT_QUALIFIER	/;"	d
SQL_CURRENT_SCHEMA	/usr/include/iodbcext.h	/^#define SQL_CURRENT_SCHEMA /;"	d
SQL_CURSOR_COMMIT_BEHAVIOR	/usr/include/sql.h	/^#define SQL_CURSOR_COMMIT_BEHAVIOR	/;"	d
SQL_CURSOR_DYNAMIC	/usr/include/sqlext.h	/^#define SQL_CURSOR_DYNAMIC	/;"	d
SQL_CURSOR_FORWARD_ONLY	/usr/include/sqlext.h	/^#define SQL_CURSOR_FORWARD_ONLY	/;"	d
SQL_CURSOR_HOLD	/usr/include/iodbcext.h	/^#define  SQL_CURSOR_HOLD /;"	d
SQL_CURSOR_HOLD_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_CURSOR_HOLD_DEFAULT /;"	d
SQL_CURSOR_HOLD_OFF	/usr/include/iodbcext.h	/^#define SQL_CURSOR_HOLD_OFF /;"	d
SQL_CURSOR_HOLD_ON	/usr/include/iodbcext.h	/^#define SQL_CURSOR_HOLD_ON /;"	d
SQL_CURSOR_KEYSET_DRIVEN	/usr/include/sqlext.h	/^#define SQL_CURSOR_KEYSET_DRIVEN	/;"	d
SQL_CURSOR_ROLLBACK_BEHAVIOR	/usr/include/sqlext.h	/^#define SQL_CURSOR_ROLLBACK_BEHAVIOR	/;"	d
SQL_CURSOR_SENSITIVITY	/usr/include/sql.h	/^#define SQL_CURSOR_SENSITIVITY	/;"	d
SQL_CURSOR_STATIC	/usr/include/sqlext.h	/^#define SQL_CURSOR_STATIC	/;"	d
SQL_CURSOR_TYPE	/usr/include/sqlext.h	/^#define SQL_CURSOR_TYPE	/;"	d
SQL_CURSOR_TYPE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CURSOR_TYPE_DEFAULT	/;"	d
SQL_CUR_DEFAULT	/usr/include/sqlext.h	/^#define SQL_CUR_DEFAULT	/;"	d
SQL_CUR_USE_DRIVER	/usr/include/sqlext.h	/^#define SQL_CUR_USE_DRIVER	/;"	d
SQL_CUR_USE_IF_NEEDED	/usr/include/sqlext.h	/^#define SQL_CUR_USE_IF_NEEDED	/;"	d
SQL_CUR_USE_ODBC	/usr/include/sqlext.h	/^#define SQL_CUR_USE_ODBC	/;"	d
SQL_CU_DML_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_CU_DML_STATEMENTS	/;"	d
SQL_CU_INDEX_DEFINITION	/usr/include/sqlext.h	/^#define SQL_CU_INDEX_DEFINITION	/;"	d
SQL_CU_PRIVILEGE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_CU_PRIVILEGE_DEFINITION	/;"	d
SQL_CU_PROCEDURE_INVOCATION	/usr/include/sqlext.h	/^#define SQL_CU_PROCEDURE_INVOCATION	/;"	d
SQL_CU_TABLE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_CU_TABLE_DEFINITION	/;"	d
SQL_CVT_BIGINT	/usr/include/sqlext.h	/^#define SQL_CVT_BIGINT	/;"	d
SQL_CVT_BINARY	/usr/include/sqlext.h	/^#define SQL_CVT_BINARY	/;"	d
SQL_CVT_BIT	/usr/include/sqlext.h	/^#define SQL_CVT_BIT	/;"	d
SQL_CVT_CHAR	/usr/include/sqlext.h	/^#define SQL_CVT_CHAR	/;"	d
SQL_CVT_DATE	/usr/include/sqlext.h	/^#define SQL_CVT_DATE	/;"	d
SQL_CVT_DECIMAL	/usr/include/sqlext.h	/^#define SQL_CVT_DECIMAL	/;"	d
SQL_CVT_DOUBLE	/usr/include/sqlext.h	/^#define SQL_CVT_DOUBLE	/;"	d
SQL_CVT_FLOAT	/usr/include/sqlext.h	/^#define SQL_CVT_FLOAT	/;"	d
SQL_CVT_INTEGER	/usr/include/sqlext.h	/^#define SQL_CVT_INTEGER	/;"	d
SQL_CVT_INTERVAL_DAY_TIME	/usr/include/sqlext.h	/^#define SQL_CVT_INTERVAL_DAY_TIME	/;"	d
SQL_CVT_INTERVAL_YEAR_MONTH	/usr/include/sqlext.h	/^#define SQL_CVT_INTERVAL_YEAR_MONTH	/;"	d
SQL_CVT_LONGVARBINARY	/usr/include/sqlext.h	/^#define SQL_CVT_LONGVARBINARY	/;"	d
SQL_CVT_LONGVARCHAR	/usr/include/sqlext.h	/^#define SQL_CVT_LONGVARCHAR	/;"	d
SQL_CVT_NUMERIC	/usr/include/sqlext.h	/^#define SQL_CVT_NUMERIC	/;"	d
SQL_CVT_REAL	/usr/include/sqlext.h	/^#define SQL_CVT_REAL	/;"	d
SQL_CVT_SMALLINT	/usr/include/sqlext.h	/^#define SQL_CVT_SMALLINT	/;"	d
SQL_CVT_TIME	/usr/include/sqlext.h	/^#define SQL_CVT_TIME	/;"	d
SQL_CVT_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_CVT_TIMESTAMP	/;"	d
SQL_CVT_TINYINT	/usr/include/sqlext.h	/^#define SQL_CVT_TINYINT	/;"	d
SQL_CVT_VARBINARY	/usr/include/sqlext.h	/^#define SQL_CVT_VARBINARY	/;"	d
SQL_CVT_VARCHAR	/usr/include/sqlext.h	/^#define SQL_CVT_VARCHAR	/;"	d
SQL_CVT_WCHAR	/usr/include/sqlext.h	/^#define SQL_CVT_WCHAR	/;"	d
SQL_CVT_WLONGVARCHAR	/usr/include/sqlext.h	/^#define SQL_CVT_WLONGVARCHAR	/;"	d
SQL_CVT_WVARCHAR	/usr/include/sqlext.h	/^#define SQL_CVT_WVARCHAR	/;"	d
SQL_CV_CASCADED	/usr/include/sqlext.h	/^#define SQL_CV_CASCADED	/;"	d
SQL_CV_CHECK_OPTION	/usr/include/sqlext.h	/^#define SQL_CV_CHECK_OPTION	/;"	d
SQL_CV_CREATE_VIEW	/usr/include/sqlext.h	/^#define SQL_CV_CREATE_VIEW	/;"	d
SQL_CV_LOCAL	/usr/include/sqlext.h	/^#define SQL_CV_LOCAL	/;"	d
SQL_C_BINARY	/usr/include/sqlext.h	/^#define SQL_C_BINARY	/;"	d
SQL_C_BIT	/usr/include/sqlext.h	/^#define SQL_C_BIT	/;"	d
SQL_C_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_C_BOOKMARK	/;"	d
SQL_C_CHAR	/usr/include/sqlext.h	/^#define SQL_C_CHAR /;"	d
SQL_C_DATE	/usr/include/sqlext.h	/^#define SQL_C_DATE	/;"	d
SQL_C_DEFAULT	/usr/include/sqlext.h	/^#define SQL_C_DEFAULT	/;"	d
SQL_C_DOUBLE	/usr/include/sqlext.h	/^#define SQL_C_DOUBLE /;"	d
SQL_C_FLOAT	/usr/include/sqlext.h	/^#define SQL_C_FLOAT /;"	d
SQL_C_GUID	/usr/include/sqlext.h	/^#define SQL_C_GUID	/;"	d
SQL_C_INTERVAL_DAY	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_DAY	/;"	d
SQL_C_INTERVAL_DAY_TO_HOUR	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_DAY_TO_HOUR	/;"	d
SQL_C_INTERVAL_DAY_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_DAY_TO_MINUTE	/;"	d
SQL_C_INTERVAL_DAY_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_DAY_TO_SECOND	/;"	d
SQL_C_INTERVAL_HOUR	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_HOUR	/;"	d
SQL_C_INTERVAL_HOUR_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_HOUR_TO_MINUTE	/;"	d
SQL_C_INTERVAL_HOUR_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_HOUR_TO_SECOND	/;"	d
SQL_C_INTERVAL_MINUTE	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_MINUTE	/;"	d
SQL_C_INTERVAL_MINUTE_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_MINUTE_TO_SECOND	/;"	d
SQL_C_INTERVAL_MONTH	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_MONTH	/;"	d
SQL_C_INTERVAL_SECOND	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_SECOND	/;"	d
SQL_C_INTERVAL_YEAR	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_YEAR	/;"	d
SQL_C_INTERVAL_YEAR_TO_MONTH	/usr/include/sqlext.h	/^#define SQL_C_INTERVAL_YEAR_TO_MONTH	/;"	d
SQL_C_LONG	/usr/include/sqlext.h	/^#define SQL_C_LONG /;"	d
SQL_C_NUMERIC	/usr/include/sqlext.h	/^#define SQL_C_NUMERIC	/;"	d
SQL_C_SBIGINT	/usr/include/sqlext.h	/^#define SQL_C_SBIGINT	/;"	d
SQL_C_SHORT	/usr/include/sqlext.h	/^#define SQL_C_SHORT /;"	d
SQL_C_SLONG	/usr/include/sqlext.h	/^#define SQL_C_SLONG	/;"	d
SQL_C_SSHORT	/usr/include/sqlext.h	/^#define SQL_C_SSHORT	/;"	d
SQL_C_STINYINT	/usr/include/sqlext.h	/^#define SQL_C_STINYINT	/;"	d
SQL_C_TCHAR	/usr/include/sqlucode.h	/^#define SQL_C_TCHAR	/;"	d
SQL_C_TIME	/usr/include/sqlext.h	/^#define SQL_C_TIME	/;"	d
SQL_C_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_C_TIMESTAMP	/;"	d
SQL_C_TINYINT	/usr/include/sqlext.h	/^#define SQL_C_TINYINT	/;"	d
SQL_C_TYPE_DATE	/usr/include/sqlext.h	/^#define SQL_C_TYPE_DATE	/;"	d
SQL_C_TYPE_TIME	/usr/include/sqlext.h	/^#define SQL_C_TYPE_TIME	/;"	d
SQL_C_TYPE_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_C_TYPE_TIMESTAMP	/;"	d
SQL_C_UBIGINT	/usr/include/sqlext.h	/^#define SQL_C_UBIGINT	/;"	d
SQL_C_ULONG	/usr/include/sqlext.h	/^#define SQL_C_ULONG	/;"	d
SQL_C_USHORT	/usr/include/sqlext.h	/^#define SQL_C_USHORT	/;"	d
SQL_C_UTINYINT	/usr/include/sqlext.h	/^#define SQL_C_UTINYINT	/;"	d
SQL_C_VARBOOKMARK	/usr/include/sqlext.h	/^#define SQL_C_VARBOOKMARK	/;"	d
SQL_C_WCHAR	/usr/include/sqlucode.h	/^#define SQL_C_WCHAR	/;"	d
SQL_DATABASE_NAME	/usr/include/sqlext.h	/^#define SQL_DATABASE_NAME	/;"	d
SQL_DATA_AT_EXEC	/usr/include/sql.h	/^#define SQL_DATA_AT_EXEC	/;"	d
SQL_DATA_SOURCE_NAME	/usr/include/sql.h	/^#define SQL_DATA_SOURCE_NAME	/;"	d
SQL_DATA_SOURCE_READ_ONLY	/usr/include/sql.h	/^#define SQL_DATA_SOURCE_READ_ONLY	/;"	d
SQL_DATE	/usr/include/sqlext.h	/^#define SQL_DATE	/;"	d
SQL_DATETIME	/usr/include/sql.h	/^#define SQL_DATETIME	/;"	d
SQL_DATETIME_LITERALS	/usr/include/sqlext.h	/^#define SQL_DATETIME_LITERALS	/;"	d
SQL_DATE_LEN	/usr/include/sql.h	/^#define SQL_DATE_LEN	/;"	d
SQL_DATE_STRUCT	/usr/include/sqltypes.h	/^typedef DATE_STRUCT		SQL_DATE_STRUCT;$/;"	t
SQL_DAY	/usr/include/sqlext.h	/^#define SQL_DAY	/;"	d
SQL_DAY_SECOND_STRUCT	/usr/include/sqltypes.h	/^SQL_DAY_SECOND_STRUCT;$/;"	t	typeref:struct:tagSQL_DAY_SECOND
SQL_DAY_TO_HOUR	/usr/include/sqlext.h	/^#define SQL_DAY_TO_HOUR	/;"	d
SQL_DAY_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_DAY_TO_MINUTE	/;"	d
SQL_DAY_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_DAY_TO_SECOND	/;"	d
SQL_DA_DROP_ASSERTION	/usr/include/sqlext.h	/^#define SQL_DA_DROP_ASSERTION	/;"	d
SQL_DB2ESTIMATE	/usr/include/iodbcext.h	/^#define SQL_DB2ESTIMATE /;"	d
SQL_DB2ESTIMATE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_DB2ESTIMATE_DEFAULT /;"	d
SQL_DB2ESTIMATE_OFF	/usr/include/iodbcext.h	/^#define SQL_DB2ESTIMATE_OFF /;"	d
SQL_DB2ESTIMATE_ON	/usr/include/iodbcext.h	/^#define SQL_DB2ESTIMATE_ON /;"	d
SQL_DB2EXPLAIN	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN /;"	d
SQL_DB2EXPLAIN_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN_DEFAULT /;"	d
SQL_DB2EXPLAIN_MODE_ON	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN_MODE_ON /;"	d
SQL_DB2EXPLAIN_OFF	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN_OFF /;"	d
SQL_DB2EXPLAIN_ON	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN_ON /;"	d
SQL_DB2EXPLAIN_SNAPSHOT_MODE_ON	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN_SNAPSHOT_MODE_ON /;"	d
SQL_DB2EXPLAIN_SNAPSHOT_ON	/usr/include/iodbcext.h	/^#define SQL_DB2EXPLAIN_SNAPSHOT_ON /;"	d
SQL_DBMS_NAME	/usr/include/sql.h	/^#define SQL_DBMS_NAME	/;"	d
SQL_DBMS_VER	/usr/include/sql.h	/^#define SQL_DBMS_VER	/;"	d
SQL_DB_DEFAULT	/usr/include/sqlext.h	/^#define SQL_DB_DEFAULT	/;"	d
SQL_DB_DISCONNECT	/usr/include/sqlext.h	/^#define SQL_DB_DISCONNECT	/;"	d
SQL_DB_RETURN_TO_POOL	/usr/include/sqlext.h	/^#define SQL_DB_RETURN_TO_POOL	/;"	d
SQL_DCS_DROP_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_DCS_DROP_CHARACTER_SET	/;"	d
SQL_DC_DROP_COLLATION	/usr/include/sqlext.h	/^#define SQL_DC_DROP_COLLATION	/;"	d
SQL_DDL_INDEX	/usr/include/sqlext.h	/^#define SQL_DDL_INDEX	/;"	d
SQL_DD_CASCADE	/usr/include/sqlext.h	/^#define SQL_DD_CASCADE	/;"	d
SQL_DD_DROP_DOMAIN	/usr/include/sqlext.h	/^#define SQL_DD_DROP_DOMAIN	/;"	d
SQL_DD_RESTRICT	/usr/include/sqlext.h	/^#define SQL_DD_RESTRICT	/;"	d
SQL_DECIMAL	/usr/include/sql.h	/^#define SQL_DECIMAL	/;"	d
SQL_DEFAULT	/usr/include/sql.h	/^#define SQL_DEFAULT	/;"	d
SQL_DEFAULT_PARAM	/usr/include/sqlext.h	/^#define SQL_DEFAULT_PARAM	/;"	d
SQL_DEFAULT_TXN_ISOLATION	/usr/include/sql.h	/^#define SQL_DEFAULT_TXN_ISOLATION	/;"	d
SQL_DEFERRED_PREPARE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_DEFERRED_PREPARE_DEFAULT /;"	d
SQL_DEFERRED_PREPARE_OFF	/usr/include/iodbcext.h	/^#define SQL_DEFERRED_PREPARE_OFF /;"	d
SQL_DEFERRED_PREPARE_ON	/usr/include/iodbcext.h	/^#define SQL_DEFERRED_PREPARE_ON /;"	d
SQL_DELETE	/usr/include/sqlext.h	/^#define SQL_DELETE	/;"	d
SQL_DELETE_BY_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_DELETE_BY_BOOKMARK	/;"	d
SQL_DELETE_RECORD	/usr/include/sqlext.h	/^#define SQL_DELETE_RECORD(/;"	d
SQL_DESCRIBE_PARAMETER	/usr/include/sql.h	/^#define SQL_DESCRIBE_PARAMETER	/;"	d
SQL_DESC_ALLOC_AUTO	/usr/include/sql.h	/^#define SQL_DESC_ALLOC_AUTO	/;"	d
SQL_DESC_ALLOC_TYPE	/usr/include/sql.h	/^#define SQL_DESC_ALLOC_TYPE	/;"	d
SQL_DESC_ALLOC_USER	/usr/include/sql.h	/^#define SQL_DESC_ALLOC_USER	/;"	d
SQL_DESC_ARRAY_SIZE	/usr/include/sqlext.h	/^#define SQL_DESC_ARRAY_SIZE	/;"	d
SQL_DESC_ARRAY_STATUS_PTR	/usr/include/sqlext.h	/^#define SQL_DESC_ARRAY_STATUS_PTR	/;"	d
SQL_DESC_AUTO_UNIQUE_VALUE	/usr/include/sqlext.h	/^#define SQL_DESC_AUTO_UNIQUE_VALUE	/;"	d
SQL_DESC_BASE_COLUMN_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_BASE_COLUMN_NAME	/;"	d
SQL_DESC_BASE_TABLE_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_BASE_TABLE_NAME	/;"	d
SQL_DESC_BIND_OFFSET_PTR	/usr/include/sqlext.h	/^#define SQL_DESC_BIND_OFFSET_PTR	/;"	d
SQL_DESC_BIND_TYPE	/usr/include/sqlext.h	/^#define SQL_DESC_BIND_TYPE	/;"	d
SQL_DESC_CASE_SENSITIVE	/usr/include/sqlext.h	/^#define SQL_DESC_CASE_SENSITIVE	/;"	d
SQL_DESC_CATALOG_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_CATALOG_NAME	/;"	d
SQL_DESC_CONCISE_TYPE	/usr/include/sqlext.h	/^#define SQL_DESC_CONCISE_TYPE	/;"	d
SQL_DESC_COUNT	/usr/include/sql.h	/^#define SQL_DESC_COUNT	/;"	d
SQL_DESC_DATA_PTR	/usr/include/sql.h	/^#define SQL_DESC_DATA_PTR	/;"	d
SQL_DESC_DATETIME_INTERVAL_CODE	/usr/include/sql.h	/^#define SQL_DESC_DATETIME_INTERVAL_CODE	/;"	d
SQL_DESC_DATETIME_INTERVAL_PRECISION	/usr/include/sqlext.h	/^#define SQL_DESC_DATETIME_INTERVAL_PRECISION	/;"	d
SQL_DESC_DISPLAY_SIZE	/usr/include/sqlext.h	/^#define SQL_DESC_DISPLAY_SIZE	/;"	d
SQL_DESC_EXPR	/usr/include/iodbcext.h	/^#define SQL_DESC_EXPR	/;"	d
SQL_DESC_FIXED_PREC_SCALE	/usr/include/sqlext.h	/^#define SQL_DESC_FIXED_PREC_SCALE	/;"	d
SQL_DESC_INDICATOR_PTR	/usr/include/sql.h	/^#define SQL_DESC_INDICATOR_PTR	/;"	d
SQL_DESC_KEY	/usr/include/iodbcext.h	/^#define SQL_DESC_KEY	/;"	d
SQL_DESC_LABEL	/usr/include/sqlext.h	/^#define SQL_DESC_LABEL	/;"	d
SQL_DESC_LENGTH	/usr/include/sql.h	/^#define SQL_DESC_LENGTH	/;"	d
SQL_DESC_LITERAL_PREFIX	/usr/include/sqlext.h	/^#define SQL_DESC_LITERAL_PREFIX	/;"	d
SQL_DESC_LITERAL_SUFFIX	/usr/include/sqlext.h	/^#define SQL_DESC_LITERAL_SUFFIX	/;"	d
SQL_DESC_LOCAL_TYPE_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_LOCAL_TYPE_NAME	/;"	d
SQL_DESC_MAXIMUM_SCALE	/usr/include/sqlext.h	/^#define SQL_DESC_MAXIMUM_SCALE	/;"	d
SQL_DESC_MINIMUM_SCALE	/usr/include/sqlext.h	/^#define SQL_DESC_MINIMUM_SCALE	/;"	d
SQL_DESC_NAME	/usr/include/sql.h	/^#define SQL_DESC_NAME	/;"	d
SQL_DESC_NULLABLE	/usr/include/sql.h	/^#define SQL_DESC_NULLABLE	/;"	d
SQL_DESC_NUM_PREC_RADIX	/usr/include/sqlext.h	/^#define SQL_DESC_NUM_PREC_RADIX	/;"	d
SQL_DESC_OCTET_LENGTH	/usr/include/sql.h	/^#define SQL_DESC_OCTET_LENGTH	/;"	d
SQL_DESC_OCTET_LENGTH_PTR	/usr/include/sql.h	/^#define SQL_DESC_OCTET_LENGTH_PTR	/;"	d
SQL_DESC_PARAMETER_TYPE	/usr/include/sqlext.h	/^#define SQL_DESC_PARAMETER_TYPE	/;"	d
SQL_DESC_PRECISION	/usr/include/sql.h	/^#define SQL_DESC_PRECISION	/;"	d
SQL_DESC_ROWS_PROCESSED_PTR	/usr/include/sqlext.h	/^#define SQL_DESC_ROWS_PROCESSED_PTR	/;"	d
SQL_DESC_ROWVER	/usr/include/sqlext.h	/^#define SQL_DESC_ROWVER	/;"	d
SQL_DESC_SCALE	/usr/include/sql.h	/^#define SQL_DESC_SCALE	/;"	d
SQL_DESC_SCHEMA_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_SCHEMA_NAME	/;"	d
SQL_DESC_SEARCHABLE	/usr/include/sqlext.h	/^#define SQL_DESC_SEARCHABLE	/;"	d
SQL_DESC_TABLE_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_TABLE_NAME	/;"	d
SQL_DESC_TYPE	/usr/include/sql.h	/^#define SQL_DESC_TYPE	/;"	d
SQL_DESC_TYPE_NAME	/usr/include/sqlext.h	/^#define SQL_DESC_TYPE_NAME	/;"	d
SQL_DESC_UNNAMED	/usr/include/sql.h	/^#define SQL_DESC_UNNAMED	/;"	d
SQL_DESC_UNSIGNED	/usr/include/sqlext.h	/^#define SQL_DESC_UNSIGNED	/;"	d
SQL_DESC_UPDATABLE	/usr/include/sqlext.h	/^#define SQL_DESC_UPDATABLE	/;"	d
SQL_DIAG_ALTER_DOMAIN	/usr/include/sql.h	/^#define SQL_DIAG_ALTER_DOMAIN	/;"	d
SQL_DIAG_ALTER_TABLE	/usr/include/sql.h	/^#define SQL_DIAG_ALTER_TABLE	/;"	d
SQL_DIAG_CALL	/usr/include/sql.h	/^#define SQL_DIAG_CALL	/;"	d
SQL_DIAG_CLASS_ORIGIN	/usr/include/sql.h	/^#define SQL_DIAG_CLASS_ORIGIN	/;"	d
SQL_DIAG_COLUMN_NUMBER	/usr/include/sqlext.h	/^#define SQL_DIAG_COLUMN_NUMBER	/;"	d
SQL_DIAG_CONNECTION_NAME	/usr/include/sql.h	/^#define SQL_DIAG_CONNECTION_NAME	/;"	d
SQL_DIAG_CREATE_ASSERTION	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_ASSERTION	/;"	d
SQL_DIAG_CREATE_CHARACTER_SET	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_CHARACTER_SET	/;"	d
SQL_DIAG_CREATE_COLLATION	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_COLLATION	/;"	d
SQL_DIAG_CREATE_DOMAIN	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_DOMAIN	/;"	d
SQL_DIAG_CREATE_INDEX	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_INDEX	/;"	d
SQL_DIAG_CREATE_SCHEMA	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_SCHEMA	/;"	d
SQL_DIAG_CREATE_TABLE	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_TABLE	/;"	d
SQL_DIAG_CREATE_TRANSLATION	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_TRANSLATION	/;"	d
SQL_DIAG_CREATE_VIEW	/usr/include/sql.h	/^#define SQL_DIAG_CREATE_VIEW	/;"	d
SQL_DIAG_CURSOR_ROW_COUNT	/usr/include/sqlext.h	/^#define SQL_DIAG_CURSOR_ROW_COUNT	/;"	d
SQL_DIAG_DELETE_WHERE	/usr/include/sql.h	/^#define SQL_DIAG_DELETE_WHERE	/;"	d
SQL_DIAG_DROP_ASSERTION	/usr/include/sql.h	/^#define	SQL_DIAG_DROP_ASSERTION	/;"	d
SQL_DIAG_DROP_CHARACTER_SET	/usr/include/sql.h	/^#define	SQL_DIAG_DROP_CHARACTER_SET	/;"	d
SQL_DIAG_DROP_COLLATION	/usr/include/sql.h	/^#define	SQL_DIAG_DROP_COLLATION	/;"	d
SQL_DIAG_DROP_DOMAIN	/usr/include/sql.h	/^#define	SQL_DIAG_DROP_DOMAIN	/;"	d
SQL_DIAG_DROP_INDEX	/usr/include/sql.h	/^#define SQL_DIAG_DROP_INDEX	/;"	d
SQL_DIAG_DROP_SCHEMA	/usr/include/sql.h	/^#define SQL_DIAG_DROP_SCHEMA	/;"	d
SQL_DIAG_DROP_TABLE	/usr/include/sql.h	/^#define SQL_DIAG_DROP_TABLE	/;"	d
SQL_DIAG_DROP_TRANSLATION	/usr/include/sql.h	/^#define SQL_DIAG_DROP_TRANSLATION	/;"	d
SQL_DIAG_DROP_VIEW	/usr/include/sql.h	/^#define SQL_DIAG_DROP_VIEW	/;"	d
SQL_DIAG_DYNAMIC_DELETE_CURSOR	/usr/include/sql.h	/^#define SQL_DIAG_DYNAMIC_DELETE_CURSOR	/;"	d
SQL_DIAG_DYNAMIC_FUNCTION	/usr/include/sql.h	/^#define SQL_DIAG_DYNAMIC_FUNCTION	/;"	d
SQL_DIAG_DYNAMIC_FUNCTION_CODE	/usr/include/sql.h	/^#define SQL_DIAG_DYNAMIC_FUNCTION_CODE	/;"	d
SQL_DIAG_DYNAMIC_UPDATE_CURSOR	/usr/include/sql.h	/^#define SQL_DIAG_DYNAMIC_UPDATE_CURSOR	/;"	d
SQL_DIAG_GRANT	/usr/include/sql.h	/^#define SQL_DIAG_GRANT	/;"	d
SQL_DIAG_INSERT	/usr/include/sql.h	/^#define SQL_DIAG_INSERT	/;"	d
SQL_DIAG_MESSAGE_TEXT	/usr/include/sql.h	/^#define SQL_DIAG_MESSAGE_TEXT	/;"	d
SQL_DIAG_NATIVE	/usr/include/sql.h	/^#define SQL_DIAG_NATIVE	/;"	d
SQL_DIAG_NUMBER	/usr/include/sql.h	/^#define SQL_DIAG_NUMBER	/;"	d
SQL_DIAG_RETURNCODE	/usr/include/sql.h	/^#define SQL_DIAG_RETURNCODE	/;"	d
SQL_DIAG_REVOKE	/usr/include/sql.h	/^#define SQL_DIAG_REVOKE	/;"	d
SQL_DIAG_ROW_COUNT	/usr/include/sql.h	/^#define SQL_DIAG_ROW_COUNT	/;"	d
SQL_DIAG_ROW_NUMBER	/usr/include/sqlext.h	/^#define SQL_DIAG_ROW_NUMBER	/;"	d
SQL_DIAG_SELECT_CURSOR	/usr/include/sql.h	/^#define SQL_DIAG_SELECT_CURSOR	/;"	d
SQL_DIAG_SERVER_NAME	/usr/include/sql.h	/^#define SQL_DIAG_SERVER_NAME	/;"	d
SQL_DIAG_SQLSTATE	/usr/include/sql.h	/^#define SQL_DIAG_SQLSTATE	/;"	d
SQL_DIAG_SUBCLASS_ORIGIN	/usr/include/sql.h	/^#define SQL_DIAG_SUBCLASS_ORIGIN	/;"	d
SQL_DIAG_UNKNOWN_STATEMENT	/usr/include/sql.h	/^#define SQL_DIAG_UNKNOWN_STATEMENT	/;"	d
SQL_DIAG_UPDATE_WHERE	/usr/include/sql.h	/^#define SQL_DIAG_UPDATE_WHERE	/;"	d
SQL_DI_CREATE_INDEX	/usr/include/sqlext.h	/^#define SQL_DI_CREATE_INDEX	/;"	d
SQL_DI_DROP_INDEX	/usr/include/sqlext.h	/^#define SQL_DI_DROP_INDEX	/;"	d
SQL_DL_SQL92_DATE	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_DATE	/;"	d
SQL_DL_SQL92_INTERVAL_DAY	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_DAY	/;"	d
SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR	/;"	d
SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE	/;"	d
SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND	/;"	d
SQL_DL_SQL92_INTERVAL_HOUR	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_HOUR	/;"	d
SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE	/;"	d
SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND	/;"	d
SQL_DL_SQL92_INTERVAL_MINUTE	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_MINUTE	/;"	d
SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND	/;"	d
SQL_DL_SQL92_INTERVAL_MONTH	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_MONTH	/;"	d
SQL_DL_SQL92_INTERVAL_SECOND	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_SECOND	/;"	d
SQL_DL_SQL92_INTERVAL_YEAR	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_YEAR	/;"	d
SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH	/;"	d
SQL_DL_SQL92_TIME	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_TIME	/;"	d
SQL_DL_SQL92_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_DL_SQL92_TIMESTAMP	/;"	d
SQL_DM_VER	/usr/include/sqlext.h	/^#define SQL_DM_VER	/;"	d
SQL_DOUBLE	/usr/include/sql.h	/^#define SQL_DOUBLE	/;"	d
SQL_DRIVER_COMPLETE	/usr/include/sqlext.h	/^#define SQL_DRIVER_COMPLETE	/;"	d
SQL_DRIVER_COMPLETE_REQUIRED	/usr/include/sqlext.h	/^#define SQL_DRIVER_COMPLETE_REQUIRED	/;"	d
SQL_DRIVER_HDBC	/usr/include/sqlext.h	/^#define SQL_DRIVER_HDBC	/;"	d
SQL_DRIVER_HDESC	/usr/include/sqlext.h	/^#define SQL_DRIVER_HDESC	/;"	d
SQL_DRIVER_HENV	/usr/include/sqlext.h	/^#define SQL_DRIVER_HENV	/;"	d
SQL_DRIVER_HLIB	/usr/include/sqlext.h	/^#define SQL_DRIVER_HLIB	/;"	d
SQL_DRIVER_HSTMT	/usr/include/sqlext.h	/^#define SQL_DRIVER_HSTMT	/;"	d
SQL_DRIVER_NAME	/usr/include/sqlext.h	/^#define SQL_DRIVER_NAME	/;"	d
SQL_DRIVER_NOPROMPT	/usr/include/sqlext.h	/^#define SQL_DRIVER_NOPROMPT	/;"	d
SQL_DRIVER_ODBC_VER	/usr/include/sqlext.h	/^#define SQL_DRIVER_ODBC_VER	/;"	d
SQL_DRIVER_PROMPT	/usr/include/sqlext.h	/^#define SQL_DRIVER_PROMPT	/;"	d
SQL_DRIVER_VER	/usr/include/sqlext.h	/^#define SQL_DRIVER_VER	/;"	d
SQL_DROP	/usr/include/sql.h	/^#define SQL_DROP	/;"	d
SQL_DROP_ASSERTION	/usr/include/sqlext.h	/^#define SQL_DROP_ASSERTION	/;"	d
SQL_DROP_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_DROP_CHARACTER_SET	/;"	d
SQL_DROP_COLLATION	/usr/include/sqlext.h	/^#define SQL_DROP_COLLATION	/;"	d
SQL_DROP_DOMAIN	/usr/include/sqlext.h	/^#define SQL_DROP_DOMAIN	/;"	d
SQL_DROP_SCHEMA	/usr/include/sqlext.h	/^#define SQL_DROP_SCHEMA	/;"	d
SQL_DROP_TABLE	/usr/include/sqlext.h	/^#define SQL_DROP_TABLE	/;"	d
SQL_DROP_TRANSLATION	/usr/include/sqlext.h	/^#define SQL_DROP_TRANSLATION	/;"	d
SQL_DROP_VIEW	/usr/include/sqlext.h	/^#define SQL_DROP_VIEW	/;"	d
SQL_DS_CASCADE	/usr/include/sqlext.h	/^#define SQL_DS_CASCADE	/;"	d
SQL_DS_DROP_SCHEMA	/usr/include/sqlext.h	/^#define SQL_DS_DROP_SCHEMA	/;"	d
SQL_DS_RESTRICT	/usr/include/sqlext.h	/^#define SQL_DS_RESTRICT	/;"	d
SQL_DTC_DONE	/usr/include/sqlext.h	/^#define SQL_DTC_DONE	/;"	d
SQL_DTC_ENLIST_EXPENSIVE	/usr/include/sqlext.h	/^#define SQL_DTC_ENLIST_EXPENSIVE	/;"	d
SQL_DTC_TRANSITION_COST	/usr/include/sqlext.h	/^#define SQL_DTC_TRANSITION_COST	/;"	d
SQL_DTC_UNENLIST_EXPENSIVE	/usr/include/sqlext.h	/^#define SQL_DTC_UNENLIST_EXPENSIVE	/;"	d
SQL_DTR_DROP_TRANSLATION	/usr/include/sqlext.h	/^#define SQL_DTR_DROP_TRANSLATION	/;"	d
SQL_DT_CASCADE	/usr/include/sqlext.h	/^#define SQL_DT_CASCADE	/;"	d
SQL_DT_DROP_TABLE	/usr/include/sqlext.h	/^#define SQL_DT_DROP_TABLE	/;"	d
SQL_DT_RESTRICT	/usr/include/sqlext.h	/^#define SQL_DT_RESTRICT	/;"	d
SQL_DV_CASCADE	/usr/include/sqlext.h	/^#define SQL_DV_CASCADE	/;"	d
SQL_DV_DROP_VIEW	/usr/include/sqlext.h	/^#define SQL_DV_DROP_VIEW	/;"	d
SQL_DV_RESTRICT	/usr/include/sqlext.h	/^#define SQL_DV_RESTRICT	/;"	d
SQL_DYNAMIC_CURSOR_ATTRIBUTES1	/usr/include/sqlext.h	/^#define SQL_DYNAMIC_CURSOR_ATTRIBUTES1	/;"	d
SQL_DYNAMIC_CURSOR_ATTRIBUTES2	/usr/include/sqlext.h	/^#define SQL_DYNAMIC_CURSOR_ATTRIBUTES2	/;"	d
SQL_EARLYCLOSE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_EARLYCLOSE_DEFAULT /;"	d
SQL_EARLYCLOSE_OFF	/usr/include/iodbcext.h	/^#define SQL_EARLYCLOSE_OFF /;"	d
SQL_EARLYCLOSE_ON	/usr/include/iodbcext.h	/^#define SQL_EARLYCLOSE_ON /;"	d
SQL_ENSURE	/usr/include/sqlext.h	/^#define SQL_ENSURE	/;"	d
SQL_ENTIRE_ROWSET	/usr/include/sqlext.h	/^#define SQL_ENTIRE_ROWSET	/;"	d
SQL_ERROR	/usr/include/sql.h	/^#define SQL_ERROR	/;"	d
SQL_EXPRESSIONS_IN_ORDERBY	/usr/include/sqlext.h	/^#define SQL_EXPRESSIONS_IN_ORDERBY	/;"	d
SQL_EXT_API_LAST	/usr/include/sqlext.h	/^#define SQL_EXT_API_LAST	/;"	d
SQL_EXT_API_START	/usr/include/sqlext.h	/^#define SQL_EXT_API_START	/;"	d
SQL_FALSE	/usr/include/sql.h	/^#define SQL_FALSE	/;"	d
SQL_FB_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_FB_DEFAULT	/;"	d
SQL_FB_OFF	/usr/include/iodbcext.h	/^#define SQL_FB_OFF	/;"	d
SQL_FB_ON	/usr/include/iodbcext.h	/^#define SQL_FB_ON	/;"	d
SQL_FD_FETCH_ABSOLUTE	/usr/include/sql.h	/^#define SQL_FD_FETCH_ABSOLUTE	/;"	d
SQL_FD_FETCH_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_FD_FETCH_BOOKMARK	/;"	d
SQL_FD_FETCH_FIRST	/usr/include/sql.h	/^#define SQL_FD_FETCH_FIRST	/;"	d
SQL_FD_FETCH_LAST	/usr/include/sql.h	/^#define SQL_FD_FETCH_LAST	/;"	d
SQL_FD_FETCH_NEXT	/usr/include/sql.h	/^#define SQL_FD_FETCH_NEXT	/;"	d
SQL_FD_FETCH_PREV	/usr/include/sqlext.h	/^#define SQL_FD_FETCH_PREV	/;"	d
SQL_FD_FETCH_PRIOR	/usr/include/sql.h	/^#define SQL_FD_FETCH_PRIOR	/;"	d
SQL_FD_FETCH_RELATIVE	/usr/include/sql.h	/^#define SQL_FD_FETCH_RELATIVE	/;"	d
SQL_FD_FETCH_RESUME	/usr/include/sqlext.h	/^#define SQL_FD_FETCH_RESUME	/;"	d
SQL_FETCH_ABSOLUTE	/usr/include/sql.h	/^#define SQL_FETCH_ABSOLUTE	/;"	d
SQL_FETCH_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_FETCH_BOOKMARK	/;"	d
SQL_FETCH_BY_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_FETCH_BY_BOOKMARK	/;"	d
SQL_FETCH_DIRECTION	/usr/include/sql.h	/^#define SQL_FETCH_DIRECTION	/;"	d
SQL_FETCH_FIRST	/usr/include/sql.h	/^#define SQL_FETCH_FIRST	/;"	d
SQL_FETCH_FIRST_SYSTEM	/usr/include/sqlext.h	/^#define SQL_FETCH_FIRST_SYSTEM	/;"	d
SQL_FETCH_FIRST_USER	/usr/include/sqlext.h	/^#define SQL_FETCH_FIRST_USER	/;"	d
SQL_FETCH_LAST	/usr/include/sql.h	/^#define SQL_FETCH_LAST	/;"	d
SQL_FETCH_NEXT	/usr/include/sql.h	/^#define SQL_FETCH_NEXT	/;"	d
SQL_FETCH_PREV	/usr/include/sqlext.h	/^#define SQL_FETCH_PREV	/;"	d
SQL_FETCH_PRIOR	/usr/include/sql.h	/^#define SQL_FETCH_PRIOR	/;"	d
SQL_FETCH_RELATIVE	/usr/include/sql.h	/^#define SQL_FETCH_RELATIVE	/;"	d
SQL_FETCH_RESUME	/usr/include/sqlext.h	/^#define SQL_FETCH_RESUME	/;"	d
SQL_FILE_CATALOG	/usr/include/sqlext.h	/^#define SQL_FILE_CATALOG	/;"	d
SQL_FILE_NOT_SUPPORTED	/usr/include/sqlext.h	/^#define SQL_FILE_NOT_SUPPORTED	/;"	d
SQL_FILE_QUALIFIER	/usr/include/sqlext.h	/^#define SQL_FILE_QUALIFIER	/;"	d
SQL_FILE_TABLE	/usr/include/sqlext.h	/^#define SQL_FILE_TABLE	/;"	d
SQL_FILE_USAGE	/usr/include/sqlext.h	/^#define SQL_FILE_USAGE	/;"	d
SQL_FLOAT	/usr/include/sql.h	/^#define SQL_FLOAT	/;"	d
SQL_FN_CVT_CAST	/usr/include/sqlext.h	/^#define SQL_FN_CVT_CAST	/;"	d
SQL_FN_CVT_CONVERT	/usr/include/sqlext.h	/^#define SQL_FN_CVT_CONVERT	/;"	d
SQL_FN_NUM_ABS	/usr/include/sqlext.h	/^#define SQL_FN_NUM_ABS	/;"	d
SQL_FN_NUM_ACOS	/usr/include/sqlext.h	/^#define SQL_FN_NUM_ACOS	/;"	d
SQL_FN_NUM_ASIN	/usr/include/sqlext.h	/^#define SQL_FN_NUM_ASIN	/;"	d
SQL_FN_NUM_ATAN	/usr/include/sqlext.h	/^#define SQL_FN_NUM_ATAN	/;"	d
SQL_FN_NUM_ATAN2	/usr/include/sqlext.h	/^#define SQL_FN_NUM_ATAN2	/;"	d
SQL_FN_NUM_CEILING	/usr/include/sqlext.h	/^#define SQL_FN_NUM_CEILING	/;"	d
SQL_FN_NUM_COS	/usr/include/sqlext.h	/^#define SQL_FN_NUM_COS	/;"	d
SQL_FN_NUM_COT	/usr/include/sqlext.h	/^#define SQL_FN_NUM_COT	/;"	d
SQL_FN_NUM_DEGREES	/usr/include/sqlext.h	/^#define SQL_FN_NUM_DEGREES	/;"	d
SQL_FN_NUM_EXP	/usr/include/sqlext.h	/^#define SQL_FN_NUM_EXP	/;"	d
SQL_FN_NUM_FLOOR	/usr/include/sqlext.h	/^#define SQL_FN_NUM_FLOOR	/;"	d
SQL_FN_NUM_LOG	/usr/include/sqlext.h	/^#define SQL_FN_NUM_LOG	/;"	d
SQL_FN_NUM_LOG10	/usr/include/sqlext.h	/^#define SQL_FN_NUM_LOG10	/;"	d
SQL_FN_NUM_MOD	/usr/include/sqlext.h	/^#define SQL_FN_NUM_MOD	/;"	d
SQL_FN_NUM_PI	/usr/include/sqlext.h	/^#define SQL_FN_NUM_PI	/;"	d
SQL_FN_NUM_POWER	/usr/include/sqlext.h	/^#define SQL_FN_NUM_POWER	/;"	d
SQL_FN_NUM_RADIANS	/usr/include/sqlext.h	/^#define SQL_FN_NUM_RADIANS	/;"	d
SQL_FN_NUM_RAND	/usr/include/sqlext.h	/^#define SQL_FN_NUM_RAND	/;"	d
SQL_FN_NUM_ROUND	/usr/include/sqlext.h	/^#define SQL_FN_NUM_ROUND	/;"	d
SQL_FN_NUM_SIGN	/usr/include/sqlext.h	/^#define SQL_FN_NUM_SIGN	/;"	d
SQL_FN_NUM_SIN	/usr/include/sqlext.h	/^#define SQL_FN_NUM_SIN	/;"	d
SQL_FN_NUM_SQRT	/usr/include/sqlext.h	/^#define SQL_FN_NUM_SQRT	/;"	d
SQL_FN_NUM_TAN	/usr/include/sqlext.h	/^#define SQL_FN_NUM_TAN	/;"	d
SQL_FN_NUM_TRUNCATE	/usr/include/sqlext.h	/^#define SQL_FN_NUM_TRUNCATE	/;"	d
SQL_FN_STR_ASCII	/usr/include/sqlext.h	/^#define SQL_FN_STR_ASCII	/;"	d
SQL_FN_STR_BIT_LENGTH	/usr/include/sqlext.h	/^#define SQL_FN_STR_BIT_LENGTH	/;"	d
SQL_FN_STR_CHAR	/usr/include/sqlext.h	/^#define SQL_FN_STR_CHAR	/;"	d
SQL_FN_STR_CHARACTER_LENGTH	/usr/include/sqlext.h	/^#define SQL_FN_STR_CHARACTER_LENGTH	/;"	d
SQL_FN_STR_CHAR_LENGTH	/usr/include/sqlext.h	/^#define SQL_FN_STR_CHAR_LENGTH	/;"	d
SQL_FN_STR_CONCAT	/usr/include/sqlext.h	/^#define SQL_FN_STR_CONCAT	/;"	d
SQL_FN_STR_DIFFERENCE	/usr/include/sqlext.h	/^#define SQL_FN_STR_DIFFERENCE	/;"	d
SQL_FN_STR_INSERT	/usr/include/sqlext.h	/^#define SQL_FN_STR_INSERT	/;"	d
SQL_FN_STR_LCASE	/usr/include/sqlext.h	/^#define SQL_FN_STR_LCASE	/;"	d
SQL_FN_STR_LEFT	/usr/include/sqlext.h	/^#define SQL_FN_STR_LEFT	/;"	d
SQL_FN_STR_LENGTH	/usr/include/sqlext.h	/^#define SQL_FN_STR_LENGTH	/;"	d
SQL_FN_STR_LOCATE	/usr/include/sqlext.h	/^#define SQL_FN_STR_LOCATE	/;"	d
SQL_FN_STR_LOCATE_2	/usr/include/sqlext.h	/^#define SQL_FN_STR_LOCATE_2	/;"	d
SQL_FN_STR_LTRIM	/usr/include/sqlext.h	/^#define SQL_FN_STR_LTRIM	/;"	d
SQL_FN_STR_OCTET_LENGTH	/usr/include/sqlext.h	/^#define SQL_FN_STR_OCTET_LENGTH	/;"	d
SQL_FN_STR_POSITION	/usr/include/sqlext.h	/^#define SQL_FN_STR_POSITION	/;"	d
SQL_FN_STR_REPEAT	/usr/include/sqlext.h	/^#define SQL_FN_STR_REPEAT	/;"	d
SQL_FN_STR_REPLACE	/usr/include/sqlext.h	/^#define SQL_FN_STR_REPLACE	/;"	d
SQL_FN_STR_RIGHT	/usr/include/sqlext.h	/^#define SQL_FN_STR_RIGHT	/;"	d
SQL_FN_STR_RTRIM	/usr/include/sqlext.h	/^#define SQL_FN_STR_RTRIM	/;"	d
SQL_FN_STR_SOUNDEX	/usr/include/sqlext.h	/^#define SQL_FN_STR_SOUNDEX	/;"	d
SQL_FN_STR_SPACE	/usr/include/sqlext.h	/^#define SQL_FN_STR_SPACE	/;"	d
SQL_FN_STR_SUBSTRING	/usr/include/sqlext.h	/^#define SQL_FN_STR_SUBSTRING	/;"	d
SQL_FN_STR_UCASE	/usr/include/sqlext.h	/^#define SQL_FN_STR_UCASE	/;"	d
SQL_FN_SYS_DBNAME	/usr/include/sqlext.h	/^#define SQL_FN_SYS_DBNAME	/;"	d
SQL_FN_SYS_IFNULL	/usr/include/sqlext.h	/^#define SQL_FN_SYS_IFNULL	/;"	d
SQL_FN_SYS_USERNAME	/usr/include/sqlext.h	/^#define SQL_FN_SYS_USERNAME	/;"	d
SQL_FN_TD_CURDATE	/usr/include/sqlext.h	/^#define SQL_FN_TD_CURDATE	/;"	d
SQL_FN_TD_CURRENT_DATE	/usr/include/sqlext.h	/^#define SQL_FN_TD_CURRENT_DATE	/;"	d
SQL_FN_TD_CURRENT_TIME	/usr/include/sqlext.h	/^#define SQL_FN_TD_CURRENT_TIME	/;"	d
SQL_FN_TD_CURRENT_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_FN_TD_CURRENT_TIMESTAMP	/;"	d
SQL_FN_TD_CURTIME	/usr/include/sqlext.h	/^#define SQL_FN_TD_CURTIME	/;"	d
SQL_FN_TD_DAYNAME	/usr/include/sqlext.h	/^#define SQL_FN_TD_DAYNAME	/;"	d
SQL_FN_TD_DAYOFMONTH	/usr/include/sqlext.h	/^#define SQL_FN_TD_DAYOFMONTH	/;"	d
SQL_FN_TD_DAYOFWEEK	/usr/include/sqlext.h	/^#define SQL_FN_TD_DAYOFWEEK	/;"	d
SQL_FN_TD_DAYOFYEAR	/usr/include/sqlext.h	/^#define SQL_FN_TD_DAYOFYEAR	/;"	d
SQL_FN_TD_EXTRACT	/usr/include/sqlext.h	/^#define SQL_FN_TD_EXTRACT	/;"	d
SQL_FN_TD_HOUR	/usr/include/sqlext.h	/^#define SQL_FN_TD_HOUR	/;"	d
SQL_FN_TD_MINUTE	/usr/include/sqlext.h	/^#define SQL_FN_TD_MINUTE	/;"	d
SQL_FN_TD_MONTH	/usr/include/sqlext.h	/^#define SQL_FN_TD_MONTH	/;"	d
SQL_FN_TD_MONTHNAME	/usr/include/sqlext.h	/^#define SQL_FN_TD_MONTHNAME	/;"	d
SQL_FN_TD_NOW	/usr/include/sqlext.h	/^#define SQL_FN_TD_NOW	/;"	d
SQL_FN_TD_QUARTER	/usr/include/sqlext.h	/^#define SQL_FN_TD_QUARTER	/;"	d
SQL_FN_TD_SECOND	/usr/include/sqlext.h	/^#define SQL_FN_TD_SECOND	/;"	d
SQL_FN_TD_TIMESTAMPADD	/usr/include/sqlext.h	/^#define SQL_FN_TD_TIMESTAMPADD	/;"	d
SQL_FN_TD_TIMESTAMPDIFF	/usr/include/sqlext.h	/^#define SQL_FN_TD_TIMESTAMPDIFF	/;"	d
SQL_FN_TD_WEEK	/usr/include/sqlext.h	/^#define SQL_FN_TD_WEEK	/;"	d
SQL_FN_TD_YEAR	/usr/include/sqlext.h	/^#define SQL_FN_TD_YEAR	/;"	d
SQL_FN_TSI_DAY	/usr/include/sqlext.h	/^#define SQL_FN_TSI_DAY	/;"	d
SQL_FN_TSI_FRAC_SECOND	/usr/include/sqlext.h	/^#define SQL_FN_TSI_FRAC_SECOND	/;"	d
SQL_FN_TSI_HOUR	/usr/include/sqlext.h	/^#define SQL_FN_TSI_HOUR	/;"	d
SQL_FN_TSI_MINUTE	/usr/include/sqlext.h	/^#define SQL_FN_TSI_MINUTE	/;"	d
SQL_FN_TSI_MONTH	/usr/include/sqlext.h	/^#define SQL_FN_TSI_MONTH	/;"	d
SQL_FN_TSI_QUARTER	/usr/include/sqlext.h	/^#define SQL_FN_TSI_QUARTER	/;"	d
SQL_FN_TSI_SECOND	/usr/include/sqlext.h	/^#define SQL_FN_TSI_SECOND	/;"	d
SQL_FN_TSI_WEEK	/usr/include/sqlext.h	/^#define SQL_FN_TSI_WEEK	/;"	d
SQL_FN_TSI_YEAR	/usr/include/sqlext.h	/^#define SQL_FN_TSI_YEAR	/;"	d
SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1	/usr/include/sqlext.h	/^#define SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1	/;"	d
SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2	/usr/include/sqlext.h	/^#define SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2	/;"	d
SQL_FUNC_EXISTS	/usr/include/sqlext.h	/^#define SQL_FUNC_EXISTS(/;"	d
SQL_GB_COLLATE	/usr/include/sqlext.h	/^#define SQL_GB_COLLATE	/;"	d
SQL_GB_GROUP_BY_CONTAINS_SELECT	/usr/include/sqlext.h	/^#define SQL_GB_GROUP_BY_CONTAINS_SELECT	/;"	d
SQL_GB_GROUP_BY_EQUALS_SELECT	/usr/include/sqlext.h	/^#define SQL_GB_GROUP_BY_EQUALS_SELECT	/;"	d
SQL_GB_NOT_SUPPORTED	/usr/include/sqlext.h	/^#define SQL_GB_NOT_SUPPORTED	/;"	d
SQL_GB_NO_RELATION	/usr/include/sqlext.h	/^#define SQL_GB_NO_RELATION	/;"	d
SQL_GD_ANY_COLUMN	/usr/include/sql.h	/^#define SQL_GD_ANY_COLUMN	/;"	d
SQL_GD_ANY_ORDER	/usr/include/sql.h	/^#define SQL_GD_ANY_ORDER	/;"	d
SQL_GD_BLOCK	/usr/include/sqlext.h	/^#define SQL_GD_BLOCK	/;"	d
SQL_GD_BOUND	/usr/include/sqlext.h	/^#define SQL_GD_BOUND	/;"	d
SQL_GETDATA_EXTENSIONS	/usr/include/sql.h	/^#define SQL_GETDATA_EXTENSIONS	/;"	d
SQL_GETLASTROWID	/usr/include/iodbcext.h	/^#define SQL_GETLASTROWID	/;"	d
SQL_GETLASTSERIAL	/usr/include/iodbcext.h	/^#define SQL_GETLASTSERIAL	/;"	d
SQL_GET_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_GET_BOOKMARK	/;"	d
SQL_GROUP_BY	/usr/include/sqlext.h	/^#define SQL_GROUP_BY	/;"	d
SQL_GUID	/usr/include/sqlext.h	/^#define SQL_GUID	/;"	d
SQL_HANDLE_DBC	/usr/include/sql.h	/^#define SQL_HANDLE_DBC	/;"	d
SQL_HANDLE_DESC	/usr/include/sql.h	/^#define SQL_HANDLE_DESC	/;"	d
SQL_HANDLE_ENV	/usr/include/sql.h	/^#define SQL_HANDLE_ENV	/;"	d
SQL_HANDLE_SENV	/usr/include/sqlext.h	/^#define SQL_HANDLE_SENV	/;"	d
SQL_HANDLE_STMT	/usr/include/sql.h	/^#define SQL_HANDLE_STMT	/;"	d
SQL_HC_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_HC_DEFAULT	/;"	d
SQL_HC_OFF	/usr/include/iodbcext.h	/^#define SQL_HC_OFF	/;"	d
SQL_HC_ON	/usr/include/iodbcext.h	/^#define SQL_HC_ON	/;"	d
SQL_HOUR	/usr/include/sqlext.h	/^#define SQL_HOUR	/;"	d
SQL_HOUR_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_HOUR_TO_MINUTE	/;"	d
SQL_HOUR_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_HOUR_TO_SECOND	/;"	d
SQL_IC_LOWER	/usr/include/sql.h	/^#define SQL_IC_LOWER	/;"	d
SQL_IC_MIXED	/usr/include/sql.h	/^#define SQL_IC_MIXED	/;"	d
SQL_IC_SENSITIVE	/usr/include/sql.h	/^#define SQL_IC_SENSITIVE	/;"	d
SQL_IC_UPPER	/usr/include/sql.h	/^#define SQL_IC_UPPER	/;"	d
SQL_IDENTIFIER_CASE	/usr/include/sql.h	/^#define SQL_IDENTIFIER_CASE	/;"	d
SQL_IDENTIFIER_QUOTE_CHAR	/usr/include/sql.h	/^#define SQL_IDENTIFIER_QUOTE_CHAR	/;"	d
SQL_IGNORE	/usr/include/sqlext.h	/^#define SQL_IGNORE	/;"	d
SQL_IK_ALL	/usr/include/sqlext.h	/^#define SQL_IK_ALL	/;"	d
SQL_IK_ASC	/usr/include/sqlext.h	/^#define SQL_IK_ASC	/;"	d
SQL_IK_DESC	/usr/include/sqlext.h	/^#define SQL_IK_DESC	/;"	d
SQL_IK_NONE	/usr/include/sqlext.h	/^#define SQL_IK_NONE	/;"	d
SQL_INDEX_ALL	/usr/include/sql.h	/^#define SQL_INDEX_ALL	/;"	d
SQL_INDEX_CLUSTERED	/usr/include/sql.h	/^#define SQL_INDEX_CLUSTERED	/;"	d
SQL_INDEX_HASHED	/usr/include/sql.h	/^#define SQL_INDEX_HASHED	/;"	d
SQL_INDEX_KEYWORDS	/usr/include/sqlext.h	/^#define SQL_INDEX_KEYWORDS	/;"	d
SQL_INDEX_OTHER	/usr/include/sql.h	/^#define SQL_INDEX_OTHER	/;"	d
SQL_INDEX_UNIQUE	/usr/include/sql.h	/^#define SQL_INDEX_UNIQUE	/;"	d
SQL_INFO_DRIVER_START	/usr/include/sqlext.h	/^#define SQL_INFO_DRIVER_START	/;"	d
SQL_INFO_FIRST	/usr/include/sqlext.h	/^#define SQL_INFO_FIRST	/;"	d
SQL_INFO_LAST	/usr/include/sqlext.h	/^#define SQL_INFO_LAST	/;"	d
SQL_INFO_SCHEMA_VIEWS	/usr/include/sqlext.h	/^#define SQL_INFO_SCHEMA_VIEWS	/;"	d
SQL_INITIALLY_DEFERRED	/usr/include/sqlext.h	/^#define SQL_INITIALLY_DEFERRED	/;"	d
SQL_INITIALLY_IMMEDIATE	/usr/include/sqlext.h	/^#define SQL_INITIALLY_IMMEDIATE	/;"	d
SQL_INSENSITIVE	/usr/include/sql.h	/^#define SQL_INSENSITIVE	/;"	d
SQL_INSERT_STATEMENT	/usr/include/sqlext.h	/^#define SQL_INSERT_STATEMENT	/;"	d
SQL_INTEGER	/usr/include/sql.h	/^#define SQL_INTEGER	/;"	d
SQL_INTEGRITY	/usr/include/sql.h	/^#define SQL_INTEGRITY	/;"	d
SQL_INTERVAL	/usr/include/sqlext.h	/^#define SQL_INTERVAL	/;"	d
SQL_INTERVAL_DAY	/usr/include/sqlext.h	/^#define SQL_INTERVAL_DAY	/;"	d
SQL_INTERVAL_DAY_TO_HOUR	/usr/include/sqlext.h	/^#define SQL_INTERVAL_DAY_TO_HOUR	/;"	d
SQL_INTERVAL_DAY_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_INTERVAL_DAY_TO_MINUTE	/;"	d
SQL_INTERVAL_DAY_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_INTERVAL_DAY_TO_SECOND	/;"	d
SQL_INTERVAL_HOUR	/usr/include/sqlext.h	/^#define SQL_INTERVAL_HOUR	/;"	d
SQL_INTERVAL_HOUR_TO_MINUTE	/usr/include/sqlext.h	/^#define SQL_INTERVAL_HOUR_TO_MINUTE	/;"	d
SQL_INTERVAL_HOUR_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_INTERVAL_HOUR_TO_SECOND	/;"	d
SQL_INTERVAL_MINUTE	/usr/include/sqlext.h	/^#define SQL_INTERVAL_MINUTE	/;"	d
SQL_INTERVAL_MINUTE_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_INTERVAL_MINUTE_TO_SECOND	/;"	d
SQL_INTERVAL_MONTH	/usr/include/sqlext.h	/^#define SQL_INTERVAL_MONTH	/;"	d
SQL_INTERVAL_SECOND	/usr/include/sqlext.h	/^#define SQL_INTERVAL_SECOND	/;"	d
SQL_INTERVAL_SECOND	/usr/include/sqlext.h	/^#define SQL_INTERVAL_SECOND /;"	d
SQL_INTERVAL_STRUCT	/usr/include/sqltypes.h	/^SQL_INTERVAL_STRUCT;$/;"	t	typeref:struct:tagSQL_INTERVAL_STRUCT
SQL_INTERVAL_YEAR	/usr/include/sqlext.h	/^#define SQL_INTERVAL_YEAR	/;"	d
SQL_INTERVAL_YEAR_TO_MONTH	/usr/include/sqlext.h	/^#define SQL_INTERVAL_YEAR_TO_MONTH	/;"	d
SQL_INVALID_HANDLE	/usr/include/sql.h	/^#define SQL_INVALID_HANDLE	/;"	d
SQL_ISV_ASSERTIONS	/usr/include/sqlext.h	/^#define SQL_ISV_ASSERTIONS	/;"	d
SQL_ISV_CHARACTER_SETS	/usr/include/sqlext.h	/^#define SQL_ISV_CHARACTER_SETS	/;"	d
SQL_ISV_CHECK_CONSTRAINTS	/usr/include/sqlext.h	/^#define SQL_ISV_CHECK_CONSTRAINTS	/;"	d
SQL_ISV_COLLATIONS	/usr/include/sqlext.h	/^#define SQL_ISV_COLLATIONS	/;"	d
SQL_ISV_COLUMNS	/usr/include/sqlext.h	/^#define SQL_ISV_COLUMNS	/;"	d
SQL_ISV_COLUMN_DOMAIN_USAGE	/usr/include/sqlext.h	/^#define SQL_ISV_COLUMN_DOMAIN_USAGE	/;"	d
SQL_ISV_COLUMN_PRIVILEGES	/usr/include/sqlext.h	/^#define SQL_ISV_COLUMN_PRIVILEGES	/;"	d
SQL_ISV_CONSTRAINT_COLUMN_USAGE	/usr/include/sqlext.h	/^#define SQL_ISV_CONSTRAINT_COLUMN_USAGE	/;"	d
SQL_ISV_CONSTRAINT_TABLE_USAGE	/usr/include/sqlext.h	/^#define SQL_ISV_CONSTRAINT_TABLE_USAGE	/;"	d
SQL_ISV_DOMAINS	/usr/include/sqlext.h	/^#define SQL_ISV_DOMAINS	/;"	d
SQL_ISV_DOMAIN_CONSTRAINTS	/usr/include/sqlext.h	/^#define SQL_ISV_DOMAIN_CONSTRAINTS	/;"	d
SQL_ISV_KEY_COLUMN_USAGE	/usr/include/sqlext.h	/^#define SQL_ISV_KEY_COLUMN_USAGE	/;"	d
SQL_ISV_REFERENTIAL_CONSTRAINTS	/usr/include/sqlext.h	/^#define SQL_ISV_REFERENTIAL_CONSTRAINTS	/;"	d
SQL_ISV_SCHEMATA	/usr/include/sqlext.h	/^#define SQL_ISV_SCHEMATA	/;"	d
SQL_ISV_SQL_LANGUAGES	/usr/include/sqlext.h	/^#define SQL_ISV_SQL_LANGUAGES	/;"	d
SQL_ISV_TABLES	/usr/include/sqlext.h	/^#define SQL_ISV_TABLES	/;"	d
SQL_ISV_TABLE_CONSTRAINTS	/usr/include/sqlext.h	/^#define SQL_ISV_TABLE_CONSTRAINTS	/;"	d
SQL_ISV_TABLE_PRIVILEGES	/usr/include/sqlext.h	/^#define SQL_ISV_TABLE_PRIVILEGES	/;"	d
SQL_ISV_TRANSLATIONS	/usr/include/sqlext.h	/^#define SQL_ISV_TRANSLATIONS	/;"	d
SQL_ISV_USAGE_PRIVILEGES	/usr/include/sqlext.h	/^#define SQL_ISV_USAGE_PRIVILEGES	/;"	d
SQL_ISV_VIEWS	/usr/include/sqlext.h	/^#define SQL_ISV_VIEWS	/;"	d
SQL_ISV_VIEW_COLUMN_USAGE	/usr/include/sqlext.h	/^#define SQL_ISV_VIEW_COLUMN_USAGE	/;"	d
SQL_ISV_VIEW_TABLE_USAGE	/usr/include/sqlext.h	/^#define SQL_ISV_VIEW_TABLE_USAGE	/;"	d
SQL_IS_DAY	/usr/include/sqltypes.h	/^    SQL_IS_DAY			= 3,$/;"	e	enum:__anon107
SQL_IS_DAY_TO_HOUR	/usr/include/sqltypes.h	/^    SQL_IS_DAY_TO_HOUR		= 8,$/;"	e	enum:__anon107
SQL_IS_DAY_TO_MINUTE	/usr/include/sqltypes.h	/^    SQL_IS_DAY_TO_MINUTE	= 9,$/;"	e	enum:__anon107
SQL_IS_DAY_TO_SECOND	/usr/include/sqltypes.h	/^    SQL_IS_DAY_TO_SECOND	= 10,$/;"	e	enum:__anon107
SQL_IS_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_IS_DEFAULT	/;"	d
SQL_IS_HOUR	/usr/include/sqltypes.h	/^    SQL_IS_HOUR			= 4,$/;"	e	enum:__anon107
SQL_IS_HOUR_TO_MINUTE	/usr/include/sqltypes.h	/^    SQL_IS_HOUR_TO_MINUTE	= 11,$/;"	e	enum:__anon107
SQL_IS_HOUR_TO_SECOND	/usr/include/sqltypes.h	/^    SQL_IS_HOUR_TO_SECOND	= 12,$/;"	e	enum:__anon107
SQL_IS_INSERT_LITERALS	/usr/include/sqlext.h	/^#define SQL_IS_INSERT_LITERALS	/;"	d
SQL_IS_INSERT_SEARCHED	/usr/include/sqlext.h	/^#define SQL_IS_INSERT_SEARCHED	/;"	d
SQL_IS_INTEGER	/usr/include/sqlext.h	/^#define SQL_IS_INTEGER	/;"	d
SQL_IS_MINUTE	/usr/include/sqltypes.h	/^    SQL_IS_MINUTE		= 5,$/;"	e	enum:__anon107
SQL_IS_MINUTE_TO_SECOND	/usr/include/sqltypes.h	/^    SQL_IS_MINUTE_TO_SECOND	= 13$/;"	e	enum:__anon107
SQL_IS_MONTH	/usr/include/sqltypes.h	/^    SQL_IS_MONTH		= 2,$/;"	e	enum:__anon107
SQL_IS_OFF	/usr/include/iodbcext.h	/^#define SQL_IS_OFF	/;"	d
SQL_IS_ON	/usr/include/iodbcext.h	/^#define SQL_IS_ON	/;"	d
SQL_IS_POINTER	/usr/include/sqlext.h	/^#define SQL_IS_POINTER	/;"	d
SQL_IS_SECOND	/usr/include/sqltypes.h	/^    SQL_IS_SECOND		= 6,$/;"	e	enum:__anon107
SQL_IS_SELECT_INTO	/usr/include/sqlext.h	/^#define SQL_IS_SELECT_INTO	/;"	d
SQL_IS_SMALLINT	/usr/include/sqlext.h	/^#define SQL_IS_SMALLINT	/;"	d
SQL_IS_UINTEGER	/usr/include/sqlext.h	/^#define SQL_IS_UINTEGER	/;"	d
SQL_IS_USMALLINT	/usr/include/sqlext.h	/^#define SQL_IS_USMALLINT	/;"	d
SQL_IS_YEAR	/usr/include/sqltypes.h	/^    SQL_IS_YEAR			= 1,$/;"	e	enum:__anon107
SQL_IS_YEAR_TO_MONTH	/usr/include/sqltypes.h	/^    SQL_IS_YEAR_TO_MONTH	= 7,$/;"	e	enum:__anon107
SQL_KEYSET_CURSOR_ATTRIBUTES1	/usr/include/sqlext.h	/^#define SQL_KEYSET_CURSOR_ATTRIBUTES1	/;"	d
SQL_KEYSET_CURSOR_ATTRIBUTES2	/usr/include/sqlext.h	/^#define SQL_KEYSET_CURSOR_ATTRIBUTES2	/;"	d
SQL_KEYSET_SIZE	/usr/include/sqlext.h	/^#define SQL_KEYSET_SIZE	/;"	d
SQL_KEYSET_SIZE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_KEYSET_SIZE_DEFAULT	/;"	d
SQL_KEYWORDS	/usr/include/sqlext.h	/^#define SQL_KEYWORDS	/;"	d
SQL_LCK_EXCLUSIVE	/usr/include/sqlext.h	/^#define SQL_LCK_EXCLUSIVE	/;"	d
SQL_LCK_NO_CHANGE	/usr/include/sqlext.h	/^#define SQL_LCK_NO_CHANGE	/;"	d
SQL_LCK_UNLOCK	/usr/include/sqlext.h	/^#define SQL_LCK_UNLOCK	/;"	d
SQL_LD_COMPAT_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_LD_COMPAT_DEFAULT /;"	d
SQL_LD_COMPAT_NO	/usr/include/iodbcext.h	/^#define SQL_LD_COMPAT_NO /;"	d
SQL_LD_COMPAT_YES	/usr/include/iodbcext.h	/^#define SQL_LD_COMPAT_YES /;"	d
SQL_LEN_BINARY_ATTR	/usr/include/sqlext.h	/^#define SQL_LEN_BINARY_ATTR(/;"	d
SQL_LEN_BINARY_ATTR_OFFSET	/usr/include/sqlext.h	/^#define SQL_LEN_BINARY_ATTR_OFFSET	/;"	d
SQL_LEN_DATA_AT_EXEC	/usr/include/sqlext.h	/^#define SQL_LEN_DATA_AT_EXEC(/;"	d
SQL_LEN_DATA_AT_EXEC_OFFSET	/usr/include/sqlext.h	/^#define SQL_LEN_DATA_AT_EXEC_OFFSET	/;"	d
SQL_LIKE_ESCAPE_CLAUSE	/usr/include/sqlext.h	/^#define SQL_LIKE_ESCAPE_CLAUSE	/;"	d
SQL_LIKE_ONLY	/usr/include/sqlext.h	/^#define SQL_LIKE_ONLY	/;"	d
SQL_LOCK_EXCLUSIVE	/usr/include/sqlext.h	/^#define SQL_LOCK_EXCLUSIVE	/;"	d
SQL_LOCK_NO_CHANGE	/usr/include/sqlext.h	/^#define SQL_LOCK_NO_CHANGE	/;"	d
SQL_LOCK_RECORD	/usr/include/sqlext.h	/^#define SQL_LOCK_RECORD(/;"	d
SQL_LOCK_TYPES	/usr/include/sqlext.h	/^#define SQL_LOCK_TYPES	/;"	d
SQL_LOCK_UNLOCK	/usr/include/sqlext.h	/^#define SQL_LOCK_UNLOCK	/;"	d
SQL_LOGIN_TIMEOUT	/usr/include/sqlext.h	/^#define SQL_LOGIN_TIMEOUT	/;"	d
SQL_LOGIN_TIMEOUT_DEFAULT	/usr/include/sqlext.h	/^#define SQL_LOGIN_TIMEOUT_DEFAULT	/;"	d
SQL_LONGDATA_COMPAT	/usr/include/iodbcext.h	/^#define SQL_LONGDATA_COMPAT /;"	d
SQL_LONGVARBINARY	/usr/include/sqlext.h	/^#define SQL_LONGVARBINARY	/;"	d
SQL_LONGVARCHAR	/usr/include/sqlext.h	/^#define SQL_LONGVARCHAR	/;"	d
SQL_MAXCONN	/usr/include/iodbcext.h	/^#define SQL_MAXCONN /;"	d
SQL_MAXIMUM_CATALOG_NAME_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_CATALOG_NAME_LENGTH	/;"	d
SQL_MAXIMUM_COLUMNS_IN_GROUP_BY	/usr/include/sql.h	/^#define SQL_MAXIMUM_COLUMNS_IN_GROUP_BY	/;"	d
SQL_MAXIMUM_COLUMNS_IN_INDEX	/usr/include/sql.h	/^#define SQL_MAXIMUM_COLUMNS_IN_INDEX	/;"	d
SQL_MAXIMUM_COLUMNS_IN_ORDER_BY	/usr/include/sql.h	/^#define SQL_MAXIMUM_COLUMNS_IN_ORDER_BY	/;"	d
SQL_MAXIMUM_COLUMNS_IN_SELECT	/usr/include/sql.h	/^#define SQL_MAXIMUM_COLUMNS_IN_SELECT	/;"	d
SQL_MAXIMUM_COLUMN_NAME_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_COLUMN_NAME_LENGTH	/;"	d
SQL_MAXIMUM_CONCURRENT_ACTIVITIES	/usr/include/sql.h	/^#define SQL_MAXIMUM_CONCURRENT_ACTIVITIES	/;"	d
SQL_MAXIMUM_CURSOR_NAME_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_CURSOR_NAME_LENGTH	/;"	d
SQL_MAXIMUM_DRIVER_CONNECTIONS	/usr/include/sql.h	/^#define SQL_MAXIMUM_DRIVER_CONNECTIONS	/;"	d
SQL_MAXIMUM_IDENTIFIER_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_IDENTIFIER_LENGTH	/;"	d
SQL_MAXIMUM_INDEX_SIZE	/usr/include/sql.h	/^#define SQL_MAXIMUM_INDEX_SIZE	/;"	d
SQL_MAXIMUM_ROW_SIZE	/usr/include/sql.h	/^#define SQL_MAXIMUM_ROW_SIZE	/;"	d
SQL_MAXIMUM_SCHEMA_NAME_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_SCHEMA_NAME_LENGTH	/;"	d
SQL_MAXIMUM_STATEMENT_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_STATEMENT_LENGTH	/;"	d
SQL_MAXIMUM_TABLES_IN_SELECT	/usr/include/sql.h	/^#define SQL_MAXIMUM_TABLES_IN_SELECT	/;"	d
SQL_MAXIMUM_USER_NAME_LENGTH	/usr/include/sql.h	/^#define SQL_MAXIMUM_USER_NAME_LENGTH	/;"	d
SQL_MAX_ASYNC_CONCURRENT_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_MAX_ASYNC_CONCURRENT_STATEMENTS	/;"	d
SQL_MAX_BINARY_LITERAL_LEN	/usr/include/sqlext.h	/^#define SQL_MAX_BINARY_LITERAL_LEN	/;"	d
SQL_MAX_CATALOG_NAME_LEN	/usr/include/sql.h	/^#define SQL_MAX_CATALOG_NAME_LEN	/;"	d
SQL_MAX_CHAR_LITERAL_LEN	/usr/include/sqlext.h	/^#define SQL_MAX_CHAR_LITERAL_LEN	/;"	d
SQL_MAX_COLUMNS_IN_GROUP_BY	/usr/include/sql.h	/^#define SQL_MAX_COLUMNS_IN_GROUP_BY	/;"	d
SQL_MAX_COLUMNS_IN_INDEX	/usr/include/sql.h	/^#define SQL_MAX_COLUMNS_IN_INDEX	/;"	d
SQL_MAX_COLUMNS_IN_ORDER_BY	/usr/include/sql.h	/^#define SQL_MAX_COLUMNS_IN_ORDER_BY	/;"	d
SQL_MAX_COLUMNS_IN_SELECT	/usr/include/sql.h	/^#define SQL_MAX_COLUMNS_IN_SELECT	/;"	d
SQL_MAX_COLUMNS_IN_TABLE	/usr/include/sql.h	/^#define SQL_MAX_COLUMNS_IN_TABLE	/;"	d
SQL_MAX_COLUMN_NAME_LEN	/usr/include/sql.h	/^#define SQL_MAX_COLUMN_NAME_LEN	/;"	d
SQL_MAX_CONCURRENT_ACTIVITIES	/usr/include/sql.h	/^#define SQL_MAX_CONCURRENT_ACTIVITIES	/;"	d
SQL_MAX_CURSOR_NAME_LEN	/usr/include/sql.h	/^#define SQL_MAX_CURSOR_NAME_LEN	/;"	d
SQL_MAX_DRIVER_CONNECTIONS	/usr/include/sql.h	/^#define SQL_MAX_DRIVER_CONNECTIONS	/;"	d
SQL_MAX_DSN_LENGTH	/usr/include/sqlext.h	/^#define SQL_MAX_DSN_LENGTH	/;"	d
SQL_MAX_IDENTIFIER_LEN	/usr/include/sql.h	/^#define SQL_MAX_IDENTIFIER_LEN	/;"	d
SQL_MAX_INDEX_SIZE	/usr/include/sql.h	/^#define SQL_MAX_INDEX_SIZE	/;"	d
SQL_MAX_LENGTH	/usr/include/sqlext.h	/^#define SQL_MAX_LENGTH	/;"	d
SQL_MAX_LENGTH_DEFAULT	/usr/include/sqlext.h	/^#define SQL_MAX_LENGTH_DEFAULT	/;"	d
SQL_MAX_MESSAGE_LENGTH	/usr/include/sql.h	/^#define SQL_MAX_MESSAGE_LENGTH	/;"	d
SQL_MAX_NUMERIC_LEN	/usr/include/sqltypes.h	/^#define SQL_MAX_NUMERIC_LEN	/;"	d
SQL_MAX_OPTION_STRING_LENGTH	/usr/include/sqlext.h	/^#define SQL_MAX_OPTION_STRING_LENGTH /;"	d
SQL_MAX_OWNER_NAME_LEN	/usr/include/sqlext.h	/^#define SQL_MAX_OWNER_NAME_LEN	/;"	d
SQL_MAX_PROCEDURE_NAME_LEN	/usr/include/sqlext.h	/^#define SQL_MAX_PROCEDURE_NAME_LEN	/;"	d
SQL_MAX_QUALIFIER_NAME_LEN	/usr/include/sqlext.h	/^#define SQL_MAX_QUALIFIER_NAME_LEN	/;"	d
SQL_MAX_ROWS	/usr/include/sqlext.h	/^#define SQL_MAX_ROWS	/;"	d
SQL_MAX_ROWS_DEFAULT	/usr/include/sqlext.h	/^#define SQL_MAX_ROWS_DEFAULT	/;"	d
SQL_MAX_ROW_SIZE	/usr/include/sql.h	/^#define SQL_MAX_ROW_SIZE	/;"	d
SQL_MAX_ROW_SIZE_INCLUDES_LONG	/usr/include/sqlext.h	/^#define SQL_MAX_ROW_SIZE_INCLUDES_LONG	/;"	d
SQL_MAX_SCHEMA_NAME_LEN	/usr/include/sql.h	/^#define SQL_MAX_SCHEMA_NAME_LEN	/;"	d
SQL_MAX_STATEMENT_LEN	/usr/include/sql.h	/^#define SQL_MAX_STATEMENT_LEN	/;"	d
SQL_MAX_TABLES_IN_SELECT	/usr/include/sql.h	/^#define SQL_MAX_TABLES_IN_SELECT	/;"	d
SQL_MAX_TABLE_NAME_LEN	/usr/include/sql.h	/^#define SQL_MAX_TABLE_NAME_LEN	/;"	d
SQL_MAX_USER_NAME_LEN	/usr/include/sql.h	/^#define SQL_MAX_USER_NAME_LEN	/;"	d
SQL_MINMEMORY_USAGE	/usr/include/iodbcext.h	/^#define SQL_MINMEMORY_USAGE /;"	d
SQL_MINUTE	/usr/include/sqlext.h	/^#define SQL_MINUTE	/;"	d
SQL_MINUTE_TO_SECOND	/usr/include/sqlext.h	/^#define SQL_MINUTE_TO_SECOND	/;"	d
SQL_MODE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_MODE_DEFAULT	/;"	d
SQL_MODE_READ_ONLY	/usr/include/sqlext.h	/^#define SQL_MODE_READ_ONLY	/;"	d
SQL_MODE_READ_WRITE	/usr/include/sqlext.h	/^#define SQL_MODE_READ_WRITE	/;"	d
SQL_MONTH	/usr/include/sqlext.h	/^#define SQL_MONTH	/;"	d
SQL_MULTIPLE_ACTIVE_TXN	/usr/include/sqlext.h	/^#define SQL_MULTIPLE_ACTIVE_TXN	/;"	d
SQL_MULT_RESULT_SETS	/usr/include/sqlext.h	/^#define SQL_MULT_RESULT_SETS	/;"	d
SQL_NAMED	/usr/include/sql.h	/^#define SQL_NAMED	/;"	d
SQL_NB_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_NB_DEFAULT	/;"	d
SQL_NB_OFF	/usr/include/iodbcext.h	/^#define SQL_NB_OFF	/;"	d
SQL_NB_ON	/usr/include/iodbcext.h	/^#define SQL_NB_ON	/;"	d
SQL_NC_END	/usr/include/sqlext.h	/^#define SQL_NC_END	/;"	d
SQL_NC_HIGH	/usr/include/sql.h	/^#define SQL_NC_HIGH	/;"	d
SQL_NC_LOW	/usr/include/sql.h	/^#define SQL_NC_LOW	/;"	d
SQL_NC_START	/usr/include/sqlext.h	/^#define SQL_NC_START	/;"	d
SQL_NEED_DATA	/usr/include/sql.h	/^#define SQL_NEED_DATA	/;"	d
SQL_NEED_LONG_DATA_LEN	/usr/include/sqlext.h	/^#define SQL_NEED_LONG_DATA_LEN	/;"	d
SQL_NNC_NON_NULL	/usr/include/sqlext.h	/^#define SQL_NNC_NON_NULL	/;"	d
SQL_NNC_NULL	/usr/include/sqlext.h	/^#define SQL_NNC_NULL	/;"	d
SQL_NODESCRIBE	/usr/include/iodbcext.h	/^#define  SQL_NODESCRIBE /;"	d
SQL_NODESCRIBE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_NODESCRIBE_DEFAULT /;"	d
SQL_NODESCRIBE_INPUT	/usr/include/iodbcext.h	/^#define  SQL_NODESCRIBE_INPUT /;"	d
SQL_NODESCRIBE_OFF	/usr/include/iodbcext.h	/^#define SQL_NODESCRIBE_OFF /;"	d
SQL_NODESCRIBE_ON	/usr/include/iodbcext.h	/^#define SQL_NODESCRIBE_ON /;"	d
SQL_NODESCRIBE_OUTPUT	/usr/include/iodbcext.h	/^#define  SQL_NODESCRIBE_OUTPUT /;"	d
SQL_NONSCROLLABLE	/usr/include/sql.h	/^#define SQL_NONSCROLLABLE	/;"	d
SQL_NON_NULLABLE_COLUMNS	/usr/include/sqlext.h	/^#define SQL_NON_NULLABLE_COLUMNS	/;"	d
SQL_NOSCAN	/usr/include/sqlext.h	/^#define SQL_NOSCAN	/;"	d
SQL_NOSCAN_DEFAULT	/usr/include/sqlext.h	/^#define SQL_NOSCAN_DEFAULT	/;"	d
SQL_NOSCAN_OFF	/usr/include/sqlext.h	/^#define SQL_NOSCAN_OFF	/;"	d
SQL_NOSCAN_ON	/usr/include/sqlext.h	/^#define SQL_NOSCAN_ON	/;"	d
SQL_NOT_DEFERRABLE	/usr/include/sqlext.h	/^#define SQL_NOT_DEFERRABLE	/;"	d
SQL_NO_ACTION	/usr/include/sqlext.h	/^#define SQL_NO_ACTION	/;"	d
SQL_NO_COLUMN_NUMBER	/usr/include/sqlext.h	/^#define SQL_NO_COLUMN_NUMBER	/;"	d
SQL_NO_DATA	/usr/include/sql.h	/^#define SQL_NO_DATA	/;"	d
SQL_NO_DATA_FOUND	/usr/include/sqlext.h	/^#define SQL_NO_DATA_FOUND	/;"	d
SQL_NO_NULLS	/usr/include/sql.h	/^#define SQL_NO_NULLS	/;"	d
SQL_NO_ROW_NUMBER	/usr/include/sqlext.h	/^#define SQL_NO_ROW_NUMBER	/;"	d
SQL_NO_TOTAL	/usr/include/sqlext.h	/^#define SQL_NO_TOTAL	/;"	d
SQL_NTS	/usr/include/sql.h	/^#define SQL_NTS	/;"	d
SQL_NTSL	/usr/include/sql.h	/^#define SQL_NTSL	/;"	d
SQL_NULLABLE	/usr/include/sql.h	/^#define SQL_NULLABLE	/;"	d
SQL_NULLABLE_UNKNOWN	/usr/include/sql.h	/^#define SQL_NULLABLE_UNKNOWN	/;"	d
SQL_NULL_COLLATION	/usr/include/sql.h	/^#define SQL_NULL_COLLATION	/;"	d
SQL_NULL_DATA	/usr/include/sql.h	/^#define SQL_NULL_DATA	/;"	d
SQL_NULL_HANDLE	/usr/include/sql.h	/^#define SQL_NULL_HANDLE	/;"	d
SQL_NULL_HDBC	/usr/include/sql.h	/^#define SQL_NULL_HDBC	/;"	d
SQL_NULL_HDESC	/usr/include/sql.h	/^#define SQL_NULL_HDESC	/;"	d
SQL_NULL_HENV	/usr/include/sql.h	/^#define SQL_NULL_HENV	/;"	d
SQL_NULL_HSTMT	/usr/include/sql.h	/^#define SQL_NULL_HSTMT	/;"	d
SQL_NUMERIC	/usr/include/sql.h	/^#define SQL_NUMERIC	/;"	d
SQL_NUMERIC_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_NUMERIC_FUNCTIONS	/;"	d
SQL_NUMERIC_STRUCT	/usr/include/sqltypes.h	/^SQL_NUMERIC_STRUCT;$/;"	t	typeref:struct:tagSQL_NUMERIC_STRUCT
SQL_NUM_EXTENSIONS	/usr/include/sqlext.h	/^#define SQL_NUM_EXTENSIONS	/;"	d
SQL_NUM_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_NUM_FUNCTIONS	/;"	d
SQL_OAC_LEVEL1	/usr/include/sqlext.h	/^#define SQL_OAC_LEVEL1	/;"	d
SQL_OAC_LEVEL2	/usr/include/sqlext.h	/^#define SQL_OAC_LEVEL2	/;"	d
SQL_OAC_NONE	/usr/include/sqlext.h	/^#define SQL_OAC_NONE	/;"	d
SQL_ODBC_API_CONFORMANCE	/usr/include/sqlext.h	/^#define SQL_ODBC_API_CONFORMANCE	/;"	d
SQL_ODBC_CURSORS	/usr/include/sqlext.h	/^#define SQL_ODBC_CURSORS	/;"	d
SQL_ODBC_INTERFACE_CONFORMANCE	/usr/include/sqlext.h	/^#define SQL_ODBC_INTERFACE_CONFORMANCE	/;"	d
SQL_ODBC_KEYWORDS	/usr/include/sqlext.h	/^#define SQL_ODBC_KEYWORDS /;"	d
SQL_ODBC_SAG_CLI_CONFORMANCE	/usr/include/sqlext.h	/^#define SQL_ODBC_SAG_CLI_CONFORMANCE	/;"	d
SQL_ODBC_SQL_CONFORMANCE	/usr/include/sqlext.h	/^#define SQL_ODBC_SQL_CONFORMANCE	/;"	d
SQL_ODBC_SQL_OPT_IEF	/usr/include/sqlext.h	/^#define SQL_ODBC_SQL_OPT_IEF	/;"	d
SQL_ODBC_VER	/usr/include/sqlext.h	/^#define SQL_ODBC_VER	/;"	d
SQL_OIC_CORE	/usr/include/sqlext.h	/^#define SQL_OIC_CORE	/;"	d
SQL_OIC_LEVEL1	/usr/include/sqlext.h	/^#define SQL_OIC_LEVEL1	/;"	d
SQL_OIC_LEVEL2	/usr/include/sqlext.h	/^#define SQL_OIC_LEVEL2	/;"	d
SQL_OJ_ALL_COMPARISON_OPS	/usr/include/sql.h	/^#define SQL_OJ_ALL_COMPARISON_OPS	/;"	d
SQL_OJ_CAPABILITIES	/usr/include/sql.h	/^#define SQL_OJ_CAPABILITIES	/;"	d
SQL_OJ_CAPABILITIES	/usr/include/sqlext.h	/^#define SQL_OJ_CAPABILITIES /;"	d
SQL_OJ_FULL	/usr/include/sql.h	/^#define SQL_OJ_FULL	/;"	d
SQL_OJ_INNER	/usr/include/sql.h	/^#define SQL_OJ_INNER	/;"	d
SQL_OJ_LEFT	/usr/include/sql.h	/^#define SQL_OJ_LEFT	/;"	d
SQL_OJ_NESTED	/usr/include/sql.h	/^#define SQL_OJ_NESTED	/;"	d
SQL_OJ_NOT_ORDERED	/usr/include/sql.h	/^#define SQL_OJ_NOT_ORDERED	/;"	d
SQL_OJ_RIGHT	/usr/include/sql.h	/^#define SQL_OJ_RIGHT	/;"	d
SQL_ONEPHASE	/usr/include/iodbcext.h	/^#define SQL_ONEPHASE /;"	d
SQL_OPT_TRACE	/usr/include/sqlext.h	/^#define SQL_OPT_TRACE	/;"	d
SQL_OPT_TRACEFILE	/usr/include/sqlext.h	/^#define SQL_OPT_TRACEFILE	/;"	d
SQL_OPT_TRACE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_OPT_TRACE_DEFAULT	/;"	d
SQL_OPT_TRACE_FILE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_OPT_TRACE_FILE_DEFAULT	/;"	d
SQL_OPT_TRACE_FILE_DEFAULTW	/usr/include/sqlext.h	/^#define SQL_OPT_TRACE_FILE_DEFAULTW	/;"	d
SQL_OPT_TRACE_OFF	/usr/include/sqlext.h	/^#define SQL_OPT_TRACE_OFF	/;"	d
SQL_OPT_TRACE_ON	/usr/include/sqlext.h	/^#define SQL_OPT_TRACE_ON	/;"	d
SQL_ORDER_BY_COLUMNS_IN_SELECT	/usr/include/sql.h	/^#define SQL_ORDER_BY_COLUMNS_IN_SELECT	/;"	d
SQL_OSCC_COMPLIANT	/usr/include/sqlext.h	/^#define SQL_OSCC_COMPLIANT	/;"	d
SQL_OSCC_NOT_COMPLIANT	/usr/include/sqlext.h	/^#define SQL_OSCC_NOT_COMPLIANT	/;"	d
SQL_OSC_CORE	/usr/include/sqlext.h	/^#define SQL_OSC_CORE	/;"	d
SQL_OSC_EXTENDED	/usr/include/sqlext.h	/^#define SQL_OSC_EXTENDED	/;"	d
SQL_OSC_MINIMUM	/usr/include/sqlext.h	/^#define SQL_OSC_MINIMUM	/;"	d
SQL_OUTER_JOINS	/usr/include/sqlext.h	/^#define SQL_OUTER_JOINS	/;"	d
SQL_OUTER_JOIN_CAPABILITIES	/usr/include/sql.h	/^#define SQL_OUTER_JOIN_CAPABILITIES	/;"	d
SQL_OU_DML_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_OU_DML_STATEMENTS	/;"	d
SQL_OU_INDEX_DEFINITION	/usr/include/sqlext.h	/^#define SQL_OU_INDEX_DEFINITION	/;"	d
SQL_OU_PRIVILEGE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_OU_PRIVILEGE_DEFINITION	/;"	d
SQL_OU_PROCEDURE_INVOCATION	/usr/include/sqlext.h	/^#define SQL_OU_PROCEDURE_INVOCATION	/;"	d
SQL_OU_TABLE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_OU_TABLE_DEFINITION	/;"	d
SQL_OV_ODBC2	/usr/include/sqlext.h	/^#define SQL_OV_ODBC2	/;"	d
SQL_OV_ODBC3	/usr/include/sqlext.h	/^#define SQL_OV_ODBC3	/;"	d
SQL_OWNER_TERM	/usr/include/sqlext.h	/^#define SQL_OWNER_TERM	/;"	d
SQL_OWNER_USAGE	/usr/include/sqlext.h	/^#define SQL_OWNER_USAGE	/;"	d
SQL_PACKET_SIZE	/usr/include/sqlext.h	/^#define SQL_PACKET_SIZE	/;"	d
SQL_PARAMOPT_ATOMIC	/usr/include/iodbcext.h	/^#define SQL_PARAMOPT_ATOMIC /;"	d
SQL_PARAM_ARRAY_ROW_COUNTS	/usr/include/sqlext.h	/^#define SQL_PARAM_ARRAY_ROW_COUNTS	/;"	d
SQL_PARAM_ARRAY_SELECTS	/usr/include/sqlext.h	/^#define SQL_PARAM_ARRAY_SELECTS	/;"	d
SQL_PARAM_BIND_BY_COLUMN	/usr/include/sqlext.h	/^#define SQL_PARAM_BIND_BY_COLUMN	/;"	d
SQL_PARAM_BIND_TYPE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_PARAM_BIND_TYPE_DEFAULT	/;"	d
SQL_PARAM_DIAG_UNAVAILABLE	/usr/include/sqlext.h	/^#define SQL_PARAM_DIAG_UNAVAILABLE	/;"	d
SQL_PARAM_ERROR	/usr/include/sqlext.h	/^#define SQL_PARAM_ERROR	/;"	d
SQL_PARAM_IGNORE	/usr/include/sqlext.h	/^#define SQL_PARAM_IGNORE	/;"	d
SQL_PARAM_INPUT	/usr/include/sqlext.h	/^#define SQL_PARAM_INPUT	/;"	d
SQL_PARAM_INPUT_OUTPUT	/usr/include/sqlext.h	/^#define SQL_PARAM_INPUT_OUTPUT	/;"	d
SQL_PARAM_OUTPUT	/usr/include/sqlext.h	/^#define SQL_PARAM_OUTPUT	/;"	d
SQL_PARAM_PROCEED	/usr/include/sqlext.h	/^#define SQL_PARAM_PROCEED	/;"	d
SQL_PARAM_SUCCESS	/usr/include/sqlext.h	/^#define SQL_PARAM_SUCCESS	/;"	d
SQL_PARAM_SUCCESS_WITH_INFO	/usr/include/sqlext.h	/^#define SQL_PARAM_SUCCESS_WITH_INFO	/;"	d
SQL_PARAM_TYPE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_PARAM_TYPE_DEFAULT	/;"	d
SQL_PARAM_TYPE_UNKNOWN	/usr/include/sqlext.h	/^#define SQL_PARAM_TYPE_UNKNOWN	/;"	d
SQL_PARAM_UNUSED	/usr/include/sqlext.h	/^#define SQL_PARAM_UNUSED	/;"	d
SQL_PARC_BATCH	/usr/include/sqlext.h	/^#define SQL_PARC_BATCH	/;"	d
SQL_PARC_NO_BATCH	/usr/include/sqlext.h	/^#define SQL_PARC_NO_BATCH	/;"	d
SQL_PARSE_FWD_ONLY_REQ	/usr/include/iodbcext.h	/^#define SQL_PARSE_FWD_ONLY_REQ	/;"	d
SQL_PAS_BATCH	/usr/include/sqlext.h	/^#define SQL_PAS_BATCH	/;"	d
SQL_PAS_NO_BATCH	/usr/include/sqlext.h	/^#define SQL_PAS_NO_BATCH	/;"	d
SQL_PAS_NO_SELECT	/usr/include/sqlext.h	/^#define SQL_PAS_NO_SELECT	/;"	d
SQL_PC_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_PC_DEFAULT	/;"	d
SQL_PC_NON_PSEUDO	/usr/include/sql.h	/^#define SQL_PC_NON_PSEUDO	/;"	d
SQL_PC_NOT_PSEUDO	/usr/include/sqlext.h	/^#define SQL_PC_NOT_PSEUDO	/;"	d
SQL_PC_OFF	/usr/include/iodbcext.h	/^#define SQL_PC_OFF	/;"	d
SQL_PC_ON	/usr/include/iodbcext.h	/^#define SQL_PC_ON	/;"	d
SQL_PC_PSEUDO	/usr/include/sql.h	/^#define SQL_PC_PSEUDO	/;"	d
SQL_PC_UNKNOWN	/usr/include/sql.h	/^#define SQL_PC_UNKNOWN	/;"	d
SQL_POSITION	/usr/include/sqlext.h	/^#define SQL_POSITION	/;"	d
SQL_POSITIONED_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_POSITIONED_STATEMENTS	/;"	d
SQL_POSITION_TO	/usr/include/sqlext.h	/^#define SQL_POSITION_TO(/;"	d
SQL_POS_ADD	/usr/include/sqlext.h	/^#define SQL_POS_ADD	/;"	d
SQL_POS_DELETE	/usr/include/sqlext.h	/^#define SQL_POS_DELETE	/;"	d
SQL_POS_OPERATIONS	/usr/include/sqlext.h	/^#define SQL_POS_OPERATIONS	/;"	d
SQL_POS_POSITION	/usr/include/sqlext.h	/^#define SQL_POS_POSITION	/;"	d
SQL_POS_REFRESH	/usr/include/sqlext.h	/^#define SQL_POS_REFRESH	/;"	d
SQL_POS_UPDATE	/usr/include/sqlext.h	/^#define SQL_POS_UPDATE	/;"	d
SQL_PRED_BASIC	/usr/include/sql.h	/^#define SQL_PRED_BASIC	/;"	d
SQL_PRED_CHAR	/usr/include/sql.h	/^#define SQL_PRED_CHAR	/;"	d
SQL_PRED_NONE	/usr/include/sql.h	/^#define SQL_PRED_NONE	/;"	d
SQL_PRED_SEARCHABLE	/usr/include/sqlext.h	/^#define SQL_PRED_SEARCHABLE	/;"	d
SQL_PROCEDURES	/usr/include/sqlext.h	/^#define SQL_PROCEDURES	/;"	d
SQL_PROCEDURE_TERM	/usr/include/sqlext.h	/^#define SQL_PROCEDURE_TERM	/;"	d
SQL_PROCESSCTL_NOFORK	/usr/include/iodbcext.h	/^#define SQL_PROCESSCTL_NOFORK /;"	d
SQL_PROCESSCTL_NOTHREAD	/usr/include/iodbcext.h	/^#define SQL_PROCESSCTL_NOTHREAD /;"	d
SQL_PS_POSITIONED_DELETE	/usr/include/sqlext.h	/^#define SQL_PS_POSITIONED_DELETE	/;"	d
SQL_PS_POSITIONED_UPDATE	/usr/include/sqlext.h	/^#define SQL_PS_POSITIONED_UPDATE	/;"	d
SQL_PS_SELECT_FOR_UPDATE	/usr/include/sqlext.h	/^#define SQL_PS_SELECT_FOR_UPDATE	/;"	d
SQL_PT_FUNCTION	/usr/include/sqlext.h	/^#define SQL_PT_FUNCTION	/;"	d
SQL_PT_PROCEDURE	/usr/include/sqlext.h	/^#define SQL_PT_PROCEDURE	/;"	d
SQL_PT_UNKNOWN	/usr/include/sqlext.h	/^#define SQL_PT_UNKNOWN	/;"	d
SQL_QI_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_QI_DEFAULT	/;"	d
SQL_QI_OFF	/usr/include/iodbcext.h	/^#define SQL_QI_OFF	/;"	d
SQL_QI_ON	/usr/include/iodbcext.h	/^#define SQL_QI_ON	/;"	d
SQL_QL_END	/usr/include/sqlext.h	/^#define SQL_QL_END	/;"	d
SQL_QL_START	/usr/include/sqlext.h	/^#define SQL_QL_START	/;"	d
SQL_QUALIFIER_LOCATION	/usr/include/sqlext.h	/^#define SQL_QUALIFIER_LOCATION	/;"	d
SQL_QUALIFIER_NAME_SEPARATOR	/usr/include/sqlext.h	/^#define SQL_QUALIFIER_NAME_SEPARATOR	/;"	d
SQL_QUALIFIER_TERM	/usr/include/sqlext.h	/^#define SQL_QUALIFIER_TERM	/;"	d
SQL_QUALIFIER_USAGE	/usr/include/sqlext.h	/^#define SQL_QUALIFIER_USAGE	/;"	d
SQL_QUERY_TIMEOUT	/usr/include/sqlext.h	/^#define SQL_QUERY_TIMEOUT	/;"	d
SQL_QUERY_TIMEOUT_DEFAULT	/usr/include/sqlext.h	/^#define SQL_QUERY_TIMEOUT_DEFAULT	/;"	d
SQL_QUICK	/usr/include/sqlext.h	/^#define SQL_QUICK	/;"	d
SQL_QUIET_MODE	/usr/include/sqlext.h	/^#define SQL_QUIET_MODE	/;"	d
SQL_QUOTED_IDENTIFIER_CASE	/usr/include/sqlext.h	/^#define SQL_QUOTED_IDENTIFIER_CASE	/;"	d
SQL_QU_DML_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_QU_DML_STATEMENTS	/;"	d
SQL_QU_INDEX_DEFINITION	/usr/include/sqlext.h	/^#define SQL_QU_INDEX_DEFINITION	/;"	d
SQL_QU_PRIVILEGE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_QU_PRIVILEGE_DEFINITION	/;"	d
SQL_QU_PROCEDURE_INVOCATION	/usr/include/sqlext.h	/^#define SQL_QU_PROCEDURE_INVOCATION	/;"	d
SQL_QU_TABLE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_QU_TABLE_DEFINITION	/;"	d
SQL_RD_DEFAULT	/usr/include/sqlext.h	/^#define SQL_RD_DEFAULT	/;"	d
SQL_RD_OFF	/usr/include/sqlext.h	/^#define SQL_RD_OFF	/;"	d
SQL_RD_ON	/usr/include/sqlext.h	/^#define SQL_RD_ON	/;"	d
SQL_REAL	/usr/include/sql.h	/^#define SQL_REAL	/;"	d
SQL_REFRESH	/usr/include/sqlext.h	/^#define SQL_REFRESH	/;"	d
SQL_REFRESH_RECORD	/usr/include/sqlext.h	/^#define SQL_REFRESH_RECORD(/;"	d
SQL_RESET_PARAMS	/usr/include/sql.h	/^#define SQL_RESET_PARAMS	/;"	d
SQL_RESTRICT	/usr/include/sqlext.h	/^#define SQL_RESTRICT	/;"	d
SQL_RESULT_COL	/usr/include/sqlext.h	/^#define SQL_RESULT_COL	/;"	d
SQL_RETRIEVE_DATA	/usr/include/sqlext.h	/^#define SQL_RETRIEVE_DATA	/;"	d
SQL_RETURN_VALUE	/usr/include/sqlext.h	/^#define SQL_RETURN_VALUE	/;"	d
SQL_RE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_RE_DEFAULT	/;"	d
SQL_RE_OFF	/usr/include/iodbcext.h	/^#define SQL_RE_OFF	/;"	d
SQL_RE_ON	/usr/include/iodbcext.h	/^#define SQL_RE_ON	/;"	d
SQL_ROLLBACK	/usr/include/sql.h	/^#define SQL_ROLLBACK	/;"	d
SQL_ROWSET_SIZE	/usr/include/sqlext.h	/^#define SQL_ROWSET_SIZE	/;"	d
SQL_ROWSET_SIZE_DEFAULT	/usr/include/sqlext.h	/^#define SQL_ROWSET_SIZE_DEFAULT	/;"	d
SQL_ROWVER	/usr/include/sqlext.h	/^#define SQL_ROWVER	/;"	d
SQL_ROW_ADDED	/usr/include/sqlext.h	/^#define SQL_ROW_ADDED	/;"	d
SQL_ROW_DELETED	/usr/include/sqlext.h	/^#define SQL_ROW_DELETED	/;"	d
SQL_ROW_ERROR	/usr/include/sqlext.h	/^#define SQL_ROW_ERROR	/;"	d
SQL_ROW_IDENTIFIER	/usr/include/sql.h	/^#define SQL_ROW_IDENTIFIER	/;"	d
SQL_ROW_IGNORE	/usr/include/sqlext.h	/^#define SQL_ROW_IGNORE	/;"	d
SQL_ROW_NOROW	/usr/include/sqlext.h	/^#define SQL_ROW_NOROW	/;"	d
SQL_ROW_NUMBER	/usr/include/sqlext.h	/^#define SQL_ROW_NUMBER	/;"	d
SQL_ROW_NUMBER_UNKNOWN	/usr/include/sqlext.h	/^#define SQL_ROW_NUMBER_UNKNOWN	/;"	d
SQL_ROW_PROCEED	/usr/include/sqlext.h	/^#define SQL_ROW_PROCEED	/;"	d
SQL_ROW_SUCCESS	/usr/include/sqlext.h	/^#define SQL_ROW_SUCCESS	/;"	d
SQL_ROW_SUCCESS_WITH_INFO	/usr/include/sqlext.h	/^#define SQL_ROW_SUCCESS_WITH_INFO	/;"	d
SQL_ROW_UPDATED	/usr/include/sqlext.h	/^#define SQL_ROW_UPDATED	/;"	d
SQL_ROW_UPDATES	/usr/include/sqlext.h	/^#define SQL_ROW_UPDATES	/;"	d
SQL_SCCO_LOCK	/usr/include/sql.h	/^#define SQL_SCCO_LOCK	/;"	d
SQL_SCCO_OPT_ROWVER	/usr/include/sql.h	/^#define SQL_SCCO_OPT_ROWVER	/;"	d
SQL_SCCO_OPT_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_SCCO_OPT_TIMESTAMP	/;"	d
SQL_SCCO_OPT_VALUES	/usr/include/sql.h	/^#define SQL_SCCO_OPT_VALUES	/;"	d
SQL_SCCO_READ_ONLY	/usr/include/sql.h	/^#define SQL_SCCO_READ_ONLY	/;"	d
SQL_SCC_ISO92_CLI	/usr/include/sqlext.h	/^#define SQL_SCC_ISO92_CLI	/;"	d
SQL_SCC_XOPEN_CLI_VERSION1	/usr/include/sqlext.h	/^#define SQL_SCC_XOPEN_CLI_VERSION1	/;"	d
SQL_SCHEMA_TERM	/usr/include/sqlext.h	/^#define SQL_SCHEMA_TERM	/;"	d
SQL_SCHEMA_USAGE	/usr/include/sqlext.h	/^#define SQL_SCHEMA_USAGE	/;"	d
SQL_SCOPE_CURROW	/usr/include/sql.h	/^#define SQL_SCOPE_CURROW	/;"	d
SQL_SCOPE_SESSION	/usr/include/sql.h	/^#define SQL_SCOPE_SESSION	/;"	d
SQL_SCOPE_TRANSACTION	/usr/include/sql.h	/^#define SQL_SCOPE_TRANSACTION	/;"	d
SQL_SCROLLABLE	/usr/include/sql.h	/^#define SQL_SCROLLABLE	/;"	d
SQL_SCROLL_CONCURRENCY	/usr/include/sql.h	/^#define SQL_SCROLL_CONCURRENCY	/;"	d
SQL_SCROLL_DYNAMIC	/usr/include/sqlext.h	/^#define SQL_SCROLL_DYNAMIC	/;"	d
SQL_SCROLL_FORWARD_ONLY	/usr/include/sqlext.h	/^#define SQL_SCROLL_FORWARD_ONLY	/;"	d
SQL_SCROLL_KEYSET_DRIVEN	/usr/include/sqlext.h	/^#define SQL_SCROLL_KEYSET_DRIVEN	/;"	d
SQL_SCROLL_OPTIONS	/usr/include/sqlext.h	/^#define SQL_SCROLL_OPTIONS	/;"	d
SQL_SCROLL_STATIC	/usr/include/sqlext.h	/^#define SQL_SCROLL_STATIC	/;"	d
SQL_SC_FIPS127_2_TRANSITIONAL	/usr/include/sqlext.h	/^#define SQL_SC_FIPS127_2_TRANSITIONAL	/;"	d
SQL_SC_NON_UNIQUE	/usr/include/sqlext.h	/^#define SQL_SC_NON_UNIQUE	/;"	d
SQL_SC_SQL92_ENTRY	/usr/include/sqlext.h	/^#define SQL_SC_SQL92_ENTRY	/;"	d
SQL_SC_SQL92_FULL	/usr/include/sqlext.h	/^#define SQL_SC_SQL92_FULL	/;"	d
SQL_SC_SQL92_INTERMEDIATE	/usr/include/sqlext.h	/^#define SQL_SC_SQL92_INTERMEDIATE	/;"	d
SQL_SC_TRY_UNIQUE	/usr/include/sqlext.h	/^#define SQL_SC_TRY_UNIQUE	/;"	d
SQL_SC_UNIQUE	/usr/include/sqlext.h	/^#define SQL_SC_UNIQUE	/;"	d
SQL_SDF_CURRENT_DATE	/usr/include/sqlext.h	/^#define SQL_SDF_CURRENT_DATE	/;"	d
SQL_SDF_CURRENT_TIME	/usr/include/sqlext.h	/^#define SQL_SDF_CURRENT_TIME	/;"	d
SQL_SDF_CURRENT_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_SDF_CURRENT_TIMESTAMP	/;"	d
SQL_SEARCHABLE	/usr/include/sqlext.h	/^#define SQL_SEARCHABLE	/;"	d
SQL_SEARCH_PATTERN_ESCAPE	/usr/include/sql.h	/^#define SQL_SEARCH_PATTERN_ESCAPE	/;"	d
SQL_SECOND	/usr/include/sqlext.h	/^#define SQL_SECOND	/;"	d
SQL_SENSITIVE	/usr/include/sql.h	/^#define SQL_SENSITIVE	/;"	d
SQL_SERVER_NAME	/usr/include/sql.h	/^#define SQL_SERVER_NAME	/;"	d
SQL_SETPARAM_VALUE_MAX	/usr/include/sqlext.h	/^#define SQL_SETPARAM_VALUE_MAX	/;"	d
SQL_SETPOS_MAX_LOCK_VALUE	/usr/include/sqlext.h	/^#define SQL_SETPOS_MAX_LOCK_VALUE	/;"	d
SQL_SETPOS_MAX_OPTION_VALUE	/usr/include/sqlext.h	/^#define SQL_SETPOS_MAX_OPTION_VALUE	/;"	d
SQL_SET_DEFAULT	/usr/include/sqlext.h	/^#define SQL_SET_DEFAULT	/;"	d
SQL_SET_NULL	/usr/include/sqlext.h	/^#define SQL_SET_NULL	/;"	d
SQL_SFKD_CASCADE	/usr/include/sqlext.h	/^#define SQL_SFKD_CASCADE	/;"	d
SQL_SFKD_NO_ACTION	/usr/include/sqlext.h	/^#define SQL_SFKD_NO_ACTION	/;"	d
SQL_SFKD_SET_DEFAULT	/usr/include/sqlext.h	/^#define SQL_SFKD_SET_DEFAULT	/;"	d
SQL_SFKD_SET_NULL	/usr/include/sqlext.h	/^#define SQL_SFKD_SET_NULL	/;"	d
SQL_SFKU_CASCADE	/usr/include/sqlext.h	/^#define SQL_SFKU_CASCADE	/;"	d
SQL_SFKU_NO_ACTION	/usr/include/sqlext.h	/^#define SQL_SFKU_NO_ACTION	/;"	d
SQL_SFKU_SET_DEFAULT	/usr/include/sqlext.h	/^#define SQL_SFKU_SET_DEFAULT	/;"	d
SQL_SFKU_SET_NULL	/usr/include/sqlext.h	/^#define SQL_SFKU_SET_NULL	/;"	d
SQL_SG_DELETE_TABLE	/usr/include/sqlext.h	/^#define SQL_SG_DELETE_TABLE	/;"	d
SQL_SG_INSERT_COLUMN	/usr/include/sqlext.h	/^#define SQL_SG_INSERT_COLUMN	/;"	d
SQL_SG_INSERT_TABLE	/usr/include/sqlext.h	/^#define SQL_SG_INSERT_TABLE	/;"	d
SQL_SG_REFERENCES_COLUMN	/usr/include/sqlext.h	/^#define SQL_SG_REFERENCES_COLUMN	/;"	d
SQL_SG_REFERENCES_TABLE	/usr/include/sqlext.h	/^#define SQL_SG_REFERENCES_TABLE	/;"	d
SQL_SG_SELECT_TABLE	/usr/include/sqlext.h	/^#define SQL_SG_SELECT_TABLE	/;"	d
SQL_SG_UPDATE_COLUMN	/usr/include/sqlext.h	/^#define SQL_SG_UPDATE_COLUMN	/;"	d
SQL_SG_UPDATE_TABLE	/usr/include/sqlext.h	/^#define SQL_SG_UPDATE_TABLE	/;"	d
SQL_SG_USAGE_ON_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_SG_USAGE_ON_CHARACTER_SET	/;"	d
SQL_SG_USAGE_ON_COLLATION	/usr/include/sqlext.h	/^#define SQL_SG_USAGE_ON_COLLATION	/;"	d
SQL_SG_USAGE_ON_DOMAIN	/usr/include/sqlext.h	/^#define SQL_SG_USAGE_ON_DOMAIN	/;"	d
SQL_SG_USAGE_ON_TRANSLATION	/usr/include/sqlext.h	/^#define SQL_SG_USAGE_ON_TRANSLATION	/;"	d
SQL_SG_WITH_GRANT_OPTION	/usr/include/sqlext.h	/^#define SQL_SG_WITH_GRANT_OPTION	/;"	d
SQL_SIGNED_OFFSET	/usr/include/sqlext.h	/^#define SQL_SIGNED_OFFSET	/;"	d
SQL_SIMULATE_CURSOR	/usr/include/sqlext.h	/^#define SQL_SIMULATE_CURSOR	/;"	d
SQL_SMALLINT	/usr/include/sql.h	/^#define SQL_SMALLINT	/;"	d
SQL_SNVF_BIT_LENGTH	/usr/include/sqlext.h	/^#define SQL_SNVF_BIT_LENGTH	/;"	d
SQL_SNVF_CHARACTER_LENGTH	/usr/include/sqlext.h	/^#define SQL_SNVF_CHARACTER_LENGTH	/;"	d
SQL_SNVF_CHAR_LENGTH	/usr/include/sqlext.h	/^#define SQL_SNVF_CHAR_LENGTH	/;"	d
SQL_SNVF_EXTRACT	/usr/include/sqlext.h	/^#define SQL_SNVF_EXTRACT	/;"	d
SQL_SNVF_OCTET_LENGTH	/usr/include/sqlext.h	/^#define SQL_SNVF_OCTET_LENGTH	/;"	d
SQL_SNVF_POSITION	/usr/include/sqlext.h	/^#define SQL_SNVF_POSITION	/;"	d
SQL_SOPT_SS_BASE	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_BASE	/;"	d
SQL_SOPT_SS_CURRENT_COMMAND	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_CURRENT_COMMAND	/;"	d
SQL_SOPT_SS_HIDDEN_COLUMNS	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_HIDDEN_COLUMNS	/;"	d
SQL_SOPT_SS_MAX_USED	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_MAX_USED	/;"	d
SQL_SOPT_SS_NOBROWSETABLE	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_NOBROWSETABLE	/;"	d
SQL_SOPT_SS_REGIONALIZE	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_REGIONALIZE	/;"	d
SQL_SOPT_SS_TEXTPTR_LOGGING	/usr/include/iodbcext.h	/^#define SQL_SOPT_SS_TEXTPTR_LOGGING	/;"	d
SQL_SO_DYNAMIC	/usr/include/sqlext.h	/^#define SQL_SO_DYNAMIC	/;"	d
SQL_SO_FORWARD_ONLY	/usr/include/sqlext.h	/^#define SQL_SO_FORWARD_ONLY	/;"	d
SQL_SO_KEYSET_DRIVEN	/usr/include/sqlext.h	/^#define SQL_SO_KEYSET_DRIVEN	/;"	d
SQL_SO_MIXED	/usr/include/sqlext.h	/^#define SQL_SO_MIXED	/;"	d
SQL_SO_STATIC	/usr/include/sqlext.h	/^#define SQL_SO_STATIC	/;"	d
SQL_SPECIAL_CHARACTERS	/usr/include/sql.h	/^#define SQL_SPECIAL_CHARACTERS	/;"	d
SQL_SPEC_MAJOR	/usr/include/sqlext.h	/^#define SQL_SPEC_MAJOR /;"	d
SQL_SPEC_MINOR	/usr/include/sqlext.h	/^#define SQL_SPEC_MINOR	/;"	d
SQL_SPEC_STRING	/usr/include/sqlext.h	/^#define SQL_SPEC_STRING /;"	d
SQL_SP_BETWEEN	/usr/include/sqlext.h	/^#define SQL_SP_BETWEEN	/;"	d
SQL_SP_COMPARISON	/usr/include/sqlext.h	/^#define SQL_SP_COMPARISON	/;"	d
SQL_SP_EXISTS	/usr/include/sqlext.h	/^#define SQL_SP_EXISTS	/;"	d
SQL_SP_IN	/usr/include/sqlext.h	/^#define SQL_SP_IN	/;"	d
SQL_SP_ISNOTNULL	/usr/include/sqlext.h	/^#define SQL_SP_ISNOTNULL	/;"	d
SQL_SP_ISNULL	/usr/include/sqlext.h	/^#define SQL_SP_ISNULL	/;"	d
SQL_SP_LIKE	/usr/include/sqlext.h	/^#define SQL_SP_LIKE	/;"	d
SQL_SP_MATCH_FULL	/usr/include/sqlext.h	/^#define SQL_SP_MATCH_FULL	/;"	d
SQL_SP_MATCH_PARTIAL	/usr/include/sqlext.h	/^#define SQL_SP_MATCH_PARTIAL	/;"	d
SQL_SP_MATCH_UNIQUE_FULL	/usr/include/sqlext.h	/^#define SQL_SP_MATCH_UNIQUE_FULL	/;"	d
SQL_SP_MATCH_UNIQUE_PARTIAL	/usr/include/sqlext.h	/^#define SQL_SP_MATCH_UNIQUE_PARTIAL	/;"	d
SQL_SP_OVERLAPS	/usr/include/sqlext.h	/^#define SQL_SP_OVERLAPS	/;"	d
SQL_SP_QUANTIFIED_COMPARISON	/usr/include/sqlext.h	/^#define SQL_SP_QUANTIFIED_COMPARISON	/;"	d
SQL_SP_UNIQUE	/usr/include/sqlext.h	/^#define SQL_SP_UNIQUE	/;"	d
SQL_SQL92_DATETIME_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_SQL92_DATETIME_FUNCTIONS	/;"	d
SQL_SQL92_FOREIGN_KEY_DELETE_RULE	/usr/include/sqlext.h	/^#define SQL_SQL92_FOREIGN_KEY_DELETE_RULE	/;"	d
SQL_SQL92_FOREIGN_KEY_UPDATE_RULE	/usr/include/sqlext.h	/^#define SQL_SQL92_FOREIGN_KEY_UPDATE_RULE	/;"	d
SQL_SQL92_GRANT	/usr/include/sqlext.h	/^#define SQL_SQL92_GRANT	/;"	d
SQL_SQL92_NUMERIC_VALUE_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_SQL92_NUMERIC_VALUE_FUNCTIONS	/;"	d
SQL_SQL92_PREDICATES	/usr/include/sqlext.h	/^#define SQL_SQL92_PREDICATES	/;"	d
SQL_SQL92_RELATIONAL_JOIN_OPERATORS	/usr/include/sqlext.h	/^#define SQL_SQL92_RELATIONAL_JOIN_OPERATORS	/;"	d
SQL_SQL92_REVOKE	/usr/include/sqlext.h	/^#define SQL_SQL92_REVOKE	/;"	d
SQL_SQL92_ROW_VALUE_CONSTRUCTOR	/usr/include/sqlext.h	/^#define SQL_SQL92_ROW_VALUE_CONSTRUCTOR	/;"	d
SQL_SQL92_STRING_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_SQL92_STRING_FUNCTIONS	/;"	d
SQL_SQL92_VALUE_EXPRESSIONS	/usr/include/sqlext.h	/^#define SQL_SQL92_VALUE_EXPRESSIONS	/;"	d
SQL_SQLSTATE_SIZE	/usr/include/sqlext.h	/^#define SQL_SQLSTATE_SIZE	/;"	d
SQL_SQLSTATE_SIZEW	/usr/include/sqlucode.h	/^#define SQL_SQLSTATE_SIZEW	/;"	d
SQL_SQL_CONFORMANCE	/usr/include/sqlext.h	/^#define SQL_SQL_CONFORMANCE	/;"	d
SQL_SQ_COMPARISON	/usr/include/sqlext.h	/^#define SQL_SQ_COMPARISON	/;"	d
SQL_SQ_CORRELATED_SUBQUERIES	/usr/include/sqlext.h	/^#define SQL_SQ_CORRELATED_SUBQUERIES	/;"	d
SQL_SQ_EXISTS	/usr/include/sqlext.h	/^#define SQL_SQ_EXISTS	/;"	d
SQL_SQ_IN	/usr/include/sqlext.h	/^#define SQL_SQ_IN	/;"	d
SQL_SQ_QUANTIFIED	/usr/include/sqlext.h	/^#define SQL_SQ_QUANTIFIED	/;"	d
SQL_SRJO_CORRESPONDING_CLAUSE	/usr/include/sqlext.h	/^#define SQL_SRJO_CORRESPONDING_CLAUSE	/;"	d
SQL_SRJO_CROSS_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_CROSS_JOIN	/;"	d
SQL_SRJO_EXCEPT_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_EXCEPT_JOIN	/;"	d
SQL_SRJO_FULL_OUTER_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_FULL_OUTER_JOIN	/;"	d
SQL_SRJO_INNER_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_INNER_JOIN	/;"	d
SQL_SRJO_INTERSECT_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_INTERSECT_JOIN	/;"	d
SQL_SRJO_LEFT_OUTER_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_LEFT_OUTER_JOIN	/;"	d
SQL_SRJO_NATURAL_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_NATURAL_JOIN	/;"	d
SQL_SRJO_RIGHT_OUTER_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_RIGHT_OUTER_JOIN	/;"	d
SQL_SRJO_UNION_JOIN	/usr/include/sqlext.h	/^#define SQL_SRJO_UNION_JOIN	/;"	d
SQL_SRVC_DEFAULT	/usr/include/sqlext.h	/^#define SQL_SRVC_DEFAULT	/;"	d
SQL_SRVC_NULL	/usr/include/sqlext.h	/^#define SQL_SRVC_NULL	/;"	d
SQL_SRVC_ROW_SUBQUERY	/usr/include/sqlext.h	/^#define SQL_SRVC_ROW_SUBQUERY	/;"	d
SQL_SRVC_VALUE_EXPRESSION	/usr/include/sqlext.h	/^#define SQL_SRVC_VALUE_EXPRESSION	/;"	d
SQL_SR_CASCADE	/usr/include/sqlext.h	/^#define SQL_SR_CASCADE	/;"	d
SQL_SR_DELETE_TABLE	/usr/include/sqlext.h	/^#define SQL_SR_DELETE_TABLE	/;"	d
SQL_SR_GRANT_OPTION_FOR	/usr/include/sqlext.h	/^#define SQL_SR_GRANT_OPTION_FOR	/;"	d
SQL_SR_INSERT_COLUMN	/usr/include/sqlext.h	/^#define SQL_SR_INSERT_COLUMN	/;"	d
SQL_SR_INSERT_TABLE	/usr/include/sqlext.h	/^#define SQL_SR_INSERT_TABLE	/;"	d
SQL_SR_REFERENCES_COLUMN	/usr/include/sqlext.h	/^#define SQL_SR_REFERENCES_COLUMN	/;"	d
SQL_SR_REFERENCES_TABLE	/usr/include/sqlext.h	/^#define SQL_SR_REFERENCES_TABLE	/;"	d
SQL_SR_RESTRICT	/usr/include/sqlext.h	/^#define SQL_SR_RESTRICT	/;"	d
SQL_SR_SELECT_TABLE	/usr/include/sqlext.h	/^#define SQL_SR_SELECT_TABLE	/;"	d
SQL_SR_UPDATE_COLUMN	/usr/include/sqlext.h	/^#define SQL_SR_UPDATE_COLUMN	/;"	d
SQL_SR_UPDATE_TABLE	/usr/include/sqlext.h	/^#define SQL_SR_UPDATE_TABLE	/;"	d
SQL_SR_USAGE_ON_CHARACTER_SET	/usr/include/sqlext.h	/^#define SQL_SR_USAGE_ON_CHARACTER_SET	/;"	d
SQL_SR_USAGE_ON_COLLATION	/usr/include/sqlext.h	/^#define SQL_SR_USAGE_ON_COLLATION	/;"	d
SQL_SR_USAGE_ON_DOMAIN	/usr/include/sqlext.h	/^#define SQL_SR_USAGE_ON_DOMAIN	/;"	d
SQL_SR_USAGE_ON_TRANSLATION	/usr/include/sqlext.h	/^#define SQL_SR_USAGE_ON_TRANSLATION	/;"	d
SQL_SSF_CONVERT	/usr/include/sqlext.h	/^#define SQL_SSF_CONVERT	/;"	d
SQL_SSF_LOWER	/usr/include/sqlext.h	/^#define SQL_SSF_LOWER	/;"	d
SQL_SSF_SUBSTRING	/usr/include/sqlext.h	/^#define SQL_SSF_SUBSTRING	/;"	d
SQL_SSF_TRANSLATE	/usr/include/sqlext.h	/^#define SQL_SSF_TRANSLATE	/;"	d
SQL_SSF_TRIM_BOTH	/usr/include/sqlext.h	/^#define SQL_SSF_TRIM_BOTH	/;"	d
SQL_SSF_TRIM_LEADING	/usr/include/sqlext.h	/^#define SQL_SSF_TRIM_LEADING	/;"	d
SQL_SSF_TRIM_TRAILING	/usr/include/sqlext.h	/^#define SQL_SSF_TRIM_TRAILING	/;"	d
SQL_SSF_UPPER	/usr/include/sqlext.h	/^#define SQL_SSF_UPPER	/;"	d
SQL_SS_ADDITIONS	/usr/include/sqlext.h	/^#define SQL_SS_ADDITIONS	/;"	d
SQL_SS_DELETIONS	/usr/include/sqlext.h	/^#define SQL_SS_DELETIONS	/;"	d
SQL_SS_UPDATES	/usr/include/sqlext.h	/^#define SQL_SS_UPDATES	/;"	d
SQL_STANDARD_CLI_CONFORMANCE	/usr/include/sqlext.h	/^#define SQL_STANDARD_CLI_CONFORMANCE	/;"	d
SQL_STATIC_CURSOR_ATTRIBUTES1	/usr/include/sqlext.h	/^#define SQL_STATIC_CURSOR_ATTRIBUTES1	/;"	d
SQL_STATIC_CURSOR_ATTRIBUTES2	/usr/include/sqlext.h	/^#define SQL_STATIC_CURSOR_ATTRIBUTES2	/;"	d
SQL_STATIC_SENSITIVITY	/usr/include/sqlext.h	/^#define SQL_STATIC_SENSITIVITY	/;"	d
SQL_STILL_EXECUTING	/usr/include/sql.h	/^#define SQL_STILL_EXECUTING	/;"	d
SQL_STMTTXN_ISOLATION	/usr/include/iodbcext.h	/^#define SQL_STMTTXN_ISOLATION /;"	d
SQL_STMT_OPT_MAX	/usr/include/sqlext.h	/^#define SQL_STMT_OPT_MAX	/;"	d
SQL_STMT_OPT_MIN	/usr/include/sqlext.h	/^#define SQL_STMT_OPT_MIN	/;"	d
SQL_STRING_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_STRING_FUNCTIONS	/;"	d
SQL_SUBQUERIES	/usr/include/sqlext.h	/^#define SQL_SUBQUERIES	/;"	d
SQL_SUCCEEDED	/usr/include/sql.h	/^#define SQL_SUCCEEDED(/;"	d
SQL_SUCCESS	/usr/include/sql.h	/^#define SQL_SUCCESS	/;"	d
SQL_SUCCESS_WITH_INFO	/usr/include/sql.h	/^#define SQL_SUCCESS_WITH_INFO	/;"	d
SQL_SU_DML_STATEMENTS	/usr/include/sqlext.h	/^#define SQL_SU_DML_STATEMENTS	/;"	d
SQL_SU_INDEX_DEFINITION	/usr/include/sqlext.h	/^#define SQL_SU_INDEX_DEFINITION	/;"	d
SQL_SU_PRIVILEGE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_SU_PRIVILEGE_DEFINITION	/;"	d
SQL_SU_PROCEDURE_INVOCATION	/usr/include/sqlext.h	/^#define SQL_SU_PROCEDURE_INVOCATION	/;"	d
SQL_SU_TABLE_DEFINITION	/usr/include/sqlext.h	/^#define SQL_SU_TABLE_DEFINITION	/;"	d
SQL_SVE_CASE	/usr/include/sqlext.h	/^#define SQL_SVE_CASE	/;"	d
SQL_SVE_CAST	/usr/include/sqlext.h	/^#define SQL_SVE_CAST	/;"	d
SQL_SVE_COALESCE	/usr/include/sqlext.h	/^#define SQL_SVE_COALESCE	/;"	d
SQL_SVE_NULLIF	/usr/include/sqlext.h	/^#define SQL_SVE_NULLIF	/;"	d
SQL_SYNCPOINT_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_SYNCPOINT_DEFAULT /;"	d
SQL_SYNC_POINT	/usr/include/iodbcext.h	/^#define SQL_SYNC_POINT /;"	d
SQL_SYSTEM_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_SYSTEM_FUNCTIONS	/;"	d
SQL_TABLE_STAT	/usr/include/sqlext.h	/^#define SQL_TABLE_STAT	/;"	d
SQL_TABLE_TERM	/usr/include/sqlext.h	/^#define SQL_TABLE_TERM	/;"	d
SQL_TC_ALL	/usr/include/sql.h	/^#define SQL_TC_ALL	/;"	d
SQL_TC_DDL_COMMIT	/usr/include/sql.h	/^#define SQL_TC_DDL_COMMIT	/;"	d
SQL_TC_DDL_IGNORE	/usr/include/sql.h	/^#define SQL_TC_DDL_IGNORE	/;"	d
SQL_TC_DML	/usr/include/sql.h	/^#define SQL_TC_DML	/;"	d
SQL_TC_NONE	/usr/include/sql.h	/^#define SQL_TC_NONE	/;"	d
SQL_TIME	/usr/include/sqlext.h	/^#define SQL_TIME	/;"	d
SQL_TIMEDATE_ADD_INTERVALS	/usr/include/sqlext.h	/^#define SQL_TIMEDATE_ADD_INTERVALS	/;"	d
SQL_TIMEDATE_DIFF_INTERVALS	/usr/include/sqlext.h	/^#define SQL_TIMEDATE_DIFF_INTERVALS	/;"	d
SQL_TIMEDATE_FUNCTIONS	/usr/include/sqlext.h	/^#define SQL_TIMEDATE_FUNCTIONS	/;"	d
SQL_TIMESTAMP	/usr/include/sqlext.h	/^#define SQL_TIMESTAMP	/;"	d
SQL_TIMESTAMP_LEN	/usr/include/sql.h	/^#define SQL_TIMESTAMP_LEN	/;"	d
SQL_TIMESTAMP_STRUCT	/usr/include/sqltypes.h	/^typedef TIMESTAMP_STRUCT	SQL_TIMESTAMP_STRUCT;$/;"	t
SQL_TIME_LEN	/usr/include/sql.h	/^#define SQL_TIME_LEN	/;"	d
SQL_TIME_STRUCT	/usr/include/sqltypes.h	/^typedef TIME_STRUCT		SQL_TIME_STRUCT;$/;"	t
SQL_TINYINT	/usr/include/sqlext.h	/^#define SQL_TINYINT	/;"	d
SQL_TL_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_TL_DEFAULT	/;"	d
SQL_TL_OFF	/usr/include/iodbcext.h	/^#define SQL_TL_OFF	/;"	d
SQL_TL_ON	/usr/include/iodbcext.h	/^#define SQL_TL_ON	/;"	d
SQL_TRANSACTION_CAPABLE	/usr/include/sql.h	/^#define SQL_TRANSACTION_CAPABLE	/;"	d
SQL_TRANSACTION_ISOLATION_OPTION	/usr/include/sql.h	/^#define SQL_TRANSACTION_ISOLATION_OPTION	/;"	d
SQL_TRANSACTION_READ_COMMITTED	/usr/include/sql.h	/^#define SQL_TRANSACTION_READ_COMMITTED	/;"	d
SQL_TRANSACTION_READ_UNCOMMITTED	/usr/include/sql.h	/^#define SQL_TRANSACTION_READ_UNCOMMITTED	/;"	d
SQL_TRANSACTION_REPEATABLE_READ	/usr/include/sql.h	/^#define SQL_TRANSACTION_REPEATABLE_READ	/;"	d
SQL_TRANSACTION_SERIALIZABLE	/usr/include/sql.h	/^#define SQL_TRANSACTION_SERIALIZABLE	/;"	d
SQL_TRANSLATE_DLL	/usr/include/sqlext.h	/^#define SQL_TRANSLATE_DLL	/;"	d
SQL_TRANSLATE_OPTION	/usr/include/sqlext.h	/^#define SQL_TRANSLATE_OPTION	/;"	d
SQL_TRUE	/usr/include/sql.h	/^#define SQL_TRUE	/;"	d
SQL_TWOPHASE	/usr/include/iodbcext.h	/^#define SQL_TWOPHASE /;"	d
SQL_TXN_CAPABLE	/usr/include/sql.h	/^#define SQL_TXN_CAPABLE	/;"	d
SQL_TXN_ISOLATION	/usr/include/sqlext.h	/^#define SQL_TXN_ISOLATION	/;"	d
SQL_TXN_ISOLATION_OPTION	/usr/include/sql.h	/^#define SQL_TXN_ISOLATION_OPTION	/;"	d
SQL_TXN_READ_COMMITTED	/usr/include/sql.h	/^#define SQL_TXN_READ_COMMITTED	/;"	d
SQL_TXN_READ_UNCOMMITTED	/usr/include/sql.h	/^#define SQL_TXN_READ_UNCOMMITTED	/;"	d
SQL_TXN_REPEATABLE_READ	/usr/include/sql.h	/^#define SQL_TXN_REPEATABLE_READ	/;"	d
SQL_TXN_SERIALIZABLE	/usr/include/sql.h	/^#define SQL_TXN_SERIALIZABLE	/;"	d
SQL_TXN_VERSIONING	/usr/include/sqlext.h	/^#define SQL_TXN_VERSIONING	/;"	d
SQL_TYPE_DATE	/usr/include/sql.h	/^#define SQL_TYPE_DATE	/;"	d
SQL_TYPE_DRIVER_END	/usr/include/sqlext.h	/^#define SQL_TYPE_DRIVER_END	/;"	d
SQL_TYPE_DRIVER_START	/usr/include/sqlext.h	/^#define SQL_TYPE_DRIVER_START	/;"	d
SQL_TYPE_MAX	/usr/include/sqlext.h	/^#define SQL_TYPE_MAX	/;"	d
SQL_TYPE_MIN	/usr/include/sqlext.h	/^#define SQL_TYPE_MIN	/;"	d
SQL_TYPE_NULL	/usr/include/sqlext.h	/^#define SQL_TYPE_NULL	/;"	d
SQL_TYPE_TIME	/usr/include/sql.h	/^#define SQL_TYPE_TIME	/;"	d
SQL_TYPE_TIMESTAMP	/usr/include/sql.h	/^#define SQL_TYPE_TIMESTAMP	/;"	d
SQL_UB_DEFAULT	/usr/include/sqlext.h	/^#define SQL_UB_DEFAULT	/;"	d
SQL_UB_FIXED	/usr/include/sqlext.h	/^#define SQL_UB_FIXED	/;"	d
SQL_UB_OFF	/usr/include/sqlext.h	/^#define SQL_UB_OFF	/;"	d
SQL_UB_ON	/usr/include/sqlext.h	/^#define SQL_UB_ON	/;"	d
SQL_UB_VARIABLE	/usr/include/sqlext.h	/^#define SQL_UB_VARIABLE	/;"	d
SQL_UD_NOTSET	/usr/include/iodbcext.h	/^#define SQL_UD_NOTSET	/;"	d
SQL_UNBIND	/usr/include/sql.h	/^#define SQL_UNBIND	/;"	d
SQL_UNICODE	/usr/include/sqlext.h	/^#define SQL_UNICODE	/;"	d
SQL_UNICODE_CHAR	/usr/include/sqlext.h	/^#define SQL_UNICODE_CHAR	/;"	d
SQL_UNICODE_LONGVARCHAR	/usr/include/sqlext.h	/^#define SQL_UNICODE_LONGVARCHAR	/;"	d
SQL_UNICODE_VARCHAR	/usr/include/sqlext.h	/^#define SQL_UNICODE_VARCHAR	/;"	d
SQL_UNION	/usr/include/sqlext.h	/^#define SQL_UNION	/;"	d
SQL_UNION_STATEMENT	/usr/include/sqlext.h	/^#define SQL_UNION_STATEMENT	/;"	d
SQL_UNKNOWN_TYPE	/usr/include/sql.h	/^#define SQL_UNKNOWN_TYPE	/;"	d
SQL_UNNAMED	/usr/include/sql.h	/^#define SQL_UNNAMED	/;"	d
SQL_UNSEARCHABLE	/usr/include/sqlext.h	/^#define SQL_UNSEARCHABLE	/;"	d
SQL_UNSIGNED_OFFSET	/usr/include/sqlext.h	/^#define SQL_UNSIGNED_OFFSET	/;"	d
SQL_UNSPECIFIED	/usr/include/sql.h	/^#define SQL_UNSPECIFIED	/;"	d
SQL_UPDATE	/usr/include/sqlext.h	/^#define SQL_UPDATE	/;"	d
SQL_UPDATE_BY_BOOKMARK	/usr/include/sqlext.h	/^#define SQL_UPDATE_BY_BOOKMARK	/;"	d
SQL_UPDATE_RECORD	/usr/include/sqlext.h	/^#define SQL_UPDATE_RECORD(/;"	d
SQL_UP_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_UP_DEFAULT	/;"	d
SQL_UP_OFF	/usr/include/iodbcext.h	/^#define SQL_UP_OFF	/;"	d
SQL_UP_ON	/usr/include/iodbcext.h	/^#define SQL_UP_ON	/;"	d
SQL_UP_ON_DROP	/usr/include/iodbcext.h	/^#define SQL_UP_ON_DROP	/;"	d
SQL_USER_NAME	/usr/include/sql.h	/^#define SQL_USER_NAME	/;"	d
SQL_USE_BOOKMARKS	/usr/include/sqlext.h	/^#define SQL_USE_BOOKMARKS	/;"	d
SQL_US_UNION	/usr/include/sqlext.h	/^#define SQL_US_UNION	/;"	d
SQL_US_UNION_ALL	/usr/include/sqlext.h	/^#define SQL_US_UNION_ALL	/;"	d
SQL_U_UNION	/usr/include/sqlext.h	/^#define SQL_U_UNION	/;"	d
SQL_U_UNION_ALL	/usr/include/sqlext.h	/^#define SQL_U_UNION_ALL	/;"	d
SQL_VARBINARY	/usr/include/sqlext.h	/^#define SQL_VARBINARY	/;"	d
SQL_VARCHAR	/usr/include/sql.h	/^#define SQL_VARCHAR	/;"	d
SQL_WCHAR	/usr/include/sqlucode.h	/^#define SQL_WCHAR	/;"	d
SQL_WCHARTYPE	/usr/include/iodbcext.h	/^#define SQL_WCHARTYPE /;"	d
SQL_WCHARTYPE_CONVERT	/usr/include/iodbcext.h	/^#define SQL_WCHARTYPE_CONVERT /;"	d
SQL_WCHARTYPE_DEFAULT	/usr/include/iodbcext.h	/^#define SQL_WCHARTYPE_DEFAULT /;"	d
SQL_WCHARTYPE_NOCONVERT	/usr/include/iodbcext.h	/^#define SQL_WCHARTYPE_NOCONVERT /;"	d
SQL_WLONGVARCHAR	/usr/include/sqlucode.h	/^#define SQL_WLONGVARCHAR	/;"	d
SQL_WVARCHAR	/usr/include/sqlucode.h	/^#define SQL_WVARCHAR	/;"	d
SQL_XOPEN_CLI_YEAR	/usr/include/sql.h	/^#define SQL_XOPEN_CLI_YEAR	/;"	d
SQL_YEAR	/usr/include/sqlext.h	/^#define SQL_YEAR	/;"	d
SQL_YEAR_MONTH_STRUCT	/usr/include/sqltypes.h	/^SQL_YEAR_MONTH_STRUCT;$/;"	t	typeref:struct:tagSQL_YEAR_MONTH
SQL_YEAR_TO_MONTH	/usr/include/sqlext.h	/^#define SQL_YEAR_TO_MONTH	/;"	d
SRV	/usr/include/dns_util.h	/^		dns_SRV_record_t *SRV;$/;"	m	union:__anon41::__anon42	access:public
SSHORT	/usr/include/sqltypes.h	/^typedef signed short		SSHORT;$/;"	t
STDC	/usr/include/zconf.h	/^#    define STDC$/;"	d
STDC	/usr/include/zconf.h	/^#  define STDC$/;"	d
STDC99	/usr/include/zconf.h	/^#      define STDC99$/;"	d
STDC_HEADERS	/usr/include/fcgi_config.h	/^#define STDC_HEADERS /;"	d
STDERR_FILENO	/usr/include/fcgios.h	/^#define STDERR_FILENO /;"	d
STDERR_FILENO	/usr/include/unistd.h	/^#define	STDERR_FILENO	/;"	d
STDIN_FILENO	/usr/include/fcgios.h	/^#define STDIN_FILENO /;"	d
STDIN_FILENO	/usr/include/unistd.h	/^#define	 STDIN_FILENO	/;"	d
STDOUT_FILENO	/usr/include/fcgios.h	/^#define STDOUT_FILENO /;"	d
STDOUT_FILENO	/usr/include/unistd.h	/^#define	STDOUT_FILENO	/;"	d
STRCOUNT	/usr/include/term.h	/^#define STRCOUNT /;"	d
STRICT	/usr/include/tcl.h	/^#	define STRICT$/;"	d
STRING	/usr/include/tic.h	/^#define STRING /;"	d
STRINGIFY	/usr/include/tcl.h	/^#  define STRINGIFY(/;"	d
STRINGIFY1	/usr/include/tcl.h	/^#  define STRINGIFY1(/;"	d
STRING_LENGTH	/usr/include/tcpd.h	/^#define STRING_LENGTH	/;"	d
STRING_PARANOID	/usr/include/tcpd.h	/^#define STRING_PARANOID	/;"	d
STRING_UNKNOWN	/usr/include/tcpd.h	/^#define STRING_UNKNOWN	/;"	d
STRN_CPY	/usr/include/tcpd.h	/^#define STRN_CPY(/;"	d
STRN_EQ	/usr/include/tcpd.h	/^#define STRN_EQ(/;"	d
STRN_NE	/usr/include/tcpd.h	/^#define STRN_NE(/;"	d
STRWRITE	/usr/include/term.h	/^#define STRWRITE /;"	d
STR_EQ	/usr/include/tcpd.h	/^#define STR_EQ(/;"	d
STR_NE	/usr/include/tcpd.h	/^#define STR_NE(/;"	d
SWORD	/usr/include/sqltypes.h	/^typedef short int		SWORD;$/;"	t
SYMDEF	/usr/include/ranlib.h	/^#define SYMDEF	/;"	d
SYMDEF_SORTED	/usr/include/ranlib.h	/^#define SYMDEF_SORTED	/;"	d
SYMTYPE	/usr/include/tar.h	/^#define	SYMTYPE	/;"	d
SYN_TERMCAP	/usr/include/tic.h	/^#define SYN_TERMCAP	/;"	d
SYN_TERMINFO	/usr/include/tic.h	/^#define SYN_TERMINFO	/;"	d
SYS16BIT	/usr/include/zconf.h	/^#      define SYS16BIT$/;"	d
SYSTEMDSN_ONLY	/usr/include/odbcinst.h	/^#define SYSTEMDSN_ONLY /;"	d
SYS_ODBCINST_INI	/usr/include/odbcinst.h	/^#      define SYS_ODBCINST_INI /;"	d
SYS_ODBCINST_INI	/usr/include/odbcinst.h	/^#    define SYS_ODBCINST_INI	/;"	d
SYS_ODBC_INI	/usr/include/odbcinst.h	/^#      define SYS_ODBC_INI /;"	d
SYS_ODBC_INI	/usr/include/odbcinst.h	/^#    define SYS_ODBC_INI	/;"	d
Seqorset	/usr/include/lber.h	/^typedef struct seqorset Seqorset;$/;"	t	typeref:struct:seqorset
Slapi_Attr	/usr/include/slapi-plugin.h	/^typedef struct slapi_attr		Slapi_Attr;$/;"	t	typeref:struct:slapi_attr
Slapi_Backend	/usr/include/slapi-plugin.h	/^typedef struct BackendDB		Slapi_Backend;$/;"	t	typeref:struct:BackendDB
Slapi_ComponentId	/usr/include/slapi-plugin.h	/^typedef struct slapi_componentid	Slapi_ComponentId;$/;"	t	typeref:struct:slapi_componentid
Slapi_CondVar	/usr/include/slapi-plugin.h	/^typedef struct slapi_condvar	Slapi_CondVar;$/;"	t	typeref:struct:slapi_condvar
Slapi_Connection	/usr/include/slapi-plugin.h	/^typedef struct Connection		Slapi_Connection;$/;"	t	typeref:struct:Connection
Slapi_DN	/usr/include/slapi-plugin.h	/^typedef struct slapi_dn			Slapi_DN;$/;"	t	typeref:struct:slapi_dn
Slapi_Entry	/usr/include/slapi-plugin.h	/^typedef struct slapi_entry		Slapi_Entry;$/;"	t	typeref:struct:slapi_entry
Slapi_Filter	/usr/include/slapi-plugin.h	/^typedef struct slapi_filter		Slapi_Filter;$/;"	t	typeref:struct:slapi_filter
Slapi_Mod	/usr/include/slapi-plugin.h	/^typedef struct slapi_mod		Slapi_Mod;$/;"	t	typeref:struct:slapi_mod
Slapi_Mods	/usr/include/slapi-plugin.h	/^typedef struct slapi_mods		Slapi_Mods;$/;"	t	typeref:struct:slapi_mods
Slapi_Mutex	/usr/include/slapi-plugin.h	/^typedef struct slapi_mutex	Slapi_Mutex;$/;"	t	typeref:struct:slapi_mutex
Slapi_Operation	/usr/include/slapi-plugin.h	/^typedef struct Operation		Slapi_Operation;$/;"	t	typeref:struct:Operation
Slapi_PBlock	/usr/include/slapi-plugin.h	/^typedef struct slapi_pblock		Slapi_PBlock;$/;"	t	typeref:struct:slapi_pblock
Slapi_PluginDesc	/usr/include/slapi-plugin.h	/^} Slapi_PluginDesc;$/;"	t	typeref:struct:slapi_plugindesc
Slapi_RDN	/usr/include/slapi-plugin.h	/^typedef struct slapi_rdn		Slapi_RDN;$/;"	t	typeref:struct:slapi_rdn
Slapi_Value	/usr/include/slapi-plugin.h	/^typedef struct slapi_value		Slapi_Value;$/;"	t	typeref:struct:slapi_value
Slapi_ValueSet	/usr/include/slapi-plugin.h	/^typedef struct slapi_valueset		Slapi_ValueSet;$/;"	t	typeref:struct:slapi_valueset
Sockbuf	/usr/include/lber.h	/^typedef struct sockbuf Sockbuf;$/;"	t	typeref:struct:sockbuf
Sockbuf_IO	/usr/include/lber.h	/^typedef struct sockbuf_io Sockbuf_IO;$/;"	t	typeref:struct:sockbuf_io
Sockbuf_IO_Desc	/usr/include/lber.h	/^} Sockbuf_IO_Desc;$/;"	t	typeref:struct:sockbuf_io_desc
StringList	/usr/include/stringlist.h	/^} StringList;$/;"	t	typeref:struct:_stringlist
Strings	/usr/include/term.h	/^    char  **Strings;		\/* array of string offsets *\/$/;"	m	struct:termtype	access:public
TARGET_CPU_68K	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_68K /;"	d
TARGET_CPU_ALPHA	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_ALPHA /;"	d
TARGET_CPU_ARM	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_ARM /;"	d
TARGET_CPU_MIPS	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_MIPS /;"	d
TARGET_CPU_PPC	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_PPC /;"	d
TARGET_CPU_PPC	/usr/include/TargetConfig.h	/^#    define TARGET_CPU_PPC /;"	d
TARGET_CPU_PPC64	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_PPC64 /;"	d
TARGET_CPU_SPARC	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_SPARC /;"	d
TARGET_CPU_X86	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_X86 /;"	d
TARGET_CPU_X86	/usr/include/TargetConfig.h	/^#    define TARGET_CPU_X86 /;"	d
TARGET_CPU_X86_64	/usr/include/TargetConditionals.h	/^        #define TARGET_CPU_X86_64 /;"	d
TARGET_CPU_X86_64	/usr/include/TargetConfig.h	/^#    define TARGET_CPU_X86_64 /;"	d
TARGET_HAVE_IPV6	/usr/include/TargetConfig.h	/^#  define TARGET_HAVE_IPV6 /;"	d
TARGET_HAVE_PPP	/usr/include/TargetConfig.h	/^#  define TARGET_HAVE_PPP /;"	d
TARGET_HAVE_QUARANTINE	/usr/include/TargetConfig.h	/^#  define TARGET_HAVE_QUARANTINE /;"	d
TARGET_HAVE_SANDBOX	/usr/include/TargetConfig.h	/^#  define TARGET_HAVE_SANDBOX /;"	d
TARGET_IPHONE_SIMULATOR	/usr/include/TargetConditionals.h	/^    #define TARGET_IPHONE_SIMULATOR /;"	d
TARGET_OS_EMBEDDED	/usr/include/TargetConditionals.h	/^    #define TARGET_OS_EMBEDDED /;"	d
TARGET_OS_IPHONE	/usr/include/TargetConditionals.h	/^    #define TARGET_OS_IPHONE /;"	d
TARGET_OS_MAC	/usr/include/TargetConditionals.h	/^    #define TARGET_OS_MAC /;"	d
TARGET_OS_MAC	/usr/include/TargetConfig.h	/^#  define TARGET_OS_MAC /;"	d
TARGET_OS_UNIX	/usr/include/TargetConditionals.h	/^    #define TARGET_OS_UNIX /;"	d
TARGET_OS_WIN32	/usr/include/TargetConditionals.h	/^    #define TARGET_OS_WIN32 /;"	d
TARGET_RT_64_BIT	/usr/include/TargetConditionals.h	/^        #define TARGET_RT_64_BIT /;"	d
TARGET_RT_64_BIT	/usr/include/TargetConditionals.h	/^    #define TARGET_RT_64_BIT /;"	d
TARGET_RT_64_BIT	/usr/include/TargetConfig.h	/^#    define TARGET_RT_64_BIT /;"	d
TARGET_RT_BIG_ENDIAN	/usr/include/TargetConditionals.h	/^        #define TARGET_RT_BIG_ENDIAN /;"	d
TARGET_RT_BIG_ENDIAN	/usr/include/TargetConfig.h	/^#    define TARGET_RT_BIG_ENDIAN /;"	d
TARGET_RT_LITTLE_ENDIAN	/usr/include/TargetConditionals.h	/^        #define TARGET_RT_LITTLE_ENDIAN /;"	d
TARGET_RT_LITTLE_ENDIAN	/usr/include/TargetConfig.h	/^#    define TARGET_RT_LITTLE_ENDIAN /;"	d
TARGET_RT_MAC_CFM	/usr/include/TargetConditionals.h	/^           #define TARGET_RT_MAC_CFM /;"	d
TARGET_RT_MAC_CFM	/usr/include/TargetConditionals.h	/^        #define TARGET_RT_MAC_CFM /;"	d
TARGET_RT_MAC_MACHO	/usr/include/TargetConditionals.h	/^           #define TARGET_RT_MAC_MACHO /;"	d
TARGET_RT_MAC_MACHO	/usr/include/TargetConditionals.h	/^        #define TARGET_RT_MAC_MACHO /;"	d
TARGET_RT_MAC_MACHO	/usr/include/TargetConfig.h	/^#  define TARGET_RT_MAC_MACHO /;"	d
TCHAR	/usr/include/tclPlatDecls.h	/^	typedef _TCHAR TCHAR;$/;"	t
TCHAR	/usr/include/tclPlatDecls.h	/^        typedef _TCHAR TCHAR;$/;"	t
TCHAR	/usr/include/tclPlatDecls.h	/^    typedef char TCHAR;$/;"	t
TCLTOMMATH_EPOCH	/usr/include/tclTomMathDecls.h	/^#define TCLTOMMATH_EPOCH /;"	d
TCLTOMMATH_REVISION	/usr/include/tclTomMathDecls.h	/^#define TCLTOMMATH_REVISION /;"	d
TCL_ALLOW_INLINE_COMPILATION	/usr/include/tcl.h	/^#define TCL_ALLOW_INLINE_COMPILATION /;"	d
TCL_ALL_EVENTS	/usr/include/tcl.h	/^#define TCL_ALL_EVENTS	/;"	d
TCL_ALPHA_RELEASE	/usr/include/tcl.h	/^#define TCL_ALPHA_RELEASE	/;"	d
TCL_APPEND_VALUE	/usr/include/tcl.h	/^#define TCL_APPEND_VALUE	/;"	d
TCL_BETA_RELEASE	/usr/include/tcl.h	/^#define TCL_BETA_RELEASE	/;"	d
TCL_BREAK	/usr/include/tcl.h	/^#define TCL_BREAK	/;"	d
TCL_CFG_DO64BIT	/usr/include/tcl.h	/^#	define TCL_CFG_DO64BIT /;"	d
TCL_CFG_DO64BIT	/usr/include/tcl.h	/^#	undef TCL_CFG_DO64BIT$/;"	d
TCL_CHANNEL_THREAD_INSERT	/usr/include/tcl.h	/^#define TCL_CHANNEL_THREAD_INSERT /;"	d
TCL_CHANNEL_THREAD_REMOVE	/usr/include/tcl.h	/^#define TCL_CHANNEL_THREAD_REMOVE /;"	d
TCL_CHANNEL_VERSION_1	/usr/include/tcl.h	/^#define TCL_CHANNEL_VERSION_1	/;"	d
TCL_CHANNEL_VERSION_2	/usr/include/tcl.h	/^#define TCL_CHANNEL_VERSION_2	/;"	d
TCL_CHANNEL_VERSION_3	/usr/include/tcl.h	/^#define TCL_CHANNEL_VERSION_3	/;"	d
TCL_CHANNEL_VERSION_4	/usr/include/tcl.h	/^#define TCL_CHANNEL_VERSION_4	/;"	d
TCL_CHANNEL_VERSION_5	/usr/include/tcl.h	/^#define TCL_CHANNEL_VERSION_5	/;"	d
TCL_CLOSE2PROC	/usr/include/tcl.h	/^#define TCL_CLOSE2PROC	/;"	d
TCL_CLOSE_READ	/usr/include/tcl.h	/^#define TCL_CLOSE_READ	/;"	d
TCL_CLOSE_WRITE	/usr/include/tcl.h	/^#define TCL_CLOSE_WRITE	/;"	d
TCL_CONTINUE	/usr/include/tcl.h	/^#define TCL_CONTINUE	/;"	d
TCL_CONVERT_MULTIBYTE	/usr/include/tcl.h	/^#define TCL_CONVERT_MULTIBYTE	/;"	d
TCL_CONVERT_NOSPACE	/usr/include/tcl.h	/^#define TCL_CONVERT_NOSPACE	/;"	d
TCL_CONVERT_SYNTAX	/usr/include/tcl.h	/^#define TCL_CONVERT_SYNTAX	/;"	d
TCL_CONVERT_UNKNOWN	/usr/include/tcl.h	/^#define TCL_CONVERT_UNKNOWN	/;"	d
TCL_CREATE_HARD_LINK	/usr/include/tcl.h	/^#define TCL_CREATE_HARD_LINK	/;"	d
TCL_CREATE_SYMBOLIC_LINK	/usr/include/tcl.h	/^#define TCL_CREATE_SYMBOLIC_LINK	/;"	d
TCL_CUSTOM_PTR_KEYS	/usr/include/tcl.h	/^#define TCL_CUSTOM_PTR_KEYS	/;"	d
TCL_CUSTOM_TYPE_KEYS	/usr/include/tcl.h	/^#define TCL_CUSTOM_TYPE_KEYS	/;"	d
TCL_DECLARE_MUTEX	/usr/include/tcl.h	/^#define TCL_DECLARE_MUTEX(/;"	d
TCL_DONT_QUOTE_HASH	/usr/include/tcl.h	/^#define TCL_DONT_QUOTE_HASH	/;"	d
TCL_DONT_USE_BRACES	/usr/include/tcl.h	/^#define TCL_DONT_USE_BRACES	/;"	d
TCL_DONT_WAIT	/usr/include/tcl.h	/^#define TCL_DONT_WAIT	/;"	d
TCL_DOUBLE	/usr/include/tcl.h	/^    TCL_INT, TCL_DOUBLE, TCL_EITHER, TCL_WIDE_INT$/;"	e	enum:__anon113
TCL_DOUBLE_SPACE	/usr/include/tcl.h	/^#define TCL_DOUBLE_SPACE /;"	d
TCL_DSTRING_STATIC_SIZE	/usr/include/tcl.h	/^#define TCL_DSTRING_STATIC_SIZE /;"	d
TCL_DYNAMIC	/usr/include/tcl.h	/^#define TCL_DYNAMIC	/;"	d
TCL_EITHER	/usr/include/tcl.h	/^    TCL_INT, TCL_DOUBLE, TCL_EITHER, TCL_WIDE_INT$/;"	e	enum:__anon113
TCL_ENCODING_END	/usr/include/tcl.h	/^#define TCL_ENCODING_END	/;"	d
TCL_ENCODING_START	/usr/include/tcl.h	/^#define TCL_ENCODING_START	/;"	d
TCL_ENCODING_STOPONERROR	/usr/include/tcl.h	/^#define TCL_ENCODING_STOPONERROR	/;"	d
TCL_ENFORCE_MODE	/usr/include/tcl.h	/^#define TCL_ENFORCE_MODE	/;"	d
TCL_ENSEMBLE_PREFIX	/usr/include/tcl.h	/^#define TCL_ENSEMBLE_PREFIX /;"	d
TCL_ERROR	/usr/include/tcl.h	/^#define TCL_ERROR	/;"	d
TCL_EVAL_DIRECT	/usr/include/tcl.h	/^#define TCL_EVAL_DIRECT	/;"	d
TCL_EVAL_GLOBAL	/usr/include/tcl.h	/^#define TCL_EVAL_GLOBAL	/;"	d
TCL_EVAL_INVOKE	/usr/include/tcl.h	/^#define TCL_EVAL_INVOKE	/;"	d
TCL_EXACT	/usr/include/tcl.h	/^#define TCL_EXACT	/;"	d
TCL_EXCEPTION	/usr/include/tcl.h	/^#define TCL_EXCEPTION	/;"	d
TCL_FILESYSTEM_VERSION_1	/usr/include/tcl.h	/^#define TCL_FILESYSTEM_VERSION_1	/;"	d
TCL_FILE_EVENTS	/usr/include/tcl.h	/^#define TCL_FILE_EVENTS	/;"	d
TCL_FINAL_RELEASE	/usr/include/tcl.h	/^#define TCL_FINAL_RELEASE	/;"	d
TCL_GLOBAL_ONLY	/usr/include/tcl.h	/^#define TCL_GLOBAL_ONLY	/;"	d
TCL_GLOB_PERM_HIDDEN	/usr/include/tcl.h	/^#define TCL_GLOB_PERM_HIDDEN	/;"	d
TCL_GLOB_PERM_R	/usr/include/tcl.h	/^#define TCL_GLOB_PERM_R	/;"	d
TCL_GLOB_PERM_RONLY	/usr/include/tcl.h	/^#define TCL_GLOB_PERM_RONLY	/;"	d
TCL_GLOB_PERM_W	/usr/include/tcl.h	/^#define TCL_GLOB_PERM_W	/;"	d
TCL_GLOB_PERM_X	/usr/include/tcl.h	/^#define TCL_GLOB_PERM_X	/;"	d
TCL_GLOB_TYPE_BLOCK	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_BLOCK	/;"	d
TCL_GLOB_TYPE_CHAR	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_CHAR	/;"	d
TCL_GLOB_TYPE_DIR	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_DIR	/;"	d
TCL_GLOB_TYPE_FILE	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_FILE	/;"	d
TCL_GLOB_TYPE_LINK	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_LINK	/;"	d
TCL_GLOB_TYPE_MOUNT	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_MOUNT	/;"	d
TCL_GLOB_TYPE_PIPE	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_PIPE	/;"	d
TCL_GLOB_TYPE_SOCK	/usr/include/tcl.h	/^#define TCL_GLOB_TYPE_SOCK	/;"	d
TCL_HASH_KEY_RANDOMIZE_HASH	/usr/include/tcl.h	/^#define TCL_HASH_KEY_RANDOMIZE_HASH /;"	d
TCL_HASH_KEY_STORE_HASH	/usr/include/tcl.h	/^#   define TCL_HASH_KEY_STORE_HASH /;"	d
TCL_HASH_KEY_SYSTEM_HASH	/usr/include/tcl.h	/^#define TCL_HASH_KEY_SYSTEM_HASH /;"	d
TCL_HASH_KEY_TYPE_VERSION	/usr/include/tcl.h	/^#define TCL_HASH_KEY_TYPE_VERSION /;"	d
TCL_IDLE_EVENTS	/usr/include/tcl.h	/^#define TCL_IDLE_EVENTS	/;"	d
TCL_INT	/usr/include/tcl.h	/^    TCL_INT, TCL_DOUBLE, TCL_EITHER, TCL_WIDE_INT$/;"	e	enum:__anon113
TCL_INTEGER_SPACE	/usr/include/tcl.h	/^#define TCL_INTEGER_SPACE	/;"	d
TCL_INTERP_DESTROYED	/usr/include/tcl.h	/^#define TCL_INTERP_DESTROYED	/;"	d
TCL_LEAVE_ERR_MSG	/usr/include/tcl.h	/^#define TCL_LEAVE_ERR_MSG	/;"	d
TCL_LIMIT_COMMANDS	/usr/include/tcl.h	/^#define TCL_LIMIT_COMMANDS	/;"	d
TCL_LIMIT_TIME	/usr/include/tcl.h	/^#define TCL_LIMIT_TIME	/;"	d
TCL_LINK_BOOLEAN	/usr/include/tcl.h	/^#define TCL_LINK_BOOLEAN	/;"	d
TCL_LINK_CHAR	/usr/include/tcl.h	/^#define TCL_LINK_CHAR	/;"	d
TCL_LINK_DOUBLE	/usr/include/tcl.h	/^#define TCL_LINK_DOUBLE	/;"	d
TCL_LINK_FLOAT	/usr/include/tcl.h	/^#define TCL_LINK_FLOAT	/;"	d
TCL_LINK_INT	/usr/include/tcl.h	/^#define TCL_LINK_INT	/;"	d
TCL_LINK_LONG	/usr/include/tcl.h	/^#define TCL_LINK_LONG	/;"	d
TCL_LINK_READ_ONLY	/usr/include/tcl.h	/^#define TCL_LINK_READ_ONLY	/;"	d
TCL_LINK_SHORT	/usr/include/tcl.h	/^#define TCL_LINK_SHORT	/;"	d
TCL_LINK_STRING	/usr/include/tcl.h	/^#define TCL_LINK_STRING	/;"	d
TCL_LINK_UCHAR	/usr/include/tcl.h	/^#define TCL_LINK_UCHAR	/;"	d
TCL_LINK_UINT	/usr/include/tcl.h	/^#define TCL_LINK_UINT	/;"	d
TCL_LINK_ULONG	/usr/include/tcl.h	/^#define TCL_LINK_ULONG	/;"	d
TCL_LINK_USHORT	/usr/include/tcl.h	/^#define TCL_LINK_USHORT	/;"	d
TCL_LINK_WIDE_INT	/usr/include/tcl.h	/^#define TCL_LINK_WIDE_INT	/;"	d
TCL_LINK_WIDE_UINT	/usr/include/tcl.h	/^#define TCL_LINK_WIDE_UINT	/;"	d
TCL_LIST_ELEMENT	/usr/include/tcl.h	/^#define TCL_LIST_ELEMENT	/;"	d
TCL_LL_MODIFIER	/usr/include/tcl.h	/^#         define TCL_LL_MODIFIER	/;"	d
TCL_LL_MODIFIER	/usr/include/tcl.h	/^#         define TCL_LL_MODIFIER /;"	d
TCL_LL_MODIFIER	/usr/include/tcl.h	/^#      define TCL_LL_MODIFIER	/;"	d
TCL_MAJOR_VERSION	/usr/include/tcl.h	/^#define TCL_MAJOR_VERSION /;"	d
TCL_MATCH_NOCASE	/usr/include/tcl.h	/^#define TCL_MATCH_NOCASE	/;"	d
TCL_MAX_PREC	/usr/include/tcl.h	/^#define TCL_MAX_PREC /;"	d
TCL_MINOR_VERSION	/usr/include/tcl.h	/^#define TCL_MINOR_VERSION /;"	d
TCL_MODE_BLOCKING	/usr/include/tcl.h	/^#define TCL_MODE_BLOCKING	/;"	d
TCL_MODE_NONBLOCKING	/usr/include/tcl.h	/^#define TCL_MODE_NONBLOCKING	/;"	d
TCL_NAMESPACE_ONLY	/usr/include/tcl.h	/^#define TCL_NAMESPACE_ONLY	/;"	d
TCL_NO_EVAL	/usr/include/tcl.h	/^#define TCL_NO_EVAL	/;"	d
TCL_OK	/usr/include/tcl.h	/^#define TCL_OK	/;"	d
TCL_ONE_WORD_KEYS	/usr/include/tcl.h	/^#define TCL_ONE_WORD_KEYS	/;"	d
TCL_PARSE_BAD_NUMBER	/usr/include/tcl.h	/^#define TCL_PARSE_BAD_NUMBER	/;"	d
TCL_PARSE_BRACE_EXTRA	/usr/include/tcl.h	/^#define TCL_PARSE_BRACE_EXTRA	/;"	d
TCL_PARSE_MISSING_BRACE	/usr/include/tcl.h	/^#define TCL_PARSE_MISSING_BRACE	/;"	d
TCL_PARSE_MISSING_BRACKET	/usr/include/tcl.h	/^#define TCL_PARSE_MISSING_BRACKET	/;"	d
TCL_PARSE_MISSING_PAREN	/usr/include/tcl.h	/^#define TCL_PARSE_MISSING_PAREN	/;"	d
TCL_PARSE_MISSING_QUOTE	/usr/include/tcl.h	/^#define TCL_PARSE_MISSING_QUOTE	/;"	d
TCL_PARSE_MISSING_VAR_BRACE	/usr/include/tcl.h	/^#define TCL_PARSE_MISSING_VAR_BRACE	/;"	d
TCL_PARSE_PART1	/usr/include/tcl.h	/^#   define TCL_PARSE_PART1	/;"	d
TCL_PARSE_QUOTE_EXTRA	/usr/include/tcl.h	/^#define TCL_PARSE_QUOTE_EXTRA	/;"	d
TCL_PARSE_SUCCESS	/usr/include/tcl.h	/^#define TCL_PARSE_SUCCESS	/;"	d
TCL_PARSE_SYNTAX	/usr/include/tcl.h	/^#define TCL_PARSE_SYNTAX	/;"	d
TCL_PATCH_LEVEL	/usr/include/tcl.h	/^#define TCL_PATCH_LEVEL	/;"	d
TCL_PATH_ABSOLUTE	/usr/include/tcl.h	/^    TCL_PATH_ABSOLUTE,$/;"	e	enum:Tcl_PathType
TCL_PATH_RELATIVE	/usr/include/tcl.h	/^    TCL_PATH_RELATIVE,$/;"	e	enum:Tcl_PathType
TCL_PATH_VOLUME_RELATIVE	/usr/include/tcl.h	/^    TCL_PATH_VOLUME_RELATIVE$/;"	e	enum:Tcl_PathType
TCL_QUEUE_HEAD	/usr/include/tcl.h	/^    TCL_QUEUE_TAIL, TCL_QUEUE_HEAD, TCL_QUEUE_MARK$/;"	e	enum:__anon119
TCL_QUEUE_MARK	/usr/include/tcl.h	/^    TCL_QUEUE_TAIL, TCL_QUEUE_HEAD, TCL_QUEUE_MARK$/;"	e	enum:__anon119
TCL_QUEUE_TAIL	/usr/include/tcl.h	/^    TCL_QUEUE_TAIL, TCL_QUEUE_HEAD, TCL_QUEUE_MARK$/;"	e	enum:__anon119
TCL_READABLE	/usr/include/tcl.h	/^#define TCL_READABLE	/;"	d
TCL_REG_ADVANCED	/usr/include/tcl.h	/^#define	TCL_REG_ADVANCED	/;"	d
TCL_REG_ADVF	/usr/include/tcl.h	/^#define	TCL_REG_ADVF	/;"	d
TCL_REG_BASIC	/usr/include/tcl.h	/^#define	TCL_REG_BASIC	/;"	d
TCL_REG_CANMATCH	/usr/include/tcl.h	/^#define	TCL_REG_CANMATCH	/;"	d
TCL_REG_EXPANDED	/usr/include/tcl.h	/^#define	TCL_REG_EXPANDED	/;"	d
TCL_REG_EXTENDED	/usr/include/tcl.h	/^#define	TCL_REG_EXTENDED	/;"	d
TCL_REG_NEWLINE	/usr/include/tcl.h	/^#define	TCL_REG_NEWLINE	/;"	d
TCL_REG_NLANCH	/usr/include/tcl.h	/^#define	TCL_REG_NLANCH	/;"	d
TCL_REG_NLSTOP	/usr/include/tcl.h	/^#define	TCL_REG_NLSTOP	/;"	d
TCL_REG_NOCASE	/usr/include/tcl.h	/^#define	TCL_REG_NOCASE	/;"	d
TCL_REG_NOSUB	/usr/include/tcl.h	/^#define	TCL_REG_NOSUB	/;"	d
TCL_REG_NOTBOL	/usr/include/tcl.h	/^#define	TCL_REG_NOTBOL	/;"	d
TCL_REG_NOTEOL	/usr/include/tcl.h	/^#define	TCL_REG_NOTEOL	/;"	d
TCL_REG_QUOTE	/usr/include/tcl.h	/^#define	TCL_REG_QUOTE	/;"	d
TCL_RELEASE_LEVEL	/usr/include/tcl.h	/^#define TCL_RELEASE_LEVEL /;"	d
TCL_RELEASE_SERIAL	/usr/include/tcl.h	/^#define TCL_RELEASE_SERIAL /;"	d
TCL_RESULT_SIZE	/usr/include/tcl.h	/^#define TCL_RESULT_SIZE /;"	d
TCL_RETURN	/usr/include/tcl.h	/^#define TCL_RETURN	/;"	d
TCL_SERVICE_ALL	/usr/include/tcl.h	/^#define TCL_SERVICE_ALL /;"	d
TCL_SERVICE_NONE	/usr/include/tcl.h	/^#define TCL_SERVICE_NONE /;"	d
TCL_SMALL_HASH_TABLE	/usr/include/tcl.h	/^#define TCL_SMALL_HASH_TABLE /;"	d
TCL_STATIC	/usr/include/tcl.h	/^#define TCL_STATIC	/;"	d
TCL_STDERR	/usr/include/tcl.h	/^#define TCL_STDERR	/;"	d
TCL_STDIN	/usr/include/tcl.h	/^#define TCL_STDIN	/;"	d
TCL_STDOUT	/usr/include/tcl.h	/^#define TCL_STDOUT	/;"	d
TCL_STORAGE_CLASS	/usr/include/tcl.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tcl.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tcl.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tcl.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tcl.h	/^#define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tcl.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tclDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tclDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclDecls.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tclPlatDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclPlatDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tclPlatDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclPlatDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclPlatDecls.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tclTomMathDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclTomMathDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tclTomMathDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclTomMathDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tclTomMathDecls.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tk.h	/^# define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tk.h	/^# undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tk.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tk.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tkDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tkDecls.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tkIntXlibDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tkIntXlibDecls.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	/usr/include/tkPlatDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	/usr/include/tkPlatDecls.h	/^#undef TCL_STORAGE_CLASS$/;"	d
TCL_STRING_KEYS	/usr/include/tcl.h	/^#define TCL_STRING_KEYS	/;"	d
TCL_STUB_MAGIC	/usr/include/tcl.h	/^#define TCL_STUB_MAGIC /;"	d
TCL_SUBST_ALL	/usr/include/tcl.h	/^#define TCL_SUBST_ALL	/;"	d
TCL_SUBST_BACKSLASHES	/usr/include/tcl.h	/^#define TCL_SUBST_BACKSLASHES	/;"	d
TCL_SUBST_COMMANDS	/usr/include/tcl.h	/^#define TCL_SUBST_COMMANDS	/;"	d
TCL_SUBST_VARIABLES	/usr/include/tcl.h	/^#define TCL_SUBST_VARIABLES	/;"	d
TCL_THREAD_CREATE_RETURN	/usr/include/tcl.h	/^#   define TCL_THREAD_CREATE_RETURN	/;"	d
TCL_THREAD_CREATE_RETURN	/usr/include/tcl.h	/^#   define TCL_THREAD_CREATE_RETURN$/;"	d
TCL_THREAD_JOINABLE	/usr/include/tcl.h	/^#define TCL_THREAD_JOINABLE	/;"	d
TCL_THREAD_NOFLAGS	/usr/include/tcl.h	/^#define TCL_THREAD_NOFLAGS	/;"	d
TCL_THREAD_STACK_DEFAULT	/usr/include/tcl.h	/^#define TCL_THREAD_STACK_DEFAULT /;"	d
TCL_TIMER_EVENTS	/usr/include/tcl.h	/^#define TCL_TIMER_EVENTS	/;"	d
TCL_TOKEN_BS	/usr/include/tcl.h	/^#define TCL_TOKEN_BS	/;"	d
TCL_TOKEN_COMMAND	/usr/include/tcl.h	/^#define TCL_TOKEN_COMMAND	/;"	d
TCL_TOKEN_EXPAND_WORD	/usr/include/tcl.h	/^#define TCL_TOKEN_EXPAND_WORD	/;"	d
TCL_TOKEN_OPERATOR	/usr/include/tcl.h	/^#define TCL_TOKEN_OPERATOR	/;"	d
TCL_TOKEN_SIMPLE_WORD	/usr/include/tcl.h	/^#define TCL_TOKEN_SIMPLE_WORD	/;"	d
TCL_TOKEN_SUB_EXPR	/usr/include/tcl.h	/^#define TCL_TOKEN_SUB_EXPR	/;"	d
TCL_TOKEN_TEXT	/usr/include/tcl.h	/^#define TCL_TOKEN_TEXT	/;"	d
TCL_TOKEN_VARIABLE	/usr/include/tcl.h	/^#define TCL_TOKEN_VARIABLE	/;"	d
TCL_TOKEN_WORD	/usr/include/tcl.h	/^#define TCL_TOKEN_WORD	/;"	d
TCL_TRACE_ARRAY	/usr/include/tcl.h	/^#define TCL_TRACE_ARRAY	/;"	d
TCL_TRACE_DELETE	/usr/include/tcl.h	/^#define TCL_TRACE_DELETE /;"	d
TCL_TRACE_DESTROYED	/usr/include/tcl.h	/^#define TCL_TRACE_DESTROYED	/;"	d
TCL_TRACE_OLD_STYLE	/usr/include/tcl.h	/^#define TCL_TRACE_OLD_STYLE	/;"	d
TCL_TRACE_READS	/usr/include/tcl.h	/^#define TCL_TRACE_READS	/;"	d
TCL_TRACE_RENAME	/usr/include/tcl.h	/^#define TCL_TRACE_RENAME /;"	d
TCL_TRACE_RESULT_DYNAMIC	/usr/include/tcl.h	/^#define TCL_TRACE_RESULT_DYNAMIC /;"	d
TCL_TRACE_RESULT_OBJECT	/usr/include/tcl.h	/^#define TCL_TRACE_RESULT_OBJECT /;"	d
TCL_TRACE_UNSETS	/usr/include/tcl.h	/^#define TCL_TRACE_UNSETS	/;"	d
TCL_TRACE_WRITES	/usr/include/tcl.h	/^#define TCL_TRACE_WRITES	/;"	d
TCL_UNLOAD_DETACH_FROM_INTERPRETER	/usr/include/tcl.h	/^#define TCL_UNLOAD_DETACH_FROM_INTERPRETER	/;"	d
TCL_UNLOAD_DETACH_FROM_PROCESS	/usr/include/tcl.h	/^#define TCL_UNLOAD_DETACH_FROM_PROCESS	/;"	d
TCL_UTF_MAX	/usr/include/tcl.h	/^#define TCL_UTF_MAX	/;"	d
TCL_VARARGS	/usr/include/tcl.h	/^#    define TCL_VARARGS(/;"	d
TCL_VARARGS_DEF	/usr/include/tcl.h	/^#    define TCL_VARARGS_DEF(/;"	d
TCL_VARARGS_START	/usr/include/tcl.h	/^#    define TCL_VARARGS_START(/;"	d
TCL_VERSION	/usr/include/tcl.h	/^#define TCL_VERSION	/;"	d
TCL_VOLATILE	/usr/include/tcl.h	/^#define TCL_VOLATILE	/;"	d
TCL_WIDE_INT	/usr/include/tcl.h	/^    TCL_INT, TCL_DOUBLE, TCL_EITHER, TCL_WIDE_INT$/;"	e	enum:__anon113
TCL_WIDE_INT_IS_LONG	/usr/include/tcl.h	/^#	     define TCL_WIDE_INT_IS_LONG	/;"	d
TCL_WIDE_INT_IS_LONG	/usr/include/tcl.h	/^#	define TCL_WIDE_INT_IS_LONG /;"	d
TCL_WIDE_INT_IS_LONG	/usr/include/tcl.h	/^#	undef TCL_WIDE_INT_IS_LONG$/;"	d
TCL_WIDE_INT_TYPE	/usr/include/tcl.h	/^#	     define TCL_WIDE_INT_TYPE /;"	d
TCL_WIDE_INT_TYPE	/usr/include/tcl.h	/^#	define TCL_WIDE_INT_TYPE /;"	d
TCL_WIDE_INT_TYPE	/usr/include/tcl.h	/^#	undef TCL_WIDE_INT_TYPE$/;"	d
TCL_WIDE_INT_TYPE	/usr/include/tcl.h	/^#      define TCL_WIDE_INT_TYPE /;"	d
TCL_WIDE_INT_TYPE	/usr/include/tcl.h	/^#   define TCL_WIDE_INT_TYPE	/;"	d
TCL_WIDE_INT_TYPE	/usr/include/tcl.h	/^#   undef TCL_WIDE_INT_TYPE$/;"	d
TCL_WINDOW_EVENTS	/usr/include/tcl.h	/^#define TCL_WINDOW_EVENTS	/;"	d
TCL_WRITABLE	/usr/include/tcl.h	/^#define TCL_WRITABLE	/;"	d
TERMINAL	/usr/include/term.h	/^} TERMINAL;$/;"	t	typeref:struct:term
TERMINFO	/usr/include/tic.h	/^#define TERMINFO /;"	d
TERMIOS	/usr/include/term.h	/^#define TERMIOS /;"	d
TERMIOS	/usr/include/term.h	/^#undef  TERMIOS$/;"	d
TERMIOS	/usr/include/term.h	/^#undef TERMIOS$/;"	d
TERMTYPE	/usr/include/term.h	/^} TERMTYPE;$/;"	t	typeref:struct:termtype
TEXT	/usr/include/menu.h	/^#define TEXT /;"	d
TEXT	/usr/include/menu.h	/^} TEXT;$/;"	t	typeref:struct:__anon76
TGEXEC	/usr/include/tar.h	/^#define	TGEXEC	/;"	d
TGREAD	/usr/include/tar.h	/^#define	TGREAD	/;"	d
TGWRITE	/usr/include/tar.h	/^#define	TGWRITE	/;"	d
THOUSEP	/usr/include/langinfo.h	/^#define	THOUSEP	/;"	d
TIMESTAMP_STRUCT	/usr/include/sqltypes.h	/^TIMESTAMP_STRUCT;$/;"	t	typeref:struct:tagTIMESTAMP_STRUCT
TIME_STRUCT	/usr/include/sqltypes.h	/^TIME_STRUCT;$/;"	t	typeref:struct:tagTIME_STRUCT
TK_3D_DARK_GC	/usr/include/tk.h	/^#define TK_3D_DARK_GC	/;"	d
TK_3D_FLAT_GC	/usr/include/tk.h	/^#define TK_3D_FLAT_GC	/;"	d
TK_3D_LIGHT_GC	/usr/include/tk.h	/^#define TK_3D_LIGHT_GC	/;"	d
TK_ALL_EVENTS	/usr/include/tk.h	/^#define TK_ALL_EVENTS	/;"	d
TK_ALREADY_DEAD	/usr/include/tk.h	/^#define TK_ALREADY_DEAD	/;"	d
TK_ANCHOR_CENTER	/usr/include/tk.h	/^    TK_ANCHOR_CENTER$/;"	e	enum:__anon127
TK_ANCHOR_E	/usr/include/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon127
TK_ANCHOR_N	/usr/include/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon127
TK_ANCHOR_NE	/usr/include/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon127
TK_ANCHOR_NW	/usr/include/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon127
TK_ANCHOR_S	/usr/include/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon127
TK_ANCHOR_SE	/usr/include/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon127
TK_ANCHOR_SW	/usr/include/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon127
TK_ANCHOR_W	/usr/include/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon127
TK_ANONYMOUS_WINDOW	/usr/include/tk.h	/^#define TK_ANONYMOUS_WINDOW	/;"	d
TK_ARGV_CONSTANT	/usr/include/tk.h	/^#define TK_ARGV_CONSTANT	/;"	d
TK_ARGV_CONST_OPTION	/usr/include/tk.h	/^#define TK_ARGV_CONST_OPTION	/;"	d
TK_ARGV_DONT_SKIP_FIRST_ARG	/usr/include/tk.h	/^#define TK_ARGV_DONT_SKIP_FIRST_ARG	/;"	d
TK_ARGV_END	/usr/include/tk.h	/^#define TK_ARGV_END	/;"	d
TK_ARGV_FLOAT	/usr/include/tk.h	/^#define TK_ARGV_FLOAT	/;"	d
TK_ARGV_FUNC	/usr/include/tk.h	/^#define TK_ARGV_FUNC	/;"	d
TK_ARGV_GENFUNC	/usr/include/tk.h	/^#define TK_ARGV_GENFUNC	/;"	d
TK_ARGV_HELP	/usr/include/tk.h	/^#define TK_ARGV_HELP	/;"	d
TK_ARGV_INT	/usr/include/tk.h	/^#define TK_ARGV_INT	/;"	d
TK_ARGV_NO_ABBREV	/usr/include/tk.h	/^#define TK_ARGV_NO_ABBREV	/;"	d
TK_ARGV_NO_DEFAULTS	/usr/include/tk.h	/^#define TK_ARGV_NO_DEFAULTS	/;"	d
TK_ARGV_NO_LEFTOVERS	/usr/include/tk.h	/^#define TK_ARGV_NO_LEFTOVERS	/;"	d
TK_ARGV_OPTION_NAME_VALUE	/usr/include/tk.h	/^#define TK_ARGV_OPTION_NAME_VALUE	/;"	d
TK_ARGV_OPTION_VALUE	/usr/include/tk.h	/^#define TK_ARGV_OPTION_VALUE	/;"	d
TK_ARGV_REST	/usr/include/tk.h	/^#define TK_ARGV_REST	/;"	d
TK_ARGV_STRING	/usr/include/tk.h	/^#define TK_ARGV_STRING	/;"	d
TK_ARGV_UID	/usr/include/tk.h	/^#define TK_ARGV_UID	/;"	d
TK_AT_LEAST_ONE	/usr/include/tk.h	/^#define TK_AT_LEAST_ONE	/;"	d
TK_BOTH_HALVES	/usr/include/tk.h	/^#define TK_BOTH_HALVES	/;"	d
TK_CHECKED_IC	/usr/include/tk.h	/^#define TK_CHECKED_IC	/;"	d
TK_CONFIG_ACTIVE_CURSOR	/usr/include/tk.h	/^    TK_CONFIG_ACTIVE_CURSOR, TK_CONFIG_JUSTIFY, TK_CONFIG_ANCHOR,$/;"	e	enum:__anon124
TK_CONFIG_ANCHOR	/usr/include/tk.h	/^    TK_CONFIG_ACTIVE_CURSOR, TK_CONFIG_JUSTIFY, TK_CONFIG_ANCHOR,$/;"	e	enum:__anon124
TK_CONFIG_ARGV_ONLY	/usr/include/tk.h	/^#define TK_CONFIG_ARGV_ONLY	/;"	d
TK_CONFIG_BITMAP	/usr/include/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon124
TK_CONFIG_BOOLEAN	/usr/include/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon124
TK_CONFIG_BORDER	/usr/include/tk.h	/^    TK_CONFIG_BORDER, TK_CONFIG_RELIEF, TK_CONFIG_CURSOR,$/;"	e	enum:__anon124
TK_CONFIG_CAP_STYLE	/usr/include/tk.h	/^    TK_CONFIG_SYNONYM, TK_CONFIG_CAP_STYLE, TK_CONFIG_JOIN_STYLE,$/;"	e	enum:__anon124
TK_CONFIG_COLOR	/usr/include/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon124
TK_CONFIG_COLOR_ONLY	/usr/include/tk.h	/^#define TK_CONFIG_COLOR_ONLY	/;"	d
TK_CONFIG_CURSOR	/usr/include/tk.h	/^    TK_CONFIG_BORDER, TK_CONFIG_RELIEF, TK_CONFIG_CURSOR,$/;"	e	enum:__anon124
TK_CONFIG_CUSTOM	/usr/include/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon124
TK_CONFIG_DONT_SET_DEFAULT	/usr/include/tk.h	/^#define TK_CONFIG_DONT_SET_DEFAULT	/;"	d
TK_CONFIG_DOUBLE	/usr/include/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon124
TK_CONFIG_END	/usr/include/tk.h	/^    TK_CONFIG_END$/;"	e	enum:__anon124
TK_CONFIG_FONT	/usr/include/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon124
TK_CONFIG_INT	/usr/include/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon124
TK_CONFIG_JOIN_STYLE	/usr/include/tk.h	/^    TK_CONFIG_SYNONYM, TK_CONFIG_CAP_STYLE, TK_CONFIG_JOIN_STYLE,$/;"	e	enum:__anon124
TK_CONFIG_JUSTIFY	/usr/include/tk.h	/^    TK_CONFIG_ACTIVE_CURSOR, TK_CONFIG_JUSTIFY, TK_CONFIG_ANCHOR,$/;"	e	enum:__anon124
TK_CONFIG_MM	/usr/include/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon124
TK_CONFIG_MONO_ONLY	/usr/include/tk.h	/^#define TK_CONFIG_MONO_ONLY	/;"	d
TK_CONFIG_NULL_OK	/usr/include/tk.h	/^#define TK_CONFIG_NULL_OK	/;"	d
TK_CONFIG_OBJS	/usr/include/tk.h	/^#define TK_CONFIG_OBJS	/;"	d
TK_CONFIG_OPTION_SPECIFIED	/usr/include/tk.h	/^#define TK_CONFIG_OPTION_SPECIFIED /;"	d
TK_CONFIG_PIXELS	/usr/include/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon124
TK_CONFIG_RELIEF	/usr/include/tk.h	/^    TK_CONFIG_BORDER, TK_CONFIG_RELIEF, TK_CONFIG_CURSOR,$/;"	e	enum:__anon124
TK_CONFIG_STRING	/usr/include/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon124
TK_CONFIG_SYNONYM	/usr/include/tk.h	/^    TK_CONFIG_SYNONYM, TK_CONFIG_CAP_STYLE, TK_CONFIG_JOIN_STYLE,$/;"	e	enum:__anon124
TK_CONFIG_UID	/usr/include/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon124
TK_CONFIG_USER_BIT	/usr/include/tk.h	/^#define TK_CONFIG_USER_BIT	/;"	d
TK_CONFIG_WINDOW	/usr/include/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon124
TK_CONTAINER	/usr/include/tk.h	/^#define TK_CONTAINER	/;"	d
TK_DEFER_EVENT	/usr/include/tk.h	/^    TK_DEFER_EVENT, TK_PROCESS_EVENT, TK_DISCARD_EVENT$/;"	e	enum:__anon126
TK_DEFER_MODAL	/usr/include/tk.h	/^#define TK_DEFER_MODAL	/;"	d
TK_DISCARD_EVENT	/usr/include/tk.h	/^    TK_DEFER_EVENT, TK_PROCESS_EVENT, TK_DISCARD_EVENT$/;"	e	enum:__anon126
TK_DONT_DESTROY_WINDOW	/usr/include/tk.h	/^#define TK_DONT_DESTROY_WINDOW	/;"	d
TK_DONT_WAIT	/usr/include/tk.h	/^#define TK_DONT_WAIT	/;"	d
TK_ELEMENT_STATE_ACTIVE	/usr/include/tk.h	/^#define TK_ELEMENT_STATE_ACTIVE /;"	d
TK_ELEMENT_STATE_DISABLED	/usr/include/tk.h	/^#define TK_ELEMENT_STATE_DISABLED /;"	d
TK_ELEMENT_STATE_FOCUS	/usr/include/tk.h	/^#define TK_ELEMENT_STATE_FOCUS /;"	d
TK_ELEMENT_STATE_PRESSED	/usr/include/tk.h	/^#define TK_ELEMENT_STATE_PRESSED /;"	d
TK_EMBEDDED	/usr/include/tk.h	/^#define TK_EMBEDDED	/;"	d
TK_EXCEPTION	/usr/include/tk.h	/^#define TK_EXCEPTION	/;"	d
TK_FILE_EVENTS	/usr/include/tk.h	/^#define TK_FILE_EVENTS	/;"	d
TK_GRAB_FLAG	/usr/include/tk.h	/^#define TK_GRAB_FLAG	/;"	d
TK_HAS_WRAPPER	/usr/include/tk.h	/^#define TK_HAS_WRAPPER	/;"	d
TK_IDLE_EVENTS	/usr/include/tk.h	/^#define TK_IDLE_EVENTS	/;"	d
TK_IGNORE_NEWLINES	/usr/include/tk.h	/^#define TK_IGNORE_NEWLINES	/;"	d
TK_IGNORE_TABS	/usr/include/tk.h	/^#define TK_IGNORE_TABS	/;"	d
TK_INTERACTIVE_PRIO	/usr/include/tk.h	/^#define TK_INTERACTIVE_PRIO	/;"	d
TK_ITEM_DONT_REDRAW	/usr/include/tk.h	/^#define TK_ITEM_DONT_REDRAW	/;"	d
TK_ITEM_STATE_DEPENDANT	/usr/include/tk.h	/^#define TK_ITEM_STATE_DEPENDANT	/;"	d
TK_JUSTIFY_CENTER	/usr/include/tk.h	/^    TK_JUSTIFY_LEFT, TK_JUSTIFY_RIGHT, TK_JUSTIFY_CENTER$/;"	e	enum:__anon128
TK_JUSTIFY_LEFT	/usr/include/tk.h	/^    TK_JUSTIFY_LEFT, TK_JUSTIFY_RIGHT, TK_JUSTIFY_CENTER$/;"	e	enum:__anon128
TK_JUSTIFY_RIGHT	/usr/include/tk.h	/^    TK_JUSTIFY_LEFT, TK_JUSTIFY_RIGHT, TK_JUSTIFY_CENTER$/;"	e	enum:__anon128
TK_LASTEVENT	/usr/include/tk.h	/^#define TK_LASTEVENT	/;"	d
TK_MAJOR_VERSION	/usr/include/tk.h	/^#define TK_MAJOR_VERSION	/;"	d
TK_MAPPED	/usr/include/tk.h	/^#define TK_MAPPED	/;"	d
TK_MAX_PRIO	/usr/include/tk.h	/^#define TK_MAX_PRIO	/;"	d
TK_MINOR_VERSION	/usr/include/tk.h	/^#define TK_MINOR_VERSION	/;"	d
TK_NEED_CONFIG_NOTIFY	/usr/include/tk.h	/^#define TK_NEED_CONFIG_NOTIFY	/;"	d
TK_NOTIFY_SHARE	/usr/include/tk.h	/^#define TK_NOTIFY_SHARE	/;"	d
TK_NUM_SAVED_OPTIONS	/usr/include/tk.h	/^#   define TK_NUM_SAVED_OPTIONS /;"	d
TK_OFFSET_BOTTOM	/usr/include/tk.h	/^#define TK_OFFSET_BOTTOM	/;"	d
TK_OFFSET_CENTER	/usr/include/tk.h	/^#define TK_OFFSET_CENTER	/;"	d
TK_OFFSET_INDEX	/usr/include/tk.h	/^#define TK_OFFSET_INDEX	/;"	d
TK_OFFSET_LEFT	/usr/include/tk.h	/^#define TK_OFFSET_LEFT	/;"	d
TK_OFFSET_MIDDLE	/usr/include/tk.h	/^#define TK_OFFSET_MIDDLE	/;"	d
TK_OFFSET_RELATIVE	/usr/include/tk.h	/^#define TK_OFFSET_RELATIVE	/;"	d
TK_OFFSET_RIGHT	/usr/include/tk.h	/^#define TK_OFFSET_RIGHT	/;"	d
TK_OFFSET_TOP	/usr/include/tk.h	/^#define TK_OFFSET_TOP	/;"	d
TK_OPTION_ANCHOR	/usr/include/tk.h	/^    TK_OPTION_ANCHOR,$/;"	e	enum:__anon123
TK_OPTION_BITMAP	/usr/include/tk.h	/^    TK_OPTION_BITMAP,$/;"	e	enum:__anon123
TK_OPTION_BOOLEAN	/usr/include/tk.h	/^    TK_OPTION_BOOLEAN,$/;"	e	enum:__anon123
TK_OPTION_BORDER	/usr/include/tk.h	/^    TK_OPTION_BORDER,$/;"	e	enum:__anon123
TK_OPTION_COLOR	/usr/include/tk.h	/^    TK_OPTION_COLOR,$/;"	e	enum:__anon123
TK_OPTION_CURSOR	/usr/include/tk.h	/^    TK_OPTION_CURSOR,$/;"	e	enum:__anon123
TK_OPTION_CUSTOM	/usr/include/tk.h	/^    TK_OPTION_CUSTOM,$/;"	e	enum:__anon123
TK_OPTION_DONT_SET_DEFAULT	/usr/include/tk.h	/^#define TK_OPTION_DONT_SET_DEFAULT	/;"	d
TK_OPTION_DOUBLE	/usr/include/tk.h	/^    TK_OPTION_DOUBLE,$/;"	e	enum:__anon123
TK_OPTION_END	/usr/include/tk.h	/^    TK_OPTION_END,$/;"	e	enum:__anon123
TK_OPTION_FONT	/usr/include/tk.h	/^    TK_OPTION_FONT,$/;"	e	enum:__anon123
TK_OPTION_INT	/usr/include/tk.h	/^    TK_OPTION_INT,$/;"	e	enum:__anon123
TK_OPTION_JUSTIFY	/usr/include/tk.h	/^    TK_OPTION_JUSTIFY,$/;"	e	enum:__anon123
TK_OPTION_NULL_OK	/usr/include/tk.h	/^#define TK_OPTION_NULL_OK	/;"	d
TK_OPTION_PIXELS	/usr/include/tk.h	/^    TK_OPTION_PIXELS,$/;"	e	enum:__anon123
TK_OPTION_RELIEF	/usr/include/tk.h	/^    TK_OPTION_RELIEF,$/;"	e	enum:__anon123
TK_OPTION_STRING	/usr/include/tk.h	/^    TK_OPTION_STRING,$/;"	e	enum:__anon123
TK_OPTION_STRING_TABLE	/usr/include/tk.h	/^    TK_OPTION_STRING_TABLE,$/;"	e	enum:__anon123
TK_OPTION_STYLE	/usr/include/tk.h	/^    TK_OPTION_STYLE$/;"	e	enum:__anon123
TK_OPTION_SYNONYM	/usr/include/tk.h	/^    TK_OPTION_SYNONYM,$/;"	e	enum:__anon123
TK_OPTION_WINDOW	/usr/include/tk.h	/^    TK_OPTION_WINDOW,$/;"	e	enum:__anon123
TK_PARTIAL_OK	/usr/include/tk.h	/^#define TK_PARTIAL_OK	/;"	d
TK_PATCH_LEVEL	/usr/include/tk.h	/^#define TK_PATCH_LEVEL	/;"	d
TK_PHOTO_COMPOSITE_OVERLAY	/usr/include/tk.h	/^#define TK_PHOTO_COMPOSITE_OVERLAY	/;"	d
TK_PHOTO_COMPOSITE_SET	/usr/include/tk.h	/^#define TK_PHOTO_COMPOSITE_SET	/;"	d
TK_PROCESS_EVENT	/usr/include/tk.h	/^    TK_DEFER_EVENT, TK_PROCESS_EVENT, TK_DISCARD_EVENT$/;"	e	enum:__anon126
TK_PROP_PROPCHANGE	/usr/include/tk.h	/^#define TK_PROP_PROPCHANGE	/;"	d
TK_READABLE	/usr/include/tk.h	/^#define TK_READABLE	/;"	d
TK_RELEASE_LEVEL	/usr/include/tk.h	/^#define TK_RELEASE_LEVEL	/;"	d
TK_RELEASE_SERIAL	/usr/include/tk.h	/^#define TK_RELEASE_SERIAL	/;"	d
TK_RELIEF_FLAT	/usr/include/tk.h	/^#define TK_RELIEF_FLAT	/;"	d
TK_RELIEF_GROOVE	/usr/include/tk.h	/^#define TK_RELIEF_GROOVE	/;"	d
TK_RELIEF_NULL	/usr/include/tk.h	/^#define TK_RELIEF_NULL	/;"	d
TK_RELIEF_RAISED	/usr/include/tk.h	/^#define TK_RELIEF_RAISED	/;"	d
TK_RELIEF_RIDGE	/usr/include/tk.h	/^#define TK_RELIEF_RIDGE	/;"	d
TK_RELIEF_SOLID	/usr/include/tk.h	/^#define TK_RELIEF_SOLID	/;"	d
TK_RELIEF_SUNKEN	/usr/include/tk.h	/^#define TK_RELIEF_SUNKEN	/;"	d
TK_REPARENTED	/usr/include/tk.h	/^#define TK_REPARENTED	/;"	d
TK_SCROLL_ERROR	/usr/include/tk.h	/^#define TK_SCROLL_ERROR	/;"	d
TK_SCROLL_MOVETO	/usr/include/tk.h	/^#define TK_SCROLL_MOVETO	/;"	d
TK_SCROLL_PAGES	/usr/include/tk.h	/^#define TK_SCROLL_PAGES	/;"	d
TK_SCROLL_UNITS	/usr/include/tk.h	/^#define TK_SCROLL_UNITS	/;"	d
TK_STARTUP_FILE_PRIO	/usr/include/tk.h	/^#define TK_STARTUP_FILE_PRIO	/;"	d
TK_STATE_ACTIVE	/usr/include/tk.h	/^    TK_STATE_NULL = -1, TK_STATE_ACTIVE, TK_STATE_DISABLED,$/;"	e	enum:__anon131
TK_STATE_DISABLED	/usr/include/tk.h	/^    TK_STATE_NULL = -1, TK_STATE_ACTIVE, TK_STATE_DISABLED,$/;"	e	enum:__anon131
TK_STATE_HIDDEN	/usr/include/tk.h	/^    TK_STATE_NORMAL, TK_STATE_HIDDEN$/;"	e	enum:__anon131
TK_STATE_NORMAL	/usr/include/tk.h	/^    TK_STATE_NORMAL, TK_STATE_HIDDEN$/;"	e	enum:__anon131
TK_STATE_NULL	/usr/include/tk.h	/^    TK_STATE_NULL = -1, TK_STATE_ACTIVE, TK_STATE_DISABLED,$/;"	e	enum:__anon131
TK_STYLE_VERSION	/usr/include/tk.h	/^#define TK_STYLE_VERSION /;"	d
TK_STYLE_VERSION_1	/usr/include/tk.h	/^#define TK_STYLE_VERSION_1 /;"	d
TK_TAG_SPACE	/usr/include/tk.h	/^#define TK_TAG_SPACE /;"	d
TK_TIMER_EVENTS	/usr/include/tk.h	/^#define TK_TIMER_EVENTS	/;"	d
TK_TOP_HIERARCHY	/usr/include/tk.h	/^#define TK_TOP_HIERARCHY	/;"	d
TK_TOP_LEVEL	/usr/include/tk.h	/^#define TK_TOP_LEVEL	/;"	d
TK_USER_DEFAULT_PRIO	/usr/include/tk.h	/^#define TK_USER_DEFAULT_PRIO	/;"	d
TK_USE_INPUT_METHODS	/usr/include/tk.h	/^#define TK_USE_INPUT_METHODS$/;"	d
TK_VERSION	/usr/include/tk.h	/^#define TK_VERSION	/;"	d
TK_WHOLE_WORDS	/usr/include/tk.h	/^#define TK_WHOLE_WORDS	/;"	d
TK_WIDGET_DEFAULT_PRIO	/usr/include/tk.h	/^#define TK_WIDGET_DEFAULT_PRIO	/;"	d
TK_WINDOW_EVENTS	/usr/include/tk.h	/^#define TK_WINDOW_EVENTS	/;"	d
TK_WIN_MANAGED	/usr/include/tk.h	/^#define TK_WIN_MANAGED	/;"	d
TK_WM_COLORMAP_WINDOW	/usr/include/tk.h	/^#define TK_WM_COLORMAP_WINDOW	/;"	d
TK_WM_MANAGEABLE	/usr/include/tk.h	/^#define TK_WM_MANAGEABLE	/;"	d
TK_WRAPPER	/usr/include/tk.h	/^#define TK_WRAPPER	/;"	d
TK_WRITABLE	/usr/include/tk.h	/^#define TK_WRITABLE	/;"	d
TK_X_EVENTS	/usr/include/tk.h	/^#define TK_X_EVENTS	/;"	d
TMAGIC	/usr/include/tar.h	/^#define	TMAGIC	/;"	d
TMAGLEN	/usr/include/tar.h	/^#define	TMAGLEN	/;"	d
TMP_MAX	/usr/include/stdio.h	/^#define	TMP_MAX	/;"	d
TM_APRIL	/usr/include/tzfile.h	/^#define TM_APRIL	/;"	d
TM_AUGUST	/usr/include/tzfile.h	/^#define TM_AUGUST	/;"	d
TM_DECEMBER	/usr/include/tzfile.h	/^#define TM_DECEMBER	/;"	d
TM_FEBRUARY	/usr/include/tzfile.h	/^#define TM_FEBRUARY	/;"	d
TM_FRIDAY	/usr/include/tzfile.h	/^#define TM_FRIDAY	/;"	d
TM_JANUARY	/usr/include/tzfile.h	/^#define TM_JANUARY	/;"	d
TM_JULY	/usr/include/tzfile.h	/^#define TM_JULY	/;"	d
TM_JUNE	/usr/include/tzfile.h	/^#define TM_JUNE	/;"	d
TM_MARCH	/usr/include/tzfile.h	/^#define TM_MARCH	/;"	d
TM_MAY	/usr/include/tzfile.h	/^#define TM_MAY	/;"	d
TM_MONDAY	/usr/include/tzfile.h	/^#define TM_MONDAY	/;"	d
TM_NOVEMBER	/usr/include/tzfile.h	/^#define TM_NOVEMBER	/;"	d
TM_OCTOBER	/usr/include/tzfile.h	/^#define TM_OCTOBER	/;"	d
TM_SATURDAY	/usr/include/tzfile.h	/^#define TM_SATURDAY	/;"	d
TM_SEPTEMBER	/usr/include/tzfile.h	/^#define TM_SEPTEMBER	/;"	d
TM_SUNDAY	/usr/include/tzfile.h	/^#define TM_SUNDAY	/;"	d
TM_THURSDAY	/usr/include/tzfile.h	/^#define TM_THURSDAY	/;"	d
TM_TUESDAY	/usr/include/tzfile.h	/^#define TM_TUESDAY	/;"	d
TM_WEDNESDAY	/usr/include/tzfile.h	/^#define TM_WEDNESDAY	/;"	d
TM_YEAR_BASE	/usr/include/tzfile.h	/^#define TM_YEAR_BASE	/;"	d
TOEXEC	/usr/include/tar.h	/^#define	TOEXEC	/;"	d
TOOM_MUL_CUTOFF	/usr/include/tclTomMath.h	/^           TOOM_MUL_CUTOFF,$/;"	v
TOOM_MUL_CUTOFF	/usr/include/tclTomMathDecls.h	/^#define TOOM_MUL_CUTOFF /;"	d
TOOM_SQR_CUTOFF	/usr/include/tclTomMath.h	/^           TOOM_SQR_CUTOFF;$/;"	v
TOOM_SQR_CUTOFF	/usr/include/tclTomMathDecls.h	/^#define TOOM_SQR_CUTOFF /;"	d
TOREAD	/usr/include/tar.h	/^#define	TOREAD	/;"	d
TOWRITE	/usr/include/tar.h	/^#define	TOWRITE	/;"	d
TPARM_0	/usr/include/nc_tparm.h	/^#define TPARM_0(/;"	d
TPARM_1	/usr/include/nc_tparm.h	/^#define TPARM_1(/;"	d
TPARM_2	/usr/include/nc_tparm.h	/^#define TPARM_2(/;"	d
TPARM_3	/usr/include/nc_tparm.h	/^#define TPARM_3(/;"	d
TPARM_4	/usr/include/nc_tparm.h	/^#define TPARM_4(/;"	d
TPARM_5	/usr/include/nc_tparm.h	/^#define TPARM_5(/;"	d
TPARM_6	/usr/include/nc_tparm.h	/^#define TPARM_6(/;"	d
TPARM_7	/usr/include/nc_tparm.h	/^#define TPARM_7(/;"	d
TPARM_8	/usr/include/nc_tparm.h	/^#define TPARM_8(/;"	d
TPARM_9	/usr/include/nc_tparm.h	/^#define TPARM_9(/;"	d
TPARM_ARG	/usr/include/nc_tparm.h	/^#define TPARM_ARG /;"	d
TPARM_N	/usr/include/nc_tparm.h	/^#define TPARM_N(/;"	d
TRACE_ATTRS	/usr/include/curses.h	/^#define TRACE_ATTRS	/;"	d
TRACE_ATTRS	/usr/include/ncurses.h	/^#define TRACE_ATTRS	/;"	d
TRACE_BITS	/usr/include/curses.h	/^#define TRACE_BITS	/;"	d
TRACE_BITS	/usr/include/ncurses.h	/^#define TRACE_BITS	/;"	d
TRACE_CALLS	/usr/include/curses.h	/^#define TRACE_CALLS	/;"	d
TRACE_CALLS	/usr/include/ncurses.h	/^#define TRACE_CALLS	/;"	d
TRACE_CCALLS	/usr/include/curses.h	/^#define TRACE_CCALLS	/;"	d
TRACE_CCALLS	/usr/include/ncurses.h	/^#define TRACE_CCALLS	/;"	d
TRACE_CHARPUT	/usr/include/curses.h	/^#define TRACE_CHARPUT	/;"	d
TRACE_CHARPUT	/usr/include/ncurses.h	/^#define TRACE_CHARPUT	/;"	d
TRACE_DATABASE	/usr/include/curses.h	/^#define TRACE_DATABASE	/;"	d
TRACE_DATABASE	/usr/include/ncurses.h	/^#define TRACE_DATABASE	/;"	d
TRACE_DISABLE	/usr/include/curses.h	/^#define TRACE_DISABLE	/;"	d
TRACE_DISABLE	/usr/include/ncurses.h	/^#define TRACE_DISABLE	/;"	d
TRACE_ICALLS	/usr/include/curses.h	/^#define TRACE_ICALLS	/;"	d
TRACE_ICALLS	/usr/include/ncurses.h	/^#define TRACE_ICALLS	/;"	d
TRACE_IEVENT	/usr/include/curses.h	/^#define TRACE_IEVENT	/;"	d
TRACE_IEVENT	/usr/include/ncurses.h	/^#define TRACE_IEVENT	/;"	d
TRACE_MAXIMUM	/usr/include/curses.h	/^#define TRACE_MAXIMUM	/;"	d
TRACE_MAXIMUM	/usr/include/ncurses.h	/^#define TRACE_MAXIMUM	/;"	d
TRACE_MOVE	/usr/include/curses.h	/^#define TRACE_MOVE	/;"	d
TRACE_MOVE	/usr/include/ncurses.h	/^#define TRACE_MOVE	/;"	d
TRACE_ORDINARY	/usr/include/curses.h	/^#define TRACE_ORDINARY	/;"	d
TRACE_ORDINARY	/usr/include/ncurses.h	/^#define TRACE_ORDINARY	/;"	d
TRACE_SHIFT	/usr/include/curses.h	/^#define TRACE_SHIFT	/;"	d
TRACE_SHIFT	/usr/include/ncurses.h	/^#define TRACE_SHIFT	/;"	d
TRACE_TIMES	/usr/include/curses.h	/^#define TRACE_TIMES	/;"	d
TRACE_TIMES	/usr/include/ncurses.h	/^#define TRACE_TIMES	/;"	d
TRACE_TPUTS	/usr/include/curses.h	/^#define TRACE_TPUTS	/;"	d
TRACE_TPUTS	/usr/include/ncurses.h	/^#define TRACE_TPUTS	/;"	d
TRACE_UPDATE	/usr/include/curses.h	/^#define TRACE_UPDATE	/;"	d
TRACE_UPDATE	/usr/include/ncurses.h	/^#define TRACE_UPDATE	/;"	d
TRACE_VIRTPUT	/usr/include/curses.h	/^#define TRACE_VIRTPUT	/;"	d
TRACE_VIRTPUT	/usr/include/ncurses.h	/^#define TRACE_VIRTPUT	/;"	d
TRUE	/usr/include/curses.h	/^#define TRUE /;"	d
TRUE	/usr/include/curses.h	/^#undef TRUE$/;"	d
TRUE	/usr/include/fcgimisc.h	/^#define TRUE /;"	d
TRUE	/usr/include/iodbcunix.h	/^#define TRUE	/;"	d
TRUE	/usr/include/ncurses.h	/^#define TRUE /;"	d
TRUE	/usr/include/ncurses.h	/^#undef TRUE$/;"	d
TRY_AGAIN	/usr/include/netdb.h	/^#define	TRY_AGAIN	/;"	d
TSGID	/usr/include/tar.h	/^#define	TSGID	/;"	d
TSUID	/usr/include/tar.h	/^#define	TSUID	/;"	d
TSVTX	/usr/include/tar.h	/^#define	TSVTX	/;"	d
TTY	/usr/include/term.h	/^#define TTY /;"	d
TTY	/usr/include/term.h	/^#undef  TTY$/;"	d
TTY_ON	/usr/include/ttyent.h	/^#define	TTY_ON	/;"	d
TTY_SECURE	/usr/include/ttyent.h	/^#define	TTY_SECURE	/;"	d
TUEXEC	/usr/include/tar.h	/^#define	TUEXEC	/;"	d
TUREAD	/usr/include/tar.h	/^#define	TUREAD	/;"	d
TUWRITE	/usr/include/tar.h	/^#define	TUWRITE	/;"	d
TVERSION	/usr/include/tar.h	/^#define	TVERSION	/;"	d
TVERSLEN	/usr/include/tar.h	/^#define	TVERSLEN	/;"	d
TXT	/usr/include/dns_util.h	/^		dns_TXT_record_t *TXT;$/;"	m	union:__anon41::__anon42	access:public
TXTRecordContainsKey	/usr/include/dns_sd.h	/^int DNSSD_API TXTRecordContainsKey$/;"	p	signature:( uint16_t txtLen, const void *txtRecord, const char *key )
TXTRecordCreate	/usr/include/dns_sd.h	/^void DNSSD_API TXTRecordCreate$/;"	p	signature:( TXTRecordRef *txtRecord, uint16_t bufferLen, void *buffer )
TXTRecordDeallocate	/usr/include/dns_sd.h	/^void DNSSD_API TXTRecordDeallocate$/;"	p	signature:( TXTRecordRef *txtRecord )
TXTRecordGetBytesPtr	/usr/include/dns_sd.h	/^const void * DNSSD_API TXTRecordGetBytesPtr$/;"	p	signature:( const TXTRecordRef *txtRecord )
TXTRecordGetCount	/usr/include/dns_sd.h	/^uint16_t DNSSD_API TXTRecordGetCount$/;"	p	signature:( uint16_t txtLen, const void *txtRecord )
TXTRecordGetItemAtIndex	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API TXTRecordGetItemAtIndex$/;"	p	signature:( uint16_t txtLen, const void *txtRecord, uint16_t itemIndex, uint16_t keyBufLen, char *key, uint8_t *valueLen, const void **value )
TXTRecordGetLength	/usr/include/dns_sd.h	/^uint16_t DNSSD_API TXTRecordGetLength$/;"	p	signature:( const TXTRecordRef *txtRecord )
TXTRecordGetValuePtr	/usr/include/dns_sd.h	/^const void * DNSSD_API TXTRecordGetValuePtr$/;"	p	signature:( uint16_t txtLen, const void *txtRecord, const char *key, uint8_t *valueLen )
TXTRecordRef	/usr/include/dns_sd.h	/^typedef union _TXTRecordRef_t { char PrivateData[16]; char *ForceNaturalAlignment; } TXTRecordRef;$/;"	t	typeref:union:_TXTRecordRef_t
TXTRecordRemoveValue	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API TXTRecordRemoveValue$/;"	p	signature:( TXTRecordRef *txtRecord, const char *key )
TXTRecordSetValue	/usr/include/dns_sd.h	/^DNSServiceErrorType DNSSD_API TXTRecordSetValue$/;"	p	signature:( TXTRecordRef *txtRecord, const char *key, uint8_t valueSize, const void *value )
TZDEFAULT	/usr/include/tzfile.h	/^#define TZDEFAULT	/;"	d
TZDEFRULES	/usr/include/tzfile.h	/^#define TZDEFRULES	/;"	d
TZDIR	/usr/include/tzfile.h	/^#define TZDIR	/;"	d
TZFILE_H	/usr/include/tzfile.h	/^#define TZFILE_H$/;"	d
TZ_MAGIC	/usr/include/tzfile.h	/^#define	TZ_MAGIC	/;"	d
TZ_MAX_CHARS	/usr/include/tzfile.h	/^#define TZ_MAX_CHARS	/;"	d
TZ_MAX_LEAPS	/usr/include/tzfile.h	/^#define TZ_MAX_LEAPS	/;"	d
TZ_MAX_TIMES	/usr/include/tzfile.h	/^#define TZ_MAX_TIMES	/;"	d
TZ_MAX_TYPES	/usr/include/tzfile.h	/^#define TZ_MAX_TYPES	/;"	d
T_FMT	/usr/include/langinfo.h	/^#define	T_FMT	/;"	d
T_FMT_AMPM	/usr/include/langinfo.h	/^#define	T_FMT_AMPM	/;"	d
Tagger	/usr/include/mecab.h	/^  class Tagger {$/;"	c	namespace:MeCab
TclBNAlloc	/usr/include/tclTomMathDecls.h	/^#define TclBNAlloc(/;"	d
TclBNFree	/usr/include/tclTomMathDecls.h	/^#define TclBNFree(/;"	d
TclBNRealloc	/usr/include/tclTomMathDecls.h	/^#define TclBNRealloc(/;"	d
TclBN_epoch	/usr/include/tclTomMathDecls.h	/^#define TclBN_epoch /;"	d
TclBN_epoch	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_epoch (void);$/;"	p	signature:(void)
TclBN_epoch_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_epoch_TCL_DECLARED$/;"	d
TclBN_fast_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^#define TclBN_fast_s_mp_mul_digs /;"	d
TclBN_fast_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_fast_s_mp_mul_digs (mp_int * a, mp_int * b, $/;"	p	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
TclBN_fast_s_mp_mul_digs_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_fast_s_mp_mul_digs_TCL_DECLARED$/;"	d
TclBN_fast_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^#define TclBN_fast_s_mp_sqr /;"	d
TclBN_fast_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_fast_s_mp_sqr (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_fast_s_mp_sqr_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_fast_s_mp_sqr_TCL_DECLARED$/;"	d
TclBN_mp_add	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_add /;"	d
TclBN_mp_add	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_add (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_add_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_add_TCL_DECLARED$/;"	d
TclBN_mp_add_d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_add_d /;"	d
TclBN_mp_add_d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_add_d (mp_int* a, mp_digit b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_digit b, mp_int* c)
TclBN_mp_add_d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_add_d_TCL_DECLARED$/;"	d
TclBN_mp_and	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_and /;"	d
TclBN_mp_and	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_and (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_and_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_and_TCL_DECLARED$/;"	d
TclBN_mp_clamp	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_clamp /;"	d
TclBN_mp_clamp	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_clamp (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_clamp_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_clamp_TCL_DECLARED$/;"	d
TclBN_mp_clear	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_clear /;"	d
TclBN_mp_clear	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_clear (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_clear_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_clear_TCL_DECLARED$/;"	d
TclBN_mp_clear_multi	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_clear_multi /;"	d
TclBN_mp_clear_multi	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_clear_multi (mp_int* a, ...);$/;"	p	signature:(mp_int* a, ...)
TclBN_mp_clear_multi_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_clear_multi_TCL_DECLARED$/;"	d
TclBN_mp_cmp	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_cmp /;"	d
TclBN_mp_cmp	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_cmp (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_cmp_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_cmp_TCL_DECLARED$/;"	d
TclBN_mp_cmp_d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_cmp_d /;"	d
TclBN_mp_cmp_d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_cmp_d (mp_int* a, mp_digit b);$/;"	p	signature:(mp_int* a, mp_digit b)
TclBN_mp_cmp_d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_cmp_d_TCL_DECLARED$/;"	d
TclBN_mp_cmp_mag	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_cmp_mag /;"	d
TclBN_mp_cmp_mag	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_cmp_mag (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_cmp_mag_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_cmp_mag_TCL_DECLARED$/;"	d
TclBN_mp_copy	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_copy /;"	d
TclBN_mp_copy	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_copy (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_copy_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_copy_TCL_DECLARED$/;"	d
TclBN_mp_count_bits	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_count_bits /;"	d
TclBN_mp_count_bits	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_count_bits (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_count_bits_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_count_bits_TCL_DECLARED$/;"	d
TclBN_mp_div	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div /;"	d
TclBN_mp_div	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_div (mp_int* a, mp_int* b, mp_int* q, $/;"	p	signature:(mp_int* a, mp_int* b, mp_int* q, mp_int* r)
TclBN_mp_div_2	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_2 /;"	d
TclBN_mp_div_2	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_div_2 (mp_int* a, mp_int* q);$/;"	p	signature:(mp_int* a, mp_int* q)
TclBN_mp_div_2_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_2_TCL_DECLARED$/;"	d
TclBN_mp_div_2d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_2d /;"	d
TclBN_mp_div_2d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_div_2d (mp_int* a, int b, mp_int* q, $/;"	p	signature:(mp_int* a, int b, mp_int* q, mp_int* r)
TclBN_mp_div_2d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_2d_TCL_DECLARED$/;"	d
TclBN_mp_div_3	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_3 /;"	d
TclBN_mp_div_3	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_div_3 (mp_int* a, mp_int* q, mp_digit* r);$/;"	p	signature:(mp_int* a, mp_int* q, mp_digit* r)
TclBN_mp_div_3_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_3_TCL_DECLARED$/;"	d
TclBN_mp_div_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_TCL_DECLARED$/;"	d
TclBN_mp_div_d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_d /;"	d
TclBN_mp_div_d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_div_d (mp_int* a, mp_digit b, mp_int* q, $/;"	p	signature:(mp_int* a, mp_digit b, mp_int* q, mp_digit* r)
TclBN_mp_div_d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_div_d_TCL_DECLARED$/;"	d
TclBN_mp_exch	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_exch /;"	d
TclBN_mp_exch	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_exch (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_exch_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_exch_TCL_DECLARED$/;"	d
TclBN_mp_expt_d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_expt_d /;"	d
TclBN_mp_expt_d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_expt_d (mp_int* a, mp_digit b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_digit b, mp_int* c)
TclBN_mp_expt_d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_expt_d_TCL_DECLARED$/;"	d
TclBN_mp_grow	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_grow /;"	d
TclBN_mp_grow	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_grow (mp_int* a, int size);$/;"	p	signature:(mp_int* a, int size)
TclBN_mp_grow_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_grow_TCL_DECLARED$/;"	d
TclBN_mp_init	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init /;"	d
TclBN_mp_init	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_init (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_init_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_TCL_DECLARED$/;"	d
TclBN_mp_init_copy	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_copy /;"	d
TclBN_mp_init_copy	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_init_copy (mp_int * a, mp_int* b);$/;"	p	signature:(mp_int * a, mp_int* b)
TclBN_mp_init_copy_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_copy_TCL_DECLARED$/;"	d
TclBN_mp_init_multi	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_multi /;"	d
TclBN_mp_init_multi	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_init_multi (mp_int* a, ...);$/;"	p	signature:(mp_int* a, ...)
TclBN_mp_init_multi_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_multi_TCL_DECLARED$/;"	d
TclBN_mp_init_set	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_set /;"	d
TclBN_mp_init_set	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_init_set (mp_int* a, mp_digit b);$/;"	p	signature:(mp_int* a, mp_digit b)
TclBN_mp_init_set_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_set_TCL_DECLARED$/;"	d
TclBN_mp_init_size	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_size /;"	d
TclBN_mp_init_size	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_init_size (mp_int* a, int size);$/;"	p	signature:(mp_int* a, int size)
TclBN_mp_init_size_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_init_size_TCL_DECLARED$/;"	d
TclBN_mp_karatsuba_mul	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_karatsuba_mul /;"	d
TclBN_mp_karatsuba_mul	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_karatsuba_mul (mp_int* a, mp_int* b, $/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_karatsuba_mul_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_karatsuba_mul_TCL_DECLARED$/;"	d
TclBN_mp_karatsuba_sqr	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_karatsuba_sqr /;"	d
TclBN_mp_karatsuba_sqr	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_karatsuba_sqr (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_karatsuba_sqr_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_karatsuba_sqr_TCL_DECLARED$/;"	d
TclBN_mp_lshd	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_lshd /;"	d
TclBN_mp_lshd	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_lshd (mp_int* a, int shift);$/;"	p	signature:(mp_int* a, int shift)
TclBN_mp_lshd_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_lshd_TCL_DECLARED$/;"	d
TclBN_mp_mod	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mod /;"	d
TclBN_mp_mod	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_mod (mp_int* a, mp_int* b, mp_int* r);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* r)
TclBN_mp_mod_2d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mod_2d /;"	d
TclBN_mp_mod_2d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_mod_2d (mp_int* a, int b, mp_int* r);$/;"	p	signature:(mp_int* a, int b, mp_int* r)
TclBN_mp_mod_2d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mod_2d_TCL_DECLARED$/;"	d
TclBN_mp_mod_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mod_TCL_DECLARED$/;"	d
TclBN_mp_mul	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul /;"	d
TclBN_mp_mul	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_mul (mp_int* a, mp_int* b, mp_int* p);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* p)
TclBN_mp_mul_2	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_2 /;"	d
TclBN_mp_mul_2	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_mul_2 (mp_int* a, mp_int* p);$/;"	p	signature:(mp_int* a, mp_int* p)
TclBN_mp_mul_2_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_2_TCL_DECLARED$/;"	d
TclBN_mp_mul_2d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_2d /;"	d
TclBN_mp_mul_2d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_mul_2d (mp_int* a, int d, mp_int* p);$/;"	p	signature:(mp_int* a, int d, mp_int* p)
TclBN_mp_mul_2d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_2d_TCL_DECLARED$/;"	d
TclBN_mp_mul_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_TCL_DECLARED$/;"	d
TclBN_mp_mul_d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_d /;"	d
TclBN_mp_mul_d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_mul_d (mp_int* a, mp_digit b, mp_int* p);$/;"	p	signature:(mp_int* a, mp_digit b, mp_int* p)
TclBN_mp_mul_d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_mul_d_TCL_DECLARED$/;"	d
TclBN_mp_neg	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_neg /;"	d
TclBN_mp_neg	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_neg (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_neg_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_neg_TCL_DECLARED$/;"	d
TclBN_mp_or	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_or /;"	d
TclBN_mp_or	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_or (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_or_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_or_TCL_DECLARED$/;"	d
TclBN_mp_radix_size	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_radix_size /;"	d
TclBN_mp_radix_size	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_radix_size (mp_int* a, int radix, int* size);$/;"	p	signature:(mp_int* a, int radix, int* size)
TclBN_mp_radix_size_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_radix_size_TCL_DECLARED$/;"	d
TclBN_mp_read_radix	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_read_radix /;"	d
TclBN_mp_read_radix	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_read_radix (mp_int* a, const char* str, $/;"	p	signature:(mp_int* a, const char* str, int radix)
TclBN_mp_read_radix_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_read_radix_TCL_DECLARED$/;"	d
TclBN_mp_rshd	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_rshd /;"	d
TclBN_mp_rshd	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_rshd (mp_int * a, int shift);$/;"	p	signature:(mp_int * a, int shift)
TclBN_mp_rshd_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_rshd_TCL_DECLARED$/;"	d
TclBN_mp_set	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_set /;"	d
TclBN_mp_set	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_set (mp_int* a, mp_digit b);$/;"	p	signature:(mp_int* a, mp_digit b)
TclBN_mp_set_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_set_TCL_DECLARED$/;"	d
TclBN_mp_shrink	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_shrink /;"	d
TclBN_mp_shrink	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_shrink (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_shrink_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_shrink_TCL_DECLARED$/;"	d
TclBN_mp_sqr	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sqr /;"	d
TclBN_mp_sqr	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_sqr (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_sqr_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sqr_TCL_DECLARED$/;"	d
TclBN_mp_sqrt	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sqrt /;"	d
TclBN_mp_sqrt	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_sqrt (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_sqrt_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sqrt_TCL_DECLARED$/;"	d
TclBN_mp_sub	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sub /;"	d
TclBN_mp_sub	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_sub (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_sub_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sub_TCL_DECLARED$/;"	d
TclBN_mp_sub_d	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sub_d /;"	d
TclBN_mp_sub_d	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_sub_d (mp_int* a, mp_digit b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_digit b, mp_int* c)
TclBN_mp_sub_d_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_sub_d_TCL_DECLARED$/;"	d
TclBN_mp_to_unsigned_bin	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_to_unsigned_bin /;"	d
TclBN_mp_to_unsigned_bin	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_to_unsigned_bin (mp_int* a, $/;"	p	signature:(mp_int* a, unsigned char* b)
TclBN_mp_to_unsigned_bin_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_to_unsigned_bin_TCL_DECLARED$/;"	d
TclBN_mp_to_unsigned_bin_n	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_to_unsigned_bin_n /;"	d
TclBN_mp_to_unsigned_bin_n	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_to_unsigned_bin_n (mp_int* a, $/;"	p	signature:(mp_int* a, unsigned char* b, unsigned long* outlen)
TclBN_mp_to_unsigned_bin_n_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_to_unsigned_bin_n_TCL_DECLARED$/;"	d
TclBN_mp_toom_mul	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_toom_mul /;"	d
TclBN_mp_toom_mul	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_toom_mul (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_toom_mul_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_toom_mul_TCL_DECLARED$/;"	d
TclBN_mp_toom_sqr	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_toom_sqr /;"	d
TclBN_mp_toom_sqr	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_toom_sqr (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_mp_toom_sqr_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_toom_sqr_TCL_DECLARED$/;"	d
TclBN_mp_toradix_n	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_toradix_n /;"	d
TclBN_mp_toradix_n	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_toradix_n (mp_int* a, char* str, int radix, $/;"	p	signature:(mp_int* a, char* str, int radix, int maxlen)
TclBN_mp_toradix_n_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_toradix_n_TCL_DECLARED$/;"	d
TclBN_mp_unsigned_bin_size	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_unsigned_bin_size /;"	d
TclBN_mp_unsigned_bin_size	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_unsigned_bin_size (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_unsigned_bin_size_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_unsigned_bin_size_TCL_DECLARED$/;"	d
TclBN_mp_xor	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_xor /;"	d
TclBN_mp_xor	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_mp_xor (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_mp_xor_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_xor_TCL_DECLARED$/;"	d
TclBN_mp_zero	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_zero /;"	d
TclBN_mp_zero	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_mp_zero (mp_int* a);$/;"	p	signature:(mp_int* a)
TclBN_mp_zero_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_mp_zero_TCL_DECLARED$/;"	d
TclBN_reverse	/usr/include/tclTomMathDecls.h	/^#define TclBN_reverse /;"	d
TclBN_reverse	/usr/include/tclTomMathDecls.h	/^EXTERN void		TclBN_reverse (unsigned char* s, int len);$/;"	p	signature:(unsigned char* s, int len)
TclBN_reverse_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_reverse_TCL_DECLARED$/;"	d
TclBN_revision	/usr/include/tclTomMathDecls.h	/^#define TclBN_revision /;"	d
TclBN_revision	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_revision (void);$/;"	p	signature:(void)
TclBN_revision_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_revision_TCL_DECLARED$/;"	d
TclBN_s_mp_add	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_add /;"	d
TclBN_s_mp_add	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_s_mp_add (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_s_mp_add_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_add_TCL_DECLARED$/;"	d
TclBN_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_mul_digs /;"	d
TclBN_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_s_mp_mul_digs (mp_int* a, mp_int* b, mp_int* c, $/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c, int digs)
TclBN_s_mp_mul_digs_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_mul_digs_TCL_DECLARED$/;"	d
TclBN_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_sqr /;"	d
TclBN_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_s_mp_sqr (mp_int* a, mp_int* b);$/;"	p	signature:(mp_int* a, mp_int* b)
TclBN_s_mp_sqr_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_sqr_TCL_DECLARED$/;"	d
TclBN_s_mp_sub	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_sub /;"	d
TclBN_s_mp_sub	/usr/include/tclTomMathDecls.h	/^EXTERN int		TclBN_s_mp_sub (mp_int* a, mp_int* b, mp_int* c);$/;"	p	signature:(mp_int* a, mp_int* b, mp_int* c)
TclBN_s_mp_sub_TCL_DECLARED	/usr/include/tclTomMathDecls.h	/^#define TclBN_s_mp_sub_TCL_DECLARED$/;"	d
TclFreeObj	/usr/include/tclDecls.h	/^#define TclFreeObj /;"	d
TclFreeObj	/usr/include/tclDecls.h	/^EXTERN void		TclFreeObj (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
TclFreeObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define TclFreeObj_TCL_DECLARED$/;"	d
TclPlatStubs	/usr/include/tclPlatDecls.h	/^typedef struct TclPlatStubs {$/;"	s
TclPlatStubs	/usr/include/tclPlatDecls.h	/^} TclPlatStubs;$/;"	t	typeref:struct:TclPlatStubs
TclPlatStubs::hooks	/usr/include/tclPlatDecls.h	/^    struct TclPlatStubHooks *hooks;$/;"	m	struct:TclPlatStubs	typeref:struct:TclPlatStubs::TclPlatStubHooks	access:public
TclPlatStubs::magic	/usr/include/tclPlatDecls.h	/^    int magic;$/;"	m	struct:TclPlatStubs	access:public
TclPlatStubs::tcl_MacOSXOpenBundleResources	/usr/include/tclPlatDecls.h	/^    int (*tcl_MacOSXOpenBundleResources) (Tcl_Interp * interp, CONST char * bundleName, int hasResourceFile, int maxPathLen, char * libraryPath); \/* 0 *\/$/;"	m	struct:TclPlatStubs	access:public
TclPlatStubs::tcl_MacOSXOpenVersionedBundleResources	/usr/include/tclPlatDecls.h	/^    int (*tcl_MacOSXOpenVersionedBundleResources) (Tcl_Interp * interp, CONST char * bundleName, CONST char * bundleVersion, int hasResourceFile, int maxPathLen, char * libraryPath); \/* 1 *\/$/;"	m	struct:TclPlatStubs	access:public
TclPlatStubs::tcl_WinTCharToUtf	/usr/include/tclPlatDecls.h	/^    char * (*tcl_WinTCharToUtf) (CONST TCHAR * str, int len, Tcl_DString * dsPtr); \/* 1 *\/$/;"	m	struct:TclPlatStubs	access:public
TclPlatStubs::tcl_WinUtfToTChar	/usr/include/tclPlatDecls.h	/^    TCHAR * (*tcl_WinUtfToTChar) (CONST char * str, int len, Tcl_DString * dsPtr); \/* 0 *\/$/;"	m	struct:TclPlatStubs	access:public
TclStubHooks	/usr/include/tclDecls.h	/^typedef struct TclStubHooks {$/;"	s
TclStubHooks	/usr/include/tclDecls.h	/^} TclStubHooks;$/;"	t	typeref:struct:TclStubHooks
TclStubHooks::tclIntPlatStubs	/usr/include/tclDecls.h	/^    struct TclIntPlatStubs *tclIntPlatStubs;$/;"	m	struct:TclStubHooks	typeref:struct:TclStubHooks::TclIntPlatStubs	access:public
TclStubHooks::tclIntStubs	/usr/include/tclDecls.h	/^    struct TclIntStubs *tclIntStubs;$/;"	m	struct:TclStubHooks	typeref:struct:TclStubHooks::TclIntStubs	access:public
TclStubHooks::tclPlatStubs	/usr/include/tclDecls.h	/^    struct TclPlatStubs *tclPlatStubs;$/;"	m	struct:TclStubHooks	typeref:struct:TclStubHooks::TclPlatStubs	access:public
TclStubs	/usr/include/tclDecls.h	/^typedef struct TclStubs {$/;"	s
TclStubs	/usr/include/tclDecls.h	/^} TclStubs;$/;"	t	typeref:struct:TclStubs
TclStubs::hooks	/usr/include/tclDecls.h	/^    struct TclStubHooks *hooks;$/;"	m	struct:TclStubs	typeref:struct:TclStubs::TclStubHooks	access:public
TclStubs::magic	/usr/include/tclDecls.h	/^    int magic;$/;"	m	struct:TclStubs	access:public
TclStubs::reserved10	/usr/include/tclDecls.h	/^    void *reserved10;$/;"	m	struct:TclStubs	access:public
TclStubs::reserved167	/usr/include/tclDecls.h	/^    void *reserved167;$/;"	m	struct:TclStubs	access:public
TclStubs::reserved188	/usr/include/tclDecls.h	/^    void *reserved188;$/;"	m	struct:TclStubs	access:public
TclStubs::reserved285	/usr/include/tclDecls.h	/^    void *reserved285;$/;"	m	struct:TclStubs	access:public
TclStubs::reserved9	/usr/include/tclDecls.h	/^    void *reserved9;$/;"	m	struct:TclStubs	access:public
TclStubs::tclFreeObj	/usr/include/tclDecls.h	/^    void (*tclFreeObj) (Tcl_Obj * objPtr); \/* 30 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Access	/usr/include/tclDecls.h	/^    int (*tcl_Access) (CONST char * path, int mode); \/* 367 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AddErrorInfo	/usr/include/tclDecls.h	/^    void (*tcl_AddErrorInfo) (Tcl_Interp * interp, CONST char * message); \/* 66 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AddObjErrorInfo	/usr/include/tclDecls.h	/^    void (*tcl_AddObjErrorInfo) (Tcl_Interp * interp, CONST char * message, int length); \/* 67 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AlertNotifier	/usr/include/tclDecls.h	/^    void (*tcl_AlertNotifier) (ClientData clientData); \/* 343 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Alloc	/usr/include/tclDecls.h	/^    char * (*tcl_Alloc) (unsigned int size); \/* 3 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AllocStatBuf	/usr/include/tclDecls.h	/^    Tcl_StatBuf * (*tcl_AllocStatBuf) (void); \/* 490 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AllowExceptions	/usr/include/tclDecls.h	/^    void (*tcl_AllowExceptions) (Tcl_Interp * interp); \/* 68 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendAllObjTypes	/usr/include/tclDecls.h	/^    int (*tcl_AppendAllObjTypes) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 14 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendElement	/usr/include/tclDecls.h	/^    void (*tcl_AppendElement) (Tcl_Interp * interp, CONST char * element); \/* 69 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendExportList	/usr/include/tclDecls.h	/^    int (*tcl_AppendExportList) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, Tcl_Obj * objPtr); \/* 508 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendFormatToObj	/usr/include/tclDecls.h	/^    int (*tcl_AppendFormatToObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, CONST char * format, int objc, Tcl_Obj * CONST objv[]); \/* 577 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendLimitedToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendLimitedToObj) (Tcl_Obj * objPtr, CONST char * bytes, int length, int limit, CONST char * ellipsis); \/* 575 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendObjToErrorInfo	/usr/include/tclDecls.h	/^    void (*tcl_AppendObjToErrorInfo) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 574 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendObjToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendObjToObj) (Tcl_Obj * objPtr, Tcl_Obj * appendObjPtr); \/* 286 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendPrintfToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendPrintfToObj) (Tcl_Obj * objPtr, CONST char * format, ...); \/* 579 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendResult	/usr/include/tclDecls.h	/^    void (*tcl_AppendResult) (Tcl_Interp * interp, ...); \/* 70 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendResultVA	/usr/include/tclDecls.h	/^    void (*tcl_AppendResultVA) (Tcl_Interp * interp, va_list argList); \/* 267 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendStringsToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendStringsToObj) (Tcl_Obj * objPtr, ...); \/* 15 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendStringsToObjVA	/usr/include/tclDecls.h	/^    void (*tcl_AppendStringsToObjVA) (Tcl_Obj * objPtr, va_list argList); \/* 268 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendToObj) (Tcl_Obj* objPtr, CONST char* bytes, int length); \/* 16 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AppendUnicodeToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendUnicodeToObj) (Tcl_Obj * objPtr, CONST Tcl_UniChar * unicode, int length); \/* 384 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AsyncCreate	/usr/include/tclDecls.h	/^    Tcl_AsyncHandler (*tcl_AsyncCreate) (Tcl_AsyncProc * proc, ClientData clientData); \/* 71 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AsyncDelete	/usr/include/tclDecls.h	/^    void (*tcl_AsyncDelete) (Tcl_AsyncHandler async); \/* 72 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AsyncInvoke	/usr/include/tclDecls.h	/^    int (*tcl_AsyncInvoke) (Tcl_Interp * interp, int code); \/* 73 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AsyncMark	/usr/include/tclDecls.h	/^    void (*tcl_AsyncMark) (Tcl_AsyncHandler async); \/* 74 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AsyncReady	/usr/include/tclDecls.h	/^    int (*tcl_AsyncReady) (void); \/* 75 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AttemptAlloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptAlloc) (unsigned int size); \/* 428 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AttemptDbCkalloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptDbCkalloc) (unsigned int size, CONST char * file, int line); \/* 429 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AttemptDbCkrealloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptDbCkrealloc) (char * ptr, unsigned int size, CONST char * file, int line); \/* 431 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AttemptRealloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptRealloc) (char * ptr, unsigned int size); \/* 430 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_AttemptSetObjLength	/usr/include/tclDecls.h	/^    int (*tcl_AttemptSetObjLength) (Tcl_Obj * objPtr, int length); \/* 432 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_BackgroundError	/usr/include/tclDecls.h	/^    void (*tcl_BackgroundError) (Tcl_Interp * interp); \/* 76 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Backslash	/usr/include/tclDecls.h	/^    char (*tcl_Backslash) (CONST char * src, int * readPtr); \/* 77 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_BadChannelOption	/usr/include/tclDecls.h	/^    int (*tcl_BadChannelOption) (Tcl_Interp * interp, CONST char * optionName, CONST char * optionList); \/* 78 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CallWhenDeleted	/usr/include/tclDecls.h	/^    void (*tcl_CallWhenDeleted) (Tcl_Interp * interp, Tcl_InterpDeleteProc * proc, ClientData clientData); \/* 79 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CancelIdleCall	/usr/include/tclDecls.h	/^    void (*tcl_CancelIdleCall) (Tcl_IdleProc * idleProc, ClientData clientData); \/* 80 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelBlockModeProc	/usr/include/tclDecls.h	/^    Tcl_DriverBlockModeProc * (*tcl_ChannelBlockModeProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 400 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelBuffered	/usr/include/tclDecls.h	/^    int (*tcl_ChannelBuffered) (Tcl_Channel chan); \/* 397 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelClose2Proc	/usr/include/tclDecls.h	/^    Tcl_DriverClose2Proc * (*tcl_ChannelClose2Proc) (CONST Tcl_ChannelType * chanTypePtr); \/* 402 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelCloseProc	/usr/include/tclDecls.h	/^    Tcl_DriverCloseProc * (*tcl_ChannelCloseProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 401 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelFlushProc	/usr/include/tclDecls.h	/^    Tcl_DriverFlushProc * (*tcl_ChannelFlushProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 410 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelGetHandleProc	/usr/include/tclDecls.h	/^    Tcl_DriverGetHandleProc * (*tcl_ChannelGetHandleProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 409 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelGetOptionProc	/usr/include/tclDecls.h	/^    Tcl_DriverGetOptionProc * (*tcl_ChannelGetOptionProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 407 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelHandlerProc	/usr/include/tclDecls.h	/^    Tcl_DriverHandlerProc * (*tcl_ChannelHandlerProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 411 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelInputProc	/usr/include/tclDecls.h	/^    Tcl_DriverInputProc * (*tcl_ChannelInputProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 403 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ChannelName) (CONST Tcl_ChannelType * chanTypePtr); \/* 398 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelOutputProc	/usr/include/tclDecls.h	/^    Tcl_DriverOutputProc * (*tcl_ChannelOutputProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 404 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelSeekProc	/usr/include/tclDecls.h	/^    Tcl_DriverSeekProc * (*tcl_ChannelSeekProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 405 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelSetOptionProc	/usr/include/tclDecls.h	/^    Tcl_DriverSetOptionProc * (*tcl_ChannelSetOptionProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 406 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelThreadActionProc	/usr/include/tclDecls.h	/^    Tcl_DriverThreadActionProc * (*tcl_ChannelThreadActionProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 554 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelTruncateProc	/usr/include/tclDecls.h	/^    Tcl_DriverTruncateProc * (*tcl_ChannelTruncateProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 561 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelVersion	/usr/include/tclDecls.h	/^    Tcl_ChannelTypeVersion (*tcl_ChannelVersion) (CONST Tcl_ChannelType * chanTypePtr); \/* 399 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelWatchProc	/usr/include/tclDecls.h	/^    Tcl_DriverWatchProc * (*tcl_ChannelWatchProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 408 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ChannelWideSeekProc	/usr/include/tclDecls.h	/^    Tcl_DriverWideSeekProc * (*tcl_ChannelWideSeekProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 493 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Chdir	/usr/include/tclDecls.h	/^    int (*tcl_Chdir) (CONST char * dirName); \/* 366 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ClearChannelHandlers	/usr/include/tclDecls.h	/^    void (*tcl_ClearChannelHandlers) (Tcl_Channel channel); \/* 417 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Close	/usr/include/tclDecls.h	/^    int (*tcl_Close) (Tcl_Interp * interp, Tcl_Channel chan); \/* 81 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CommandComplete	/usr/include/tclDecls.h	/^    int (*tcl_CommandComplete) (CONST char * cmd); \/* 82 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CommandTraceInfo	/usr/include/tclDecls.h	/^    ClientData (*tcl_CommandTraceInfo) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * procPtr, ClientData prevClientData); \/* 425 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Concat	/usr/include/tclDecls.h	/^    char * (*tcl_Concat) (int argc, CONST84 char * CONST * argv); \/* 83 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConcatObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ConcatObj) (int objc, Tcl_Obj *CONST objv[]); \/* 17 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConditionFinalize	/usr/include/tclDecls.h	/^    void (*tcl_ConditionFinalize) (Tcl_Condition * condPtr); \/* 391 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConditionNotify	/usr/include/tclDecls.h	/^    void (*tcl_ConditionNotify) (Tcl_Condition * condPtr); \/* 310 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConditionWait	/usr/include/tclDecls.h	/^    void (*tcl_ConditionWait) (Tcl_Condition * condPtr, Tcl_Mutex * mutexPtr, Tcl_Time * timePtr); \/* 311 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConvertCountedElement	/usr/include/tclDecls.h	/^    int (*tcl_ConvertCountedElement) (CONST char * src, int length, char * dst, int flags); \/* 85 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConvertElement	/usr/include/tclDecls.h	/^    int (*tcl_ConvertElement) (CONST char * src, char * dst, int flags); \/* 84 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ConvertToType	/usr/include/tclDecls.h	/^    int (*tcl_ConvertToType) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_ObjType * typePtr); \/* 18 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateAlias	/usr/include/tclDecls.h	/^    int (*tcl_CreateAlias) (Tcl_Interp * slave, CONST char * slaveCmd, Tcl_Interp * target, CONST char * targetCmd, int argc, CONST84 char * CONST * argv); \/* 86 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateAliasObj	/usr/include/tclDecls.h	/^    int (*tcl_CreateAliasObj) (Tcl_Interp * slave, CONST char * slaveCmd, Tcl_Interp * target, CONST char * targetCmd, int objc, Tcl_Obj *CONST objv[]); \/* 87 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_CreateChannel) (Tcl_ChannelType * typePtr, CONST char * chanName, ClientData instanceData, int mask); \/* 88 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateChannelHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateChannelHandler) (Tcl_Channel chan, int mask, Tcl_ChannelProc * proc, ClientData clientData); \/* 89 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateCloseHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateCloseHandler) (Tcl_Channel chan, Tcl_CloseProc * proc, ClientData clientData); \/* 90 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateCommand	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_CreateCommand) (Tcl_Interp * interp, CONST char * cmdName, Tcl_CmdProc * proc, ClientData clientData, Tcl_CmdDeleteProc * deleteProc); \/* 91 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateEncoding	/usr/include/tclDecls.h	/^    Tcl_Encoding (*tcl_CreateEncoding) (const Tcl_EncodingType * typePtr); \/* 287 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateEnsemble	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_CreateEnsemble) (Tcl_Interp * interp, CONST char * name, Tcl_Namespace * namespacePtr, int flags); \/* 541 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateEventSource	/usr/include/tclDecls.h	/^    void (*tcl_CreateEventSource) (Tcl_EventSetupProc * setupProc, Tcl_EventCheckProc * checkProc, ClientData clientData); \/* 92 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 93 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateFileHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateFileHandler) (int fd, int mask, Tcl_FileProc * proc, ClientData clientData); \/* 9 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_CreateHashEntry) (Tcl_HashTable * tablePtr, CONST char * key, int * newPtr); \/* 422 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateInterp	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_CreateInterp) (void); \/* 94 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateMathFunc	/usr/include/tclDecls.h	/^    void (*tcl_CreateMathFunc) (Tcl_Interp * interp, CONST char * name, int numArgs, Tcl_ValueType * argTypes, Tcl_MathProc * proc, ClientData clientData); \/* 95 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_CreateNamespace) (Tcl_Interp * interp, CONST char * name, ClientData clientData, Tcl_NamespaceDeleteProc * deleteProc); \/* 506 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateObjCommand	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_CreateObjCommand) (Tcl_Interp * interp, CONST char * cmdName, Tcl_ObjCmdProc * proc, ClientData clientData, Tcl_CmdDeleteProc * deleteProc); \/* 96 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateObjTrace	/usr/include/tclDecls.h	/^    Tcl_Trace (*tcl_CreateObjTrace) (Tcl_Interp* interp, int level, int flags, Tcl_CmdObjTraceProc* objProc, ClientData clientData, Tcl_CmdObjTraceDeleteProc* delProc); \/* 483 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateSlave	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_CreateSlave) (Tcl_Interp * interp, CONST char * slaveName, int isSafe); \/* 97 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateThread	/usr/include/tclDecls.h	/^    int (*tcl_CreateThread) (Tcl_ThreadId * idPtr, Tcl_ThreadCreateProc proc, ClientData clientData, int stackSize, int flags); \/* 393 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateThreadExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateThreadExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 288 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateTimerHandler	/usr/include/tclDecls.h	/^    Tcl_TimerToken (*tcl_CreateTimerHandler) (int milliseconds, Tcl_TimerProc * proc, ClientData clientData); \/* 98 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CreateTrace	/usr/include/tclDecls.h	/^    Tcl_Trace (*tcl_CreateTrace) (Tcl_Interp * interp, int level, Tcl_CmdTraceProc * proc, ClientData clientData); \/* 99 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_CutChannel	/usr/include/tclDecls.h	/^    void (*tcl_CutChannel) (Tcl_Channel channel); \/* 415 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringAppend	/usr/include/tclDecls.h	/^    char * (*tcl_DStringAppend) (Tcl_DString * dsPtr, CONST char * bytes, int length); \/* 117 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringAppendElement	/usr/include/tclDecls.h	/^    char * (*tcl_DStringAppendElement) (Tcl_DString * dsPtr, CONST char * element); \/* 118 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringEndSublist	/usr/include/tclDecls.h	/^    void (*tcl_DStringEndSublist) (Tcl_DString * dsPtr); \/* 119 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringFree	/usr/include/tclDecls.h	/^    void (*tcl_DStringFree) (Tcl_DString * dsPtr); \/* 120 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringGetResult	/usr/include/tclDecls.h	/^    void (*tcl_DStringGetResult) (Tcl_Interp * interp, Tcl_DString * dsPtr); \/* 121 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringInit	/usr/include/tclDecls.h	/^    void (*tcl_DStringInit) (Tcl_DString * dsPtr); \/* 122 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringResult	/usr/include/tclDecls.h	/^    void (*tcl_DStringResult) (Tcl_Interp * interp, Tcl_DString * dsPtr); \/* 123 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringSetLength	/usr/include/tclDecls.h	/^    void (*tcl_DStringSetLength) (Tcl_DString * dsPtr, int length); \/* 124 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DStringStartSublist	/usr/include/tclDecls.h	/^    void (*tcl_DStringStartSublist) (Tcl_DString * dsPtr); \/* 125 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbCkalloc	/usr/include/tclDecls.h	/^    char * (*tcl_DbCkalloc) (unsigned int size, CONST char * file, int line); \/* 6 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbCkfree	/usr/include/tclDecls.h	/^    int (*tcl_DbCkfree) (char * ptr, CONST char * file, int line); \/* 7 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbCkrealloc	/usr/include/tclDecls.h	/^    char * (*tcl_DbCkrealloc) (char * ptr, unsigned int size, CONST char * file, int line); \/* 8 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbDecrRefCount	/usr/include/tclDecls.h	/^    void (*tcl_DbDecrRefCount) (Tcl_Obj * objPtr, CONST char * file, int line); \/* 19 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbIncrRefCount	/usr/include/tclDecls.h	/^    void (*tcl_DbIncrRefCount) (Tcl_Obj * objPtr, CONST char * file, int line); \/* 20 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbIsShared	/usr/include/tclDecls.h	/^    int (*tcl_DbIsShared) (Tcl_Obj * objPtr, CONST char * file, int line); \/* 21 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewBignumObj	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_DbNewBignumObj) (mp_int* value, CONST char* file, int line); \/* 556 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewBooleanObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewBooleanObj) (int boolValue, CONST char * file, int line); \/* 22 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewByteArrayObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewByteArrayObj) (CONST unsigned char * bytes, int length, CONST char * file, int line); \/* 23 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewDictObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewDictObj) (CONST char * file, int line); \/* 504 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewDoubleObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewDoubleObj) (double doubleValue, CONST char * file, int line); \/* 24 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewListObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewListObj) (int objc, Tcl_Obj *CONST * objv, CONST char * file, int line); \/* 25 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewLongObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewLongObj) (long longValue, CONST char * file, int line); \/* 26 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewObj) (CONST char * file, int line); \/* 27 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewStringObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewStringObj) (CONST char * bytes, int length, CONST char * file, int line); \/* 28 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DbNewWideIntObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewWideIntObj) (Tcl_WideInt wideValue, CONST char * file, int line); \/* 486 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteAssocData	/usr/include/tclDecls.h	/^    void (*tcl_DeleteAssocData) (Tcl_Interp * interp, CONST char * name); \/* 100 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteChannelHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteChannelHandler) (Tcl_Channel chan, Tcl_ChannelProc * proc, ClientData clientData); \/* 101 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteCloseHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteCloseHandler) (Tcl_Channel chan, Tcl_CloseProc * proc, ClientData clientData); \/* 102 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteCommand	/usr/include/tclDecls.h	/^    int (*tcl_DeleteCommand) (Tcl_Interp * interp, CONST char * cmdName); \/* 103 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteCommandFromToken	/usr/include/tclDecls.h	/^    int (*tcl_DeleteCommandFromToken) (Tcl_Interp * interp, Tcl_Command command); \/* 104 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteEventSource	/usr/include/tclDecls.h	/^    void (*tcl_DeleteEventSource) (Tcl_EventSetupProc * setupProc, Tcl_EventCheckProc * checkProc, ClientData clientData); \/* 106 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteEvents	/usr/include/tclDecls.h	/^    void (*tcl_DeleteEvents) (Tcl_EventDeleteProc * proc, ClientData clientData); \/* 105 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 107 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteFileHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteFileHandler) (int fd); \/* 10 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteHashEntry	/usr/include/tclDecls.h	/^    void (*tcl_DeleteHashEntry) (Tcl_HashEntry * entryPtr); \/* 108 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteHashTable	/usr/include/tclDecls.h	/^    void (*tcl_DeleteHashTable) (Tcl_HashTable * tablePtr); \/* 109 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteInterp	/usr/include/tclDecls.h	/^    void (*tcl_DeleteInterp) (Tcl_Interp * interp); \/* 110 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteNamespace	/usr/include/tclDecls.h	/^    void (*tcl_DeleteNamespace) (Tcl_Namespace * nsPtr); \/* 507 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteThreadExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteThreadExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 289 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteTimerHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteTimerHandler) (Tcl_TimerToken token); \/* 112 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DeleteTrace	/usr/include/tclDecls.h	/^    void (*tcl_DeleteTrace) (Tcl_Interp * interp, Tcl_Trace trace); \/* 113 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DetachChannel	/usr/include/tclDecls.h	/^    int (*tcl_DetachChannel) (Tcl_Interp* interp, Tcl_Channel channel); \/* 438 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DetachPids	/usr/include/tclDecls.h	/^    void (*tcl_DetachPids) (int numPids, Tcl_Pid * pidPtr); \/* 111 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjDone	/usr/include/tclDecls.h	/^    void (*tcl_DictObjDone) (Tcl_DictSearch * searchPtr); \/* 500 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjFirst	/usr/include/tclDecls.h	/^    int (*tcl_DictObjFirst) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr); \/* 498 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjGet	/usr/include/tclDecls.h	/^    int (*tcl_DictObjGet) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj ** valuePtrPtr); \/* 495 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjNext	/usr/include/tclDecls.h	/^    void (*tcl_DictObjNext) (Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr); \/* 499 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjPut	/usr/include/tclDecls.h	/^    int (*tcl_DictObjPut) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj * valuePtr); \/* 494 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjPutKeyList	/usr/include/tclDecls.h	/^    int (*tcl_DictObjPutKeyList) (Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv, Tcl_Obj * valuePtr); \/* 501 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjRemove	/usr/include/tclDecls.h	/^    int (*tcl_DictObjRemove) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr); \/* 496 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjRemoveKeyList	/usr/include/tclDecls.h	/^    int (*tcl_DictObjRemoveKeyList) (Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv); \/* 502 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DictObjSize	/usr/include/tclDecls.h	/^    int (*tcl_DictObjSize) (Tcl_Interp * interp, Tcl_Obj * dictPtr, int * sizePtr); \/* 497 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DiscardInterpState	/usr/include/tclDecls.h	/^    void (*tcl_DiscardInterpState) (Tcl_InterpState state); \/* 537 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DiscardResult	/usr/include/tclDecls.h	/^    void (*tcl_DiscardResult) (Tcl_SavedResult * statePtr); \/* 290 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DoOneEvent	/usr/include/tclDecls.h	/^    int (*tcl_DoOneEvent) (int flags); \/* 115 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DoWhenIdle	/usr/include/tclDecls.h	/^    void (*tcl_DoWhenIdle) (Tcl_IdleProc * proc, ClientData clientData); \/* 116 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DontCallWhenDeleted	/usr/include/tclDecls.h	/^    void (*tcl_DontCallWhenDeleted) (Tcl_Interp * interp, Tcl_InterpDeleteProc * proc, ClientData clientData); \/* 114 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DumpActiveMemory	/usr/include/tclDecls.h	/^    int (*tcl_DumpActiveMemory) (CONST char * fileName); \/* 265 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_DuplicateObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DuplicateObj) (Tcl_Obj * objPtr); \/* 29 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Eof	/usr/include/tclDecls.h	/^    int (*tcl_Eof) (Tcl_Channel chan); \/* 126 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ErrnoId	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ErrnoId) (void); \/* 127 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ErrnoMsg	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ErrnoMsg) (int err); \/* 128 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Eval	/usr/include/tclDecls.h	/^    int (*tcl_Eval) (Tcl_Interp * interp, CONST char * script); \/* 129 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalEx	/usr/include/tclDecls.h	/^    int (*tcl_EvalEx) (Tcl_Interp * interp, CONST char * script, int numBytes, int flags); \/* 291 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalFile	/usr/include/tclDecls.h	/^    int (*tcl_EvalFile) (Tcl_Interp * interp, CONST char * fileName); \/* 130 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalObj	/usr/include/tclDecls.h	/^    int (*tcl_EvalObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 131 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalObjEx	/usr/include/tclDecls.h	/^    int (*tcl_EvalObjEx) (Tcl_Interp * interp, Tcl_Obj * objPtr, int flags); \/* 293 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalObjv	/usr/include/tclDecls.h	/^    int (*tcl_EvalObjv) (Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], int flags); \/* 292 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalTokens	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_EvalTokens) (Tcl_Interp * interp, Tcl_Token * tokenPtr, int count); \/* 357 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EvalTokensStandard	/usr/include/tclDecls.h	/^    int (*tcl_EvalTokensStandard) (Tcl_Interp * interp, Tcl_Token * tokenPtr, int count); \/* 481 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_EventuallyFree	/usr/include/tclDecls.h	/^    void (*tcl_EventuallyFree) (ClientData clientData, Tcl_FreeProc * freeProc); \/* 132 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Exit	/usr/include/tclDecls.h	/^    void (*tcl_Exit) (int status); \/* 133 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExitThread	/usr/include/tclDecls.h	/^    void (*tcl_ExitThread) (int status); \/* 294 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Export	/usr/include/tclDecls.h	/^    int (*tcl_Export) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern, int resetListFirst); \/* 509 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExposeCommand	/usr/include/tclDecls.h	/^    int (*tcl_ExposeCommand) (Tcl_Interp * interp, CONST char * hiddenCmdToken, CONST char * cmdName); \/* 134 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprBoolean	/usr/include/tclDecls.h	/^    int (*tcl_ExprBoolean) (Tcl_Interp * interp, CONST char * expr, int * ptr); \/* 135 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprBooleanObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprBooleanObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * ptr); \/* 136 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprDouble	/usr/include/tclDecls.h	/^    int (*tcl_ExprDouble) (Tcl_Interp * interp, CONST char * expr, double * ptr); \/* 137 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprDoubleObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprDoubleObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, double * ptr); \/* 138 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprLong	/usr/include/tclDecls.h	/^    int (*tcl_ExprLong) (Tcl_Interp * interp, CONST char * expr, long * ptr); \/* 139 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprLongObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprLongObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, long * ptr); \/* 140 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_Obj ** resultPtrPtr); \/* 141 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExprString	/usr/include/tclDecls.h	/^    int (*tcl_ExprString) (Tcl_Interp * interp, CONST char * expr); \/* 142 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExternalToUtf	/usr/include/tclDecls.h	/^    int (*tcl_ExternalToUtf) (Tcl_Interp * interp, Tcl_Encoding encoding, CONST char * src, int srcLen, int flags, Tcl_EncodingState * statePtr, char * dst, int dstLen, int * srcReadPtr, int * dstWrotePtr, int * dstCharsPtr); \/* 295 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ExternalToUtfDString	/usr/include/tclDecls.h	/^    char * (*tcl_ExternalToUtfDString) (Tcl_Encoding encoding, CONST char * src, int srcLen, Tcl_DString * dsPtr); \/* 296 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSAccess	/usr/include/tclDecls.h	/^    int (*tcl_FSAccess) (Tcl_Obj * pathPtr, int mode); \/* 455 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSChdir	/usr/include/tclDecls.h	/^    int (*tcl_FSChdir) (Tcl_Obj * pathPtr); \/* 458 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSConvertToPathType	/usr/include/tclDecls.h	/^    int (*tcl_FSConvertToPathType) (Tcl_Interp * interp, Tcl_Obj * pathPtr); \/* 459 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSCopyDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSCopyDirectory) (Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr, Tcl_Obj ** errorPtr); \/* 441 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSCopyFile	/usr/include/tclDecls.h	/^    int (*tcl_FSCopyFile) (Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr); \/* 440 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSCreateDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSCreateDirectory) (Tcl_Obj * pathPtr); \/* 442 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSData	/usr/include/tclDecls.h	/^    ClientData (*tcl_FSData) (Tcl_Filesystem * fsPtr); \/* 475 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSDeleteFile	/usr/include/tclDecls.h	/^    int (*tcl_FSDeleteFile) (Tcl_Obj * pathPtr); \/* 443 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSEqualPaths	/usr/include/tclDecls.h	/^    int (*tcl_FSEqualPaths) (Tcl_Obj* firstPtr, Tcl_Obj* secondPtr); \/* 462 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSEvalFile	/usr/include/tclDecls.h	/^    int (*tcl_FSEvalFile) (Tcl_Interp * interp, Tcl_Obj * fileName); \/* 467 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSEvalFileEx	/usr/include/tclDecls.h	/^    int (*tcl_FSEvalFileEx) (Tcl_Interp * interp, Tcl_Obj * fileName, CONST char * encodingName); \/* 518 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSFileAttrStrings	/usr/include/tclDecls.h	/^    CONST char ** (*tcl_FSFileAttrStrings) (Tcl_Obj * pathPtr, Tcl_Obj ** objPtrRef); \/* 453 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSFileAttrsGet	/usr/include/tclDecls.h	/^    int (*tcl_FSFileAttrsGet) (Tcl_Interp * interp, int index, Tcl_Obj * pathPtr, Tcl_Obj ** objPtrRef); \/* 451 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSFileAttrsSet	/usr/include/tclDecls.h	/^    int (*tcl_FSFileAttrsSet) (Tcl_Interp * interp, int index, Tcl_Obj * pathPtr, Tcl_Obj * objPtr); \/* 452 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSFileSystemInfo	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSFileSystemInfo) (Tcl_Obj* pathPtr); \/* 470 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetCwd	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSGetCwd) (Tcl_Interp * interp); \/* 457 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetFileSystemForPath	/usr/include/tclDecls.h	/^    Tcl_Filesystem* (*tcl_FSGetFileSystemForPath) (Tcl_Obj* pathPtr); \/* 477 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetInternalRep	/usr/include/tclDecls.h	/^    ClientData (*tcl_FSGetInternalRep) (Tcl_Obj* pathPtr, Tcl_Filesystem * fsPtr); \/* 465 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetNativePath	/usr/include/tclDecls.h	/^    CONST char* (*tcl_FSGetNativePath) (Tcl_Obj* pathPtr); \/* 469 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetNormalizedPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSGetNormalizedPath) (Tcl_Interp * interp, Tcl_Obj* pathPtr); \/* 463 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetPathType	/usr/include/tclDecls.h	/^    Tcl_PathType (*tcl_FSGetPathType) (Tcl_Obj * pathPtr); \/* 478 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetTranslatedPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSGetTranslatedPath) (Tcl_Interp * interp, Tcl_Obj* pathPtr); \/* 466 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSGetTranslatedStringPath	/usr/include/tclDecls.h	/^    CONST char* (*tcl_FSGetTranslatedStringPath) (Tcl_Interp * interp, Tcl_Obj* pathPtr); \/* 476 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSJoinPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSJoinPath) (Tcl_Obj * listObj, int elements); \/* 460 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSJoinToPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSJoinToPath) (Tcl_Obj * pathPtr, int objc, Tcl_Obj *CONST objv[]); \/* 464 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSLink	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_FSLink) (Tcl_Obj * pathPtr, Tcl_Obj * toPtr, int linkAction); \/* 446 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSListVolumes	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSListVolumes) (void); \/* 472 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSLoadFile	/usr/include/tclDecls.h	/^    int (*tcl_FSLoadFile) (Tcl_Interp * interp, Tcl_Obj * pathPtr, CONST char * sym1, CONST char * sym2, Tcl_PackageInitProc ** proc1Ptr, Tcl_PackageInitProc ** proc2Ptr, Tcl_LoadHandle * handlePtr, Tcl_FSUnloadFileProc ** unloadProcPtr); \/* 444 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSLstat	/usr/include/tclDecls.h	/^    int (*tcl_FSLstat) (Tcl_Obj * pathPtr, Tcl_StatBuf * buf); \/* 449 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSMatchInDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSMatchInDirectory) (Tcl_Interp * interp, Tcl_Obj * result, Tcl_Obj * pathPtr, CONST char * pattern, Tcl_GlobTypeData * types); \/* 445 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSMountsChanged	/usr/include/tclDecls.h	/^    void (*tcl_FSMountsChanged) (Tcl_Filesystem * fsPtr); \/* 480 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSNewNativePath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSNewNativePath) (Tcl_Filesystem* fromFilesystem, ClientData clientData); \/* 468 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSOpenFileChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_FSOpenFileChannel) (Tcl_Interp * interp, Tcl_Obj * pathPtr, CONST char * modeString, int permissions); \/* 456 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSPathSeparator	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSPathSeparator) (Tcl_Obj* pathPtr); \/* 471 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSRegister	/usr/include/tclDecls.h	/^    int (*tcl_FSRegister) (ClientData clientData, Tcl_Filesystem * fsPtr); \/* 473 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSRemoveDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSRemoveDirectory) (Tcl_Obj * pathPtr, int recursive, Tcl_Obj ** errorPtr); \/* 447 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSRenameFile	/usr/include/tclDecls.h	/^    int (*tcl_FSRenameFile) (Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr); \/* 448 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSSplitPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSSplitPath) (Tcl_Obj* pathPtr, int * lenPtr); \/* 461 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSStat	/usr/include/tclDecls.h	/^    int (*tcl_FSStat) (Tcl_Obj * pathPtr, Tcl_StatBuf * buf); \/* 454 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSUnregister	/usr/include/tclDecls.h	/^    int (*tcl_FSUnregister) (Tcl_Filesystem * fsPtr); \/* 474 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FSUtime	/usr/include/tclDecls.h	/^    int (*tcl_FSUtime) (Tcl_Obj * pathPtr, struct utimbuf * tval); \/* 450 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Finalize	/usr/include/tclDecls.h	/^    void (*tcl_Finalize) (void); \/* 143 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FinalizeNotifier	/usr/include/tclDecls.h	/^    void (*tcl_FinalizeNotifier) (ClientData clientData); \/* 298 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FinalizeThread	/usr/include/tclDecls.h	/^    void (*tcl_FinalizeThread) (void); \/* 297 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FindCommand	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_FindCommand) (Tcl_Interp * interp, CONST char * name, Tcl_Namespace * contextNsPtr, int flags); \/* 515 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FindEnsemble	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_FindEnsemble) (Tcl_Interp * interp, Tcl_Obj * cmdNameObj, int flags); \/* 542 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FindExecutable	/usr/include/tclDecls.h	/^    void (*tcl_FindExecutable) (CONST char * argv0); \/* 144 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FindHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_FindHashEntry) (Tcl_HashTable * tablePtr, CONST char * key); \/* 421 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FindNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_FindNamespace) (Tcl_Interp * interp, CONST char * name, Tcl_Namespace * contextNsPtr, int flags); \/* 514 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FirstHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_FirstHashEntry) (Tcl_HashTable * tablePtr, Tcl_HashSearch * searchPtr); \/* 145 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Flush	/usr/include/tclDecls.h	/^    int (*tcl_Flush) (Tcl_Channel chan); \/* 146 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ForgetImport	/usr/include/tclDecls.h	/^    int (*tcl_ForgetImport) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern); \/* 511 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Format	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_Format) (Tcl_Interp * interp, CONST char * format, int objc, Tcl_Obj * CONST objv[]); \/* 576 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Free	/usr/include/tclDecls.h	/^    void (*tcl_Free) (char * ptr); \/* 4 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FreeEncoding	/usr/include/tclDecls.h	/^    void (*tcl_FreeEncoding) (Tcl_Encoding encoding); \/* 299 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FreeParse	/usr/include/tclDecls.h	/^    void (*tcl_FreeParse) (Tcl_Parse * parsePtr); \/* 358 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_FreeResult	/usr/include/tclDecls.h	/^    void (*tcl_FreeResult) (Tcl_Interp * interp); \/* 147 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetAlias	/usr/include/tclDecls.h	/^    int (*tcl_GetAlias) (Tcl_Interp * interp, CONST char * slaveCmd, Tcl_Interp ** targetInterpPtr, CONST84 char ** targetCmdPtr, int * argcPtr, CONST84 char *** argvPtr); \/* 148 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetAliasObj	/usr/include/tclDecls.h	/^    int (*tcl_GetAliasObj) (Tcl_Interp * interp, CONST char * slaveCmd, Tcl_Interp ** targetInterpPtr, CONST84 char ** targetCmdPtr, int * objcPtr, Tcl_Obj *** objv); \/* 149 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetAllocMutex	/usr/include/tclDecls.h	/^    Tcl_Mutex * (*tcl_GetAllocMutex) (void); \/* 387 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetAssocData	/usr/include/tclDecls.h	/^    ClientData (*tcl_GetAssocData) (Tcl_Interp * interp, CONST char * name, Tcl_InterpDeleteProc ** procPtr); \/* 150 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetBignumFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetBignumFromObj) (Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value); \/* 558 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetBoolean	/usr/include/tclDecls.h	/^    int (*tcl_GetBoolean) (Tcl_Interp * interp, CONST char * src, int * boolPtr); \/* 31 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetBooleanFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetBooleanFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * boolPtr); \/* 32 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetByteArrayFromObj	/usr/include/tclDecls.h	/^    unsigned char * (*tcl_GetByteArrayFromObj) (Tcl_Obj * objPtr, int * lengthPtr); \/* 33 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetChannel) (Tcl_Interp * interp, CONST char * chanName, int * modePtr); \/* 151 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelBufferSize	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelBufferSize) (Tcl_Channel chan); \/* 152 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelError	/usr/include/tclDecls.h	/^    void (*tcl_GetChannelError) (Tcl_Channel chan, Tcl_Obj** msg); \/* 565 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelErrorInterp	/usr/include/tclDecls.h	/^    void (*tcl_GetChannelErrorInterp) (Tcl_Interp* interp, Tcl_Obj** msg); \/* 563 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelHandle	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelHandle) (Tcl_Channel chan, int direction, ClientData * handlePtr); \/* 153 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelInstanceData	/usr/include/tclDecls.h	/^    ClientData (*tcl_GetChannelInstanceData) (Tcl_Channel chan); \/* 154 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelMode	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelMode) (Tcl_Channel chan); \/* 155 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetChannelName) (Tcl_Channel chan); \/* 156 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelNames	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelNames) (Tcl_Interp * interp); \/* 388 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelNamesEx	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelNamesEx) (Tcl_Interp * interp, CONST char * pattern); \/* 389 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelOption	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelOption) (Tcl_Interp * interp, Tcl_Channel chan, CONST char * optionName, Tcl_DString * dsPtr); \/* 157 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelThread	/usr/include/tclDecls.h	/^    Tcl_ThreadId (*tcl_GetChannelThread) (Tcl_Channel channel); \/* 433 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetChannelType	/usr/include/tclDecls.h	/^    Tcl_ChannelType * (*tcl_GetChannelType) (Tcl_Channel chan); \/* 158 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCharLength	/usr/include/tclDecls.h	/^    int (*tcl_GetCharLength) (Tcl_Obj * objPtr); \/* 380 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCommandFromObj	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_GetCommandFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 516 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCommandFullName	/usr/include/tclDecls.h	/^    void (*tcl_GetCommandFullName) (Tcl_Interp * interp, Tcl_Command command, Tcl_Obj * objPtr); \/* 517 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCommandInfo	/usr/include/tclDecls.h	/^    int (*tcl_GetCommandInfo) (Tcl_Interp * interp, CONST char * cmdName, Tcl_CmdInfo * infoPtr); \/* 159 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCommandInfoFromToken	/usr/include/tclDecls.h	/^    int (*tcl_GetCommandInfoFromToken) (Tcl_Command token, Tcl_CmdInfo* infoPtr); \/* 484 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCommandName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetCommandName) (Tcl_Interp * interp, Tcl_Command command); \/* 160 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCurrentNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_GetCurrentNamespace) (Tcl_Interp * interp); \/* 512 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCurrentThread	/usr/include/tclDecls.h	/^    Tcl_ThreadId (*tcl_GetCurrentThread) (void); \/* 300 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetCwd	/usr/include/tclDecls.h	/^    char * (*tcl_GetCwd) (Tcl_Interp * interp, Tcl_DString * cwdPtr); \/* 365 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetDefaultEncodingDir	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetDefaultEncodingDir) (void); \/* 341 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetDouble	/usr/include/tclDecls.h	/^    int (*tcl_GetDouble) (Tcl_Interp * interp, CONST char * src, double * doublePtr); \/* 34 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetDoubleFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetDoubleFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, double * doublePtr); \/* 35 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEncoding	/usr/include/tclDecls.h	/^    Tcl_Encoding (*tcl_GetEncoding) (Tcl_Interp * interp, CONST char * name); \/* 301 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEncodingFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetEncodingFromObj) (Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Encoding* encodingPtr); \/* 569 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEncodingName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetEncodingName) (Tcl_Encoding encoding); \/* 302 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEncodingNameFromEnvironment	/usr/include/tclDecls.h	/^    CONST char * (*tcl_GetEncodingNameFromEnvironment) (Tcl_DString* bufPtr); \/* 572 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEncodingNames	/usr/include/tclDecls.h	/^    void (*tcl_GetEncodingNames) (Tcl_Interp * interp); \/* 303 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEncodingSearchPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_GetEncodingSearchPath) (void); \/* 570 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEnsembleFlags	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleFlags) (Tcl_Interp * interp, Tcl_Command token, int * flagsPtr); \/* 550 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEnsembleMappingDict	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleMappingDict) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** mapDictPtr); \/* 548 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEnsembleNamespace	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleNamespace) (Tcl_Interp * interp, Tcl_Command token, Tcl_Namespace ** namespacePtrPtr); \/* 551 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEnsembleSubcommandList	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleSubcommandList) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** subcmdListPtr); \/* 547 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleUnknownHandler) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** unknownListPtr); \/* 549 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetErrno	/usr/include/tclDecls.h	/^    int (*tcl_GetErrno) (void); \/* 161 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetGlobalNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_GetGlobalNamespace) (Tcl_Interp * interp); \/* 513 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetHostName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetHostName) (void); \/* 162 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetIndexFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetIndexFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, CONST84 char ** tablePtr, CONST char * msg, int flags, int * indexPtr); \/* 36 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetIndexFromObjStruct	/usr/include/tclDecls.h	/^    int (*tcl_GetIndexFromObjStruct) (Tcl_Interp * interp, Tcl_Obj * objPtr, CONST VOID * tablePtr, int offset, CONST char * msg, int flags, int * indexPtr); \/* 304 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetInt	/usr/include/tclDecls.h	/^    int (*tcl_GetInt) (Tcl_Interp * interp, CONST char * src, int * intPtr); \/* 37 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetIntFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetIntFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * intPtr); \/* 38 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetInterpPath	/usr/include/tclDecls.h	/^    int (*tcl_GetInterpPath) (Tcl_Interp * askInterp, Tcl_Interp * slaveInterp); \/* 163 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetLongFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetLongFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, long * longPtr); \/* 39 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetMaster	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_GetMaster) (Tcl_Interp * interp); \/* 164 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetMathFuncInfo	/usr/include/tclDecls.h	/^    int (*tcl_GetMathFuncInfo) (Tcl_Interp * interp, CONST char * name, int * numArgsPtr, Tcl_ValueType ** argTypesPtr, Tcl_MathProc ** procPtr, ClientData * clientDataPtr); \/* 435 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetNameOfExecutable	/usr/include/tclDecls.h	/^    CONST char * (*tcl_GetNameOfExecutable) (void); \/* 165 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetNamespaceUnknownHandler) (Tcl_Interp * interp, Tcl_Namespace * nsPtr); \/* 567 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetObjResult	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetObjResult) (Tcl_Interp * interp); \/* 166 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetObjType	/usr/include/tclDecls.h	/^    Tcl_ObjType * (*tcl_GetObjType) (CONST char * typeName); \/* 40 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetOpenFile	/usr/include/tclDecls.h	/^    int (*tcl_GetOpenFile) (Tcl_Interp * interp, CONST char * chanID, int forWriting, int checkUsage, ClientData * filePtr); \/* 167 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetPathType	/usr/include/tclDecls.h	/^    Tcl_PathType (*tcl_GetPathType) (CONST char * path); \/* 168 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetRange	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetRange) (Tcl_Obj * objPtr, int first, int last); \/* 383 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetRegExpFromObj	/usr/include/tclDecls.h	/^    Tcl_RegExp (*tcl_GetRegExpFromObj) (Tcl_Interp * interp, Tcl_Obj * patObj, int flags); \/* 356 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetReturnOptions	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetReturnOptions) (Tcl_Interp * interp, int result); \/* 539 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetServiceMode	/usr/include/tclDecls.h	/^    int (*tcl_GetServiceMode) (void); \/* 171 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetSlave	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_GetSlave) (Tcl_Interp * interp, CONST char * slaveName); \/* 172 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetStackedChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetStackedChannel) (Tcl_Channel chan); \/* 283 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetStdChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetStdChannel) (int type); \/* 173 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetString	/usr/include/tclDecls.h	/^    char * (*tcl_GetString) (Tcl_Obj * objPtr); \/* 340 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetStringFromObj	/usr/include/tclDecls.h	/^    char * (*tcl_GetStringFromObj) (Tcl_Obj * objPtr, int * lengthPtr); \/* 41 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetStringResult	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetStringResult) (Tcl_Interp * interp); \/* 174 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetThreadData	/usr/include/tclDecls.h	/^    VOID * (*tcl_GetThreadData) (Tcl_ThreadDataKey * keyPtr, int size); \/* 305 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetTime	/usr/include/tclDecls.h	/^    void (*tcl_GetTime) (Tcl_Time* timeBuf); \/* 482 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetTopChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetTopChannel) (Tcl_Channel chan); \/* 396 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetUniChar	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_GetUniChar) (Tcl_Obj * objPtr, int index); \/* 381 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetUnicode	/usr/include/tclDecls.h	/^    Tcl_UniChar * (*tcl_GetUnicode) (Tcl_Obj * objPtr); \/* 382 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetUnicodeFromObj	/usr/include/tclDecls.h	/^    Tcl_UniChar * (*tcl_GetUnicodeFromObj) (Tcl_Obj * objPtr, int * lengthPtr); \/* 434 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetVar	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetVar) (Tcl_Interp * interp, CONST char * varName, int flags); \/* 175 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetVar2	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags); \/* 176 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetVar2Ex	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetVar2Ex) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags); \/* 306 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetVersion	/usr/include/tclDecls.h	/^    void (*tcl_GetVersion) (int * major, int * minor, int * patchLevel, int * type); \/* 279 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetWideIntFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetWideIntFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_WideInt * widePtr); \/* 487 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Gets	/usr/include/tclDecls.h	/^    int (*tcl_Gets) (Tcl_Channel chan, Tcl_DString * dsPtr); \/* 169 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GetsObj	/usr/include/tclDecls.h	/^    int (*tcl_GetsObj) (Tcl_Channel chan, Tcl_Obj * objPtr); \/* 170 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GlobalEval	/usr/include/tclDecls.h	/^    int (*tcl_GlobalEval) (Tcl_Interp * interp, CONST char * command); \/* 177 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_GlobalEvalObj	/usr/include/tclDecls.h	/^    int (*tcl_GlobalEvalObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 178 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_HashStats	/usr/include/tclDecls.h	/^    char * (*tcl_HashStats) (Tcl_HashTable * tablePtr); \/* 269 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_HideCommand	/usr/include/tclDecls.h	/^    int (*tcl_HideCommand) (Tcl_Interp * interp, CONST char * cmdName, CONST char * hiddenCmdToken); \/* 179 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Import	/usr/include/tclDecls.h	/^    int (*tcl_Import) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern, int allowOverwrite); \/* 510 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Init	/usr/include/tclDecls.h	/^    int (*tcl_Init) (Tcl_Interp * interp); \/* 180 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InitBignumFromDouble	/usr/include/tclDecls.h	/^    int (*tcl_InitBignumFromDouble) (Tcl_Interp* interp, double initval, mp_int * toInit); \/* 566 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InitCustomHashTable	/usr/include/tclDecls.h	/^    void (*tcl_InitCustomHashTable) (Tcl_HashTable * tablePtr, int keyType, Tcl_HashKeyType * typePtr); \/* 423 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InitHashTable	/usr/include/tclDecls.h	/^    void (*tcl_InitHashTable) (Tcl_HashTable * tablePtr, int keyType); \/* 181 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InitMemory	/usr/include/tclDecls.h	/^    void (*tcl_InitMemory) (Tcl_Interp * interp); \/* 280 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InitNotifier	/usr/include/tclDecls.h	/^    ClientData (*tcl_InitNotifier) (void); \/* 307 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InitObjHashTable	/usr/include/tclDecls.h	/^    void (*tcl_InitObjHashTable) (Tcl_HashTable * tablePtr); \/* 424 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InputBlocked	/usr/include/tclDecls.h	/^    int (*tcl_InputBlocked) (Tcl_Channel chan); \/* 182 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InputBuffered	/usr/include/tclDecls.h	/^    int (*tcl_InputBuffered) (Tcl_Channel chan); \/* 183 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InterpDeleted	/usr/include/tclDecls.h	/^    int (*tcl_InterpDeleted) (Tcl_Interp * interp); \/* 184 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_InvalidateStringRep	/usr/include/tclDecls.h	/^    void (*tcl_InvalidateStringRep) (Tcl_Obj * objPtr); \/* 42 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_IsChannelExisting	/usr/include/tclDecls.h	/^    int (*tcl_IsChannelExisting) (CONST char* channelName); \/* 418 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_IsChannelRegistered	/usr/include/tclDecls.h	/^    int (*tcl_IsChannelRegistered) (Tcl_Interp* interp, Tcl_Channel channel); \/* 414 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_IsChannelShared	/usr/include/tclDecls.h	/^    int (*tcl_IsChannelShared) (Tcl_Channel channel); \/* 413 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_IsEnsemble	/usr/include/tclDecls.h	/^    int (*tcl_IsEnsemble) (Tcl_Command token); \/* 540 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_IsSafe	/usr/include/tclDecls.h	/^    int (*tcl_IsSafe) (Tcl_Interp * interp); \/* 185 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_IsStandardChannel	/usr/include/tclDecls.h	/^    int (*tcl_IsStandardChannel) (Tcl_Channel channel); \/* 439 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_JoinPath	/usr/include/tclDecls.h	/^    char * (*tcl_JoinPath) (int argc, CONST84 char * CONST * argv, Tcl_DString * resultPtr); \/* 186 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_JoinThread	/usr/include/tclDecls.h	/^    int (*tcl_JoinThread) (Tcl_ThreadId threadId, int* result); \/* 412 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitAddHandler	/usr/include/tclDecls.h	/^    void (*tcl_LimitAddHandler) (Tcl_Interp * interp, int type, Tcl_LimitHandlerProc * handlerProc, ClientData clientData, Tcl_LimitHandlerDeleteProc * deleteProc); \/* 520 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitCheck	/usr/include/tclDecls.h	/^    int (*tcl_LimitCheck) (Tcl_Interp * interp); \/* 523 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitExceeded	/usr/include/tclDecls.h	/^    int (*tcl_LimitExceeded) (Tcl_Interp * interp); \/* 524 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitGetCommands	/usr/include/tclDecls.h	/^    int (*tcl_LimitGetCommands) (Tcl_Interp * interp); \/* 532 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitGetGranularity	/usr/include/tclDecls.h	/^    int (*tcl_LimitGetGranularity) (Tcl_Interp * interp, int type); \/* 534 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitGetTime	/usr/include/tclDecls.h	/^    void (*tcl_LimitGetTime) (Tcl_Interp * interp, Tcl_Time * timeLimitPtr); \/* 533 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitReady	/usr/include/tclDecls.h	/^    int (*tcl_LimitReady) (Tcl_Interp * interp); \/* 522 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitRemoveHandler	/usr/include/tclDecls.h	/^    void (*tcl_LimitRemoveHandler) (Tcl_Interp * interp, int type, Tcl_LimitHandlerProc * handlerProc, ClientData clientData); \/* 521 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitSetCommands	/usr/include/tclDecls.h	/^    void (*tcl_LimitSetCommands) (Tcl_Interp * interp, int commandLimit); \/* 525 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitSetGranularity	/usr/include/tclDecls.h	/^    void (*tcl_LimitSetGranularity) (Tcl_Interp * interp, int type, int granularity); \/* 527 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitSetTime	/usr/include/tclDecls.h	/^    void (*tcl_LimitSetTime) (Tcl_Interp * interp, Tcl_Time * timeLimitPtr); \/* 526 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitTypeEnabled	/usr/include/tclDecls.h	/^    int (*tcl_LimitTypeEnabled) (Tcl_Interp * interp, int type); \/* 528 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitTypeExceeded	/usr/include/tclDecls.h	/^    int (*tcl_LimitTypeExceeded) (Tcl_Interp * interp, int type); \/* 529 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitTypeReset	/usr/include/tclDecls.h	/^    void (*tcl_LimitTypeReset) (Tcl_Interp * interp, int type); \/* 531 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LimitTypeSet	/usr/include/tclDecls.h	/^    void (*tcl_LimitTypeSet) (Tcl_Interp * interp, int type); \/* 530 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LinkVar	/usr/include/tclDecls.h	/^    int (*tcl_LinkVar) (Tcl_Interp * interp, CONST char * varName, char * addr, int type); \/* 187 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListMathFuncs	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ListMathFuncs) (Tcl_Interp * interp, CONST char * pattern); \/* 436 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListObjAppendElement	/usr/include/tclDecls.h	/^    int (*tcl_ListObjAppendElement) (Tcl_Interp * interp, Tcl_Obj * listPtr, Tcl_Obj * objPtr); \/* 44 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListObjAppendList	/usr/include/tclDecls.h	/^    int (*tcl_ListObjAppendList) (Tcl_Interp * interp, Tcl_Obj * listPtr, Tcl_Obj * elemListPtr); \/* 43 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListObjGetElements	/usr/include/tclDecls.h	/^    int (*tcl_ListObjGetElements) (Tcl_Interp * interp, Tcl_Obj * listPtr, int * objcPtr, Tcl_Obj *** objvPtr); \/* 45 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListObjIndex	/usr/include/tclDecls.h	/^    int (*tcl_ListObjIndex) (Tcl_Interp * interp, Tcl_Obj * listPtr, int index, Tcl_Obj ** objPtrPtr); \/* 46 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListObjLength	/usr/include/tclDecls.h	/^    int (*tcl_ListObjLength) (Tcl_Interp * interp, Tcl_Obj * listPtr, int * lengthPtr); \/* 47 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ListObjReplace	/usr/include/tclDecls.h	/^    int (*tcl_ListObjReplace) (Tcl_Interp * interp, Tcl_Obj * listPtr, int first, int count, int objc, Tcl_Obj *CONST objv[]); \/* 48 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_LogCommandInfo	/usr/include/tclDecls.h	/^    void (*tcl_LogCommandInfo) (Tcl_Interp * interp, CONST char * script, CONST char * command, int length); \/* 359 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_MakeFileChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_MakeFileChannel) (ClientData handle, int mode); \/* 189 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_MakeSafe	/usr/include/tclDecls.h	/^    int (*tcl_MakeSafe) (Tcl_Interp * interp); \/* 190 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_MakeTcpClientChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_MakeTcpClientChannel) (ClientData tcpSocket); \/* 191 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Merge	/usr/include/tclDecls.h	/^    char * (*tcl_Merge) (int argc, CONST84 char * CONST * argv); \/* 192 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_MutexFinalize	/usr/include/tclDecls.h	/^    void (*tcl_MutexFinalize) (Tcl_Mutex * mutex); \/* 392 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_MutexLock	/usr/include/tclDecls.h	/^    void (*tcl_MutexLock) (Tcl_Mutex * mutexPtr); \/* 308 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_MutexUnlock	/usr/include/tclDecls.h	/^    void (*tcl_MutexUnlock) (Tcl_Mutex * mutexPtr); \/* 309 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewBignumObj	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_NewBignumObj) (mp_int* value); \/* 555 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewBooleanObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewBooleanObj) (int boolValue); \/* 49 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewByteArrayObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewByteArrayObj) (CONST unsigned char* bytes, int length); \/* 50 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewDictObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewDictObj) (void); \/* 503 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewDoubleObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewDoubleObj) (double doubleValue); \/* 51 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewIntObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewIntObj) (int intValue); \/* 52 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewListObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewListObj) (int objc, Tcl_Obj *CONST objv[]); \/* 53 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewLongObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewLongObj) (long longValue); \/* 54 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewObj) (void); \/* 55 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewStringObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewStringObj) (CONST char * bytes, int length); \/* 56 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewUnicodeObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewUnicodeObj) (CONST Tcl_UniChar * unicode, int numChars); \/* 378 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NewWideIntObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewWideIntObj) (Tcl_WideInt wideValue); \/* 488 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NextHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_NextHashEntry) (Tcl_HashSearch * searchPtr); \/* 193 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NotifyChannel	/usr/include/tclDecls.h	/^    void (*tcl_NotifyChannel) (Tcl_Channel channel, int mask); \/* 194 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_NumUtfChars	/usr/include/tclDecls.h	/^    int (*tcl_NumUtfChars) (CONST char * src, int length); \/* 312 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ObjGetVar2	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjGetVar2) (Tcl_Interp * interp, Tcl_Obj * part1Ptr, Tcl_Obj * part2Ptr, int flags); \/* 195 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ObjPrintf	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjPrintf) (CONST char * format, ...); \/* 578 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ObjSetVar2	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjSetVar2) (Tcl_Interp * interp, Tcl_Obj * part1Ptr, Tcl_Obj * part2Ptr, Tcl_Obj * newValuePtr, int flags); \/* 196 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_OpenCommandChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenCommandChannel) (Tcl_Interp * interp, int argc, CONST84 char ** argv, int flags); \/* 197 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_OpenFileChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenFileChannel) (Tcl_Interp * interp, CONST char * fileName, CONST char * modeString, int permissions); \/* 198 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_OpenTcpClient	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpClient) (Tcl_Interp * interp, int port, CONST char * address, CONST char * myaddr, int myport, int async); \/* 199 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_OpenTcpServer	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpServer) (Tcl_Interp * interp, int port, CONST char * host, Tcl_TcpAcceptProc * acceptProc, ClientData callbackData); \/* 200 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_OutputBuffered	/usr/include/tclDecls.h	/^    int (*tcl_OutputBuffered) (Tcl_Channel chan); \/* 479 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Panic	/usr/include/tclDecls.h	/^    void (*tcl_Panic) (CONST char * format, ...); \/* 2 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PanicVA	/usr/include/tclDecls.h	/^    void (*tcl_PanicVA) (CONST char * format, va_list argList); \/* 278 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ParseBraces	/usr/include/tclDecls.h	/^    int (*tcl_ParseBraces) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append, CONST84 char ** termPtr); \/* 360 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ParseCommand	/usr/include/tclDecls.h	/^    int (*tcl_ParseCommand) (Tcl_Interp * interp, CONST char * start, int numBytes, int nested, Tcl_Parse * parsePtr); \/* 361 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ParseExpr	/usr/include/tclDecls.h	/^    int (*tcl_ParseExpr) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr); \/* 362 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ParseQuotedString	/usr/include/tclDecls.h	/^    int (*tcl_ParseQuotedString) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append, CONST84 char ** termPtr); \/* 363 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ParseVar	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ParseVar) (Tcl_Interp * interp, CONST char * start, CONST84 char ** termPtr); \/* 270 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ParseVarName	/usr/include/tclDecls.h	/^    int (*tcl_ParseVarName) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append); \/* 364 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgPresent	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgPresent) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact); \/* 271 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgPresentEx	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgPresentEx) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact, ClientData * clientDataPtr); \/* 272 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgProvide	/usr/include/tclDecls.h	/^    int (*tcl_PkgProvide) (Tcl_Interp * interp, CONST char * name, CONST char * version); \/* 273 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgProvideEx	/usr/include/tclDecls.h	/^    int (*tcl_PkgProvideEx) (Tcl_Interp* interp, CONST char* name, CONST char* version, ClientData clientData); \/* 0 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgRequire	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgRequire) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact); \/* 274 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgRequireEx	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgRequireEx) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact, ClientData * clientDataPtr); \/* 1 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PkgRequireProc	/usr/include/tclDecls.h	/^    int (*tcl_PkgRequireProc) (Tcl_Interp * interp, CONST char * name, int objc, Tcl_Obj *CONST objv[], ClientData * clientDataPtr); \/* 573 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PosixError	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PosixError) (Tcl_Interp * interp); \/* 204 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Preserve	/usr/include/tclDecls.h	/^    void (*tcl_Preserve) (ClientData data); \/* 201 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PrintDouble	/usr/include/tclDecls.h	/^    void (*tcl_PrintDouble) (Tcl_Interp * interp, double value, char * dst); \/* 202 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ProcObjCmd	/usr/include/tclDecls.h	/^    int (*tcl_ProcObjCmd) (ClientData clientData, Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[]); \/* 390 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_PutEnv	/usr/include/tclDecls.h	/^    int (*tcl_PutEnv) (CONST char * assignment); \/* 203 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_QueryTimeProc	/usr/include/tclDecls.h	/^    void (*tcl_QueryTimeProc) (Tcl_GetTimeProc** getProc, Tcl_ScaleTimeProc** scaleProc, ClientData* clientData); \/* 553 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_QueueEvent	/usr/include/tclDecls.h	/^    void (*tcl_QueueEvent) (Tcl_Event * evPtr, Tcl_QueuePosition position); \/* 205 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Read	/usr/include/tclDecls.h	/^    int (*tcl_Read) (Tcl_Channel chan, char * bufPtr, int toRead); \/* 206 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ReadChars	/usr/include/tclDecls.h	/^    int (*tcl_ReadChars) (Tcl_Channel channel, Tcl_Obj * objPtr, int charsToRead, int appendFlag); \/* 313 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ReadRaw	/usr/include/tclDecls.h	/^    int (*tcl_ReadRaw) (Tcl_Channel chan, char * dst, int bytesToRead); \/* 394 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Realloc	/usr/include/tclDecls.h	/^    char * (*tcl_Realloc) (char * ptr, unsigned int size); \/* 5 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ReapDetachedProcs	/usr/include/tclDecls.h	/^    void (*tcl_ReapDetachedProcs) (void); \/* 207 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RecordAndEval	/usr/include/tclDecls.h	/^    int (*tcl_RecordAndEval) (Tcl_Interp * interp, CONST char * cmd, int flags); \/* 208 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RecordAndEvalObj	/usr/include/tclDecls.h	/^    int (*tcl_RecordAndEvalObj) (Tcl_Interp * interp, Tcl_Obj * cmdPtr, int flags); \/* 209 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpCompile	/usr/include/tclDecls.h	/^    Tcl_RegExp (*tcl_RegExpCompile) (Tcl_Interp * interp, CONST char * pattern); \/* 212 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpExec	/usr/include/tclDecls.h	/^    int (*tcl_RegExpExec) (Tcl_Interp * interp, Tcl_RegExp regexp, CONST char * text, CONST char * start); \/* 213 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpExecObj	/usr/include/tclDecls.h	/^    int (*tcl_RegExpExecObj) (Tcl_Interp * interp, Tcl_RegExp regexp, Tcl_Obj * textObj, int offset, int nmatches, int flags); \/* 376 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpGetInfo	/usr/include/tclDecls.h	/^    void (*tcl_RegExpGetInfo) (Tcl_RegExp regexp, Tcl_RegExpInfo * infoPtr); \/* 377 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpMatch	/usr/include/tclDecls.h	/^    int (*tcl_RegExpMatch) (Tcl_Interp * interp, CONST char * text, CONST char * pattern); \/* 214 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpMatchObj	/usr/include/tclDecls.h	/^    int (*tcl_RegExpMatchObj) (Tcl_Interp * interp, Tcl_Obj * textObj, Tcl_Obj * patternObj); \/* 385 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegExpRange	/usr/include/tclDecls.h	/^    void (*tcl_RegExpRange) (Tcl_RegExp regexp, int index, CONST84 char ** startPtr, CONST84 char ** endPtr); \/* 215 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegisterChannel	/usr/include/tclDecls.h	/^    void (*tcl_RegisterChannel) (Tcl_Interp * interp, Tcl_Channel chan); \/* 210 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegisterConfig	/usr/include/tclDecls.h	/^    void (*tcl_RegisterConfig) (Tcl_Interp* interp, CONST char* pkgName, Tcl_Config* configuration, CONST char* valEncoding); \/* 505 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RegisterObjType	/usr/include/tclDecls.h	/^    void (*tcl_RegisterObjType) (Tcl_ObjType * typePtr); \/* 211 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Release	/usr/include/tclDecls.h	/^    void (*tcl_Release) (ClientData clientData); \/* 216 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ResetResult	/usr/include/tclDecls.h	/^    void (*tcl_ResetResult) (Tcl_Interp * interp); \/* 217 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RestoreInterpState	/usr/include/tclDecls.h	/^    int (*tcl_RestoreInterpState) (Tcl_Interp * interp, Tcl_InterpState state); \/* 536 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_RestoreResult	/usr/include/tclDecls.h	/^    void (*tcl_RestoreResult) (Tcl_Interp * interp, Tcl_SavedResult * statePtr); \/* 314 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SaveInterpState	/usr/include/tclDecls.h	/^    Tcl_InterpState (*tcl_SaveInterpState) (Tcl_Interp * interp, int status); \/* 535 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SaveResult	/usr/include/tclDecls.h	/^    void (*tcl_SaveResult) (Tcl_Interp * interp, Tcl_SavedResult * statePtr); \/* 315 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ScanCountedElement	/usr/include/tclDecls.h	/^    int (*tcl_ScanCountedElement) (CONST char * str, int length, int * flagPtr); \/* 219 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ScanElement	/usr/include/tclDecls.h	/^    int (*tcl_ScanElement) (CONST char * str, int * flagPtr); \/* 218 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Seek	/usr/include/tclDecls.h	/^    Tcl_WideInt (*tcl_Seek) (Tcl_Channel chan, Tcl_WideInt offset, int mode); \/* 491 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SeekOld	/usr/include/tclDecls.h	/^    int (*tcl_SeekOld) (Tcl_Channel chan, int offset, int mode); \/* 220 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ServiceAll	/usr/include/tclDecls.h	/^    int (*tcl_ServiceAll) (void); \/* 221 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ServiceEvent	/usr/include/tclDecls.h	/^    int (*tcl_ServiceEvent) (int flags); \/* 222 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ServiceModeHook	/usr/include/tclDecls.h	/^    void (*tcl_ServiceModeHook) (int mode); \/* 344 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetAssocData	/usr/include/tclDecls.h	/^    void (*tcl_SetAssocData) (Tcl_Interp * interp, CONST char * name, Tcl_InterpDeleteProc * proc, ClientData clientData); \/* 223 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetBignumObj	/usr/include/tclDecls.h	/^    void (*tcl_SetBignumObj) (Tcl_Obj* obj, mp_int* value); \/* 557 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetBooleanObj	/usr/include/tclDecls.h	/^    void (*tcl_SetBooleanObj) (Tcl_Obj * objPtr, int boolValue); \/* 57 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetByteArrayLength	/usr/include/tclDecls.h	/^    unsigned char * (*tcl_SetByteArrayLength) (Tcl_Obj * objPtr, int length); \/* 58 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetByteArrayObj	/usr/include/tclDecls.h	/^    void (*tcl_SetByteArrayObj) (Tcl_Obj * objPtr, CONST unsigned char * bytes, int length); \/* 59 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetChannelBufferSize	/usr/include/tclDecls.h	/^    void (*tcl_SetChannelBufferSize) (Tcl_Channel chan, int sz); \/* 224 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetChannelError	/usr/include/tclDecls.h	/^    void (*tcl_SetChannelError) (Tcl_Channel chan, Tcl_Obj* msg); \/* 564 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetChannelErrorInterp	/usr/include/tclDecls.h	/^    void (*tcl_SetChannelErrorInterp) (Tcl_Interp* interp, Tcl_Obj* msg); \/* 562 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetChannelOption	/usr/include/tclDecls.h	/^    int (*tcl_SetChannelOption) (Tcl_Interp * interp, Tcl_Channel chan, CONST char * optionName, CONST char * newValue); \/* 225 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetCommandInfo	/usr/include/tclDecls.h	/^    int (*tcl_SetCommandInfo) (Tcl_Interp * interp, CONST char * cmdName, CONST Tcl_CmdInfo * infoPtr); \/* 226 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetCommandInfoFromToken	/usr/include/tclDecls.h	/^    int (*tcl_SetCommandInfoFromToken) (Tcl_Command token, CONST Tcl_CmdInfo* infoPtr); \/* 485 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetDefaultEncodingDir	/usr/include/tclDecls.h	/^    void (*tcl_SetDefaultEncodingDir) (CONST char * path); \/* 342 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetDoubleObj	/usr/include/tclDecls.h	/^    void (*tcl_SetDoubleObj) (Tcl_Obj * objPtr, double doubleValue); \/* 60 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetEncodingSearchPath	/usr/include/tclDecls.h	/^    int (*tcl_SetEncodingSearchPath) (Tcl_Obj* searchPath); \/* 571 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetEnsembleFlags	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleFlags) (Tcl_Interp * interp, Tcl_Command token, int flags); \/* 546 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetEnsembleMappingDict	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleMappingDict) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * mapDict); \/* 544 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetEnsembleSubcommandList	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleSubcommandList) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * subcmdList); \/* 543 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleUnknownHandler) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * unknownList); \/* 545 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetErrno	/usr/include/tclDecls.h	/^    void (*tcl_SetErrno) (int err); \/* 227 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetErrorCode	/usr/include/tclDecls.h	/^    void (*tcl_SetErrorCode) (Tcl_Interp * interp, ...); \/* 228 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetErrorCodeVA	/usr/include/tclDecls.h	/^    void (*tcl_SetErrorCodeVA) (Tcl_Interp * interp, va_list argList); \/* 275 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetExitProc	/usr/include/tclDecls.h	/^    Tcl_ExitProc * (*tcl_SetExitProc) (Tcl_ExitProc * proc); \/* 519 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetIntObj	/usr/include/tclDecls.h	/^    void (*tcl_SetIntObj) (Tcl_Obj * objPtr, int intValue); \/* 61 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetListObj	/usr/include/tclDecls.h	/^    void (*tcl_SetListObj) (Tcl_Obj * objPtr, int objc, Tcl_Obj *CONST objv[]); \/* 62 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetLongObj	/usr/include/tclDecls.h	/^    void (*tcl_SetLongObj) (Tcl_Obj * objPtr, long longValue); \/* 63 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetMainLoop	/usr/include/tclDecls.h	/^    void (*tcl_SetMainLoop) (Tcl_MainLoopProc * proc); \/* 284 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetMaxBlockTime	/usr/include/tclDecls.h	/^    void (*tcl_SetMaxBlockTime) (Tcl_Time * timePtr); \/* 229 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^    int (*tcl_SetNamespaceUnknownHandler) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, Tcl_Obj * handlerPtr); \/* 568 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetNotifier	/usr/include/tclDecls.h	/^    void (*tcl_SetNotifier) (Tcl_NotifierProcs * notifierProcPtr); \/* 386 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetObjErrorCode	/usr/include/tclDecls.h	/^    void (*tcl_SetObjErrorCode) (Tcl_Interp * interp, Tcl_Obj * errorObjPtr); \/* 234 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetObjLength	/usr/include/tclDecls.h	/^    void (*tcl_SetObjLength) (Tcl_Obj * objPtr, int length); \/* 64 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetObjResult	/usr/include/tclDecls.h	/^    void (*tcl_SetObjResult) (Tcl_Interp * interp, Tcl_Obj * resultObjPtr); \/* 235 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetPanicProc	/usr/include/tclDecls.h	/^    void (*tcl_SetPanicProc) (Tcl_PanicProc * panicProc); \/* 230 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetRecursionLimit	/usr/include/tclDecls.h	/^    int (*tcl_SetRecursionLimit) (Tcl_Interp * interp, int depth); \/* 231 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetResult	/usr/include/tclDecls.h	/^    void (*tcl_SetResult) (Tcl_Interp * interp, char * result, Tcl_FreeProc * freeProc); \/* 232 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetReturnOptions	/usr/include/tclDecls.h	/^    int (*tcl_SetReturnOptions) (Tcl_Interp * interp, Tcl_Obj * options); \/* 538 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetServiceMode	/usr/include/tclDecls.h	/^    int (*tcl_SetServiceMode) (int mode); \/* 233 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetStdChannel	/usr/include/tclDecls.h	/^    void (*tcl_SetStdChannel) (Tcl_Channel channel, int type); \/* 236 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetStringObj	/usr/include/tclDecls.h	/^    void (*tcl_SetStringObj) (Tcl_Obj* objPtr, CONST char* bytes, int length); \/* 65 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetSystemEncoding	/usr/include/tclDecls.h	/^    int (*tcl_SetSystemEncoding) (Tcl_Interp * interp, CONST char * name); \/* 316 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetTimeProc	/usr/include/tclDecls.h	/^    void (*tcl_SetTimeProc) (Tcl_GetTimeProc* getProc, Tcl_ScaleTimeProc* scaleProc, ClientData clientData); \/* 552 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetTimer	/usr/include/tclDecls.h	/^    void (*tcl_SetTimer) (Tcl_Time * timePtr); \/* 11 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetUnicodeObj	/usr/include/tclDecls.h	/^    void (*tcl_SetUnicodeObj) (Tcl_Obj * objPtr, CONST Tcl_UniChar * unicode, int numChars); \/* 379 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetVar	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SetVar) (Tcl_Interp * interp, CONST char * varName, CONST char * newValue, int flags); \/* 237 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetVar2	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SetVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, CONST char * newValue, int flags); \/* 238 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetVar2Ex	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_SetVar2Ex) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, Tcl_Obj * newValuePtr, int flags); \/* 317 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SetWideIntObj	/usr/include/tclDecls.h	/^    void (*tcl_SetWideIntObj) (Tcl_Obj * objPtr, Tcl_WideInt wideValue); \/* 489 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SignalId	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SignalId) (int sig); \/* 239 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SignalMsg	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SignalMsg) (int sig); \/* 240 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Sleep	/usr/include/tclDecls.h	/^    void (*tcl_Sleep) (int ms); \/* 12 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SourceRCFile	/usr/include/tclDecls.h	/^    void (*tcl_SourceRCFile) (Tcl_Interp * interp); \/* 241 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SpliceChannel	/usr/include/tclDecls.h	/^    void (*tcl_SpliceChannel) (Tcl_Channel channel); \/* 416 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SplitList	/usr/include/tclDecls.h	/^    int (*tcl_SplitList) (Tcl_Interp * interp, CONST char * listStr, int * argcPtr, CONST84 char *** argvPtr); \/* 242 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SplitPath	/usr/include/tclDecls.h	/^    void (*tcl_SplitPath) (CONST char * path, int * argcPtr, CONST84 char *** argvPtr); \/* 243 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_StackChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_StackChannel) (Tcl_Interp * interp, Tcl_ChannelType * typePtr, ClientData instanceData, int mask, Tcl_Channel prevChan); \/* 281 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Stat	/usr/include/tclDecls.h	/^    int (*tcl_Stat) (CONST char * path, struct stat * bufPtr); \/* 368 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_StaticPackage	/usr/include/tclDecls.h	/^    void (*tcl_StaticPackage) (Tcl_Interp * interp, CONST char * pkgName, Tcl_PackageInitProc * initProc, Tcl_PackageInitProc * safeInitProc); \/* 244 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_StringCaseMatch	/usr/include/tclDecls.h	/^    int (*tcl_StringCaseMatch) (CONST char * str, CONST char * pattern, int nocase); \/* 371 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_StringMatch	/usr/include/tclDecls.h	/^    int (*tcl_StringMatch) (CONST char * str, CONST char * pattern); \/* 245 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_SubstObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_SubstObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int flags); \/* 437 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TakeBignumFromObj	/usr/include/tclDecls.h	/^    int (*tcl_TakeBignumFromObj) (Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value); \/* 559 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Tell	/usr/include/tclDecls.h	/^    Tcl_WideInt (*tcl_Tell) (Tcl_Channel chan); \/* 492 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TellOld	/usr/include/tclDecls.h	/^    int (*tcl_TellOld) (Tcl_Channel chan); \/* 246 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ThreadAlert	/usr/include/tclDecls.h	/^    void (*tcl_ThreadAlert) (Tcl_ThreadId threadId); \/* 318 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ThreadQueueEvent	/usr/include/tclDecls.h	/^    void (*tcl_ThreadQueueEvent) (Tcl_ThreadId threadId, Tcl_Event* evPtr, Tcl_QueuePosition position); \/* 319 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TraceCommand	/usr/include/tclDecls.h	/^    int (*tcl_TraceCommand) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * proc, ClientData clientData); \/* 426 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TraceVar	/usr/include/tclDecls.h	/^    int (*tcl_TraceVar) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 247 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TraceVar2	/usr/include/tclDecls.h	/^    int (*tcl_TraceVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 248 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TranslateFileName	/usr/include/tclDecls.h	/^    char * (*tcl_TranslateFileName) (Tcl_Interp * interp, CONST char * name, Tcl_DString * bufferPtr); \/* 249 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_TruncateChannel	/usr/include/tclDecls.h	/^    int (*tcl_TruncateChannel) (Tcl_Channel chan, Tcl_WideInt length); \/* 560 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Ungets	/usr/include/tclDecls.h	/^    int (*tcl_Ungets) (Tcl_Channel chan, CONST char * str, int len, int atHead); \/* 250 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharAtIndex	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharAtIndex) (CONST char * src, int index); \/* 320 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharCaseMatch	/usr/include/tclDecls.h	/^    int (*tcl_UniCharCaseMatch) (CONST Tcl_UniChar * uniStr, CONST Tcl_UniChar * uniPattern, int nocase); \/* 420 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsAlnum	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsAlnum) (int ch); \/* 345 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsAlpha	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsAlpha) (int ch); \/* 346 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsControl	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsControl) (int ch); \/* 372 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsDigit	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsDigit) (int ch); \/* 347 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsGraph	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsGraph) (int ch); \/* 373 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsLower	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsLower) (int ch); \/* 348 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsPrint	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsPrint) (int ch); \/* 374 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsPunct	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsPunct) (int ch); \/* 375 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsSpace	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsSpace) (int ch); \/* 349 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsUpper	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsUpper) (int ch); \/* 350 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharIsWordChar	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsWordChar) (int ch); \/* 351 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharLen	/usr/include/tclDecls.h	/^    int (*tcl_UniCharLen) (CONST Tcl_UniChar * uniStr); \/* 352 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharNcasecmp	/usr/include/tclDecls.h	/^    int (*tcl_UniCharNcasecmp) (CONST Tcl_UniChar * ucs, CONST Tcl_UniChar * uct, unsigned long numChars); \/* 419 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharNcmp	/usr/include/tclDecls.h	/^    int (*tcl_UniCharNcmp) (CONST Tcl_UniChar * ucs, CONST Tcl_UniChar * uct, unsigned long numChars); \/* 353 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharToLower	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharToLower) (int ch); \/* 321 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharToTitle	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharToTitle) (int ch); \/* 322 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharToUpper	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharToUpper) (int ch); \/* 323 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharToUtf	/usr/include/tclDecls.h	/^    int (*tcl_UniCharToUtf) (int ch, char * buf); \/* 324 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UniCharToUtfDString	/usr/include/tclDecls.h	/^    char * (*tcl_UniCharToUtfDString) (CONST Tcl_UniChar * uniStr, int uniLength, Tcl_DString * dsPtr); \/* 354 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UnlinkVar	/usr/include/tclDecls.h	/^    void (*tcl_UnlinkVar) (Tcl_Interp * interp, CONST char * varName); \/* 251 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UnregisterChannel	/usr/include/tclDecls.h	/^    int (*tcl_UnregisterChannel) (Tcl_Interp * interp, Tcl_Channel chan); \/* 252 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UnsetVar	/usr/include/tclDecls.h	/^    int (*tcl_UnsetVar) (Tcl_Interp * interp, CONST char * varName, int flags); \/* 253 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UnsetVar2	/usr/include/tclDecls.h	/^    int (*tcl_UnsetVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags); \/* 254 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UnstackChannel	/usr/include/tclDecls.h	/^    int (*tcl_UnstackChannel) (Tcl_Interp * interp, Tcl_Channel chan); \/* 282 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UntraceCommand	/usr/include/tclDecls.h	/^    void (*tcl_UntraceCommand) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * proc, ClientData clientData); \/* 427 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UntraceVar	/usr/include/tclDecls.h	/^    void (*tcl_UntraceVar) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 255 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UntraceVar2	/usr/include/tclDecls.h	/^    void (*tcl_UntraceVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 256 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UpVar	/usr/include/tclDecls.h	/^    int (*tcl_UpVar) (Tcl_Interp * interp, CONST char * frameName, CONST char * varName, CONST char * localName, int flags); \/* 258 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UpVar2	/usr/include/tclDecls.h	/^    int (*tcl_UpVar2) (Tcl_Interp * interp, CONST char * frameName, CONST char * part1, CONST char * part2, CONST char * localName, int flags); \/* 259 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UpdateLinkedVar	/usr/include/tclDecls.h	/^    void (*tcl_UpdateLinkedVar) (Tcl_Interp * interp, CONST char * varName); \/* 257 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfAtIndex	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfAtIndex) (CONST char * src, int index); \/* 325 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfBackslash	/usr/include/tclDecls.h	/^    int (*tcl_UtfBackslash) (CONST char * src, int * readPtr, char * dst); \/* 327 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfCharComplete	/usr/include/tclDecls.h	/^    int (*tcl_UtfCharComplete) (CONST char * src, int length); \/* 326 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfFindFirst	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfFindFirst) (CONST char * src, int ch); \/* 328 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfFindLast	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfFindLast) (CONST char * src, int ch); \/* 329 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfNcasecmp	/usr/include/tclDecls.h	/^    int (*tcl_UtfNcasecmp) (CONST char * s1, CONST char * s2, unsigned long n); \/* 370 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfNcmp	/usr/include/tclDecls.h	/^    int (*tcl_UtfNcmp) (CONST char * s1, CONST char * s2, unsigned long n); \/* 369 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfNext	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfNext) (CONST char * src); \/* 330 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfPrev	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfPrev) (CONST char * src, CONST char * start); \/* 331 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToExternal	/usr/include/tclDecls.h	/^    int (*tcl_UtfToExternal) (Tcl_Interp * interp, Tcl_Encoding encoding, CONST char * src, int srcLen, int flags, Tcl_EncodingState * statePtr, char * dst, int dstLen, int * srcReadPtr, int * dstWrotePtr, int * dstCharsPtr); \/* 332 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToExternalDString	/usr/include/tclDecls.h	/^    char * (*tcl_UtfToExternalDString) (Tcl_Encoding encoding, CONST char * src, int srcLen, Tcl_DString * dsPtr); \/* 333 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToLower	/usr/include/tclDecls.h	/^    int (*tcl_UtfToLower) (char * src); \/* 334 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToTitle	/usr/include/tclDecls.h	/^    int (*tcl_UtfToTitle) (char * src); \/* 335 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToUniChar	/usr/include/tclDecls.h	/^    int (*tcl_UtfToUniChar) (CONST char * src, Tcl_UniChar * chPtr); \/* 336 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToUniCharDString	/usr/include/tclDecls.h	/^    Tcl_UniChar * (*tcl_UtfToUniCharDString) (CONST char * src, int length, Tcl_DString * dsPtr); \/* 355 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_UtfToUpper	/usr/include/tclDecls.h	/^    int (*tcl_UtfToUpper) (char * src); \/* 337 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_ValidateAllMemory	/usr/include/tclDecls.h	/^    void (*tcl_ValidateAllMemory) (CONST char * file, int line); \/* 266 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_VarEval	/usr/include/tclDecls.h	/^    int (*tcl_VarEval) (Tcl_Interp * interp, ...); \/* 260 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_VarEvalVA	/usr/include/tclDecls.h	/^    int (*tcl_VarEvalVA) (Tcl_Interp * interp, va_list argList); \/* 276 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_VarTraceInfo	/usr/include/tclDecls.h	/^    ClientData (*tcl_VarTraceInfo) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * procPtr, ClientData prevClientData); \/* 261 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_VarTraceInfo2	/usr/include/tclDecls.h	/^    ClientData (*tcl_VarTraceInfo2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * procPtr, ClientData prevClientData); \/* 262 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_WaitForEvent	/usr/include/tclDecls.h	/^    int (*tcl_WaitForEvent) (Tcl_Time * timePtr); \/* 13 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_WaitPid	/usr/include/tclDecls.h	/^    Tcl_Pid (*tcl_WaitPid) (Tcl_Pid pid, int * statPtr, int options); \/* 277 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_Write	/usr/include/tclDecls.h	/^    int (*tcl_Write) (Tcl_Channel chan, CONST char * s, int slen); \/* 263 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_WriteChars	/usr/include/tclDecls.h	/^    int (*tcl_WriteChars) (Tcl_Channel chan, CONST char * src, int srcLen); \/* 338 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_WriteObj	/usr/include/tclDecls.h	/^    int (*tcl_WriteObj) (Tcl_Channel chan, Tcl_Obj * objPtr); \/* 339 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_WriteRaw	/usr/include/tclDecls.h	/^    int (*tcl_WriteRaw) (Tcl_Channel chan, CONST char * src, int srcLen); \/* 395 *\/$/;"	m	struct:TclStubs	access:public
TclStubs::tcl_WrongNumArgs	/usr/include/tclDecls.h	/^    void (*tcl_WrongNumArgs) (Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], CONST char * message); \/* 264 *\/$/;"	m	struct:TclStubs	access:public
TclTomMathInitializeStubs	/usr/include/tcl.h	/^EXTERN CONST char *	TclTomMathInitializeStubs _ANSI_ARGS_(($/;"	p	signature:( Tcl_Interp *interp, CONST char *version, int epoch, int revision)
TclTomMathStubs	/usr/include/tclTomMathDecls.h	/^typedef struct TclTomMathStubs {$/;"	s
TclTomMathStubs	/usr/include/tclTomMathDecls.h	/^} TclTomMathStubs;$/;"	t	typeref:struct:TclTomMathStubs
TclTomMathStubs::hooks	/usr/include/tclTomMathDecls.h	/^    struct TclTomMathStubHooks *hooks;$/;"	m	struct:TclTomMathStubs	typeref:struct:TclTomMathStubs::TclTomMathStubHooks	access:public
TclTomMathStubs::magic	/usr/include/tclTomMathDecls.h	/^    int magic;$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_epoch	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_epoch) (void); \/* 0 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_fast_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_fast_s_mp_mul_digs) (mp_int * a, mp_int * b, mp_int * c, int digs); \/* 51 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_fast_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_fast_s_mp_sqr) (mp_int* a, mp_int* b); \/* 52 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_add	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_add) (mp_int* a, mp_int* b, mp_int* c); \/* 2 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_add_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_add_d) (mp_int* a, mp_digit b, mp_int* c); \/* 3 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_and	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_and) (mp_int* a, mp_int* b, mp_int* c); \/* 4 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_clamp	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_clamp) (mp_int* a); \/* 5 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_clear	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_clear) (mp_int* a); \/* 6 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_clear_multi	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_clear_multi) (mp_int* a, ...); \/* 7 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_cmp	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_cmp) (mp_int* a, mp_int* b); \/* 8 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_cmp_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_cmp_d) (mp_int* a, mp_digit b); \/* 9 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_cmp_mag	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_cmp_mag) (mp_int* a, mp_int* b); \/* 10 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_copy	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_copy) (mp_int* a, mp_int* b); \/* 11 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_count_bits	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_count_bits) (mp_int* a); \/* 12 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_div	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div) (mp_int* a, mp_int* b, mp_int* q, mp_int* r); \/* 13 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_div_2	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_2) (mp_int* a, mp_int* q); \/* 15 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_div_2d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_2d) (mp_int* a, int b, mp_int* q, mp_int* r); \/* 16 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_div_3	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_3) (mp_int* a, mp_int* q, mp_digit* r); \/* 17 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_div_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_d) (mp_int* a, mp_digit b, mp_int* q, mp_digit* r); \/* 14 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_exch	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_exch) (mp_int* a, mp_int* b); \/* 18 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_expt_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_expt_d) (mp_int* a, mp_digit b, mp_int* c); \/* 19 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_grow	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_grow) (mp_int* a, int size); \/* 20 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_init	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init) (mp_int* a); \/* 21 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_init_copy	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_copy) (mp_int * a, mp_int* b); \/* 22 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_init_multi	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_multi) (mp_int* a, ...); \/* 23 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_init_set	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_set) (mp_int* a, mp_digit b); \/* 24 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_init_size	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_size) (mp_int* a, int size); \/* 25 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_karatsuba_mul	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_karatsuba_mul) (mp_int* a, mp_int* b, mp_int* c); \/* 53 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_karatsuba_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_karatsuba_sqr) (mp_int* a, mp_int* b); \/* 54 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_lshd	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_lshd) (mp_int* a, int shift); \/* 26 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_mod	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mod) (mp_int* a, mp_int* b, mp_int* r); \/* 27 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_mod_2d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mod_2d) (mp_int* a, int b, mp_int* r); \/* 28 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_mul	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul) (mp_int* a, mp_int* b, mp_int* p); \/* 29 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_mul_2	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul_2) (mp_int* a, mp_int* p); \/* 31 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_mul_2d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul_2d) (mp_int* a, int d, mp_int* p); \/* 32 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_mul_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul_d) (mp_int* a, mp_digit b, mp_int* p); \/* 30 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_neg	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_neg) (mp_int* a, mp_int* b); \/* 33 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_or	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_or) (mp_int* a, mp_int* b, mp_int* c); \/* 34 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_radix_size	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_radix_size) (mp_int* a, int radix, int* size); \/* 35 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_read_radix	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_read_radix) (mp_int* a, const char* str, int radix); \/* 36 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_rshd	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_rshd) (mp_int * a, int shift); \/* 37 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_set	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_set) (mp_int* a, mp_digit b); \/* 39 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_shrink	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_shrink) (mp_int* a); \/* 38 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sqr) (mp_int* a, mp_int* b); \/* 40 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_sqrt	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sqrt) (mp_int* a, mp_int* b); \/* 41 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_sub	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sub) (mp_int* a, mp_int* b, mp_int* c); \/* 42 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_sub_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sub_d) (mp_int* a, mp_digit b, mp_int* c); \/* 43 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_to_unsigned_bin	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_to_unsigned_bin) (mp_int* a, unsigned char* b); \/* 44 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_to_unsigned_bin_n	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_to_unsigned_bin_n) (mp_int* a, unsigned char* b, unsigned long* outlen); \/* 45 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_toom_mul	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_toom_mul) (mp_int* a, mp_int* b, mp_int* c); \/* 55 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_toom_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_toom_sqr) (mp_int* a, mp_int* b); \/* 56 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_toradix_n	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_toradix_n) (mp_int* a, char* str, int radix, int maxlen); \/* 46 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_unsigned_bin_size	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_unsigned_bin_size) (mp_int* a); \/* 47 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_xor	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_xor) (mp_int* a, mp_int* b, mp_int* c); \/* 48 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_mp_zero	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_zero) (mp_int* a); \/* 49 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_reverse	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_reverse) (unsigned char* s, int len); \/* 50 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_revision	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_revision) (void); \/* 1 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_s_mp_add	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_add) (mp_int* a, mp_int* b, mp_int* c); \/* 57 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_mul_digs) (mp_int* a, mp_int* b, mp_int* c, int digs); \/* 58 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_sqr) (mp_int* a, mp_int* b); \/* 59 *\/$/;"	m	struct:TclTomMathStubs	access:public
TclTomMathStubs::tclBN_s_mp_sub	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_sub) (mp_int* a, mp_int* b, mp_int* c); \/* 60 *\/$/;"	m	struct:TclTomMathStubs	access:public
Tcl_Access	/usr/include/tclDecls.h	/^#define Tcl_Access /;"	d
Tcl_Access	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Access (CONST char * path, int mode);$/;"	p	signature:(CONST char * path, int mode)
Tcl_Access_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Access_TCL_DECLARED$/;"	d
Tcl_AddErrorInfo	/usr/include/tclDecls.h	/^#define Tcl_AddErrorInfo /;"	d
Tcl_AddErrorInfo	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AddErrorInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * message)
Tcl_AddErrorInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AddErrorInfo_TCL_DECLARED$/;"	d
Tcl_AddObjErrorInfo	/usr/include/tclDecls.h	/^#define Tcl_AddObjErrorInfo /;"	d
Tcl_AddObjErrorInfo	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AddObjErrorInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * message, int length)
Tcl_AddObjErrorInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AddObjErrorInfo_TCL_DECLARED$/;"	d
Tcl_AlertNotifier	/usr/include/tclDecls.h	/^#define Tcl_AlertNotifier /;"	d
Tcl_AlertNotifier	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AlertNotifier (ClientData clientData);$/;"	p	signature:(ClientData clientData)
Tcl_AlertNotifierProc	/usr/include/tcl.h	/^typedef void (Tcl_AlertNotifierProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_AlertNotifier_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AlertNotifier_TCL_DECLARED$/;"	d
Tcl_Alloc	/usr/include/tclDecls.h	/^#define Tcl_Alloc /;"	d
Tcl_Alloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_Alloc (unsigned int size);$/;"	p	signature:(unsigned int size)
Tcl_AllocHashEntryProc	/usr/include/tcl.h	/^typedef Tcl_HashEntry *(Tcl_AllocHashEntryProc) _ANSI_ARGS_(($/;"	t
Tcl_AllocStatBuf	/usr/include/tclDecls.h	/^#define Tcl_AllocStatBuf /;"	d
Tcl_AllocStatBuf	/usr/include/tclDecls.h	/^EXTERN Tcl_StatBuf *	Tcl_AllocStatBuf (void);$/;"	p	signature:(void)
Tcl_AllocStatBuf_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AllocStatBuf_TCL_DECLARED$/;"	d
Tcl_Alloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Alloc_TCL_DECLARED$/;"	d
Tcl_AllowExceptions	/usr/include/tclDecls.h	/^#define Tcl_AllowExceptions /;"	d
Tcl_AllowExceptions	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AllowExceptions (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_AllowExceptions_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AllowExceptions_TCL_DECLARED$/;"	d
Tcl_AppInit	/usr/include/tcl.h	/^EXTERN int		Tcl_AppInit _ANSI_ARGS_((Tcl_Interp *interp));$/;"	p	signature:(Tcl_Interp *interp)
Tcl_AppInitProc	/usr/include/tcl.h	/^typedef int (Tcl_AppInitProc) _ANSI_ARGS_((Tcl_Interp *interp));$/;"	t
Tcl_AppendAllObjTypes	/usr/include/tclDecls.h	/^#define Tcl_AppendAllObjTypes /;"	d
Tcl_AppendAllObjTypes	/usr/include/tclDecls.h	/^EXTERN int		Tcl_AppendAllObjTypes (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr)
Tcl_AppendAllObjTypes_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendAllObjTypes_TCL_DECLARED$/;"	d
Tcl_AppendElement	/usr/include/tclDecls.h	/^#define Tcl_AppendElement /;"	d
Tcl_AppendElement	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendElement (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * element)
Tcl_AppendElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendElement_TCL_DECLARED$/;"	d
Tcl_AppendExportList	/usr/include/tclDecls.h	/^#define Tcl_AppendExportList /;"	d
Tcl_AppendExportList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_AppendExportList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Namespace * nsPtr, Tcl_Obj * objPtr)
Tcl_AppendExportList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendExportList_TCL_DECLARED$/;"	d
Tcl_AppendFormatToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendFormatToObj /;"	d
Tcl_AppendFormatToObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_AppendFormatToObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, CONST char * format, int objc, Tcl_Obj * CONST objv[])
Tcl_AppendFormatToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendFormatToObj_TCL_DECLARED$/;"	d
Tcl_AppendLimitedToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendLimitedToObj /;"	d
Tcl_AppendLimitedToObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendLimitedToObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST char * bytes, int length, int limit, CONST char * ellipsis)
Tcl_AppendLimitedToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendLimitedToObj_TCL_DECLARED$/;"	d
Tcl_AppendObjToErrorInfo	/usr/include/tclDecls.h	/^#define Tcl_AppendObjToErrorInfo /;"	d
Tcl_AppendObjToErrorInfo	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendObjToErrorInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr)
Tcl_AppendObjToErrorInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendObjToErrorInfo_TCL_DECLARED$/;"	d
Tcl_AppendObjToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendObjToObj /;"	d
Tcl_AppendObjToObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendObjToObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, Tcl_Obj * appendObjPtr)
Tcl_AppendObjToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendObjToObj_TCL_DECLARED$/;"	d
Tcl_AppendPrintfToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendPrintfToObj /;"	d
Tcl_AppendPrintfToObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendPrintfToObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST char * format, ...)
Tcl_AppendPrintfToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendPrintfToObj_TCL_DECLARED$/;"	d
Tcl_AppendResult	/usr/include/tclDecls.h	/^#define Tcl_AppendResult /;"	d
Tcl_AppendResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendResult (Tcl_Interp * interp, ...);$/;"	p	signature:(Tcl_Interp * interp, ...)
Tcl_AppendResultVA	/usr/include/tclDecls.h	/^#define Tcl_AppendResultVA /;"	d
Tcl_AppendResultVA	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendResultVA (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, va_list argList)
Tcl_AppendResultVA_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendResultVA_TCL_DECLARED$/;"	d
Tcl_AppendResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendResult_TCL_DECLARED$/;"	d
Tcl_AppendStringsToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendStringsToObj /;"	d
Tcl_AppendStringsToObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendStringsToObj (Tcl_Obj * objPtr, ...);$/;"	p	signature:(Tcl_Obj * objPtr, ...)
Tcl_AppendStringsToObjVA	/usr/include/tclDecls.h	/^#define Tcl_AppendStringsToObjVA /;"	d
Tcl_AppendStringsToObjVA	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendStringsToObjVA (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, va_list argList)
Tcl_AppendStringsToObjVA_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendStringsToObjVA_TCL_DECLARED$/;"	d
Tcl_AppendStringsToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendStringsToObj_TCL_DECLARED$/;"	d
Tcl_AppendToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendToObj /;"	d
Tcl_AppendToObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendToObj (Tcl_Obj* objPtr, CONST char* bytes, $/;"	p	signature:(Tcl_Obj* objPtr, CONST char* bytes, int length)
Tcl_AppendToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendToObj_TCL_DECLARED$/;"	d
Tcl_AppendUnicodeToObj	/usr/include/tclDecls.h	/^#define Tcl_AppendUnicodeToObj /;"	d
Tcl_AppendUnicodeToObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AppendUnicodeToObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST Tcl_UniChar * unicode, int length)
Tcl_AppendUnicodeToObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AppendUnicodeToObj_TCL_DECLARED$/;"	d
Tcl_AsyncCreate	/usr/include/tclDecls.h	/^#define Tcl_AsyncCreate /;"	d
Tcl_AsyncCreate	/usr/include/tclDecls.h	/^EXTERN Tcl_AsyncHandler	 Tcl_AsyncCreate (Tcl_AsyncProc * proc, $/;"	p	signature:(Tcl_AsyncProc * proc, ClientData clientData)
Tcl_AsyncCreate_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AsyncCreate_TCL_DECLARED$/;"	d
Tcl_AsyncDelete	/usr/include/tclDecls.h	/^#define Tcl_AsyncDelete /;"	d
Tcl_AsyncDelete	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AsyncDelete (Tcl_AsyncHandler async);$/;"	p	signature:(Tcl_AsyncHandler async)
Tcl_AsyncDelete_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AsyncDelete_TCL_DECLARED$/;"	d
Tcl_AsyncHandler	/usr/include/tcl.h	/^typedef struct Tcl_AsyncHandler_ *Tcl_AsyncHandler;$/;"	t	typeref:struct:Tcl_AsyncHandler_
Tcl_AsyncInvoke	/usr/include/tclDecls.h	/^#define Tcl_AsyncInvoke /;"	d
Tcl_AsyncInvoke	/usr/include/tclDecls.h	/^EXTERN int		Tcl_AsyncInvoke (Tcl_Interp * interp, int code);$/;"	p	signature:(Tcl_Interp * interp, int code)
Tcl_AsyncInvoke_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AsyncInvoke_TCL_DECLARED$/;"	d
Tcl_AsyncMark	/usr/include/tclDecls.h	/^#define Tcl_AsyncMark /;"	d
Tcl_AsyncMark	/usr/include/tclDecls.h	/^EXTERN void		Tcl_AsyncMark (Tcl_AsyncHandler async);$/;"	p	signature:(Tcl_AsyncHandler async)
Tcl_AsyncMark_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AsyncMark_TCL_DECLARED$/;"	d
Tcl_AsyncProc	/usr/include/tcl.h	/^typedef int (Tcl_AsyncProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_AsyncReady	/usr/include/tclDecls.h	/^#define Tcl_AsyncReady /;"	d
Tcl_AsyncReady	/usr/include/tclDecls.h	/^EXTERN int		Tcl_AsyncReady (void);$/;"	p	signature:(void)
Tcl_AsyncReady_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AsyncReady_TCL_DECLARED$/;"	d
Tcl_AttemptAlloc	/usr/include/tclDecls.h	/^#define Tcl_AttemptAlloc /;"	d
Tcl_AttemptAlloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_AttemptAlloc (unsigned int size);$/;"	p	signature:(unsigned int size)
Tcl_AttemptAlloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AttemptAlloc_TCL_DECLARED$/;"	d
Tcl_AttemptDbCkalloc	/usr/include/tclDecls.h	/^#define Tcl_AttemptDbCkalloc /;"	d
Tcl_AttemptDbCkalloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_AttemptDbCkalloc (unsigned int size, $/;"	p	signature:(unsigned int size, CONST char * file, int line)
Tcl_AttemptDbCkalloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AttemptDbCkalloc_TCL_DECLARED$/;"	d
Tcl_AttemptDbCkrealloc	/usr/include/tclDecls.h	/^#define Tcl_AttemptDbCkrealloc /;"	d
Tcl_AttemptDbCkrealloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_AttemptDbCkrealloc (char * ptr, $/;"	p	signature:(char * ptr, unsigned int size, CONST char * file, int line)
Tcl_AttemptDbCkrealloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AttemptDbCkrealloc_TCL_DECLARED$/;"	d
Tcl_AttemptRealloc	/usr/include/tclDecls.h	/^#define Tcl_AttemptRealloc /;"	d
Tcl_AttemptRealloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_AttemptRealloc (char * ptr, unsigned int size);$/;"	p	signature:(char * ptr, unsigned int size)
Tcl_AttemptRealloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AttemptRealloc_TCL_DECLARED$/;"	d
Tcl_AttemptSetObjLength	/usr/include/tclDecls.h	/^#define Tcl_AttemptSetObjLength /;"	d
Tcl_AttemptSetObjLength	/usr/include/tclDecls.h	/^EXTERN int		Tcl_AttemptSetObjLength (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, int length)
Tcl_AttemptSetObjLength_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_AttemptSetObjLength_TCL_DECLARED$/;"	d
Tcl_BackgroundError	/usr/include/tclDecls.h	/^#define Tcl_BackgroundError /;"	d
Tcl_BackgroundError	/usr/include/tclDecls.h	/^EXTERN void		Tcl_BackgroundError (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_BackgroundError_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_BackgroundError_TCL_DECLARED$/;"	d
Tcl_Backslash	/usr/include/tclDecls.h	/^#define Tcl_Backslash /;"	d
Tcl_Backslash	/usr/include/tclDecls.h	/^EXTERN char		Tcl_Backslash (CONST char * src, int * readPtr);$/;"	p	signature:(CONST char * src, int * readPtr)
Tcl_Backslash_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Backslash_TCL_DECLARED$/;"	d
Tcl_BadChannelOption	/usr/include/tclDecls.h	/^#define Tcl_BadChannelOption /;"	d
Tcl_BadChannelOption	/usr/include/tclDecls.h	/^EXTERN int		Tcl_BadChannelOption (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * optionName, CONST char * optionList)
Tcl_BadChannelOption_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_BadChannelOption_TCL_DECLARED$/;"	d
Tcl_CallFrame	/usr/include/tcl.h	/^typedef struct Tcl_CallFrame {$/;"	s
Tcl_CallFrame	/usr/include/tcl.h	/^} Tcl_CallFrame;$/;"	t	typeref:struct:Tcl_CallFrame
Tcl_CallFrame::dummy1	/usr/include/tcl.h	/^    int dummy1;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy10	/usr/include/tcl.h	/^    char *dummy10;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy11	/usr/include/tcl.h	/^    char *dummy11;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy12	/usr/include/tcl.h	/^    char *dummy12;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy2	/usr/include/tcl.h	/^    int dummy2;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy3	/usr/include/tcl.h	/^    char *dummy3;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy4	/usr/include/tcl.h	/^    char *dummy4;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy5	/usr/include/tcl.h	/^    char *dummy5;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy6	/usr/include/tcl.h	/^    int dummy6;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy7	/usr/include/tcl.h	/^    char *dummy7;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy8	/usr/include/tcl.h	/^    char *dummy8;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::dummy9	/usr/include/tcl.h	/^    int dummy9;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallFrame::nsPtr	/usr/include/tcl.h	/^    Tcl_Namespace *nsPtr;$/;"	m	struct:Tcl_CallFrame	access:public
Tcl_CallWhenDeleted	/usr/include/tclDecls.h	/^#define Tcl_CallWhenDeleted /;"	d
Tcl_CallWhenDeleted	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CallWhenDeleted (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_InterpDeleteProc * proc, ClientData clientData)
Tcl_CallWhenDeleted_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CallWhenDeleted_TCL_DECLARED$/;"	d
Tcl_CancelIdleCall	/usr/include/tclDecls.h	/^#define Tcl_CancelIdleCall /;"	d
Tcl_CancelIdleCall	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CancelIdleCall (Tcl_IdleProc * idleProc, $/;"	p	signature:(Tcl_IdleProc * idleProc, ClientData clientData)
Tcl_CancelIdleCall_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CancelIdleCall_TCL_DECLARED$/;"	d
Tcl_Channel	/usr/include/tcl.h	/^typedef struct Tcl_Channel_ *Tcl_Channel;$/;"	t	typeref:struct:Tcl_Channel_
Tcl_ChannelBlockModeProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelBlockModeProc /;"	d
Tcl_ChannelBlockModeProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverBlockModeProc * Tcl_ChannelBlockModeProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelBlockModeProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelBlockModeProc_TCL_DECLARED$/;"	d
Tcl_ChannelBuffered	/usr/include/tclDecls.h	/^#define Tcl_ChannelBuffered /;"	d
Tcl_ChannelBuffered	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ChannelBuffered (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_ChannelBuffered_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelBuffered_TCL_DECLARED$/;"	d
Tcl_ChannelClose2Proc	/usr/include/tclDecls.h	/^#define Tcl_ChannelClose2Proc /;"	d
Tcl_ChannelClose2Proc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverClose2Proc * Tcl_ChannelClose2Proc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelClose2Proc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelClose2Proc_TCL_DECLARED$/;"	d
Tcl_ChannelCloseProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelCloseProc /;"	d
Tcl_ChannelCloseProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverCloseProc * Tcl_ChannelCloseProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelCloseProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelCloseProc_TCL_DECLARED$/;"	d
Tcl_ChannelFlushProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelFlushProc /;"	d
Tcl_ChannelFlushProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverFlushProc * Tcl_ChannelFlushProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelFlushProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelFlushProc_TCL_DECLARED$/;"	d
Tcl_ChannelGetHandleProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelGetHandleProc /;"	d
Tcl_ChannelGetHandleProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverGetHandleProc * Tcl_ChannelGetHandleProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelGetHandleProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelGetHandleProc_TCL_DECLARED$/;"	d
Tcl_ChannelGetOptionProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelGetOptionProc /;"	d
Tcl_ChannelGetOptionProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverGetOptionProc * Tcl_ChannelGetOptionProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelGetOptionProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelGetOptionProc_TCL_DECLARED$/;"	d
Tcl_ChannelHandlerProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelHandlerProc /;"	d
Tcl_ChannelHandlerProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverHandlerProc * Tcl_ChannelHandlerProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelHandlerProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelHandlerProc_TCL_DECLARED$/;"	d
Tcl_ChannelInputProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelInputProc /;"	d
Tcl_ChannelInputProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverInputProc * Tcl_ChannelInputProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelInputProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelInputProc_TCL_DECLARED$/;"	d
Tcl_ChannelName	/usr/include/tclDecls.h	/^#define Tcl_ChannelName /;"	d
Tcl_ChannelName	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_ChannelName ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelName_TCL_DECLARED$/;"	d
Tcl_ChannelOutputProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelOutputProc /;"	d
Tcl_ChannelOutputProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverOutputProc * Tcl_ChannelOutputProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelOutputProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelOutputProc_TCL_DECLARED$/;"	d
Tcl_ChannelProc	/usr/include/tcl.h	/^typedef void (Tcl_ChannelProc) _ANSI_ARGS_((ClientData clientData, int mask));$/;"	t
Tcl_ChannelSeekProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelSeekProc /;"	d
Tcl_ChannelSeekProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverSeekProc * Tcl_ChannelSeekProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelSeekProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelSeekProc_TCL_DECLARED$/;"	d
Tcl_ChannelSetOptionProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelSetOptionProc /;"	d
Tcl_ChannelSetOptionProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverSetOptionProc * Tcl_ChannelSetOptionProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelSetOptionProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelSetOptionProc_TCL_DECLARED$/;"	d
Tcl_ChannelThreadActionProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelThreadActionProc /;"	d
Tcl_ChannelThreadActionProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverThreadActionProc * Tcl_ChannelThreadActionProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelThreadActionProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelThreadActionProc_TCL_DECLARED$/;"	d
Tcl_ChannelTruncateProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelTruncateProc /;"	d
Tcl_ChannelTruncateProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverTruncateProc * Tcl_ChannelTruncateProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelTruncateProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelTruncateProc_TCL_DECLARED$/;"	d
Tcl_ChannelType	/usr/include/tcl.h	/^typedef struct Tcl_ChannelType {$/;"	s
Tcl_ChannelType	/usr/include/tcl.h	/^} Tcl_ChannelType;$/;"	t	typeref:struct:Tcl_ChannelType
Tcl_ChannelType::blockModeProc	/usr/include/tcl.h	/^    Tcl_DriverBlockModeProc *blockModeProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::close2Proc	/usr/include/tcl.h	/^    Tcl_DriverClose2Proc *close2Proc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::closeProc	/usr/include/tcl.h	/^    Tcl_DriverCloseProc *closeProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::flushProc	/usr/include/tcl.h	/^    Tcl_DriverFlushProc *flushProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::getHandleProc	/usr/include/tcl.h	/^    Tcl_DriverGetHandleProc *getHandleProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::getOptionProc	/usr/include/tcl.h	/^    Tcl_DriverGetOptionProc *getOptionProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::handlerProc	/usr/include/tcl.h	/^    Tcl_DriverHandlerProc *handlerProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::inputProc	/usr/include/tcl.h	/^    Tcl_DriverInputProc *inputProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::outputProc	/usr/include/tcl.h	/^    Tcl_DriverOutputProc *outputProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::seekProc	/usr/include/tcl.h	/^    Tcl_DriverSeekProc *seekProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::setOptionProc	/usr/include/tcl.h	/^    Tcl_DriverSetOptionProc *setOptionProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::threadActionProc	/usr/include/tcl.h	/^    Tcl_DriverThreadActionProc *threadActionProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::truncateProc	/usr/include/tcl.h	/^    Tcl_DriverTruncateProc *truncateProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::typeName	/usr/include/tcl.h	/^    char *typeName;		\/* The name of the channel type in Tcl$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::version	/usr/include/tcl.h	/^    Tcl_ChannelTypeVersion version;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::watchProc	/usr/include/tcl.h	/^    Tcl_DriverWatchProc *watchProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelType::wideSeekProc	/usr/include/tcl.h	/^    Tcl_DriverWideSeekProc *wideSeekProc;$/;"	m	struct:Tcl_ChannelType	access:public
Tcl_ChannelTypeVersion	/usr/include/tcl.h	/^typedef struct Tcl_ChannelTypeVersion_ *Tcl_ChannelTypeVersion;$/;"	t	typeref:struct:Tcl_ChannelTypeVersion_
Tcl_ChannelVersion	/usr/include/tclDecls.h	/^#define Tcl_ChannelVersion /;"	d
Tcl_ChannelVersion	/usr/include/tclDecls.h	/^EXTERN Tcl_ChannelTypeVersion Tcl_ChannelVersion ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelVersion_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelVersion_TCL_DECLARED$/;"	d
Tcl_ChannelWatchProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelWatchProc /;"	d
Tcl_ChannelWatchProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverWatchProc * Tcl_ChannelWatchProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelWatchProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelWatchProc_TCL_DECLARED$/;"	d
Tcl_ChannelWideSeekProc	/usr/include/tclDecls.h	/^#define Tcl_ChannelWideSeekProc /;"	d
Tcl_ChannelWideSeekProc	/usr/include/tclDecls.h	/^EXTERN Tcl_DriverWideSeekProc * Tcl_ChannelWideSeekProc ($/;"	p	signature:( CONST Tcl_ChannelType * chanTypePtr)
Tcl_ChannelWideSeekProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ChannelWideSeekProc_TCL_DECLARED$/;"	d
Tcl_Chdir	/usr/include/tclDecls.h	/^#define Tcl_Chdir /;"	d
Tcl_Chdir	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Chdir (CONST char * dirName);$/;"	p	signature:(CONST char * dirName)
Tcl_Chdir_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Chdir_TCL_DECLARED$/;"	d
Tcl_Ckalloc	/usr/include/tcl.h	/^#   define Tcl_Ckalloc	/;"	d
Tcl_Ckfree	/usr/include/tcl.h	/^#   define Tcl_Ckfree	/;"	d
Tcl_Ckrealloc	/usr/include/tcl.h	/^#   define Tcl_Ckrealloc	/;"	d
Tcl_ClearChannelHandlers	/usr/include/tclDecls.h	/^#define Tcl_ClearChannelHandlers /;"	d
Tcl_ClearChannelHandlers	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ClearChannelHandlers (Tcl_Channel channel);$/;"	p	signature:(Tcl_Channel channel)
Tcl_ClearChannelHandlers_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ClearChannelHandlers_TCL_DECLARED$/;"	d
Tcl_Close	/usr/include/tclDecls.h	/^#define Tcl_Close /;"	d
Tcl_Close	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Close (Tcl_Interp * interp, Tcl_Channel chan);$/;"	p	signature:(Tcl_Interp * interp, Tcl_Channel chan)
Tcl_CloseProc	/usr/include/tcl.h	/^typedef void (Tcl_CloseProc) _ANSI_ARGS_((ClientData data));$/;"	t
Tcl_Close_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Close_TCL_DECLARED$/;"	d
Tcl_CmdDeleteProc	/usr/include/tcl.h	/^typedef void (Tcl_CmdDeleteProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_CmdInfo	/usr/include/tcl.h	/^typedef struct Tcl_CmdInfo {$/;"	s
Tcl_CmdInfo	/usr/include/tcl.h	/^} Tcl_CmdInfo;$/;"	t	typeref:struct:Tcl_CmdInfo
Tcl_CmdInfo::clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* ClientData for string proc. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::deleteData	/usr/include/tcl.h	/^    ClientData deleteData;	\/* Value to pass to deleteProc (usually the$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::deleteProc	/usr/include/tcl.h	/^    Tcl_CmdDeleteProc *deleteProc;$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::isNativeObjectProc	/usr/include/tcl.h	/^    int isNativeObjectProc;	\/* 1 if objProc was registered by a call to$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::namespacePtr	/usr/include/tcl.h	/^    Tcl_Namespace *namespacePtr;\/* Points to the namespace that contains this$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::objClientData	/usr/include/tcl.h	/^    ClientData objClientData;	\/* ClientData for object proc. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::objProc	/usr/include/tcl.h	/^    Tcl_ObjCmdProc *objProc;	\/* Command's object-based function. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdInfo::proc	/usr/include/tcl.h	/^    Tcl_CmdProc *proc;		\/* Command's string-based function. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
Tcl_CmdObjTraceDeleteProc	/usr/include/tcl.h	/^typedef void (Tcl_CmdObjTraceDeleteProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_CmdObjTraceProc	/usr/include/tcl.h	/^typedef int (Tcl_CmdObjTraceProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_CmdProc	/usr/include/tcl.h	/^typedef int (Tcl_CmdProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_CmdTraceProc	/usr/include/tcl.h	/^typedef void (Tcl_CmdTraceProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_Command	/usr/include/tcl.h	/^typedef struct Tcl_Command_ *Tcl_Command;$/;"	t	typeref:struct:Tcl_Command_
Tcl_CommandComplete	/usr/include/tclDecls.h	/^#define Tcl_CommandComplete /;"	d
Tcl_CommandComplete	/usr/include/tclDecls.h	/^EXTERN int		Tcl_CommandComplete (CONST char * cmd);$/;"	p	signature:(CONST char * cmd)
Tcl_CommandComplete_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CommandComplete_TCL_DECLARED$/;"	d
Tcl_CommandTraceInfo	/usr/include/tclDecls.h	/^#define Tcl_CommandTraceInfo /;"	d
Tcl_CommandTraceInfo	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_CommandTraceInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * procPtr, ClientData prevClientData)
Tcl_CommandTraceInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CommandTraceInfo_TCL_DECLARED$/;"	d
Tcl_CommandTraceProc	/usr/include/tcl.h	/^typedef void (Tcl_CommandTraceProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_CompareHashKeysProc	/usr/include/tcl.h	/^typedef int (Tcl_CompareHashKeysProc) _ANSI_ARGS_((VOID *keyPtr,$/;"	t
Tcl_Concat	/usr/include/tclDecls.h	/^#define Tcl_Concat /;"	d
Tcl_Concat	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_Concat (int argc, CONST84 char * CONST * argv);$/;"	p	signature:(int argc, CONST84 char * CONST * argv)
Tcl_ConcatObj	/usr/include/tclDecls.h	/^#define Tcl_ConcatObj /;"	d
Tcl_ConcatObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_ConcatObj (int objc, Tcl_Obj *CONST objv[]);$/;"	p	signature:(int objc, Tcl_Obj *CONST objv[])
Tcl_ConcatObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConcatObj_TCL_DECLARED$/;"	d
Tcl_Concat_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Concat_TCL_DECLARED$/;"	d
Tcl_Condition	/usr/include/tcl.h	/^typedef struct Tcl_Condition_ *Tcl_Condition;$/;"	t	typeref:struct:Tcl_Condition_
Tcl_ConditionFinalize	/usr/include/tcl.h	/^#define Tcl_ConditionFinalize(/;"	d
Tcl_ConditionFinalize	/usr/include/tcl.h	/^#undef  Tcl_ConditionFinalize$/;"	d
Tcl_ConditionFinalize	/usr/include/tclDecls.h	/^#define Tcl_ConditionFinalize /;"	d
Tcl_ConditionFinalize	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ConditionFinalize (Tcl_Condition * condPtr);$/;"	p	signature:(Tcl_Condition * condPtr)
Tcl_ConditionFinalize_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConditionFinalize_TCL_DECLARED$/;"	d
Tcl_ConditionNotify	/usr/include/tcl.h	/^#define Tcl_ConditionNotify(/;"	d
Tcl_ConditionNotify	/usr/include/tcl.h	/^#undef  Tcl_ConditionNotify$/;"	d
Tcl_ConditionNotify	/usr/include/tclDecls.h	/^#define Tcl_ConditionNotify /;"	d
Tcl_ConditionNotify	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ConditionNotify (Tcl_Condition * condPtr);$/;"	p	signature:(Tcl_Condition * condPtr)
Tcl_ConditionNotify_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConditionNotify_TCL_DECLARED$/;"	d
Tcl_ConditionWait	/usr/include/tcl.h	/^#define Tcl_ConditionWait(/;"	d
Tcl_ConditionWait	/usr/include/tcl.h	/^#undef  Tcl_ConditionWait$/;"	d
Tcl_ConditionWait	/usr/include/tclDecls.h	/^#define Tcl_ConditionWait /;"	d
Tcl_ConditionWait	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ConditionWait (Tcl_Condition * condPtr, $/;"	p	signature:(Tcl_Condition * condPtr, Tcl_Mutex * mutexPtr, Tcl_Time * timePtr)
Tcl_ConditionWait_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConditionWait_TCL_DECLARED$/;"	d
Tcl_Config	/usr/include/tcl.h	/^typedef struct Tcl_Config {$/;"	s
Tcl_Config	/usr/include/tcl.h	/^} Tcl_Config;$/;"	t	typeref:struct:Tcl_Config
Tcl_Config::key	/usr/include/tcl.h	/^    CONST char *key;		\/* Configuration key to register. ASCII$/;"	m	struct:Tcl_Config	access:public
Tcl_Config::value	/usr/include/tcl.h	/^    CONST char *value;		\/* The value associated with the key. System$/;"	m	struct:Tcl_Config	access:public
Tcl_ConvertCountedElement	/usr/include/tclDecls.h	/^#define Tcl_ConvertCountedElement /;"	d
Tcl_ConvertCountedElement	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ConvertCountedElement (CONST char * src, $/;"	p	signature:(CONST char * src, int length, char * dst, int flags)
Tcl_ConvertCountedElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConvertCountedElement_TCL_DECLARED$/;"	d
Tcl_ConvertElement	/usr/include/tclDecls.h	/^#define Tcl_ConvertElement /;"	d
Tcl_ConvertElement	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ConvertElement (CONST char * src, char * dst, $/;"	p	signature:(CONST char * src, char * dst, int flags)
Tcl_ConvertElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConvertElement_TCL_DECLARED$/;"	d
Tcl_ConvertToType	/usr/include/tclDecls.h	/^#define Tcl_ConvertToType /;"	d
Tcl_ConvertToType	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ConvertToType (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_ObjType * typePtr)
Tcl_ConvertToType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ConvertToType_TCL_DECLARED$/;"	d
Tcl_CreateAlias	/usr/include/tclDecls.h	/^#define Tcl_CreateAlias /;"	d
Tcl_CreateAlias	/usr/include/tclDecls.h	/^EXTERN int		Tcl_CreateAlias (Tcl_Interp * slave, $/;"	p	signature:(Tcl_Interp * slave, CONST char * slaveCmd, Tcl_Interp * target, CONST char * targetCmd, int argc, CONST84 char * CONST * argv)
Tcl_CreateAliasObj	/usr/include/tclDecls.h	/^#define Tcl_CreateAliasObj /;"	d
Tcl_CreateAliasObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_CreateAliasObj (Tcl_Interp * slave, $/;"	p	signature:(Tcl_Interp * slave, CONST char * slaveCmd, Tcl_Interp * target, CONST char * targetCmd, int objc, Tcl_Obj *CONST objv[])
Tcl_CreateAliasObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateAliasObj_TCL_DECLARED$/;"	d
Tcl_CreateAlias_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateAlias_TCL_DECLARED$/;"	d
Tcl_CreateChannel	/usr/include/tclDecls.h	/^#define Tcl_CreateChannel /;"	d
Tcl_CreateChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_CreateChannel (Tcl_ChannelType * typePtr, $/;"	p	signature:(Tcl_ChannelType * typePtr, CONST char * chanName, ClientData instanceData, int mask)
Tcl_CreateChannelHandler	/usr/include/tclDecls.h	/^#define Tcl_CreateChannelHandler /;"	d
Tcl_CreateChannelHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateChannelHandler (Tcl_Channel chan, int mask, $/;"	p	signature:(Tcl_Channel chan, int mask, Tcl_ChannelProc * proc, ClientData clientData)
Tcl_CreateChannelHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateChannelHandler_TCL_DECLARED$/;"	d
Tcl_CreateChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateChannel_TCL_DECLARED$/;"	d
Tcl_CreateCloseHandler	/usr/include/tclDecls.h	/^#define Tcl_CreateCloseHandler /;"	d
Tcl_CreateCloseHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateCloseHandler (Tcl_Channel chan, $/;"	p	signature:(Tcl_Channel chan, Tcl_CloseProc * proc, ClientData clientData)
Tcl_CreateCloseHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateCloseHandler_TCL_DECLARED$/;"	d
Tcl_CreateCommand	/usr/include/tclDecls.h	/^#define Tcl_CreateCommand /;"	d
Tcl_CreateCommand	/usr/include/tclDecls.h	/^EXTERN Tcl_Command	Tcl_CreateCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmdName, Tcl_CmdProc * proc, ClientData clientData, Tcl_CmdDeleteProc * deleteProc)
Tcl_CreateCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateCommand_TCL_DECLARED$/;"	d
Tcl_CreateEncoding	/usr/include/tclDecls.h	/^#define Tcl_CreateEncoding /;"	d
Tcl_CreateEncoding	/usr/include/tclDecls.h	/^EXTERN Tcl_Encoding	Tcl_CreateEncoding (const Tcl_EncodingType * typePtr);$/;"	p	signature:(const Tcl_EncodingType * typePtr)
Tcl_CreateEncoding_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateEncoding_TCL_DECLARED$/;"	d
Tcl_CreateEnsemble	/usr/include/tclDecls.h	/^#define Tcl_CreateEnsemble /;"	d
Tcl_CreateEnsemble	/usr/include/tclDecls.h	/^EXTERN Tcl_Command	Tcl_CreateEnsemble (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tcl_Namespace * namespacePtr, int flags)
Tcl_CreateEnsemble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateEnsemble_TCL_DECLARED$/;"	d
Tcl_CreateEventSource	/usr/include/tclDecls.h	/^#define Tcl_CreateEventSource /;"	d
Tcl_CreateEventSource	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateEventSource ($/;"	p	signature:( Tcl_EventSetupProc * setupProc, Tcl_EventCheckProc * checkProc, ClientData clientData)
Tcl_CreateEventSource_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateEventSource_TCL_DECLARED$/;"	d
Tcl_CreateExitHandler	/usr/include/tclDecls.h	/^#define Tcl_CreateExitHandler /;"	d
Tcl_CreateExitHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateExitHandler (Tcl_ExitProc * proc, $/;"	p	signature:(Tcl_ExitProc * proc, ClientData clientData)
Tcl_CreateExitHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateExitHandler_TCL_DECLARED$/;"	d
Tcl_CreateFileHandler	/usr/include/tclDecls.h	/^#define Tcl_CreateFileHandler /;"	d
Tcl_CreateFileHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateFileHandler (int fd, int mask, $/;"	p	signature:(int fd, int mask, Tcl_FileProc * proc, ClientData clientData)
Tcl_CreateFileHandlerProc	/usr/include/tcl.h	/^typedef void (Tcl_CreateFileHandlerProc) _ANSI_ARGS_((int fd, int mask,$/;"	t
Tcl_CreateFileHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateFileHandler_TCL_DECLARED$/;"	d
Tcl_CreateHashEntry	/usr/include/tcl.h	/^#define Tcl_CreateHashEntry(/;"	d
Tcl_CreateHashEntry	/usr/include/tcl.h	/^#undef  Tcl_CreateHashEntry$/;"	d
Tcl_CreateHashEntry	/usr/include/tclDecls.h	/^#define Tcl_CreateHashEntry /;"	d
Tcl_CreateHashEntry	/usr/include/tclDecls.h	/^EXTERN Tcl_HashEntry *	Tcl_CreateHashEntry (Tcl_HashTable * tablePtr, $/;"	p	signature:(Tcl_HashTable * tablePtr, CONST char * key, int * newPtr)
Tcl_CreateHashEntry_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateHashEntry_TCL_DECLARED$/;"	d
Tcl_CreateInterp	/usr/include/tclDecls.h	/^#define Tcl_CreateInterp /;"	d
Tcl_CreateInterp	/usr/include/tclDecls.h	/^EXTERN Tcl_Interp *	Tcl_CreateInterp (void);$/;"	p	signature:(void)
Tcl_CreateInterp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateInterp_TCL_DECLARED$/;"	d
Tcl_CreateMathFunc	/usr/include/tclDecls.h	/^#define Tcl_CreateMathFunc /;"	d
Tcl_CreateMathFunc	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateMathFunc (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, int numArgs, Tcl_ValueType * argTypes, Tcl_MathProc * proc, ClientData clientData)
Tcl_CreateMathFunc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateMathFunc_TCL_DECLARED$/;"	d
Tcl_CreateNamespace	/usr/include/tclDecls.h	/^#define Tcl_CreateNamespace /;"	d
Tcl_CreateNamespace	/usr/include/tclDecls.h	/^EXTERN Tcl_Namespace *	Tcl_CreateNamespace (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, ClientData clientData, Tcl_NamespaceDeleteProc * deleteProc)
Tcl_CreateNamespace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateNamespace_TCL_DECLARED$/;"	d
Tcl_CreateObjCommand	/usr/include/tclDecls.h	/^#define Tcl_CreateObjCommand /;"	d
Tcl_CreateObjCommand	/usr/include/tclDecls.h	/^EXTERN Tcl_Command	Tcl_CreateObjCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmdName, Tcl_ObjCmdProc * proc, ClientData clientData, Tcl_CmdDeleteProc * deleteProc)
Tcl_CreateObjCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateObjCommand_TCL_DECLARED$/;"	d
Tcl_CreateObjTrace	/usr/include/tclDecls.h	/^#define Tcl_CreateObjTrace /;"	d
Tcl_CreateObjTrace	/usr/include/tclDecls.h	/^EXTERN Tcl_Trace	Tcl_CreateObjTrace (Tcl_Interp* interp, int level, $/;"	p	signature:(Tcl_Interp* interp, int level, int flags, Tcl_CmdObjTraceProc* objProc, ClientData clientData, Tcl_CmdObjTraceDeleteProc* delProc)
Tcl_CreateObjTrace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateObjTrace_TCL_DECLARED$/;"	d
Tcl_CreateSlave	/usr/include/tclDecls.h	/^#define Tcl_CreateSlave /;"	d
Tcl_CreateSlave	/usr/include/tclDecls.h	/^EXTERN Tcl_Interp *	Tcl_CreateSlave (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * slaveName, int isSafe)
Tcl_CreateSlave_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateSlave_TCL_DECLARED$/;"	d
Tcl_CreateThread	/usr/include/tclDecls.h	/^#define Tcl_CreateThread /;"	d
Tcl_CreateThread	/usr/include/tclDecls.h	/^EXTERN int		Tcl_CreateThread (Tcl_ThreadId * idPtr, $/;"	p	signature:(Tcl_ThreadId * idPtr, Tcl_ThreadCreateProc proc, ClientData clientData, int stackSize, int flags)
Tcl_CreateThreadExitHandler	/usr/include/tclDecls.h	/^#define Tcl_CreateThreadExitHandler /;"	d
Tcl_CreateThreadExitHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CreateThreadExitHandler (Tcl_ExitProc * proc, $/;"	p	signature:(Tcl_ExitProc * proc, ClientData clientData)
Tcl_CreateThreadExitHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateThreadExitHandler_TCL_DECLARED$/;"	d
Tcl_CreateThread_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateThread_TCL_DECLARED$/;"	d
Tcl_CreateTimerHandler	/usr/include/tclDecls.h	/^#define Tcl_CreateTimerHandler /;"	d
Tcl_CreateTimerHandler	/usr/include/tclDecls.h	/^EXTERN Tcl_TimerToken	Tcl_CreateTimerHandler (int milliseconds, $/;"	p	signature:(int milliseconds, Tcl_TimerProc * proc, ClientData clientData)
Tcl_CreateTimerHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateTimerHandler_TCL_DECLARED$/;"	d
Tcl_CreateTrace	/usr/include/tclDecls.h	/^#define Tcl_CreateTrace /;"	d
Tcl_CreateTrace	/usr/include/tclDecls.h	/^EXTERN Tcl_Trace	Tcl_CreateTrace (Tcl_Interp * interp, int level, $/;"	p	signature:(Tcl_Interp * interp, int level, Tcl_CmdTraceProc * proc, ClientData clientData)
Tcl_CreateTrace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CreateTrace_TCL_DECLARED$/;"	d
Tcl_CutChannel	/usr/include/tclDecls.h	/^#define Tcl_CutChannel /;"	d
Tcl_CutChannel	/usr/include/tclDecls.h	/^EXTERN void		Tcl_CutChannel (Tcl_Channel channel);$/;"	p	signature:(Tcl_Channel channel)
Tcl_CutChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_CutChannel_TCL_DECLARED$/;"	d
Tcl_DString	/usr/include/tcl.h	/^typedef struct Tcl_DString {$/;"	s
Tcl_DString	/usr/include/tcl.h	/^} Tcl_DString;$/;"	t	typeref:struct:Tcl_DString
Tcl_DString::length	/usr/include/tcl.h	/^    int length;			\/* Number of non-NULL characters in the$/;"	m	struct:Tcl_DString	access:public
Tcl_DString::spaceAvl	/usr/include/tcl.h	/^    int spaceAvl;		\/* Total number of bytes available for the$/;"	m	struct:Tcl_DString	access:public
Tcl_DString::staticSpace	/usr/include/tcl.h	/^    char staticSpace[TCL_DSTRING_STATIC_SIZE];$/;"	m	struct:Tcl_DString	access:public
Tcl_DString::string	/usr/include/tcl.h	/^    char *string;		\/* Points to beginning of string: either$/;"	m	struct:Tcl_DString	access:public
Tcl_DStringAppend	/usr/include/tclDecls.h	/^#define Tcl_DStringAppend /;"	d
Tcl_DStringAppend	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_DStringAppend (Tcl_DString * dsPtr, $/;"	p	signature:(Tcl_DString * dsPtr, CONST char * bytes, int length)
Tcl_DStringAppendElement	/usr/include/tclDecls.h	/^#define Tcl_DStringAppendElement /;"	d
Tcl_DStringAppendElement	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_DStringAppendElement (Tcl_DString * dsPtr, $/;"	p	signature:(Tcl_DString * dsPtr, CONST char * element)
Tcl_DStringAppendElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringAppendElement_TCL_DECLARED$/;"	d
Tcl_DStringAppend_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringAppend_TCL_DECLARED$/;"	d
Tcl_DStringEndSublist	/usr/include/tclDecls.h	/^#define Tcl_DStringEndSublist /;"	d
Tcl_DStringEndSublist	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringEndSublist (Tcl_DString * dsPtr);$/;"	p	signature:(Tcl_DString * dsPtr)
Tcl_DStringEndSublist_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringEndSublist_TCL_DECLARED$/;"	d
Tcl_DStringFree	/usr/include/tclDecls.h	/^#define Tcl_DStringFree /;"	d
Tcl_DStringFree	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringFree (Tcl_DString * dsPtr);$/;"	p	signature:(Tcl_DString * dsPtr)
Tcl_DStringFree_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringFree_TCL_DECLARED$/;"	d
Tcl_DStringGetResult	/usr/include/tclDecls.h	/^#define Tcl_DStringGetResult /;"	d
Tcl_DStringGetResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringGetResult (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_DString * dsPtr)
Tcl_DStringGetResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringGetResult_TCL_DECLARED$/;"	d
Tcl_DStringInit	/usr/include/tclDecls.h	/^#define Tcl_DStringInit /;"	d
Tcl_DStringInit	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringInit (Tcl_DString * dsPtr);$/;"	p	signature:(Tcl_DString * dsPtr)
Tcl_DStringInit_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringInit_TCL_DECLARED$/;"	d
Tcl_DStringLength	/usr/include/tcl.h	/^#define Tcl_DStringLength(/;"	d
Tcl_DStringResult	/usr/include/tclDecls.h	/^#define Tcl_DStringResult /;"	d
Tcl_DStringResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringResult (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_DString * dsPtr)
Tcl_DStringResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringResult_TCL_DECLARED$/;"	d
Tcl_DStringSetLength	/usr/include/tclDecls.h	/^#define Tcl_DStringSetLength /;"	d
Tcl_DStringSetLength	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringSetLength (Tcl_DString * dsPtr, $/;"	p	signature:(Tcl_DString * dsPtr, int length)
Tcl_DStringSetLength_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringSetLength_TCL_DECLARED$/;"	d
Tcl_DStringStartSublist	/usr/include/tclDecls.h	/^#define Tcl_DStringStartSublist /;"	d
Tcl_DStringStartSublist	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DStringStartSublist (Tcl_DString * dsPtr);$/;"	p	signature:(Tcl_DString * dsPtr)
Tcl_DStringStartSublist_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DStringStartSublist_TCL_DECLARED$/;"	d
Tcl_DStringTrunc	/usr/include/tcl.h	/^#define Tcl_DStringTrunc /;"	d
Tcl_DStringValue	/usr/include/tcl.h	/^#define Tcl_DStringValue(/;"	d
Tcl_DbCkalloc	/usr/include/tclDecls.h	/^#define Tcl_DbCkalloc /;"	d
Tcl_DbCkalloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_DbCkalloc (unsigned int size, CONST char * file, $/;"	p	signature:(unsigned int size, CONST char * file, int line)
Tcl_DbCkalloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbCkalloc_TCL_DECLARED$/;"	d
Tcl_DbCkfree	/usr/include/tclDecls.h	/^#define Tcl_DbCkfree /;"	d
Tcl_DbCkfree	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DbCkfree (char * ptr, CONST char * file, $/;"	p	signature:(char * ptr, CONST char * file, int line)
Tcl_DbCkfree_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbCkfree_TCL_DECLARED$/;"	d
Tcl_DbCkrealloc	/usr/include/tclDecls.h	/^#define Tcl_DbCkrealloc /;"	d
Tcl_DbCkrealloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_DbCkrealloc (char * ptr, unsigned int size, $/;"	p	signature:(char * ptr, unsigned int size, CONST char * file, int line)
Tcl_DbCkrealloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbCkrealloc_TCL_DECLARED$/;"	d
Tcl_DbDecrRefCount	/usr/include/tclDecls.h	/^#define Tcl_DbDecrRefCount /;"	d
Tcl_DbDecrRefCount	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DbDecrRefCount (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST char * file, int line)
Tcl_DbDecrRefCount_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbDecrRefCount_TCL_DECLARED$/;"	d
Tcl_DbIncrRefCount	/usr/include/tclDecls.h	/^#define Tcl_DbIncrRefCount /;"	d
Tcl_DbIncrRefCount	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DbIncrRefCount (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST char * file, int line)
Tcl_DbIncrRefCount_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbIncrRefCount_TCL_DECLARED$/;"	d
Tcl_DbIsShared	/usr/include/tclDecls.h	/^#define Tcl_DbIsShared /;"	d
Tcl_DbIsShared	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DbIsShared (Tcl_Obj * objPtr, CONST char * file, $/;"	p	signature:(Tcl_Obj * objPtr, CONST char * file, int line)
Tcl_DbIsShared_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbIsShared_TCL_DECLARED$/;"	d
Tcl_DbNewBignumObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewBignumObj /;"	d
Tcl_DbNewBignumObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_DbNewBignumObj (mp_int* value, CONST char* file, $/;"	p	signature:(mp_int* value, CONST char* file, int line)
Tcl_DbNewBignumObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewBignumObj_TCL_DECLARED$/;"	d
Tcl_DbNewBooleanObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewBooleanObj /;"	d
Tcl_DbNewBooleanObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewBooleanObj (int boolValue, $/;"	p	signature:(int boolValue, CONST char * file, int line)
Tcl_DbNewBooleanObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewBooleanObj_TCL_DECLARED$/;"	d
Tcl_DbNewByteArrayObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewByteArrayObj /;"	d
Tcl_DbNewByteArrayObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewByteArrayObj (CONST unsigned char * bytes, $/;"	p	signature:(CONST unsigned char * bytes, int length, CONST char * file, int line)
Tcl_DbNewByteArrayObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewByteArrayObj_TCL_DECLARED$/;"	d
Tcl_DbNewDictObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewDictObj /;"	d
Tcl_DbNewDictObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewDictObj (CONST char * file, int line);$/;"	p	signature:(CONST char * file, int line)
Tcl_DbNewDictObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewDictObj_TCL_DECLARED$/;"	d
Tcl_DbNewDoubleObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewDoubleObj /;"	d
Tcl_DbNewDoubleObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewDoubleObj (double doubleValue, $/;"	p	signature:(double doubleValue, CONST char * file, int line)
Tcl_DbNewDoubleObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewDoubleObj_TCL_DECLARED$/;"	d
Tcl_DbNewListObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewListObj /;"	d
Tcl_DbNewListObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewListObj (int objc, Tcl_Obj *CONST * objv, $/;"	p	signature:(int objc, Tcl_Obj *CONST * objv, CONST char * file, int line)
Tcl_DbNewListObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewListObj_TCL_DECLARED$/;"	d
Tcl_DbNewLongObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewLongObj /;"	d
Tcl_DbNewLongObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewLongObj (long longValue, CONST char * file, $/;"	p	signature:(long longValue, CONST char * file, int line)
Tcl_DbNewLongObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewLongObj_TCL_DECLARED$/;"	d
Tcl_DbNewObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewObj /;"	d
Tcl_DbNewObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewObj (CONST char * file, int line);$/;"	p	signature:(CONST char * file, int line)
Tcl_DbNewObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewObj_TCL_DECLARED$/;"	d
Tcl_DbNewStringObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewStringObj /;"	d
Tcl_DbNewStringObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewStringObj (CONST char * bytes, int length, $/;"	p	signature:(CONST char * bytes, int length, CONST char * file, int line)
Tcl_DbNewStringObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewStringObj_TCL_DECLARED$/;"	d
Tcl_DbNewWideIntObj	/usr/include/tclDecls.h	/^#define Tcl_DbNewWideIntObj /;"	d
Tcl_DbNewWideIntObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DbNewWideIntObj (Tcl_WideInt wideValue, $/;"	p	signature:(Tcl_WideInt wideValue, CONST char * file, int line)
Tcl_DbNewWideIntObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DbNewWideIntObj_TCL_DECLARED$/;"	d
Tcl_DecrRefCount	/usr/include/tcl.h	/^#   define Tcl_DecrRefCount(/;"	d
Tcl_DecrRefCount	/usr/include/tcl.h	/^void		Tcl_DecrRefCount _ANSI_ARGS_((Tcl_Obj *objPtr));$/;"	p	signature:(Tcl_Obj *objPtr)
Tcl_DeleteAssocData	/usr/include/tclDecls.h	/^#define Tcl_DeleteAssocData /;"	d
Tcl_DeleteAssocData	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteAssocData (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name)
Tcl_DeleteAssocData_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteAssocData_TCL_DECLARED$/;"	d
Tcl_DeleteChannelHandler	/usr/include/tclDecls.h	/^#define Tcl_DeleteChannelHandler /;"	d
Tcl_DeleteChannelHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteChannelHandler (Tcl_Channel chan, $/;"	p	signature:(Tcl_Channel chan, Tcl_ChannelProc * proc, ClientData clientData)
Tcl_DeleteChannelHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteChannelHandler_TCL_DECLARED$/;"	d
Tcl_DeleteCloseHandler	/usr/include/tclDecls.h	/^#define Tcl_DeleteCloseHandler /;"	d
Tcl_DeleteCloseHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteCloseHandler (Tcl_Channel chan, $/;"	p	signature:(Tcl_Channel chan, Tcl_CloseProc * proc, ClientData clientData)
Tcl_DeleteCloseHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteCloseHandler_TCL_DECLARED$/;"	d
Tcl_DeleteCommand	/usr/include/tclDecls.h	/^#define Tcl_DeleteCommand /;"	d
Tcl_DeleteCommand	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DeleteCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmdName)
Tcl_DeleteCommandFromToken	/usr/include/tclDecls.h	/^#define Tcl_DeleteCommandFromToken /;"	d
Tcl_DeleteCommandFromToken	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DeleteCommandFromToken (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command command)
Tcl_DeleteCommandFromToken_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteCommandFromToken_TCL_DECLARED$/;"	d
Tcl_DeleteCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteCommand_TCL_DECLARED$/;"	d
Tcl_DeleteEventSource	/usr/include/tclDecls.h	/^#define Tcl_DeleteEventSource /;"	d
Tcl_DeleteEventSource	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteEventSource ($/;"	p	signature:( Tcl_EventSetupProc * setupProc, Tcl_EventCheckProc * checkProc, ClientData clientData)
Tcl_DeleteEventSource_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteEventSource_TCL_DECLARED$/;"	d
Tcl_DeleteEvents	/usr/include/tclDecls.h	/^#define Tcl_DeleteEvents /;"	d
Tcl_DeleteEvents	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteEvents (Tcl_EventDeleteProc * proc, $/;"	p	signature:(Tcl_EventDeleteProc * proc, ClientData clientData)
Tcl_DeleteEvents_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteEvents_TCL_DECLARED$/;"	d
Tcl_DeleteExitHandler	/usr/include/tclDecls.h	/^#define Tcl_DeleteExitHandler /;"	d
Tcl_DeleteExitHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteExitHandler (Tcl_ExitProc * proc, $/;"	p	signature:(Tcl_ExitProc * proc, ClientData clientData)
Tcl_DeleteExitHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteExitHandler_TCL_DECLARED$/;"	d
Tcl_DeleteFileHandler	/usr/include/tclDecls.h	/^#define Tcl_DeleteFileHandler /;"	d
Tcl_DeleteFileHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteFileHandler (int fd);$/;"	p	signature:(int fd)
Tcl_DeleteFileHandlerProc	/usr/include/tcl.h	/^typedef void (Tcl_DeleteFileHandlerProc) _ANSI_ARGS_((int fd));$/;"	t
Tcl_DeleteFileHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteFileHandler_TCL_DECLARED$/;"	d
Tcl_DeleteHashEntry	/usr/include/tclDecls.h	/^#define Tcl_DeleteHashEntry /;"	d
Tcl_DeleteHashEntry	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteHashEntry (Tcl_HashEntry * entryPtr);$/;"	p	signature:(Tcl_HashEntry * entryPtr)
Tcl_DeleteHashEntry_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteHashEntry_TCL_DECLARED$/;"	d
Tcl_DeleteHashTable	/usr/include/tclDecls.h	/^#define Tcl_DeleteHashTable /;"	d
Tcl_DeleteHashTable	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteHashTable (Tcl_HashTable * tablePtr);$/;"	p	signature:(Tcl_HashTable * tablePtr)
Tcl_DeleteHashTable_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteHashTable_TCL_DECLARED$/;"	d
Tcl_DeleteInterp	/usr/include/tclDecls.h	/^#define Tcl_DeleteInterp /;"	d
Tcl_DeleteInterp	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteInterp (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_DeleteInterp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteInterp_TCL_DECLARED$/;"	d
Tcl_DeleteNamespace	/usr/include/tclDecls.h	/^#define Tcl_DeleteNamespace /;"	d
Tcl_DeleteNamespace	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteNamespace (Tcl_Namespace * nsPtr);$/;"	p	signature:(Tcl_Namespace * nsPtr)
Tcl_DeleteNamespace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteNamespace_TCL_DECLARED$/;"	d
Tcl_DeleteThreadExitHandler	/usr/include/tclDecls.h	/^#define Tcl_DeleteThreadExitHandler /;"	d
Tcl_DeleteThreadExitHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteThreadExitHandler (Tcl_ExitProc * proc, $/;"	p	signature:(Tcl_ExitProc * proc, ClientData clientData)
Tcl_DeleteThreadExitHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteThreadExitHandler_TCL_DECLARED$/;"	d
Tcl_DeleteTimerHandler	/usr/include/tclDecls.h	/^#define Tcl_DeleteTimerHandler /;"	d
Tcl_DeleteTimerHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteTimerHandler (Tcl_TimerToken token);$/;"	p	signature:(Tcl_TimerToken token)
Tcl_DeleteTimerHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteTimerHandler_TCL_DECLARED$/;"	d
Tcl_DeleteTrace	/usr/include/tclDecls.h	/^#define Tcl_DeleteTrace /;"	d
Tcl_DeleteTrace	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DeleteTrace (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Trace trace)
Tcl_DeleteTrace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DeleteTrace_TCL_DECLARED$/;"	d
Tcl_DetachChannel	/usr/include/tclDecls.h	/^#define Tcl_DetachChannel /;"	d
Tcl_DetachChannel	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DetachChannel (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Channel channel)
Tcl_DetachChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DetachChannel_TCL_DECLARED$/;"	d
Tcl_DetachPids	/usr/include/tclDecls.h	/^#define Tcl_DetachPids /;"	d
Tcl_DetachPids	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DetachPids (int numPids, Tcl_Pid * pidPtr);$/;"	p	signature:(int numPids, Tcl_Pid * pidPtr)
Tcl_DetachPids_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DetachPids_TCL_DECLARED$/;"	d
Tcl_Dict	/usr/include/tcl.h	/^typedef struct Tcl_Dict_ *Tcl_Dict;$/;"	t	typeref:struct:Tcl_Dict_
Tcl_DictObjDone	/usr/include/tclDecls.h	/^#define Tcl_DictObjDone /;"	d
Tcl_DictObjDone	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DictObjDone (Tcl_DictSearch * searchPtr);$/;"	p	signature:(Tcl_DictSearch * searchPtr)
Tcl_DictObjDone_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjDone_TCL_DECLARED$/;"	d
Tcl_DictObjFirst	/usr/include/tclDecls.h	/^#define Tcl_DictObjFirst /;"	d
Tcl_DictObjFirst	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjFirst (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr)
Tcl_DictObjFirst_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjFirst_TCL_DECLARED$/;"	d
Tcl_DictObjGet	/usr/include/tclDecls.h	/^#define Tcl_DictObjGet /;"	d
Tcl_DictObjGet	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjGet (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj ** valuePtrPtr)
Tcl_DictObjGet_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjGet_TCL_DECLARED$/;"	d
Tcl_DictObjNext	/usr/include/tclDecls.h	/^#define Tcl_DictObjNext /;"	d
Tcl_DictObjNext	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DictObjNext (Tcl_DictSearch * searchPtr, $/;"	p	signature:(Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr)
Tcl_DictObjNext_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjNext_TCL_DECLARED$/;"	d
Tcl_DictObjPut	/usr/include/tclDecls.h	/^#define Tcl_DictObjPut /;"	d
Tcl_DictObjPut	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjPut (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj * valuePtr)
Tcl_DictObjPutKeyList	/usr/include/tclDecls.h	/^#define Tcl_DictObjPutKeyList /;"	d
Tcl_DictObjPutKeyList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjPutKeyList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv, Tcl_Obj * valuePtr)
Tcl_DictObjPutKeyList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjPutKeyList_TCL_DECLARED$/;"	d
Tcl_DictObjPut_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjPut_TCL_DECLARED$/;"	d
Tcl_DictObjRemove	/usr/include/tclDecls.h	/^#define Tcl_DictObjRemove /;"	d
Tcl_DictObjRemove	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjRemove (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr)
Tcl_DictObjRemoveKeyList	/usr/include/tclDecls.h	/^#define Tcl_DictObjRemoveKeyList /;"	d
Tcl_DictObjRemoveKeyList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjRemoveKeyList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv)
Tcl_DictObjRemoveKeyList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjRemoveKeyList_TCL_DECLARED$/;"	d
Tcl_DictObjRemove_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjRemove_TCL_DECLARED$/;"	d
Tcl_DictObjSize	/usr/include/tclDecls.h	/^#define Tcl_DictObjSize /;"	d
Tcl_DictObjSize	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DictObjSize (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * dictPtr, int * sizePtr)
Tcl_DictObjSize_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DictObjSize_TCL_DECLARED$/;"	d
Tcl_DictSearch	/usr/include/tcl.h	/^} Tcl_DictSearch;$/;"	t	typeref:struct:__anon118
Tcl_DiscardInterpState	/usr/include/tclDecls.h	/^#define Tcl_DiscardInterpState /;"	d
Tcl_DiscardInterpState	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DiscardInterpState (Tcl_InterpState state);$/;"	p	signature:(Tcl_InterpState state)
Tcl_DiscardInterpState_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DiscardInterpState_TCL_DECLARED$/;"	d
Tcl_DiscardResult	/usr/include/tclDecls.h	/^#define Tcl_DiscardResult /;"	d
Tcl_DiscardResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DiscardResult (Tcl_SavedResult * statePtr);$/;"	p	signature:(Tcl_SavedResult * statePtr)
Tcl_DiscardResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DiscardResult_TCL_DECLARED$/;"	d
Tcl_DoOneEvent	/usr/include/tclDecls.h	/^#define Tcl_DoOneEvent /;"	d
Tcl_DoOneEvent	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DoOneEvent (int flags);$/;"	p	signature:(int flags)
Tcl_DoOneEvent_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DoOneEvent_TCL_DECLARED$/;"	d
Tcl_DoWhenIdle	/usr/include/tclDecls.h	/^#define Tcl_DoWhenIdle /;"	d
Tcl_DoWhenIdle	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DoWhenIdle (Tcl_IdleProc * proc, $/;"	p	signature:(Tcl_IdleProc * proc, ClientData clientData)
Tcl_DoWhenIdle_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DoWhenIdle_TCL_DECLARED$/;"	d
Tcl_DontCallWhenDeleted	/usr/include/tclDecls.h	/^#define Tcl_DontCallWhenDeleted /;"	d
Tcl_DontCallWhenDeleted	/usr/include/tclDecls.h	/^EXTERN void		Tcl_DontCallWhenDeleted (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_InterpDeleteProc * proc, ClientData clientData)
Tcl_DontCallWhenDeleted_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DontCallWhenDeleted_TCL_DECLARED$/;"	d
Tcl_DoubleAsWide	/usr/include/tcl.h	/^#   define Tcl_DoubleAsWide(/;"	d
Tcl_DriverBlockModeProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverBlockModeProc) _ANSI_ARGS_(($/;"	t
Tcl_DriverClose2Proc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverClose2Proc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tcl_DriverCloseProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverCloseProc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tcl_DriverFlushProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverFlushProc) _ANSI_ARGS_((ClientData instanceData));$/;"	t
Tcl_DriverGetHandleProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverGetHandleProc) _ANSI_ARGS_(($/;"	t
Tcl_DriverGetOptionProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverGetOptionProc) _ANSI_ARGS_(($/;"	t
Tcl_DriverHandlerProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverHandlerProc) _ANSI_ARGS_(($/;"	t
Tcl_DriverInputProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverInputProc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tcl_DriverOutputProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverOutputProc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tcl_DriverSeekProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverSeekProc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tcl_DriverSetOptionProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverSetOptionProc) _ANSI_ARGS_(($/;"	t
Tcl_DriverThreadActionProc	/usr/include/tcl.h	/^typedef void	(Tcl_DriverThreadActionProc) _ANSI_ARGS_ (($/;"	t
Tcl_DriverTruncateProc	/usr/include/tcl.h	/^typedef int	(Tcl_DriverTruncateProc) _ANSI_ARGS_(($/;"	t
Tcl_DriverWatchProc	/usr/include/tcl.h	/^typedef void	(Tcl_DriverWatchProc) _ANSI_ARGS_(($/;"	t
Tcl_DumpActiveMemory	/usr/include/tcl.h	/^#   define Tcl_DumpActiveMemory(/;"	d
Tcl_DumpActiveMemory	/usr/include/tcl.h	/^#   undef  Tcl_DumpActiveMemory$/;"	d
Tcl_DumpActiveMemory	/usr/include/tclDecls.h	/^#define Tcl_DumpActiveMemory /;"	d
Tcl_DumpActiveMemory	/usr/include/tclDecls.h	/^EXTERN int		Tcl_DumpActiveMemory (CONST char * fileName);$/;"	p	signature:(CONST char * fileName)
Tcl_DumpActiveMemory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DumpActiveMemory_TCL_DECLARED$/;"	d
Tcl_DupInternalRepProc	/usr/include/tcl.h	/^typedef void (Tcl_DupInternalRepProc) _ANSI_ARGS_((struct Tcl_Obj *srcPtr,$/;"	t
Tcl_DuplicateObj	/usr/include/tclDecls.h	/^#define Tcl_DuplicateObj /;"	d
Tcl_DuplicateObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_DuplicateObj (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tcl_DuplicateObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_DuplicateObj_TCL_DECLARED$/;"	d
Tcl_Encoding	/usr/include/tcl.h	/^typedef struct Tcl_Encoding_ *Tcl_Encoding;$/;"	t	typeref:struct:Tcl_Encoding_
Tcl_EncodingConvertProc	/usr/include/tcl.h	/^typedef int (Tcl_EncodingConvertProc)_ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_EncodingFreeProc	/usr/include/tcl.h	/^typedef void (Tcl_EncodingFreeProc)_ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_EncodingState	/usr/include/tcl.h	/^typedef struct Tcl_EncodingState_ *Tcl_EncodingState;$/;"	t	typeref:struct:Tcl_EncodingState_
Tcl_EncodingType	/usr/include/tcl.h	/^typedef struct Tcl_EncodingType {$/;"	s
Tcl_EncodingType	/usr/include/tcl.h	/^} Tcl_EncodingType;$/;"	t	typeref:struct:Tcl_EncodingType
Tcl_EncodingType::clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* Arbitrary value associated with encoding$/;"	m	struct:Tcl_EncodingType	access:public
Tcl_EncodingType::encodingName	/usr/include/tcl.h	/^    CONST char *encodingName;	\/* The name of the encoding, e.g. "euc-jp".$/;"	m	struct:Tcl_EncodingType	access:public
Tcl_EncodingType::freeProc	/usr/include/tcl.h	/^    Tcl_EncodingFreeProc *freeProc;$/;"	m	struct:Tcl_EncodingType	access:public
Tcl_EncodingType::fromUtfProc	/usr/include/tcl.h	/^    Tcl_EncodingConvertProc *fromUtfProc;$/;"	m	struct:Tcl_EncodingType	access:public
Tcl_EncodingType::nullSize	/usr/include/tcl.h	/^    int nullSize;		\/* Number of zero bytes that signify$/;"	m	struct:Tcl_EncodingType	access:public
Tcl_EncodingType::toUtfProc	/usr/include/tcl.h	/^    Tcl_EncodingConvertProc *toUtfProc;$/;"	m	struct:Tcl_EncodingType	access:public
Tcl_Eof	/usr/include/tclDecls.h	/^#define Tcl_Eof /;"	d
Tcl_Eof	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Eof (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_Eof_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Eof_TCL_DECLARED$/;"	d
Tcl_ErrnoId	/usr/include/tclDecls.h	/^#define Tcl_ErrnoId /;"	d
Tcl_ErrnoId	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_ErrnoId (void);$/;"	p	signature:(void)
Tcl_ErrnoId_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ErrnoId_TCL_DECLARED$/;"	d
Tcl_ErrnoMsg	/usr/include/tclDecls.h	/^#define Tcl_ErrnoMsg /;"	d
Tcl_ErrnoMsg	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_ErrnoMsg (int err);$/;"	p	signature:(int err)
Tcl_ErrnoMsg_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ErrnoMsg_TCL_DECLARED$/;"	d
Tcl_Eval	/usr/include/tclDecls.h	/^#define Tcl_Eval /;"	d
Tcl_Eval	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Eval (Tcl_Interp * interp, CONST char * script);$/;"	p	signature:(Tcl_Interp * interp, CONST char * script)
Tcl_EvalEx	/usr/include/tclDecls.h	/^#define Tcl_EvalEx /;"	d
Tcl_EvalEx	/usr/include/tclDecls.h	/^EXTERN int		Tcl_EvalEx (Tcl_Interp * interp, CONST char * script, $/;"	p	signature:(Tcl_Interp * interp, CONST char * script, int numBytes, int flags)
Tcl_EvalEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalEx_TCL_DECLARED$/;"	d
Tcl_EvalFile	/usr/include/tclDecls.h	/^#define Tcl_EvalFile /;"	d
Tcl_EvalFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_EvalFile (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * fileName)
Tcl_EvalFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalFile_TCL_DECLARED$/;"	d
Tcl_EvalObj	/usr/include/tcl.h	/^#   define Tcl_EvalObj(/;"	d
Tcl_EvalObj	/usr/include/tcl.h	/^#   undef  Tcl_EvalObj$/;"	d
Tcl_EvalObj	/usr/include/tclDecls.h	/^#define Tcl_EvalObj /;"	d
Tcl_EvalObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_EvalObj (Tcl_Interp * interp, Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr)
Tcl_EvalObjEx	/usr/include/tclDecls.h	/^#define Tcl_EvalObjEx /;"	d
Tcl_EvalObjEx	/usr/include/tclDecls.h	/^EXTERN int		Tcl_EvalObjEx (Tcl_Interp * interp, Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, int flags)
Tcl_EvalObjEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalObjEx_TCL_DECLARED$/;"	d
Tcl_EvalObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalObj_TCL_DECLARED$/;"	d
Tcl_EvalObjv	/usr/include/tclDecls.h	/^#define Tcl_EvalObjv /;"	d
Tcl_EvalObjv	/usr/include/tclDecls.h	/^EXTERN int		Tcl_EvalObjv (Tcl_Interp * interp, int objc, $/;"	p	signature:(Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], int flags)
Tcl_EvalObjv_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalObjv_TCL_DECLARED$/;"	d
Tcl_EvalTokens	/usr/include/tclDecls.h	/^#define Tcl_EvalTokens /;"	d
Tcl_EvalTokens	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_EvalTokens (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Token * tokenPtr, int count)
Tcl_EvalTokensStandard	/usr/include/tclDecls.h	/^#define Tcl_EvalTokensStandard /;"	d
Tcl_EvalTokensStandard	/usr/include/tclDecls.h	/^EXTERN int		Tcl_EvalTokensStandard (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Token * tokenPtr, int count)
Tcl_EvalTokensStandard_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalTokensStandard_TCL_DECLARED$/;"	d
Tcl_EvalTokens_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EvalTokens_TCL_DECLARED$/;"	d
Tcl_Eval_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Eval_TCL_DECLARED$/;"	d
Tcl_Event	/usr/include/tcl.h	/^struct Tcl_Event {$/;"	s
Tcl_Event	/usr/include/tcl.h	/^typedef struct Tcl_Event Tcl_Event;$/;"	t	typeref:struct:Tcl_Event
Tcl_Event::nextPtr	/usr/include/tcl.h	/^    struct Tcl_Event *nextPtr;	\/* Next in list of pending events, or NULL. *\/$/;"	m	struct:Tcl_Event	typeref:struct:Tcl_Event::Tcl_Event	access:public
Tcl_Event::proc	/usr/include/tcl.h	/^    Tcl_EventProc *proc;	\/* Function to call to service this event. *\/$/;"	m	struct:Tcl_Event	access:public
Tcl_EventCheckProc	/usr/include/tcl.h	/^typedef void (Tcl_EventCheckProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_EventDeleteProc	/usr/include/tcl.h	/^typedef int (Tcl_EventDeleteProc) _ANSI_ARGS_((Tcl_Event *evPtr,$/;"	t
Tcl_EventProc	/usr/include/tcl.h	/^typedef int (Tcl_EventProc) _ANSI_ARGS_((Tcl_Event *evPtr, int flags));$/;"	t
Tcl_EventSetupProc	/usr/include/tcl.h	/^typedef void (Tcl_EventSetupProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_EventuallyFree	/usr/include/tclDecls.h	/^#define Tcl_EventuallyFree /;"	d
Tcl_EventuallyFree	/usr/include/tclDecls.h	/^EXTERN void		Tcl_EventuallyFree (ClientData clientData, $/;"	p	signature:(ClientData clientData, Tcl_FreeProc * freeProc)
Tcl_EventuallyFree_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_EventuallyFree_TCL_DECLARED$/;"	d
Tcl_Exit	/usr/include/tclDecls.h	/^#define Tcl_Exit /;"	d
Tcl_Exit	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Exit (int status);$/;"	p	signature:(int status)
Tcl_ExitProc	/usr/include/tcl.h	/^typedef void (Tcl_ExitProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_ExitThread	/usr/include/tclDecls.h	/^#define Tcl_ExitThread /;"	d
Tcl_ExitThread	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ExitThread (int status);$/;"	p	signature:(int status)
Tcl_ExitThread_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExitThread_TCL_DECLARED$/;"	d
Tcl_Exit_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Exit_TCL_DECLARED$/;"	d
Tcl_Export	/usr/include/tclDecls.h	/^#define Tcl_Export /;"	d
Tcl_Export	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Export (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern, int resetListFirst)
Tcl_Export_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Export_TCL_DECLARED$/;"	d
Tcl_ExposeCommand	/usr/include/tclDecls.h	/^#define Tcl_ExposeCommand /;"	d
Tcl_ExposeCommand	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExposeCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * hiddenCmdToken, CONST char * cmdName)
Tcl_ExposeCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExposeCommand_TCL_DECLARED$/;"	d
Tcl_ExprBoolean	/usr/include/tclDecls.h	/^#define Tcl_ExprBoolean /;"	d
Tcl_ExprBoolean	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprBoolean (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * expr, int * ptr)
Tcl_ExprBooleanObj	/usr/include/tclDecls.h	/^#define Tcl_ExprBooleanObj /;"	d
Tcl_ExprBooleanObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprBooleanObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, int * ptr)
Tcl_ExprBooleanObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprBooleanObj_TCL_DECLARED$/;"	d
Tcl_ExprBoolean_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprBoolean_TCL_DECLARED$/;"	d
Tcl_ExprDouble	/usr/include/tclDecls.h	/^#define Tcl_ExprDouble /;"	d
Tcl_ExprDouble	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprDouble (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * expr, double * ptr)
Tcl_ExprDoubleObj	/usr/include/tclDecls.h	/^#define Tcl_ExprDoubleObj /;"	d
Tcl_ExprDoubleObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprDoubleObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, double * ptr)
Tcl_ExprDoubleObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprDoubleObj_TCL_DECLARED$/;"	d
Tcl_ExprDouble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprDouble_TCL_DECLARED$/;"	d
Tcl_ExprLong	/usr/include/tclDecls.h	/^#define Tcl_ExprLong /;"	d
Tcl_ExprLong	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprLong (Tcl_Interp * interp, CONST char * expr, $/;"	p	signature:(Tcl_Interp * interp, CONST char * expr, long * ptr)
Tcl_ExprLongObj	/usr/include/tclDecls.h	/^#define Tcl_ExprLongObj /;"	d
Tcl_ExprLongObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprLongObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, long * ptr)
Tcl_ExprLongObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprLongObj_TCL_DECLARED$/;"	d
Tcl_ExprLong_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprLong_TCL_DECLARED$/;"	d
Tcl_ExprObj	/usr/include/tclDecls.h	/^#define Tcl_ExprObj /;"	d
Tcl_ExprObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprObj (Tcl_Interp * interp, Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_Obj ** resultPtrPtr)
Tcl_ExprObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprObj_TCL_DECLARED$/;"	d
Tcl_ExprString	/usr/include/tclDecls.h	/^#define Tcl_ExprString /;"	d
Tcl_ExprString	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExprString (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * expr)
Tcl_ExprString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExprString_TCL_DECLARED$/;"	d
Tcl_ExternalToUtf	/usr/include/tclDecls.h	/^#define Tcl_ExternalToUtf /;"	d
Tcl_ExternalToUtf	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ExternalToUtf (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Encoding encoding, CONST char * src, int srcLen, int flags, Tcl_EncodingState * statePtr, char * dst, int dstLen, int * srcReadPtr, int * dstWrotePtr, int * dstCharsPtr)
Tcl_ExternalToUtfDString	/usr/include/tclDecls.h	/^#define Tcl_ExternalToUtfDString /;"	d
Tcl_ExternalToUtfDString	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_ExternalToUtfDString (Tcl_Encoding encoding, $/;"	p	signature:(Tcl_Encoding encoding, CONST char * src, int srcLen, Tcl_DString * dsPtr)
Tcl_ExternalToUtfDString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExternalToUtfDString_TCL_DECLARED$/;"	d
Tcl_ExternalToUtf_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ExternalToUtf_TCL_DECLARED$/;"	d
Tcl_FSAccess	/usr/include/tclDecls.h	/^#define Tcl_FSAccess /;"	d
Tcl_FSAccess	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSAccess (Tcl_Obj * pathPtr, int mode);$/;"	p	signature:(Tcl_Obj * pathPtr, int mode)
Tcl_FSAccessProc	/usr/include/tcl.h	/^typedef int (Tcl_FSAccessProc) _ANSI_ARGS_((Tcl_Obj *pathPtr, int mode));$/;"	t
Tcl_FSAccess_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSAccess_TCL_DECLARED$/;"	d
Tcl_FSChdir	/usr/include/tclDecls.h	/^#define Tcl_FSChdir /;"	d
Tcl_FSChdir	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSChdir (Tcl_Obj * pathPtr);$/;"	p	signature:(Tcl_Obj * pathPtr)
Tcl_FSChdirProc	/usr/include/tcl.h	/^typedef int (Tcl_FSChdirProc) _ANSI_ARGS_((Tcl_Obj *pathPtr));$/;"	t
Tcl_FSChdir_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSChdir_TCL_DECLARED$/;"	d
Tcl_FSConvertToPathType	/usr/include/tclDecls.h	/^#define Tcl_FSConvertToPathType /;"	d
Tcl_FSConvertToPathType	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSConvertToPathType (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * pathPtr)
Tcl_FSConvertToPathType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSConvertToPathType_TCL_DECLARED$/;"	d
Tcl_FSCopyDirectory	/usr/include/tclDecls.h	/^#define Tcl_FSCopyDirectory /;"	d
Tcl_FSCopyDirectory	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSCopyDirectory (Tcl_Obj * srcPathPtr, $/;"	p	signature:(Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr, Tcl_Obj ** errorPtr)
Tcl_FSCopyDirectoryProc	/usr/include/tcl.h	/^typedef int (Tcl_FSCopyDirectoryProc) _ANSI_ARGS_((Tcl_Obj *srcPathPtr,$/;"	t
Tcl_FSCopyDirectory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSCopyDirectory_TCL_DECLARED$/;"	d
Tcl_FSCopyFile	/usr/include/tclDecls.h	/^#define Tcl_FSCopyFile /;"	d
Tcl_FSCopyFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSCopyFile (Tcl_Obj * srcPathPtr, $/;"	p	signature:(Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr)
Tcl_FSCopyFileProc	/usr/include/tcl.h	/^typedef int (Tcl_FSCopyFileProc) _ANSI_ARGS_((Tcl_Obj *srcPathPtr,$/;"	t
Tcl_FSCopyFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSCopyFile_TCL_DECLARED$/;"	d
Tcl_FSCreateDirectory	/usr/include/tclDecls.h	/^#define Tcl_FSCreateDirectory /;"	d
Tcl_FSCreateDirectory	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSCreateDirectory (Tcl_Obj * pathPtr);$/;"	p	signature:(Tcl_Obj * pathPtr)
Tcl_FSCreateDirectoryProc	/usr/include/tcl.h	/^typedef int (Tcl_FSCreateDirectoryProc) _ANSI_ARGS_((Tcl_Obj *pathPtr));$/;"	t
Tcl_FSCreateDirectory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSCreateDirectory_TCL_DECLARED$/;"	d
Tcl_FSData	/usr/include/tclDecls.h	/^#define Tcl_FSData /;"	d
Tcl_FSData	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_FSData (Tcl_Filesystem * fsPtr);$/;"	p	signature:(Tcl_Filesystem * fsPtr)
Tcl_FSData_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSData_TCL_DECLARED$/;"	d
Tcl_FSDeleteFile	/usr/include/tclDecls.h	/^#define Tcl_FSDeleteFile /;"	d
Tcl_FSDeleteFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSDeleteFile (Tcl_Obj * pathPtr);$/;"	p	signature:(Tcl_Obj * pathPtr)
Tcl_FSDeleteFileProc	/usr/include/tcl.h	/^typedef int (Tcl_FSDeleteFileProc) _ANSI_ARGS_((Tcl_Obj *pathPtr));$/;"	t
Tcl_FSDeleteFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSDeleteFile_TCL_DECLARED$/;"	d
Tcl_FSEqualPaths	/usr/include/tclDecls.h	/^#define Tcl_FSEqualPaths /;"	d
Tcl_FSEqualPaths	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSEqualPaths (Tcl_Obj* firstPtr, $/;"	p	signature:(Tcl_Obj* firstPtr, Tcl_Obj* secondPtr)
Tcl_FSEqualPaths_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSEqualPaths_TCL_DECLARED$/;"	d
Tcl_FSEvalFile	/usr/include/tclDecls.h	/^#define Tcl_FSEvalFile /;"	d
Tcl_FSEvalFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSEvalFile (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * fileName)
Tcl_FSEvalFileEx	/usr/include/tclDecls.h	/^#define Tcl_FSEvalFileEx /;"	d
Tcl_FSEvalFileEx	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSEvalFileEx (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * fileName, CONST char * encodingName)
Tcl_FSEvalFileEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSEvalFileEx_TCL_DECLARED$/;"	d
Tcl_FSEvalFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSEvalFile_TCL_DECLARED$/;"	d
Tcl_FSFileAttrStrings	/usr/include/tclDecls.h	/^#define Tcl_FSFileAttrStrings /;"	d
Tcl_FSFileAttrStrings	/usr/include/tclDecls.h	/^EXTERN CONST char **	Tcl_FSFileAttrStrings (Tcl_Obj * pathPtr, $/;"	p	signature:(Tcl_Obj * pathPtr, Tcl_Obj ** objPtrRef)
Tcl_FSFileAttrStringsProc	/usr/include/tcl.h	/^typedef CONST char ** (Tcl_FSFileAttrStringsProc) _ANSI_ARGS_(($/;"	t
Tcl_FSFileAttrStrings_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSFileAttrStrings_TCL_DECLARED$/;"	d
Tcl_FSFileAttrsGet	/usr/include/tclDecls.h	/^#define Tcl_FSFileAttrsGet /;"	d
Tcl_FSFileAttrsGet	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSFileAttrsGet (Tcl_Interp * interp, int index, $/;"	p	signature:(Tcl_Interp * interp, int index, Tcl_Obj * pathPtr, Tcl_Obj ** objPtrRef)
Tcl_FSFileAttrsGetProc	/usr/include/tcl.h	/^typedef int (Tcl_FSFileAttrsGetProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tcl_FSFileAttrsGet_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSFileAttrsGet_TCL_DECLARED$/;"	d
Tcl_FSFileAttrsSet	/usr/include/tclDecls.h	/^#define Tcl_FSFileAttrsSet /;"	d
Tcl_FSFileAttrsSet	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSFileAttrsSet (Tcl_Interp * interp, int index, $/;"	p	signature:(Tcl_Interp * interp, int index, Tcl_Obj * pathPtr, Tcl_Obj * objPtr)
Tcl_FSFileAttrsSetProc	/usr/include/tcl.h	/^typedef int (Tcl_FSFileAttrsSetProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tcl_FSFileAttrsSet_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSFileAttrsSet_TCL_DECLARED$/;"	d
Tcl_FSFileSystemInfo	/usr/include/tclDecls.h	/^#define Tcl_FSFileSystemInfo /;"	d
Tcl_FSFileSystemInfo	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSFileSystemInfo (Tcl_Obj* pathPtr);$/;"	p	signature:(Tcl_Obj* pathPtr)
Tcl_FSFileSystemInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSFileSystemInfo_TCL_DECLARED$/;"	d
Tcl_FSFilesystemPathTypeProc	/usr/include/tcl.h	/^typedef Tcl_Obj * (Tcl_FSFilesystemPathTypeProc) _ANSI_ARGS_(($/;"	t
Tcl_FSFilesystemSeparatorProc	/usr/include/tcl.h	/^typedef Tcl_Obj * (Tcl_FSFilesystemSeparatorProc) _ANSI_ARGS_(($/;"	t
Tcl_FSFreeInternalRepProc	/usr/include/tcl.h	/^typedef void (Tcl_FSFreeInternalRepProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_FSGetCwd	/usr/include/tclDecls.h	/^#define Tcl_FSGetCwd /;"	d
Tcl_FSGetCwd	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSGetCwd (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_FSGetCwdProc	/usr/include/tcl.h	/^typedef Tcl_Obj * (Tcl_FSGetCwdProc) _ANSI_ARGS_((Tcl_Interp *interp));$/;"	t
Tcl_FSGetCwd_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetCwd_TCL_DECLARED$/;"	d
Tcl_FSGetFileSystemForPath	/usr/include/tclDecls.h	/^#define Tcl_FSGetFileSystemForPath /;"	d
Tcl_FSGetFileSystemForPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Filesystem*	Tcl_FSGetFileSystemForPath (Tcl_Obj* pathPtr);$/;"	p	signature:(Tcl_Obj* pathPtr)
Tcl_FSGetFileSystemForPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetFileSystemForPath_TCL_DECLARED$/;"	d
Tcl_FSGetInternalRep	/usr/include/tclDecls.h	/^#define Tcl_FSGetInternalRep /;"	d
Tcl_FSGetInternalRep	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_FSGetInternalRep (Tcl_Obj* pathPtr, $/;"	p	signature:(Tcl_Obj* pathPtr, Tcl_Filesystem * fsPtr)
Tcl_FSGetInternalRep_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetInternalRep_TCL_DECLARED$/;"	d
Tcl_FSGetNativePath	/usr/include/tclDecls.h	/^#define Tcl_FSGetNativePath /;"	d
Tcl_FSGetNativePath	/usr/include/tclDecls.h	/^EXTERN CONST char*	Tcl_FSGetNativePath (Tcl_Obj* pathPtr);$/;"	p	signature:(Tcl_Obj* pathPtr)
Tcl_FSGetNativePath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetNativePath_TCL_DECLARED$/;"	d
Tcl_FSGetNormalizedPath	/usr/include/tclDecls.h	/^#define Tcl_FSGetNormalizedPath /;"	d
Tcl_FSGetNormalizedPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSGetNormalizedPath (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj* pathPtr)
Tcl_FSGetNormalizedPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetNormalizedPath_TCL_DECLARED$/;"	d
Tcl_FSGetPathType	/usr/include/tclDecls.h	/^#define Tcl_FSGetPathType /;"	d
Tcl_FSGetPathType	/usr/include/tclDecls.h	/^EXTERN Tcl_PathType	Tcl_FSGetPathType (Tcl_Obj * pathPtr);$/;"	p	signature:(Tcl_Obj * pathPtr)
Tcl_FSGetPathType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetPathType_TCL_DECLARED$/;"	d
Tcl_FSGetTranslatedPath	/usr/include/tclDecls.h	/^#define Tcl_FSGetTranslatedPath /;"	d
Tcl_FSGetTranslatedPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSGetTranslatedPath (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj* pathPtr)
Tcl_FSGetTranslatedPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetTranslatedPath_TCL_DECLARED$/;"	d
Tcl_FSGetTranslatedStringPath	/usr/include/tclDecls.h	/^#define Tcl_FSGetTranslatedStringPath /;"	d
Tcl_FSGetTranslatedStringPath	/usr/include/tclDecls.h	/^EXTERN CONST char*	Tcl_FSGetTranslatedStringPath (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj* pathPtr)
Tcl_FSGetTranslatedStringPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSGetTranslatedStringPath_TCL_DECLARED$/;"	d
Tcl_FSInternalToNormalizedProc	/usr/include/tcl.h	/^typedef Tcl_Obj * (Tcl_FSInternalToNormalizedProc) _ANSI_ARGS_(($/;"	t
Tcl_FSJoinPath	/usr/include/tclDecls.h	/^#define Tcl_FSJoinPath /;"	d
Tcl_FSJoinPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSJoinPath (Tcl_Obj * listObj, int elements);$/;"	p	signature:(Tcl_Obj * listObj, int elements)
Tcl_FSJoinPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSJoinPath_TCL_DECLARED$/;"	d
Tcl_FSJoinToPath	/usr/include/tclDecls.h	/^#define Tcl_FSJoinToPath /;"	d
Tcl_FSJoinToPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSJoinToPath (Tcl_Obj * pathPtr, int objc, $/;"	p	signature:(Tcl_Obj * pathPtr, int objc, Tcl_Obj *CONST objv[])
Tcl_FSJoinToPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSJoinToPath_TCL_DECLARED$/;"	d
Tcl_FSLink	/usr/include/tclDecls.h	/^#define Tcl_FSLink /;"	d
Tcl_FSLink	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_FSLink (Tcl_Obj * pathPtr, Tcl_Obj * toPtr, $/;"	p	signature:(Tcl_Obj * pathPtr, Tcl_Obj * toPtr, int linkAction)
Tcl_FSLinkProc	/usr/include/tcl.h	/^typedef Tcl_Obj * (Tcl_FSLinkProc) _ANSI_ARGS_((Tcl_Obj *pathPtr,$/;"	t
Tcl_FSLink_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSLink_TCL_DECLARED$/;"	d
Tcl_FSListVolumes	/usr/include/tclDecls.h	/^#define Tcl_FSListVolumes /;"	d
Tcl_FSListVolumes	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSListVolumes (void);$/;"	p	signature:(void)
Tcl_FSListVolumesProc	/usr/include/tcl.h	/^typedef Tcl_Obj * (Tcl_FSListVolumesProc) _ANSI_ARGS_((void));$/;"	t
Tcl_FSListVolumes_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSListVolumes_TCL_DECLARED$/;"	d
Tcl_FSLoadFile	/usr/include/tclDecls.h	/^#define Tcl_FSLoadFile /;"	d
Tcl_FSLoadFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSLoadFile (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * pathPtr, CONST char * sym1, CONST char * sym2, Tcl_PackageInitProc ** proc1Ptr, Tcl_PackageInitProc ** proc2Ptr, Tcl_LoadHandle * handlePtr, Tcl_FSUnloadFileProc ** unloadProcPtr)
Tcl_FSLoadFileProc	/usr/include/tcl.h	/^typedef int (Tcl_FSLoadFileProc) _ANSI_ARGS_((Tcl_Interp * interp,$/;"	t
Tcl_FSLoadFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSLoadFile_TCL_DECLARED$/;"	d
Tcl_FSLstat	/usr/include/tclDecls.h	/^#define Tcl_FSLstat /;"	d
Tcl_FSLstat	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSLstat (Tcl_Obj * pathPtr, Tcl_StatBuf * buf);$/;"	p	signature:(Tcl_Obj * pathPtr, Tcl_StatBuf * buf)
Tcl_FSLstatProc	/usr/include/tcl.h	/^typedef int (Tcl_FSLstatProc) _ANSI_ARGS_((Tcl_Obj *pathPtr,$/;"	t
Tcl_FSLstat_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSLstat_TCL_DECLARED$/;"	d
Tcl_FSMatchInDirectory	/usr/include/tclDecls.h	/^#define Tcl_FSMatchInDirectory /;"	d
Tcl_FSMatchInDirectory	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSMatchInDirectory (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * result, Tcl_Obj * pathPtr, CONST char * pattern, Tcl_GlobTypeData * types)
Tcl_FSMatchInDirectoryProc	/usr/include/tcl.h	/^typedef int (Tcl_FSMatchInDirectoryProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tcl_FSMatchInDirectory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSMatchInDirectory_TCL_DECLARED$/;"	d
Tcl_FSMountsChanged	/usr/include/tclDecls.h	/^#define Tcl_FSMountsChanged /;"	d
Tcl_FSMountsChanged	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FSMountsChanged (Tcl_Filesystem * fsPtr);$/;"	p	signature:(Tcl_Filesystem * fsPtr)
Tcl_FSMountsChanged_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSMountsChanged_TCL_DECLARED$/;"	d
Tcl_FSNewNativePath	/usr/include/tclDecls.h	/^#define Tcl_FSNewNativePath /;"	d
Tcl_FSNewNativePath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSNewNativePath (Tcl_Filesystem* fromFilesystem, $/;"	p	signature:(Tcl_Filesystem* fromFilesystem, ClientData clientData)
Tcl_FSNewNativePath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSNewNativePath_TCL_DECLARED$/;"	d
Tcl_FSNormalizePathProc	/usr/include/tcl.h	/^typedef int (Tcl_FSNormalizePathProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tcl_FSOpenFileChannel	/usr/include/tclDecls.h	/^#define Tcl_FSOpenFileChannel /;"	d
Tcl_FSOpenFileChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_FSOpenFileChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * pathPtr, CONST char * modeString, int permissions)
Tcl_FSOpenFileChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSOpenFileChannel_TCL_DECLARED$/;"	d
Tcl_FSPathInFilesystemProc	/usr/include/tcl.h	/^typedef int (Tcl_FSPathInFilesystemProc) _ANSI_ARGS_((Tcl_Obj *pathPtr,$/;"	t
Tcl_FSPathSeparator	/usr/include/tclDecls.h	/^#define Tcl_FSPathSeparator /;"	d
Tcl_FSPathSeparator	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSPathSeparator (Tcl_Obj* pathPtr);$/;"	p	signature:(Tcl_Obj* pathPtr)
Tcl_FSPathSeparator_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSPathSeparator_TCL_DECLARED$/;"	d
Tcl_FSRegister	/usr/include/tclDecls.h	/^#define Tcl_FSRegister /;"	d
Tcl_FSRegister	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSRegister (ClientData clientData, $/;"	p	signature:(ClientData clientData, Tcl_Filesystem * fsPtr)
Tcl_FSRegister_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSRegister_TCL_DECLARED$/;"	d
Tcl_FSRemoveDirectory	/usr/include/tclDecls.h	/^#define Tcl_FSRemoveDirectory /;"	d
Tcl_FSRemoveDirectory	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSRemoveDirectory (Tcl_Obj * pathPtr, $/;"	p	signature:(Tcl_Obj * pathPtr, int recursive, Tcl_Obj ** errorPtr)
Tcl_FSRemoveDirectoryProc	/usr/include/tcl.h	/^typedef int (Tcl_FSRemoveDirectoryProc) _ANSI_ARGS_((Tcl_Obj *pathPtr,$/;"	t
Tcl_FSRemoveDirectory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSRemoveDirectory_TCL_DECLARED$/;"	d
Tcl_FSRenameFile	/usr/include/tclDecls.h	/^#define Tcl_FSRenameFile /;"	d
Tcl_FSRenameFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSRenameFile (Tcl_Obj * srcPathPtr, $/;"	p	signature:(Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr)
Tcl_FSRenameFileProc	/usr/include/tcl.h	/^typedef int (Tcl_FSRenameFileProc) _ANSI_ARGS_((Tcl_Obj *srcPathPtr,$/;"	t
Tcl_FSRenameFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSRenameFile_TCL_DECLARED$/;"	d
Tcl_FSSplitPath	/usr/include/tclDecls.h	/^#define Tcl_FSSplitPath /;"	d
Tcl_FSSplitPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_FSSplitPath (Tcl_Obj* pathPtr, int * lenPtr);$/;"	p	signature:(Tcl_Obj* pathPtr, int * lenPtr)
Tcl_FSSplitPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSSplitPath_TCL_DECLARED$/;"	d
Tcl_FSStat	/usr/include/tclDecls.h	/^#define Tcl_FSStat /;"	d
Tcl_FSStat	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSStat (Tcl_Obj * pathPtr, Tcl_StatBuf * buf);$/;"	p	signature:(Tcl_Obj * pathPtr, Tcl_StatBuf * buf)
Tcl_FSStatProc	/usr/include/tcl.h	/^typedef int (Tcl_FSStatProc) _ANSI_ARGS_((Tcl_Obj *pathPtr, Tcl_StatBuf *buf));$/;"	t
Tcl_FSStat_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSStat_TCL_DECLARED$/;"	d
Tcl_FSUnloadFileProc	/usr/include/tcl.h	/^typedef void (Tcl_FSUnloadFileProc) _ANSI_ARGS_((Tcl_LoadHandle loadHandle));$/;"	t
Tcl_FSUnregister	/usr/include/tclDecls.h	/^#define Tcl_FSUnregister /;"	d
Tcl_FSUnregister	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSUnregister (Tcl_Filesystem * fsPtr);$/;"	p	signature:(Tcl_Filesystem * fsPtr)
Tcl_FSUnregister_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSUnregister_TCL_DECLARED$/;"	d
Tcl_FSUtime	/usr/include/tclDecls.h	/^#define Tcl_FSUtime /;"	d
Tcl_FSUtime	/usr/include/tclDecls.h	/^EXTERN int		Tcl_FSUtime (Tcl_Obj * pathPtr, $/;"	p	signature:(Tcl_Obj * pathPtr, struct utimbuf * tval)
Tcl_FSUtimeProc	/usr/include/tcl.h	/^typedef int (Tcl_FSUtimeProc) _ANSI_ARGS_((Tcl_Obj *pathPtr,$/;"	t
Tcl_FSUtime_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FSUtime_TCL_DECLARED$/;"	d
Tcl_FSVersion	/usr/include/tcl.h	/^typedef struct Tcl_FSVersion_ *Tcl_FSVersion;$/;"	t	typeref:struct:Tcl_FSVersion_
Tcl_FileFreeProc	/usr/include/tcl.h	/^typedef void (Tcl_FileFreeProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_FileProc	/usr/include/tcl.h	/^typedef void (Tcl_FileProc) _ANSI_ARGS_((ClientData clientData, int mask));$/;"	t
Tcl_Filesystem	/usr/include/tcl.h	/^typedef struct Tcl_Filesystem {$/;"	s
Tcl_Filesystem	/usr/include/tcl.h	/^} Tcl_Filesystem;$/;"	t	typeref:struct:Tcl_Filesystem
Tcl_Filesystem::accessProc	/usr/include/tcl.h	/^    Tcl_FSAccessProc *accessProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::chdirProc	/usr/include/tcl.h	/^    Tcl_FSChdirProc *chdirProc;	\/* Function to process a 'Tcl_FSChdir()' call.$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::copyDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSCopyDirectoryProc *copyDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::copyFileProc	/usr/include/tcl.h	/^    Tcl_FSCopyFileProc *copyFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::createDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSCreateDirectoryProc *createDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::createInternalRepProc	/usr/include/tcl.h	/^    Tcl_FSCreateInternalRepProc *createInternalRepProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::deleteFileProc	/usr/include/tcl.h	/^    Tcl_FSDeleteFileProc *deleteFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::dupInternalRepProc	/usr/include/tcl.h	/^    Tcl_FSDupInternalRepProc *dupInternalRepProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::fileAttrStringsProc	/usr/include/tcl.h	/^    Tcl_FSFileAttrStringsProc *fileAttrStringsProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::fileAttrsGetProc	/usr/include/tcl.h	/^    Tcl_FSFileAttrsGetProc *fileAttrsGetProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::fileAttrsSetProc	/usr/include/tcl.h	/^    Tcl_FSFileAttrsSetProc *fileAttrsSetProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::filesystemPathTypeProc	/usr/include/tcl.h	/^    Tcl_FSFilesystemPathTypeProc *filesystemPathTypeProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::filesystemSeparatorProc	/usr/include/tcl.h	/^    Tcl_FSFilesystemSeparatorProc *filesystemSeparatorProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::freeInternalRepProc	/usr/include/tcl.h	/^    Tcl_FSFreeInternalRepProc *freeInternalRepProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::getCwdProc	/usr/include/tcl.h	/^    Tcl_FSGetCwdProc *getCwdProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::internalToNormalizedProc	/usr/include/tcl.h	/^    Tcl_FSInternalToNormalizedProc *internalToNormalizedProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::linkProc	/usr/include/tcl.h	/^    Tcl_FSLinkProc *linkProc;	\/* Function to process a 'Tcl_FSLink()' call.$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::listVolumesProc	/usr/include/tcl.h	/^    Tcl_FSListVolumesProc *listVolumesProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::loadFileProc	/usr/include/tcl.h	/^    Tcl_FSLoadFileProc *loadFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::lstatProc	/usr/include/tcl.h	/^    Tcl_FSLstatProc *lstatProc;	\/* Function to process a 'Tcl_FSLstat()' call.$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::matchInDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSMatchInDirectoryProc *matchInDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::normalizePathProc	/usr/include/tcl.h	/^    Tcl_FSNormalizePathProc *normalizePathProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::openFileChannelProc	/usr/include/tcl.h	/^    Tcl_FSOpenFileChannelProc *openFileChannelProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::pathInFilesystemProc	/usr/include/tcl.h	/^    Tcl_FSPathInFilesystemProc *pathInFilesystemProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::removeDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSRemoveDirectoryProc *removeDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::renameFileProc	/usr/include/tcl.h	/^    Tcl_FSRenameFileProc *renameFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::statProc	/usr/include/tcl.h	/^    Tcl_FSStatProc *statProc;	\/* Function to process a 'Tcl_FSStat()' call.$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::structureLength	/usr/include/tcl.h	/^    int structureLength;	\/* Length of this structure, so future binary$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::typeName	/usr/include/tcl.h	/^    CONST char *typeName;	\/* The name of the filesystem. *\/$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::utimeProc	/usr/include/tcl.h	/^    Tcl_FSUtimeProc *utimeProc;	\/* Function to process a 'Tcl_FSUtime()' call.$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Filesystem::version	/usr/include/tcl.h	/^    Tcl_FSVersion version;	\/* Version of the filesystem type. *\/$/;"	m	struct:Tcl_Filesystem	access:public
Tcl_Finalize	/usr/include/tclDecls.h	/^#define Tcl_Finalize /;"	d
Tcl_Finalize	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Finalize (void);$/;"	p	signature:(void)
Tcl_FinalizeNotifier	/usr/include/tclDecls.h	/^#define Tcl_FinalizeNotifier /;"	d
Tcl_FinalizeNotifier	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FinalizeNotifier (ClientData clientData);$/;"	p	signature:(ClientData clientData)
Tcl_FinalizeNotifierProc	/usr/include/tcl.h	/^typedef void (Tcl_FinalizeNotifierProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_FinalizeNotifier_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FinalizeNotifier_TCL_DECLARED$/;"	d
Tcl_FinalizeThread	/usr/include/tclDecls.h	/^#define Tcl_FinalizeThread /;"	d
Tcl_FinalizeThread	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FinalizeThread (void);$/;"	p	signature:(void)
Tcl_FinalizeThread_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FinalizeThread_TCL_DECLARED$/;"	d
Tcl_Finalize_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Finalize_TCL_DECLARED$/;"	d
Tcl_FindCommand	/usr/include/tclDecls.h	/^#define Tcl_FindCommand /;"	d
Tcl_FindCommand	/usr/include/tclDecls.h	/^EXTERN Tcl_Command	Tcl_FindCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tcl_Namespace * contextNsPtr, int flags)
Tcl_FindCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FindCommand_TCL_DECLARED$/;"	d
Tcl_FindEnsemble	/usr/include/tclDecls.h	/^#define Tcl_FindEnsemble /;"	d
Tcl_FindEnsemble	/usr/include/tclDecls.h	/^EXTERN Tcl_Command	Tcl_FindEnsemble (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * cmdNameObj, int flags)
Tcl_FindEnsemble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FindEnsemble_TCL_DECLARED$/;"	d
Tcl_FindExecutable	/usr/include/tclDecls.h	/^#define Tcl_FindExecutable /;"	d
Tcl_FindExecutable	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FindExecutable (CONST char * argv0);$/;"	p	signature:(CONST char * argv0)
Tcl_FindExecutable_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FindExecutable_TCL_DECLARED$/;"	d
Tcl_FindHashEntry	/usr/include/tcl.h	/^#define Tcl_FindHashEntry(/;"	d
Tcl_FindHashEntry	/usr/include/tcl.h	/^#undef  Tcl_FindHashEntry$/;"	d
Tcl_FindHashEntry	/usr/include/tclDecls.h	/^#define Tcl_FindHashEntry /;"	d
Tcl_FindHashEntry	/usr/include/tclDecls.h	/^EXTERN Tcl_HashEntry *	Tcl_FindHashEntry (Tcl_HashTable * tablePtr, $/;"	p	signature:(Tcl_HashTable * tablePtr, CONST char * key)
Tcl_FindHashEntry_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FindHashEntry_TCL_DECLARED$/;"	d
Tcl_FindNamespace	/usr/include/tclDecls.h	/^#define Tcl_FindNamespace /;"	d
Tcl_FindNamespace	/usr/include/tclDecls.h	/^EXTERN Tcl_Namespace *	Tcl_FindNamespace (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tcl_Namespace * contextNsPtr, int flags)
Tcl_FindNamespace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FindNamespace_TCL_DECLARED$/;"	d
Tcl_FirstHashEntry	/usr/include/tclDecls.h	/^#define Tcl_FirstHashEntry /;"	d
Tcl_FirstHashEntry	/usr/include/tclDecls.h	/^EXTERN Tcl_HashEntry *	Tcl_FirstHashEntry (Tcl_HashTable * tablePtr, $/;"	p	signature:(Tcl_HashTable * tablePtr, Tcl_HashSearch * searchPtr)
Tcl_FirstHashEntry_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FirstHashEntry_TCL_DECLARED$/;"	d
Tcl_Flush	/usr/include/tclDecls.h	/^#define Tcl_Flush /;"	d
Tcl_Flush	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Flush (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_Flush_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Flush_TCL_DECLARED$/;"	d
Tcl_ForgetImport	/usr/include/tclDecls.h	/^#define Tcl_ForgetImport /;"	d
Tcl_ForgetImport	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ForgetImport (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern)
Tcl_ForgetImport_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ForgetImport_TCL_DECLARED$/;"	d
Tcl_Format	/usr/include/tclDecls.h	/^#define Tcl_Format /;"	d
Tcl_Format	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_Format (Tcl_Interp * interp, CONST char * format, $/;"	p	signature:(Tcl_Interp * interp, CONST char * format, int objc, Tcl_Obj * CONST objv[])
Tcl_Format_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Format_TCL_DECLARED$/;"	d
Tcl_Free	/usr/include/tclDecls.h	/^#define Tcl_Free /;"	d
Tcl_Free	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Free (char * ptr);$/;"	p	signature:(char * ptr)
Tcl_FreeEncoding	/usr/include/tclDecls.h	/^#define Tcl_FreeEncoding /;"	d
Tcl_FreeEncoding	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FreeEncoding (Tcl_Encoding encoding);$/;"	p	signature:(Tcl_Encoding encoding)
Tcl_FreeEncoding_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FreeEncoding_TCL_DECLARED$/;"	d
Tcl_FreeHashEntryProc	/usr/include/tcl.h	/^typedef void (Tcl_FreeHashEntryProc) _ANSI_ARGS_((Tcl_HashEntry *hPtr));$/;"	t
Tcl_FreeInternalRepProc	/usr/include/tcl.h	/^typedef void (Tcl_FreeInternalRepProc) _ANSI_ARGS_((struct Tcl_Obj *objPtr));$/;"	t
Tcl_FreeParse	/usr/include/tclDecls.h	/^#define Tcl_FreeParse /;"	d
Tcl_FreeParse	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FreeParse (Tcl_Parse * parsePtr);$/;"	p	signature:(Tcl_Parse * parsePtr)
Tcl_FreeParse_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FreeParse_TCL_DECLARED$/;"	d
Tcl_FreeProc	/usr/include/tcl.h	/^typedef void (Tcl_FreeProc) _ANSI_ARGS_((char *blockPtr));$/;"	t
Tcl_FreeResult	/usr/include/tclDecls.h	/^#define Tcl_FreeResult /;"	d
Tcl_FreeResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_FreeResult (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_FreeResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_FreeResult_TCL_DECLARED$/;"	d
Tcl_Free_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Free_TCL_DECLARED$/;"	d
Tcl_GetAlias	/usr/include/tclDecls.h	/^#define Tcl_GetAlias /;"	d
Tcl_GetAlias	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetAlias (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * slaveCmd, Tcl_Interp ** targetInterpPtr, CONST84 char ** targetCmdPtr, int * argcPtr, CONST84 char *** argvPtr)
Tcl_GetAliasObj	/usr/include/tclDecls.h	/^#define Tcl_GetAliasObj /;"	d
Tcl_GetAliasObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetAliasObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * slaveCmd, Tcl_Interp ** targetInterpPtr, CONST84 char ** targetCmdPtr, int * objcPtr, Tcl_Obj *** objv)
Tcl_GetAliasObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetAliasObj_TCL_DECLARED$/;"	d
Tcl_GetAlias_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetAlias_TCL_DECLARED$/;"	d
Tcl_GetAllocMutex	/usr/include/tclDecls.h	/^#define Tcl_GetAllocMutex /;"	d
Tcl_GetAllocMutex	/usr/include/tclDecls.h	/^EXTERN Tcl_Mutex *	Tcl_GetAllocMutex (void);$/;"	p	signature:(void)
Tcl_GetAllocMutex_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetAllocMutex_TCL_DECLARED$/;"	d
Tcl_GetAssocData	/usr/include/tclDecls.h	/^#define Tcl_GetAssocData /;"	d
Tcl_GetAssocData	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_GetAssocData (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tcl_InterpDeleteProc ** procPtr)
Tcl_GetAssocData_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetAssocData_TCL_DECLARED$/;"	d
Tcl_GetBignumFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetBignumFromObj /;"	d
Tcl_GetBignumFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetBignumFromObj (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value)
Tcl_GetBignumFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetBignumFromObj_TCL_DECLARED$/;"	d
Tcl_GetBoolean	/usr/include/tclDecls.h	/^#define Tcl_GetBoolean /;"	d
Tcl_GetBoolean	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetBoolean (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * src, int * boolPtr)
Tcl_GetBooleanFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetBooleanFromObj /;"	d
Tcl_GetBooleanFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetBooleanFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, int * boolPtr)
Tcl_GetBooleanFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetBooleanFromObj_TCL_DECLARED$/;"	d
Tcl_GetBoolean_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetBoolean_TCL_DECLARED$/;"	d
Tcl_GetByteArrayFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetByteArrayFromObj /;"	d
Tcl_GetByteArrayFromObj	/usr/include/tclDecls.h	/^EXTERN unsigned char *	Tcl_GetByteArrayFromObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, int * lengthPtr)
Tcl_GetByteArrayFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetByteArrayFromObj_TCL_DECLARED$/;"	d
Tcl_GetChannel	/usr/include/tclDecls.h	/^#define Tcl_GetChannel /;"	d
Tcl_GetChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_GetChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * chanName, int * modePtr)
Tcl_GetChannelBufferSize	/usr/include/tclDecls.h	/^#define Tcl_GetChannelBufferSize /;"	d
Tcl_GetChannelBufferSize	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetChannelBufferSize (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetChannelBufferSize_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelBufferSize_TCL_DECLARED$/;"	d
Tcl_GetChannelError	/usr/include/tclDecls.h	/^#define Tcl_GetChannelError /;"	d
Tcl_GetChannelError	/usr/include/tclDecls.h	/^EXTERN void		Tcl_GetChannelError (Tcl_Channel chan, Tcl_Obj** msg);$/;"	p	signature:(Tcl_Channel chan, Tcl_Obj** msg)
Tcl_GetChannelErrorInterp	/usr/include/tclDecls.h	/^#define Tcl_GetChannelErrorInterp /;"	d
Tcl_GetChannelErrorInterp	/usr/include/tclDecls.h	/^EXTERN void		Tcl_GetChannelErrorInterp (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Obj** msg)
Tcl_GetChannelErrorInterp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelErrorInterp_TCL_DECLARED$/;"	d
Tcl_GetChannelError_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelError_TCL_DECLARED$/;"	d
Tcl_GetChannelHandle	/usr/include/tclDecls.h	/^#define Tcl_GetChannelHandle /;"	d
Tcl_GetChannelHandle	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetChannelHandle (Tcl_Channel chan, $/;"	p	signature:(Tcl_Channel chan, int direction, ClientData * handlePtr)
Tcl_GetChannelHandle_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelHandle_TCL_DECLARED$/;"	d
Tcl_GetChannelInstanceData	/usr/include/tclDecls.h	/^#define Tcl_GetChannelInstanceData /;"	d
Tcl_GetChannelInstanceData	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_GetChannelInstanceData (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetChannelInstanceData_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelInstanceData_TCL_DECLARED$/;"	d
Tcl_GetChannelMode	/usr/include/tclDecls.h	/^#define Tcl_GetChannelMode /;"	d
Tcl_GetChannelMode	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetChannelMode (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetChannelMode_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelMode_TCL_DECLARED$/;"	d
Tcl_GetChannelName	/usr/include/tclDecls.h	/^#define Tcl_GetChannelName /;"	d
Tcl_GetChannelName	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetChannelName (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetChannelName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelName_TCL_DECLARED$/;"	d
Tcl_GetChannelNames	/usr/include/tclDecls.h	/^#define Tcl_GetChannelNames /;"	d
Tcl_GetChannelNames	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetChannelNames (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetChannelNamesEx	/usr/include/tclDecls.h	/^#define Tcl_GetChannelNamesEx /;"	d
Tcl_GetChannelNamesEx	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetChannelNamesEx (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * pattern)
Tcl_GetChannelNamesEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelNamesEx_TCL_DECLARED$/;"	d
Tcl_GetChannelNames_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelNames_TCL_DECLARED$/;"	d
Tcl_GetChannelOption	/usr/include/tclDecls.h	/^#define Tcl_GetChannelOption /;"	d
Tcl_GetChannelOption	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetChannelOption (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Channel chan, CONST char * optionName, Tcl_DString * dsPtr)
Tcl_GetChannelOption_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelOption_TCL_DECLARED$/;"	d
Tcl_GetChannelThread	/usr/include/tclDecls.h	/^#define Tcl_GetChannelThread /;"	d
Tcl_GetChannelThread	/usr/include/tclDecls.h	/^EXTERN Tcl_ThreadId	Tcl_GetChannelThread (Tcl_Channel channel);$/;"	p	signature:(Tcl_Channel channel)
Tcl_GetChannelThread_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelThread_TCL_DECLARED$/;"	d
Tcl_GetChannelType	/usr/include/tclDecls.h	/^#define Tcl_GetChannelType /;"	d
Tcl_GetChannelType	/usr/include/tclDecls.h	/^EXTERN Tcl_ChannelType * Tcl_GetChannelType (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetChannelType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannelType_TCL_DECLARED$/;"	d
Tcl_GetChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetChannel_TCL_DECLARED$/;"	d
Tcl_GetCharLength	/usr/include/tclDecls.h	/^#define Tcl_GetCharLength /;"	d
Tcl_GetCharLength	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetCharLength (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tcl_GetCharLength_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCharLength_TCL_DECLARED$/;"	d
Tcl_GetCommandFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetCommandFromObj /;"	d
Tcl_GetCommandFromObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Command	Tcl_GetCommandFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr)
Tcl_GetCommandFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCommandFromObj_TCL_DECLARED$/;"	d
Tcl_GetCommandFullName	/usr/include/tclDecls.h	/^#define Tcl_GetCommandFullName /;"	d
Tcl_GetCommandFullName	/usr/include/tclDecls.h	/^EXTERN void		Tcl_GetCommandFullName (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command command, Tcl_Obj * objPtr)
Tcl_GetCommandFullName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCommandFullName_TCL_DECLARED$/;"	d
Tcl_GetCommandInfo	/usr/include/tclDecls.h	/^#define Tcl_GetCommandInfo /;"	d
Tcl_GetCommandInfo	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetCommandInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmdName, Tcl_CmdInfo * infoPtr)
Tcl_GetCommandInfoFromToken	/usr/include/tclDecls.h	/^#define Tcl_GetCommandInfoFromToken /;"	d
Tcl_GetCommandInfoFromToken	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetCommandInfoFromToken (Tcl_Command token, $/;"	p	signature:(Tcl_Command token, Tcl_CmdInfo* infoPtr)
Tcl_GetCommandInfoFromToken_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCommandInfoFromToken_TCL_DECLARED$/;"	d
Tcl_GetCommandInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCommandInfo_TCL_DECLARED$/;"	d
Tcl_GetCommandName	/usr/include/tclDecls.h	/^#define Tcl_GetCommandName /;"	d
Tcl_GetCommandName	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetCommandName (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command command)
Tcl_GetCommandName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCommandName_TCL_DECLARED$/;"	d
Tcl_GetCurrentNamespace	/usr/include/tclDecls.h	/^#define Tcl_GetCurrentNamespace /;"	d
Tcl_GetCurrentNamespace	/usr/include/tclDecls.h	/^EXTERN Tcl_Namespace *	Tcl_GetCurrentNamespace (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetCurrentNamespace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCurrentNamespace_TCL_DECLARED$/;"	d
Tcl_GetCurrentThread	/usr/include/tclDecls.h	/^#define Tcl_GetCurrentThread /;"	d
Tcl_GetCurrentThread	/usr/include/tclDecls.h	/^EXTERN Tcl_ThreadId	Tcl_GetCurrentThread (void);$/;"	p	signature:(void)
Tcl_GetCurrentThread_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCurrentThread_TCL_DECLARED$/;"	d
Tcl_GetCwd	/usr/include/tclDecls.h	/^#define Tcl_GetCwd /;"	d
Tcl_GetCwd	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_GetCwd (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_DString * cwdPtr)
Tcl_GetCwd_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetCwd_TCL_DECLARED$/;"	d
Tcl_GetDefaultEncodingDir	/usr/include/tclDecls.h	/^#define Tcl_GetDefaultEncodingDir /;"	d
Tcl_GetDefaultEncodingDir	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetDefaultEncodingDir (void);$/;"	p	signature:(void)
Tcl_GetDefaultEncodingDir_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetDefaultEncodingDir_TCL_DECLARED$/;"	d
Tcl_GetDouble	/usr/include/tclDecls.h	/^#define Tcl_GetDouble /;"	d
Tcl_GetDouble	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetDouble (Tcl_Interp * interp, CONST char * src, $/;"	p	signature:(Tcl_Interp * interp, CONST char * src, double * doublePtr)
Tcl_GetDoubleFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetDoubleFromObj /;"	d
Tcl_GetDoubleFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetDoubleFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, double * doublePtr)
Tcl_GetDoubleFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetDoubleFromObj_TCL_DECLARED$/;"	d
Tcl_GetDouble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetDouble_TCL_DECLARED$/;"	d
Tcl_GetEncoding	/usr/include/tclDecls.h	/^#define Tcl_GetEncoding /;"	d
Tcl_GetEncoding	/usr/include/tclDecls.h	/^EXTERN Tcl_Encoding	Tcl_GetEncoding (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name)
Tcl_GetEncodingFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingFromObj /;"	d
Tcl_GetEncodingFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetEncodingFromObj (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Encoding* encodingPtr)
Tcl_GetEncodingFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingFromObj_TCL_DECLARED$/;"	d
Tcl_GetEncodingName	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingName /;"	d
Tcl_GetEncodingName	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetEncodingName (Tcl_Encoding encoding);$/;"	p	signature:(Tcl_Encoding encoding)
Tcl_GetEncodingNameFromEnvironment	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingNameFromEnvironment /;"	d
Tcl_GetEncodingNameFromEnvironment	/usr/include/tclDecls.h	/^EXTERN CONST char *	Tcl_GetEncodingNameFromEnvironment ($/;"	p	signature:( Tcl_DString* bufPtr)
Tcl_GetEncodingNameFromEnvironment_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingNameFromEnvironment_TCL_DECLARED$/;"	d
Tcl_GetEncodingName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingName_TCL_DECLARED$/;"	d
Tcl_GetEncodingNames	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingNames /;"	d
Tcl_GetEncodingNames	/usr/include/tclDecls.h	/^EXTERN void		Tcl_GetEncodingNames (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetEncodingNames_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingNames_TCL_DECLARED$/;"	d
Tcl_GetEncodingSearchPath	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingSearchPath /;"	d
Tcl_GetEncodingSearchPath	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_GetEncodingSearchPath (void);$/;"	p	signature:(void)
Tcl_GetEncodingSearchPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEncodingSearchPath_TCL_DECLARED$/;"	d
Tcl_GetEncoding_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEncoding_TCL_DECLARED$/;"	d
Tcl_GetEnsembleFlags	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleFlags /;"	d
Tcl_GetEnsembleFlags	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetEnsembleFlags (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, int * flagsPtr)
Tcl_GetEnsembleFlags_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleFlags_TCL_DECLARED$/;"	d
Tcl_GetEnsembleMappingDict	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleMappingDict /;"	d
Tcl_GetEnsembleMappingDict	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetEnsembleMappingDict (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** mapDictPtr)
Tcl_GetEnsembleMappingDict_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleMappingDict_TCL_DECLARED$/;"	d
Tcl_GetEnsembleNamespace	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleNamespace /;"	d
Tcl_GetEnsembleNamespace	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetEnsembleNamespace (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Namespace ** namespacePtrPtr)
Tcl_GetEnsembleNamespace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleNamespace_TCL_DECLARED$/;"	d
Tcl_GetEnsembleSubcommandList	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleSubcommandList /;"	d
Tcl_GetEnsembleSubcommandList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetEnsembleSubcommandList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** subcmdListPtr)
Tcl_GetEnsembleSubcommandList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleSubcommandList_TCL_DECLARED$/;"	d
Tcl_GetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleUnknownHandler /;"	d
Tcl_GetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetEnsembleUnknownHandler (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** unknownListPtr)
Tcl_GetEnsembleUnknownHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetEnsembleUnknownHandler_TCL_DECLARED$/;"	d
Tcl_GetErrno	/usr/include/tclDecls.h	/^#define Tcl_GetErrno /;"	d
Tcl_GetErrno	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetErrno (void);$/;"	p	signature:(void)
Tcl_GetErrno_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetErrno_TCL_DECLARED$/;"	d
Tcl_GetGlobalNamespace	/usr/include/tclDecls.h	/^#define Tcl_GetGlobalNamespace /;"	d
Tcl_GetGlobalNamespace	/usr/include/tclDecls.h	/^EXTERN Tcl_Namespace *	Tcl_GetGlobalNamespace (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetGlobalNamespace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetGlobalNamespace_TCL_DECLARED$/;"	d
Tcl_GetHashKey	/usr/include/tcl.h	/^#define Tcl_GetHashKey(/;"	d
Tcl_GetHashValue	/usr/include/tcl.h	/^#define Tcl_GetHashValue(/;"	d
Tcl_GetHostName	/usr/include/tclDecls.h	/^#define Tcl_GetHostName /;"	d
Tcl_GetHostName	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetHostName (void);$/;"	p	signature:(void)
Tcl_GetHostName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetHostName_TCL_DECLARED$/;"	d
Tcl_GetIndexFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetIndexFromObj /;"	d
Tcl_GetIndexFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetIndexFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, CONST84 char ** tablePtr, CONST char * msg, int flags, int * indexPtr)
Tcl_GetIndexFromObjStruct	/usr/include/tclDecls.h	/^#define Tcl_GetIndexFromObjStruct /;"	d
Tcl_GetIndexFromObjStruct	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetIndexFromObjStruct (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, CONST VOID * tablePtr, int offset, CONST char * msg, int flags, int * indexPtr)
Tcl_GetIndexFromObjStruct_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetIndexFromObjStruct_TCL_DECLARED$/;"	d
Tcl_GetIndexFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetIndexFromObj_TCL_DECLARED$/;"	d
Tcl_GetInt	/usr/include/tclDecls.h	/^#define Tcl_GetInt /;"	d
Tcl_GetInt	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetInt (Tcl_Interp * interp, CONST char * src, $/;"	p	signature:(Tcl_Interp * interp, CONST char * src, int * intPtr)
Tcl_GetIntFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetIntFromObj /;"	d
Tcl_GetIntFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetIntFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, int * intPtr)
Tcl_GetIntFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetIntFromObj_TCL_DECLARED$/;"	d
Tcl_GetInt_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetInt_TCL_DECLARED$/;"	d
Tcl_GetInterpPath	/usr/include/tclDecls.h	/^#define Tcl_GetInterpPath /;"	d
Tcl_GetInterpPath	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetInterpPath (Tcl_Interp * askInterp, $/;"	p	signature:(Tcl_Interp * askInterp, Tcl_Interp * slaveInterp)
Tcl_GetInterpPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetInterpPath_TCL_DECLARED$/;"	d
Tcl_GetLongFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetLongFromObj /;"	d
Tcl_GetLongFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetLongFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, long * longPtr)
Tcl_GetLongFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetLongFromObj_TCL_DECLARED$/;"	d
Tcl_GetMaster	/usr/include/tclDecls.h	/^#define Tcl_GetMaster /;"	d
Tcl_GetMaster	/usr/include/tclDecls.h	/^EXTERN Tcl_Interp *	Tcl_GetMaster (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetMaster_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetMaster_TCL_DECLARED$/;"	d
Tcl_GetMathFuncInfo	/usr/include/tclDecls.h	/^#define Tcl_GetMathFuncInfo /;"	d
Tcl_GetMathFuncInfo	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetMathFuncInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, int * numArgsPtr, Tcl_ValueType ** argTypesPtr, Tcl_MathProc ** procPtr, ClientData * clientDataPtr)
Tcl_GetMathFuncInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetMathFuncInfo_TCL_DECLARED$/;"	d
Tcl_GetMemoryInfo	/usr/include/tcl.h	/^EXTERN void		Tcl_GetMemoryInfo _ANSI_ARGS_((Tcl_DString *dsPtr));$/;"	p	signature:(Tcl_DString *dsPtr)
Tcl_GetNameOfExecutable	/usr/include/tclDecls.h	/^#define Tcl_GetNameOfExecutable /;"	d
Tcl_GetNameOfExecutable	/usr/include/tclDecls.h	/^EXTERN CONST char *	Tcl_GetNameOfExecutable (void);$/;"	p	signature:(void)
Tcl_GetNameOfExecutable_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetNameOfExecutable_TCL_DECLARED$/;"	d
Tcl_GetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^#define Tcl_GetNamespaceUnknownHandler /;"	d
Tcl_GetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_GetNamespaceUnknownHandler (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Namespace * nsPtr)
Tcl_GetNamespaceUnknownHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetNamespaceUnknownHandler_TCL_DECLARED$/;"	d
Tcl_GetObjResult	/usr/include/tclDecls.h	/^#define Tcl_GetObjResult /;"	d
Tcl_GetObjResult	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_GetObjResult (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetObjResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetObjResult_TCL_DECLARED$/;"	d
Tcl_GetObjType	/usr/include/tclDecls.h	/^#define Tcl_GetObjType /;"	d
Tcl_GetObjType	/usr/include/tclDecls.h	/^EXTERN Tcl_ObjType *	Tcl_GetObjType (CONST char * typeName);$/;"	p	signature:(CONST char * typeName)
Tcl_GetObjType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetObjType_TCL_DECLARED$/;"	d
Tcl_GetOpenFile	/usr/include/tclDecls.h	/^#define Tcl_GetOpenFile /;"	d
Tcl_GetOpenFile	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetOpenFile (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * chanID, int forWriting, int checkUsage, ClientData * filePtr)
Tcl_GetOpenFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetOpenFile_TCL_DECLARED$/;"	d
Tcl_GetPathType	/usr/include/tclDecls.h	/^#define Tcl_GetPathType /;"	d
Tcl_GetPathType	/usr/include/tclDecls.h	/^EXTERN Tcl_PathType	Tcl_GetPathType (CONST char * path);$/;"	p	signature:(CONST char * path)
Tcl_GetPathType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetPathType_TCL_DECLARED$/;"	d
Tcl_GetRange	/usr/include/tclDecls.h	/^#define Tcl_GetRange /;"	d
Tcl_GetRange	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_GetRange (Tcl_Obj * objPtr, int first, int last);$/;"	p	signature:(Tcl_Obj * objPtr, int first, int last)
Tcl_GetRange_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetRange_TCL_DECLARED$/;"	d
Tcl_GetRegExpFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetRegExpFromObj /;"	d
Tcl_GetRegExpFromObj	/usr/include/tclDecls.h	/^EXTERN Tcl_RegExp	Tcl_GetRegExpFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * patObj, int flags)
Tcl_GetRegExpFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetRegExpFromObj_TCL_DECLARED$/;"	d
Tcl_GetReturnOptions	/usr/include/tclDecls.h	/^#define Tcl_GetReturnOptions /;"	d
Tcl_GetReturnOptions	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_GetReturnOptions (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int result)
Tcl_GetReturnOptions_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetReturnOptions_TCL_DECLARED$/;"	d
Tcl_GetServiceMode	/usr/include/tclDecls.h	/^#define Tcl_GetServiceMode /;"	d
Tcl_GetServiceMode	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetServiceMode (void);$/;"	p	signature:(void)
Tcl_GetServiceMode_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetServiceMode_TCL_DECLARED$/;"	d
Tcl_GetSlave	/usr/include/tclDecls.h	/^#define Tcl_GetSlave /;"	d
Tcl_GetSlave	/usr/include/tclDecls.h	/^EXTERN Tcl_Interp *	Tcl_GetSlave (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * slaveName)
Tcl_GetSlave_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetSlave_TCL_DECLARED$/;"	d
Tcl_GetStackedChannel	/usr/include/tclDecls.h	/^#define Tcl_GetStackedChannel /;"	d
Tcl_GetStackedChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_GetStackedChannel (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetStackedChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetStackedChannel_TCL_DECLARED$/;"	d
Tcl_GetStdChannel	/usr/include/tclDecls.h	/^#define Tcl_GetStdChannel /;"	d
Tcl_GetStdChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_GetStdChannel (int type);$/;"	p	signature:(int type)
Tcl_GetStdChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetStdChannel_TCL_DECLARED$/;"	d
Tcl_GetString	/usr/include/tclDecls.h	/^#define Tcl_GetString /;"	d
Tcl_GetString	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_GetString (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tcl_GetStringFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetStringFromObj /;"	d
Tcl_GetStringFromObj	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_GetStringFromObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, int * lengthPtr)
Tcl_GetStringFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetStringFromObj_TCL_DECLARED$/;"	d
Tcl_GetStringResult	/usr/include/tclDecls.h	/^#define Tcl_GetStringResult /;"	d
Tcl_GetStringResult	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetStringResult (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_GetStringResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetStringResult_TCL_DECLARED$/;"	d
Tcl_GetString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetString_TCL_DECLARED$/;"	d
Tcl_GetThreadData	/usr/include/tclDecls.h	/^#define Tcl_GetThreadData /;"	d
Tcl_GetThreadData	/usr/include/tclDecls.h	/^EXTERN VOID *		Tcl_GetThreadData (Tcl_ThreadDataKey * keyPtr, $/;"	p	signature:(Tcl_ThreadDataKey * keyPtr, int size)
Tcl_GetThreadData_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetThreadData_TCL_DECLARED$/;"	d
Tcl_GetTime	/usr/include/tclDecls.h	/^#define Tcl_GetTime /;"	d
Tcl_GetTime	/usr/include/tclDecls.h	/^EXTERN void		Tcl_GetTime (Tcl_Time* timeBuf);$/;"	p	signature:(Tcl_Time* timeBuf)
Tcl_GetTimeProc	/usr/include/tcl.h	/^typedef void (Tcl_GetTimeProc)   _ANSI_ARGS_((Tcl_Time *timebuf,$/;"	t
Tcl_GetTime_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetTime_TCL_DECLARED$/;"	d
Tcl_GetTopChannel	/usr/include/tclDecls.h	/^#define Tcl_GetTopChannel /;"	d
Tcl_GetTopChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_GetTopChannel (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_GetTopChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetTopChannel_TCL_DECLARED$/;"	d
Tcl_GetUniChar	/usr/include/tclDecls.h	/^#define Tcl_GetUniChar /;"	d
Tcl_GetUniChar	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar	Tcl_GetUniChar (Tcl_Obj * objPtr, int index);$/;"	p	signature:(Tcl_Obj * objPtr, int index)
Tcl_GetUniChar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetUniChar_TCL_DECLARED$/;"	d
Tcl_GetUnicode	/usr/include/tclDecls.h	/^#define Tcl_GetUnicode /;"	d
Tcl_GetUnicode	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar *	Tcl_GetUnicode (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tcl_GetUnicodeFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetUnicodeFromObj /;"	d
Tcl_GetUnicodeFromObj	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar *	Tcl_GetUnicodeFromObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, int * lengthPtr)
Tcl_GetUnicodeFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetUnicodeFromObj_TCL_DECLARED$/;"	d
Tcl_GetUnicode_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetUnicode_TCL_DECLARED$/;"	d
Tcl_GetVar	/usr/include/tclDecls.h	/^#define Tcl_GetVar /;"	d
Tcl_GetVar	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags)
Tcl_GetVar2	/usr/include/tclDecls.h	/^#define Tcl_GetVar2 /;"	d
Tcl_GetVar2	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_GetVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags)
Tcl_GetVar2Ex	/usr/include/tclDecls.h	/^#define Tcl_GetVar2Ex /;"	d
Tcl_GetVar2Ex	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_GetVar2Ex (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags)
Tcl_GetVar2Ex_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetVar2Ex_TCL_DECLARED$/;"	d
Tcl_GetVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetVar2_TCL_DECLARED$/;"	d
Tcl_GetVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetVar_TCL_DECLARED$/;"	d
Tcl_GetVersion	/usr/include/tclDecls.h	/^#define Tcl_GetVersion /;"	d
Tcl_GetVersion	/usr/include/tclDecls.h	/^EXTERN void		Tcl_GetVersion (int * major, int * minor, $/;"	p	signature:(int * major, int * minor, int * patchLevel, int * type)
Tcl_GetVersion_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetVersion_TCL_DECLARED$/;"	d
Tcl_GetWideIntFromObj	/usr/include/tclDecls.h	/^#define Tcl_GetWideIntFromObj /;"	d
Tcl_GetWideIntFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetWideIntFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_WideInt * widePtr)
Tcl_GetWideIntFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetWideIntFromObj_TCL_DECLARED$/;"	d
Tcl_Gets	/usr/include/tclDecls.h	/^#define Tcl_Gets /;"	d
Tcl_Gets	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Gets (Tcl_Channel chan, Tcl_DString * dsPtr);$/;"	p	signature:(Tcl_Channel chan, Tcl_DString * dsPtr)
Tcl_GetsObj	/usr/include/tclDecls.h	/^#define Tcl_GetsObj /;"	d
Tcl_GetsObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GetsObj (Tcl_Channel chan, Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Channel chan, Tcl_Obj * objPtr)
Tcl_GetsObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GetsObj_TCL_DECLARED$/;"	d
Tcl_Gets_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Gets_TCL_DECLARED$/;"	d
Tcl_GlobTypeData	/usr/include/tcl.h	/^typedef struct Tcl_GlobTypeData {$/;"	s
Tcl_GlobTypeData	/usr/include/tcl.h	/^} Tcl_GlobTypeData;$/;"	t	typeref:struct:Tcl_GlobTypeData
Tcl_GlobTypeData::macCreator	/usr/include/tcl.h	/^    Tcl_Obj *macCreator;	\/* Acceptable mac creator *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
Tcl_GlobTypeData::macType	/usr/include/tcl.h	/^    Tcl_Obj *macType;		\/* Acceptable mac type *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
Tcl_GlobTypeData::perm	/usr/include/tcl.h	/^    int perm;			\/* Corresponds to file permissions *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
Tcl_GlobTypeData::type	/usr/include/tcl.h	/^    int type;			\/* Corresponds to bcdpfls as in 'find -t' *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
Tcl_GlobalEval	/usr/include/tclDecls.h	/^#define Tcl_GlobalEval /;"	d
Tcl_GlobalEval	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GlobalEval (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * command)
Tcl_GlobalEvalObj	/usr/include/tcl.h	/^#   define Tcl_GlobalEvalObj(/;"	d
Tcl_GlobalEvalObj	/usr/include/tcl.h	/^#   undef  Tcl_GlobalEvalObj$/;"	d
Tcl_GlobalEvalObj	/usr/include/tclDecls.h	/^#define Tcl_GlobalEvalObj /;"	d
Tcl_GlobalEvalObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_GlobalEvalObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr)
Tcl_GlobalEvalObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GlobalEvalObj_TCL_DECLARED$/;"	d
Tcl_GlobalEval_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_GlobalEval_TCL_DECLARED$/;"	d
Tcl_HashEntry	/usr/include/tcl.h	/^struct Tcl_HashEntry {$/;"	s
Tcl_HashEntry	/usr/include/tcl.h	/^typedef struct Tcl_HashEntry Tcl_HashEntry;$/;"	t	typeref:struct:Tcl_HashEntry
Tcl_HashEntry::__anon117::objPtr	/usr/include/tcl.h	/^	Tcl_Obj *objPtr;	\/* Tcl_Obj * key value. *\/$/;"	m	union:Tcl_HashEntry::__anon117	access:public
Tcl_HashEntry::__anon117::oneWordValue	/usr/include/tcl.h	/^	char *oneWordValue;	\/* One-word value for key. *\/$/;"	m	union:Tcl_HashEntry::__anon117	access:public
Tcl_HashEntry::__anon117::string	/usr/include/tcl.h	/^	char string[4];		\/* String for key. The actual size will be as$/;"	m	union:Tcl_HashEntry::__anon117	access:public
Tcl_HashEntry::__anon117::words	/usr/include/tcl.h	/^	int words[1];		\/* Multiple integer words for key. The actual$/;"	m	union:Tcl_HashEntry::__anon117	access:public
Tcl_HashEntry::bucketPtr	/usr/include/tcl.h	/^    Tcl_HashEntry **bucketPtr;	\/* Pointer to bucket that points to first$/;"	m	struct:Tcl_HashEntry	access:public
Tcl_HashEntry::clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* Application stores something here with$/;"	m	struct:Tcl_HashEntry	access:public
Tcl_HashEntry::hash	/usr/include/tcl.h	/^    VOID *hash;			\/* Hash value, stored as pointer to ensure$/;"	m	struct:Tcl_HashEntry	access:public
Tcl_HashEntry::key	/usr/include/tcl.h	/^    } key;			\/* MUST BE LAST FIELD IN RECORD!! *\/$/;"	m	struct:Tcl_HashEntry	typeref:union:Tcl_HashEntry::__anon117	access:public
Tcl_HashEntry::nextPtr	/usr/include/tcl.h	/^    Tcl_HashEntry *nextPtr;	\/* Pointer to next entry in this hash bucket,$/;"	m	struct:Tcl_HashEntry	access:public
Tcl_HashEntry::tablePtr	/usr/include/tcl.h	/^    Tcl_HashTable *tablePtr;	\/* Pointer to table containing entry. *\/$/;"	m	struct:Tcl_HashEntry	access:public
Tcl_HashKeyProc	/usr/include/tcl.h	/^typedef unsigned int (Tcl_HashKeyProc) _ANSI_ARGS_((Tcl_HashTable *tablePtr,$/;"	t
Tcl_HashKeyType	/usr/include/tcl.h	/^struct Tcl_HashKeyType {$/;"	s
Tcl_HashKeyType	/usr/include/tcl.h	/^typedef struct Tcl_HashKeyType Tcl_HashKeyType;$/;"	t	typeref:struct:Tcl_HashKeyType
Tcl_HashKeyType::allocEntryProc	/usr/include/tcl.h	/^    Tcl_AllocHashEntryProc *allocEntryProc;$/;"	m	struct:Tcl_HashKeyType	access:public
Tcl_HashKeyType::compareKeysProc	/usr/include/tcl.h	/^    Tcl_CompareHashKeysProc *compareKeysProc;$/;"	m	struct:Tcl_HashKeyType	access:public
Tcl_HashKeyType::flags	/usr/include/tcl.h	/^    int flags;			\/* Flags, see above for details. *\/$/;"	m	struct:Tcl_HashKeyType	access:public
Tcl_HashKeyType::freeEntryProc	/usr/include/tcl.h	/^    Tcl_FreeHashEntryProc *freeEntryProc;$/;"	m	struct:Tcl_HashKeyType	access:public
Tcl_HashKeyType::hashKeyProc	/usr/include/tcl.h	/^    Tcl_HashKeyProc *hashKeyProc;$/;"	m	struct:Tcl_HashKeyType	access:public
Tcl_HashKeyType::version	/usr/include/tcl.h	/^    int version;		\/* Version of the table. If this structure is$/;"	m	struct:Tcl_HashKeyType	access:public
Tcl_HashSearch	/usr/include/tcl.h	/^typedef struct Tcl_HashSearch {$/;"	s
Tcl_HashSearch	/usr/include/tcl.h	/^} Tcl_HashSearch;$/;"	t	typeref:struct:Tcl_HashSearch
Tcl_HashSearch::nextEntryPtr	/usr/include/tcl.h	/^    Tcl_HashEntry *nextEntryPtr;\/* Next entry to be enumerated in the current$/;"	m	struct:Tcl_HashSearch	access:public
Tcl_HashSearch::nextIndex	/usr/include/tcl.h	/^    int nextIndex;		\/* Index of next bucket to be enumerated after$/;"	m	struct:Tcl_HashSearch	access:public
Tcl_HashSearch::tablePtr	/usr/include/tcl.h	/^    Tcl_HashTable *tablePtr;	\/* Table being searched. *\/$/;"	m	struct:Tcl_HashSearch	access:public
Tcl_HashStats	/usr/include/tclDecls.h	/^#define Tcl_HashStats /;"	d
Tcl_HashStats	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_HashStats (Tcl_HashTable * tablePtr);$/;"	p	signature:(Tcl_HashTable * tablePtr)
Tcl_HashStats_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_HashStats_TCL_DECLARED$/;"	d
Tcl_HashTable	/usr/include/tcl.h	/^struct Tcl_HashTable {$/;"	s
Tcl_HashTable	/usr/include/tcl.h	/^typedef struct Tcl_HashTable Tcl_HashTable;$/;"	t	typeref:struct:Tcl_HashTable
Tcl_HashTable::buckets	/usr/include/tcl.h	/^    Tcl_HashEntry **buckets;	\/* Pointer to bucket array. Each element$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::createProc	/usr/include/tcl.h	/^    Tcl_HashEntry *(*createProc) _ANSI_ARGS_((Tcl_HashTable *tablePtr,$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::downShift	/usr/include/tcl.h	/^    int downShift;		\/* Shift count used in hashing function.$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::findProc	/usr/include/tcl.h	/^    Tcl_HashEntry *(*findProc) _ANSI_ARGS_((Tcl_HashTable *tablePtr,$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::keyType	/usr/include/tcl.h	/^    int keyType;		\/* Type of keys used in this table. It's$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::mask	/usr/include/tcl.h	/^    int mask;			\/* Mask value used in hashing function. *\/$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::numBuckets	/usr/include/tcl.h	/^    int numBuckets;		\/* Total number of buckets allocated at$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::numEntries	/usr/include/tcl.h	/^    int numEntries;		\/* Total number of entries present in$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::rebuildSize	/usr/include/tcl.h	/^    int rebuildSize;		\/* Enlarge table when numEntries gets to be$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::staticBuckets	/usr/include/tcl.h	/^    Tcl_HashEntry *staticBuckets[TCL_SMALL_HASH_TABLE];$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HashTable::typePtr	/usr/include/tcl.h	/^    Tcl_HashKeyType *typePtr;	\/* Type of the keys used in the$/;"	m	struct:Tcl_HashTable	access:public
Tcl_HideCommand	/usr/include/tclDecls.h	/^#define Tcl_HideCommand /;"	d
Tcl_HideCommand	/usr/include/tclDecls.h	/^EXTERN int		Tcl_HideCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmdName, CONST char * hiddenCmdToken)
Tcl_HideCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_HideCommand_TCL_DECLARED$/;"	d
Tcl_IdleProc	/usr/include/tcl.h	/^typedef void (Tcl_IdleProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_Import	/usr/include/tclDecls.h	/^#define Tcl_Import /;"	d
Tcl_Import	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Import (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern, int allowOverwrite)
Tcl_Import_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Import_TCL_DECLARED$/;"	d
Tcl_IncrRefCount	/usr/include/tcl.h	/^#   define Tcl_IncrRefCount(/;"	d
Tcl_IncrRefCount	/usr/include/tcl.h	/^void		Tcl_IncrRefCount _ANSI_ARGS_((Tcl_Obj *objPtr));$/;"	p	signature:(Tcl_Obj *objPtr)
Tcl_Init	/usr/include/tclDecls.h	/^#define Tcl_Init /;"	d
Tcl_Init	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Init (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_InitBignumFromDouble	/usr/include/tclDecls.h	/^#define Tcl_InitBignumFromDouble /;"	d
Tcl_InitBignumFromDouble	/usr/include/tclDecls.h	/^EXTERN int		Tcl_InitBignumFromDouble (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, double initval, mp_int * toInit)
Tcl_InitBignumFromDouble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InitBignumFromDouble_TCL_DECLARED$/;"	d
Tcl_InitCustomHashTable	/usr/include/tclDecls.h	/^#define Tcl_InitCustomHashTable /;"	d
Tcl_InitCustomHashTable	/usr/include/tclDecls.h	/^EXTERN void		Tcl_InitCustomHashTable (Tcl_HashTable * tablePtr, $/;"	p	signature:(Tcl_HashTable * tablePtr, int keyType, Tcl_HashKeyType * typePtr)
Tcl_InitCustomHashTable_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InitCustomHashTable_TCL_DECLARED$/;"	d
Tcl_InitHashTable	/usr/include/tclDecls.h	/^#define Tcl_InitHashTable /;"	d
Tcl_InitHashTable	/usr/include/tclDecls.h	/^EXTERN void		Tcl_InitHashTable (Tcl_HashTable * tablePtr, $/;"	p	signature:(Tcl_HashTable * tablePtr, int keyType)
Tcl_InitHashTable_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InitHashTable_TCL_DECLARED$/;"	d
Tcl_InitMemory	/usr/include/tcl.h	/^#   define Tcl_InitMemory(/;"	d
Tcl_InitMemory	/usr/include/tcl.h	/^#   undef  Tcl_InitMemory$/;"	d
Tcl_InitMemory	/usr/include/tclDecls.h	/^#define Tcl_InitMemory /;"	d
Tcl_InitMemory	/usr/include/tclDecls.h	/^EXTERN void		Tcl_InitMemory (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_InitMemory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InitMemory_TCL_DECLARED$/;"	d
Tcl_InitNotifier	/usr/include/tclDecls.h	/^#define Tcl_InitNotifier /;"	d
Tcl_InitNotifier	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_InitNotifier (void);$/;"	p	signature:(void)
Tcl_InitNotifier_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InitNotifier_TCL_DECLARED$/;"	d
Tcl_InitObjHashTable	/usr/include/tclDecls.h	/^#define Tcl_InitObjHashTable /;"	d
Tcl_InitObjHashTable	/usr/include/tclDecls.h	/^EXTERN void		Tcl_InitObjHashTable (Tcl_HashTable * tablePtr);$/;"	p	signature:(Tcl_HashTable * tablePtr)
Tcl_InitObjHashTable_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InitObjHashTable_TCL_DECLARED$/;"	d
Tcl_InitStubs	/usr/include/tcl.h	/^#define Tcl_InitStubs(/;"	d
Tcl_InitStubs	/usr/include/tcl.h	/^EXTERN CONST char *	Tcl_InitStubs _ANSI_ARGS_((Tcl_Interp *interp,$/;"	p	signature:(Tcl_Interp *interp, CONST char *version, int exact)
Tcl_Init_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Init_TCL_DECLARED$/;"	d
Tcl_InputBlocked	/usr/include/tclDecls.h	/^#define Tcl_InputBlocked /;"	d
Tcl_InputBlocked	/usr/include/tclDecls.h	/^EXTERN int		Tcl_InputBlocked (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_InputBlocked_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InputBlocked_TCL_DECLARED$/;"	d
Tcl_InputBuffered	/usr/include/tclDecls.h	/^#define Tcl_InputBuffered /;"	d
Tcl_InputBuffered	/usr/include/tclDecls.h	/^EXTERN int		Tcl_InputBuffered (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_InputBuffered_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InputBuffered_TCL_DECLARED$/;"	d
Tcl_Interp	/usr/include/tcl.h	/^typedef struct Tcl_Interp {$/;"	s
Tcl_Interp	/usr/include/tcl.h	/^} Tcl_Interp;$/;"	t	typeref:struct:Tcl_Interp
Tcl_Interp::errorLine	/usr/include/tcl.h	/^    int errorLine;		\/* When TCL_ERROR is returned, this gives the$/;"	m	struct:Tcl_Interp	access:public
Tcl_Interp::freeProc	/usr/include/tcl.h	/^    void (*freeProc) _ANSI_ARGS_((char *blockPtr));$/;"	m	struct:Tcl_Interp	access:public
Tcl_Interp::result	/usr/include/tcl.h	/^    char *result;		\/* If the last command returned a string$/;"	m	struct:Tcl_Interp	access:public
Tcl_InterpDeleteProc	/usr/include/tcl.h	/^typedef void (Tcl_InterpDeleteProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_InterpDeleted	/usr/include/tclDecls.h	/^#define Tcl_InterpDeleted /;"	d
Tcl_InterpDeleted	/usr/include/tclDecls.h	/^EXTERN int		Tcl_InterpDeleted (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_InterpDeleted_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InterpDeleted_TCL_DECLARED$/;"	d
Tcl_InterpState	/usr/include/tcl.h	/^typedef struct Tcl_InterpState_ *Tcl_InterpState;$/;"	t	typeref:struct:Tcl_InterpState_
Tcl_InvalidateStringRep	/usr/include/tclDecls.h	/^#define Tcl_InvalidateStringRep /;"	d
Tcl_InvalidateStringRep	/usr/include/tclDecls.h	/^EXTERN void		Tcl_InvalidateStringRep (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tcl_InvalidateStringRep_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_InvalidateStringRep_TCL_DECLARED$/;"	d
Tcl_IsChannelExisting	/usr/include/tclDecls.h	/^#define Tcl_IsChannelExisting /;"	d
Tcl_IsChannelExisting	/usr/include/tclDecls.h	/^EXTERN int		Tcl_IsChannelExisting (CONST char* channelName);$/;"	p	signature:(CONST char* channelName)
Tcl_IsChannelExisting_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_IsChannelExisting_TCL_DECLARED$/;"	d
Tcl_IsChannelRegistered	/usr/include/tclDecls.h	/^#define Tcl_IsChannelRegistered /;"	d
Tcl_IsChannelRegistered	/usr/include/tclDecls.h	/^EXTERN int		Tcl_IsChannelRegistered (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Channel channel)
Tcl_IsChannelRegistered_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_IsChannelRegistered_TCL_DECLARED$/;"	d
Tcl_IsChannelShared	/usr/include/tclDecls.h	/^#define Tcl_IsChannelShared /;"	d
Tcl_IsChannelShared	/usr/include/tclDecls.h	/^EXTERN int		Tcl_IsChannelShared (Tcl_Channel channel);$/;"	p	signature:(Tcl_Channel channel)
Tcl_IsChannelShared_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_IsChannelShared_TCL_DECLARED$/;"	d
Tcl_IsEnsemble	/usr/include/tclDecls.h	/^#define Tcl_IsEnsemble /;"	d
Tcl_IsEnsemble	/usr/include/tclDecls.h	/^EXTERN int		Tcl_IsEnsemble (Tcl_Command token);$/;"	p	signature:(Tcl_Command token)
Tcl_IsEnsemble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_IsEnsemble_TCL_DECLARED$/;"	d
Tcl_IsSafe	/usr/include/tclDecls.h	/^#define Tcl_IsSafe /;"	d
Tcl_IsSafe	/usr/include/tclDecls.h	/^EXTERN int		Tcl_IsSafe (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_IsSafe_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_IsSafe_TCL_DECLARED$/;"	d
Tcl_IsShared	/usr/include/tcl.h	/^#   define Tcl_IsShared(/;"	d
Tcl_IsShared	/usr/include/tcl.h	/^int		Tcl_IsShared _ANSI_ARGS_((Tcl_Obj *objPtr));$/;"	p	signature:(Tcl_Obj *objPtr)
Tcl_IsStandardChannel	/usr/include/tclDecls.h	/^#define Tcl_IsStandardChannel /;"	d
Tcl_IsStandardChannel	/usr/include/tclDecls.h	/^EXTERN int		Tcl_IsStandardChannel (Tcl_Channel channel);$/;"	p	signature:(Tcl_Channel channel)
Tcl_IsStandardChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_IsStandardChannel_TCL_DECLARED$/;"	d
Tcl_JoinPath	/usr/include/tclDecls.h	/^#define Tcl_JoinPath /;"	d
Tcl_JoinPath	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_JoinPath (int argc, CONST84 char * CONST * argv, $/;"	p	signature:(int argc, CONST84 char * CONST * argv, Tcl_DString * resultPtr)
Tcl_JoinPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_JoinPath_TCL_DECLARED$/;"	d
Tcl_JoinThread	/usr/include/tclDecls.h	/^#define Tcl_JoinThread /;"	d
Tcl_JoinThread	/usr/include/tclDecls.h	/^EXTERN int		Tcl_JoinThread (Tcl_ThreadId threadId, int* result);$/;"	p	signature:(Tcl_ThreadId threadId, int* result)
Tcl_JoinThread_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_JoinThread_TCL_DECLARED$/;"	d
Tcl_LimitAddHandler	/usr/include/tclDecls.h	/^#define Tcl_LimitAddHandler /;"	d
Tcl_LimitAddHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitAddHandler (Tcl_Interp * interp, int type, $/;"	p	signature:(Tcl_Interp * interp, int type, Tcl_LimitHandlerProc * handlerProc, ClientData clientData, Tcl_LimitHandlerDeleteProc * deleteProc)
Tcl_LimitAddHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitAddHandler_TCL_DECLARED$/;"	d
Tcl_LimitCheck	/usr/include/tclDecls.h	/^#define Tcl_LimitCheck /;"	d
Tcl_LimitCheck	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitCheck (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_LimitCheck_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitCheck_TCL_DECLARED$/;"	d
Tcl_LimitExceeded	/usr/include/tclDecls.h	/^#define Tcl_LimitExceeded /;"	d
Tcl_LimitExceeded	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitExceeded (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_LimitExceeded_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitExceeded_TCL_DECLARED$/;"	d
Tcl_LimitGetCommands	/usr/include/tclDecls.h	/^#define Tcl_LimitGetCommands /;"	d
Tcl_LimitGetCommands	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitGetCommands (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_LimitGetCommands_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitGetCommands_TCL_DECLARED$/;"	d
Tcl_LimitGetGranularity	/usr/include/tclDecls.h	/^#define Tcl_LimitGetGranularity /;"	d
Tcl_LimitGetGranularity	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitGetGranularity (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int type)
Tcl_LimitGetGranularity_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitGetGranularity_TCL_DECLARED$/;"	d
Tcl_LimitGetTime	/usr/include/tclDecls.h	/^#define Tcl_LimitGetTime /;"	d
Tcl_LimitGetTime	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitGetTime (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Time * timeLimitPtr)
Tcl_LimitGetTime_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitGetTime_TCL_DECLARED$/;"	d
Tcl_LimitHandlerDeleteProc	/usr/include/tcl.h	/^typedef void (Tcl_LimitHandlerDeleteProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_LimitHandlerProc	/usr/include/tcl.h	/^typedef void (Tcl_LimitHandlerProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_LimitReady	/usr/include/tclDecls.h	/^#define Tcl_LimitReady /;"	d
Tcl_LimitReady	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitReady (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_LimitReady_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitReady_TCL_DECLARED$/;"	d
Tcl_LimitRemoveHandler	/usr/include/tclDecls.h	/^#define Tcl_LimitRemoveHandler /;"	d
Tcl_LimitRemoveHandler	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitRemoveHandler (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int type, Tcl_LimitHandlerProc * handlerProc, ClientData clientData)
Tcl_LimitRemoveHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitRemoveHandler_TCL_DECLARED$/;"	d
Tcl_LimitSetCommands	/usr/include/tclDecls.h	/^#define Tcl_LimitSetCommands /;"	d
Tcl_LimitSetCommands	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitSetCommands (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int commandLimit)
Tcl_LimitSetCommands_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitSetCommands_TCL_DECLARED$/;"	d
Tcl_LimitSetGranularity	/usr/include/tclDecls.h	/^#define Tcl_LimitSetGranularity /;"	d
Tcl_LimitSetGranularity	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitSetGranularity (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int type, int granularity)
Tcl_LimitSetGranularity_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitSetGranularity_TCL_DECLARED$/;"	d
Tcl_LimitSetTime	/usr/include/tclDecls.h	/^#define Tcl_LimitSetTime /;"	d
Tcl_LimitSetTime	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitSetTime (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Time * timeLimitPtr)
Tcl_LimitSetTime_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitSetTime_TCL_DECLARED$/;"	d
Tcl_LimitTypeEnabled	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeEnabled /;"	d
Tcl_LimitTypeEnabled	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitTypeEnabled (Tcl_Interp * interp, int type);$/;"	p	signature:(Tcl_Interp * interp, int type)
Tcl_LimitTypeEnabled_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeEnabled_TCL_DECLARED$/;"	d
Tcl_LimitTypeExceeded	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeExceeded /;"	d
Tcl_LimitTypeExceeded	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LimitTypeExceeded (Tcl_Interp * interp, int type);$/;"	p	signature:(Tcl_Interp * interp, int type)
Tcl_LimitTypeExceeded_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeExceeded_TCL_DECLARED$/;"	d
Tcl_LimitTypeReset	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeReset /;"	d
Tcl_LimitTypeReset	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitTypeReset (Tcl_Interp * interp, int type);$/;"	p	signature:(Tcl_Interp * interp, int type)
Tcl_LimitTypeReset_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeReset_TCL_DECLARED$/;"	d
Tcl_LimitTypeSet	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeSet /;"	d
Tcl_LimitTypeSet	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LimitTypeSet (Tcl_Interp * interp, int type);$/;"	p	signature:(Tcl_Interp * interp, int type)
Tcl_LimitTypeSet_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LimitTypeSet_TCL_DECLARED$/;"	d
Tcl_LinkVar	/usr/include/tclDecls.h	/^#define Tcl_LinkVar /;"	d
Tcl_LinkVar	/usr/include/tclDecls.h	/^EXTERN int		Tcl_LinkVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, char * addr, int type)
Tcl_LinkVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LinkVar_TCL_DECLARED$/;"	d
Tcl_ListMathFuncs	/usr/include/tclDecls.h	/^#define Tcl_ListMathFuncs /;"	d
Tcl_ListMathFuncs	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_ListMathFuncs (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * pattern)
Tcl_ListMathFuncs_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListMathFuncs_TCL_DECLARED$/;"	d
Tcl_ListObjAppendElement	/usr/include/tclDecls.h	/^#define Tcl_ListObjAppendElement /;"	d
Tcl_ListObjAppendElement	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ListObjAppendElement (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * listPtr, Tcl_Obj * objPtr)
Tcl_ListObjAppendElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListObjAppendElement_TCL_DECLARED$/;"	d
Tcl_ListObjAppendList	/usr/include/tclDecls.h	/^#define Tcl_ListObjAppendList /;"	d
Tcl_ListObjAppendList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ListObjAppendList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * listPtr, Tcl_Obj * elemListPtr)
Tcl_ListObjAppendList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListObjAppendList_TCL_DECLARED$/;"	d
Tcl_ListObjGetElements	/usr/include/tclDecls.h	/^#define Tcl_ListObjGetElements /;"	d
Tcl_ListObjGetElements	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ListObjGetElements (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * listPtr, int * objcPtr, Tcl_Obj *** objvPtr)
Tcl_ListObjGetElements_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListObjGetElements_TCL_DECLARED$/;"	d
Tcl_ListObjIndex	/usr/include/tclDecls.h	/^#define Tcl_ListObjIndex /;"	d
Tcl_ListObjIndex	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ListObjIndex (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * listPtr, int index, Tcl_Obj ** objPtrPtr)
Tcl_ListObjIndex_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListObjIndex_TCL_DECLARED$/;"	d
Tcl_ListObjLength	/usr/include/tclDecls.h	/^#define Tcl_ListObjLength /;"	d
Tcl_ListObjLength	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ListObjLength (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * listPtr, int * lengthPtr)
Tcl_ListObjLength_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListObjLength_TCL_DECLARED$/;"	d
Tcl_ListObjReplace	/usr/include/tclDecls.h	/^#define Tcl_ListObjReplace /;"	d
Tcl_ListObjReplace	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ListObjReplace (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * listPtr, int first, int count, int objc, Tcl_Obj *CONST objv[])
Tcl_ListObjReplace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ListObjReplace_TCL_DECLARED$/;"	d
Tcl_LoadHandle	/usr/include/tcl.h	/^typedef struct Tcl_LoadHandle_ *Tcl_LoadHandle;$/;"	t	typeref:struct:Tcl_LoadHandle_
Tcl_LogCommandInfo	/usr/include/tclDecls.h	/^#define Tcl_LogCommandInfo /;"	d
Tcl_LogCommandInfo	/usr/include/tclDecls.h	/^EXTERN void		Tcl_LogCommandInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * script, CONST char * command, int length)
Tcl_LogCommandInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_LogCommandInfo_TCL_DECLARED$/;"	d
Tcl_LongAsWide	/usr/include/tcl.h	/^#   define Tcl_LongAsWide(/;"	d
Tcl_MacOSXOpenBundleResources	/usr/include/tclPlatDecls.h	/^#define Tcl_MacOSXOpenBundleResources /;"	d
Tcl_MacOSXOpenBundleResources	/usr/include/tclPlatDecls.h	/^EXTERN int		Tcl_MacOSXOpenBundleResources (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * bundleName, int hasResourceFile, int maxPathLen, char * libraryPath)
Tcl_MacOSXOpenBundleResources_TCL_DECLARED	/usr/include/tclPlatDecls.h	/^#define Tcl_MacOSXOpenBundleResources_TCL_DECLARED$/;"	d
Tcl_MacOSXOpenVersionedBundleResources	/usr/include/tclPlatDecls.h	/^#define Tcl_MacOSXOpenVersionedBundleResources /;"	d
Tcl_MacOSXOpenVersionedBundleResources	/usr/include/tclPlatDecls.h	/^EXTERN int		Tcl_MacOSXOpenVersionedBundleResources ($/;"	p	signature:( Tcl_Interp * interp, CONST char * bundleName, CONST char * bundleVersion, int hasResourceFile, int maxPathLen, char * libraryPath)
Tcl_MacOSXOpenVersionedBundleResources_TCL_DECLARED	/usr/include/tclPlatDecls.h	/^#define Tcl_MacOSXOpenVersionedBundleResources_TCL_DECLARED$/;"	d
Tcl_Main	/usr/include/tcl.h	/^EXTERN void		Tcl_Main _ANSI_ARGS_((int argc, char **argv,$/;"	p	signature:(int argc, char **argv, Tcl_AppInitProc *appInitProc)
Tcl_MainLoopProc	/usr/include/tcl.h	/^typedef void (Tcl_MainLoopProc) _ANSI_ARGS_((void));$/;"	t
Tcl_MakeFileChannel	/usr/include/tclDecls.h	/^#define Tcl_MakeFileChannel /;"	d
Tcl_MakeFileChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_MakeFileChannel (ClientData handle, int mode);$/;"	p	signature:(ClientData handle, int mode)
Tcl_MakeFileChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_MakeFileChannel_TCL_DECLARED$/;"	d
Tcl_MakeSafe	/usr/include/tclDecls.h	/^#define Tcl_MakeSafe /;"	d
Tcl_MakeSafe	/usr/include/tclDecls.h	/^EXTERN int		Tcl_MakeSafe (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_MakeSafe_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_MakeSafe_TCL_DECLARED$/;"	d
Tcl_MakeTcpClientChannel	/usr/include/tclDecls.h	/^#define Tcl_MakeTcpClientChannel /;"	d
Tcl_MakeTcpClientChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_MakeTcpClientChannel (ClientData tcpSocket);$/;"	p	signature:(ClientData tcpSocket)
Tcl_MakeTcpClientChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_MakeTcpClientChannel_TCL_DECLARED$/;"	d
Tcl_MathProc	/usr/include/tcl.h	/^typedef int (Tcl_MathProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_Merge	/usr/include/tclDecls.h	/^#define Tcl_Merge /;"	d
Tcl_Merge	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_Merge (int argc, CONST84 char * CONST * argv);$/;"	p	signature:(int argc, CONST84 char * CONST * argv)
Tcl_Merge_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Merge_TCL_DECLARED$/;"	d
Tcl_Mutex	/usr/include/tcl.h	/^typedef struct Tcl_Mutex_ *Tcl_Mutex;$/;"	t	typeref:struct:Tcl_Mutex_
Tcl_MutexFinalize	/usr/include/tcl.h	/^#define Tcl_MutexFinalize(/;"	d
Tcl_MutexFinalize	/usr/include/tcl.h	/^#undef  Tcl_MutexFinalize$/;"	d
Tcl_MutexFinalize	/usr/include/tclDecls.h	/^#define Tcl_MutexFinalize /;"	d
Tcl_MutexFinalize	/usr/include/tclDecls.h	/^EXTERN void		Tcl_MutexFinalize (Tcl_Mutex * mutex);$/;"	p	signature:(Tcl_Mutex * mutex)
Tcl_MutexFinalize_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_MutexFinalize_TCL_DECLARED$/;"	d
Tcl_MutexLock	/usr/include/tcl.h	/^#define Tcl_MutexLock(/;"	d
Tcl_MutexLock	/usr/include/tcl.h	/^#undef  Tcl_MutexLock$/;"	d
Tcl_MutexLock	/usr/include/tclDecls.h	/^#define Tcl_MutexLock /;"	d
Tcl_MutexLock	/usr/include/tclDecls.h	/^EXTERN void		Tcl_MutexLock (Tcl_Mutex * mutexPtr);$/;"	p	signature:(Tcl_Mutex * mutexPtr)
Tcl_MutexLock_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_MutexLock_TCL_DECLARED$/;"	d
Tcl_MutexUnlock	/usr/include/tcl.h	/^#define Tcl_MutexUnlock(/;"	d
Tcl_MutexUnlock	/usr/include/tcl.h	/^#undef  Tcl_MutexUnlock$/;"	d
Tcl_MutexUnlock	/usr/include/tclDecls.h	/^#define Tcl_MutexUnlock /;"	d
Tcl_MutexUnlock	/usr/include/tclDecls.h	/^EXTERN void		Tcl_MutexUnlock (Tcl_Mutex * mutexPtr);$/;"	p	signature:(Tcl_Mutex * mutexPtr)
Tcl_MutexUnlock_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_MutexUnlock_TCL_DECLARED$/;"	d
Tcl_Namespace	/usr/include/tcl.h	/^typedef struct Tcl_Namespace {$/;"	s
Tcl_Namespace	/usr/include/tcl.h	/^} Tcl_Namespace;$/;"	t	typeref:struct:Tcl_Namespace
Tcl_Namespace::clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* Arbitrary value associated with this$/;"	m	struct:Tcl_Namespace	access:public
Tcl_Namespace::deleteProc	/usr/include/tcl.h	/^    Tcl_NamespaceDeleteProc *deleteProc;$/;"	m	struct:Tcl_Namespace	access:public
Tcl_Namespace::fullName	/usr/include/tcl.h	/^    char *fullName;		\/* The namespace's fully qualified name. This$/;"	m	struct:Tcl_Namespace	access:public
Tcl_Namespace::name	/usr/include/tcl.h	/^    char *name;			\/* The namespace's name within its parent$/;"	m	struct:Tcl_Namespace	access:public
Tcl_Namespace::parentPtr	/usr/include/tcl.h	/^    struct Tcl_Namespace *parentPtr;$/;"	m	struct:Tcl_Namespace	typeref:struct:Tcl_Namespace::Tcl_Namespace	access:public
Tcl_NamespaceDeleteProc	/usr/include/tcl.h	/^typedef void (Tcl_NamespaceDeleteProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_NewBignumObj	/usr/include/tcl.h	/^#  define Tcl_NewBignumObj(/;"	d
Tcl_NewBignumObj	/usr/include/tcl.h	/^#  undef  Tcl_NewBignumObj$/;"	d
Tcl_NewBignumObj	/usr/include/tclDecls.h	/^#define Tcl_NewBignumObj /;"	d
Tcl_NewBignumObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj*		Tcl_NewBignumObj (mp_int* value);$/;"	p	signature:(mp_int* value)
Tcl_NewBignumObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewBignumObj_TCL_DECLARED$/;"	d
Tcl_NewBooleanObj	/usr/include/tcl.h	/^#  define Tcl_NewBooleanObj(/;"	d
Tcl_NewBooleanObj	/usr/include/tcl.h	/^#  undef  Tcl_NewBooleanObj$/;"	d
Tcl_NewBooleanObj	/usr/include/tclDecls.h	/^#define Tcl_NewBooleanObj /;"	d
Tcl_NewBooleanObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewBooleanObj (int boolValue);$/;"	p	signature:(int boolValue)
Tcl_NewBooleanObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewBooleanObj_TCL_DECLARED$/;"	d
Tcl_NewByteArrayObj	/usr/include/tcl.h	/^#  define Tcl_NewByteArrayObj(/;"	d
Tcl_NewByteArrayObj	/usr/include/tcl.h	/^#  undef  Tcl_NewByteArrayObj$/;"	d
Tcl_NewByteArrayObj	/usr/include/tclDecls.h	/^#define Tcl_NewByteArrayObj /;"	d
Tcl_NewByteArrayObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewByteArrayObj (CONST unsigned char* bytes, $/;"	p	signature:(CONST unsigned char* bytes, int length)
Tcl_NewByteArrayObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewByteArrayObj_TCL_DECLARED$/;"	d
Tcl_NewDictObj	/usr/include/tclDecls.h	/^#define Tcl_NewDictObj /;"	d
Tcl_NewDictObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewDictObj (void);$/;"	p	signature:(void)
Tcl_NewDictObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewDictObj_TCL_DECLARED$/;"	d
Tcl_NewDoubleObj	/usr/include/tcl.h	/^#  define Tcl_NewDoubleObj(/;"	d
Tcl_NewDoubleObj	/usr/include/tcl.h	/^#  undef  Tcl_NewDoubleObj$/;"	d
Tcl_NewDoubleObj	/usr/include/tclDecls.h	/^#define Tcl_NewDoubleObj /;"	d
Tcl_NewDoubleObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewDoubleObj (double doubleValue);$/;"	p	signature:(double doubleValue)
Tcl_NewDoubleObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewDoubleObj_TCL_DECLARED$/;"	d
Tcl_NewIntObj	/usr/include/tcl.h	/^#  define Tcl_NewIntObj(/;"	d
Tcl_NewIntObj	/usr/include/tcl.h	/^#  undef  Tcl_NewIntObj$/;"	d
Tcl_NewIntObj	/usr/include/tclDecls.h	/^#define Tcl_NewIntObj /;"	d
Tcl_NewIntObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewIntObj (int intValue);$/;"	p	signature:(int intValue)
Tcl_NewIntObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewIntObj_TCL_DECLARED$/;"	d
Tcl_NewListObj	/usr/include/tcl.h	/^#  define Tcl_NewListObj(/;"	d
Tcl_NewListObj	/usr/include/tcl.h	/^#  undef  Tcl_NewListObj$/;"	d
Tcl_NewListObj	/usr/include/tclDecls.h	/^#define Tcl_NewListObj /;"	d
Tcl_NewListObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewListObj (int objc, Tcl_Obj *CONST objv[]);$/;"	p	signature:(int objc, Tcl_Obj *CONST objv[])
Tcl_NewListObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewListObj_TCL_DECLARED$/;"	d
Tcl_NewLongObj	/usr/include/tcl.h	/^#  define Tcl_NewLongObj(/;"	d
Tcl_NewLongObj	/usr/include/tcl.h	/^#  undef  Tcl_NewLongObj$/;"	d
Tcl_NewLongObj	/usr/include/tclDecls.h	/^#define Tcl_NewLongObj /;"	d
Tcl_NewLongObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewLongObj (long longValue);$/;"	p	signature:(long longValue)
Tcl_NewLongObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewLongObj_TCL_DECLARED$/;"	d
Tcl_NewObj	/usr/include/tcl.h	/^#  define Tcl_NewObj(/;"	d
Tcl_NewObj	/usr/include/tcl.h	/^#  undef  Tcl_NewObj$/;"	d
Tcl_NewObj	/usr/include/tclDecls.h	/^#define Tcl_NewObj /;"	d
Tcl_NewObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewObj (void);$/;"	p	signature:(void)
Tcl_NewObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewObj_TCL_DECLARED$/;"	d
Tcl_NewStringObj	/usr/include/tcl.h	/^#  define Tcl_NewStringObj(/;"	d
Tcl_NewStringObj	/usr/include/tcl.h	/^#  undef  Tcl_NewStringObj$/;"	d
Tcl_NewStringObj	/usr/include/tclDecls.h	/^#define Tcl_NewStringObj /;"	d
Tcl_NewStringObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewStringObj (CONST char * bytes, int length);$/;"	p	signature:(CONST char * bytes, int length)
Tcl_NewStringObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewStringObj_TCL_DECLARED$/;"	d
Tcl_NewUnicodeObj	/usr/include/tclDecls.h	/^#define Tcl_NewUnicodeObj /;"	d
Tcl_NewUnicodeObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewUnicodeObj (CONST Tcl_UniChar * unicode, $/;"	p	signature:(CONST Tcl_UniChar * unicode, int numChars)
Tcl_NewUnicodeObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewUnicodeObj_TCL_DECLARED$/;"	d
Tcl_NewWideIntObj	/usr/include/tcl.h	/^#  define Tcl_NewWideIntObj(/;"	d
Tcl_NewWideIntObj	/usr/include/tcl.h	/^#  undef  Tcl_NewWideIntObj$/;"	d
Tcl_NewWideIntObj	/usr/include/tclDecls.h	/^#define Tcl_NewWideIntObj /;"	d
Tcl_NewWideIntObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_NewWideIntObj (Tcl_WideInt wideValue);$/;"	p	signature:(Tcl_WideInt wideValue)
Tcl_NewWideIntObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NewWideIntObj_TCL_DECLARED$/;"	d
Tcl_NextHashEntry	/usr/include/tclDecls.h	/^#define Tcl_NextHashEntry /;"	d
Tcl_NextHashEntry	/usr/include/tclDecls.h	/^EXTERN Tcl_HashEntry *	Tcl_NextHashEntry (Tcl_HashSearch * searchPtr);$/;"	p	signature:(Tcl_HashSearch * searchPtr)
Tcl_NextHashEntry_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NextHashEntry_TCL_DECLARED$/;"	d
Tcl_NotifierProcs	/usr/include/tcl.h	/^typedef struct Tcl_NotifierProcs {$/;"	s
Tcl_NotifierProcs	/usr/include/tcl.h	/^} Tcl_NotifierProcs;$/;"	t	typeref:struct:Tcl_NotifierProcs
Tcl_NotifierProcs::alertNotifierProc	/usr/include/tcl.h	/^    Tcl_AlertNotifierProc *alertNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::createFileHandlerProc	/usr/include/tcl.h	/^    Tcl_CreateFileHandlerProc *createFileHandlerProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::deleteFileHandlerProc	/usr/include/tcl.h	/^    Tcl_DeleteFileHandlerProc *deleteFileHandlerProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::finalizeNotifierProc	/usr/include/tcl.h	/^    Tcl_FinalizeNotifierProc *finalizeNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::initNotifierProc	/usr/include/tcl.h	/^    Tcl_InitNotifierProc *initNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::serviceModeHookProc	/usr/include/tcl.h	/^    Tcl_ServiceModeHookProc *serviceModeHookProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::setTimerProc	/usr/include/tcl.h	/^    Tcl_SetTimerProc *setTimerProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifierProcs::waitForEventProc	/usr/include/tcl.h	/^    Tcl_WaitForEventProc *waitForEventProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
Tcl_NotifyChannel	/usr/include/tclDecls.h	/^#define Tcl_NotifyChannel /;"	d
Tcl_NotifyChannel	/usr/include/tclDecls.h	/^EXTERN void		Tcl_NotifyChannel (Tcl_Channel channel, int mask);$/;"	p	signature:(Tcl_Channel channel, int mask)
Tcl_NotifyChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NotifyChannel_TCL_DECLARED$/;"	d
Tcl_NumUtfChars	/usr/include/tclDecls.h	/^#define Tcl_NumUtfChars /;"	d
Tcl_NumUtfChars	/usr/include/tclDecls.h	/^EXTERN int		Tcl_NumUtfChars (CONST char * src, int length);$/;"	p	signature:(CONST char * src, int length)
Tcl_NumUtfChars_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_NumUtfChars_TCL_DECLARED$/;"	d
Tcl_Obj	/usr/include/tcl.h	/^typedef struct Tcl_Obj {$/;"	s
Tcl_Obj	/usr/include/tcl.h	/^} Tcl_Obj;$/;"	t	typeref:struct:Tcl_Obj
Tcl_Obj::__anon114::__anon115::ptr1	/usr/include/tcl.h	/^	    VOID *ptr1;$/;"	m	struct:Tcl_Obj::__anon114::__anon115	access:public
Tcl_Obj::__anon114::__anon115::ptr2	/usr/include/tcl.h	/^	    VOID *ptr2;$/;"	m	struct:Tcl_Obj::__anon114::__anon115	access:public
Tcl_Obj::__anon114::__anon116::ptr	/usr/include/tcl.h	/^	    VOID *ptr;		\/* Pointer to digits *\/$/;"	m	struct:Tcl_Obj::__anon114::__anon116	access:public
Tcl_Obj::__anon114::__anon116::value	/usr/include/tcl.h	/^	    unsigned long value;\/* Alloc, used, and signum packed into a$/;"	m	struct:Tcl_Obj::__anon114::__anon116	access:public
Tcl_Obj::__anon114::doubleValue	/usr/include/tcl.h	/^	double doubleValue;	\/*   - a double-precision floating value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
Tcl_Obj::__anon114::longValue	/usr/include/tcl.h	/^	long longValue;		\/*   - an long integer value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
Tcl_Obj::__anon114::otherValuePtr	/usr/include/tcl.h	/^	VOID *otherValuePtr;	\/*   - another, type-specific value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
Tcl_Obj::__anon114::ptrAndLongRep	/usr/include/tcl.h	/^	} ptrAndLongRep;$/;"	m	union:Tcl_Obj::__anon114	typeref:struct:Tcl_Obj::__anon114::__anon116	access:public
Tcl_Obj::__anon114::twoPtrValue	/usr/include/tcl.h	/^	} twoPtrValue;$/;"	m	union:Tcl_Obj::__anon114	typeref:struct:Tcl_Obj::__anon114::__anon115	access:public
Tcl_Obj::__anon114::wideValue	/usr/include/tcl.h	/^	Tcl_WideInt wideValue;	\/*   - a long long value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
Tcl_Obj::bytes	/usr/include/tcl.h	/^    char *bytes;		\/* This points to the first byte of the$/;"	m	struct:Tcl_Obj	access:public
Tcl_Obj::internalRep	/usr/include/tcl.h	/^    } internalRep;$/;"	m	struct:Tcl_Obj	typeref:union:Tcl_Obj::__anon114	access:public
Tcl_Obj::length	/usr/include/tcl.h	/^    int length;			\/* The number of bytes at *bytes, not$/;"	m	struct:Tcl_Obj	access:public
Tcl_Obj::refCount	/usr/include/tcl.h	/^    int refCount;		\/* When 0 the object will be freed. *\/$/;"	m	struct:Tcl_Obj	access:public
Tcl_Obj::typePtr	/usr/include/tcl.h	/^    Tcl_ObjType *typePtr;	\/* Denotes the object's type. Always$/;"	m	struct:Tcl_Obj	access:public
Tcl_ObjCmdProc	/usr/include/tcl.h	/^typedef int (Tcl_ObjCmdProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_ObjGetVar2	/usr/include/tclDecls.h	/^#define Tcl_ObjGetVar2 /;"	d
Tcl_ObjGetVar2	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_ObjGetVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * part1Ptr, Tcl_Obj * part2Ptr, int flags)
Tcl_ObjGetVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ObjGetVar2_TCL_DECLARED$/;"	d
Tcl_ObjPrintf	/usr/include/tclDecls.h	/^#define Tcl_ObjPrintf /;"	d
Tcl_ObjPrintf	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_ObjPrintf (CONST char * format, ...);$/;"	p	signature:(CONST char * format, ...)
Tcl_ObjPrintf_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ObjPrintf_TCL_DECLARED$/;"	d
Tcl_ObjSetVar2	/usr/include/tclDecls.h	/^#define Tcl_ObjSetVar2 /;"	d
Tcl_ObjSetVar2	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_ObjSetVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * part1Ptr, Tcl_Obj * part2Ptr, Tcl_Obj * newValuePtr, int flags)
Tcl_ObjSetVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ObjSetVar2_TCL_DECLARED$/;"	d
Tcl_ObjType	/usr/include/tcl.h	/^typedef struct Tcl_ObjType {$/;"	s
Tcl_ObjType	/usr/include/tcl.h	/^} Tcl_ObjType;$/;"	t	typeref:struct:Tcl_ObjType
Tcl_ObjType::dupIntRepProc	/usr/include/tcl.h	/^    Tcl_DupInternalRepProc *dupIntRepProc;$/;"	m	struct:Tcl_ObjType	access:public
Tcl_ObjType::freeIntRepProc	/usr/include/tcl.h	/^    Tcl_FreeInternalRepProc *freeIntRepProc;$/;"	m	struct:Tcl_ObjType	access:public
Tcl_ObjType::name	/usr/include/tcl.h	/^    char *name;			\/* Name of the type, e.g. "int". *\/$/;"	m	struct:Tcl_ObjType	access:public
Tcl_ObjType::setFromAnyProc	/usr/include/tcl.h	/^    Tcl_SetFromAnyProc *setFromAnyProc;$/;"	m	struct:Tcl_ObjType	access:public
Tcl_ObjType::updateStringProc	/usr/include/tcl.h	/^    Tcl_UpdateStringProc *updateStringProc;$/;"	m	struct:Tcl_ObjType	access:public
Tcl_OldStat_	/usr/include/tcl.h	/^typedef struct stat *Tcl_OldStat_;$/;"	t	typeref:struct:stat
Tcl_OpenCommandChannel	/usr/include/tclDecls.h	/^#define Tcl_OpenCommandChannel /;"	d
Tcl_OpenCommandChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_OpenCommandChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int argc, CONST84 char ** argv, int flags)
Tcl_OpenCommandChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_OpenCommandChannel_TCL_DECLARED$/;"	d
Tcl_OpenFileChannel	/usr/include/tclDecls.h	/^#define Tcl_OpenFileChannel /;"	d
Tcl_OpenFileChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_OpenFileChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * fileName, CONST char * modeString, int permissions)
Tcl_OpenFileChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_OpenFileChannel_TCL_DECLARED$/;"	d
Tcl_OpenTcpClient	/usr/include/tclDecls.h	/^#define Tcl_OpenTcpClient /;"	d
Tcl_OpenTcpClient	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_OpenTcpClient (Tcl_Interp * interp, int port, $/;"	p	signature:(Tcl_Interp * interp, int port, CONST char * address, CONST char * myaddr, int myport, int async)
Tcl_OpenTcpClient_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_OpenTcpClient_TCL_DECLARED$/;"	d
Tcl_OpenTcpServer	/usr/include/tclDecls.h	/^#define Tcl_OpenTcpServer /;"	d
Tcl_OpenTcpServer	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_OpenTcpServer (Tcl_Interp * interp, int port, $/;"	p	signature:(Tcl_Interp * interp, int port, CONST char * host, Tcl_TcpAcceptProc * acceptProc, ClientData callbackData)
Tcl_OpenTcpServer_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_OpenTcpServer_TCL_DECLARED$/;"	d
Tcl_OutputBuffered	/usr/include/tclDecls.h	/^#define Tcl_OutputBuffered /;"	d
Tcl_OutputBuffered	/usr/include/tclDecls.h	/^EXTERN int		Tcl_OutputBuffered (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_OutputBuffered_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_OutputBuffered_TCL_DECLARED$/;"	d
Tcl_PackageInitProc	/usr/include/tcl.h	/^typedef int (Tcl_PackageInitProc) _ANSI_ARGS_((Tcl_Interp *interp));$/;"	t
Tcl_PackageUnloadProc	/usr/include/tcl.h	/^typedef int (Tcl_PackageUnloadProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tcl_Panic	/usr/include/tclDecls.h	/^#define Tcl_Panic /;"	d
Tcl_Panic	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Panic (CONST char * format, ...);$/;"	p	signature:(CONST char * format, ...)
Tcl_PanicProc	/usr/include/tcl.h	/^typedef void (Tcl_PanicProc) _ANSI_ARGS_((CONST char *format, ...));$/;"	t
Tcl_PanicVA	/usr/include/tclDecls.h	/^#define Tcl_PanicVA /;"	d
Tcl_PanicVA	/usr/include/tclDecls.h	/^EXTERN void		Tcl_PanicVA (CONST char * format, va_list argList);$/;"	p	signature:(CONST char * format, va_list argList)
Tcl_PanicVA_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PanicVA_TCL_DECLARED$/;"	d
Tcl_Panic_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Panic_TCL_DECLARED$/;"	d
Tcl_Parse	/usr/include/tcl.h	/^typedef struct Tcl_Parse {$/;"	s
Tcl_Parse	/usr/include/tcl.h	/^} Tcl_Parse;$/;"	t	typeref:struct:Tcl_Parse
Tcl_Parse::commandSize	/usr/include/tcl.h	/^    int commandSize;		\/* Number of bytes in command, including first$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::commandStart	/usr/include/tcl.h	/^    CONST char *commandStart;	\/* First character in first word of$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::commentSize	/usr/include/tcl.h	/^    int commentSize;		\/* Number of bytes in comments (up through$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::commentStart	/usr/include/tcl.h	/^    CONST char *commentStart;	\/* Pointer to # that begins the first of one$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::end	/usr/include/tcl.h	/^    CONST char *end;		\/* Points to the character just after the last$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::errorType	/usr/include/tcl.h	/^    int errorType;		\/* One of the parsing error types defined$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::incomplete	/usr/include/tcl.h	/^    int incomplete;		\/* This field is set to 1 by Tcl_ParseCommand$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::interp	/usr/include/tcl.h	/^    Tcl_Interp *interp;		\/* Interpreter to use for error reporting, or$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::numTokens	/usr/include/tcl.h	/^    int numTokens;		\/* Total number of tokens in command. *\/$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::numWords	/usr/include/tcl.h	/^    int numWords;		\/* Total number of words in command. May be$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::staticTokens	/usr/include/tcl.h	/^    Tcl_Token staticTokens[NUM_STATIC_TOKENS];$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::string	/usr/include/tcl.h	/^    CONST char *string;		\/* The original command string passed to$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::term	/usr/include/tcl.h	/^    CONST char *term;		\/* Points to character in string that$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::tokenPtr	/usr/include/tcl.h	/^    Tcl_Token *tokenPtr;	\/* Pointer to first token representing the$/;"	m	struct:Tcl_Parse	access:public
Tcl_Parse::tokensAvailable	/usr/include/tcl.h	/^    int tokensAvailable;	\/* Total number of tokens available at$/;"	m	struct:Tcl_Parse	access:public
Tcl_ParseBraces	/usr/include/tclDecls.h	/^#define Tcl_ParseBraces /;"	d
Tcl_ParseBraces	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ParseBraces (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append, CONST84 char ** termPtr)
Tcl_ParseBraces_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ParseBraces_TCL_DECLARED$/;"	d
Tcl_ParseCommand	/usr/include/tclDecls.h	/^#define Tcl_ParseCommand /;"	d
Tcl_ParseCommand	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ParseCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * start, int numBytes, int nested, Tcl_Parse * parsePtr)
Tcl_ParseCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ParseCommand_TCL_DECLARED$/;"	d
Tcl_ParseExpr	/usr/include/tclDecls.h	/^#define Tcl_ParseExpr /;"	d
Tcl_ParseExpr	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ParseExpr (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr)
Tcl_ParseExpr_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ParseExpr_TCL_DECLARED$/;"	d
Tcl_ParseQuotedString	/usr/include/tclDecls.h	/^#define Tcl_ParseQuotedString /;"	d
Tcl_ParseQuotedString	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ParseQuotedString (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append, CONST84 char ** termPtr)
Tcl_ParseQuotedString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ParseQuotedString_TCL_DECLARED$/;"	d
Tcl_ParseVar	/usr/include/tclDecls.h	/^#define Tcl_ParseVar /;"	d
Tcl_ParseVar	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_ParseVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * start, CONST84 char ** termPtr)
Tcl_ParseVarName	/usr/include/tclDecls.h	/^#define Tcl_ParseVarName /;"	d
Tcl_ParseVarName	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ParseVarName (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append)
Tcl_ParseVarName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ParseVarName_TCL_DECLARED$/;"	d
Tcl_ParseVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ParseVar_TCL_DECLARED$/;"	d
Tcl_PathType	/usr/include/tcl.h	/^typedef enum Tcl_PathType {$/;"	g
Tcl_PathType	/usr/include/tcl.h	/^} Tcl_PathType;$/;"	t	typeref:enum:Tcl_PathType
Tcl_Pid	/usr/include/tcl.h	/^typedef struct Tcl_Pid_ *Tcl_Pid;$/;"	t	typeref:struct:Tcl_Pid_
Tcl_PkgInitStubsCheck	/usr/include/tcl.h	/^EXTERN CONST char *	Tcl_PkgInitStubsCheck _ANSI_ARGS_((Tcl_Interp *interp,$/;"	p	signature:(Tcl_Interp *interp, CONST char *version, int exact)
Tcl_PkgPresent	/usr/include/tclDecls.h	/^#define Tcl_PkgPresent /;"	d
Tcl_PkgPresent	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_PkgPresent (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, CONST char * version, int exact)
Tcl_PkgPresentEx	/usr/include/tclDecls.h	/^#define Tcl_PkgPresentEx /;"	d
Tcl_PkgPresentEx	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_PkgPresentEx (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, CONST char * version, int exact, ClientData * clientDataPtr)
Tcl_PkgPresentEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgPresentEx_TCL_DECLARED$/;"	d
Tcl_PkgPresent_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgPresent_TCL_DECLARED$/;"	d
Tcl_PkgProvide	/usr/include/tclDecls.h	/^#define Tcl_PkgProvide /;"	d
Tcl_PkgProvide	/usr/include/tclDecls.h	/^EXTERN int		Tcl_PkgProvide (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, CONST char * version)
Tcl_PkgProvideEx	/usr/include/tclDecls.h	/^#define Tcl_PkgProvideEx /;"	d
Tcl_PkgProvideEx	/usr/include/tclDecls.h	/^EXTERN int		Tcl_PkgProvideEx (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, CONST char* name, CONST char* version, ClientData clientData)
Tcl_PkgProvideEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgProvideEx_TCL_DECLARED$/;"	d
Tcl_PkgProvide_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgProvide_TCL_DECLARED$/;"	d
Tcl_PkgRequire	/usr/include/tclDecls.h	/^#define Tcl_PkgRequire /;"	d
Tcl_PkgRequire	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_PkgRequire (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, CONST char * version, int exact)
Tcl_PkgRequireEx	/usr/include/tclDecls.h	/^#define Tcl_PkgRequireEx /;"	d
Tcl_PkgRequireEx	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_PkgRequireEx (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, CONST char * version, int exact, ClientData * clientDataPtr)
Tcl_PkgRequireEx_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgRequireEx_TCL_DECLARED$/;"	d
Tcl_PkgRequireProc	/usr/include/tclDecls.h	/^#define Tcl_PkgRequireProc /;"	d
Tcl_PkgRequireProc	/usr/include/tclDecls.h	/^EXTERN int		Tcl_PkgRequireProc (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, int objc, Tcl_Obj *CONST objv[], ClientData * clientDataPtr)
Tcl_PkgRequireProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgRequireProc_TCL_DECLARED$/;"	d
Tcl_PkgRequire_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PkgRequire_TCL_DECLARED$/;"	d
Tcl_PosixError	/usr/include/tclDecls.h	/^#define Tcl_PosixError /;"	d
Tcl_PosixError	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_PosixError (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_PosixError_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PosixError_TCL_DECLARED$/;"	d
Tcl_Preserve	/usr/include/tclDecls.h	/^#define Tcl_Preserve /;"	d
Tcl_Preserve	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Preserve (ClientData data);$/;"	p	signature:(ClientData data)
Tcl_Preserve_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Preserve_TCL_DECLARED$/;"	d
Tcl_PrintDouble	/usr/include/tclDecls.h	/^#define Tcl_PrintDouble /;"	d
Tcl_PrintDouble	/usr/include/tclDecls.h	/^EXTERN void		Tcl_PrintDouble (Tcl_Interp * interp, double value, $/;"	p	signature:(Tcl_Interp * interp, double value, char * dst)
Tcl_PrintDouble_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PrintDouble_TCL_DECLARED$/;"	d
Tcl_ProcObjCmd	/usr/include/tclDecls.h	/^#define Tcl_ProcObjCmd /;"	d
Tcl_ProcObjCmd	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ProcObjCmd (ClientData clientData, $/;"	p	signature:(ClientData clientData, Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[])
Tcl_ProcObjCmd_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ProcObjCmd_TCL_DECLARED$/;"	d
Tcl_PutEnv	/usr/include/tclDecls.h	/^#define Tcl_PutEnv /;"	d
Tcl_PutEnv	/usr/include/tclDecls.h	/^EXTERN int		Tcl_PutEnv (CONST char * assignment);$/;"	p	signature:(CONST char * assignment)
Tcl_PutEnv_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_PutEnv_TCL_DECLARED$/;"	d
Tcl_QueryTimeProc	/usr/include/tclDecls.h	/^#define Tcl_QueryTimeProc /;"	d
Tcl_QueryTimeProc	/usr/include/tclDecls.h	/^EXTERN void		Tcl_QueryTimeProc (Tcl_GetTimeProc** getProc, $/;"	p	signature:(Tcl_GetTimeProc** getProc, Tcl_ScaleTimeProc** scaleProc, ClientData* clientData)
Tcl_QueryTimeProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_QueryTimeProc_TCL_DECLARED$/;"	d
Tcl_QueueEvent	/usr/include/tclDecls.h	/^#define Tcl_QueueEvent /;"	d
Tcl_QueueEvent	/usr/include/tclDecls.h	/^EXTERN void		Tcl_QueueEvent (Tcl_Event * evPtr, $/;"	p	signature:(Tcl_Event * evPtr, Tcl_QueuePosition position)
Tcl_QueueEvent_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_QueueEvent_TCL_DECLARED$/;"	d
Tcl_QueuePosition	/usr/include/tcl.h	/^} Tcl_QueuePosition;$/;"	t	typeref:enum:__anon119
Tcl_Read	/usr/include/tclDecls.h	/^#define Tcl_Read /;"	d
Tcl_Read	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Read (Tcl_Channel chan, char * bufPtr, $/;"	p	signature:(Tcl_Channel chan, char * bufPtr, int toRead)
Tcl_ReadChars	/usr/include/tclDecls.h	/^#define Tcl_ReadChars /;"	d
Tcl_ReadChars	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ReadChars (Tcl_Channel channel, Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Channel channel, Tcl_Obj * objPtr, int charsToRead, int appendFlag)
Tcl_ReadChars_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ReadChars_TCL_DECLARED$/;"	d
Tcl_ReadRaw	/usr/include/tclDecls.h	/^#define Tcl_ReadRaw /;"	d
Tcl_ReadRaw	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ReadRaw (Tcl_Channel chan, char * dst, $/;"	p	signature:(Tcl_Channel chan, char * dst, int bytesToRead)
Tcl_ReadRaw_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ReadRaw_TCL_DECLARED$/;"	d
Tcl_Read_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Read_TCL_DECLARED$/;"	d
Tcl_Realloc	/usr/include/tclDecls.h	/^#define Tcl_Realloc /;"	d
Tcl_Realloc	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_Realloc (char * ptr, unsigned int size);$/;"	p	signature:(char * ptr, unsigned int size)
Tcl_Realloc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Realloc_TCL_DECLARED$/;"	d
Tcl_ReapDetachedProcs	/usr/include/tclDecls.h	/^#define Tcl_ReapDetachedProcs /;"	d
Tcl_ReapDetachedProcs	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ReapDetachedProcs (void);$/;"	p	signature:(void)
Tcl_ReapDetachedProcs_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ReapDetachedProcs_TCL_DECLARED$/;"	d
Tcl_RecordAndEval	/usr/include/tclDecls.h	/^#define Tcl_RecordAndEval /;"	d
Tcl_RecordAndEval	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RecordAndEval (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmd, int flags)
Tcl_RecordAndEvalObj	/usr/include/tclDecls.h	/^#define Tcl_RecordAndEvalObj /;"	d
Tcl_RecordAndEvalObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RecordAndEvalObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * cmdPtr, int flags)
Tcl_RecordAndEvalObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RecordAndEvalObj_TCL_DECLARED$/;"	d
Tcl_RecordAndEval_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RecordAndEval_TCL_DECLARED$/;"	d
Tcl_RegExp	/usr/include/tcl.h	/^typedef struct Tcl_RegExp_ *Tcl_RegExp;$/;"	t	typeref:struct:Tcl_RegExp_
Tcl_RegExpCompile	/usr/include/tclDecls.h	/^#define Tcl_RegExpCompile /;"	d
Tcl_RegExpCompile	/usr/include/tclDecls.h	/^EXTERN Tcl_RegExp	Tcl_RegExpCompile (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * pattern)
Tcl_RegExpCompile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpCompile_TCL_DECLARED$/;"	d
Tcl_RegExpExec	/usr/include/tclDecls.h	/^#define Tcl_RegExpExec /;"	d
Tcl_RegExpExec	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RegExpExec (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_RegExp regexp, CONST char * text, CONST char * start)
Tcl_RegExpExecObj	/usr/include/tclDecls.h	/^#define Tcl_RegExpExecObj /;"	d
Tcl_RegExpExecObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RegExpExecObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_RegExp regexp, Tcl_Obj * textObj, int offset, int nmatches, int flags)
Tcl_RegExpExecObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpExecObj_TCL_DECLARED$/;"	d
Tcl_RegExpExec_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpExec_TCL_DECLARED$/;"	d
Tcl_RegExpGetInfo	/usr/include/tclDecls.h	/^#define Tcl_RegExpGetInfo /;"	d
Tcl_RegExpGetInfo	/usr/include/tclDecls.h	/^EXTERN void		Tcl_RegExpGetInfo (Tcl_RegExp regexp, $/;"	p	signature:(Tcl_RegExp regexp, Tcl_RegExpInfo * infoPtr)
Tcl_RegExpGetInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpGetInfo_TCL_DECLARED$/;"	d
Tcl_RegExpIndices	/usr/include/tcl.h	/^typedef struct Tcl_RegExpIndices {$/;"	s
Tcl_RegExpIndices	/usr/include/tcl.h	/^} Tcl_RegExpIndices;$/;"	t	typeref:struct:Tcl_RegExpIndices
Tcl_RegExpIndices::end	/usr/include/tcl.h	/^    long end;			\/* Character offset of first character after$/;"	m	struct:Tcl_RegExpIndices	access:public
Tcl_RegExpIndices::start	/usr/include/tcl.h	/^    long start;			\/* Character offset of first character in$/;"	m	struct:Tcl_RegExpIndices	access:public
Tcl_RegExpInfo	/usr/include/tcl.h	/^typedef struct Tcl_RegExpInfo {$/;"	s
Tcl_RegExpInfo	/usr/include/tcl.h	/^} Tcl_RegExpInfo;$/;"	t	typeref:struct:Tcl_RegExpInfo
Tcl_RegExpInfo::extendStart	/usr/include/tcl.h	/^    long extendStart;		\/* The offset at which a subsequent match$/;"	m	struct:Tcl_RegExpInfo	access:public
Tcl_RegExpInfo::matches	/usr/include/tcl.h	/^    Tcl_RegExpIndices *matches;	\/* Array of nsubs match offset pairs. *\/$/;"	m	struct:Tcl_RegExpInfo	access:public
Tcl_RegExpInfo::nsubs	/usr/include/tcl.h	/^    int nsubs;			\/* Number of subexpressions in the compiled$/;"	m	struct:Tcl_RegExpInfo	access:public
Tcl_RegExpInfo::reserved	/usr/include/tcl.h	/^    long reserved;		\/* Reserved for later use. *\/$/;"	m	struct:Tcl_RegExpInfo	access:public
Tcl_RegExpMatch	/usr/include/tclDecls.h	/^#define Tcl_RegExpMatch /;"	d
Tcl_RegExpMatch	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RegExpMatch (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * text, CONST char * pattern)
Tcl_RegExpMatchObj	/usr/include/tclDecls.h	/^#define Tcl_RegExpMatchObj /;"	d
Tcl_RegExpMatchObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RegExpMatchObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * textObj, Tcl_Obj * patternObj)
Tcl_RegExpMatchObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpMatchObj_TCL_DECLARED$/;"	d
Tcl_RegExpMatch_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpMatch_TCL_DECLARED$/;"	d
Tcl_RegExpRange	/usr/include/tclDecls.h	/^#define Tcl_RegExpRange /;"	d
Tcl_RegExpRange	/usr/include/tclDecls.h	/^EXTERN void		Tcl_RegExpRange (Tcl_RegExp regexp, int index, $/;"	p	signature:(Tcl_RegExp regexp, int index, CONST84 char ** startPtr, CONST84 char ** endPtr)
Tcl_RegExpRange_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegExpRange_TCL_DECLARED$/;"	d
Tcl_RegisterChannel	/usr/include/tclDecls.h	/^#define Tcl_RegisterChannel /;"	d
Tcl_RegisterChannel	/usr/include/tclDecls.h	/^EXTERN void		Tcl_RegisterChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Channel chan)
Tcl_RegisterChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegisterChannel_TCL_DECLARED$/;"	d
Tcl_RegisterConfig	/usr/include/tclDecls.h	/^#define Tcl_RegisterConfig /;"	d
Tcl_RegisterConfig	/usr/include/tclDecls.h	/^EXTERN void		Tcl_RegisterConfig (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, CONST char* pkgName, Tcl_Config* configuration, CONST char* valEncoding)
Tcl_RegisterConfig_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegisterConfig_TCL_DECLARED$/;"	d
Tcl_RegisterObjType	/usr/include/tclDecls.h	/^#define Tcl_RegisterObjType /;"	d
Tcl_RegisterObjType	/usr/include/tclDecls.h	/^EXTERN void		Tcl_RegisterObjType (Tcl_ObjType * typePtr);$/;"	p	signature:(Tcl_ObjType * typePtr)
Tcl_RegisterObjType_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RegisterObjType_TCL_DECLARED$/;"	d
Tcl_Release	/usr/include/tclDecls.h	/^#define Tcl_Release /;"	d
Tcl_Release	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Release (ClientData clientData);$/;"	p	signature:(ClientData clientData)
Tcl_Release_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Release_TCL_DECLARED$/;"	d
Tcl_ResetResult	/usr/include/tclDecls.h	/^#define Tcl_ResetResult /;"	d
Tcl_ResetResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ResetResult (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_ResetResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ResetResult_TCL_DECLARED$/;"	d
Tcl_RestoreInterpState	/usr/include/tclDecls.h	/^#define Tcl_RestoreInterpState /;"	d
Tcl_RestoreInterpState	/usr/include/tclDecls.h	/^EXTERN int		Tcl_RestoreInterpState (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_InterpState state)
Tcl_RestoreInterpState_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RestoreInterpState_TCL_DECLARED$/;"	d
Tcl_RestoreResult	/usr/include/tclDecls.h	/^#define Tcl_RestoreResult /;"	d
Tcl_RestoreResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_RestoreResult (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_SavedResult * statePtr)
Tcl_RestoreResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_RestoreResult_TCL_DECLARED$/;"	d
Tcl_Return	/usr/include/tcl.h	/^#   define Tcl_Return	/;"	d
Tcl_SaveInterpState	/usr/include/tclDecls.h	/^#define Tcl_SaveInterpState /;"	d
Tcl_SaveInterpState	/usr/include/tclDecls.h	/^EXTERN Tcl_InterpState	Tcl_SaveInterpState (Tcl_Interp * interp, int status);$/;"	p	signature:(Tcl_Interp * interp, int status)
Tcl_SaveInterpState_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SaveInterpState_TCL_DECLARED$/;"	d
Tcl_SaveResult	/usr/include/tclDecls.h	/^#define Tcl_SaveResult /;"	d
Tcl_SaveResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SaveResult (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_SavedResult * statePtr)
Tcl_SaveResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SaveResult_TCL_DECLARED$/;"	d
Tcl_SavedResult	/usr/include/tcl.h	/^typedef struct Tcl_SavedResult {$/;"	s
Tcl_SavedResult	/usr/include/tcl.h	/^} Tcl_SavedResult;$/;"	t	typeref:struct:Tcl_SavedResult
Tcl_SavedResult::appendAvl	/usr/include/tcl.h	/^    int appendAvl;$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_SavedResult::appendResult	/usr/include/tcl.h	/^    char *appendResult;$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_SavedResult::appendUsed	/usr/include/tcl.h	/^    int appendUsed;$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_SavedResult::freeProc	/usr/include/tcl.h	/^    Tcl_FreeProc *freeProc;$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_SavedResult::objResultPtr	/usr/include/tcl.h	/^    Tcl_Obj *objResultPtr;$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_SavedResult::result	/usr/include/tcl.h	/^    char *result;$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_SavedResult::resultSpace	/usr/include/tcl.h	/^    char resultSpace[TCL_RESULT_SIZE+1];$/;"	m	struct:Tcl_SavedResult	access:public
Tcl_ScaleTimeProc	/usr/include/tcl.h	/^typedef void (Tcl_ScaleTimeProc) _ANSI_ARGS_((Tcl_Time *timebuf,$/;"	t
Tcl_ScanCountedElement	/usr/include/tclDecls.h	/^#define Tcl_ScanCountedElement /;"	d
Tcl_ScanCountedElement	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ScanCountedElement (CONST char * str, int length, $/;"	p	signature:(CONST char * str, int length, int * flagPtr)
Tcl_ScanCountedElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ScanCountedElement_TCL_DECLARED$/;"	d
Tcl_ScanElement	/usr/include/tclDecls.h	/^#define Tcl_ScanElement /;"	d
Tcl_ScanElement	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ScanElement (CONST char * str, int * flagPtr);$/;"	p	signature:(CONST char * str, int * flagPtr)
Tcl_ScanElement_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ScanElement_TCL_DECLARED$/;"	d
Tcl_Seek	/usr/include/tclDecls.h	/^#define Tcl_Seek /;"	d
Tcl_Seek	/usr/include/tclDecls.h	/^EXTERN Tcl_WideInt	Tcl_Seek (Tcl_Channel chan, Tcl_WideInt offset, $/;"	p	signature:(Tcl_Channel chan, Tcl_WideInt offset, int mode)
Tcl_SeekOld	/usr/include/tclDecls.h	/^#define Tcl_SeekOld /;"	d
Tcl_SeekOld	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SeekOld (Tcl_Channel chan, int offset, int mode);$/;"	p	signature:(Tcl_Channel chan, int offset, int mode)
Tcl_SeekOld_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SeekOld_TCL_DECLARED$/;"	d
Tcl_Seek_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Seek_TCL_DECLARED$/;"	d
Tcl_ServiceAll	/usr/include/tclDecls.h	/^#define Tcl_ServiceAll /;"	d
Tcl_ServiceAll	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ServiceAll (void);$/;"	p	signature:(void)
Tcl_ServiceAll_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ServiceAll_TCL_DECLARED$/;"	d
Tcl_ServiceEvent	/usr/include/tclDecls.h	/^#define Tcl_ServiceEvent /;"	d
Tcl_ServiceEvent	/usr/include/tclDecls.h	/^EXTERN int		Tcl_ServiceEvent (int flags);$/;"	p	signature:(int flags)
Tcl_ServiceEvent_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ServiceEvent_TCL_DECLARED$/;"	d
Tcl_ServiceModeHook	/usr/include/tclDecls.h	/^#define Tcl_ServiceModeHook /;"	d
Tcl_ServiceModeHook	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ServiceModeHook (int mode);$/;"	p	signature:(int mode)
Tcl_ServiceModeHookProc	/usr/include/tcl.h	/^typedef void (Tcl_ServiceModeHookProc) _ANSI_ARGS_((int mode));$/;"	t
Tcl_ServiceModeHook_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ServiceModeHook_TCL_DECLARED$/;"	d
Tcl_SetAssocData	/usr/include/tclDecls.h	/^#define Tcl_SetAssocData /;"	d
Tcl_SetAssocData	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetAssocData (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tcl_InterpDeleteProc * proc, ClientData clientData)
Tcl_SetAssocData_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetAssocData_TCL_DECLARED$/;"	d
Tcl_SetBignumObj	/usr/include/tclDecls.h	/^#define Tcl_SetBignumObj /;"	d
Tcl_SetBignumObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetBignumObj (Tcl_Obj* obj, mp_int* value);$/;"	p	signature:(Tcl_Obj* obj, mp_int* value)
Tcl_SetBignumObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetBignumObj_TCL_DECLARED$/;"	d
Tcl_SetBooleanObj	/usr/include/tclDecls.h	/^#define Tcl_SetBooleanObj /;"	d
Tcl_SetBooleanObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetBooleanObj (Tcl_Obj * objPtr, int boolValue);$/;"	p	signature:(Tcl_Obj * objPtr, int boolValue)
Tcl_SetBooleanObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetBooleanObj_TCL_DECLARED$/;"	d
Tcl_SetByteArrayLength	/usr/include/tclDecls.h	/^#define Tcl_SetByteArrayLength /;"	d
Tcl_SetByteArrayLength	/usr/include/tclDecls.h	/^EXTERN unsigned char *	Tcl_SetByteArrayLength (Tcl_Obj * objPtr, int length);$/;"	p	signature:(Tcl_Obj * objPtr, int length)
Tcl_SetByteArrayLength_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetByteArrayLength_TCL_DECLARED$/;"	d
Tcl_SetByteArrayObj	/usr/include/tclDecls.h	/^#define Tcl_SetByteArrayObj /;"	d
Tcl_SetByteArrayObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetByteArrayObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST unsigned char * bytes, int length)
Tcl_SetByteArrayObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetByteArrayObj_TCL_DECLARED$/;"	d
Tcl_SetChannelBufferSize	/usr/include/tclDecls.h	/^#define Tcl_SetChannelBufferSize /;"	d
Tcl_SetChannelBufferSize	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetChannelBufferSize (Tcl_Channel chan, int sz);$/;"	p	signature:(Tcl_Channel chan, int sz)
Tcl_SetChannelBufferSize_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetChannelBufferSize_TCL_DECLARED$/;"	d
Tcl_SetChannelError	/usr/include/tclDecls.h	/^#define Tcl_SetChannelError /;"	d
Tcl_SetChannelError	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetChannelError (Tcl_Channel chan, Tcl_Obj* msg);$/;"	p	signature:(Tcl_Channel chan, Tcl_Obj* msg)
Tcl_SetChannelErrorInterp	/usr/include/tclDecls.h	/^#define Tcl_SetChannelErrorInterp /;"	d
Tcl_SetChannelErrorInterp	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetChannelErrorInterp (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Obj* msg)
Tcl_SetChannelErrorInterp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetChannelErrorInterp_TCL_DECLARED$/;"	d
Tcl_SetChannelError_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetChannelError_TCL_DECLARED$/;"	d
Tcl_SetChannelOption	/usr/include/tclDecls.h	/^#define Tcl_SetChannelOption /;"	d
Tcl_SetChannelOption	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetChannelOption (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Channel chan, CONST char * optionName, CONST char * newValue)
Tcl_SetChannelOption_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetChannelOption_TCL_DECLARED$/;"	d
Tcl_SetCommandInfo	/usr/include/tclDecls.h	/^#define Tcl_SetCommandInfo /;"	d
Tcl_SetCommandInfo	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetCommandInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * cmdName, CONST Tcl_CmdInfo * infoPtr)
Tcl_SetCommandInfoFromToken	/usr/include/tclDecls.h	/^#define Tcl_SetCommandInfoFromToken /;"	d
Tcl_SetCommandInfoFromToken	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetCommandInfoFromToken (Tcl_Command token, $/;"	p	signature:(Tcl_Command token, CONST Tcl_CmdInfo* infoPtr)
Tcl_SetCommandInfoFromToken_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetCommandInfoFromToken_TCL_DECLARED$/;"	d
Tcl_SetCommandInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetCommandInfo_TCL_DECLARED$/;"	d
Tcl_SetDefaultEncodingDir	/usr/include/tclDecls.h	/^#define Tcl_SetDefaultEncodingDir /;"	d
Tcl_SetDefaultEncodingDir	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetDefaultEncodingDir (CONST char * path);$/;"	p	signature:(CONST char * path)
Tcl_SetDefaultEncodingDir_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetDefaultEncodingDir_TCL_DECLARED$/;"	d
Tcl_SetDoubleObj	/usr/include/tclDecls.h	/^#define Tcl_SetDoubleObj /;"	d
Tcl_SetDoubleObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetDoubleObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, double doubleValue)
Tcl_SetDoubleObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetDoubleObj_TCL_DECLARED$/;"	d
Tcl_SetEncodingSearchPath	/usr/include/tclDecls.h	/^#define Tcl_SetEncodingSearchPath /;"	d
Tcl_SetEncodingSearchPath	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetEncodingSearchPath (Tcl_Obj* searchPath);$/;"	p	signature:(Tcl_Obj* searchPath)
Tcl_SetEncodingSearchPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetEncodingSearchPath_TCL_DECLARED$/;"	d
Tcl_SetEnsembleFlags	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleFlags /;"	d
Tcl_SetEnsembleFlags	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetEnsembleFlags (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, int flags)
Tcl_SetEnsembleFlags_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleFlags_TCL_DECLARED$/;"	d
Tcl_SetEnsembleMappingDict	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleMappingDict /;"	d
Tcl_SetEnsembleMappingDict	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetEnsembleMappingDict (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * mapDict)
Tcl_SetEnsembleMappingDict_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleMappingDict_TCL_DECLARED$/;"	d
Tcl_SetEnsembleSubcommandList	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleSubcommandList /;"	d
Tcl_SetEnsembleSubcommandList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetEnsembleSubcommandList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * subcmdList)
Tcl_SetEnsembleSubcommandList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleSubcommandList_TCL_DECLARED$/;"	d
Tcl_SetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleUnknownHandler /;"	d
Tcl_SetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetEnsembleUnknownHandler (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * unknownList)
Tcl_SetEnsembleUnknownHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetEnsembleUnknownHandler_TCL_DECLARED$/;"	d
Tcl_SetErrno	/usr/include/tclDecls.h	/^#define Tcl_SetErrno /;"	d
Tcl_SetErrno	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetErrno (int err);$/;"	p	signature:(int err)
Tcl_SetErrno_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetErrno_TCL_DECLARED$/;"	d
Tcl_SetErrorCode	/usr/include/tclDecls.h	/^#define Tcl_SetErrorCode /;"	d
Tcl_SetErrorCode	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetErrorCode (Tcl_Interp * interp, ...);$/;"	p	signature:(Tcl_Interp * interp, ...)
Tcl_SetErrorCodeVA	/usr/include/tclDecls.h	/^#define Tcl_SetErrorCodeVA /;"	d
Tcl_SetErrorCodeVA	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetErrorCodeVA (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, va_list argList)
Tcl_SetErrorCodeVA_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetErrorCodeVA_TCL_DECLARED$/;"	d
Tcl_SetErrorCode_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetErrorCode_TCL_DECLARED$/;"	d
Tcl_SetExitProc	/usr/include/tclDecls.h	/^#define Tcl_SetExitProc /;"	d
Tcl_SetExitProc	/usr/include/tclDecls.h	/^EXTERN Tcl_ExitProc *	Tcl_SetExitProc (Tcl_ExitProc * proc);$/;"	p	signature:(Tcl_ExitProc * proc)
Tcl_SetExitProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetExitProc_TCL_DECLARED$/;"	d
Tcl_SetFromAnyProc	/usr/include/tcl.h	/^typedef int (Tcl_SetFromAnyProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tcl_SetHashValue	/usr/include/tcl.h	/^#define Tcl_SetHashValue(/;"	d
Tcl_SetIntObj	/usr/include/tclDecls.h	/^#define Tcl_SetIntObj /;"	d
Tcl_SetIntObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetIntObj (Tcl_Obj * objPtr, int intValue);$/;"	p	signature:(Tcl_Obj * objPtr, int intValue)
Tcl_SetIntObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetIntObj_TCL_DECLARED$/;"	d
Tcl_SetListObj	/usr/include/tclDecls.h	/^#define Tcl_SetListObj /;"	d
Tcl_SetListObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetListObj (Tcl_Obj * objPtr, int objc, $/;"	p	signature:(Tcl_Obj * objPtr, int objc, Tcl_Obj *CONST objv[])
Tcl_SetListObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetListObj_TCL_DECLARED$/;"	d
Tcl_SetLongObj	/usr/include/tclDecls.h	/^#define Tcl_SetLongObj /;"	d
Tcl_SetLongObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetLongObj (Tcl_Obj * objPtr, long longValue);$/;"	p	signature:(Tcl_Obj * objPtr, long longValue)
Tcl_SetLongObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetLongObj_TCL_DECLARED$/;"	d
Tcl_SetMainLoop	/usr/include/tclDecls.h	/^#define Tcl_SetMainLoop /;"	d
Tcl_SetMainLoop	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetMainLoop (Tcl_MainLoopProc * proc);$/;"	p	signature:(Tcl_MainLoopProc * proc)
Tcl_SetMainLoop_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetMainLoop_TCL_DECLARED$/;"	d
Tcl_SetMaxBlockTime	/usr/include/tclDecls.h	/^#define Tcl_SetMaxBlockTime /;"	d
Tcl_SetMaxBlockTime	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetMaxBlockTime (Tcl_Time * timePtr);$/;"	p	signature:(Tcl_Time * timePtr)
Tcl_SetMaxBlockTime_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetMaxBlockTime_TCL_DECLARED$/;"	d
Tcl_SetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^#define Tcl_SetNamespaceUnknownHandler /;"	d
Tcl_SetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetNamespaceUnknownHandler (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Namespace * nsPtr, Tcl_Obj * handlerPtr)
Tcl_SetNamespaceUnknownHandler_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetNamespaceUnknownHandler_TCL_DECLARED$/;"	d
Tcl_SetNotifier	/usr/include/tclDecls.h	/^#define Tcl_SetNotifier /;"	d
Tcl_SetNotifier	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetNotifier (Tcl_NotifierProcs * notifierProcPtr);$/;"	p	signature:(Tcl_NotifierProcs * notifierProcPtr)
Tcl_SetNotifier_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetNotifier_TCL_DECLARED$/;"	d
Tcl_SetObjErrorCode	/usr/include/tclDecls.h	/^#define Tcl_SetObjErrorCode /;"	d
Tcl_SetObjErrorCode	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetObjErrorCode (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * errorObjPtr)
Tcl_SetObjErrorCode_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetObjErrorCode_TCL_DECLARED$/;"	d
Tcl_SetObjLength	/usr/include/tclDecls.h	/^#define Tcl_SetObjLength /;"	d
Tcl_SetObjLength	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetObjLength (Tcl_Obj * objPtr, int length);$/;"	p	signature:(Tcl_Obj * objPtr, int length)
Tcl_SetObjLength_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetObjLength_TCL_DECLARED$/;"	d
Tcl_SetObjResult	/usr/include/tclDecls.h	/^#define Tcl_SetObjResult /;"	d
Tcl_SetObjResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetObjResult (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * resultObjPtr)
Tcl_SetObjResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetObjResult_TCL_DECLARED$/;"	d
Tcl_SetPanicProc	/usr/include/tclDecls.h	/^#define Tcl_SetPanicProc /;"	d
Tcl_SetPanicProc	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetPanicProc (Tcl_PanicProc * panicProc);$/;"	p	signature:(Tcl_PanicProc * panicProc)
Tcl_SetPanicProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetPanicProc_TCL_DECLARED$/;"	d
Tcl_SetRecursionLimit	/usr/include/tclDecls.h	/^#define Tcl_SetRecursionLimit /;"	d
Tcl_SetRecursionLimit	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetRecursionLimit (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, int depth)
Tcl_SetRecursionLimit_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetRecursionLimit_TCL_DECLARED$/;"	d
Tcl_SetResult	/usr/include/tclDecls.h	/^#define Tcl_SetResult /;"	d
Tcl_SetResult	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetResult (Tcl_Interp * interp, char * result, $/;"	p	signature:(Tcl_Interp * interp, char * result, Tcl_FreeProc * freeProc)
Tcl_SetResult_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetResult_TCL_DECLARED$/;"	d
Tcl_SetReturnOptions	/usr/include/tclDecls.h	/^#define Tcl_SetReturnOptions /;"	d
Tcl_SetReturnOptions	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetReturnOptions (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * options)
Tcl_SetReturnOptions_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetReturnOptions_TCL_DECLARED$/;"	d
Tcl_SetServiceMode	/usr/include/tclDecls.h	/^#define Tcl_SetServiceMode /;"	d
Tcl_SetServiceMode	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetServiceMode (int mode);$/;"	p	signature:(int mode)
Tcl_SetServiceMode_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetServiceMode_TCL_DECLARED$/;"	d
Tcl_SetStdChannel	/usr/include/tclDecls.h	/^#define Tcl_SetStdChannel /;"	d
Tcl_SetStdChannel	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetStdChannel (Tcl_Channel channel, int type);$/;"	p	signature:(Tcl_Channel channel, int type)
Tcl_SetStdChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetStdChannel_TCL_DECLARED$/;"	d
Tcl_SetStringObj	/usr/include/tclDecls.h	/^#define Tcl_SetStringObj /;"	d
Tcl_SetStringObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetStringObj (Tcl_Obj* objPtr, CONST char* bytes, $/;"	p	signature:(Tcl_Obj* objPtr, CONST char* bytes, int length)
Tcl_SetStringObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetStringObj_TCL_DECLARED$/;"	d
Tcl_SetSystemEncoding	/usr/include/tclDecls.h	/^#define Tcl_SetSystemEncoding /;"	d
Tcl_SetSystemEncoding	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SetSystemEncoding (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name)
Tcl_SetSystemEncoding_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetSystemEncoding_TCL_DECLARED$/;"	d
Tcl_SetTimeProc	/usr/include/tclDecls.h	/^#define Tcl_SetTimeProc /;"	d
Tcl_SetTimeProc	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetTimeProc (Tcl_GetTimeProc* getProc, $/;"	p	signature:(Tcl_GetTimeProc* getProc, Tcl_ScaleTimeProc* scaleProc, ClientData clientData)
Tcl_SetTimeProc_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetTimeProc_TCL_DECLARED$/;"	d
Tcl_SetTimer	/usr/include/tclDecls.h	/^#define Tcl_SetTimer /;"	d
Tcl_SetTimer	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetTimer (Tcl_Time * timePtr);$/;"	p	signature:(Tcl_Time * timePtr)
Tcl_SetTimerProc	/usr/include/tcl.h	/^typedef void (Tcl_SetTimerProc) _ANSI_ARGS_((Tcl_Time *timePtr));$/;"	t
Tcl_SetTimer_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetTimer_TCL_DECLARED$/;"	d
Tcl_SetUnicodeObj	/usr/include/tclDecls.h	/^#define Tcl_SetUnicodeObj /;"	d
Tcl_SetUnicodeObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetUnicodeObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, CONST Tcl_UniChar * unicode, int numChars)
Tcl_SetUnicodeObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetUnicodeObj_TCL_DECLARED$/;"	d
Tcl_SetVar	/usr/include/tclDecls.h	/^#define Tcl_SetVar /;"	d
Tcl_SetVar	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_SetVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, CONST char * newValue, int flags)
Tcl_SetVar2	/usr/include/tclDecls.h	/^#define Tcl_SetVar2 /;"	d
Tcl_SetVar2	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_SetVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, CONST char * newValue, int flags)
Tcl_SetVar2Ex	/usr/include/tclDecls.h	/^#define Tcl_SetVar2Ex /;"	d
Tcl_SetVar2Ex	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_SetVar2Ex (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, Tcl_Obj * newValuePtr, int flags)
Tcl_SetVar2Ex_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetVar2Ex_TCL_DECLARED$/;"	d
Tcl_SetVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetVar2_TCL_DECLARED$/;"	d
Tcl_SetVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetVar_TCL_DECLARED$/;"	d
Tcl_SetWideIntObj	/usr/include/tclDecls.h	/^#define Tcl_SetWideIntObj /;"	d
Tcl_SetWideIntObj	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SetWideIntObj (Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Obj * objPtr, Tcl_WideInt wideValue)
Tcl_SetWideIntObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SetWideIntObj_TCL_DECLARED$/;"	d
Tcl_SignalId	/usr/include/tclDecls.h	/^#define Tcl_SignalId /;"	d
Tcl_SignalId	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_SignalId (int sig);$/;"	p	signature:(int sig)
Tcl_SignalId_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SignalId_TCL_DECLARED$/;"	d
Tcl_SignalMsg	/usr/include/tclDecls.h	/^#define Tcl_SignalMsg /;"	d
Tcl_SignalMsg	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_SignalMsg (int sig);$/;"	p	signature:(int sig)
Tcl_SignalMsg_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SignalMsg_TCL_DECLARED$/;"	d
Tcl_Sleep	/usr/include/tclDecls.h	/^#define Tcl_Sleep /;"	d
Tcl_Sleep	/usr/include/tclDecls.h	/^EXTERN void		Tcl_Sleep (int ms);$/;"	p	signature:(int ms)
Tcl_Sleep_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Sleep_TCL_DECLARED$/;"	d
Tcl_SourceRCFile	/usr/include/tclDecls.h	/^#define Tcl_SourceRCFile /;"	d
Tcl_SourceRCFile	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SourceRCFile (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tcl_SourceRCFile_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SourceRCFile_TCL_DECLARED$/;"	d
Tcl_SpliceChannel	/usr/include/tclDecls.h	/^#define Tcl_SpliceChannel /;"	d
Tcl_SpliceChannel	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SpliceChannel (Tcl_Channel channel);$/;"	p	signature:(Tcl_Channel channel)
Tcl_SpliceChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SpliceChannel_TCL_DECLARED$/;"	d
Tcl_SplitList	/usr/include/tclDecls.h	/^#define Tcl_SplitList /;"	d
Tcl_SplitList	/usr/include/tclDecls.h	/^EXTERN int		Tcl_SplitList (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * listStr, int * argcPtr, CONST84 char *** argvPtr)
Tcl_SplitList_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SplitList_TCL_DECLARED$/;"	d
Tcl_SplitPath	/usr/include/tclDecls.h	/^#define Tcl_SplitPath /;"	d
Tcl_SplitPath	/usr/include/tclDecls.h	/^EXTERN void		Tcl_SplitPath (CONST char * path, int * argcPtr, $/;"	p	signature:(CONST char * path, int * argcPtr, CONST84 char *** argvPtr)
Tcl_SplitPath_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SplitPath_TCL_DECLARED$/;"	d
Tcl_StackChannel	/usr/include/tclDecls.h	/^#define Tcl_StackChannel /;"	d
Tcl_StackChannel	/usr/include/tclDecls.h	/^EXTERN Tcl_Channel	Tcl_StackChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_ChannelType * typePtr, ClientData instanceData, int mask, Tcl_Channel prevChan)
Tcl_StackChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_StackChannel_TCL_DECLARED$/;"	d
Tcl_Stat	/usr/include/tclDecls.h	/^#define Tcl_Stat /;"	d
Tcl_Stat	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Stat (CONST char * path, struct stat * bufPtr);$/;"	p	signature:(CONST char * path, struct stat * bufPtr)
Tcl_StatBuf	/usr/include/tcl.h	/^typedef struct _stat64	Tcl_StatBuf;$/;"	t	typeref:struct:_stat64
Tcl_StatBuf	/usr/include/tcl.h	/^typedef struct _stati64	Tcl_StatBuf;$/;"	t	typeref:struct:_stati64
Tcl_StatBuf	/usr/include/tcl.h	/^typedef struct stat	Tcl_StatBuf;$/;"	t	typeref:struct:stat
Tcl_StatBuf	/usr/include/tcl.h	/^typedef struct stat64	Tcl_StatBuf;$/;"	t	typeref:struct:stat64
Tcl_StatBuf	/usr/include/tcl.h	/^typedef struct stati64 Tcl_StatBuf;$/;"	t	typeref:struct:stati64
Tcl_Stat_	/usr/include/tcl.h	/^typedef Tcl_StatBuf *Tcl_Stat_;$/;"	t
Tcl_Stat_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Stat_TCL_DECLARED$/;"	d
Tcl_StaticPackage	/usr/include/tclDecls.h	/^#define Tcl_StaticPackage /;"	d
Tcl_StaticPackage	/usr/include/tclDecls.h	/^EXTERN void		Tcl_StaticPackage (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * pkgName, Tcl_PackageInitProc * initProc, Tcl_PackageInitProc * safeInitProc)
Tcl_StaticPackage_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_StaticPackage_TCL_DECLARED$/;"	d
Tcl_StringCaseMatch	/usr/include/tclDecls.h	/^#define Tcl_StringCaseMatch /;"	d
Tcl_StringCaseMatch	/usr/include/tclDecls.h	/^EXTERN int		Tcl_StringCaseMatch (CONST char * str, $/;"	p	signature:(CONST char * str, CONST char * pattern, int nocase)
Tcl_StringCaseMatch_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_StringCaseMatch_TCL_DECLARED$/;"	d
Tcl_StringMatch	/usr/include/tclDecls.h	/^#define Tcl_StringMatch /;"	d
Tcl_StringMatch	/usr/include/tclDecls.h	/^EXTERN int		Tcl_StringMatch (CONST char * str, $/;"	p	signature:(CONST char * str, CONST char * pattern)
Tcl_StringMatch_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_StringMatch_TCL_DECLARED$/;"	d
Tcl_SubstObj	/usr/include/tclDecls.h	/^#define Tcl_SubstObj /;"	d
Tcl_SubstObj	/usr/include/tclDecls.h	/^EXTERN Tcl_Obj *	Tcl_SubstObj (Tcl_Interp * interp, Tcl_Obj * objPtr, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, int flags)
Tcl_SubstObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_SubstObj_TCL_DECLARED$/;"	d
Tcl_TakeBignumFromObj	/usr/include/tclDecls.h	/^#define Tcl_TakeBignumFromObj /;"	d
Tcl_TakeBignumFromObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_TakeBignumFromObj (Tcl_Interp* interp, $/;"	p	signature:(Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value)
Tcl_TakeBignumFromObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TakeBignumFromObj_TCL_DECLARED$/;"	d
Tcl_TcpAcceptProc	/usr/include/tcl.h	/^typedef void (Tcl_TcpAcceptProc) _ANSI_ARGS_((ClientData callbackData,$/;"	t
Tcl_Tell	/usr/include/tclDecls.h	/^#define Tcl_Tell /;"	d
Tcl_Tell	/usr/include/tclDecls.h	/^EXTERN Tcl_WideInt	Tcl_Tell (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_TellOld	/usr/include/tclDecls.h	/^#define Tcl_TellOld /;"	d
Tcl_TellOld	/usr/include/tclDecls.h	/^EXTERN int		Tcl_TellOld (Tcl_Channel chan);$/;"	p	signature:(Tcl_Channel chan)
Tcl_TellOld_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TellOld_TCL_DECLARED$/;"	d
Tcl_Tell_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Tell_TCL_DECLARED$/;"	d
Tcl_ThreadAlert	/usr/include/tclDecls.h	/^#define Tcl_ThreadAlert /;"	d
Tcl_ThreadAlert	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ThreadAlert (Tcl_ThreadId threadId);$/;"	p	signature:(Tcl_ThreadId threadId)
Tcl_ThreadAlert_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ThreadAlert_TCL_DECLARED$/;"	d
Tcl_ThreadCreateProc	/usr/include/tcl.h	/^typedef unsigned (__stdcall Tcl_ThreadCreateProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_ThreadCreateProc	/usr/include/tcl.h	/^typedef void (Tcl_ThreadCreateProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_ThreadCreateType	/usr/include/tcl.h	/^#   define Tcl_ThreadCreateType	/;"	d
Tcl_ThreadDataKey	/usr/include/tcl.h	/^typedef struct Tcl_ThreadDataKey_ *Tcl_ThreadDataKey;$/;"	t	typeref:struct:Tcl_ThreadDataKey_
Tcl_ThreadId	/usr/include/tcl.h	/^typedef struct Tcl_ThreadId_ *Tcl_ThreadId;$/;"	t	typeref:struct:Tcl_ThreadId_
Tcl_ThreadQueueEvent	/usr/include/tclDecls.h	/^#define Tcl_ThreadQueueEvent /;"	d
Tcl_ThreadQueueEvent	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ThreadQueueEvent (Tcl_ThreadId threadId, $/;"	p	signature:(Tcl_ThreadId threadId, Tcl_Event* evPtr, Tcl_QueuePosition position)
Tcl_ThreadQueueEvent_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ThreadQueueEvent_TCL_DECLARED$/;"	d
Tcl_TildeSubst	/usr/include/tcl.h	/^#   define Tcl_TildeSubst	/;"	d
Tcl_Time	/usr/include/tcl.h	/^typedef struct Tcl_Time {$/;"	s
Tcl_Time	/usr/include/tcl.h	/^} Tcl_Time;$/;"	t	typeref:struct:Tcl_Time
Tcl_Time::sec	/usr/include/tcl.h	/^    long sec;			\/* Seconds. *\/$/;"	m	struct:Tcl_Time	access:public
Tcl_Time::usec	/usr/include/tcl.h	/^    long usec;			\/* Microseconds. *\/$/;"	m	struct:Tcl_Time	access:public
Tcl_TimerProc	/usr/include/tcl.h	/^typedef void (Tcl_TimerProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tcl_TimerToken	/usr/include/tcl.h	/^typedef struct Tcl_TimerToken_ *Tcl_TimerToken;$/;"	t	typeref:struct:Tcl_TimerToken_
Tcl_Token	/usr/include/tcl.h	/^typedef struct Tcl_Token {$/;"	s
Tcl_Token	/usr/include/tcl.h	/^} Tcl_Token;$/;"	t	typeref:struct:Tcl_Token
Tcl_Token::numComponents	/usr/include/tcl.h	/^    int numComponents;		\/* If this token is composed of other tokens,$/;"	m	struct:Tcl_Token	access:public
Tcl_Token::size	/usr/include/tcl.h	/^    int size;			\/* Number of bytes in token. *\/$/;"	m	struct:Tcl_Token	access:public
Tcl_Token::start	/usr/include/tcl.h	/^    CONST char *start;		\/* First character in token. *\/$/;"	m	struct:Tcl_Token	access:public
Tcl_Token::type	/usr/include/tcl.h	/^    int type;			\/* Type of token, such as TCL_TOKEN_WORD; see$/;"	m	struct:Tcl_Token	access:public
Tcl_TomMath_InitStubs	/usr/include/tclTomMathDecls.h	/^#define Tcl_TomMath_InitStubs(/;"	d
Tcl_Trace	/usr/include/tcl.h	/^typedef struct Tcl_Trace_ *Tcl_Trace;$/;"	t	typeref:struct:Tcl_Trace_
Tcl_TraceCommand	/usr/include/tclDecls.h	/^#define Tcl_TraceCommand /;"	d
Tcl_TraceCommand	/usr/include/tclDecls.h	/^EXTERN int		Tcl_TraceCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * proc, ClientData clientData)
Tcl_TraceCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TraceCommand_TCL_DECLARED$/;"	d
Tcl_TraceVar	/usr/include/tclDecls.h	/^#define Tcl_TraceVar /;"	d
Tcl_TraceVar	/usr/include/tclDecls.h	/^EXTERN int		Tcl_TraceVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * proc, ClientData clientData)
Tcl_TraceVar2	/usr/include/tclDecls.h	/^#define Tcl_TraceVar2 /;"	d
Tcl_TraceVar2	/usr/include/tclDecls.h	/^EXTERN int		Tcl_TraceVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * proc, ClientData clientData)
Tcl_TraceVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TraceVar2_TCL_DECLARED$/;"	d
Tcl_TraceVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TraceVar_TCL_DECLARED$/;"	d
Tcl_TranslateFileName	/usr/include/tclDecls.h	/^#define Tcl_TranslateFileName /;"	d
Tcl_TranslateFileName	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_TranslateFileName (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tcl_DString * bufferPtr)
Tcl_TranslateFileName_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TranslateFileName_TCL_DECLARED$/;"	d
Tcl_TruncateChannel	/usr/include/tclDecls.h	/^#define Tcl_TruncateChannel /;"	d
Tcl_TruncateChannel	/usr/include/tclDecls.h	/^EXTERN int		Tcl_TruncateChannel (Tcl_Channel chan, $/;"	p	signature:(Tcl_Channel chan, Tcl_WideInt length)
Tcl_TruncateChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_TruncateChannel_TCL_DECLARED$/;"	d
Tcl_Ungets	/usr/include/tclDecls.h	/^#define Tcl_Ungets /;"	d
Tcl_Ungets	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Ungets (Tcl_Channel chan, CONST char * str, $/;"	p	signature:(Tcl_Channel chan, CONST char * str, int len, int atHead)
Tcl_Ungets_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Ungets_TCL_DECLARED$/;"	d
Tcl_UniChar	/usr/include/tcl.h	/^typedef unsigned int Tcl_UniChar;$/;"	t
Tcl_UniChar	/usr/include/tcl.h	/^typedef unsigned short Tcl_UniChar;$/;"	t
Tcl_UniCharAtIndex	/usr/include/tclDecls.h	/^#define Tcl_UniCharAtIndex /;"	d
Tcl_UniCharAtIndex	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar	Tcl_UniCharAtIndex (CONST char * src, int index);$/;"	p	signature:(CONST char * src, int index)
Tcl_UniCharAtIndex_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharAtIndex_TCL_DECLARED$/;"	d
Tcl_UniCharCaseMatch	/usr/include/tclDecls.h	/^#define Tcl_UniCharCaseMatch /;"	d
Tcl_UniCharCaseMatch	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharCaseMatch (CONST Tcl_UniChar * uniStr, $/;"	p	signature:(CONST Tcl_UniChar * uniStr, CONST Tcl_UniChar * uniPattern, int nocase)
Tcl_UniCharCaseMatch_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharCaseMatch_TCL_DECLARED$/;"	d
Tcl_UniCharIsAlnum	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsAlnum /;"	d
Tcl_UniCharIsAlnum	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsAlnum (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsAlnum_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsAlnum_TCL_DECLARED$/;"	d
Tcl_UniCharIsAlpha	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsAlpha /;"	d
Tcl_UniCharIsAlpha	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsAlpha (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsAlpha_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsAlpha_TCL_DECLARED$/;"	d
Tcl_UniCharIsControl	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsControl /;"	d
Tcl_UniCharIsControl	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsControl (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsControl_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsControl_TCL_DECLARED$/;"	d
Tcl_UniCharIsDigit	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsDigit /;"	d
Tcl_UniCharIsDigit	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsDigit (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsDigit_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsDigit_TCL_DECLARED$/;"	d
Tcl_UniCharIsGraph	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsGraph /;"	d
Tcl_UniCharIsGraph	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsGraph (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsGraph_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsGraph_TCL_DECLARED$/;"	d
Tcl_UniCharIsLower	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsLower /;"	d
Tcl_UniCharIsLower	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsLower (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsLower_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsLower_TCL_DECLARED$/;"	d
Tcl_UniCharIsPrint	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsPrint /;"	d
Tcl_UniCharIsPrint	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsPrint (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsPrint_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsPrint_TCL_DECLARED$/;"	d
Tcl_UniCharIsPunct	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsPunct /;"	d
Tcl_UniCharIsPunct	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsPunct (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsPunct_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsPunct_TCL_DECLARED$/;"	d
Tcl_UniCharIsSpace	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsSpace /;"	d
Tcl_UniCharIsSpace	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsSpace (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsSpace_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsSpace_TCL_DECLARED$/;"	d
Tcl_UniCharIsUpper	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsUpper /;"	d
Tcl_UniCharIsUpper	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsUpper (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsUpper_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsUpper_TCL_DECLARED$/;"	d
Tcl_UniCharIsWordChar	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsWordChar /;"	d
Tcl_UniCharIsWordChar	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharIsWordChar (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharIsWordChar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharIsWordChar_TCL_DECLARED$/;"	d
Tcl_UniCharLen	/usr/include/tclDecls.h	/^#define Tcl_UniCharLen /;"	d
Tcl_UniCharLen	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharLen (CONST Tcl_UniChar * uniStr);$/;"	p	signature:(CONST Tcl_UniChar * uniStr)
Tcl_UniCharLen_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharLen_TCL_DECLARED$/;"	d
Tcl_UniCharNcasecmp	/usr/include/tclDecls.h	/^#define Tcl_UniCharNcasecmp /;"	d
Tcl_UniCharNcasecmp	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharNcasecmp (CONST Tcl_UniChar * ucs, $/;"	p	signature:(CONST Tcl_UniChar * ucs, CONST Tcl_UniChar * uct, unsigned long numChars)
Tcl_UniCharNcasecmp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharNcasecmp_TCL_DECLARED$/;"	d
Tcl_UniCharNcmp	/usr/include/tclDecls.h	/^#define Tcl_UniCharNcmp /;"	d
Tcl_UniCharNcmp	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharNcmp (CONST Tcl_UniChar * ucs, $/;"	p	signature:(CONST Tcl_UniChar * ucs, CONST Tcl_UniChar * uct, unsigned long numChars)
Tcl_UniCharNcmp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharNcmp_TCL_DECLARED$/;"	d
Tcl_UniCharToLower	/usr/include/tclDecls.h	/^#define Tcl_UniCharToLower /;"	d
Tcl_UniCharToLower	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar	Tcl_UniCharToLower (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharToLower_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharToLower_TCL_DECLARED$/;"	d
Tcl_UniCharToTitle	/usr/include/tclDecls.h	/^#define Tcl_UniCharToTitle /;"	d
Tcl_UniCharToTitle	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar	Tcl_UniCharToTitle (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharToTitle_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharToTitle_TCL_DECLARED$/;"	d
Tcl_UniCharToUpper	/usr/include/tclDecls.h	/^#define Tcl_UniCharToUpper /;"	d
Tcl_UniCharToUpper	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar	Tcl_UniCharToUpper (int ch);$/;"	p	signature:(int ch)
Tcl_UniCharToUpper_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharToUpper_TCL_DECLARED$/;"	d
Tcl_UniCharToUtf	/usr/include/tclDecls.h	/^#define Tcl_UniCharToUtf /;"	d
Tcl_UniCharToUtf	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UniCharToUtf (int ch, char * buf);$/;"	p	signature:(int ch, char * buf)
Tcl_UniCharToUtfDString	/usr/include/tclDecls.h	/^#define Tcl_UniCharToUtfDString /;"	d
Tcl_UniCharToUtfDString	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_UniCharToUtfDString (CONST Tcl_UniChar * uniStr, $/;"	p	signature:(CONST Tcl_UniChar * uniStr, int uniLength, Tcl_DString * dsPtr)
Tcl_UniCharToUtfDString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharToUtfDString_TCL_DECLARED$/;"	d
Tcl_UniCharToUtf_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UniCharToUtf_TCL_DECLARED$/;"	d
Tcl_UnlinkVar	/usr/include/tclDecls.h	/^#define Tcl_UnlinkVar /;"	d
Tcl_UnlinkVar	/usr/include/tclDecls.h	/^EXTERN void		Tcl_UnlinkVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName)
Tcl_UnlinkVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UnlinkVar_TCL_DECLARED$/;"	d
Tcl_UnregisterChannel	/usr/include/tclDecls.h	/^#define Tcl_UnregisterChannel /;"	d
Tcl_UnregisterChannel	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UnregisterChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Channel chan)
Tcl_UnregisterChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UnregisterChannel_TCL_DECLARED$/;"	d
Tcl_UnsetVar	/usr/include/tclDecls.h	/^#define Tcl_UnsetVar /;"	d
Tcl_UnsetVar	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UnsetVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags)
Tcl_UnsetVar2	/usr/include/tclDecls.h	/^#define Tcl_UnsetVar2 /;"	d
Tcl_UnsetVar2	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UnsetVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags)
Tcl_UnsetVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UnsetVar2_TCL_DECLARED$/;"	d
Tcl_UnsetVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UnsetVar_TCL_DECLARED$/;"	d
Tcl_UnstackChannel	/usr/include/tclDecls.h	/^#define Tcl_UnstackChannel /;"	d
Tcl_UnstackChannel	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UnstackChannel (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Channel chan)
Tcl_UnstackChannel_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UnstackChannel_TCL_DECLARED$/;"	d
Tcl_UntraceCommand	/usr/include/tclDecls.h	/^#define Tcl_UntraceCommand /;"	d
Tcl_UntraceCommand	/usr/include/tclDecls.h	/^EXTERN void		Tcl_UntraceCommand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * proc, ClientData clientData)
Tcl_UntraceCommand_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UntraceCommand_TCL_DECLARED$/;"	d
Tcl_UntraceVar	/usr/include/tclDecls.h	/^#define Tcl_UntraceVar /;"	d
Tcl_UntraceVar	/usr/include/tclDecls.h	/^EXTERN void		Tcl_UntraceVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * proc, ClientData clientData)
Tcl_UntraceVar2	/usr/include/tclDecls.h	/^#define Tcl_UntraceVar2 /;"	d
Tcl_UntraceVar2	/usr/include/tclDecls.h	/^EXTERN void		Tcl_UntraceVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * proc, ClientData clientData)
Tcl_UntraceVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UntraceVar2_TCL_DECLARED$/;"	d
Tcl_UntraceVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UntraceVar_TCL_DECLARED$/;"	d
Tcl_UpVar	/usr/include/tclDecls.h	/^#define Tcl_UpVar /;"	d
Tcl_UpVar	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UpVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * frameName, CONST char * varName, CONST char * localName, int flags)
Tcl_UpVar2	/usr/include/tclDecls.h	/^#define Tcl_UpVar2 /;"	d
Tcl_UpVar2	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UpVar2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * frameName, CONST char * part1, CONST char * part2, CONST char * localName, int flags)
Tcl_UpVar2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UpVar2_TCL_DECLARED$/;"	d
Tcl_UpVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UpVar_TCL_DECLARED$/;"	d
Tcl_UpdateLinkedVar	/usr/include/tclDecls.h	/^#define Tcl_UpdateLinkedVar /;"	d
Tcl_UpdateLinkedVar	/usr/include/tclDecls.h	/^EXTERN void		Tcl_UpdateLinkedVar (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName)
Tcl_UpdateLinkedVar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UpdateLinkedVar_TCL_DECLARED$/;"	d
Tcl_UpdateStringProc	/usr/include/tcl.h	/^typedef void (Tcl_UpdateStringProc) _ANSI_ARGS_((struct Tcl_Obj *objPtr));$/;"	t
Tcl_UtfAtIndex	/usr/include/tclDecls.h	/^#define Tcl_UtfAtIndex /;"	d
Tcl_UtfAtIndex	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_UtfAtIndex (CONST char * src, int index);$/;"	p	signature:(CONST char * src, int index)
Tcl_UtfAtIndex_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfAtIndex_TCL_DECLARED$/;"	d
Tcl_UtfBackslash	/usr/include/tclDecls.h	/^#define Tcl_UtfBackslash /;"	d
Tcl_UtfBackslash	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfBackslash (CONST char * src, int * readPtr, $/;"	p	signature:(CONST char * src, int * readPtr, char * dst)
Tcl_UtfBackslash_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfBackslash_TCL_DECLARED$/;"	d
Tcl_UtfCharComplete	/usr/include/tclDecls.h	/^#define Tcl_UtfCharComplete /;"	d
Tcl_UtfCharComplete	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfCharComplete (CONST char * src, int length);$/;"	p	signature:(CONST char * src, int length)
Tcl_UtfCharComplete_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfCharComplete_TCL_DECLARED$/;"	d
Tcl_UtfFindFirst	/usr/include/tclDecls.h	/^#define Tcl_UtfFindFirst /;"	d
Tcl_UtfFindFirst	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_UtfFindFirst (CONST char * src, int ch);$/;"	p	signature:(CONST char * src, int ch)
Tcl_UtfFindFirst_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfFindFirst_TCL_DECLARED$/;"	d
Tcl_UtfFindLast	/usr/include/tclDecls.h	/^#define Tcl_UtfFindLast /;"	d
Tcl_UtfFindLast	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_UtfFindLast (CONST char * src, int ch);$/;"	p	signature:(CONST char * src, int ch)
Tcl_UtfFindLast_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfFindLast_TCL_DECLARED$/;"	d
Tcl_UtfNcasecmp	/usr/include/tclDecls.h	/^#define Tcl_UtfNcasecmp /;"	d
Tcl_UtfNcasecmp	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfNcasecmp (CONST char * s1, CONST char * s2, $/;"	p	signature:(CONST char * s1, CONST char * s2, unsigned long n)
Tcl_UtfNcasecmp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfNcasecmp_TCL_DECLARED$/;"	d
Tcl_UtfNcmp	/usr/include/tclDecls.h	/^#define Tcl_UtfNcmp /;"	d
Tcl_UtfNcmp	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfNcmp (CONST char * s1, CONST char * s2, $/;"	p	signature:(CONST char * s1, CONST char * s2, unsigned long n)
Tcl_UtfNcmp_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfNcmp_TCL_DECLARED$/;"	d
Tcl_UtfNext	/usr/include/tclDecls.h	/^#define Tcl_UtfNext /;"	d
Tcl_UtfNext	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_UtfNext (CONST char * src);$/;"	p	signature:(CONST char * src)
Tcl_UtfNext_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfNext_TCL_DECLARED$/;"	d
Tcl_UtfPrev	/usr/include/tclDecls.h	/^#define Tcl_UtfPrev /;"	d
Tcl_UtfPrev	/usr/include/tclDecls.h	/^EXTERN CONST84_RETURN char * Tcl_UtfPrev (CONST char * src, $/;"	p	signature:(CONST char * src, CONST char * start)
Tcl_UtfPrev_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfPrev_TCL_DECLARED$/;"	d
Tcl_UtfToExternal	/usr/include/tclDecls.h	/^#define Tcl_UtfToExternal /;"	d
Tcl_UtfToExternal	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfToExternal (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Encoding encoding, CONST char * src, int srcLen, int flags, Tcl_EncodingState * statePtr, char * dst, int dstLen, int * srcReadPtr, int * dstWrotePtr, int * dstCharsPtr)
Tcl_UtfToExternalDString	/usr/include/tclDecls.h	/^#define Tcl_UtfToExternalDString /;"	d
Tcl_UtfToExternalDString	/usr/include/tclDecls.h	/^EXTERN char *		Tcl_UtfToExternalDString (Tcl_Encoding encoding, $/;"	p	signature:(Tcl_Encoding encoding, CONST char * src, int srcLen, Tcl_DString * dsPtr)
Tcl_UtfToExternalDString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToExternalDString_TCL_DECLARED$/;"	d
Tcl_UtfToExternal_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToExternal_TCL_DECLARED$/;"	d
Tcl_UtfToLower	/usr/include/tclDecls.h	/^#define Tcl_UtfToLower /;"	d
Tcl_UtfToLower	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfToLower (char * src);$/;"	p	signature:(char * src)
Tcl_UtfToLower_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToLower_TCL_DECLARED$/;"	d
Tcl_UtfToTitle	/usr/include/tclDecls.h	/^#define Tcl_UtfToTitle /;"	d
Tcl_UtfToTitle	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfToTitle (char * src);$/;"	p	signature:(char * src)
Tcl_UtfToTitle_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToTitle_TCL_DECLARED$/;"	d
Tcl_UtfToUniChar	/usr/include/tclDecls.h	/^#define Tcl_UtfToUniChar /;"	d
Tcl_UtfToUniChar	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfToUniChar (CONST char * src, $/;"	p	signature:(CONST char * src, Tcl_UniChar * chPtr)
Tcl_UtfToUniCharDString	/usr/include/tclDecls.h	/^#define Tcl_UtfToUniCharDString /;"	d
Tcl_UtfToUniCharDString	/usr/include/tclDecls.h	/^EXTERN Tcl_UniChar *	Tcl_UtfToUniCharDString (CONST char * src, $/;"	p	signature:(CONST char * src, int length, Tcl_DString * dsPtr)
Tcl_UtfToUniCharDString_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToUniCharDString_TCL_DECLARED$/;"	d
Tcl_UtfToUniChar_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToUniChar_TCL_DECLARED$/;"	d
Tcl_UtfToUpper	/usr/include/tclDecls.h	/^#define Tcl_UtfToUpper /;"	d
Tcl_UtfToUpper	/usr/include/tclDecls.h	/^EXTERN int		Tcl_UtfToUpper (char * src);$/;"	p	signature:(char * src)
Tcl_UtfToUpper_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_UtfToUpper_TCL_DECLARED$/;"	d
Tcl_ValidateAllMemory	/usr/include/tcl.h	/^#   define Tcl_ValidateAllMemory(/;"	d
Tcl_ValidateAllMemory	/usr/include/tcl.h	/^#   undef  Tcl_ValidateAllMemory$/;"	d
Tcl_ValidateAllMemory	/usr/include/tclDecls.h	/^#define Tcl_ValidateAllMemory /;"	d
Tcl_ValidateAllMemory	/usr/include/tclDecls.h	/^EXTERN void		Tcl_ValidateAllMemory (CONST char * file, int line);$/;"	p	signature:(CONST char * file, int line)
Tcl_ValidateAllMemory_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_ValidateAllMemory_TCL_DECLARED$/;"	d
Tcl_Value	/usr/include/tcl.h	/^typedef struct Tcl_Value {$/;"	s
Tcl_Value	/usr/include/tcl.h	/^} Tcl_Value;$/;"	t	typeref:struct:Tcl_Value
Tcl_Value::doubleValue	/usr/include/tcl.h	/^    double doubleValue;		\/* Double-precision floating value. *\/$/;"	m	struct:Tcl_Value	access:public
Tcl_Value::intValue	/usr/include/tcl.h	/^    long intValue;		\/* Integer value. *\/$/;"	m	struct:Tcl_Value	access:public
Tcl_Value::type	/usr/include/tcl.h	/^    Tcl_ValueType type;		\/* Indicates intValue or doubleValue is valid,$/;"	m	struct:Tcl_Value	access:public
Tcl_Value::wideValue	/usr/include/tcl.h	/^    Tcl_WideInt wideValue;	\/* Wide (min. 64-bit) integer value. *\/$/;"	m	struct:Tcl_Value	access:public
Tcl_ValueType	/usr/include/tcl.h	/^} Tcl_ValueType;$/;"	t	typeref:enum:__anon113
Tcl_Var	/usr/include/tcl.h	/^typedef struct Tcl_Var_ *Tcl_Var;$/;"	t	typeref:struct:Tcl_Var_
Tcl_VarEval	/usr/include/tclDecls.h	/^#define Tcl_VarEval /;"	d
Tcl_VarEval	/usr/include/tclDecls.h	/^EXTERN int		Tcl_VarEval (Tcl_Interp * interp, ...);$/;"	p	signature:(Tcl_Interp * interp, ...)
Tcl_VarEvalVA	/usr/include/tclDecls.h	/^#define Tcl_VarEvalVA /;"	d
Tcl_VarEvalVA	/usr/include/tclDecls.h	/^EXTERN int		Tcl_VarEvalVA (Tcl_Interp * interp, va_list argList);$/;"	p	signature:(Tcl_Interp * interp, va_list argList)
Tcl_VarEvalVA_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_VarEvalVA_TCL_DECLARED$/;"	d
Tcl_VarEval_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_VarEval_TCL_DECLARED$/;"	d
Tcl_VarTraceInfo	/usr/include/tclDecls.h	/^#define Tcl_VarTraceInfo /;"	d
Tcl_VarTraceInfo	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_VarTraceInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * procPtr, ClientData prevClientData)
Tcl_VarTraceInfo2	/usr/include/tclDecls.h	/^#define Tcl_VarTraceInfo2 /;"	d
Tcl_VarTraceInfo2	/usr/include/tclDecls.h	/^EXTERN ClientData	Tcl_VarTraceInfo2 (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * procPtr, ClientData prevClientData)
Tcl_VarTraceInfo2_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_VarTraceInfo2_TCL_DECLARED$/;"	d
Tcl_VarTraceInfo_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_VarTraceInfo_TCL_DECLARED$/;"	d
Tcl_VarTraceProc	/usr/include/tcl.h	/^typedef char *(Tcl_VarTraceProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tcl_WaitForEvent	/usr/include/tclDecls.h	/^#define Tcl_WaitForEvent /;"	d
Tcl_WaitForEvent	/usr/include/tclDecls.h	/^EXTERN int		Tcl_WaitForEvent (Tcl_Time * timePtr);$/;"	p	signature:(Tcl_Time * timePtr)
Tcl_WaitForEventProc	/usr/include/tcl.h	/^typedef int (Tcl_WaitForEventProc) _ANSI_ARGS_((Tcl_Time *timePtr));$/;"	t
Tcl_WaitForEvent_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_WaitForEvent_TCL_DECLARED$/;"	d
Tcl_WaitPid	/usr/include/tclDecls.h	/^#define Tcl_WaitPid /;"	d
Tcl_WaitPid	/usr/include/tclDecls.h	/^EXTERN Tcl_Pid		Tcl_WaitPid (Tcl_Pid pid, int * statPtr, int options);$/;"	p	signature:(Tcl_Pid pid, int * statPtr, int options)
Tcl_WaitPid_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_WaitPid_TCL_DECLARED$/;"	d
Tcl_WideAsDouble	/usr/include/tcl.h	/^#   define Tcl_WideAsDouble(/;"	d
Tcl_WideAsLong	/usr/include/tcl.h	/^#   define Tcl_WideAsLong(/;"	d
Tcl_WideInt	/usr/include/tcl.h	/^typedef TCL_WIDE_INT_TYPE		Tcl_WideInt;$/;"	t
Tcl_WideUInt	/usr/include/tcl.h	/^typedef unsigned TCL_WIDE_INT_TYPE	Tcl_WideUInt;$/;"	t
Tcl_WinTCharToUtf	/usr/include/tclPlatDecls.h	/^#define Tcl_WinTCharToUtf /;"	d
Tcl_WinTCharToUtf	/usr/include/tclPlatDecls.h	/^EXTERN char *		Tcl_WinTCharToUtf (CONST TCHAR * str, int len, $/;"	p	signature:(CONST TCHAR * str, int len, Tcl_DString * dsPtr)
Tcl_WinTCharToUtf_TCL_DECLARED	/usr/include/tclPlatDecls.h	/^#define Tcl_WinTCharToUtf_TCL_DECLARED$/;"	d
Tcl_WinUtfToTChar	/usr/include/tclPlatDecls.h	/^#define Tcl_WinUtfToTChar /;"	d
Tcl_WinUtfToTChar	/usr/include/tclPlatDecls.h	/^EXTERN TCHAR *		Tcl_WinUtfToTChar (CONST char * str, int len, $/;"	p	signature:(CONST char * str, int len, Tcl_DString * dsPtr)
Tcl_WinUtfToTChar_TCL_DECLARED	/usr/include/tclPlatDecls.h	/^#define Tcl_WinUtfToTChar_TCL_DECLARED$/;"	d
Tcl_Write	/usr/include/tclDecls.h	/^#define Tcl_Write /;"	d
Tcl_Write	/usr/include/tclDecls.h	/^EXTERN int		Tcl_Write (Tcl_Channel chan, CONST char * s, $/;"	p	signature:(Tcl_Channel chan, CONST char * s, int slen)
Tcl_WriteChars	/usr/include/tclDecls.h	/^#define Tcl_WriteChars /;"	d
Tcl_WriteChars	/usr/include/tclDecls.h	/^EXTERN int		Tcl_WriteChars (Tcl_Channel chan, CONST char * src, $/;"	p	signature:(Tcl_Channel chan, CONST char * src, int srcLen)
Tcl_WriteChars_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_WriteChars_TCL_DECLARED$/;"	d
Tcl_WriteObj	/usr/include/tclDecls.h	/^#define Tcl_WriteObj /;"	d
Tcl_WriteObj	/usr/include/tclDecls.h	/^EXTERN int		Tcl_WriteObj (Tcl_Channel chan, Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Channel chan, Tcl_Obj * objPtr)
Tcl_WriteObj_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_WriteObj_TCL_DECLARED$/;"	d
Tcl_WriteRaw	/usr/include/tclDecls.h	/^#define Tcl_WriteRaw /;"	d
Tcl_WriteRaw	/usr/include/tclDecls.h	/^EXTERN int		Tcl_WriteRaw (Tcl_Channel chan, CONST char * src, $/;"	p	signature:(Tcl_Channel chan, CONST char * src, int srcLen)
Tcl_WriteRaw_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_WriteRaw_TCL_DECLARED$/;"	d
Tcl_Write_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_Write_TCL_DECLARED$/;"	d
Tcl_WrongNumArgs	/usr/include/tclDecls.h	/^#define Tcl_WrongNumArgs /;"	d
Tcl_WrongNumArgs	/usr/include/tclDecls.h	/^EXTERN void		Tcl_WrongNumArgs (Tcl_Interp * interp, int objc, $/;"	p	signature:(Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], CONST char * message)
Tcl_WrongNumArgs_TCL_DECLARED	/usr/include/tclDecls.h	/^#define Tcl_WrongNumArgs_TCL_DECLARED$/;"	d
TkGenWMConfigureEvent	/usr/include/tkPlatDecls.h	/^#define TkGenWMConfigureEvent /;"	d
TkGenWMConfigureEvent	/usr/include/tkPlatDecls.h	/^EXTERN void		TkGenWMConfigureEvent (Tk_Window tkwin, int x, int y, $/;"	p	signature:(Tk_Window tkwin, int x, int y, int width, int height, int flags)
TkGenWMConfigureEvent_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define TkGenWMConfigureEvent_TCL_DECLARED$/;"	d
TkIntXlibStubs	/usr/include/tkIntXlibDecls.h	/^typedef struct TkIntXlibStubs {$/;"	s
TkIntXlibStubs	/usr/include/tkIntXlibDecls.h	/^} TkIntXlibStubs;$/;"	t	typeref:struct:TkIntXlibStubs
TkIntXlibStubs::_XInitImageFuncPtrs	/usr/include/tkIntXlibDecls.h	/^    int (*_XInitImageFuncPtrs) (XImage * image); \/* 75 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::_XInitImageFuncPtrs	/usr/include/tkIntXlibDecls.h	/^    int (*_XInitImageFuncPtrs) (XImage * image); \/* 99 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::hooks	/usr/include/tkIntXlibDecls.h	/^    struct TkIntXlibStubHooks *hooks;$/;"	m	struct:TkIntXlibStubs	typeref:struct:TkIntXlibStubs::TkIntXlibStubHooks	access:public
TkIntXlibStubs::magic	/usr/include/tkIntXlibDecls.h	/^    int magic;$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::reserved81	/usr/include/tkIntXlibDecls.h	/^    void *reserved81;$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::tkPutImage	/usr/include/tkIntXlibDecls.h	/^    void (*tkPutImage) (unsigned long * colors, int ncolors, Display * display, Drawable d, GC gc, XImage * image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height); \/* 57 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::tkPutImage	/usr/include/tkIntXlibDecls.h	/^    void (*tkPutImage) (unsigned long * colors, int ncolors, Display * display, Drawable d, GC gc, XImage * image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height); \/* 80 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xAllocColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xAllocColor) (Display * d, Colormap c, XColor * xp); \/* 12 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xAllocColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xAllocColor) (Display * d, Colormap c, XColor * xp); \/* 18 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xBell	/usr/include/tkIntXlibDecls.h	/^    void (*xBell) (Display * d, int i); \/* 13 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xBell	/usr/include/tkIntXlibDecls.h	/^    void (*xBell) (Display * d, int i); \/* 19 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xChangeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeGC) (Display * d, GC gc, unsigned long mask, XGCValues * values); \/* 67 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xChangeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeGC) (Display * d, GC gc, unsigned long mask, XGCValues * values); \/* 91 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xChangeProperty	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeProperty) (Display * d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char * c, int i3); \/* 14 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xChangeProperty	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeProperty) (Display * d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char * c, int i3); \/* 20 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xChangeWindowAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeWindowAttributes) (Display * d, Window w, unsigned long ul, XSetWindowAttributes * x); \/* 15 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xChangeWindowAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeWindowAttributes) (Display * d, Window w, unsigned long ul, XSetWindowAttributes * x); \/* 21 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xClearWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xClearWindow) (Display * d, Window w); \/* 22 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xClearWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xClearWindow) (Display * d, Window w); \/* 84 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xConfigureWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xConfigureWindow) (Display * d, Window w, unsigned int i, XWindowChanges * x); \/* 16 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xConfigureWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xConfigureWindow) (Display * d, Window w, unsigned int i, XWindowChanges * x); \/* 23 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCopyArea	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyArea) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 17 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCopyArea	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyArea) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 24 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCopyPlane	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyPlane) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul); \/* 18 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCopyPlane	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyPlane) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul); \/* 25 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateBitmapFromData	/usr/include/tkIntXlibDecls.h	/^    Pixmap (*xCreateBitmapFromData) (Display * display, Drawable d, _Xconst char * data, unsigned int width, unsigned int height); \/* 19 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateBitmapFromData	/usr/include/tkIntXlibDecls.h	/^    Pixmap (*xCreateBitmapFromData) (Display * display, Drawable d, _Xconst char * data, unsigned int width, unsigned int height); \/* 26 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateColormap	/usr/include/tkIntXlibDecls.h	/^    Colormap (*xCreateColormap) (Display * d, Window w, Visual * v, int i); \/* 6 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateGC	/usr/include/tkIntXlibDecls.h	/^    GC (*xCreateGC) (Display * display, Drawable d, unsigned long valuemask, XGCValues * values); \/* 59 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateGC	/usr/include/tkIntXlibDecls.h	/^    GC (*xCreateGC) (Display * display, Drawable d, unsigned long valuemask, XGCValues * values); \/* 83 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateGlyphCursor	/usr/include/tkIntXlibDecls.h	/^    Cursor (*xCreateGlyphCursor) (Display * d, Font f1, Font f2, unsigned int ui1, unsigned int ui2, XColor * x1, XColor * x2); \/* 8 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateIC	/usr/include/tkIntXlibDecls.h	/^    XIC (*xCreateIC) (void); \/* 100 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateIC	/usr/include/tkIntXlibDecls.h	/^    XIC (*xCreateIC) (void); \/* 76 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreateImage	/usr/include/tkIntXlibDecls.h	/^    XImage * (*xCreateImage) (Display * d, Visual * v, unsigned int ui1, int i1, int i2, char * cp, unsigned int ui2, unsigned int ui3, int i3, int i4); \/* 2 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xCreatePixmapCursor	/usr/include/tkIntXlibDecls.h	/^    Cursor (*xCreatePixmapCursor) (Display * d, Pixmap p1, Pixmap p2, XColor * x1, XColor * x2, unsigned int ui1, unsigned int ui2); \/* 7 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDefineCursor	/usr/include/tkIntXlibDecls.h	/^    void (*xDefineCursor) (Display * d, Window w, Cursor c); \/* 20 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDefineCursor	/usr/include/tkIntXlibDecls.h	/^    void (*xDefineCursor) (Display * d, Window w, Cursor c); \/* 27 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDeleteProperty	/usr/include/tkIntXlibDecls.h	/^    void (*xDeleteProperty) (Display * d, Window w, Atom a); \/* 28 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDestroyIC	/usr/include/tkIntXlibDecls.h	/^    void (*xDestroyIC) (XIC x); \/* 77 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDestroyWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xDestroyWindow) (Display * d, Window w); \/* 21 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDestroyWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xDestroyWindow) (Display * d, Window w); \/* 29 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawArc	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 22 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawArc	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 30 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawLine	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLine) (Display * d, Drawable dr, GC g, int x1, int y1, int x2, int y2); \/* 104 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawLine	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLine) (Display * d, Drawable dr, GC g, int x1, int y1, int x2, int y2); \/* 82 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawLines	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLines) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2); \/* 23 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawLines	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLines) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2); \/* 31 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawPoint	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawPoint) (Display * display, Drawable d, GC gc, int x, int y); \/* 85 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawPoints	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawPoints) (Display * display, Drawable d, GC gc, XPoint * points, int npoints, int mode); \/* 86 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawRectangle) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 24 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawRectangle) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 32 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xDrawSegments	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawSegments) (Display * display, Drawable d, GC gc, XSegment * segments, int nsegments); \/* 80 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillArc	/usr/include/tkIntXlibDecls.h	/^    void (*xFillArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 25 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillArc	/usr/include/tkIntXlibDecls.h	/^    void (*xFillArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 33 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillPolygon	/usr/include/tkIntXlibDecls.h	/^    void (*xFillPolygon) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2, int i3); \/* 26 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillPolygon	/usr/include/tkIntXlibDecls.h	/^    void (*xFillPolygon) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2, int i3); \/* 34 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangle) (Display * display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height); \/* 106 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangle) (Display * display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height); \/* 83 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillRectangles	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangles) (Display * d, Drawable dr, GC g, XRectangle * x, int i); \/* 27 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFillRectangles	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangles) (Display * d, Drawable dr, GC g, XRectangle * x, int i); \/* 35 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFilterEvent	/usr/include/tkIntXlibDecls.h	/^    Bool (*xFilterEvent) (XEvent * x, Window w); \/* 78 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^    void (*xForceScreenSaver) (Display * d, int i); \/* 36 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^    void (*xForceScreenSaver) (Display * display, int mode); \/* 81 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColormap) (Display * d, Colormap c); \/* 28 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColormap) (Display * d, Colormap c); \/* 37 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeColors	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColors) (Display * d, Colormap c, unsigned long * ulp, int i, unsigned long ul); \/* 29 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeColors	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColors) (Display * d, Colormap c, unsigned long * ulp, int i, unsigned long ul); \/* 38 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeCursor	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeCursor) (Display * d, Cursor c); \/* 39 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeGC) (Display * display, GC gc); \/* 60 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeGC) (Display * display, GC gc); \/* 84 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeModifiermap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeModifiermap) (XModifierKeymap * x); \/* 30 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xFreeModifiermap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeModifiermap) (XModifierKeymap * x); \/* 40 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGContextFromGC	/usr/include/tkIntXlibDecls.h	/^    GContext (*xGContextFromGC) (GC g); \/* 7 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGContextFromGC	/usr/include/tkIntXlibDecls.h	/^    GContext (*xGContextFromGC) (GC g); \/* 9 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetAtomName	/usr/include/tkIntXlibDecls.h	/^    char * (*xGetAtomName) (Display * d, Atom a); \/* 4 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetGeometry	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetGeometry) (Display * d, Drawable dr, Window * w, int * i1, int * i2, unsigned int * ui1, unsigned int * ui2, unsigned int * ui3, unsigned int * ui4); \/* 31 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetGeometry	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetGeometry) (Display * d, Drawable dr, Window * w, int * i1, int * i2, unsigned int * ui1, unsigned int * ui2, unsigned int * ui3, unsigned int * ui4); \/* 41 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetImage	/usr/include/tkIntXlibDecls.h	/^    XImage * (*xGetImage) (Display * d, Drawable dr, int i1, int i2, unsigned int ui1, unsigned int ui2, unsigned long ul, int i3); \/* 3 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetInputFocus	/usr/include/tkIntXlibDecls.h	/^    void (*xGetInputFocus) (Display * d, Window * w, int * i); \/* 42 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetModifierMapping	/usr/include/tkIntXlibDecls.h	/^    XModifierKeymap * (*xGetModifierMapping) (Display * d); \/* 1 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetVisualInfo	/usr/include/tkIntXlibDecls.h	/^    XVisualInfo * (*xGetVisualInfo) (Display * display, long vinfo_mask, XVisualInfo * vinfo_template, int * nitems_return); \/* 101 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetVisualInfo	/usr/include/tkIntXlibDecls.h	/^    XVisualInfo * (*xGetVisualInfo) (Display * display, long vinfo_mask, XVisualInfo * vinfo_template, int * nitems_return); \/* 77 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetWMColormapWindows	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetWMColormapWindows) (Display * d, Window w, Window ** wpp, int * ip); \/* 17 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetWindowAttributes	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetWindowAttributes) (Display * d, Window w, XWindowAttributes * x); \/* 44 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetWindowProperty	/usr/include/tkIntXlibDecls.h	/^    int (*xGetWindowProperty) (Display * d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom * ap, int * ip, unsigned long * ulp1, unsigned long * ulp2, unsigned char ** cpp); \/* 32 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGetWindowProperty	/usr/include/tkIntXlibDecls.h	/^    int (*xGetWindowProperty) (Display * d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom * ap, int * ip, unsigned long * ulp1, unsigned long * ulp2, unsigned char ** cpp); \/* 43 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabKeyboard) (Display * d, Window w, Bool b, int i1, int i2, Time t); \/* 33 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabKeyboard) (Display * d, Window w, Bool b, int i1, int i2, Time t); \/* 45 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGrabPointer	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabPointer) (Display * d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t); \/* 34 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xGrabPointer	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabPointer) (Display * d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t); \/* 46 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xIconifyWindow	/usr/include/tkIntXlibDecls.h	/^    Status (*xIconifyWindow) (Display * d, Window w, int i); \/* 15 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xInternAtom	/usr/include/tkIntXlibDecls.h	/^    Atom (*xInternAtom) (Display * display, _Xconst char * atom_name, Bool only_if_exists); \/* 61 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xInternAtom	/usr/include/tkIntXlibDecls.h	/^    Atom (*xInternAtom) (Display * display, _Xconst char * atom_name, Bool only_if_exists); \/* 85 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xKeycodeToKeysym) (Display * d, KeyCode k, int i); \/* 8 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xKeycodeToKeysym) (Display * d, unsigned int k, int i); \/* 11 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xKeysymToKeycode	/usr/include/tkIntXlibDecls.h	/^    KeyCode (*xKeysymToKeycode) (Display * d, KeySym k); \/* 35 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xKeysymToKeycode	/usr/include/tkIntXlibDecls.h	/^    KeyCode (*xKeysymToKeycode) (Display * d, KeySym k); \/* 47 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xKeysymToString	/usr/include/tkIntXlibDecls.h	/^    char * (*xKeysymToString) (KeySym k); \/* 5 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xListHosts	/usr/include/tkIntXlibDecls.h	/^    XHostAddress * (*xListHosts) (Display * d, int * i, Bool * b); \/* 10 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xLookupColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xLookupColor) (Display * d, Colormap c1, _Xconst char * c2, XColor * x1, XColor * x2); \/* 48 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xMapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMapWindow) (Display * d, Window w); \/* 36 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xMapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMapWindow) (Display * d, Window w); \/* 49 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xMoveResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveResizeWindow) (Display * d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 37 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xMoveResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveResizeWindow) (Display * d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 50 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xMoveWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveWindow) (Display * d, Window w, int i1, int i2); \/* 38 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xMoveWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveWindow) (Display * d, Window w, int i1, int i2); \/* 51 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xNextEvent	/usr/include/tkIntXlibDecls.h	/^    void (*xNextEvent) (Display * d, XEvent * x); \/* 52 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xParseColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xParseColor) (Display * display, Colormap map, _Xconst char * spec, XColor * colorPtr); \/* 58 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xParseColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xParseColor) (Display * display, Colormap map, _Xconst char * spec, XColor * colorPtr); \/* 82 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xPutBackEvent	/usr/include/tkIntXlibDecls.h	/^    void (*xPutBackEvent) (Display * d, XEvent * x); \/* 53 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryColor	/usr/include/tkIntXlibDecls.h	/^    void (*xQueryColor) (Display * display, Colormap colormap, XColor * def_in_out); \/* 88 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryColors	/usr/include/tkIntXlibDecls.h	/^    void (*xQueryColors) (Display * d, Colormap c, XColor * x, int i); \/* 54 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryColors	/usr/include/tkIntXlibDecls.h	/^    void (*xQueryColors) (Display * display, Colormap colormap, XColor * defs_in_out, int ncolors); \/* 89 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryPointer	/usr/include/tkIntXlibDecls.h	/^    Bool (*xQueryPointer) (Display * d, Window w1, Window * w2, Window * w3, int * i1, int * i2, int * i3, int * i4, unsigned int * ui); \/* 39 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryPointer	/usr/include/tkIntXlibDecls.h	/^    Bool (*xQueryPointer) (Display * d, Window w1, Window * w2, Window * w3, int * i1, int * i2, int * i3, int * i4, unsigned int * ui); \/* 55 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryTree	/usr/include/tkIntXlibDecls.h	/^    Status (*xQueryTree) (Display * d, Window w1, Window * w2, Window * w3, Window ** w4, unsigned int * ui); \/* 56 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xQueryTree	/usr/include/tkIntXlibDecls.h	/^    Status (*xQueryTree) (Display * d, Window w1, Window * w2, Window * w3, Window ** w4, unsigned int * ui); \/* 90 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xRaiseWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xRaiseWindow) (Display * d, Window w); \/* 40 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xRaiseWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xRaiseWindow) (Display * d, Window w); \/* 57 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xRefreshKeyboardMapping	/usr/include/tkIntXlibDecls.h	/^    void (*xRefreshKeyboardMapping) (XMappingEvent * x); \/* 41 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xRefreshKeyboardMapping	/usr/include/tkIntXlibDecls.h	/^    void (*xRefreshKeyboardMapping) (XMappingEvent * x); \/* 58 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xResizeWindow) (Display * d, Window w, unsigned int ui1, unsigned int ui2); \/* 42 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xResizeWindow) (Display * d, Window w, unsigned int ui1, unsigned int ui2); \/* 59 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xRootWindow	/usr/include/tkIntXlibDecls.h	/^    Window (*xRootWindow) (Display * d, int i); \/* 10 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xRootWindow	/usr/include/tkIntXlibDecls.h	/^    Window (*xRootWindow) (Display * d, int i); \/* 13 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSelectInput	/usr/include/tkIntXlibDecls.h	/^    void (*xSelectInput) (Display * d, Window w, long l); \/* 43 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSelectInput	/usr/include/tkIntXlibDecls.h	/^    void (*xSelectInput) (Display * d, Window w, long l); \/* 60 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSendEvent	/usr/include/tkIntXlibDecls.h	/^    Status (*xSendEvent) (Display * d, Window w, Bool b, long l, XEvent * x); \/* 44 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSendEvent	/usr/include/tkIntXlibDecls.h	/^    Status (*xSendEvent) (Display * d, Window w, Bool b, long l, XEvent * x); \/* 61 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetArcMode	/usr/include/tkIntXlibDecls.h	/^    void (*xSetArcMode) (Display * display, GC gc, int arc_mode); \/* 69 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetArcMode	/usr/include/tkIntXlibDecls.h	/^    void (*xSetArcMode) (Display * display, GC gc, int arc_mode); \/* 93 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetBackground) (Display * display, GC gc, unsigned long foreground); \/* 62 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetBackground) (Display * display, GC gc, unsigned long foreground); \/* 86 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetClipMask	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipMask) (Display * display, GC gc, Pixmap pixmap); \/* 64 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetClipMask	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipMask) (Display * display, GC gc, Pixmap pixmap); \/* 88 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetClipOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipOrigin) (Display * display, GC gc, int clip_x_origin, int clip_y_origin); \/* 65 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetClipOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipOrigin) (Display * display, GC gc, int clip_x_origin, int clip_y_origin); \/* 89 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetCommand	/usr/include/tkIntXlibDecls.h	/^    void (*xSetCommand) (Display * d, Window w, CONST char ** c, int i); \/* 62 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetDashes	/usr/include/tkIntXlibDecls.h	/^    void (*xSetDashes) (Display * display, GC gc, int dash_offset, _Xconst char * dash_list, int n); \/* 0 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetErrorHandler	/usr/include/tkIntXlibDecls.h	/^    XErrorHandler (*xSetErrorHandler) (XErrorHandler x); \/* 11 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetErrorHandler	/usr/include/tkIntXlibDecls.h	/^    XErrorHandler (*xSetErrorHandler) (XErrorHandler x); \/* 14 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFillRule	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillRule) (Display * display, GC gc, int fill_rule); \/* 71 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFillRule	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillRule) (Display * display, GC gc, int fill_rule); \/* 95 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFillStyle	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillStyle) (Display * display, GC gc, int fill_style); \/* 72 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFillStyle	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillStyle) (Display * display, GC gc, int fill_style); \/* 96 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFont	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFont) (Display * display, GC gc, Font font); \/* 68 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFont	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFont) (Display * display, GC gc, Font font); \/* 92 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetForeground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetForeground) (Display * display, GC gc, unsigned long foreground); \/* 63 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetForeground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetForeground) (Display * display, GC gc, unsigned long foreground); \/* 87 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFunction	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFunction) (Display * display, GC gc, int function); \/* 73 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetFunction	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFunction) (Display * display, GC gc, int function); \/* 97 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetIconName	/usr/include/tkIntXlibDecls.h	/^    void (*xSetIconName) (Display * d, Window w, _Xconst char * c); \/* 45 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetIconName	/usr/include/tkIntXlibDecls.h	/^    void (*xSetIconName) (Display * d, Window w, _Xconst char * c); \/* 63 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetInputFocus	/usr/include/tkIntXlibDecls.h	/^    void (*xSetInputFocus) (Display * d, Window w, int i, Time t); \/* 46 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetInputFocus	/usr/include/tkIntXlibDecls.h	/^    void (*xSetInputFocus) (Display * d, Window w, int i, Time t); \/* 64 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetLineAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xSetLineAttributes) (Display * display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style); \/* 74 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetLineAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xSetLineAttributes) (Display * display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style); \/* 98 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetSelectionOwner	/usr/include/tkIntXlibDecls.h	/^    void (*xSetSelectionOwner) (Display * d, Atom a, Window w, Time t); \/* 47 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetSelectionOwner	/usr/include/tkIntXlibDecls.h	/^    void (*xSetSelectionOwner) (Display * d, Atom a, Window w, Time t); \/* 65 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetStipple	/usr/include/tkIntXlibDecls.h	/^    void (*xSetStipple) (Display * display, GC gc, Pixmap stipple); \/* 70 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetStipple	/usr/include/tkIntXlibDecls.h	/^    void (*xSetStipple) (Display * display, GC gc, Pixmap stipple); \/* 94 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetTSOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetTSOrigin) (Display * display, GC gc, int ts_x_origin, int ts_y_origin); \/* 66 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetTSOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetTSOrigin) (Display * display, GC gc, int ts_x_origin, int ts_y_origin); \/* 90 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWMClientMachine	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWMClientMachine) (Display * display, Window w, XTextProperty * text_prop); \/* 102 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWMClientMachine	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWMClientMachine) (Display * display, Window w, XTextProperty * text_prop); \/* 78 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackground) (Display * d, Window w, unsigned long ul); \/* 48 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackground) (Display * d, Window w, unsigned long ul); \/* 66 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBackgroundPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackgroundPixmap) (Display * d, Window w, Pixmap p); \/* 49 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBackgroundPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackgroundPixmap) (Display * d, Window w, Pixmap p); \/* 67 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBorder	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorder) (Display * d, Window w, unsigned long ul); \/* 50 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBorder	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorder) (Display * d, Window w, unsigned long ul); \/* 68 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBorderPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderPixmap) (Display * d, Window w, Pixmap p); \/* 51 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBorderPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderPixmap) (Display * d, Window w, Pixmap p); \/* 69 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBorderWidth	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderWidth) (Display * d, Window w, unsigned int ui); \/* 52 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowBorderWidth	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderWidth) (Display * d, Window w, unsigned int ui); \/* 70 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowColormap) (Display * d, Window w, Colormap c); \/* 53 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSetWindowColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowColormap) (Display * d, Window w, Colormap c); \/* 71 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xStringListToTextProperty	/usr/include/tkIntXlibDecls.h	/^    Status (*xStringListToTextProperty) (char ** list, int count, XTextProperty * text_prop_return); \/* 103 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xStringListToTextProperty	/usr/include/tkIntXlibDecls.h	/^    Status (*xStringListToTextProperty) (char ** list, int count, XTextProperty * text_prop_return); \/* 79 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xStringToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xStringToKeysym) (_Xconst char * c); \/* 12 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xStringToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xStringToKeysym) (_Xconst char * c); \/* 9 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xSync	/usr/include/tkIntXlibDecls.h	/^    int (*xSync) (Display * display, Bool flag); \/* 91 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xTranslateCoordinates	/usr/include/tkIntXlibDecls.h	/^    Bool (*xTranslateCoordinates) (Display * d, Window w1, Window w2, int i1, int i2, int * i3, int * i4, Window * w3); \/* 72 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xUngrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabKeyboard) (Display * d, Time t); \/* 54 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xUngrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabKeyboard) (Display * d, Time t); \/* 73 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xUngrabPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabPointer) (Display * d, Time t); \/* 55 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xUngrabPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabPointer) (Display * d, Time t); \/* 74 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xUnmapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xUnmapWindow) (Display * d, Window w); \/* 56 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xUnmapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xUnmapWindow) (Display * d, Window w); \/* 75 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xWarpPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xWarpPointer) (Display * d, Window s, Window dw, int sx, int sy, unsigned int sw, unsigned int sh, int dx, int dy); \/* 105 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xWarpPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xWarpPointer) (Display * display, Window src_w, Window dest_w, int src_x, int src_y, unsigned int src_width, unsigned int src_height, int dest_x, int dest_y); \/* 87 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xWindowEvent	/usr/include/tkIntXlibDecls.h	/^    void (*xWindowEvent) (Display * d, Window w, long l, XEvent * x); \/* 76 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xWithdrawWindow	/usr/include/tkIntXlibDecls.h	/^    Status (*xWithdrawWindow) (Display * d, Window w, int i); \/* 16 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkIntXlibStubs::xmbLookupString	/usr/include/tkIntXlibDecls.h	/^    int (*xmbLookupString) (XIC xi, XKeyPressedEvent * xk, char * c, int i, KeySym * k, Status * s); \/* 79 *\/$/;"	m	struct:TkIntXlibStubs	access:public
TkMacOSXGetDrawablePort	/usr/include/tkPlatDecls.h	/^#define TkMacOSXGetDrawablePort /;"	d
TkMacOSXGetDrawablePort	/usr/include/tkPlatDecls.h	/^EXTERN void *		TkMacOSXGetDrawablePort (Drawable drawable);$/;"	p	signature:(Drawable drawable)
TkMacOSXGetDrawablePort_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define TkMacOSXGetDrawablePort_TCL_DECLARED$/;"	d
TkMacOSXGetRootControl	/usr/include/tkPlatDecls.h	/^#define TkMacOSXGetRootControl /;"	d
TkMacOSXGetRootControl	/usr/include/tkPlatDecls.h	/^EXTERN void *		TkMacOSXGetRootControl (Drawable drawable);$/;"	p	signature:(Drawable drawable)
TkMacOSXGetRootControl_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define TkMacOSXGetRootControl_TCL_DECLARED$/;"	d
TkMacOSXInitAppleEvents	/usr/include/tkPlatDecls.h	/^#define TkMacOSXInitAppleEvents /;"	d
TkMacOSXInitAppleEvents	/usr/include/tkPlatDecls.h	/^EXTERN void		TkMacOSXInitAppleEvents (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
TkMacOSXInitAppleEvents_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define TkMacOSXInitAppleEvents_TCL_DECLARED$/;"	d
TkMacOSXInitMenus	/usr/include/tkPlatDecls.h	/^#define TkMacOSXInitMenus /;"	d
TkMacOSXInitMenus	/usr/include/tkPlatDecls.h	/^EXTERN void		TkMacOSXInitMenus (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
TkMacOSXInitMenus_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define TkMacOSXInitMenus_TCL_DECLARED$/;"	d
TkMacOSXInvalClipRgns	/usr/include/tkPlatDecls.h	/^#define TkMacOSXInvalClipRgns /;"	d
TkMacOSXInvalClipRgns	/usr/include/tkPlatDecls.h	/^EXTERN void		TkMacOSXInvalClipRgns (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
TkMacOSXInvalClipRgns_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define TkMacOSXInvalClipRgns_TCL_DECLARED$/;"	d
TkPlatStubs	/usr/include/tkPlatDecls.h	/^typedef struct TkPlatStubs {$/;"	s
TkPlatStubs	/usr/include/tkPlatDecls.h	/^} TkPlatStubs;$/;"	t	typeref:struct:TkPlatStubs
TkPlatStubs::hooks	/usr/include/tkPlatDecls.h	/^    struct TkPlatStubHooks *hooks;$/;"	m	struct:TkPlatStubs	typeref:struct:TkPlatStubs::TkPlatStubHooks	access:public
TkPlatStubs::magic	/usr/include/tkPlatDecls.h	/^    int magic;$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tkGenWMConfigureEvent	/usr/include/tkPlatDecls.h	/^    void (*tkGenWMConfigureEvent) (Tk_Window tkwin, int x, int y, int width, int height, int flags); \/* 5 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tkMacOSXGetDrawablePort	/usr/include/tkPlatDecls.h	/^    void * (*tkMacOSXGetDrawablePort) (Drawable drawable); \/* 7 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tkMacOSXGetRootControl	/usr/include/tkPlatDecls.h	/^    void * (*tkMacOSXGetRootControl) (Drawable drawable); \/* 8 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tkMacOSXInitAppleEvents	/usr/include/tkPlatDecls.h	/^    void (*tkMacOSXInitAppleEvents) (Tcl_Interp * interp); \/* 4 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tkMacOSXInitMenus	/usr/include/tkPlatDecls.h	/^    void (*tkMacOSXInitMenus) (Tcl_Interp * interp); \/* 3 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tkMacOSXInvalClipRgns	/usr/include/tkPlatDecls.h	/^    void (*tkMacOSXInvalClipRgns) (Tk_Window tkwin); \/* 6 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_AttachHWND	/usr/include/tkPlatDecls.h	/^    Window (*tk_AttachHWND) (Tk_Window tkwin, HWND hwnd); \/* 0 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_GetHINSTANCE	/usr/include/tkPlatDecls.h	/^    HINSTANCE (*tk_GetHINSTANCE) (void); \/* 1 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_GetHWND	/usr/include/tkPlatDecls.h	/^    HWND (*tk_GetHWND) (Window window); \/* 2 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_HWNDToWindow	/usr/include/tkPlatDecls.h	/^    Tk_Window (*tk_HWNDToWindow) (HWND hwnd); \/* 3 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_MacOSXIsAppInFront	/usr/include/tkPlatDecls.h	/^    int (*tk_MacOSXIsAppInFront) (void); \/* 10 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_MacOSXSetEmbedHandler	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXSetEmbedHandler) (Tk_MacOSXEmbedRegisterWinProc * registerWinProcPtr, Tk_MacOSXEmbedGetGrafPortProc * getPortProcPtr, Tk_MacOSXEmbedMakeContainerExistProc * containerExistProcPtr, Tk_MacOSXEmbedGetClipProc * getClipProc, Tk_MacOSXEmbedGetOffsetInParentProc * getOffsetProc); \/* 0 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_MacOSXSetupTkNotifier	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXSetupTkNotifier) (void); \/* 9 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_MacOSXTkOwnsCursor	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXTkOwnsCursor) (int tkOwnsIt); \/* 2 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_MacOSXTurnOffMenus	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXTurnOffMenus) (void); \/* 1 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_PointerEvent	/usr/include/tkPlatDecls.h	/^    void (*tk_PointerEvent) (HWND hwnd, int x, int y); \/* 4 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPlatStubs::tk_TranslateWinEvent	/usr/include/tkPlatDecls.h	/^    int (*tk_TranslateWinEvent) (HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam, LRESULT * result); \/* 5 *\/$/;"	m	struct:TkPlatStubs	access:public
TkPutImage	/usr/include/tkIntXlibDecls.h	/^#define TkPutImage /;"	d
TkPutImage	/usr/include/tkIntXlibDecls.h	/^EXTERN void		TkPutImage (unsigned long * colors, int ncolors, $/;"	p	signature:(unsigned long * colors, int ncolors, Display * display, Drawable d, GC gc, XImage * image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height)
TkPutImage_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define TkPutImage_TCL_DECLARED$/;"	d
TkStubHooks	/usr/include/tkDecls.h	/^typedef struct TkStubHooks {$/;"	s
TkStubHooks	/usr/include/tkDecls.h	/^} TkStubHooks;$/;"	t	typeref:struct:TkStubHooks
TkStubHooks::tkIntPlatStubs	/usr/include/tkDecls.h	/^    struct TkIntPlatStubs *tkIntPlatStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkIntPlatStubs	access:public
TkStubHooks::tkIntStubs	/usr/include/tkDecls.h	/^    struct TkIntStubs *tkIntStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkIntStubs	access:public
TkStubHooks::tkIntXlibStubs	/usr/include/tkDecls.h	/^    struct TkIntXlibStubs *tkIntXlibStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkIntXlibStubs	access:public
TkStubHooks::tkPlatStubs	/usr/include/tkDecls.h	/^    struct TkPlatStubs *tkPlatStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkPlatStubs	access:public
TkStubs	/usr/include/tkDecls.h	/^typedef struct TkStubs {$/;"	s
TkStubs	/usr/include/tkDecls.h	/^} TkStubs;$/;"	t	typeref:struct:TkStubs
TkStubs::hooks	/usr/include/tkDecls.h	/^    struct TkStubHooks *hooks;$/;"	m	struct:TkStubs	typeref:struct:TkStubs::TkStubHooks	access:public
TkStubs::magic	/usr/include/tkDecls.h	/^    int magic;$/;"	m	struct:TkStubs	access:public
TkStubs::reserved218	/usr/include/tkDecls.h	/^    void *reserved218;$/;"	m	struct:TkStubs	access:public
TkStubs::reserved219	/usr/include/tkDecls.h	/^    void *reserved219;$/;"	m	struct:TkStubs	access:public
TkStubs::tk_3DBorderColor	/usr/include/tkDecls.h	/^    XColor * (*tk_3DBorderColor) (Tk_3DBorder border); \/* 1 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_3DBorderGC	/usr/include/tkDecls.h	/^    GC (*tk_3DBorderGC) (Tk_Window tkwin, Tk_3DBorder border, int which); \/* 2 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_3DHorizontalBevel	/usr/include/tkDecls.h	/^    void (*tk_3DHorizontalBevel) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftIn, int rightIn, int topBevel, int relief); \/* 3 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_3DVerticalBevel	/usr/include/tkDecls.h	/^    void (*tk_3DVerticalBevel) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftBevel, int relief); \/* 4 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_AddOption	/usr/include/tkDecls.h	/^    void (*tk_AddOption) (Tk_Window tkwin, CONST char * name, CONST char * value, int priority); \/* 5 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Alloc3DBorderFromObj	/usr/include/tkDecls.h	/^    Tk_3DBorder (*tk_Alloc3DBorderFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 186 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_AllocBitmapFromObj	/usr/include/tkDecls.h	/^    Pixmap (*tk_AllocBitmapFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 185 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_AllocColorFromObj	/usr/include/tkDecls.h	/^    XColor * (*tk_AllocColorFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 187 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_AllocCursorFromObj	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_AllocCursorFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 188 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_AllocFontFromObj	/usr/include/tkDecls.h	/^    Tk_Font (*tk_AllocFontFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 189 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_AllocStyleFromObj	/usr/include/tkDecls.h	/^    Tk_Style (*tk_AllocStyleFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 257 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_BindEvent	/usr/include/tkDecls.h	/^    void (*tk_BindEvent) (Tk_BindingTable bindingTable, XEvent * eventPtr, Tk_Window tkwin, int numObjects, ClientData * objectPtr); \/* 6 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasDrawableCoords	/usr/include/tkDecls.h	/^    void (*tk_CanvasDrawableCoords) (Tk_Canvas canvas, double x, double y, short * drawableXPtr, short * drawableYPtr); \/* 7 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasEventuallyRedraw	/usr/include/tkDecls.h	/^    void (*tk_CanvasEventuallyRedraw) (Tk_Canvas canvas, int x1, int y1, int x2, int y2); \/* 8 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasGetCoord	/usr/include/tkDecls.h	/^    int (*tk_CanvasGetCoord) (Tcl_Interp * interp, Tk_Canvas canvas, CONST char * str, double * doublePtr); \/* 9 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasGetCoordFromObj	/usr/include/tkDecls.h	/^    int (*tk_CanvasGetCoordFromObj) (Tcl_Interp * interp, Tk_Canvas canvas, Tcl_Obj * obj, double * doublePtr); \/* 228 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasGetTextInfo	/usr/include/tkDecls.h	/^    Tk_CanvasTextInfo * (*tk_CanvasGetTextInfo) (Tk_Canvas canvas); \/* 10 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsBitmap	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsBitmap) (Tcl_Interp * interp, Tk_Canvas canvas, Pixmap bitmap, int x, int y, int width, int height); \/* 11 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsColor	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsColor) (Tcl_Interp * interp, Tk_Canvas canvas, XColor * colorPtr); \/* 12 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsFont	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsFont) (Tcl_Interp * interp, Tk_Canvas canvas, Tk_Font font); \/* 13 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsOutline	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsOutline) (Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 226 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsPath	/usr/include/tkDecls.h	/^    void (*tk_CanvasPsPath) (Tcl_Interp * interp, Tk_Canvas canvas, double * coordPtr, int numPoints); \/* 14 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsStipple	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsStipple) (Tcl_Interp * interp, Tk_Canvas canvas, Pixmap bitmap); \/* 15 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasPsY	/usr/include/tkDecls.h	/^    double (*tk_CanvasPsY) (Tk_Canvas canvas, double y); \/* 16 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasSetOffset	/usr/include/tkDecls.h	/^    void (*tk_CanvasSetOffset) (Tk_Canvas canvas, GC gc, Tk_TSOffset * offset); \/* 229 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasSetStippleOrigin	/usr/include/tkDecls.h	/^    void (*tk_CanvasSetStippleOrigin) (Tk_Canvas canvas, GC gc); \/* 17 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasTagsParseProc	/usr/include/tkDecls.h	/^    int (*tk_CanvasTagsParseProc) (ClientData clientData, Tcl_Interp * interp, Tk_Window tkwin, CONST char * value, char * widgRec, int offset); \/* 18 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasTagsPrintProc	/usr/include/tkDecls.h	/^    char * (*tk_CanvasTagsPrintProc) (ClientData clientData, Tk_Window tkwin, char * widgRec, int offset, Tcl_FreeProc ** freeProcPtr); \/* 19 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasTkwin	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CanvasTkwin) (Tk_Canvas canvas); \/* 20 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CanvasWindowCoords	/usr/include/tkDecls.h	/^    void (*tk_CanvasWindowCoords) (Tk_Canvas canvas, double x, double y, short * screenXPtr, short * screenYPtr); \/* 21 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ChangeOutlineGC	/usr/include/tkDecls.h	/^    int (*tk_ChangeOutlineGC) (Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 224 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ChangeWindowAttributes	/usr/include/tkDecls.h	/^    void (*tk_ChangeWindowAttributes) (Tk_Window tkwin, unsigned long valueMask, XSetWindowAttributes * attsPtr); \/* 22 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CharBbox	/usr/include/tkDecls.h	/^    int (*tk_CharBbox) (Tk_TextLayout layout, int index, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr); \/* 23 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ClearSelection	/usr/include/tkDecls.h	/^    void (*tk_ClearSelection) (Tk_Window tkwin, Atom selection); \/* 24 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ClipboardAppend	/usr/include/tkDecls.h	/^    int (*tk_ClipboardAppend) (Tcl_Interp * interp, Tk_Window tkwin, Atom target, Atom format, char* buffer); \/* 25 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ClipboardClear	/usr/include/tkDecls.h	/^    int (*tk_ClipboardClear) (Tcl_Interp * interp, Tk_Window tkwin); \/* 26 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CollapseMotionEvents	/usr/include/tkDecls.h	/^    int (*tk_CollapseMotionEvents) (Display * display, int collapse); \/* 248 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ComputeTextLayout	/usr/include/tkDecls.h	/^    Tk_TextLayout (*tk_ComputeTextLayout) (Tk_Font font, CONST char * str, int numChars, int wrapLength, Tk_Justify justify, int flags, int * widthPtr, int * heightPtr); \/* 31 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ConfigOutlineGC	/usr/include/tkDecls.h	/^    int (*tk_ConfigOutlineGC) (XGCValues * gcValues, Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 223 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ConfigureInfo	/usr/include/tkDecls.h	/^    int (*tk_ConfigureInfo) (Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, char * widgRec, CONST char * argvName, int flags); \/* 27 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ConfigureValue	/usr/include/tkDecls.h	/^    int (*tk_ConfigureValue) (Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, char * widgRec, CONST char * argvName, int flags); \/* 28 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ConfigureWidget	/usr/include/tkDecls.h	/^    int (*tk_ConfigureWidget) (Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, int argc, CONST84 char ** argv, char * widgRec, int flags); \/* 29 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ConfigureWindow	/usr/include/tkDecls.h	/^    void (*tk_ConfigureWindow) (Tk_Window tkwin, unsigned int valueMask, XWindowChanges * valuePtr); \/* 30 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CoordsToWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CoordsToWindow) (int rootX, int rootY, Tk_Window tkwin); \/* 32 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateAnonymousWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CreateAnonymousWindow) (Tcl_Interp * interp, Tk_Window parent, CONST char * screenName); \/* 241 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateBinding	/usr/include/tkDecls.h	/^    unsigned long (*tk_CreateBinding) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr, CONST char * command, int append); \/* 33 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateBindingTable	/usr/include/tkDecls.h	/^    Tk_BindingTable (*tk_CreateBindingTable) (Tcl_Interp * interp); \/* 34 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateClientMessageHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateClientMessageHandler) (Tk_ClientMessageProc * proc); \/* 239 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateConsoleWindow	/usr/include/tkDecls.h	/^    int (*tk_CreateConsoleWindow) (Tcl_Interp * interp); \/* 216 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateErrorHandler	/usr/include/tkDecls.h	/^    Tk_ErrorHandler (*tk_CreateErrorHandler) (Display * display, int errNum, int request, int minorCode, Tk_ErrorProc * errorProc, ClientData clientData); \/* 35 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateEventHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateEventHandler) (Tk_Window token, unsigned long mask, Tk_EventProc * proc, ClientData clientData); \/* 36 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateGenericHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateGenericHandler) (Tk_GenericProc * proc, ClientData clientData); \/* 37 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateImageType	/usr/include/tkDecls.h	/^    void (*tk_CreateImageType) (Tk_ImageType * typePtr); \/* 38 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateItemType	/usr/include/tkDecls.h	/^    void (*tk_CreateItemType) (Tk_ItemType * typePtr); \/* 39 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateOldImageType	/usr/include/tkDecls.h	/^    void (*tk_CreateOldImageType) (Tk_ImageType * typePtr); \/* 272 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateOldPhotoImageFormat	/usr/include/tkDecls.h	/^    void (*tk_CreateOldPhotoImageFormat) (Tk_PhotoImageFormat * formatPtr); \/* 273 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateOptionTable	/usr/include/tkDecls.h	/^    Tk_OptionTable (*tk_CreateOptionTable) (Tcl_Interp * interp, CONST Tk_OptionSpec * templatePtr); \/* 190 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateOutline	/usr/include/tkDecls.h	/^    void (*tk_CreateOutline) (Tk_Outline * outline); \/* 221 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreatePhotoImageFormat	/usr/include/tkDecls.h	/^    void (*tk_CreatePhotoImageFormat) (Tk_PhotoImageFormat * formatPtr); \/* 40 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateSelHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateSelHandler) (Tk_Window tkwin, Atom selection, Atom target, Tk_SelectionProc * proc, ClientData clientData, Atom format); \/* 41 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateSmoothMethod	/usr/include/tkDecls.h	/^    void (*tk_CreateSmoothMethod) (Tcl_Interp * interp, Tk_SmoothMethod * method); \/* 217 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateStyle	/usr/include/tkDecls.h	/^    Tk_Style (*tk_CreateStyle) (CONST char * name, Tk_StyleEngine engine, ClientData clientData); \/* 253 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CreateWindow) (Tcl_Interp * interp, Tk_Window parent, CONST char * name, CONST char * screenName); \/* 42 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_CreateWindowFromPath	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CreateWindowFromPath) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * pathName, CONST char * screenName); \/* 43 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DefineBitmap	/usr/include/tkDecls.h	/^    int (*tk_DefineBitmap) (Tcl_Interp * interp, CONST char * name, CONST char * source, int width, int height); \/* 44 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DefineCursor	/usr/include/tkDecls.h	/^    void (*tk_DefineCursor) (Tk_Window window, Tk_Cursor cursor); \/* 45 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteAllBindings	/usr/include/tkDecls.h	/^    void (*tk_DeleteAllBindings) (Tk_BindingTable bindingTable, ClientData object); \/* 46 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteBinding	/usr/include/tkDecls.h	/^    int (*tk_DeleteBinding) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr); \/* 47 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteBindingTable	/usr/include/tkDecls.h	/^    void (*tk_DeleteBindingTable) (Tk_BindingTable bindingTable); \/* 48 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteClientMessageHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteClientMessageHandler) (Tk_ClientMessageProc * proc); \/* 240 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteErrorHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteErrorHandler) (Tk_ErrorHandler handler); \/* 49 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteEventHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteEventHandler) (Tk_Window token, unsigned long mask, Tk_EventProc * proc, ClientData clientData); \/* 50 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteGenericHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteGenericHandler) (Tk_GenericProc * proc, ClientData clientData); \/* 51 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteImage	/usr/include/tkDecls.h	/^    void (*tk_DeleteImage) (Tcl_Interp * interp, CONST char * name); \/* 52 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteOptionTable	/usr/include/tkDecls.h	/^    void (*tk_DeleteOptionTable) (Tk_OptionTable optionTable); \/* 191 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteOutline	/usr/include/tkDecls.h	/^    void (*tk_DeleteOutline) (Display * display, Tk_Outline * outline); \/* 222 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DeleteSelHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteSelHandler) (Tk_Window tkwin, Atom selection, Atom target); \/* 53 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DestroyWindow	/usr/include/tkDecls.h	/^    void (*tk_DestroyWindow) (Tk_Window tkwin); \/* 54 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DisplayName	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_DisplayName) (Tk_Window tkwin); \/* 55 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DistanceToTextLayout	/usr/include/tkDecls.h	/^    int (*tk_DistanceToTextLayout) (Tk_TextLayout layout, int x, int y); \/* 56 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DitherPhoto	/usr/include/tkDecls.h	/^    void (*tk_DitherPhoto) (Tk_PhotoHandle handle, int x, int y, int width, int height); \/* 230 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Draw3DPolygon	/usr/include/tkDecls.h	/^    void (*tk_Draw3DPolygon) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint * pointPtr, int numPoints, int borderWidth, int leftRelief); \/* 57 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Draw3DRectangle	/usr/include/tkDecls.h	/^    void (*tk_Draw3DRectangle) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief); \/* 58 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DrawChars	/usr/include/tkDecls.h	/^    void (*tk_DrawChars) (Display * display, Drawable drawable, GC gc, Tk_Font tkfont, CONST char * source, int numBytes, int x, int y); \/* 59 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DrawElement	/usr/include/tkDecls.h	/^    void (*tk_DrawElement) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, Drawable d, int x, int y, int width, int height, int state); \/* 264 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DrawFocusHighlight	/usr/include/tkDecls.h	/^    void (*tk_DrawFocusHighlight) (Tk_Window tkwin, GC gc, int width, Drawable drawable); \/* 60 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_DrawTextLayout	/usr/include/tkDecls.h	/^    void (*tk_DrawTextLayout) (Display * display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int firstChar, int lastChar); \/* 61 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Fill3DPolygon	/usr/include/tkDecls.h	/^    void (*tk_Fill3DPolygon) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint * pointPtr, int numPoints, int borderWidth, int leftRelief); \/* 62 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Fill3DRectangle	/usr/include/tkDecls.h	/^    void (*tk_Fill3DRectangle) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief); \/* 63 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FindPhoto	/usr/include/tkDecls.h	/^    Tk_PhotoHandle (*tk_FindPhoto) (Tcl_Interp * interp, CONST char * imageName); \/* 64 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FontId	/usr/include/tkDecls.h	/^    Font (*tk_FontId) (Tk_Font font); \/* 65 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Free3DBorder	/usr/include/tkDecls.h	/^    void (*tk_Free3DBorder) (Tk_3DBorder border); \/* 66 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Free3DBorderFromObj	/usr/include/tkDecls.h	/^    void (*tk_Free3DBorderFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 192 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeBitmap	/usr/include/tkDecls.h	/^    void (*tk_FreeBitmap) (Display * display, Pixmap bitmap); \/* 67 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeBitmapFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeBitmapFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 193 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeColor	/usr/include/tkDecls.h	/^    void (*tk_FreeColor) (XColor * colorPtr); \/* 68 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeColorFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeColorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 194 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeColormap	/usr/include/tkDecls.h	/^    void (*tk_FreeColormap) (Display * display, Colormap colormap); \/* 69 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeConfigOptions	/usr/include/tkDecls.h	/^    void (*tk_FreeConfigOptions) (char * recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin); \/* 195 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeCursor	/usr/include/tkDecls.h	/^    void (*tk_FreeCursor) (Display * display, Tk_Cursor cursor); \/* 70 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeCursorFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeCursorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 197 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeFont	/usr/include/tkDecls.h	/^    void (*tk_FreeFont) (Tk_Font f); \/* 71 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeFontFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeFontFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 198 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeGC	/usr/include/tkDecls.h	/^    void (*tk_FreeGC) (Display * display, GC gc); \/* 72 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeImage	/usr/include/tkDecls.h	/^    void (*tk_FreeImage) (Tk_Image image); \/* 73 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeOptions	/usr/include/tkDecls.h	/^    void (*tk_FreeOptions) (Tk_ConfigSpec * specs, char * widgRec, Display * display, int needFlags); \/* 74 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreePixmap	/usr/include/tkDecls.h	/^    void (*tk_FreePixmap) (Display * display, Pixmap pixmap); \/* 75 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeSavedOptions	/usr/include/tkDecls.h	/^    void (*tk_FreeSavedOptions) (Tk_SavedOptions * savePtr); \/* 196 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeStyle	/usr/include/tkDecls.h	/^    void (*tk_FreeStyle) (Tk_Style style); \/* 255 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeStyleFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeStyleFromObj) (Tcl_Obj * objPtr); \/* 259 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeTextLayout	/usr/include/tkDecls.h	/^    void (*tk_FreeTextLayout) (Tk_TextLayout textLayout); \/* 76 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_FreeXId	/usr/include/tkDecls.h	/^    void (*tk_FreeXId) (Display * display, XID xid); \/* 77 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GCForColor	/usr/include/tkDecls.h	/^    GC (*tk_GCForColor) (XColor * colorPtr, Drawable drawable); \/* 78 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GeometryRequest	/usr/include/tkDecls.h	/^    void (*tk_GeometryRequest) (Tk_Window tkwin, int reqWidth, int reqHeight); \/* 79 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Get3DBorder	/usr/include/tkDecls.h	/^    Tk_3DBorder (*tk_Get3DBorder) (Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid colorName); \/* 80 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Get3DBorderFromObj	/usr/include/tkDecls.h	/^    Tk_3DBorder (*tk_Get3DBorderFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 199 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetAllBindings	/usr/include/tkDecls.h	/^    void (*tk_GetAllBindings) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object); \/* 81 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetAnchor	/usr/include/tkDecls.h	/^    int (*tk_GetAnchor) (Tcl_Interp * interp, CONST char * str, Tk_Anchor * anchorPtr); \/* 82 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetAnchorFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetAnchorFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tk_Anchor * anchorPtr); \/* 200 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetAtomName	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_GetAtomName) (Tk_Window tkwin, Atom atom); \/* 83 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetBinding	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_GetBinding) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr); \/* 84 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetBitmap	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetBitmap) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str); \/* 85 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetBitmapFromData	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetBitmapFromData) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * source, int width, int height); \/* 86 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetBitmapFromObj	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetBitmapFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 201 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetCapStyle	/usr/include/tkDecls.h	/^    int (*tk_GetCapStyle) (Tcl_Interp * interp, CONST char * str, int * capPtr); \/* 87 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetColor	/usr/include/tkDecls.h	/^    XColor * (*tk_GetColor) (Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid name); \/* 88 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetColorByValue	/usr/include/tkDecls.h	/^    XColor * (*tk_GetColorByValue) (Tk_Window tkwin, XColor * colorPtr); \/* 89 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetColorFromObj	/usr/include/tkDecls.h	/^    XColor * (*tk_GetColorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 202 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetColormap	/usr/include/tkDecls.h	/^    Colormap (*tk_GetColormap) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str); \/* 90 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetCursor	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_GetCursor) (Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid str); \/* 91 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetCursorFromData	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_GetCursorFromData) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * source, CONST char * mask, int width, int height, int xHot, int yHot, Tk_Uid fg, Tk_Uid bg); \/* 92 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetCursorFromObj	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_GetCursorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 203 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetDash	/usr/include/tkDecls.h	/^    int (*tk_GetDash) (Tcl_Interp * interp, CONST char * value, Tk_Dash * dash); \/* 220 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetElementBorderWidth	/usr/include/tkDecls.h	/^    int (*tk_GetElementBorderWidth) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin); \/* 263 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetElementBox	/usr/include/tkDecls.h	/^    void (*tk_GetElementBox) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, int x, int y, int width, int height, int inner, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr); \/* 262 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetElementId	/usr/include/tkDecls.h	/^    int (*tk_GetElementId) (CONST char * name); \/* 252 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetElementSize	/usr/include/tkDecls.h	/^    void (*tk_GetElementSize) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, int width, int height, int inner, int * widthPtr, int * heightPtr); \/* 261 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetFont	/usr/include/tkDecls.h	/^    Tk_Font (*tk_GetFont) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str); \/* 93 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetFontFromObj	/usr/include/tkDecls.h	/^    Tk_Font (*tk_GetFontFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 94 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetFontMetrics	/usr/include/tkDecls.h	/^    void (*tk_GetFontMetrics) (Tk_Font font, Tk_FontMetrics * fmPtr); \/* 95 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetGC	/usr/include/tkDecls.h	/^    GC (*tk_GetGC) (Tk_Window tkwin, unsigned long valueMask, XGCValues * valuePtr); \/* 96 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetImage	/usr/include/tkDecls.h	/^    Tk_Image (*tk_GetImage) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * name, Tk_ImageChangedProc * changeProc, ClientData clientData); \/* 97 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetImageMasterData	/usr/include/tkDecls.h	/^    ClientData (*tk_GetImageMasterData) (Tcl_Interp * interp, CONST char * name, Tk_ImageType ** typePtrPtr); \/* 98 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetItemTypes	/usr/include/tkDecls.h	/^    Tk_ItemType * (*tk_GetItemTypes) (void); \/* 99 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetJoinStyle	/usr/include/tkDecls.h	/^    int (*tk_GetJoinStyle) (Tcl_Interp * interp, CONST char * str, int * joinPtr); \/* 100 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetJustify	/usr/include/tkDecls.h	/^    int (*tk_GetJustify) (Tcl_Interp * interp, CONST char * str, Tk_Justify * justifyPtr); \/* 101 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetJustifyFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetJustifyFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tk_Justify * justifyPtr); \/* 206 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetMMFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetMMFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr, double * doublePtr); \/* 207 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetNumMainWindows	/usr/include/tkDecls.h	/^    int (*tk_GetNumMainWindows) (void); \/* 102 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetOption	/usr/include/tkDecls.h	/^    Tk_Uid (*tk_GetOption) (Tk_Window tkwin, CONST char * name, CONST char * className); \/* 103 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetOptionInfo	/usr/include/tkDecls.h	/^    Tcl_Obj * (*tk_GetOptionInfo) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, Tcl_Obj * namePtr, Tk_Window tkwin); \/* 204 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetOptionValue	/usr/include/tkDecls.h	/^    Tcl_Obj * (*tk_GetOptionValue) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, Tcl_Obj * namePtr, Tk_Window tkwin); \/* 205 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetPixels	/usr/include/tkDecls.h	/^    int (*tk_GetPixels) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, int * intPtr); \/* 104 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetPixelsFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetPixelsFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr, int * intPtr); \/* 208 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetPixmap	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetPixmap) (Display * display, Drawable d, int width, int height, int depth); \/* 105 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetRelief	/usr/include/tkDecls.h	/^    int (*tk_GetRelief) (Tcl_Interp * interp, CONST char * name, int * reliefPtr); \/* 106 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetReliefFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetReliefFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * resultPtr); \/* 209 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetRootCoords	/usr/include/tkDecls.h	/^    void (*tk_GetRootCoords) (Tk_Window tkwin, int * xPtr, int * yPtr); \/* 107 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetScreenMM	/usr/include/tkDecls.h	/^    int (*tk_GetScreenMM) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, double * doublePtr); \/* 109 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetScrollInfo	/usr/include/tkDecls.h	/^    int (*tk_GetScrollInfo) (Tcl_Interp * interp, int argc, CONST84 char ** argv, double * dblPtr, int * intPtr); \/* 108 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetScrollInfoObj	/usr/include/tkDecls.h	/^    int (*tk_GetScrollInfoObj) (Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], double * dblPtr, int * intPtr); \/* 210 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetSelection	/usr/include/tkDecls.h	/^    int (*tk_GetSelection) (Tcl_Interp * interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc * proc, ClientData clientData); \/* 110 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetStyle	/usr/include/tkDecls.h	/^    Tk_Style (*tk_GetStyle) (Tcl_Interp * interp, CONST char * name); \/* 254 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetStyleEngine	/usr/include/tkDecls.h	/^    Tk_StyleEngine (*tk_GetStyleEngine) (CONST char * name); \/* 250 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetStyleFromObj	/usr/include/tkDecls.h	/^    Tk_Style (*tk_GetStyleFromObj) (Tcl_Obj * objPtr); \/* 258 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetStyledElement	/usr/include/tkDecls.h	/^    Tk_StyledElement (*tk_GetStyledElement) (Tk_Style style, int elementId, Tk_OptionTable optionTable); \/* 260 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetUid	/usr/include/tkDecls.h	/^    Tk_Uid (*tk_GetUid) (CONST char * str); \/* 111 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetUserInactiveTime	/usr/include/tkDecls.h	/^    long (*tk_GetUserInactiveTime) (Display * dpy); \/* 269 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetVRootGeometry	/usr/include/tkDecls.h	/^    void (*tk_GetVRootGeometry) (Tk_Window tkwin, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr); \/* 113 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_GetVisual	/usr/include/tkDecls.h	/^    Visual * (*tk_GetVisual) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, int * depthPtr, Colormap * colormapPtr); \/* 112 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Grab	/usr/include/tkDecls.h	/^    int (*tk_Grab) (Tcl_Interp * interp, Tk_Window tkwin, int grabGlobal); \/* 114 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_HandleEvent	/usr/include/tkDecls.h	/^    void (*tk_HandleEvent) (XEvent * eventPtr); \/* 115 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_IdToWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_IdToWindow) (Display * display, Window window); \/* 116 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ImageChanged	/usr/include/tkDecls.h	/^    void (*tk_ImageChanged) (Tk_ImageMaster master, int x, int y, int width, int height, int imageWidth, int imageHeight); \/* 117 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Init	/usr/include/tkDecls.h	/^    int (*tk_Init) (Tcl_Interp * interp); \/* 118 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_InitConsoleChannels	/usr/include/tkDecls.h	/^    void (*tk_InitConsoleChannels) (Tcl_Interp * interp); \/* 215 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_InitOptions	/usr/include/tkDecls.h	/^    int (*tk_InitOptions) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin); \/* 211 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_InternAtom	/usr/include/tkDecls.h	/^    Atom (*tk_InternAtom) (Tk_Window tkwin, CONST char * name); \/* 119 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Interp	/usr/include/tkDecls.h	/^    Tcl_Interp * (*tk_Interp) (Tk_Window tkwin); \/* 271 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_IntersectTextLayout	/usr/include/tkDecls.h	/^    int (*tk_IntersectTextLayout) (Tk_TextLayout layout, int x, int y, int width, int height); \/* 120 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MainEx	/usr/include/tkDecls.h	/^    void (*tk_MainEx) (int argc, char ** argv, Tcl_AppInitProc * appInitProc, Tcl_Interp * interp); \/* 212 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MainLoop	/usr/include/tkDecls.h	/^    void (*tk_MainLoop) (void); \/* 0 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MainWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_MainWindow) (Tcl_Interp * interp); \/* 122 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MaintainGeometry	/usr/include/tkDecls.h	/^    void (*tk_MaintainGeometry) (Tk_Window slave, Tk_Window master, int x, int y, int width, int height); \/* 121 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MakeWindowExist	/usr/include/tkDecls.h	/^    void (*tk_MakeWindowExist) (Tk_Window tkwin); \/* 123 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ManageGeometry	/usr/include/tkDecls.h	/^    void (*tk_ManageGeometry) (Tk_Window tkwin, CONST Tk_GeomMgr * mgrPtr, ClientData clientData); \/* 124 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MapWindow	/usr/include/tkDecls.h	/^    void (*tk_MapWindow) (Tk_Window tkwin); \/* 125 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MeasureChars	/usr/include/tkDecls.h	/^    int (*tk_MeasureChars) (Tk_Font tkfont, CONST char * source, int numBytes, int maxPixels, int flags, int * lengthPtr); \/* 126 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MoveResizeWindow	/usr/include/tkDecls.h	/^    void (*tk_MoveResizeWindow) (Tk_Window tkwin, int x, int y, int width, int height); \/* 127 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MoveToplevelWindow	/usr/include/tkDecls.h	/^    void (*tk_MoveToplevelWindow) (Tk_Window tkwin, int x, int y); \/* 129 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_MoveWindow	/usr/include/tkDecls.h	/^    void (*tk_MoveWindow) (Tk_Window tkwin, int x, int y); \/* 128 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOf3DBorder	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOf3DBorder) (Tk_3DBorder border); \/* 130 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfAnchor	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfAnchor) (Tk_Anchor anchor); \/* 131 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfBitmap	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfBitmap) (Display * display, Pixmap bitmap); \/* 132 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfCapStyle	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfCapStyle) (int cap); \/* 133 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfColor	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfColor) (XColor * colorPtr); \/* 134 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfCursor	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfCursor) (Display * display, Tk_Cursor cursor); \/* 135 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfFont	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfFont) (Tk_Font font); \/* 136 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfImage	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfImage) (Tk_ImageMaster imageMaster); \/* 137 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfJoinStyle	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfJoinStyle) (int join); \/* 138 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfJustify	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfJustify) (Tk_Justify justify); \/* 139 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfRelief	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfRelief) (int relief); \/* 140 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameOfStyle	/usr/include/tkDecls.h	/^    CONST char * (*tk_NameOfStyle) (Tk_Style style); \/* 256 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_NameToWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_NameToWindow) (Tcl_Interp * interp, CONST char * pathName, Tk_Window tkwin); \/* 141 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_OwnSelection	/usr/include/tkDecls.h	/^    void (*tk_OwnSelection) (Tk_Window tkwin, Atom selection, Tk_LostSelProc * proc, ClientData clientData); \/* 142 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ParseArgv	/usr/include/tkDecls.h	/^    int (*tk_ParseArgv) (Tcl_Interp * interp, Tk_Window tkwin, int * argcPtr, CONST84 char ** argv, Tk_ArgvInfo * argTable, int flags); \/* 143 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoBlank	/usr/include/tkDecls.h	/^    void (*tk_PhotoBlank) (Tk_PhotoHandle handle); \/* 147 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoExpand	/usr/include/tkDecls.h	/^    int (*tk_PhotoExpand) (Tcl_Interp * interp, Tk_PhotoHandle handle, int width, int height); \/* 265 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoExpand_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoExpand_Panic) (Tk_PhotoHandle handle, int width, int height); \/* 148 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoGetImage	/usr/include/tkDecls.h	/^    int (*tk_PhotoGetImage) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr); \/* 146 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoGetSize	/usr/include/tkDecls.h	/^    void (*tk_PhotoGetSize) (Tk_PhotoHandle handle, int * widthPtr, int * heightPtr); \/* 149 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoPutBlock	/usr/include/tkDecls.h	/^    int (*tk_PhotoPutBlock) (Tcl_Interp * interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int compRule); \/* 266 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoPutBlock_NoComposite	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutBlock_NoComposite) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height); \/* 144 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoPutBlock_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutBlock_Panic) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int compRule); \/* 246 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoPutZoomedBlock	/usr/include/tkDecls.h	/^    int (*tk_PhotoPutZoomedBlock) (Tcl_Interp * interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule); \/* 267 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoPutZoomedBlock_NoComposite	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutZoomedBlock_NoComposite) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY); \/* 145 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoPutZoomedBlock_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutZoomedBlock_Panic) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule); \/* 247 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoSetSize	/usr/include/tkDecls.h	/^    int (*tk_PhotoSetSize) (Tcl_Interp * interp, Tk_PhotoHandle handle, int width, int height); \/* 268 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PhotoSetSize_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoSetSize_Panic) (Tk_PhotoHandle handle, int width, int height); \/* 150 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PointToChar	/usr/include/tkDecls.h	/^    int (*tk_PointToChar) (Tk_TextLayout layout, int x, int y); \/* 151 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptBitmap	/usr/include/tkDecls.h	/^    int (*tk_PostscriptBitmap) (Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap, int startX, int startY, int width, int height); \/* 231 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptColor	/usr/include/tkDecls.h	/^    int (*tk_PostscriptColor) (Tcl_Interp * interp, Tk_PostscriptInfo psInfo, XColor * colorPtr); \/* 232 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptFont	/usr/include/tkDecls.h	/^    int (*tk_PostscriptFont) (Tcl_Interp * interp, Tk_PostscriptInfo psInfo, Tk_Font font); \/* 233 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptFontName	/usr/include/tkDecls.h	/^    int (*tk_PostscriptFontName) (Tk_Font tkfont, Tcl_DString * dsPtr); \/* 152 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptImage	/usr/include/tkDecls.h	/^    int (*tk_PostscriptImage) (Tk_Image image, Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psinfo, int x, int y, int width, int height, int prepass); \/* 234 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptPath	/usr/include/tkDecls.h	/^    void (*tk_PostscriptPath) (Tcl_Interp * interp, Tk_PostscriptInfo psInfo, double * coordPtr, int numPoints); \/* 235 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptPhoto	/usr/include/tkDecls.h	/^    int (*tk_PostscriptPhoto) (Tcl_Interp * interp, Tk_PhotoImageBlock * blockPtr, Tk_PostscriptInfo psInfo, int width, int height); \/* 238 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptStipple	/usr/include/tkDecls.h	/^    int (*tk_PostscriptStipple) (Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap); \/* 236 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PostscriptY	/usr/include/tkDecls.h	/^    double (*tk_PostscriptY) (double y, Tk_PostscriptInfo psInfo); \/* 237 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_PreserveColormap	/usr/include/tkDecls.h	/^    void (*tk_PreserveColormap) (Display * display, Colormap colormap); \/* 153 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_QueueWindowEvent	/usr/include/tkDecls.h	/^    void (*tk_QueueWindowEvent) (XEvent * eventPtr, Tcl_QueuePosition position); \/* 154 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_RedrawImage	/usr/include/tkDecls.h	/^    void (*tk_RedrawImage) (Tk_Image image, int imageX, int imageY, int width, int height, Drawable drawable, int drawableX, int drawableY); \/* 155 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_RegisterStyleEngine	/usr/include/tkDecls.h	/^    Tk_StyleEngine (*tk_RegisterStyleEngine) (CONST char * name, Tk_StyleEngine parent); \/* 249 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_RegisterStyledElement	/usr/include/tkDecls.h	/^    int (*tk_RegisterStyledElement) (Tk_StyleEngine engine, Tk_ElementSpec * templatePtr); \/* 251 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ResetOutlineGC	/usr/include/tkDecls.h	/^    int (*tk_ResetOutlineGC) (Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 225 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ResetUserInactiveTime	/usr/include/tkDecls.h	/^    void (*tk_ResetUserInactiveTime) (Display * dpy); \/* 270 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_ResizeWindow	/usr/include/tkDecls.h	/^    void (*tk_ResizeWindow) (Tk_Window tkwin, int width, int height); \/* 156 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_RestackWindow	/usr/include/tkDecls.h	/^    int (*tk_RestackWindow) (Tk_Window tkwin, int aboveBelow, Tk_Window other); \/* 157 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_RestoreSavedOptions	/usr/include/tkDecls.h	/^    void (*tk_RestoreSavedOptions) (Tk_SavedOptions * savePtr); \/* 213 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_RestrictEvents	/usr/include/tkDecls.h	/^    Tk_RestrictProc * (*tk_RestrictEvents) (Tk_RestrictProc * proc, ClientData arg, ClientData * prevArgPtr); \/* 158 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SafeInit	/usr/include/tkDecls.h	/^    int (*tk_SafeInit) (Tcl_Interp * interp); \/* 159 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetAppName	/usr/include/tkDecls.h	/^    CONST char * (*tk_SetAppName) (Tk_Window tkwin, CONST char * name); \/* 160 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetBackgroundFromBorder	/usr/include/tkDecls.h	/^    void (*tk_SetBackgroundFromBorder) (Tk_Window tkwin, Tk_3DBorder border); \/* 161 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetCaretPos	/usr/include/tkDecls.h	/^    void (*tk_SetCaretPos) (Tk_Window tkwin, int x, int y, int height); \/* 245 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetClass	/usr/include/tkDecls.h	/^    void (*tk_SetClass) (Tk_Window tkwin, CONST char * className); \/* 162 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetClassProcs	/usr/include/tkDecls.h	/^    void (*tk_SetClassProcs) (Tk_Window tkwin, Tk_ClassProcs * procs, ClientData instanceData); \/* 242 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetGrid	/usr/include/tkDecls.h	/^    void (*tk_SetGrid) (Tk_Window tkwin, int reqWidth, int reqHeight, int gridWidth, int gridHeight); \/* 163 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetInternalBorder	/usr/include/tkDecls.h	/^    void (*tk_SetInternalBorder) (Tk_Window tkwin, int width); \/* 164 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetInternalBorderEx	/usr/include/tkDecls.h	/^    void (*tk_SetInternalBorderEx) (Tk_Window tkwin, int left, int right, int top, int bottom); \/* 243 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetMinimumRequestSize	/usr/include/tkDecls.h	/^    void (*tk_SetMinimumRequestSize) (Tk_Window tkwin, int minWidth, int minHeight); \/* 244 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetOptions	/usr/include/tkDecls.h	/^    int (*tk_SetOptions) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, int objc, Tcl_Obj *CONST objv[], Tk_Window tkwin, Tk_SavedOptions * savePtr, int * maskPtr); \/* 214 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetTSOrigin	/usr/include/tkDecls.h	/^    void (*tk_SetTSOrigin) (Tk_Window tkwin, GC gc, int x, int y); \/* 227 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowBackground	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBackground) (Tk_Window tkwin, unsigned long pixel); \/* 165 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowBackgroundPixmap	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBackgroundPixmap) (Tk_Window tkwin, Pixmap pixmap); \/* 166 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowBorder	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBorder) (Tk_Window tkwin, unsigned long pixel); \/* 167 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowBorderPixmap	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBorderPixmap) (Tk_Window tkwin, Pixmap pixmap); \/* 169 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowBorderWidth	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBorderWidth) (Tk_Window tkwin, int width); \/* 168 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowColormap	/usr/include/tkDecls.h	/^    void (*tk_SetWindowColormap) (Tk_Window tkwin, Colormap colormap); \/* 170 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SetWindowVisual	/usr/include/tkDecls.h	/^    int (*tk_SetWindowVisual) (Tk_Window tkwin, Visual * visual, int depth, Colormap colormap); \/* 171 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SizeOfBitmap	/usr/include/tkDecls.h	/^    void (*tk_SizeOfBitmap) (Display * display, Pixmap bitmap, int * widthPtr, int * heightPtr); \/* 172 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_SizeOfImage	/usr/include/tkDecls.h	/^    void (*tk_SizeOfImage) (Tk_Image image, int * widthPtr, int * heightPtr); \/* 173 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_StrictMotif	/usr/include/tkDecls.h	/^    int (*tk_StrictMotif) (Tk_Window tkwin); \/* 174 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_TextLayoutToPostscript	/usr/include/tkDecls.h	/^    void (*tk_TextLayoutToPostscript) (Tcl_Interp * interp, Tk_TextLayout layout); \/* 175 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_TextWidth	/usr/include/tkDecls.h	/^    int (*tk_TextWidth) (Tk_Font font, CONST char * str, int numBytes); \/* 176 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UndefineCursor	/usr/include/tkDecls.h	/^    void (*tk_UndefineCursor) (Tk_Window window); \/* 177 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UnderlineChars	/usr/include/tkDecls.h	/^    void (*tk_UnderlineChars) (Display * display, Drawable drawable, GC gc, Tk_Font tkfont, CONST char * source, int x, int y, int firstByte, int lastByte); \/* 178 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UnderlineTextLayout	/usr/include/tkDecls.h	/^    void (*tk_UnderlineTextLayout) (Display * display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int underline); \/* 179 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_Ungrab	/usr/include/tkDecls.h	/^    void (*tk_Ungrab) (Tk_Window tkwin); \/* 180 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UnmaintainGeometry	/usr/include/tkDecls.h	/^    void (*tk_UnmaintainGeometry) (Tk_Window slave, Tk_Window master); \/* 181 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UnmapWindow	/usr/include/tkDecls.h	/^    void (*tk_UnmapWindow) (Tk_Window tkwin); \/* 182 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UnsetGrid	/usr/include/tkDecls.h	/^    void (*tk_UnsetGrid) (Tk_Window tkwin); \/* 183 *\/$/;"	m	struct:TkStubs	access:public
TkStubs::tk_UpdatePointer	/usr/include/tkDecls.h	/^    void (*tk_UpdatePointer) (Tk_Window tkwin, int x, int y, int state); \/* 184 *\/$/;"	m	struct:TkStubs	access:public
Tk_3DBorder	/usr/include/tk.h	/^typedef struct Tk_3DBorder_ *Tk_3DBorder;$/;"	t	typeref:struct:Tk_3DBorder_
Tk_3DBorderColor	/usr/include/tkDecls.h	/^#define Tk_3DBorderColor /;"	d
Tk_3DBorderColor	/usr/include/tkDecls.h	/^EXTERN XColor *		Tk_3DBorderColor (Tk_3DBorder border);$/;"	p	signature:(Tk_3DBorder border)
Tk_3DBorderColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_3DBorderColor_TCL_DECLARED$/;"	d
Tk_3DBorderGC	/usr/include/tkDecls.h	/^#define Tk_3DBorderGC /;"	d
Tk_3DBorderGC	/usr/include/tkDecls.h	/^EXTERN GC		Tk_3DBorderGC (Tk_Window tkwin, Tk_3DBorder border, $/;"	p	signature:(Tk_Window tkwin, Tk_3DBorder border, int which)
Tk_3DBorderGC_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_3DBorderGC_TCL_DECLARED$/;"	d
Tk_3DHorizontalBevel	/usr/include/tkDecls.h	/^#define Tk_3DHorizontalBevel /;"	d
Tk_3DHorizontalBevel	/usr/include/tkDecls.h	/^EXTERN void		Tk_3DHorizontalBevel (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftIn, int rightIn, int topBevel, int relief)
Tk_3DHorizontalBevel_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_3DHorizontalBevel_TCL_DECLARED$/;"	d
Tk_3DVerticalBevel	/usr/include/tkDecls.h	/^#define Tk_3DVerticalBevel /;"	d
Tk_3DVerticalBevel	/usr/include/tkDecls.h	/^EXTERN void		Tk_3DVerticalBevel (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftBevel, int relief)
Tk_3DVerticalBevel_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_3DVerticalBevel_TCL_DECLARED$/;"	d
Tk_AddOption	/usr/include/tkDecls.h	/^#define Tk_AddOption /;"	d
Tk_AddOption	/usr/include/tkDecls.h	/^EXTERN void		Tk_AddOption (Tk_Window tkwin, CONST char * name, $/;"	p	signature:(Tk_Window tkwin, CONST char * name, CONST char * value, int priority)
Tk_AddOption_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_AddOption_TCL_DECLARED$/;"	d
Tk_Alloc3DBorderFromObj	/usr/include/tkDecls.h	/^#define Tk_Alloc3DBorderFromObj /;"	d
Tk_Alloc3DBorderFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_3DBorder	Tk_Alloc3DBorderFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_Alloc3DBorderFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Alloc3DBorderFromObj_TCL_DECLARED$/;"	d
Tk_AllocBitmapFromObj	/usr/include/tkDecls.h	/^#define Tk_AllocBitmapFromObj /;"	d
Tk_AllocBitmapFromObj	/usr/include/tkDecls.h	/^EXTERN Pixmap		Tk_AllocBitmapFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_AllocBitmapFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_AllocBitmapFromObj_TCL_DECLARED$/;"	d
Tk_AllocColorFromObj	/usr/include/tkDecls.h	/^#define Tk_AllocColorFromObj /;"	d
Tk_AllocColorFromObj	/usr/include/tkDecls.h	/^EXTERN XColor *		Tk_AllocColorFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_AllocColorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_AllocColorFromObj_TCL_DECLARED$/;"	d
Tk_AllocCursorFromObj	/usr/include/tkDecls.h	/^#define Tk_AllocCursorFromObj /;"	d
Tk_AllocCursorFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_Cursor	Tk_AllocCursorFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_AllocCursorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_AllocCursorFromObj_TCL_DECLARED$/;"	d
Tk_AllocFontFromObj	/usr/include/tkDecls.h	/^#define Tk_AllocFontFromObj /;"	d
Tk_AllocFontFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_Font		Tk_AllocFontFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_AllocFontFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_AllocFontFromObj_TCL_DECLARED$/;"	d
Tk_AllocStyleFromObj	/usr/include/tkDecls.h	/^#define Tk_AllocStyleFromObj /;"	d
Tk_AllocStyleFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_Style		Tk_AllocStyleFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr)
Tk_AllocStyleFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_AllocStyleFromObj_TCL_DECLARED$/;"	d
Tk_Anchor	/usr/include/tk.h	/^} Tk_Anchor;$/;"	t	typeref:enum:__anon127
Tk_ArgvInfo	/usr/include/tk.h	/^} Tk_ArgvInfo;$/;"	t	typeref:struct:__anon125
Tk_AttachHWND	/usr/include/tkPlatDecls.h	/^#define Tk_AttachHWND /;"	d
Tk_AttachHWND	/usr/include/tkPlatDecls.h	/^EXTERN Window		Tk_AttachHWND (Tk_Window tkwin, HWND hwnd);$/;"	p	signature:(Tk_Window tkwin, HWND hwnd)
Tk_AttachHWND_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_AttachHWND_TCL_DECLARED$/;"	d
Tk_Attributes	/usr/include/tk.h	/^#define Tk_Attributes(/;"	d
Tk_BackgroundError	/usr/include/tk.h	/^#define Tk_BackgroundError	/;"	d
Tk_BindEvent	/usr/include/tkDecls.h	/^#define Tk_BindEvent /;"	d
Tk_BindEvent	/usr/include/tkDecls.h	/^EXTERN void		Tk_BindEvent (Tk_BindingTable bindingTable, $/;"	p	signature:(Tk_BindingTable bindingTable, XEvent * eventPtr, Tk_Window tkwin, int numObjects, ClientData * objectPtr)
Tk_BindEvent_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_BindEvent_TCL_DECLARED$/;"	d
Tk_BindingTable	/usr/include/tk.h	/^typedef struct Tk_BindingTable_ *Tk_BindingTable;$/;"	t	typeref:struct:Tk_BindingTable_
Tk_CancelIdleCall	/usr/include/tk.h	/^#define Tk_CancelIdleCall	/;"	d
Tk_Canvas	/usr/include/tk.h	/^typedef struct Tk_Canvas_ *Tk_Canvas;$/;"	t	typeref:struct:Tk_Canvas_
Tk_CanvasDrawableCoords	/usr/include/tkDecls.h	/^#define Tk_CanvasDrawableCoords /;"	d
Tk_CanvasDrawableCoords	/usr/include/tkDecls.h	/^EXTERN void		Tk_CanvasDrawableCoords (Tk_Canvas canvas, double x, $/;"	p	signature:(Tk_Canvas canvas, double x, double y, short * drawableXPtr, short * drawableYPtr)
Tk_CanvasDrawableCoords_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasDrawableCoords_TCL_DECLARED$/;"	d
Tk_CanvasEventuallyRedraw	/usr/include/tkDecls.h	/^#define Tk_CanvasEventuallyRedraw /;"	d
Tk_CanvasEventuallyRedraw	/usr/include/tkDecls.h	/^EXTERN void		Tk_CanvasEventuallyRedraw (Tk_Canvas canvas, int x1, $/;"	p	signature:(Tk_Canvas canvas, int x1, int y1, int x2, int y2)
Tk_CanvasEventuallyRedraw_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasEventuallyRedraw_TCL_DECLARED$/;"	d
Tk_CanvasGetCoord	/usr/include/tkDecls.h	/^#define Tk_CanvasGetCoord /;"	d
Tk_CanvasGetCoord	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasGetCoord (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, CONST char * str, double * doublePtr)
Tk_CanvasGetCoordFromObj	/usr/include/tkDecls.h	/^#define Tk_CanvasGetCoordFromObj /;"	d
Tk_CanvasGetCoordFromObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasGetCoordFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, Tcl_Obj * obj, double * doublePtr)
Tk_CanvasGetCoordFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasGetCoordFromObj_TCL_DECLARED$/;"	d
Tk_CanvasGetCoord_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasGetCoord_TCL_DECLARED$/;"	d
Tk_CanvasGetTextInfo	/usr/include/tkDecls.h	/^#define Tk_CanvasGetTextInfo /;"	d
Tk_CanvasGetTextInfo	/usr/include/tkDecls.h	/^EXTERN Tk_CanvasTextInfo * Tk_CanvasGetTextInfo (Tk_Canvas canvas);$/;"	p	signature:(Tk_Canvas canvas)
Tk_CanvasGetTextInfo_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasGetTextInfo_TCL_DECLARED$/;"	d
Tk_CanvasPsBitmap	/usr/include/tkDecls.h	/^#define Tk_CanvasPsBitmap /;"	d
Tk_CanvasPsBitmap	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasPsBitmap (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, Pixmap bitmap, int x, int y, int width, int height)
Tk_CanvasPsBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsBitmap_TCL_DECLARED$/;"	d
Tk_CanvasPsColor	/usr/include/tkDecls.h	/^#define Tk_CanvasPsColor /;"	d
Tk_CanvasPsColor	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasPsColor (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, XColor * colorPtr)
Tk_CanvasPsColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsColor_TCL_DECLARED$/;"	d
Tk_CanvasPsFont	/usr/include/tkDecls.h	/^#define Tk_CanvasPsFont /;"	d
Tk_CanvasPsFont	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasPsFont (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, Tk_Font font)
Tk_CanvasPsFont_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsFont_TCL_DECLARED$/;"	d
Tk_CanvasPsOutline	/usr/include/tkDecls.h	/^#define Tk_CanvasPsOutline /;"	d
Tk_CanvasPsOutline	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasPsOutline (Tk_Canvas canvas, Tk_Item * item, $/;"	p	signature:(Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline)
Tk_CanvasPsOutline_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsOutline_TCL_DECLARED$/;"	d
Tk_CanvasPsPath	/usr/include/tkDecls.h	/^#define Tk_CanvasPsPath /;"	d
Tk_CanvasPsPath	/usr/include/tkDecls.h	/^EXTERN void		Tk_CanvasPsPath (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, double * coordPtr, int numPoints)
Tk_CanvasPsPath_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsPath_TCL_DECLARED$/;"	d
Tk_CanvasPsStipple	/usr/include/tkDecls.h	/^#define Tk_CanvasPsStipple /;"	d
Tk_CanvasPsStipple	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasPsStipple (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Canvas canvas, Pixmap bitmap)
Tk_CanvasPsStipple_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsStipple_TCL_DECLARED$/;"	d
Tk_CanvasPsY	/usr/include/tkDecls.h	/^#define Tk_CanvasPsY /;"	d
Tk_CanvasPsY	/usr/include/tkDecls.h	/^EXTERN double		Tk_CanvasPsY (Tk_Canvas canvas, double y);$/;"	p	signature:(Tk_Canvas canvas, double y)
Tk_CanvasPsY_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasPsY_TCL_DECLARED$/;"	d
Tk_CanvasSetOffset	/usr/include/tkDecls.h	/^#define Tk_CanvasSetOffset /;"	d
Tk_CanvasSetOffset	/usr/include/tkDecls.h	/^EXTERN void		Tk_CanvasSetOffset (Tk_Canvas canvas, GC gc, $/;"	p	signature:(Tk_Canvas canvas, GC gc, Tk_TSOffset * offset)
Tk_CanvasSetOffset_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasSetOffset_TCL_DECLARED$/;"	d
Tk_CanvasSetStippleOrigin	/usr/include/tkDecls.h	/^#define Tk_CanvasSetStippleOrigin /;"	d
Tk_CanvasSetStippleOrigin	/usr/include/tkDecls.h	/^EXTERN void		Tk_CanvasSetStippleOrigin (Tk_Canvas canvas, GC gc);$/;"	p	signature:(Tk_Canvas canvas, GC gc)
Tk_CanvasSetStippleOrigin_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasSetStippleOrigin_TCL_DECLARED$/;"	d
Tk_CanvasTagsParseProc	/usr/include/tkDecls.h	/^#define Tk_CanvasTagsParseProc /;"	d
Tk_CanvasTagsParseProc	/usr/include/tkDecls.h	/^EXTERN int		Tk_CanvasTagsParseProc (ClientData clientData, $/;"	p	signature:(ClientData clientData, Tcl_Interp * interp, Tk_Window tkwin, CONST char * value, char * widgRec, int offset)
Tk_CanvasTagsParseProc_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasTagsParseProc_TCL_DECLARED$/;"	d
Tk_CanvasTagsPrintProc	/usr/include/tkDecls.h	/^#define Tk_CanvasTagsPrintProc /;"	d
Tk_CanvasTagsPrintProc	/usr/include/tkDecls.h	/^EXTERN char *		Tk_CanvasTagsPrintProc (ClientData clientData, $/;"	p	signature:(ClientData clientData, Tk_Window tkwin, char * widgRec, int offset, Tcl_FreeProc ** freeProcPtr)
Tk_CanvasTagsPrintProc_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasTagsPrintProc_TCL_DECLARED$/;"	d
Tk_CanvasTextInfo	/usr/include/tk.h	/^typedef struct Tk_CanvasTextInfo {$/;"	s
Tk_CanvasTextInfo	/usr/include/tk.h	/^} Tk_CanvasTextInfo;$/;"	t	typeref:struct:Tk_CanvasTextInfo
Tk_CanvasTextInfo::anchorItemPtr	/usr/include/tk.h	/^    Tk_Item *anchorItemPtr;	\/* Item corresponding to "selectAnchor": not$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::cursorOn	/usr/include/tk.h	/^    int cursorOn;		\/* Non-zero means that an insertion cursor$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::focusItemPtr	/usr/include/tk.h	/^    Tk_Item *focusItemPtr;	\/* Item that currently has the input focus, or$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::gotFocus	/usr/include/tk.h	/^    int gotFocus;		\/* Non-zero means that the canvas widget has$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::insertBorder	/usr/include/tk.h	/^    Tk_3DBorder insertBorder;	\/* Used to draw vertical bar for insertion$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::insertBorderWidth	/usr/include/tk.h	/^    int insertBorderWidth;	\/* Width of 3-D border around insert cursor.$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::insertWidth	/usr/include/tk.h	/^    int insertWidth;		\/* Total width of insertion cursor. Read-only$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selBorder	/usr/include/tk.h	/^    Tk_3DBorder selBorder;	\/* Border and background for selected$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selBorderWidth	/usr/include/tk.h	/^    int selBorderWidth;		\/* Width of border around selection. Read-only$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selFgColorPtr	/usr/include/tk.h	/^    XColor *selFgColorPtr;	\/* Foreground color for selected text.$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selItemPtr	/usr/include/tk.h	/^    Tk_Item *selItemPtr;	\/* Pointer to selected item. NULL means$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selectAnchor	/usr/include/tk.h	/^    int selectAnchor;		\/* Character index of fixed end of selection$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selectFirst	/usr/include/tk.h	/^    int selectFirst;		\/* Character index of first selected$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTextInfo::selectLast	/usr/include/tk.h	/^    int selectLast;		\/* Character index of last selected character.$/;"	m	struct:Tk_CanvasTextInfo	access:public
Tk_CanvasTkwin	/usr/include/tkDecls.h	/^#define Tk_CanvasTkwin /;"	d
Tk_CanvasTkwin	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_CanvasTkwin (Tk_Canvas canvas);$/;"	p	signature:(Tk_Canvas canvas)
Tk_CanvasTkwin_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasTkwin_TCL_DECLARED$/;"	d
Tk_CanvasWindowCoords	/usr/include/tkDecls.h	/^#define Tk_CanvasWindowCoords /;"	d
Tk_CanvasWindowCoords	/usr/include/tkDecls.h	/^EXTERN void		Tk_CanvasWindowCoords (Tk_Canvas canvas, double x, $/;"	p	signature:(Tk_Canvas canvas, double x, double y, short * screenXPtr, short * screenYPtr)
Tk_CanvasWindowCoords_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CanvasWindowCoords_TCL_DECLARED$/;"	d
Tk_ChangeOutlineGC	/usr/include/tkDecls.h	/^#define Tk_ChangeOutlineGC /;"	d
Tk_ChangeOutlineGC	/usr/include/tkDecls.h	/^EXTERN int		Tk_ChangeOutlineGC (Tk_Canvas canvas, Tk_Item * item, $/;"	p	signature:(Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline)
Tk_ChangeOutlineGC_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ChangeOutlineGC_TCL_DECLARED$/;"	d
Tk_ChangeWindowAttributes	/usr/include/tkDecls.h	/^#define Tk_ChangeWindowAttributes /;"	d
Tk_ChangeWindowAttributes	/usr/include/tkDecls.h	/^EXTERN void		Tk_ChangeWindowAttributes (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, unsigned long valueMask, XSetWindowAttributes * attsPtr)
Tk_ChangeWindowAttributes_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ChangeWindowAttributes_TCL_DECLARED$/;"	d
Tk_Changes	/usr/include/tk.h	/^#define Tk_Changes(/;"	d
Tk_CharBbox	/usr/include/tkDecls.h	/^#define Tk_CharBbox /;"	d
Tk_CharBbox	/usr/include/tkDecls.h	/^EXTERN int		Tk_CharBbox (Tk_TextLayout layout, int index, $/;"	p	signature:(Tk_TextLayout layout, int index, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr)
Tk_CharBbox_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CharBbox_TCL_DECLARED$/;"	d
Tk_Class	/usr/include/tk.h	/^#define Tk_Class(/;"	d
Tk_ClassModalProc	/usr/include/tk.h	/^typedef void (Tk_ClassModalProc) _ANSI_ARGS_((Tk_Window tkwin,$/;"	t
Tk_ClassProcs	/usr/include/tk.h	/^typedef struct Tk_ClassProcs {$/;"	s
Tk_ClassProcs	/usr/include/tk.h	/^} Tk_ClassProcs;$/;"	t	typeref:struct:Tk_ClassProcs
Tk_ClassProcs::createProc	/usr/include/tk.h	/^    Tk_ClassCreateProc *createProc;$/;"	m	struct:Tk_ClassProcs	access:public
Tk_ClassProcs::modalProc	/usr/include/tk.h	/^    Tk_ClassModalProc *modalProc;$/;"	m	struct:Tk_ClassProcs	access:public
Tk_ClassProcs::size	/usr/include/tk.h	/^    unsigned int size;$/;"	m	struct:Tk_ClassProcs	access:public
Tk_ClassProcs::worldChangedProc	/usr/include/tk.h	/^    Tk_ClassWorldChangedProc *worldChangedProc;$/;"	m	struct:Tk_ClassProcs	access:public
Tk_ClassWorldChangedProc	/usr/include/tk.h	/^typedef void (Tk_ClassWorldChangedProc) _ANSI_ARGS_((ClientData instanceData));$/;"	t
Tk_ClearSelection	/usr/include/tkDecls.h	/^#define Tk_ClearSelection /;"	d
Tk_ClearSelection	/usr/include/tkDecls.h	/^EXTERN void		Tk_ClearSelection (Tk_Window tkwin, Atom selection);$/;"	p	signature:(Tk_Window tkwin, Atom selection)
Tk_ClearSelection_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ClearSelection_TCL_DECLARED$/;"	d
Tk_ClientMessageProc	/usr/include/tk.h	/^typedef int (Tk_ClientMessageProc) _ANSI_ARGS_((Tk_Window tkwin,$/;"	t
Tk_ClipboardAppend	/usr/include/tkDecls.h	/^#define Tk_ClipboardAppend /;"	d
Tk_ClipboardAppend	/usr/include/tkDecls.h	/^EXTERN int		Tk_ClipboardAppend (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Atom target, Atom format, char* buffer)
Tk_ClipboardAppend_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ClipboardAppend_TCL_DECLARED$/;"	d
Tk_ClipboardClear	/usr/include/tkDecls.h	/^#define Tk_ClipboardClear /;"	d
Tk_ClipboardClear	/usr/include/tkDecls.h	/^EXTERN int		Tk_ClipboardClear (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin)
Tk_ClipboardClear_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ClipboardClear_TCL_DECLARED$/;"	d
Tk_CollapseMotionEvents	/usr/include/tkDecls.h	/^#define Tk_CollapseMotionEvents /;"	d
Tk_CollapseMotionEvents	/usr/include/tkDecls.h	/^EXTERN int		Tk_CollapseMotionEvents (Display * display, $/;"	p	signature:(Display * display, int collapse)
Tk_CollapseMotionEvents_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CollapseMotionEvents_TCL_DECLARED$/;"	d
Tk_Colormap	/usr/include/tk.h	/^#define Tk_Colormap(/;"	d
Tk_ComputeTextLayout	/usr/include/tkDecls.h	/^#define Tk_ComputeTextLayout /;"	d
Tk_ComputeTextLayout	/usr/include/tkDecls.h	/^EXTERN Tk_TextLayout	Tk_ComputeTextLayout (Tk_Font font, CONST char * str, $/;"	p	signature:(Tk_Font font, CONST char * str, int numChars, int wrapLength, Tk_Justify justify, int flags, int * widthPtr, int * heightPtr)
Tk_ComputeTextLayout_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ComputeTextLayout_TCL_DECLARED$/;"	d
Tk_ConfigOutlineGC	/usr/include/tkDecls.h	/^#define Tk_ConfigOutlineGC /;"	d
Tk_ConfigOutlineGC	/usr/include/tkDecls.h	/^EXTERN int		Tk_ConfigOutlineGC (XGCValues * gcValues, $/;"	p	signature:(XGCValues * gcValues, Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline)
Tk_ConfigOutlineGC_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ConfigOutlineGC_TCL_DECLARED$/;"	d
Tk_ConfigSpec	/usr/include/tk.h	/^typedef struct Tk_ConfigSpec {$/;"	s
Tk_ConfigSpec	/usr/include/tk.h	/^} Tk_ConfigSpec;$/;"	t	typeref:struct:Tk_ConfigSpec
Tk_ConfigSpec::argvName	/usr/include/tk.h	/^    char *argvName;		\/* Switch used to specify option in argv. NULL$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::customPtr	/usr/include/tk.h	/^    Tk_CustomOption *customPtr;	\/* If type is TK_CONFIG_CUSTOM then this is a$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::dbClass	/usr/include/tk.h	/^    Tk_Uid dbClass;		\/* Class for option in database. *\/$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::dbName	/usr/include/tk.h	/^    Tk_Uid dbName;		\/* Name for option in option database. *\/$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::defValue	/usr/include/tk.h	/^    Tk_Uid defValue;		\/* Default value for option if not specified$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::offset	/usr/include/tk.h	/^    int offset;			\/* Where in widget record to store value; use$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::specFlags	/usr/include/tk.h	/^    int specFlags;		\/* Any combination of the values defined$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigSpec::type	/usr/include/tk.h	/^    int type;			\/* Type of option, such as TK_CONFIG_COLOR;$/;"	m	struct:Tk_ConfigSpec	access:public
Tk_ConfigTypes	/usr/include/tk.h	/^} Tk_ConfigTypes;$/;"	t	typeref:enum:__anon124
Tk_ConfigureInfo	/usr/include/tkDecls.h	/^#define Tk_ConfigureInfo /;"	d
Tk_ConfigureInfo	/usr/include/tkDecls.h	/^EXTERN int		Tk_ConfigureInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, char * widgRec, CONST char * argvName, int flags)
Tk_ConfigureInfo_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ConfigureInfo_TCL_DECLARED$/;"	d
Tk_ConfigureValue	/usr/include/tkDecls.h	/^#define Tk_ConfigureValue /;"	d
Tk_ConfigureValue	/usr/include/tkDecls.h	/^EXTERN int		Tk_ConfigureValue (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, char * widgRec, CONST char * argvName, int flags)
Tk_ConfigureValue_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ConfigureValue_TCL_DECLARED$/;"	d
Tk_ConfigureWidget	/usr/include/tkDecls.h	/^#define Tk_ConfigureWidget /;"	d
Tk_ConfigureWidget	/usr/include/tkDecls.h	/^EXTERN int		Tk_ConfigureWidget (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, int argc, CONST84 char ** argv, char * widgRec, int flags)
Tk_ConfigureWidget_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ConfigureWidget_TCL_DECLARED$/;"	d
Tk_ConfigureWindow	/usr/include/tkDecls.h	/^#define Tk_ConfigureWindow /;"	d
Tk_ConfigureWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_ConfigureWindow (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, unsigned int valueMask, XWindowChanges * valuePtr)
Tk_ConfigureWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ConfigureWindow_TCL_DECLARED$/;"	d
Tk_CoordsToWindow	/usr/include/tkDecls.h	/^#define Tk_CoordsToWindow /;"	d
Tk_CoordsToWindow	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_CoordsToWindow (int rootX, int rootY, $/;"	p	signature:(int rootX, int rootY, Tk_Window tkwin)
Tk_CoordsToWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CoordsToWindow_TCL_DECLARED$/;"	d
Tk_CreateAnonymousWindow	/usr/include/tkDecls.h	/^#define Tk_CreateAnonymousWindow /;"	d
Tk_CreateAnonymousWindow	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_CreateAnonymousWindow (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window parent, CONST char * screenName)
Tk_CreateAnonymousWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateAnonymousWindow_TCL_DECLARED$/;"	d
Tk_CreateBinding	/usr/include/tkDecls.h	/^#define Tk_CreateBinding /;"	d
Tk_CreateBinding	/usr/include/tkDecls.h	/^EXTERN unsigned long	Tk_CreateBinding (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr, CONST char * command, int append)
Tk_CreateBindingTable	/usr/include/tkDecls.h	/^#define Tk_CreateBindingTable /;"	d
Tk_CreateBindingTable	/usr/include/tkDecls.h	/^EXTERN Tk_BindingTable	Tk_CreateBindingTable (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tk_CreateBindingTable_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateBindingTable_TCL_DECLARED$/;"	d
Tk_CreateBinding_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateBinding_TCL_DECLARED$/;"	d
Tk_CreateClientMessageHandler	/usr/include/tkDecls.h	/^#define Tk_CreateClientMessageHandler /;"	d
Tk_CreateClientMessageHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateClientMessageHandler ($/;"	p	signature:( Tk_ClientMessageProc * proc)
Tk_CreateClientMessageHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateClientMessageHandler_TCL_DECLARED$/;"	d
Tk_CreateConsoleWindow	/usr/include/tkDecls.h	/^#define Tk_CreateConsoleWindow /;"	d
Tk_CreateConsoleWindow	/usr/include/tkDecls.h	/^EXTERN int		Tk_CreateConsoleWindow (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tk_CreateConsoleWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateConsoleWindow_TCL_DECLARED$/;"	d
Tk_CreateErrorHandler	/usr/include/tkDecls.h	/^#define Tk_CreateErrorHandler /;"	d
Tk_CreateErrorHandler	/usr/include/tkDecls.h	/^EXTERN Tk_ErrorHandler	Tk_CreateErrorHandler (Display * display, int errNum, $/;"	p	signature:(Display * display, int errNum, int request, int minorCode, Tk_ErrorProc * errorProc, ClientData clientData)
Tk_CreateErrorHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateErrorHandler_TCL_DECLARED$/;"	d
Tk_CreateEventHandler	/usr/include/tkDecls.h	/^#define Tk_CreateEventHandler /;"	d
Tk_CreateEventHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateEventHandler (Tk_Window token, $/;"	p	signature:(Tk_Window token, unsigned long mask, Tk_EventProc * proc, ClientData clientData)
Tk_CreateEventHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateEventHandler_TCL_DECLARED$/;"	d
Tk_CreateFileHandler	/usr/include/tk.h	/^#define Tk_CreateFileHandler	/;"	d
Tk_CreateGenericHandler	/usr/include/tkDecls.h	/^#define Tk_CreateGenericHandler /;"	d
Tk_CreateGenericHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateGenericHandler (Tk_GenericProc * proc, $/;"	p	signature:(Tk_GenericProc * proc, ClientData clientData)
Tk_CreateGenericHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateGenericHandler_TCL_DECLARED$/;"	d
Tk_CreateImageType	/usr/include/tk.h	/^#define Tk_CreateImageType /;"	d
Tk_CreateImageType	/usr/include/tkDecls.h	/^#define Tk_CreateImageType /;"	d
Tk_CreateImageType	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateImageType (Tk_ImageType * typePtr);$/;"	p	signature:(Tk_ImageType * typePtr)
Tk_CreateImageType_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateImageType_TCL_DECLARED$/;"	d
Tk_CreateItemType	/usr/include/tkDecls.h	/^#define Tk_CreateItemType /;"	d
Tk_CreateItemType	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateItemType (Tk_ItemType * typePtr);$/;"	p	signature:(Tk_ItemType * typePtr)
Tk_CreateItemType_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateItemType_TCL_DECLARED$/;"	d
Tk_CreateOldImageType	/usr/include/tkDecls.h	/^#define Tk_CreateOldImageType /;"	d
Tk_CreateOldImageType	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateOldImageType (Tk_ImageType * typePtr);$/;"	p	signature:(Tk_ImageType * typePtr)
Tk_CreateOldImageType_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateOldImageType_TCL_DECLARED$/;"	d
Tk_CreateOldPhotoImageFormat	/usr/include/tkDecls.h	/^#define Tk_CreateOldPhotoImageFormat /;"	d
Tk_CreateOldPhotoImageFormat	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateOldPhotoImageFormat ($/;"	p	signature:( Tk_PhotoImageFormat * formatPtr)
Tk_CreateOldPhotoImageFormat_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateOldPhotoImageFormat_TCL_DECLARED$/;"	d
Tk_CreateOptionTable	/usr/include/tkDecls.h	/^#define Tk_CreateOptionTable /;"	d
Tk_CreateOptionTable	/usr/include/tkDecls.h	/^EXTERN Tk_OptionTable	Tk_CreateOptionTable (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST Tk_OptionSpec * templatePtr)
Tk_CreateOptionTable_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateOptionTable_TCL_DECLARED$/;"	d
Tk_CreateOutline	/usr/include/tkDecls.h	/^#define Tk_CreateOutline /;"	d
Tk_CreateOutline	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateOutline (Tk_Outline * outline);$/;"	p	signature:(Tk_Outline * outline)
Tk_CreateOutline_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateOutline_TCL_DECLARED$/;"	d
Tk_CreatePhotoImageFormat	/usr/include/tk.h	/^#define Tk_CreatePhotoImageFormat /;"	d
Tk_CreatePhotoImageFormat	/usr/include/tkDecls.h	/^#define Tk_CreatePhotoImageFormat /;"	d
Tk_CreatePhotoImageFormat	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreatePhotoImageFormat ($/;"	p	signature:( Tk_PhotoImageFormat * formatPtr)
Tk_CreatePhotoImageFormat_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreatePhotoImageFormat_TCL_DECLARED$/;"	d
Tk_CreateSelHandler	/usr/include/tkDecls.h	/^#define Tk_CreateSelHandler /;"	d
Tk_CreateSelHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateSelHandler (Tk_Window tkwin, Atom selection, $/;"	p	signature:(Tk_Window tkwin, Atom selection, Atom target, Tk_SelectionProc * proc, ClientData clientData, Atom format)
Tk_CreateSelHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateSelHandler_TCL_DECLARED$/;"	d
Tk_CreateSmoothMethod	/usr/include/tkDecls.h	/^#define Tk_CreateSmoothMethod /;"	d
Tk_CreateSmoothMethod	/usr/include/tkDecls.h	/^EXTERN void		Tk_CreateSmoothMethod (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_SmoothMethod * method)
Tk_CreateSmoothMethod_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateSmoothMethod_TCL_DECLARED$/;"	d
Tk_CreateStyle	/usr/include/tkDecls.h	/^#define Tk_CreateStyle /;"	d
Tk_CreateStyle	/usr/include/tkDecls.h	/^EXTERN Tk_Style		Tk_CreateStyle (CONST char * name, $/;"	p	signature:(CONST char * name, Tk_StyleEngine engine, ClientData clientData)
Tk_CreateStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateStyle_TCL_DECLARED$/;"	d
Tk_CreateTimerHandler	/usr/include/tk.h	/^#define Tk_CreateTimerHandler	/;"	d
Tk_CreateWindow	/usr/include/tkDecls.h	/^#define Tk_CreateWindow /;"	d
Tk_CreateWindow	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_CreateWindow (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window parent, CONST char * name, CONST char * screenName)
Tk_CreateWindowFromPath	/usr/include/tkDecls.h	/^#define Tk_CreateWindowFromPath /;"	d
Tk_CreateWindowFromPath	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_CreateWindowFromPath (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * pathName, CONST char * screenName)
Tk_CreateWindowFromPath_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateWindowFromPath_TCL_DECLARED$/;"	d
Tk_CreateWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_CreateWindow_TCL_DECLARED$/;"	d
Tk_Cursor	/usr/include/tk.h	/^typedef struct Tk_Cursor_ *Tk_Cursor;$/;"	t	typeref:struct:Tk_Cursor_
Tk_CustomOption	/usr/include/tk.h	/^typedef struct Tk_CustomOption {$/;"	s
Tk_CustomOption	/usr/include/tk.h	/^} Tk_CustomOption;$/;"	t	typeref:struct:Tk_CustomOption
Tk_CustomOption::clientData	/usr/include/tk.h	/^    ClientData clientData;	\/* Arbitrary one-word value used by option$/;"	m	struct:Tk_CustomOption	access:public
Tk_CustomOption::parseProc	/usr/include/tk.h	/^    Tk_OptionParseProc *parseProc;$/;"	m	struct:Tk_CustomOption	access:public
Tk_CustomOption::printProc	/usr/include/tk.h	/^    Tk_OptionPrintProc *printProc;$/;"	m	struct:Tk_CustomOption	access:public
Tk_CustomOptionFreeProc	/usr/include/tk.h	/^typedef void (Tk_CustomOptionFreeProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_CustomOptionGetProc	/usr/include/tk.h	/^typedef Tcl_Obj *(Tk_CustomOptionGetProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_CustomOptionRestoreProc	/usr/include/tk.h	/^typedef void (Tk_CustomOptionRestoreProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_CustomOptionSetProc	/usr/include/tk.h	/^typedef int (Tk_CustomOptionSetProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_Dash	/usr/include/tk.h	/^typedef struct Tk_Dash {$/;"	s
Tk_Dash	/usr/include/tk.h	/^} Tk_Dash;$/;"	t	typeref:struct:Tk_Dash
Tk_Dash::__anon132::array	/usr/include/tk.h	/^	char array[sizeof(char *)];$/;"	m	union:Tk_Dash::__anon132	access:public
Tk_Dash::__anon132::pt	/usr/include/tk.h	/^	char *pt;$/;"	m	union:Tk_Dash::__anon132	access:public
Tk_Dash::number	/usr/include/tk.h	/^    int number;$/;"	m	struct:Tk_Dash	access:public
Tk_Dash::pattern	/usr/include/tk.h	/^    } pattern;$/;"	m	struct:Tk_Dash	typeref:union:Tk_Dash::__anon132	access:public
Tk_DefineBitmap	/usr/include/tkDecls.h	/^#define Tk_DefineBitmap /;"	d
Tk_DefineBitmap	/usr/include/tkDecls.h	/^EXTERN int		Tk_DefineBitmap (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, CONST char * source, int width, int height)
Tk_DefineBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DefineBitmap_TCL_DECLARED$/;"	d
Tk_DefineCursor	/usr/include/tkDecls.h	/^#define Tk_DefineCursor /;"	d
Tk_DefineCursor	/usr/include/tkDecls.h	/^EXTERN void		Tk_DefineCursor (Tk_Window window, Tk_Cursor cursor);$/;"	p	signature:(Tk_Window window, Tk_Cursor cursor)
Tk_DefineCursor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DefineCursor_TCL_DECLARED$/;"	d
Tk_DeleteAllBindings	/usr/include/tkDecls.h	/^#define Tk_DeleteAllBindings /;"	d
Tk_DeleteAllBindings	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteAllBindings (Tk_BindingTable bindingTable, $/;"	p	signature:(Tk_BindingTable bindingTable, ClientData object)
Tk_DeleteAllBindings_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteAllBindings_TCL_DECLARED$/;"	d
Tk_DeleteBinding	/usr/include/tkDecls.h	/^#define Tk_DeleteBinding /;"	d
Tk_DeleteBinding	/usr/include/tkDecls.h	/^EXTERN int		Tk_DeleteBinding (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr)
Tk_DeleteBindingTable	/usr/include/tkDecls.h	/^#define Tk_DeleteBindingTable /;"	d
Tk_DeleteBindingTable	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteBindingTable (Tk_BindingTable bindingTable);$/;"	p	signature:(Tk_BindingTable bindingTable)
Tk_DeleteBindingTable_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteBindingTable_TCL_DECLARED$/;"	d
Tk_DeleteBinding_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteBinding_TCL_DECLARED$/;"	d
Tk_DeleteClientMessageHandler	/usr/include/tkDecls.h	/^#define Tk_DeleteClientMessageHandler /;"	d
Tk_DeleteClientMessageHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteClientMessageHandler ($/;"	p	signature:( Tk_ClientMessageProc * proc)
Tk_DeleteClientMessageHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteClientMessageHandler_TCL_DECLARED$/;"	d
Tk_DeleteErrorHandler	/usr/include/tkDecls.h	/^#define Tk_DeleteErrorHandler /;"	d
Tk_DeleteErrorHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteErrorHandler (Tk_ErrorHandler handler);$/;"	p	signature:(Tk_ErrorHandler handler)
Tk_DeleteErrorHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteErrorHandler_TCL_DECLARED$/;"	d
Tk_DeleteEventHandler	/usr/include/tkDecls.h	/^#define Tk_DeleteEventHandler /;"	d
Tk_DeleteEventHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteEventHandler (Tk_Window token, $/;"	p	signature:(Tk_Window token, unsigned long mask, Tk_EventProc * proc, ClientData clientData)
Tk_DeleteEventHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteEventHandler_TCL_DECLARED$/;"	d
Tk_DeleteFileHandler	/usr/include/tk.h	/^#define Tk_DeleteFileHandler	/;"	d
Tk_DeleteGenericHandler	/usr/include/tkDecls.h	/^#define Tk_DeleteGenericHandler /;"	d
Tk_DeleteGenericHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteGenericHandler (Tk_GenericProc * proc, $/;"	p	signature:(Tk_GenericProc * proc, ClientData clientData)
Tk_DeleteGenericHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteGenericHandler_TCL_DECLARED$/;"	d
Tk_DeleteImage	/usr/include/tkDecls.h	/^#define Tk_DeleteImage /;"	d
Tk_DeleteImage	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteImage (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name)
Tk_DeleteImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteImage_TCL_DECLARED$/;"	d
Tk_DeleteOptionTable	/usr/include/tkDecls.h	/^#define Tk_DeleteOptionTable /;"	d
Tk_DeleteOptionTable	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteOptionTable (Tk_OptionTable optionTable);$/;"	p	signature:(Tk_OptionTable optionTable)
Tk_DeleteOptionTable_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteOptionTable_TCL_DECLARED$/;"	d
Tk_DeleteOutline	/usr/include/tkDecls.h	/^#define Tk_DeleteOutline /;"	d
Tk_DeleteOutline	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteOutline (Display * display, $/;"	p	signature:(Display * display, Tk_Outline * outline)
Tk_DeleteOutline_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteOutline_TCL_DECLARED$/;"	d
Tk_DeleteSelHandler	/usr/include/tkDecls.h	/^#define Tk_DeleteSelHandler /;"	d
Tk_DeleteSelHandler	/usr/include/tkDecls.h	/^EXTERN void		Tk_DeleteSelHandler (Tk_Window tkwin, Atom selection, $/;"	p	signature:(Tk_Window tkwin, Atom selection, Atom target)
Tk_DeleteSelHandler_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DeleteSelHandler_TCL_DECLARED$/;"	d
Tk_DeleteTimerHandler	/usr/include/tk.h	/^#define Tk_DeleteTimerHandler	/;"	d
Tk_Depth	/usr/include/tk.h	/^#define Tk_Depth(/;"	d
Tk_DestroyWindow	/usr/include/tkDecls.h	/^#define Tk_DestroyWindow /;"	d
Tk_DestroyWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_DestroyWindow (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_DestroyWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DestroyWindow_TCL_DECLARED$/;"	d
Tk_Display	/usr/include/tk.h	/^#define Tk_Display(/;"	d
Tk_DisplayName	/usr/include/tkDecls.h	/^#define Tk_DisplayName /;"	d
Tk_DisplayName	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_DisplayName (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_DisplayName_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DisplayName_TCL_DECLARED$/;"	d
Tk_DistanceToTextLayout	/usr/include/tkDecls.h	/^#define Tk_DistanceToTextLayout /;"	d
Tk_DistanceToTextLayout	/usr/include/tkDecls.h	/^EXTERN int		Tk_DistanceToTextLayout (Tk_TextLayout layout, int x, $/;"	p	signature:(Tk_TextLayout layout, int x, int y)
Tk_DistanceToTextLayout_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DistanceToTextLayout_TCL_DECLARED$/;"	d
Tk_DitherPhoto	/usr/include/tkDecls.h	/^#define Tk_DitherPhoto /;"	d
Tk_DitherPhoto	/usr/include/tkDecls.h	/^EXTERN void		Tk_DitherPhoto (Tk_PhotoHandle handle, int x, int y, $/;"	p	signature:(Tk_PhotoHandle handle, int x, int y, int width, int height)
Tk_DitherPhoto_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DitherPhoto_TCL_DECLARED$/;"	d
Tk_DoOneEvent	/usr/include/tk.h	/^#define Tk_DoOneEvent	/;"	d
Tk_DoWhenIdle	/usr/include/tk.h	/^#define Tk_DoWhenIdle	/;"	d
Tk_Draw3DPolygon	/usr/include/tkDecls.h	/^#define Tk_Draw3DPolygon /;"	d
Tk_Draw3DPolygon	/usr/include/tkDecls.h	/^EXTERN void		Tk_Draw3DPolygon (Tk_Window tkwin, Drawable drawable, $/;"	p	signature:(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint * pointPtr, int numPoints, int borderWidth, int leftRelief)
Tk_Draw3DPolygon_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Draw3DPolygon_TCL_DECLARED$/;"	d
Tk_Draw3DRectangle	/usr/include/tkDecls.h	/^#define Tk_Draw3DRectangle /;"	d
Tk_Draw3DRectangle	/usr/include/tkDecls.h	/^EXTERN void		Tk_Draw3DRectangle (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief)
Tk_Draw3DRectangle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Draw3DRectangle_TCL_DECLARED$/;"	d
Tk_DrawChars	/usr/include/tkDecls.h	/^#define Tk_DrawChars /;"	d
Tk_DrawChars	/usr/include/tkDecls.h	/^EXTERN void		Tk_DrawChars (Display * display, Drawable drawable, $/;"	p	signature:(Display * display, Drawable drawable, GC gc, Tk_Font tkfont, CONST char * source, int numBytes, int x, int y)
Tk_DrawChars_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DrawChars_TCL_DECLARED$/;"	d
Tk_DrawElement	/usr/include/tkDecls.h	/^#define Tk_DrawElement /;"	d
Tk_DrawElement	/usr/include/tkDecls.h	/^EXTERN void		Tk_DrawElement (Tk_Style style, $/;"	p	signature:(Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, Drawable d, int x, int y, int width, int height, int state)
Tk_DrawElementProc	/usr/include/tk.h	/^typedef void (Tk_DrawElementProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_DrawElement_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DrawElement_TCL_DECLARED$/;"	d
Tk_DrawFocusHighlight	/usr/include/tkDecls.h	/^#define Tk_DrawFocusHighlight /;"	d
Tk_DrawFocusHighlight	/usr/include/tkDecls.h	/^EXTERN void		Tk_DrawFocusHighlight (Tk_Window tkwin, GC gc, $/;"	p	signature:(Tk_Window tkwin, GC gc, int width, Drawable drawable)
Tk_DrawFocusHighlight_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DrawFocusHighlight_TCL_DECLARED$/;"	d
Tk_DrawTextLayout	/usr/include/tkDecls.h	/^#define Tk_DrawTextLayout /;"	d
Tk_DrawTextLayout	/usr/include/tkDecls.h	/^EXTERN void		Tk_DrawTextLayout (Display * display, $/;"	p	signature:(Display * display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int firstChar, int lastChar)
Tk_DrawTextLayout_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_DrawTextLayout_TCL_DECLARED$/;"	d
Tk_ElementOptionSpec	/usr/include/tk.h	/^typedef struct Tk_ElementOptionSpec {$/;"	s
Tk_ElementOptionSpec	/usr/include/tk.h	/^} Tk_ElementOptionSpec;$/;"	t	typeref:struct:Tk_ElementOptionSpec
Tk_ElementOptionSpec::name	/usr/include/tk.h	/^    char *name;                 \/* Name of the required option. *\/$/;"	m	struct:Tk_ElementOptionSpec	access:public
Tk_ElementOptionSpec::type	/usr/include/tk.h	/^    Tk_OptionType type;         \/* Accepted option type. TK_OPTION_END means$/;"	m	struct:Tk_ElementOptionSpec	access:public
Tk_ElementSpec	/usr/include/tk.h	/^typedef struct Tk_ElementSpec {$/;"	s
Tk_ElementSpec	/usr/include/tk.h	/^} Tk_ElementSpec;$/;"	t	typeref:struct:Tk_ElementSpec
Tk_ElementSpec::draw	/usr/include/tk.h	/^    Tk_DrawElementProc *draw;	\/* Draw the element in the given bounding$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ElementSpec::getBorderWidth	/usr/include/tk.h	/^    Tk_GetElementBorderWidthProc *getBorderWidth;$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ElementSpec::getBox	/usr/include/tk.h	/^    Tk_GetElementBoxProc *getBox;$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ElementSpec::getSize	/usr/include/tk.h	/^    Tk_GetElementSizeProc *getSize;$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ElementSpec::name	/usr/include/tk.h	/^    char *name;                 \/* Name of element. *\/$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ElementSpec::options	/usr/include/tk.h	/^    Tk_ElementOptionSpec *options;$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ElementSpec::version	/usr/include/tk.h	/^    int version;                \/* Version of the style support. *\/$/;"	m	struct:Tk_ElementSpec	access:public
Tk_ErrorHandler	/usr/include/tk.h	/^typedef struct Tk_ErrorHandler_ *Tk_ErrorHandler;$/;"	t	typeref:struct:Tk_ErrorHandler_
Tk_ErrorProc	/usr/include/tk.h	/^typedef int (Tk_ErrorProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_EventProc	/usr/include/tk.h	/^typedef void (Tk_EventProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_EventuallyFree	/usr/include/tk.h	/^#define Tk_EventuallyFree	/;"	d
Tk_FakeWin	/usr/include/tk.h	/^typedef struct Tk_FakeWin {$/;"	s
Tk_FakeWin	/usr/include/tk.h	/^} Tk_FakeWin;$/;"	t	typeref:struct:Tk_FakeWin
Tk_FakeWin::atts	/usr/include/tk.h	/^    XSetWindowAttributes atts;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::changes	/usr/include/tk.h	/^    XWindowChanges changes;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::classUid	/usr/include/tk.h	/^    Tk_Uid classUid;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::depth	/usr/include/tk.h	/^    int depth;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::display	/usr/include/tk.h	/^    Display *display;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy1	/usr/include/tk.h	/^    char *dummy1;		\/* dispPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy10	/usr/include/tk.h	/^    ClientData *dummy10;	\/* tagPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy11	/usr/include/tk.h	/^    int dummy11;		\/* numTags *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy12	/usr/include/tk.h	/^    int dummy12;		\/* optionLevel *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy13	/usr/include/tk.h	/^    char *dummy13;		\/* selHandlerList *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy14	/usr/include/tk.h	/^    char *dummy14;		\/* geomMgrPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy15	/usr/include/tk.h	/^    ClientData dummy15;		\/* geomData *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy16	/usr/include/tk.h	/^    char *dummy16;		\/* wmInfoPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy17	/usr/include/tk.h	/^    char *dummy17;		\/* classProcPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy18	/usr/include/tk.h	/^    ClientData dummy18;		\/* instanceData *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy19	/usr/include/tk.h	/^    char *dummy19;		\/* privatePtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy2	/usr/include/tk.h	/^    char *dummy2;		\/* childList *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy3	/usr/include/tk.h	/^    char *dummy3;		\/* lastChildPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy4	/usr/include/tk.h	/^    char *dummy4;		\/* nextPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy5	/usr/include/tk.h	/^    char *dummy5;		\/* mainPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy6	/usr/include/tk.h	/^    unsigned int dummy6;	\/* dirtyChanges *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy7	/usr/include/tk.h	/^    unsigned long dummy7;	\/* dirtyAtts *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy8	/usr/include/tk.h	/^    char *dummy8;		\/* handlerList *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::dummy9	/usr/include/tk.h	/^    XIC dummy9;			\/* inputContext *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::flags	/usr/include/tk.h	/^    unsigned int flags;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::internalBorderBottom	/usr/include/tk.h	/^    int internalBorderBottom;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::internalBorderLeft	/usr/include/tk.h	/^    int internalBorderLeft;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::internalBorderRight	/usr/include/tk.h	/^    int internalBorderRight;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::internalBorderTop	/usr/include/tk.h	/^    int internalBorderTop;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::minReqHeight	/usr/include/tk.h	/^    int minReqHeight;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::minReqWidth	/usr/include/tk.h	/^    int minReqWidth;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::nameUid	/usr/include/tk.h	/^    Tk_Uid nameUid;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::parentPtr	/usr/include/tk.h	/^    Tk_Window parentPtr;	\/* parentPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::pathName	/usr/include/tk.h	/^    char *pathName;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::reqHeight	/usr/include/tk.h	/^    int reqWidth, reqHeight;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::reqWidth	/usr/include/tk.h	/^    int reqWidth, reqHeight;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::screenNum	/usr/include/tk.h	/^    int screenNum;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::visual	/usr/include/tk.h	/^    Visual *visual;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FakeWin::window	/usr/include/tk.h	/^    Window window;$/;"	m	struct:Tk_FakeWin	access:public
Tk_FileProc	/usr/include/tk.h	/^#define Tk_FileProc	/;"	d
Tk_Fill3DPolygon	/usr/include/tkDecls.h	/^#define Tk_Fill3DPolygon /;"	d
Tk_Fill3DPolygon	/usr/include/tkDecls.h	/^EXTERN void		Tk_Fill3DPolygon (Tk_Window tkwin, Drawable drawable, $/;"	p	signature:(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint * pointPtr, int numPoints, int borderWidth, int leftRelief)
Tk_Fill3DPolygon_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Fill3DPolygon_TCL_DECLARED$/;"	d
Tk_Fill3DRectangle	/usr/include/tkDecls.h	/^#define Tk_Fill3DRectangle /;"	d
Tk_Fill3DRectangle	/usr/include/tkDecls.h	/^EXTERN void		Tk_Fill3DRectangle (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief)
Tk_Fill3DRectangle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Fill3DRectangle_TCL_DECLARED$/;"	d
Tk_FindPhoto	/usr/include/tkDecls.h	/^#define Tk_FindPhoto /;"	d
Tk_FindPhoto	/usr/include/tkDecls.h	/^EXTERN Tk_PhotoHandle	Tk_FindPhoto (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * imageName)
Tk_FindPhoto_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FindPhoto_TCL_DECLARED$/;"	d
Tk_Font	/usr/include/tk.h	/^typedef struct Tk_Font_ *Tk_Font;$/;"	t	typeref:struct:Tk_Font_
Tk_FontId	/usr/include/tkDecls.h	/^#define Tk_FontId /;"	d
Tk_FontId	/usr/include/tkDecls.h	/^EXTERN Font		Tk_FontId (Tk_Font font);$/;"	p	signature:(Tk_Font font)
Tk_FontId_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FontId_TCL_DECLARED$/;"	d
Tk_FontMetrics	/usr/include/tk.h	/^typedef struct Tk_FontMetrics {$/;"	s
Tk_FontMetrics	/usr/include/tk.h	/^} Tk_FontMetrics;$/;"	t	typeref:struct:Tk_FontMetrics
Tk_FontMetrics::ascent	/usr/include/tk.h	/^    int ascent;			\/* The amount in pixels that the tallest$/;"	m	struct:Tk_FontMetrics	access:public
Tk_FontMetrics::descent	/usr/include/tk.h	/^    int descent;		\/* The largest amount in pixels that any$/;"	m	struct:Tk_FontMetrics	access:public
Tk_FontMetrics::linespace	/usr/include/tk.h	/^    int linespace;		\/* The sum of the ascent and descent. How far$/;"	m	struct:Tk_FontMetrics	access:public
Tk_Free3DBorder	/usr/include/tkDecls.h	/^#define Tk_Free3DBorder /;"	d
Tk_Free3DBorder	/usr/include/tkDecls.h	/^EXTERN void		Tk_Free3DBorder (Tk_3DBorder border);$/;"	p	signature:(Tk_3DBorder border)
Tk_Free3DBorderFromObj	/usr/include/tkDecls.h	/^#define Tk_Free3DBorderFromObj /;"	d
Tk_Free3DBorderFromObj	/usr/include/tkDecls.h	/^EXTERN void		Tk_Free3DBorderFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_Free3DBorderFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Free3DBorderFromObj_TCL_DECLARED$/;"	d
Tk_Free3DBorder_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Free3DBorder_TCL_DECLARED$/;"	d
Tk_FreeBitmap	/usr/include/tkDecls.h	/^#define Tk_FreeBitmap /;"	d
Tk_FreeBitmap	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeBitmap (Display * display, Pixmap bitmap);$/;"	p	signature:(Display * display, Pixmap bitmap)
Tk_FreeBitmapFromObj	/usr/include/tkDecls.h	/^#define Tk_FreeBitmapFromObj /;"	d
Tk_FreeBitmapFromObj	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeBitmapFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_FreeBitmapFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeBitmapFromObj_TCL_DECLARED$/;"	d
Tk_FreeBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeBitmap_TCL_DECLARED$/;"	d
Tk_FreeColor	/usr/include/tkDecls.h	/^#define Tk_FreeColor /;"	d
Tk_FreeColor	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeColor (XColor * colorPtr);$/;"	p	signature:(XColor * colorPtr)
Tk_FreeColorFromObj	/usr/include/tkDecls.h	/^#define Tk_FreeColorFromObj /;"	d
Tk_FreeColorFromObj	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeColorFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_FreeColorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeColorFromObj_TCL_DECLARED$/;"	d
Tk_FreeColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeColor_TCL_DECLARED$/;"	d
Tk_FreeColormap	/usr/include/tkDecls.h	/^#define Tk_FreeColormap /;"	d
Tk_FreeColormap	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeColormap (Display * display, $/;"	p	signature:(Display * display, Colormap colormap)
Tk_FreeColormap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeColormap_TCL_DECLARED$/;"	d
Tk_FreeConfigOptions	/usr/include/tkDecls.h	/^#define Tk_FreeConfigOptions /;"	d
Tk_FreeConfigOptions	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeConfigOptions (char * recordPtr, $/;"	p	signature:(char * recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin)
Tk_FreeConfigOptions_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeConfigOptions_TCL_DECLARED$/;"	d
Tk_FreeCursor	/usr/include/tkDecls.h	/^#define Tk_FreeCursor /;"	d
Tk_FreeCursor	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeCursor (Display * display, Tk_Cursor cursor);$/;"	p	signature:(Display * display, Tk_Cursor cursor)
Tk_FreeCursorFromObj	/usr/include/tkDecls.h	/^#define Tk_FreeCursorFromObj /;"	d
Tk_FreeCursorFromObj	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeCursorFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_FreeCursorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeCursorFromObj_TCL_DECLARED$/;"	d
Tk_FreeCursor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeCursor_TCL_DECLARED$/;"	d
Tk_FreeFont	/usr/include/tkDecls.h	/^#define Tk_FreeFont /;"	d
Tk_FreeFont	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeFont (Tk_Font f);$/;"	p	signature:(Tk_Font f)
Tk_FreeFontFromObj	/usr/include/tkDecls.h	/^#define Tk_FreeFontFromObj /;"	d
Tk_FreeFontFromObj	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeFontFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_FreeFontFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeFontFromObj_TCL_DECLARED$/;"	d
Tk_FreeFont_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeFont_TCL_DECLARED$/;"	d
Tk_FreeGC	/usr/include/tkDecls.h	/^#define Tk_FreeGC /;"	d
Tk_FreeGC	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeGC (Display * display, GC gc);$/;"	p	signature:(Display * display, GC gc)
Tk_FreeGC_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeGC_TCL_DECLARED$/;"	d
Tk_FreeImage	/usr/include/tkDecls.h	/^#define Tk_FreeImage /;"	d
Tk_FreeImage	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeImage (Tk_Image image);$/;"	p	signature:(Tk_Image image)
Tk_FreeImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeImage_TCL_DECLARED$/;"	d
Tk_FreeOptions	/usr/include/tkDecls.h	/^#define Tk_FreeOptions /;"	d
Tk_FreeOptions	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeOptions (Tk_ConfigSpec * specs, $/;"	p	signature:(Tk_ConfigSpec * specs, char * widgRec, Display * display, int needFlags)
Tk_FreeOptions_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeOptions_TCL_DECLARED$/;"	d
Tk_FreePixmap	/usr/include/tkDecls.h	/^#define Tk_FreePixmap /;"	d
Tk_FreePixmap	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreePixmap (Display * display, Pixmap pixmap);$/;"	p	signature:(Display * display, Pixmap pixmap)
Tk_FreePixmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreePixmap_TCL_DECLARED$/;"	d
Tk_FreeProc	/usr/include/tk.h	/^#define Tk_FreeProc	/;"	d
Tk_FreeSavedOptions	/usr/include/tkDecls.h	/^#define Tk_FreeSavedOptions /;"	d
Tk_FreeSavedOptions	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeSavedOptions (Tk_SavedOptions * savePtr);$/;"	p	signature:(Tk_SavedOptions * savePtr)
Tk_FreeSavedOptions_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeSavedOptions_TCL_DECLARED$/;"	d
Tk_FreeStyle	/usr/include/tkDecls.h	/^#define Tk_FreeStyle /;"	d
Tk_FreeStyle	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeStyle (Tk_Style style);$/;"	p	signature:(Tk_Style style)
Tk_FreeStyleFromObj	/usr/include/tkDecls.h	/^#define Tk_FreeStyleFromObj /;"	d
Tk_FreeStyleFromObj	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeStyleFromObj (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tk_FreeStyleFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeStyleFromObj_TCL_DECLARED$/;"	d
Tk_FreeStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeStyle_TCL_DECLARED$/;"	d
Tk_FreeTextLayout	/usr/include/tkDecls.h	/^#define Tk_FreeTextLayout /;"	d
Tk_FreeTextLayout	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeTextLayout (Tk_TextLayout textLayout);$/;"	p	signature:(Tk_TextLayout textLayout)
Tk_FreeTextLayout_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeTextLayout_TCL_DECLARED$/;"	d
Tk_FreeXId	/usr/include/tkDecls.h	/^#define Tk_FreeXId /;"	d
Tk_FreeXId	/usr/include/tkDecls.h	/^EXTERN void		Tk_FreeXId (Display * display, XID xid);$/;"	p	signature:(Display * display, XID xid)
Tk_FreeXId_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_FreeXId_TCL_DECLARED$/;"	d
Tk_GCForColor	/usr/include/tkDecls.h	/^#define Tk_GCForColor /;"	d
Tk_GCForColor	/usr/include/tkDecls.h	/^EXTERN GC		Tk_GCForColor (XColor * colorPtr, Drawable drawable);$/;"	p	signature:(XColor * colorPtr, Drawable drawable)
Tk_GCForColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GCForColor_TCL_DECLARED$/;"	d
Tk_GenericProc	/usr/include/tk.h	/^typedef int (Tk_GenericProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GeomLostSlaveProc	/usr/include/tk.h	/^typedef void (Tk_GeomLostSlaveProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GeomMgr	/usr/include/tk.h	/^typedef struct Tk_GeomMgr {$/;"	s
Tk_GeomMgr	/usr/include/tk.h	/^} Tk_GeomMgr;$/;"	t	typeref:struct:Tk_GeomMgr
Tk_GeomMgr::lostSlaveProc	/usr/include/tk.h	/^    Tk_GeomLostSlaveProc *lostSlaveProc;$/;"	m	struct:Tk_GeomMgr	access:public
Tk_GeomMgr::name	/usr/include/tk.h	/^    const char *name;		\/* Name of the geometry manager (command used$/;"	m	struct:Tk_GeomMgr	access:public
Tk_GeomMgr::requestProc	/usr/include/tk.h	/^    Tk_GeomRequestProc *requestProc;$/;"	m	struct:Tk_GeomMgr	access:public
Tk_GeomRequestProc	/usr/include/tk.h	/^typedef void (Tk_GeomRequestProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GeometryRequest	/usr/include/tkDecls.h	/^#define Tk_GeometryRequest /;"	d
Tk_GeometryRequest	/usr/include/tkDecls.h	/^EXTERN void		Tk_GeometryRequest (Tk_Window tkwin, int reqWidth, $/;"	p	signature:(Tk_Window tkwin, int reqWidth, int reqHeight)
Tk_GeometryRequest_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GeometryRequest_TCL_DECLARED$/;"	d
Tk_Get3DBorder	/usr/include/tkDecls.h	/^#define Tk_Get3DBorder /;"	d
Tk_Get3DBorder	/usr/include/tkDecls.h	/^EXTERN Tk_3DBorder	Tk_Get3DBorder (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid colorName)
Tk_Get3DBorderFromObj	/usr/include/tkDecls.h	/^#define Tk_Get3DBorderFromObj /;"	d
Tk_Get3DBorderFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_3DBorder	Tk_Get3DBorderFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_Get3DBorderFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Get3DBorderFromObj_TCL_DECLARED$/;"	d
Tk_Get3DBorder_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Get3DBorder_TCL_DECLARED$/;"	d
Tk_GetAllBindings	/usr/include/tkDecls.h	/^#define Tk_GetAllBindings /;"	d
Tk_GetAllBindings	/usr/include/tkDecls.h	/^EXTERN void		Tk_GetAllBindings (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object)
Tk_GetAllBindings_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetAllBindings_TCL_DECLARED$/;"	d
Tk_GetAnchor	/usr/include/tkDecls.h	/^#define Tk_GetAnchor /;"	d
Tk_GetAnchor	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetAnchor (Tcl_Interp * interp, CONST char * str, $/;"	p	signature:(Tcl_Interp * interp, CONST char * str, Tk_Anchor * anchorPtr)
Tk_GetAnchorFromObj	/usr/include/tkDecls.h	/^#define Tk_GetAnchorFromObj /;"	d
Tk_GetAnchorFromObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetAnchorFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, Tk_Anchor * anchorPtr)
Tk_GetAnchorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetAnchorFromObj_TCL_DECLARED$/;"	d
Tk_GetAnchor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetAnchor_TCL_DECLARED$/;"	d
Tk_GetAtomName	/usr/include/tkDecls.h	/^#define Tk_GetAtomName /;"	d
Tk_GetAtomName	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_GetAtomName (Tk_Window tkwin, Atom atom);$/;"	p	signature:(Tk_Window tkwin, Atom atom)
Tk_GetAtomName_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetAtomName_TCL_DECLARED$/;"	d
Tk_GetBinding	/usr/include/tkDecls.h	/^#define Tk_GetBinding /;"	d
Tk_GetBinding	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_GetBinding (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr)
Tk_GetBinding_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetBinding_TCL_DECLARED$/;"	d
Tk_GetBitmap	/usr/include/tkDecls.h	/^#define Tk_GetBitmap /;"	d
Tk_GetBitmap	/usr/include/tkDecls.h	/^EXTERN Pixmap		Tk_GetBitmap (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * str)
Tk_GetBitmapFromData	/usr/include/tkDecls.h	/^#define Tk_GetBitmapFromData /;"	d
Tk_GetBitmapFromData	/usr/include/tkDecls.h	/^EXTERN Pixmap		Tk_GetBitmapFromData (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * source, int width, int height)
Tk_GetBitmapFromData_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetBitmapFromData_TCL_DECLARED$/;"	d
Tk_GetBitmapFromObj	/usr/include/tkDecls.h	/^#define Tk_GetBitmapFromObj /;"	d
Tk_GetBitmapFromObj	/usr/include/tkDecls.h	/^EXTERN Pixmap		Tk_GetBitmapFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_GetBitmapFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetBitmapFromObj_TCL_DECLARED$/;"	d
Tk_GetBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetBitmap_TCL_DECLARED$/;"	d
Tk_GetCapStyle	/usr/include/tkDecls.h	/^#define Tk_GetCapStyle /;"	d
Tk_GetCapStyle	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetCapStyle (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * str, int * capPtr)
Tk_GetCapStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetCapStyle_TCL_DECLARED$/;"	d
Tk_GetClassProc	/usr/include/tk.h	/^#define Tk_GetClassProc(/;"	d
Tk_GetColor	/usr/include/tkDecls.h	/^#define Tk_GetColor /;"	d
Tk_GetColor	/usr/include/tkDecls.h	/^EXTERN XColor *		Tk_GetColor (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid name)
Tk_GetColorByValue	/usr/include/tkDecls.h	/^#define Tk_GetColorByValue /;"	d
Tk_GetColorByValue	/usr/include/tkDecls.h	/^EXTERN XColor *		Tk_GetColorByValue (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, XColor * colorPtr)
Tk_GetColorByValue_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetColorByValue_TCL_DECLARED$/;"	d
Tk_GetColorFromObj	/usr/include/tkDecls.h	/^#define Tk_GetColorFromObj /;"	d
Tk_GetColorFromObj	/usr/include/tkDecls.h	/^EXTERN XColor *		Tk_GetColorFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_GetColorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetColorFromObj_TCL_DECLARED$/;"	d
Tk_GetColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetColor_TCL_DECLARED$/;"	d
Tk_GetColormap	/usr/include/tkDecls.h	/^#define Tk_GetColormap /;"	d
Tk_GetColormap	/usr/include/tkDecls.h	/^EXTERN Colormap		Tk_GetColormap (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * str)
Tk_GetColormap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetColormap_TCL_DECLARED$/;"	d
Tk_GetCursor	/usr/include/tkDecls.h	/^#define Tk_GetCursor /;"	d
Tk_GetCursor	/usr/include/tkDecls.h	/^EXTERN Tk_Cursor	Tk_GetCursor (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid str)
Tk_GetCursorFromData	/usr/include/tkDecls.h	/^#define Tk_GetCursorFromData /;"	d
Tk_GetCursorFromData	/usr/include/tkDecls.h	/^EXTERN Tk_Cursor	Tk_GetCursorFromData (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * source, CONST char * mask, int width, int height, int xHot, int yHot, Tk_Uid fg, Tk_Uid bg)
Tk_GetCursorFromData_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetCursorFromData_TCL_DECLARED$/;"	d
Tk_GetCursorFromObj	/usr/include/tkDecls.h	/^#define Tk_GetCursorFromObj /;"	d
Tk_GetCursorFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_Cursor	Tk_GetCursorFromObj (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_GetCursorFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetCursorFromObj_TCL_DECLARED$/;"	d
Tk_GetCursor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetCursor_TCL_DECLARED$/;"	d
Tk_GetDash	/usr/include/tkDecls.h	/^#define Tk_GetDash /;"	d
Tk_GetDash	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetDash (Tcl_Interp * interp, CONST char * value, $/;"	p	signature:(Tcl_Interp * interp, CONST char * value, Tk_Dash * dash)
Tk_GetDash_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetDash_TCL_DECLARED$/;"	d
Tk_GetElementBorderWidth	/usr/include/tkDecls.h	/^#define Tk_GetElementBorderWidth /;"	d
Tk_GetElementBorderWidth	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetElementBorderWidth (Tk_Style style, $/;"	p	signature:(Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin)
Tk_GetElementBorderWidthProc	/usr/include/tk.h	/^typedef int (Tk_GetElementBorderWidthProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GetElementBorderWidth_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetElementBorderWidth_TCL_DECLARED$/;"	d
Tk_GetElementBox	/usr/include/tkDecls.h	/^#define Tk_GetElementBox /;"	d
Tk_GetElementBox	/usr/include/tkDecls.h	/^EXTERN void		Tk_GetElementBox (Tk_Style style, $/;"	p	signature:(Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, int x, int y, int width, int height, int inner, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr)
Tk_GetElementBoxProc	/usr/include/tk.h	/^typedef void (Tk_GetElementBoxProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GetElementBox_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetElementBox_TCL_DECLARED$/;"	d
Tk_GetElementId	/usr/include/tkDecls.h	/^#define Tk_GetElementId /;"	d
Tk_GetElementId	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetElementId (CONST char * name);$/;"	p	signature:(CONST char * name)
Tk_GetElementId_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetElementId_TCL_DECLARED$/;"	d
Tk_GetElementSize	/usr/include/tkDecls.h	/^#define Tk_GetElementSize /;"	d
Tk_GetElementSize	/usr/include/tkDecls.h	/^EXTERN void		Tk_GetElementSize (Tk_Style style, $/;"	p	signature:(Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, int width, int height, int inner, int * widthPtr, int * heightPtr)
Tk_GetElementSizeProc	/usr/include/tk.h	/^typedef void (Tk_GetElementSizeProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GetElementSize_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetElementSize_TCL_DECLARED$/;"	d
Tk_GetFont	/usr/include/tkDecls.h	/^#define Tk_GetFont /;"	d
Tk_GetFont	/usr/include/tkDecls.h	/^EXTERN Tk_Font		Tk_GetFont (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * str)
Tk_GetFontFromObj	/usr/include/tkDecls.h	/^#define Tk_GetFontFromObj /;"	d
Tk_GetFontFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_Font		Tk_GetFontFromObj (Tk_Window tkwin, Tcl_Obj * objPtr);$/;"	p	signature:(Tk_Window tkwin, Tcl_Obj * objPtr)
Tk_GetFontFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetFontFromObj_TCL_DECLARED$/;"	d
Tk_GetFontMetrics	/usr/include/tkDecls.h	/^#define Tk_GetFontMetrics /;"	d
Tk_GetFontMetrics	/usr/include/tkDecls.h	/^EXTERN void		Tk_GetFontMetrics (Tk_Font font, $/;"	p	signature:(Tk_Font font, Tk_FontMetrics * fmPtr)
Tk_GetFontMetrics_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetFontMetrics_TCL_DECLARED$/;"	d
Tk_GetFont_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetFont_TCL_DECLARED$/;"	d
Tk_GetGC	/usr/include/tkDecls.h	/^#define Tk_GetGC /;"	d
Tk_GetGC	/usr/include/tkDecls.h	/^EXTERN GC		Tk_GetGC (Tk_Window tkwin, unsigned long valueMask, $/;"	p	signature:(Tk_Window tkwin, unsigned long valueMask, XGCValues * valuePtr)
Tk_GetGC_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetGC_TCL_DECLARED$/;"	d
Tk_GetHINSTANCE	/usr/include/tkPlatDecls.h	/^#define Tk_GetHINSTANCE /;"	d
Tk_GetHINSTANCE	/usr/include/tkPlatDecls.h	/^EXTERN HINSTANCE	Tk_GetHINSTANCE (void);$/;"	p	signature:(void)
Tk_GetHINSTANCE_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_GetHINSTANCE_TCL_DECLARED$/;"	d
Tk_GetHWND	/usr/include/tkPlatDecls.h	/^#define Tk_GetHWND /;"	d
Tk_GetHWND	/usr/include/tkPlatDecls.h	/^EXTERN HWND		Tk_GetHWND (Window window);$/;"	p	signature:(Window window)
Tk_GetHWND_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_GetHWND_TCL_DECLARED$/;"	d
Tk_GetImage	/usr/include/tkDecls.h	/^#define Tk_GetImage /;"	d
Tk_GetImage	/usr/include/tkDecls.h	/^EXTERN Tk_Image		Tk_GetImage (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * name, Tk_ImageChangedProc * changeProc, ClientData clientData)
Tk_GetImageMasterData	/usr/include/tkDecls.h	/^#define Tk_GetImageMasterData /;"	d
Tk_GetImageMasterData	/usr/include/tkDecls.h	/^EXTERN ClientData	Tk_GetImageMasterData (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, Tk_ImageType ** typePtrPtr)
Tk_GetImageMasterData_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetImageMasterData_TCL_DECLARED$/;"	d
Tk_GetImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetImage_TCL_DECLARED$/;"	d
Tk_GetItemTypes	/usr/include/tkDecls.h	/^#define Tk_GetItemTypes /;"	d
Tk_GetItemTypes	/usr/include/tkDecls.h	/^EXTERN Tk_ItemType *	Tk_GetItemTypes (void);$/;"	p	signature:(void)
Tk_GetItemTypes_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetItemTypes_TCL_DECLARED$/;"	d
Tk_GetJoinStyle	/usr/include/tkDecls.h	/^#define Tk_GetJoinStyle /;"	d
Tk_GetJoinStyle	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetJoinStyle (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * str, int * joinPtr)
Tk_GetJoinStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetJoinStyle_TCL_DECLARED$/;"	d
Tk_GetJustify	/usr/include/tkDecls.h	/^#define Tk_GetJustify /;"	d
Tk_GetJustify	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetJustify (Tcl_Interp * interp, CONST char * str, $/;"	p	signature:(Tcl_Interp * interp, CONST char * str, Tk_Justify * justifyPtr)
Tk_GetJustifyFromObj	/usr/include/tkDecls.h	/^#define Tk_GetJustifyFromObj /;"	d
Tk_GetJustifyFromObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetJustifyFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, Tk_Justify * justifyPtr)
Tk_GetJustifyFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetJustifyFromObj_TCL_DECLARED$/;"	d
Tk_GetJustify_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetJustify_TCL_DECLARED$/;"	d
Tk_GetMMFromObj	/usr/include/tkDecls.h	/^#define Tk_GetMMFromObj /;"	d
Tk_GetMMFromObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetMMFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr, double * doublePtr)
Tk_GetMMFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetMMFromObj_TCL_DECLARED$/;"	d
Tk_GetNumMainWindows	/usr/include/tkDecls.h	/^#define Tk_GetNumMainWindows /;"	d
Tk_GetNumMainWindows	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetNumMainWindows (void);$/;"	p	signature:(void)
Tk_GetNumMainWindows_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetNumMainWindows_TCL_DECLARED$/;"	d
Tk_GetOption	/usr/include/tkDecls.h	/^#define Tk_GetOption /;"	d
Tk_GetOption	/usr/include/tkDecls.h	/^EXTERN Tk_Uid		Tk_GetOption (Tk_Window tkwin, CONST char * name, $/;"	p	signature:(Tk_Window tkwin, CONST char * name, CONST char * className)
Tk_GetOptionInfo	/usr/include/tkDecls.h	/^#define Tk_GetOptionInfo /;"	d
Tk_GetOptionInfo	/usr/include/tkDecls.h	/^EXTERN Tcl_Obj *	Tk_GetOptionInfo (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, Tcl_Obj * namePtr, Tk_Window tkwin)
Tk_GetOptionInfo_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetOptionInfo_TCL_DECLARED$/;"	d
Tk_GetOptionValue	/usr/include/tkDecls.h	/^#define Tk_GetOptionValue /;"	d
Tk_GetOptionValue	/usr/include/tkDecls.h	/^EXTERN Tcl_Obj *	Tk_GetOptionValue (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, Tcl_Obj * namePtr, Tk_Window tkwin)
Tk_GetOptionValue_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetOptionValue_TCL_DECLARED$/;"	d
Tk_GetOption_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetOption_TCL_DECLARED$/;"	d
Tk_GetPixels	/usr/include/tkDecls.h	/^#define Tk_GetPixels /;"	d
Tk_GetPixels	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetPixels (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, int * intPtr)
Tk_GetPixelsFromObj	/usr/include/tkDecls.h	/^#define Tk_GetPixelsFromObj /;"	d
Tk_GetPixelsFromObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetPixelsFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr, int * intPtr)
Tk_GetPixelsFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetPixelsFromObj_TCL_DECLARED$/;"	d
Tk_GetPixels_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetPixels_TCL_DECLARED$/;"	d
Tk_GetPixmap	/usr/include/tkDecls.h	/^#define Tk_GetPixmap /;"	d
Tk_GetPixmap	/usr/include/tkDecls.h	/^EXTERN Pixmap		Tk_GetPixmap (Display * display, Drawable d, $/;"	p	signature:(Display * display, Drawable d, int width, int height, int depth)
Tk_GetPixmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetPixmap_TCL_DECLARED$/;"	d
Tk_GetRelief	/usr/include/tkDecls.h	/^#define Tk_GetRelief /;"	d
Tk_GetRelief	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetRelief (Tcl_Interp * interp, CONST char * name, $/;"	p	signature:(Tcl_Interp * interp, CONST char * name, int * reliefPtr)
Tk_GetReliefFromObj	/usr/include/tkDecls.h	/^#define Tk_GetReliefFromObj /;"	d
Tk_GetReliefFromObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetReliefFromObj (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tcl_Obj * objPtr, int * resultPtr)
Tk_GetReliefFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetReliefFromObj_TCL_DECLARED$/;"	d
Tk_GetRelief_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetRelief_TCL_DECLARED$/;"	d
Tk_GetRootCoords	/usr/include/tkDecls.h	/^#define Tk_GetRootCoords /;"	d
Tk_GetRootCoords	/usr/include/tkDecls.h	/^EXTERN void		Tk_GetRootCoords (Tk_Window tkwin, int * xPtr, $/;"	p	signature:(Tk_Window tkwin, int * xPtr, int * yPtr)
Tk_GetRootCoords_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetRootCoords_TCL_DECLARED$/;"	d
Tk_GetScreenMM	/usr/include/tkDecls.h	/^#define Tk_GetScreenMM /;"	d
Tk_GetScreenMM	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetScreenMM (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, double * doublePtr)
Tk_GetScreenMM_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetScreenMM_TCL_DECLARED$/;"	d
Tk_GetScrollInfo	/usr/include/tkDecls.h	/^#define Tk_GetScrollInfo /;"	d
Tk_GetScrollInfo	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetScrollInfo (Tcl_Interp * interp, int argc, $/;"	p	signature:(Tcl_Interp * interp, int argc, CONST84 char ** argv, double * dblPtr, int * intPtr)
Tk_GetScrollInfoObj	/usr/include/tkDecls.h	/^#define Tk_GetScrollInfoObj /;"	d
Tk_GetScrollInfoObj	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetScrollInfoObj (Tcl_Interp * interp, int objc, $/;"	p	signature:(Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], double * dblPtr, int * intPtr)
Tk_GetScrollInfoObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetScrollInfoObj_TCL_DECLARED$/;"	d
Tk_GetScrollInfo_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetScrollInfo_TCL_DECLARED$/;"	d
Tk_GetSelProc	/usr/include/tk.h	/^typedef int (Tk_GetSelProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_GetSelection	/usr/include/tkDecls.h	/^#define Tk_GetSelection /;"	d
Tk_GetSelection	/usr/include/tkDecls.h	/^EXTERN int		Tk_GetSelection (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc * proc, ClientData clientData)
Tk_GetSelection_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetSelection_TCL_DECLARED$/;"	d
Tk_GetStyle	/usr/include/tkDecls.h	/^#define Tk_GetStyle /;"	d
Tk_GetStyle	/usr/include/tkDecls.h	/^EXTERN Tk_Style		Tk_GetStyle (Tcl_Interp * interp, CONST char * name);$/;"	p	signature:(Tcl_Interp * interp, CONST char * name)
Tk_GetStyleEngine	/usr/include/tkDecls.h	/^#define Tk_GetStyleEngine /;"	d
Tk_GetStyleEngine	/usr/include/tkDecls.h	/^EXTERN Tk_StyleEngine	Tk_GetStyleEngine (CONST char * name);$/;"	p	signature:(CONST char * name)
Tk_GetStyleEngine_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetStyleEngine_TCL_DECLARED$/;"	d
Tk_GetStyleFromObj	/usr/include/tkDecls.h	/^#define Tk_GetStyleFromObj /;"	d
Tk_GetStyleFromObj	/usr/include/tkDecls.h	/^EXTERN Tk_Style		Tk_GetStyleFromObj (Tcl_Obj * objPtr);$/;"	p	signature:(Tcl_Obj * objPtr)
Tk_GetStyleFromObj_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetStyleFromObj_TCL_DECLARED$/;"	d
Tk_GetStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetStyle_TCL_DECLARED$/;"	d
Tk_GetStyledElement	/usr/include/tkDecls.h	/^#define Tk_GetStyledElement /;"	d
Tk_GetStyledElement	/usr/include/tkDecls.h	/^EXTERN Tk_StyledElement	 Tk_GetStyledElement (Tk_Style style, int elementId, $/;"	p	signature:(Tk_Style style, int elementId, Tk_OptionTable optionTable)
Tk_GetStyledElement_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetStyledElement_TCL_DECLARED$/;"	d
Tk_GetUid	/usr/include/tkDecls.h	/^#define Tk_GetUid /;"	d
Tk_GetUid	/usr/include/tkDecls.h	/^EXTERN Tk_Uid		Tk_GetUid (CONST char * str);$/;"	p	signature:(CONST char * str)
Tk_GetUid_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetUid_TCL_DECLARED$/;"	d
Tk_GetUserInactiveTime	/usr/include/tkDecls.h	/^#define Tk_GetUserInactiveTime /;"	d
Tk_GetUserInactiveTime	/usr/include/tkDecls.h	/^EXTERN long		Tk_GetUserInactiveTime (Display * dpy);$/;"	p	signature:(Display * dpy)
Tk_GetUserInactiveTime_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetUserInactiveTime_TCL_DECLARED$/;"	d
Tk_GetVRootGeometry	/usr/include/tkDecls.h	/^#define Tk_GetVRootGeometry /;"	d
Tk_GetVRootGeometry	/usr/include/tkDecls.h	/^EXTERN void		Tk_GetVRootGeometry (Tk_Window tkwin, int * xPtr, $/;"	p	signature:(Tk_Window tkwin, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr)
Tk_GetVRootGeometry_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetVRootGeometry_TCL_DECLARED$/;"	d
Tk_GetVisual	/usr/include/tkDecls.h	/^#define Tk_GetVisual /;"	d
Tk_GetVisual	/usr/include/tkDecls.h	/^EXTERN Visual *		Tk_GetVisual (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, int * depthPtr, Colormap * colormapPtr)
Tk_GetVisual_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_GetVisual_TCL_DECLARED$/;"	d
Tk_Grab	/usr/include/tkDecls.h	/^#define Tk_Grab /;"	d
Tk_Grab	/usr/include/tkDecls.h	/^EXTERN int		Tk_Grab (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, int grabGlobal)
Tk_Grab_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Grab_TCL_DECLARED$/;"	d
Tk_HWNDToWindow	/usr/include/tkPlatDecls.h	/^#define Tk_HWNDToWindow /;"	d
Tk_HWNDToWindow	/usr/include/tkPlatDecls.h	/^EXTERN Tk_Window	Tk_HWNDToWindow (HWND hwnd);$/;"	p	signature:(HWND hwnd)
Tk_HWNDToWindow_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_HWNDToWindow_TCL_DECLARED$/;"	d
Tk_HandleEvent	/usr/include/tkDecls.h	/^#define Tk_HandleEvent /;"	d
Tk_HandleEvent	/usr/include/tkDecls.h	/^EXTERN void		Tk_HandleEvent (XEvent * eventPtr);$/;"	p	signature:(XEvent * eventPtr)
Tk_HandleEvent_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_HandleEvent_TCL_DECLARED$/;"	d
Tk_HasWrapper	/usr/include/tk.h	/^#define Tk_HasWrapper(/;"	d
Tk_Height	/usr/include/tk.h	/^#define Tk_Height(/;"	d
Tk_IdToWindow	/usr/include/tkDecls.h	/^#define Tk_IdToWindow /;"	d
Tk_IdToWindow	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_IdToWindow (Display * display, Window window);$/;"	p	signature:(Display * display, Window window)
Tk_IdToWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_IdToWindow_TCL_DECLARED$/;"	d
Tk_IdleProc	/usr/include/tk.h	/^#define Tk_IdleProc	/;"	d
Tk_Image	/usr/include/tk.h	/^typedef struct Tk_Image__ *Tk_Image;$/;"	t	typeref:struct:Tk_Image__
Tk_ImageChanged	/usr/include/tkDecls.h	/^#define Tk_ImageChanged /;"	d
Tk_ImageChanged	/usr/include/tkDecls.h	/^EXTERN void		Tk_ImageChanged (Tk_ImageMaster master, int x, int y, $/;"	p	signature:(Tk_ImageMaster master, int x, int y, int width, int height, int imageWidth, int imageHeight)
Tk_ImageChangedProc	/usr/include/tk.h	/^typedef void (Tk_ImageChangedProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_ImageChanged_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ImageChanged_TCL_DECLARED$/;"	d
Tk_ImageCreateProc	/usr/include/tk.h	/^typedef int (Tk_ImageCreateProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ImageDeleteProc	/usr/include/tk.h	/^typedef void (Tk_ImageDeleteProc) _ANSI_ARGS_((ClientData masterData));$/;"	t
Tk_ImageDisplayProc	/usr/include/tk.h	/^typedef void (Tk_ImageDisplayProc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tk_ImageFileMatchProc	/usr/include/tk.h	/^typedef int (Tk_ImageFileMatchProc) _ANSI_ARGS_((Tcl_Channel chan,$/;"	t
Tk_ImageFileReadProc	/usr/include/tk.h	/^typedef int (Tk_ImageFileReadProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ImageFileWriteProc	/usr/include/tk.h	/^typedef int (Tk_ImageFileWriteProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ImageFreeProc	/usr/include/tk.h	/^typedef void (Tk_ImageFreeProc) _ANSI_ARGS_((ClientData instanceData,$/;"	t
Tk_ImageMaster	/usr/include/tk.h	/^typedef struct Tk_ImageMaster_ *Tk_ImageMaster;$/;"	t	typeref:struct:Tk_ImageMaster_
Tk_ImagePostscriptProc	/usr/include/tk.h	/^typedef int (Tk_ImagePostscriptProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_ImageStringMatchProc	/usr/include/tk.h	/^typedef int (Tk_ImageStringMatchProc) _ANSI_ARGS_((Tcl_Obj *dataObj,$/;"	t
Tk_ImageStringMatchProc	/usr/include/tk.h	/^typedef int (Tk_ImageStringMatchProc) _ANSI_ARGS_((char *string,$/;"	t
Tk_ImageStringReadProc	/usr/include/tk.h	/^typedef int (Tk_ImageStringReadProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ImageStringWriteProc	/usr/include/tk.h	/^typedef int (Tk_ImageStringWriteProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ImageType	/usr/include/tk.h	/^struct Tk_ImageType {$/;"	s
Tk_ImageType	/usr/include/tk.h	/^typedef struct Tk_ImageType Tk_ImageType;$/;"	t	typeref:struct:Tk_ImageType
Tk_ImageType::createProc	/usr/include/tk.h	/^    Tk_ImageCreateProc *createProc;$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::deleteProc	/usr/include/tk.h	/^    Tk_ImageDeleteProc *deleteProc;$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::displayProc	/usr/include/tk.h	/^    Tk_ImageDisplayProc *displayProc;$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::freeProc	/usr/include/tk.h	/^    Tk_ImageFreeProc *freeProc;	\/* Procedure to call whenever Tk_FreeImage is$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::getProc	/usr/include/tk.h	/^    Tk_ImageGetProc *getProc;	\/* Procedure to call the first time$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::name	/usr/include/tk.h	/^    char *name;			\/* Name of image type. *\/$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::nextPtr	/usr/include/tk.h	/^    struct Tk_ImageType *nextPtr;$/;"	m	struct:Tk_ImageType	typeref:struct:Tk_ImageType::Tk_ImageType	access:public
Tk_ImageType::postscriptProc	/usr/include/tk.h	/^    Tk_ImagePostscriptProc *postscriptProc;$/;"	m	struct:Tk_ImageType	access:public
Tk_ImageType::reserved	/usr/include/tk.h	/^    char *reserved;		\/* reserved for future expansion *\/$/;"	m	struct:Tk_ImageType	access:public
Tk_Init	/usr/include/tkDecls.h	/^#define Tk_Init /;"	d
Tk_Init	/usr/include/tkDecls.h	/^EXTERN int		Tk_Init (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tk_InitConsoleChannels	/usr/include/tkDecls.h	/^#define Tk_InitConsoleChannels /;"	d
Tk_InitConsoleChannels	/usr/include/tkDecls.h	/^EXTERN void		Tk_InitConsoleChannels (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tk_InitConsoleChannels_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_InitConsoleChannels_TCL_DECLARED$/;"	d
Tk_InitImageArgs	/usr/include/tk.h	/^#define Tk_InitImageArgs(/;"	d
Tk_InitOptions	/usr/include/tkDecls.h	/^#define Tk_InitOptions /;"	d
Tk_InitOptions	/usr/include/tkDecls.h	/^EXTERN int		Tk_InitOptions (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin)
Tk_InitOptions_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_InitOptions_TCL_DECLARED$/;"	d
Tk_InitStubs	/usr/include/tk.h	/^#define Tk_InitStubs(/;"	d
Tk_InitStubs	/usr/include/tk.h	/^const char *		Tk_InitStubs _ANSI_ARGS_((Tcl_Interp *interp,$/;"	p	signature:(Tcl_Interp *interp, const char *version, int exact)
Tk_Init_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Init_TCL_DECLARED$/;"	d
Tk_InternAtom	/usr/include/tkDecls.h	/^#define Tk_InternAtom /;"	d
Tk_InternAtom	/usr/include/tkDecls.h	/^EXTERN Atom		Tk_InternAtom (Tk_Window tkwin, CONST char * name);$/;"	p	signature:(Tk_Window tkwin, CONST char * name)
Tk_InternAtom_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_InternAtom_TCL_DECLARED$/;"	d
Tk_InternalBorderBottom	/usr/include/tk.h	/^#define Tk_InternalBorderBottom(/;"	d
Tk_InternalBorderLeft	/usr/include/tk.h	/^#define Tk_InternalBorderLeft(/;"	d
Tk_InternalBorderRight	/usr/include/tk.h	/^#define Tk_InternalBorderRight(/;"	d
Tk_InternalBorderTop	/usr/include/tk.h	/^#define Tk_InternalBorderTop(/;"	d
Tk_InternalBorderWidth	/usr/include/tk.h	/^#define Tk_InternalBorderWidth(/;"	d
Tk_Interp	/usr/include/tkDecls.h	/^#define Tk_Interp /;"	d
Tk_Interp	/usr/include/tkDecls.h	/^EXTERN Tcl_Interp *	Tk_Interp (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_Interp_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Interp_TCL_DECLARED$/;"	d
Tk_IntersectTextLayout	/usr/include/tkDecls.h	/^#define Tk_IntersectTextLayout /;"	d
Tk_IntersectTextLayout	/usr/include/tkDecls.h	/^EXTERN int		Tk_IntersectTextLayout (Tk_TextLayout layout, int x, $/;"	p	signature:(Tk_TextLayout layout, int x, int y, int width, int height)
Tk_IntersectTextLayout_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_IntersectTextLayout_TCL_DECLARED$/;"	d
Tk_IsContainer	/usr/include/tk.h	/^#define Tk_IsContainer(/;"	d
Tk_IsEmbedded	/usr/include/tk.h	/^#define Tk_IsEmbedded(/;"	d
Tk_IsManageable	/usr/include/tk.h	/^#define Tk_IsManageable(/;"	d
Tk_IsMapped	/usr/include/tk.h	/^#define Tk_IsMapped(/;"	d
Tk_IsTopLevel	/usr/include/tk.h	/^#define Tk_IsTopLevel(/;"	d
Tk_Item	/usr/include/tk.h	/^typedef struct Tk_Item {$/;"	s
Tk_Item	/usr/include/tk.h	/^} Tk_Item;$/;"	t	typeref:struct:Tk_Item
Tk_Item::id	/usr/include/tk.h	/^    int id;			\/* Unique identifier for this item (also$/;"	m	struct:Tk_Item	access:public
Tk_Item::nextPtr	/usr/include/tk.h	/^    struct Tk_Item *nextPtr;	\/* Next in display list of all items in this$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_Item	access:public
Tk_Item::numTags	/usr/include/tk.h	/^    int numTags;		\/* Number of tag slots actually used at$/;"	m	struct:Tk_Item	access:public
Tk_Item::prevPtr	/usr/include/tk.h	/^    struct Tk_Item *prevPtr;	\/* Previous in display list of all items in$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_Item	access:public
Tk_Item::redraw_flags	/usr/include/tk.h	/^    int redraw_flags;		\/* Some flags used in the canvas *\/$/;"	m	struct:Tk_Item	access:public
Tk_Item::reserved1	/usr/include/tk.h	/^    char *reserved1;		\/* reserved for future use *\/$/;"	m	struct:Tk_Item	access:public
Tk_Item::state	/usr/include/tk.h	/^    Tk_State state;		\/* State of item. *\/$/;"	m	struct:Tk_Item	access:public
Tk_Item::staticTagSpace	/usr/include/tk.h	/^    Tk_Uid staticTagSpace[TK_TAG_SPACE];$/;"	m	struct:Tk_Item	access:public
Tk_Item::tagPtr	/usr/include/tk.h	/^    Tk_Uid *tagPtr;		\/* Pointer to array of tags. Usually points to$/;"	m	struct:Tk_Item	access:public
Tk_Item::tagSpace	/usr/include/tk.h	/^    int tagSpace;		\/* Total amount of tag space available at$/;"	m	struct:Tk_Item	access:public
Tk_Item::typePtr	/usr/include/tk.h	/^    struct Tk_ItemType *typePtr;\/* Table of procedures that implement this$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_ItemType	access:public
Tk_Item::x1	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
Tk_Item::x2	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
Tk_Item::y1	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
Tk_Item::y2	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
Tk_ItemAreaProc	/usr/include/tk.h	/^typedef int	Tk_ItemAreaProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemConfigureProc	/usr/include/tk.h	/^typedef int	Tk_ItemConfigureProc _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ItemCoordProc	/usr/include/tk.h	/^typedef int	Tk_ItemCoordProc _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ItemCreateProc	/usr/include/tk.h	/^typedef int	Tk_ItemCreateProc _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ItemCursorProc	/usr/include/tk.h	/^typedef void	Tk_ItemCursorProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemDCharsProc	/usr/include/tk.h	/^typedef void	Tk_ItemDCharsProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemDeleteProc	/usr/include/tk.h	/^typedef void	Tk_ItemDeleteProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemDisplayProc	/usr/include/tk.h	/^typedef void	Tk_ItemDisplayProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemIndexProc	/usr/include/tk.h	/^typedef int	Tk_ItemIndexProc _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ItemInsertProc	/usr/include/tk.h	/^typedef void	Tk_ItemInsertProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemPointProc	/usr/include/tk.h	/^typedef double	Tk_ItemPointProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemPostscriptProc	/usr/include/tk.h	/^typedef int	Tk_ItemPostscriptProc _ANSI_ARGS_((Tcl_Interp *interp,$/;"	t
Tk_ItemScaleProc	/usr/include/tk.h	/^typedef void	Tk_ItemScaleProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemSelectionProc	/usr/include/tk.h	/^typedef int	Tk_ItemSelectionProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemTranslateProc	/usr/include/tk.h	/^typedef void	Tk_ItemTranslateProc _ANSI_ARGS_((Tk_Canvas canvas,$/;"	t
Tk_ItemType	/usr/include/tk.h	/^typedef struct Tk_ItemType {$/;"	s
Tk_ItemType	/usr/include/tk.h	/^} Tk_ItemType;$/;"	t	typeref:struct:Tk_ItemType
Tk_ItemType::alwaysRedraw	/usr/include/tk.h	/^    int alwaysRedraw;		\/* Non-zero means displayProc should be called$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::areaProc	/usr/include/tk.h	/^    Tk_ItemAreaProc *areaProc;	\/* Computes whether item is inside, outside,$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::configProc	/usr/include/tk.h	/^    Tk_ItemConfigureProc *configProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::configSpecs	/usr/include/tk.h	/^    Tk_ConfigSpec *configSpecs;	\/* Pointer to array of configuration specs for$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::coordProc	/usr/include/tk.h	/^    Tk_ItemCoordProc *coordProc;\/* Procedure to call to get and set the item's$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::createProc	/usr/include/tk.h	/^    Tk_ItemCreateProc *createProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::dCharsProc	/usr/include/tk.h	/^    Tk_ItemDCharsProc *dCharsProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::deleteProc	/usr/include/tk.h	/^    Tk_ItemDeleteProc *deleteProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::displayProc	/usr/include/tk.h	/^    Tk_ItemDisplayProc *displayProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::icursorProc	/usr/include/tk.h	/^    Tk_ItemCursorProc *icursorProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::indexProc	/usr/include/tk.h	/^    Tk_ItemIndexProc *indexProc;\/* Procedure to determine index of indicated$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::insertProc	/usr/include/tk.h	/^    Tk_ItemInsertProc *insertProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::itemSize	/usr/include/tk.h	/^    int itemSize;		\/* Total amount of space needed for item's$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::name	/usr/include/tk.h	/^    char *name;			\/* The name of this type of item, such as$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::nextPtr	/usr/include/tk.h	/^    struct Tk_ItemType *nextPtr;\/* Used to link types together into a list. *\/$/;"	m	struct:Tk_ItemType	typeref:struct:Tk_ItemType::Tk_ItemType	access:public
Tk_ItemType::pointProc	/usr/include/tk.h	/^    Tk_ItemPointProc *pointProc;\/* Computes distance from item to a given$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::postscriptProc	/usr/include/tk.h	/^    Tk_ItemPostscriptProc *postscriptProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::reserved1	/usr/include/tk.h	/^    char *reserved1;		\/* Reserved for future extension. *\/$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::reserved2	/usr/include/tk.h	/^    int reserved2;		\/* Carefully compatible with *\/$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::reserved3	/usr/include/tk.h	/^    char *reserved3;		\/* Jan Nijtmans dash patch *\/$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::reserved4	/usr/include/tk.h	/^    char *reserved4;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::scaleProc	/usr/include/tk.h	/^    Tk_ItemScaleProc *scaleProc;\/* Procedure to rescale items of this type. *\/$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::selectionProc	/usr/include/tk.h	/^    Tk_ItemSelectionProc *selectionProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_ItemType::translateProc	/usr/include/tk.h	/^    Tk_ItemTranslateProc *translateProc;$/;"	m	struct:Tk_ItemType	access:public
Tk_Justify	/usr/include/tk.h	/^} Tk_Justify;$/;"	t	typeref:enum:__anon128
Tk_LostSelProc	/usr/include/tk.h	/^typedef void (Tk_LostSelProc) _ANSI_ARGS_((ClientData clientData));$/;"	t
Tk_MacOSXEmbedGetClipProc	/usr/include/tkMacOSX.h	/^typedef void (Tk_MacOSXEmbedGetClipProc) (Tk_Window window, TkRegion rgn);$/;"	t
Tk_MacOSXEmbedGetGrafPortProc	/usr/include/tkMacOSX.h	/^typedef void* (Tk_MacOSXEmbedGetGrafPortProc) (Tk_Window window);$/;"	t
Tk_MacOSXEmbedGetOffsetInParentProc	/usr/include/tkMacOSX.h	/^typedef void (Tk_MacOSXEmbedGetOffsetInParentProc) (Tk_Window window, Point *ulCorner);$/;"	t
Tk_MacOSXEmbedMakeContainerExistProc	/usr/include/tkMacOSX.h	/^typedef int (Tk_MacOSXEmbedMakeContainerExistProc) (Tk_Window window);$/;"	t
Tk_MacOSXEmbedRegisterWinProc	/usr/include/tkMacOSX.h	/^typedef int (Tk_MacOSXEmbedRegisterWinProc) (long winID, Tk_Window window);$/;"	t
Tk_MacOSXIsAppInFront	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXIsAppInFront /;"	d
Tk_MacOSXIsAppInFront	/usr/include/tkPlatDecls.h	/^EXTERN int		Tk_MacOSXIsAppInFront (void);$/;"	p	signature:(void)
Tk_MacOSXIsAppInFront_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXIsAppInFront_TCL_DECLARED$/;"	d
Tk_MacOSXSetEmbedHandler	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXSetEmbedHandler /;"	d
Tk_MacOSXSetEmbedHandler	/usr/include/tkPlatDecls.h	/^EXTERN void		Tk_MacOSXSetEmbedHandler ($/;"	p	signature:( Tk_MacOSXEmbedRegisterWinProc * registerWinProcPtr, Tk_MacOSXEmbedGetGrafPortProc * getPortProcPtr, Tk_MacOSXEmbedMakeContainerExistProc * containerExistProcPtr, Tk_MacOSXEmbedGetClipProc * getClipProc, Tk_MacOSXEmbedGetOffsetInParentProc * getOffsetProc)
Tk_MacOSXSetEmbedHandler_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXSetEmbedHandler_TCL_DECLARED$/;"	d
Tk_MacOSXSetupTkNotifier	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXSetupTkNotifier /;"	d
Tk_MacOSXSetupTkNotifier	/usr/include/tkPlatDecls.h	/^EXTERN void		Tk_MacOSXSetupTkNotifier (void);$/;"	p	signature:(void)
Tk_MacOSXSetupTkNotifier_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXSetupTkNotifier_TCL_DECLARED$/;"	d
Tk_MacOSXTkOwnsCursor	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXTkOwnsCursor /;"	d
Tk_MacOSXTkOwnsCursor	/usr/include/tkPlatDecls.h	/^EXTERN void		Tk_MacOSXTkOwnsCursor (int tkOwnsIt);$/;"	p	signature:(int tkOwnsIt)
Tk_MacOSXTkOwnsCursor_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXTkOwnsCursor_TCL_DECLARED$/;"	d
Tk_MacOSXTurnOffMenus	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXTurnOffMenus /;"	d
Tk_MacOSXTurnOffMenus	/usr/include/tkPlatDecls.h	/^EXTERN void		Tk_MacOSXTurnOffMenus (void);$/;"	p	signature:(void)
Tk_MacOSXTurnOffMenus_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_MacOSXTurnOffMenus_TCL_DECLARED$/;"	d
Tk_Main	/usr/include/tk.h	/^#define Tk_Main(/;"	d
Tk_MainEx	/usr/include/tkDecls.h	/^#define Tk_MainEx /;"	d
Tk_MainEx	/usr/include/tkDecls.h	/^EXTERN void		Tk_MainEx (int argc, char ** argv, $/;"	p	signature:(int argc, char ** argv, Tcl_AppInitProc * appInitProc, Tcl_Interp * interp)
Tk_MainEx_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MainEx_TCL_DECLARED$/;"	d
Tk_MainLoop	/usr/include/tkDecls.h	/^#define Tk_MainLoop /;"	d
Tk_MainLoop	/usr/include/tkDecls.h	/^EXTERN void		Tk_MainLoop (void);$/;"	p	signature:(void)
Tk_MainLoop_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MainLoop_TCL_DECLARED$/;"	d
Tk_MainWindow	/usr/include/tkDecls.h	/^#define Tk_MainWindow /;"	d
Tk_MainWindow	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_MainWindow (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tk_MainWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MainWindow_TCL_DECLARED$/;"	d
Tk_MaintainGeometry	/usr/include/tkDecls.h	/^#define Tk_MaintainGeometry /;"	d
Tk_MaintainGeometry	/usr/include/tkDecls.h	/^EXTERN void		Tk_MaintainGeometry (Tk_Window slave, $/;"	p	signature:(Tk_Window slave, Tk_Window master, int x, int y, int width, int height)
Tk_MaintainGeometry_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MaintainGeometry_TCL_DECLARED$/;"	d
Tk_MakeWindowExist	/usr/include/tkDecls.h	/^#define Tk_MakeWindowExist /;"	d
Tk_MakeWindowExist	/usr/include/tkDecls.h	/^EXTERN void		Tk_MakeWindowExist (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_MakeWindowExist_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MakeWindowExist_TCL_DECLARED$/;"	d
Tk_ManageGeometry	/usr/include/tkDecls.h	/^#define Tk_ManageGeometry /;"	d
Tk_ManageGeometry	/usr/include/tkDecls.h	/^EXTERN void		Tk_ManageGeometry (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, CONST Tk_GeomMgr * mgrPtr, ClientData clientData)
Tk_ManageGeometry_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ManageGeometry_TCL_DECLARED$/;"	d
Tk_MapWindow	/usr/include/tkDecls.h	/^#define Tk_MapWindow /;"	d
Tk_MapWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_MapWindow (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_MapWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MapWindow_TCL_DECLARED$/;"	d
Tk_MeasureChars	/usr/include/tkDecls.h	/^#define Tk_MeasureChars /;"	d
Tk_MeasureChars	/usr/include/tkDecls.h	/^EXTERN int		Tk_MeasureChars (Tk_Font tkfont, CONST char * source, $/;"	p	signature:(Tk_Font tkfont, CONST char * source, int numBytes, int maxPixels, int flags, int * lengthPtr)
Tk_MeasureChars_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MeasureChars_TCL_DECLARED$/;"	d
Tk_MinReqHeight	/usr/include/tk.h	/^#define Tk_MinReqHeight(/;"	d
Tk_MinReqWidth	/usr/include/tk.h	/^#define Tk_MinReqWidth(/;"	d
Tk_MoveResizeWindow	/usr/include/tkDecls.h	/^#define Tk_MoveResizeWindow /;"	d
Tk_MoveResizeWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_MoveResizeWindow (Tk_Window tkwin, int x, int y, $/;"	p	signature:(Tk_Window tkwin, int x, int y, int width, int height)
Tk_MoveResizeWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MoveResizeWindow_TCL_DECLARED$/;"	d
Tk_MoveToplevelWindow	/usr/include/tkDecls.h	/^#define Tk_MoveToplevelWindow /;"	d
Tk_MoveToplevelWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_MoveToplevelWindow (Tk_Window tkwin, int x, int y);$/;"	p	signature:(Tk_Window tkwin, int x, int y)
Tk_MoveToplevelWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MoveToplevelWindow_TCL_DECLARED$/;"	d
Tk_MoveWindow	/usr/include/tkDecls.h	/^#define Tk_MoveWindow /;"	d
Tk_MoveWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_MoveWindow (Tk_Window tkwin, int x, int y);$/;"	p	signature:(Tk_Window tkwin, int x, int y)
Tk_MoveWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_MoveWindow_TCL_DECLARED$/;"	d
Tk_Name	/usr/include/tk.h	/^#define Tk_Name(/;"	d
Tk_NameOf3DBorder	/usr/include/tkDecls.h	/^#define Tk_NameOf3DBorder /;"	d
Tk_NameOf3DBorder	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOf3DBorder (Tk_3DBorder border);$/;"	p	signature:(Tk_3DBorder border)
Tk_NameOf3DBorder_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOf3DBorder_TCL_DECLARED$/;"	d
Tk_NameOfAnchor	/usr/include/tkDecls.h	/^#define Tk_NameOfAnchor /;"	d
Tk_NameOfAnchor	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfAnchor (Tk_Anchor anchor);$/;"	p	signature:(Tk_Anchor anchor)
Tk_NameOfAnchor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfAnchor_TCL_DECLARED$/;"	d
Tk_NameOfBitmap	/usr/include/tkDecls.h	/^#define Tk_NameOfBitmap /;"	d
Tk_NameOfBitmap	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfBitmap (Display * display, $/;"	p	signature:(Display * display, Pixmap bitmap)
Tk_NameOfBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfBitmap_TCL_DECLARED$/;"	d
Tk_NameOfCapStyle	/usr/include/tkDecls.h	/^#define Tk_NameOfCapStyle /;"	d
Tk_NameOfCapStyle	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfCapStyle (int cap);$/;"	p	signature:(int cap)
Tk_NameOfCapStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfCapStyle_TCL_DECLARED$/;"	d
Tk_NameOfColor	/usr/include/tkDecls.h	/^#define Tk_NameOfColor /;"	d
Tk_NameOfColor	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfColor (XColor * colorPtr);$/;"	p	signature:(XColor * colorPtr)
Tk_NameOfColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfColor_TCL_DECLARED$/;"	d
Tk_NameOfCursor	/usr/include/tkDecls.h	/^#define Tk_NameOfCursor /;"	d
Tk_NameOfCursor	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfCursor (Display * display, $/;"	p	signature:(Display * display, Tk_Cursor cursor)
Tk_NameOfCursor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfCursor_TCL_DECLARED$/;"	d
Tk_NameOfFont	/usr/include/tkDecls.h	/^#define Tk_NameOfFont /;"	d
Tk_NameOfFont	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfFont (Tk_Font font);$/;"	p	signature:(Tk_Font font)
Tk_NameOfFont_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfFont_TCL_DECLARED$/;"	d
Tk_NameOfImage	/usr/include/tkDecls.h	/^#define Tk_NameOfImage /;"	d
Tk_NameOfImage	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfImage (Tk_ImageMaster imageMaster);$/;"	p	signature:(Tk_ImageMaster imageMaster)
Tk_NameOfImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfImage_TCL_DECLARED$/;"	d
Tk_NameOfJoinStyle	/usr/include/tkDecls.h	/^#define Tk_NameOfJoinStyle /;"	d
Tk_NameOfJoinStyle	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfJoinStyle (int join);$/;"	p	signature:(int join)
Tk_NameOfJoinStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfJoinStyle_TCL_DECLARED$/;"	d
Tk_NameOfJustify	/usr/include/tkDecls.h	/^#define Tk_NameOfJustify /;"	d
Tk_NameOfJustify	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfJustify (Tk_Justify justify);$/;"	p	signature:(Tk_Justify justify)
Tk_NameOfJustify_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfJustify_TCL_DECLARED$/;"	d
Tk_NameOfRelief	/usr/include/tkDecls.h	/^#define Tk_NameOfRelief /;"	d
Tk_NameOfRelief	/usr/include/tkDecls.h	/^EXTERN CONST84_RETURN char * Tk_NameOfRelief (int relief);$/;"	p	signature:(int relief)
Tk_NameOfRelief_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfRelief_TCL_DECLARED$/;"	d
Tk_NameOfStyle	/usr/include/tkDecls.h	/^#define Tk_NameOfStyle /;"	d
Tk_NameOfStyle	/usr/include/tkDecls.h	/^EXTERN CONST char *	Tk_NameOfStyle (Tk_Style style);$/;"	p	signature:(Tk_Style style)
Tk_NameOfStyle_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameOfStyle_TCL_DECLARED$/;"	d
Tk_NameToWindow	/usr/include/tkDecls.h	/^#define Tk_NameToWindow /;"	d
Tk_NameToWindow	/usr/include/tkDecls.h	/^EXTERN Tk_Window	Tk_NameToWindow (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, CONST char * pathName, Tk_Window tkwin)
Tk_NameToWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_NameToWindow_TCL_DECLARED$/;"	d
Tk_ObjCustomOption	/usr/include/tk.h	/^typedef struct Tk_ObjCustomOption {$/;"	s
Tk_ObjCustomOption	/usr/include/tk.h	/^} Tk_ObjCustomOption;$/;"	t	typeref:struct:Tk_ObjCustomOption
Tk_ObjCustomOption::clientData	/usr/include/tk.h	/^    ClientData clientData;	\/* Arbitrary one-word value passed to the$/;"	m	struct:Tk_ObjCustomOption	access:public
Tk_ObjCustomOption::freeProc	/usr/include/tk.h	/^    Tk_CustomOptionFreeProc *freeProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
Tk_ObjCustomOption::getProc	/usr/include/tk.h	/^    Tk_CustomOptionGetProc *getProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
Tk_ObjCustomOption::name	/usr/include/tk.h	/^    const char *name; \/* Name of the custom option. *\/$/;"	m	struct:Tk_ObjCustomOption	access:public
Tk_ObjCustomOption::restoreProc	/usr/include/tk.h	/^    Tk_CustomOptionRestoreProc *restoreProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
Tk_ObjCustomOption::setProc	/usr/include/tk.h	/^    Tk_CustomOptionSetProc *setProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
Tk_Offset	/usr/include/tk.h	/^#define Tk_Offset(/;"	d
Tk_OptionParseProc	/usr/include/tk.h	/^typedef int (Tk_OptionParseProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_OptionPrintProc	/usr/include/tk.h	/^typedef char *(Tk_OptionPrintProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_OptionSpec	/usr/include/tk.h	/^typedef struct Tk_OptionSpec {$/;"	s
Tk_OptionSpec	/usr/include/tk.h	/^} Tk_OptionSpec;$/;"	t	typeref:struct:Tk_OptionSpec
Tk_OptionSpec::clientData	/usr/include/tk.h	/^    ClientData clientData;	\/* An alternate place to put option-specific$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::dbClass	/usr/include/tk.h	/^    const char *dbClass;	\/* Class for option in database. *\/$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::dbName	/usr/include/tk.h	/^    const char *dbName;		\/* Name for option in option database. *\/$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::defValue	/usr/include/tk.h	/^    const char *defValue;	\/* Default value for option if not specified$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::flags	/usr/include/tk.h	/^    int flags;			\/* Any combination of the values defined$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::internalOffset	/usr/include/tk.h	/^    int internalOffset;		\/* Where in record to store the internal$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::objOffset	/usr/include/tk.h	/^    int objOffset;		\/* Where in record to store a Tcl_Obj * that$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::optionName	/usr/include/tk.h	/^    const char *optionName;	\/* Name used to specify option in Tcl$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::type	/usr/include/tk.h	/^    Tk_OptionType type;		\/* Type of option, such as TK_OPTION_COLOR;$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionSpec::typeMask	/usr/include/tk.h	/^    int typeMask;		\/* An arbitrary bit mask defined by the class$/;"	m	struct:Tk_OptionSpec	access:public
Tk_OptionTable	/usr/include/tk.h	/^typedef struct Tk_OptionTable_ *Tk_OptionTable;$/;"	t	typeref:struct:Tk_OptionTable_
Tk_OptionType	/usr/include/tk.h	/^} Tk_OptionType;$/;"	t	typeref:enum:__anon123
Tk_Outline	/usr/include/tk.h	/^typedef struct Tk_Outline {$/;"	s
Tk_Outline	/usr/include/tk.h	/^} Tk_Outline;$/;"	t	typeref:struct:Tk_Outline
Tk_Outline::activeColor	/usr/include/tk.h	/^    XColor *activeColor;	\/* Outline color if state is active. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::activeDash	/usr/include/tk.h	/^    Tk_Dash activeDash;		\/* Dash pattern if state is active. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::activeStipple	/usr/include/tk.h	/^    Pixmap activeStipple;	\/* Outline Stipple pattern if state is$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::activeWidth	/usr/include/tk.h	/^    double activeWidth;		\/* Width of outline. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::color	/usr/include/tk.h	/^    XColor *color;		\/* Outline color. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::dash	/usr/include/tk.h	/^    Tk_Dash dash;		\/* Dash pattern. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::disabledColor	/usr/include/tk.h	/^    XColor *disabledColor;	\/* Outline color if state is disabled. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::disabledDash	/usr/include/tk.h	/^    Tk_Dash disabledDash;	\/* Dash pattern if state is disabled. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::disabledStipple	/usr/include/tk.h	/^    Pixmap disabledStipple;	\/* Outline Stipple pattern if state is$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::disabledWidth	/usr/include/tk.h	/^    double disabledWidth;	\/* Width of outline. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::gc	/usr/include/tk.h	/^    GC gc;			\/* Graphics context. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::offset	/usr/include/tk.h	/^    int offset;			\/* Dash offset. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::reserved1	/usr/include/tk.h	/^    VOID *reserved1;		\/* Reserved for future expansion. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::reserved2	/usr/include/tk.h	/^    VOID *reserved2;$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::reserved3	/usr/include/tk.h	/^    VOID *reserved3;$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::stipple	/usr/include/tk.h	/^    Pixmap stipple;		\/* Outline Stipple pattern. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::tsoffset	/usr/include/tk.h	/^    Tk_TSOffset tsoffset;	\/* Stipple offset for outline. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_Outline::width	/usr/include/tk.h	/^    double width;		\/* Width of outline. *\/$/;"	m	struct:Tk_Outline	access:public
Tk_OwnSelection	/usr/include/tkDecls.h	/^#define Tk_OwnSelection /;"	d
Tk_OwnSelection	/usr/include/tkDecls.h	/^EXTERN void		Tk_OwnSelection (Tk_Window tkwin, Atom selection, $/;"	p	signature:(Tk_Window tkwin, Atom selection, Tk_LostSelProc * proc, ClientData clientData)
Tk_OwnSelection_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_OwnSelection_TCL_DECLARED$/;"	d
Tk_Parent	/usr/include/tk.h	/^#define Tk_Parent(/;"	d
Tk_ParseArgv	/usr/include/tkDecls.h	/^#define Tk_ParseArgv /;"	d
Tk_ParseArgv	/usr/include/tkDecls.h	/^EXTERN int		Tk_ParseArgv (Tcl_Interp * interp, Tk_Window tkwin, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, int * argcPtr, CONST84 char ** argv, Tk_ArgvInfo * argTable, int flags)
Tk_ParseArgv_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ParseArgv_TCL_DECLARED$/;"	d
Tk_PathName	/usr/include/tk.h	/^#define Tk_PathName(/;"	d
Tk_PhotoBlank	/usr/include/tkDecls.h	/^#define Tk_PhotoBlank /;"	d
Tk_PhotoBlank	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoBlank (Tk_PhotoHandle handle);$/;"	p	signature:(Tk_PhotoHandle handle)
Tk_PhotoBlank_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoBlank_TCL_DECLARED$/;"	d
Tk_PhotoExpand	/usr/include/tk.h	/^#	undef Tk_PhotoExpand$/;"	d
Tk_PhotoExpand	/usr/include/tk.h	/^#   define Tk_PhotoExpand	/;"	d
Tk_PhotoExpand	/usr/include/tkDecls.h	/^#define Tk_PhotoExpand /;"	d
Tk_PhotoExpand	/usr/include/tkDecls.h	/^EXTERN int		Tk_PhotoExpand (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PhotoHandle handle, int width, int height)
Tk_PhotoExpand_Panic	/usr/include/tkDecls.h	/^#define Tk_PhotoExpand_Panic /;"	d
Tk_PhotoExpand_Panic	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoExpand_Panic (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, int width, int height)
Tk_PhotoExpand_Panic_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoExpand_Panic_TCL_DECLARED$/;"	d
Tk_PhotoExpand_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoExpand_TCL_DECLARED$/;"	d
Tk_PhotoGetImage	/usr/include/tkDecls.h	/^#define Tk_PhotoGetImage /;"	d
Tk_PhotoGetImage	/usr/include/tkDecls.h	/^EXTERN int		Tk_PhotoGetImage (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr)
Tk_PhotoGetImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoGetImage_TCL_DECLARED$/;"	d
Tk_PhotoGetSize	/usr/include/tkDecls.h	/^#define Tk_PhotoGetSize /;"	d
Tk_PhotoGetSize	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoGetSize (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, int * widthPtr, int * heightPtr)
Tk_PhotoGetSize_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoGetSize_TCL_DECLARED$/;"	d
Tk_PhotoHandle	/usr/include/tk.h	/^typedef void *Tk_PhotoHandle;$/;"	t
Tk_PhotoImageBlock	/usr/include/tk.h	/^typedef struct Tk_PhotoImageBlock {$/;"	s
Tk_PhotoImageBlock	/usr/include/tk.h	/^} Tk_PhotoImageBlock;$/;"	t	typeref:struct:Tk_PhotoImageBlock
Tk_PhotoImageBlock::height	/usr/include/tk.h	/^    int height;			\/* Height of block, in pixels. *\/$/;"	m	struct:Tk_PhotoImageBlock	access:public
Tk_PhotoImageBlock::offset	/usr/include/tk.h	/^    int offset[4];		\/* Address differences between the red, green,$/;"	m	struct:Tk_PhotoImageBlock	access:public
Tk_PhotoImageBlock::pitch	/usr/include/tk.h	/^    int pitch;			\/* Address difference between corresponding$/;"	m	struct:Tk_PhotoImageBlock	access:public
Tk_PhotoImageBlock::pixelPtr	/usr/include/tk.h	/^    unsigned char *pixelPtr;	\/* Pointer to the first pixel. *\/$/;"	m	struct:Tk_PhotoImageBlock	access:public
Tk_PhotoImageBlock::pixelSize	/usr/include/tk.h	/^    int pixelSize;		\/* Address difference between successive$/;"	m	struct:Tk_PhotoImageBlock	access:public
Tk_PhotoImageBlock::width	/usr/include/tk.h	/^    int width;			\/* Width of block, in pixels. *\/$/;"	m	struct:Tk_PhotoImageBlock	access:public
Tk_PhotoImageFormat	/usr/include/tk.h	/^struct Tk_PhotoImageFormat {$/;"	s
Tk_PhotoImageFormat	/usr/include/tk.h	/^typedef struct Tk_PhotoImageFormat Tk_PhotoImageFormat;$/;"	t	typeref:struct:Tk_PhotoImageFormat
Tk_PhotoImageFormat::fileMatchProc	/usr/include/tk.h	/^    Tk_ImageFileMatchProc *fileMatchProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::fileReadProc	/usr/include/tk.h	/^    Tk_ImageFileReadProc *fileReadProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::fileWriteProc	/usr/include/tk.h	/^    Tk_ImageFileWriteProc *fileWriteProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::name	/usr/include/tk.h	/^    char *name;			\/* Name of image file format *\/$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::nextPtr	/usr/include/tk.h	/^    struct Tk_PhotoImageFormat *nextPtr;$/;"	m	struct:Tk_PhotoImageFormat	typeref:struct:Tk_PhotoImageFormat::Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::stringMatchProc	/usr/include/tk.h	/^    Tk_ImageStringMatchProc *stringMatchProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::stringReadProc	/usr/include/tk.h	/^    Tk_ImageStringReadProc *stringReadProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoImageFormat::stringWriteProc	/usr/include/tk.h	/^    Tk_ImageStringWriteProc *stringWriteProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
Tk_PhotoPutBlock	/usr/include/tk.h	/^#	    undef Tk_PhotoPutBlock$/;"	d
Tk_PhotoPutBlock	/usr/include/tk.h	/^#	define Tk_PhotoPutBlock	/;"	d
Tk_PhotoPutBlock	/usr/include/tk.h	/^#	undef Tk_PhotoPutBlock$/;"	d
Tk_PhotoPutBlock	/usr/include/tk.h	/^#   define Tk_PhotoPutBlock	/;"	d
Tk_PhotoPutBlock	/usr/include/tkDecls.h	/^#define Tk_PhotoPutBlock /;"	d
Tk_PhotoPutBlock	/usr/include/tkDecls.h	/^EXTERN int		Tk_PhotoPutBlock (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int compRule)
Tk_PhotoPutBlock_NoComposite	/usr/include/tkDecls.h	/^#define Tk_PhotoPutBlock_NoComposite /;"	d
Tk_PhotoPutBlock_NoComposite	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoPutBlock_NoComposite (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height)
Tk_PhotoPutBlock_NoComposite_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoPutBlock_NoComposite_TCL_DECLARED$/;"	d
Tk_PhotoPutBlock_Panic	/usr/include/tkDecls.h	/^#define Tk_PhotoPutBlock_Panic /;"	d
Tk_PhotoPutBlock_Panic	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoPutBlock_Panic (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int compRule)
Tk_PhotoPutBlock_Panic_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoPutBlock_Panic_TCL_DECLARED$/;"	d
Tk_PhotoPutBlock_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoPutBlock_TCL_DECLARED$/;"	d
Tk_PhotoPutZoomedBlock	/usr/include/tk.h	/^#	    undef Tk_PhotoPutZoomedBlock$/;"	d
Tk_PhotoPutZoomedBlock	/usr/include/tk.h	/^#	define Tk_PhotoPutZoomedBlock	/;"	d
Tk_PhotoPutZoomedBlock	/usr/include/tk.h	/^#	undef Tk_PhotoPutZoomedBlock$/;"	d
Tk_PhotoPutZoomedBlock	/usr/include/tk.h	/^#   define Tk_PhotoPutZoomedBlock	/;"	d
Tk_PhotoPutZoomedBlock	/usr/include/tkDecls.h	/^#define Tk_PhotoPutZoomedBlock /;"	d
Tk_PhotoPutZoomedBlock	/usr/include/tkDecls.h	/^EXTERN int		Tk_PhotoPutZoomedBlock (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule)
Tk_PhotoPutZoomedBlock_NoComposite	/usr/include/tkDecls.h	/^#define Tk_PhotoPutZoomedBlock_NoComposite /;"	d
Tk_PhotoPutZoomedBlock_NoComposite	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoPutZoomedBlock_NoComposite ($/;"	p	signature:( Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY)
Tk_PhotoPutZoomedBlock_NoComposite_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoPutZoomedBlock_NoComposite_TCL_DECLARED$/;"	d
Tk_PhotoPutZoomedBlock_Panic	/usr/include/tkDecls.h	/^#define Tk_PhotoPutZoomedBlock_Panic /;"	d
Tk_PhotoPutZoomedBlock_Panic	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoPutZoomedBlock_Panic (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule)
Tk_PhotoPutZoomedBlock_Panic_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoPutZoomedBlock_Panic_TCL_DECLARED$/;"	d
Tk_PhotoPutZoomedBlock_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoPutZoomedBlock_TCL_DECLARED$/;"	d
Tk_PhotoSetSize	/usr/include/tk.h	/^#	undef Tk_PhotoSetSize$/;"	d
Tk_PhotoSetSize	/usr/include/tk.h	/^#   define Tk_PhotoSetSize	/;"	d
Tk_PhotoSetSize	/usr/include/tkDecls.h	/^#define Tk_PhotoSetSize /;"	d
Tk_PhotoSetSize	/usr/include/tkDecls.h	/^EXTERN int		Tk_PhotoSetSize (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PhotoHandle handle, int width, int height)
Tk_PhotoSetSize_Panic	/usr/include/tkDecls.h	/^#define Tk_PhotoSetSize_Panic /;"	d
Tk_PhotoSetSize_Panic	/usr/include/tkDecls.h	/^EXTERN void		Tk_PhotoSetSize_Panic (Tk_PhotoHandle handle, $/;"	p	signature:(Tk_PhotoHandle handle, int width, int height)
Tk_PhotoSetSize_Panic_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoSetSize_Panic_TCL_DECLARED$/;"	d
Tk_PhotoSetSize_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PhotoSetSize_TCL_DECLARED$/;"	d
Tk_PkgInitStubsCheck	/usr/include/tk.h	/^EXTERN const char *	Tk_PkgInitStubsCheck _ANSI_ARGS_((Tcl_Interp *interp,$/;"	p	signature:(Tcl_Interp *interp, const char *version, int exact)
Tk_PointToChar	/usr/include/tkDecls.h	/^#define Tk_PointToChar /;"	d
Tk_PointToChar	/usr/include/tkDecls.h	/^EXTERN int		Tk_PointToChar (Tk_TextLayout layout, int x, int y);$/;"	p	signature:(Tk_TextLayout layout, int x, int y)
Tk_PointToChar_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PointToChar_TCL_DECLARED$/;"	d
Tk_PointerEvent	/usr/include/tkPlatDecls.h	/^#define Tk_PointerEvent /;"	d
Tk_PointerEvent	/usr/include/tkPlatDecls.h	/^EXTERN void		Tk_PointerEvent (HWND hwnd, int x, int y);$/;"	p	signature:(HWND hwnd, int x, int y)
Tk_PointerEvent_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_PointerEvent_TCL_DECLARED$/;"	d
Tk_PostscriptBitmap	/usr/include/tkDecls.h	/^#define Tk_PostscriptBitmap /;"	d
Tk_PostscriptBitmap	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptBitmap (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap, int startX, int startY, int width, int height)
Tk_PostscriptBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptBitmap_TCL_DECLARED$/;"	d
Tk_PostscriptColor	/usr/include/tkDecls.h	/^#define Tk_PostscriptColor /;"	d
Tk_PostscriptColor	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptColor (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PostscriptInfo psInfo, XColor * colorPtr)
Tk_PostscriptColor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptColor_TCL_DECLARED$/;"	d
Tk_PostscriptFont	/usr/include/tkDecls.h	/^#define Tk_PostscriptFont /;"	d
Tk_PostscriptFont	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptFont (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PostscriptInfo psInfo, Tk_Font font)
Tk_PostscriptFontName	/usr/include/tkDecls.h	/^#define Tk_PostscriptFontName /;"	d
Tk_PostscriptFontName	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptFontName (Tk_Font tkfont, $/;"	p	signature:(Tk_Font tkfont, Tcl_DString * dsPtr)
Tk_PostscriptFontName_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptFontName_TCL_DECLARED$/;"	d
Tk_PostscriptFont_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptFont_TCL_DECLARED$/;"	d
Tk_PostscriptImage	/usr/include/tkDecls.h	/^#define Tk_PostscriptImage /;"	d
Tk_PostscriptImage	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptImage (Tk_Image image, $/;"	p	signature:(Tk_Image image, Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psinfo, int x, int y, int width, int height, int prepass)
Tk_PostscriptImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptImage_TCL_DECLARED$/;"	d
Tk_PostscriptInfo	/usr/include/tk.h	/^typedef struct Tk_PostscriptInfo_ *Tk_PostscriptInfo;$/;"	t	typeref:struct:Tk_PostscriptInfo_
Tk_PostscriptPath	/usr/include/tkDecls.h	/^#define Tk_PostscriptPath /;"	d
Tk_PostscriptPath	/usr/include/tkDecls.h	/^EXTERN void		Tk_PostscriptPath (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PostscriptInfo psInfo, double * coordPtr, int numPoints)
Tk_PostscriptPath_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptPath_TCL_DECLARED$/;"	d
Tk_PostscriptPhoto	/usr/include/tkDecls.h	/^#define Tk_PostscriptPhoto /;"	d
Tk_PostscriptPhoto	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptPhoto (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_PhotoImageBlock * blockPtr, Tk_PostscriptInfo psInfo, int width, int height)
Tk_PostscriptPhoto_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptPhoto_TCL_DECLARED$/;"	d
Tk_PostscriptStipple	/usr/include/tkDecls.h	/^#define Tk_PostscriptStipple /;"	d
Tk_PostscriptStipple	/usr/include/tkDecls.h	/^EXTERN int		Tk_PostscriptStipple (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap)
Tk_PostscriptStipple_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptStipple_TCL_DECLARED$/;"	d
Tk_PostscriptY	/usr/include/tkDecls.h	/^#define Tk_PostscriptY /;"	d
Tk_PostscriptY	/usr/include/tkDecls.h	/^EXTERN double		Tk_PostscriptY (double y, Tk_PostscriptInfo psInfo);$/;"	p	signature:(double y, Tk_PostscriptInfo psInfo)
Tk_PostscriptY_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PostscriptY_TCL_DECLARED$/;"	d
Tk_Preserve	/usr/include/tk.h	/^#define Tk_Preserve	/;"	d
Tk_PreserveColormap	/usr/include/tkDecls.h	/^#define Tk_PreserveColormap /;"	d
Tk_PreserveColormap	/usr/include/tkDecls.h	/^EXTERN void		Tk_PreserveColormap (Display * display, $/;"	p	signature:(Display * display, Colormap colormap)
Tk_PreserveColormap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_PreserveColormap_TCL_DECLARED$/;"	d
Tk_QueueWindowEvent	/usr/include/tkDecls.h	/^#define Tk_QueueWindowEvent /;"	d
Tk_QueueWindowEvent	/usr/include/tkDecls.h	/^EXTERN void		Tk_QueueWindowEvent (XEvent * eventPtr, $/;"	p	signature:(XEvent * eventPtr, Tcl_QueuePosition position)
Tk_QueueWindowEvent_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_QueueWindowEvent_TCL_DECLARED$/;"	d
Tk_RedrawImage	/usr/include/tkDecls.h	/^#define Tk_RedrawImage /;"	d
Tk_RedrawImage	/usr/include/tkDecls.h	/^EXTERN void		Tk_RedrawImage (Tk_Image image, int imageX, $/;"	p	signature:(Tk_Image image, int imageX, int imageY, int width, int height, Drawable drawable, int drawableX, int drawableY)
Tk_RedrawImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_RedrawImage_TCL_DECLARED$/;"	d
Tk_RegisterStyleEngine	/usr/include/tkDecls.h	/^#define Tk_RegisterStyleEngine /;"	d
Tk_RegisterStyleEngine	/usr/include/tkDecls.h	/^EXTERN Tk_StyleEngine	Tk_RegisterStyleEngine (CONST char * name, $/;"	p	signature:(CONST char * name, Tk_StyleEngine parent)
Tk_RegisterStyleEngine_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_RegisterStyleEngine_TCL_DECLARED$/;"	d
Tk_RegisterStyledElement	/usr/include/tkDecls.h	/^#define Tk_RegisterStyledElement /;"	d
Tk_RegisterStyledElement	/usr/include/tkDecls.h	/^EXTERN int		Tk_RegisterStyledElement (Tk_StyleEngine engine, $/;"	p	signature:(Tk_StyleEngine engine, Tk_ElementSpec * templatePtr)
Tk_RegisterStyledElement_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_RegisterStyledElement_TCL_DECLARED$/;"	d
Tk_Release	/usr/include/tk.h	/^#define Tk_Release	/;"	d
Tk_ReqHeight	/usr/include/tk.h	/^#define Tk_ReqHeight(/;"	d
Tk_ReqWidth	/usr/include/tk.h	/^#define Tk_ReqWidth(/;"	d
Tk_ResetOutlineGC	/usr/include/tkDecls.h	/^#define Tk_ResetOutlineGC /;"	d
Tk_ResetOutlineGC	/usr/include/tkDecls.h	/^EXTERN int		Tk_ResetOutlineGC (Tk_Canvas canvas, Tk_Item * item, $/;"	p	signature:(Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline)
Tk_ResetOutlineGC_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ResetOutlineGC_TCL_DECLARED$/;"	d
Tk_ResetUserInactiveTime	/usr/include/tkDecls.h	/^#define Tk_ResetUserInactiveTime /;"	d
Tk_ResetUserInactiveTime	/usr/include/tkDecls.h	/^EXTERN void		Tk_ResetUserInactiveTime (Display * dpy);$/;"	p	signature:(Display * dpy)
Tk_ResetUserInactiveTime_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ResetUserInactiveTime_TCL_DECLARED$/;"	d
Tk_ResizeWindow	/usr/include/tkDecls.h	/^#define Tk_ResizeWindow /;"	d
Tk_ResizeWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_ResizeWindow (Tk_Window tkwin, int width, $/;"	p	signature:(Tk_Window tkwin, int width, int height)
Tk_ResizeWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_ResizeWindow_TCL_DECLARED$/;"	d
Tk_RestackWindow	/usr/include/tkDecls.h	/^#define Tk_RestackWindow /;"	d
Tk_RestackWindow	/usr/include/tkDecls.h	/^EXTERN int		Tk_RestackWindow (Tk_Window tkwin, int aboveBelow, $/;"	p	signature:(Tk_Window tkwin, int aboveBelow, Tk_Window other)
Tk_RestackWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_RestackWindow_TCL_DECLARED$/;"	d
Tk_RestoreSavedOptions	/usr/include/tkDecls.h	/^#define Tk_RestoreSavedOptions /;"	d
Tk_RestoreSavedOptions	/usr/include/tkDecls.h	/^EXTERN void		Tk_RestoreSavedOptions (Tk_SavedOptions * savePtr);$/;"	p	signature:(Tk_SavedOptions * savePtr)
Tk_RestoreSavedOptions_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_RestoreSavedOptions_TCL_DECLARED$/;"	d
Tk_RestrictAction	/usr/include/tk.h	/^} Tk_RestrictAction;$/;"	t	typeref:enum:__anon126
Tk_RestrictEvents	/usr/include/tkDecls.h	/^#define Tk_RestrictEvents /;"	d
Tk_RestrictEvents	/usr/include/tkDecls.h	/^EXTERN Tk_RestrictProc * Tk_RestrictEvents (Tk_RestrictProc * proc, $/;"	p	signature:(Tk_RestrictProc * proc, ClientData arg, ClientData * prevArgPtr)
Tk_RestrictEvents_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_RestrictEvents_TCL_DECLARED$/;"	d
Tk_SafeInit	/usr/include/tkDecls.h	/^#define Tk_SafeInit /;"	d
Tk_SafeInit	/usr/include/tkDecls.h	/^EXTERN int		Tk_SafeInit (Tcl_Interp * interp);$/;"	p	signature:(Tcl_Interp * interp)
Tk_SafeInit_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SafeInit_TCL_DECLARED$/;"	d
Tk_SavedOption	/usr/include/tk.h	/^typedef struct Tk_SavedOption {$/;"	s
Tk_SavedOption	/usr/include/tk.h	/^} Tk_SavedOption;$/;"	t	typeref:struct:Tk_SavedOption
Tk_SavedOption::internalForm	/usr/include/tk.h	/^    double internalForm;	\/* The old value of the option, in some$/;"	m	struct:Tk_SavedOption	access:public
Tk_SavedOption::optionPtr	/usr/include/tk.h	/^    struct TkOption *optionPtr;	\/* Points to information that describes the$/;"	m	struct:Tk_SavedOption	typeref:struct:Tk_SavedOption::TkOption	access:public
Tk_SavedOption::valuePtr	/usr/include/tk.h	/^    Tcl_Obj *valuePtr;		\/* The old value of the option, in the form of$/;"	m	struct:Tk_SavedOption	access:public
Tk_SavedOptions	/usr/include/tk.h	/^typedef struct Tk_SavedOptions {$/;"	s
Tk_SavedOptions	/usr/include/tk.h	/^} Tk_SavedOptions;$/;"	t	typeref:struct:Tk_SavedOptions
Tk_SavedOptions::items	/usr/include/tk.h	/^    Tk_SavedOption items[TK_NUM_SAVED_OPTIONS];$/;"	m	struct:Tk_SavedOptions	access:public
Tk_SavedOptions::nextPtr	/usr/include/tk.h	/^    struct Tk_SavedOptions *nextPtr;$/;"	m	struct:Tk_SavedOptions	typeref:struct:Tk_SavedOptions::Tk_SavedOptions	access:public
Tk_SavedOptions::numItems	/usr/include/tk.h	/^    int numItems;		\/* The number of valid items in items field. *\/$/;"	m	struct:Tk_SavedOptions	access:public
Tk_SavedOptions::recordPtr	/usr/include/tk.h	/^    char *recordPtr;		\/* The data structure in which to restore$/;"	m	struct:Tk_SavedOptions	access:public
Tk_SavedOptions::tkwin	/usr/include/tk.h	/^    Tk_Window tkwin;		\/* Window associated with recordPtr; needed to$/;"	m	struct:Tk_SavedOptions	access:public
Tk_Screen	/usr/include/tk.h	/^#define Tk_Screen(/;"	d
Tk_ScreenNumber	/usr/include/tk.h	/^#define Tk_ScreenNumber(/;"	d
Tk_SelectionProc	/usr/include/tk.h	/^typedef int (Tk_SelectionProc) _ANSI_ARGS_((ClientData clientData,$/;"	t
Tk_SetAppName	/usr/include/tkDecls.h	/^#define Tk_SetAppName /;"	d
Tk_SetAppName	/usr/include/tkDecls.h	/^EXTERN CONST char *	Tk_SetAppName (Tk_Window tkwin, CONST char * name);$/;"	p	signature:(Tk_Window tkwin, CONST char * name)
Tk_SetAppName_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetAppName_TCL_DECLARED$/;"	d
Tk_SetBackgroundFromBorder	/usr/include/tkDecls.h	/^#define Tk_SetBackgroundFromBorder /;"	d
Tk_SetBackgroundFromBorder	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetBackgroundFromBorder (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tk_3DBorder border)
Tk_SetBackgroundFromBorder_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetBackgroundFromBorder_TCL_DECLARED$/;"	d
Tk_SetCaretPos	/usr/include/tkDecls.h	/^#define Tk_SetCaretPos /;"	d
Tk_SetCaretPos	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetCaretPos (Tk_Window tkwin, int x, int y, $/;"	p	signature:(Tk_Window tkwin, int x, int y, int height)
Tk_SetCaretPos_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetCaretPos_TCL_DECLARED$/;"	d
Tk_SetClass	/usr/include/tkDecls.h	/^#define Tk_SetClass /;"	d
Tk_SetClass	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetClass (Tk_Window tkwin, CONST char * className);$/;"	p	signature:(Tk_Window tkwin, CONST char * className)
Tk_SetClassProcs	/usr/include/tkDecls.h	/^#define Tk_SetClassProcs /;"	d
Tk_SetClassProcs	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetClassProcs (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Tk_ClassProcs * procs, ClientData instanceData)
Tk_SetClassProcs_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetClassProcs_TCL_DECLARED$/;"	d
Tk_SetClass_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetClass_TCL_DECLARED$/;"	d
Tk_SetGrid	/usr/include/tkDecls.h	/^#define Tk_SetGrid /;"	d
Tk_SetGrid	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetGrid (Tk_Window tkwin, int reqWidth, $/;"	p	signature:(Tk_Window tkwin, int reqWidth, int reqHeight, int gridWidth, int gridHeight)
Tk_SetGrid_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetGrid_TCL_DECLARED$/;"	d
Tk_SetInternalBorder	/usr/include/tkDecls.h	/^#define Tk_SetInternalBorder /;"	d
Tk_SetInternalBorder	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetInternalBorder (Tk_Window tkwin, int width);$/;"	p	signature:(Tk_Window tkwin, int width)
Tk_SetInternalBorderEx	/usr/include/tkDecls.h	/^#define Tk_SetInternalBorderEx /;"	d
Tk_SetInternalBorderEx	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetInternalBorderEx (Tk_Window tkwin, int left, $/;"	p	signature:(Tk_Window tkwin, int left, int right, int top, int bottom)
Tk_SetInternalBorderEx_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetInternalBorderEx_TCL_DECLARED$/;"	d
Tk_SetInternalBorder_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetInternalBorder_TCL_DECLARED$/;"	d
Tk_SetMinimumRequestSize	/usr/include/tkDecls.h	/^#define Tk_SetMinimumRequestSize /;"	d
Tk_SetMinimumRequestSize	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetMinimumRequestSize (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, int minWidth, int minHeight)
Tk_SetMinimumRequestSize_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetMinimumRequestSize_TCL_DECLARED$/;"	d
Tk_SetOptions	/usr/include/tkDecls.h	/^#define Tk_SetOptions /;"	d
Tk_SetOptions	/usr/include/tkDecls.h	/^EXTERN int		Tk_SetOptions (Tcl_Interp * interp, char * recordPtr, $/;"	p	signature:(Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, int objc, Tcl_Obj *CONST objv[], Tk_Window tkwin, Tk_SavedOptions * savePtr, int * maskPtr)
Tk_SetOptions_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetOptions_TCL_DECLARED$/;"	d
Tk_SetTSOrigin	/usr/include/tkDecls.h	/^#define Tk_SetTSOrigin /;"	d
Tk_SetTSOrigin	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetTSOrigin (Tk_Window tkwin, GC gc, int x, int y);$/;"	p	signature:(Tk_Window tkwin, GC gc, int x, int y)
Tk_SetTSOrigin_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetTSOrigin_TCL_DECLARED$/;"	d
Tk_SetWindowBackground	/usr/include/tkDecls.h	/^#define Tk_SetWindowBackground /;"	d
Tk_SetWindowBackground	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetWindowBackground (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, unsigned long pixel)
Tk_SetWindowBackgroundPixmap	/usr/include/tkDecls.h	/^#define Tk_SetWindowBackgroundPixmap /;"	d
Tk_SetWindowBackgroundPixmap	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetWindowBackgroundPixmap (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Pixmap pixmap)
Tk_SetWindowBackgroundPixmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowBackgroundPixmap_TCL_DECLARED$/;"	d
Tk_SetWindowBackground_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowBackground_TCL_DECLARED$/;"	d
Tk_SetWindowBorder	/usr/include/tkDecls.h	/^#define Tk_SetWindowBorder /;"	d
Tk_SetWindowBorder	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetWindowBorder (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, unsigned long pixel)
Tk_SetWindowBorderPixmap	/usr/include/tkDecls.h	/^#define Tk_SetWindowBorderPixmap /;"	d
Tk_SetWindowBorderPixmap	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetWindowBorderPixmap (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Pixmap pixmap)
Tk_SetWindowBorderPixmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowBorderPixmap_TCL_DECLARED$/;"	d
Tk_SetWindowBorderWidth	/usr/include/tkDecls.h	/^#define Tk_SetWindowBorderWidth /;"	d
Tk_SetWindowBorderWidth	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetWindowBorderWidth (Tk_Window tkwin, int width);$/;"	p	signature:(Tk_Window tkwin, int width)
Tk_SetWindowBorderWidth_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowBorderWidth_TCL_DECLARED$/;"	d
Tk_SetWindowBorder_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowBorder_TCL_DECLARED$/;"	d
Tk_SetWindowColormap	/usr/include/tkDecls.h	/^#define Tk_SetWindowColormap /;"	d
Tk_SetWindowColormap	/usr/include/tkDecls.h	/^EXTERN void		Tk_SetWindowColormap (Tk_Window tkwin, $/;"	p	signature:(Tk_Window tkwin, Colormap colormap)
Tk_SetWindowColormap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowColormap_TCL_DECLARED$/;"	d
Tk_SetWindowVisual	/usr/include/tkDecls.h	/^#define Tk_SetWindowVisual /;"	d
Tk_SetWindowVisual	/usr/include/tkDecls.h	/^EXTERN int		Tk_SetWindowVisual (Tk_Window tkwin, Visual * visual, $/;"	p	signature:(Tk_Window tkwin, Visual * visual, int depth, Colormap colormap)
Tk_SetWindowVisual_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SetWindowVisual_TCL_DECLARED$/;"	d
Tk_SizeOfBitmap	/usr/include/tkDecls.h	/^#define Tk_SizeOfBitmap /;"	d
Tk_SizeOfBitmap	/usr/include/tkDecls.h	/^EXTERN void		Tk_SizeOfBitmap (Display * display, Pixmap bitmap, $/;"	p	signature:(Display * display, Pixmap bitmap, int * widthPtr, int * heightPtr)
Tk_SizeOfBitmap_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SizeOfBitmap_TCL_DECLARED$/;"	d
Tk_SizeOfImage	/usr/include/tkDecls.h	/^#define Tk_SizeOfImage /;"	d
Tk_SizeOfImage	/usr/include/tkDecls.h	/^EXTERN void		Tk_SizeOfImage (Tk_Image image, int * widthPtr, $/;"	p	signature:(Tk_Image image, int * widthPtr, int * heightPtr)
Tk_SizeOfImage_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_SizeOfImage_TCL_DECLARED$/;"	d
Tk_Sleep	/usr/include/tk.h	/^#define Tk_Sleep	/;"	d
Tk_SmoothMethod	/usr/include/tk.h	/^typedef struct Tk_SmoothMethod {$/;"	s
Tk_SmoothMethod	/usr/include/tk.h	/^} Tk_SmoothMethod;$/;"	t	typeref:struct:Tk_SmoothMethod
Tk_SmoothMethod::coordProc	/usr/include/tk.h	/^    int (*coordProc) _ANSI_ARGS_((Tk_Canvas canvas,$/;"	m	struct:Tk_SmoothMethod	access:public
Tk_SmoothMethod::name	/usr/include/tk.h	/^    char *name;$/;"	m	struct:Tk_SmoothMethod	access:public
Tk_SmoothMethod::postscriptProc	/usr/include/tk.h	/^    void (*postscriptProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	m	struct:Tk_SmoothMethod	access:public
Tk_State	/usr/include/tk.h	/^} Tk_State;$/;"	t	typeref:enum:__anon131
Tk_StrictMotif	/usr/include/tkDecls.h	/^#define Tk_StrictMotif /;"	d
Tk_StrictMotif	/usr/include/tkDecls.h	/^EXTERN int		Tk_StrictMotif (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_StrictMotif_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_StrictMotif_TCL_DECLARED$/;"	d
Tk_Style	/usr/include/tk.h	/^typedef struct Tk_Style_ *Tk_Style;$/;"	t	typeref:struct:Tk_Style_
Tk_StyleEngine	/usr/include/tk.h	/^typedef struct Tk_StyleEngine_ *Tk_StyleEngine;$/;"	t	typeref:struct:Tk_StyleEngine_
Tk_StyledElement	/usr/include/tk.h	/^typedef struct Tk_StyledElement_ *Tk_StyledElement;$/;"	t	typeref:struct:Tk_StyledElement_
Tk_TSOffset	/usr/include/tk.h	/^typedef struct Tk_TSOffset {$/;"	s
Tk_TSOffset	/usr/include/tk.h	/^} Tk_TSOffset;$/;"	t	typeref:struct:Tk_TSOffset
Tk_TSOffset::flags	/usr/include/tk.h	/^    int flags;			\/* Flags; see below for possible values *\/$/;"	m	struct:Tk_TSOffset	access:public
Tk_TSOffset::xoffset	/usr/include/tk.h	/^    int xoffset;		\/* x offset *\/$/;"	m	struct:Tk_TSOffset	access:public
Tk_TSOffset::yoffset	/usr/include/tk.h	/^    int yoffset;		\/* y offset *\/$/;"	m	struct:Tk_TSOffset	access:public
Tk_TextLayout	/usr/include/tk.h	/^typedef struct Tk_TextLayout_ *Tk_TextLayout;$/;"	t	typeref:struct:Tk_TextLayout_
Tk_TextLayoutToPostscript	/usr/include/tkDecls.h	/^#define Tk_TextLayoutToPostscript /;"	d
Tk_TextLayoutToPostscript	/usr/include/tkDecls.h	/^EXTERN void		Tk_TextLayoutToPostscript (Tcl_Interp * interp, $/;"	p	signature:(Tcl_Interp * interp, Tk_TextLayout layout)
Tk_TextLayoutToPostscript_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_TextLayoutToPostscript_TCL_DECLARED$/;"	d
Tk_TextWidth	/usr/include/tkDecls.h	/^#define Tk_TextWidth /;"	d
Tk_TextWidth	/usr/include/tkDecls.h	/^EXTERN int		Tk_TextWidth (Tk_Font font, CONST char * str, $/;"	p	signature:(Tk_Font font, CONST char * str, int numBytes)
Tk_TextWidth_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_TextWidth_TCL_DECLARED$/;"	d
Tk_TimerProc	/usr/include/tk.h	/^#define Tk_TimerProc	/;"	d
Tk_TimerToken	/usr/include/tk.h	/^#define Tk_TimerToken	/;"	d
Tk_TopWinHierarchy	/usr/include/tk.h	/^#define Tk_TopWinHierarchy(/;"	d
Tk_TranslateWinEvent	/usr/include/tkPlatDecls.h	/^#define Tk_TranslateWinEvent /;"	d
Tk_TranslateWinEvent	/usr/include/tkPlatDecls.h	/^EXTERN int		Tk_TranslateWinEvent (HWND hwnd, UINT message, $/;"	p	signature:(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam, LRESULT * result)
Tk_TranslateWinEvent_TCL_DECLARED	/usr/include/tkPlatDecls.h	/^#define Tk_TranslateWinEvent_TCL_DECLARED$/;"	d
Tk_Uid	/usr/include/tk.h	/^typedef const char *Tk_Uid;$/;"	t
Tk_UndefineCursor	/usr/include/tkDecls.h	/^#define Tk_UndefineCursor /;"	d
Tk_UndefineCursor	/usr/include/tkDecls.h	/^EXTERN void		Tk_UndefineCursor (Tk_Window window);$/;"	p	signature:(Tk_Window window)
Tk_UndefineCursor_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UndefineCursor_TCL_DECLARED$/;"	d
Tk_UnderlineChars	/usr/include/tkDecls.h	/^#define Tk_UnderlineChars /;"	d
Tk_UnderlineChars	/usr/include/tkDecls.h	/^EXTERN void		Tk_UnderlineChars (Display * display, $/;"	p	signature:(Display * display, Drawable drawable, GC gc, Tk_Font tkfont, CONST char * source, int x, int y, int firstByte, int lastByte)
Tk_UnderlineChars_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UnderlineChars_TCL_DECLARED$/;"	d
Tk_UnderlineTextLayout	/usr/include/tkDecls.h	/^#define Tk_UnderlineTextLayout /;"	d
Tk_UnderlineTextLayout	/usr/include/tkDecls.h	/^EXTERN void		Tk_UnderlineTextLayout (Display * display, $/;"	p	signature:(Display * display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int underline)
Tk_UnderlineTextLayout_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UnderlineTextLayout_TCL_DECLARED$/;"	d
Tk_Ungrab	/usr/include/tkDecls.h	/^#define Tk_Ungrab /;"	d
Tk_Ungrab	/usr/include/tkDecls.h	/^EXTERN void		Tk_Ungrab (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_Ungrab_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_Ungrab_TCL_DECLARED$/;"	d
Tk_UnmaintainGeometry	/usr/include/tkDecls.h	/^#define Tk_UnmaintainGeometry /;"	d
Tk_UnmaintainGeometry	/usr/include/tkDecls.h	/^EXTERN void		Tk_UnmaintainGeometry (Tk_Window slave, $/;"	p	signature:(Tk_Window slave, Tk_Window master)
Tk_UnmaintainGeometry_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UnmaintainGeometry_TCL_DECLARED$/;"	d
Tk_UnmapWindow	/usr/include/tkDecls.h	/^#define Tk_UnmapWindow /;"	d
Tk_UnmapWindow	/usr/include/tkDecls.h	/^EXTERN void		Tk_UnmapWindow (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_UnmapWindow_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UnmapWindow_TCL_DECLARED$/;"	d
Tk_UnsetGrid	/usr/include/tkDecls.h	/^#define Tk_UnsetGrid /;"	d
Tk_UnsetGrid	/usr/include/tkDecls.h	/^EXTERN void		Tk_UnsetGrid (Tk_Window tkwin);$/;"	p	signature:(Tk_Window tkwin)
Tk_UnsetGrid_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UnsetGrid_TCL_DECLARED$/;"	d
Tk_UpdatePointer	/usr/include/tkDecls.h	/^#define Tk_UpdatePointer /;"	d
Tk_UpdatePointer	/usr/include/tkDecls.h	/^EXTERN void		Tk_UpdatePointer (Tk_Window tkwin, int x, int y, $/;"	p	signature:(Tk_Window tkwin, int x, int y, int state)
Tk_UpdatePointer_TCL_DECLARED	/usr/include/tkDecls.h	/^#define Tk_UpdatePointer_TCL_DECLARED$/;"	d
Tk_Visual	/usr/include/tk.h	/^#define Tk_Visual(/;"	d
Tk_Width	/usr/include/tk.h	/^#define Tk_Width(/;"	d
Tk_WinManaged	/usr/include/tk.h	/^#define Tk_WinManaged(/;"	d
Tk_Window	/usr/include/tk.h	/^typedef struct Tk_Window_ *Tk_Window;$/;"	t	typeref:struct:Tk_Window_
Tk_WindowId	/usr/include/tk.h	/^#define Tk_WindowId(/;"	d
Tk_X	/usr/include/tk.h	/^#define Tk_X(/;"	d
Tk_Y	/usr/include/tk.h	/^#define Tk_Y(/;"	d
Token	/usr/include/mecab.h	/^  typedef struct mecab_token_t           Token;$/;"	t	namespace:MeCab	typeref:struct:MeCab::mecab_token_t
Tokenizer	/usr/include/histedit.h	/^typedef struct tokenizer Tokenizer;$/;"	t	typeref:struct:tokenizer
UCHAR	/usr/include/sqltypes.h	/^typedef unsigned char		UCHAR;$/;"	t
UDWORD	/usr/include/sqltypes.h	/^typedef unsigned long int	UDWORD;$/;"	t
UINT16_C	/usr/include/stdint.h	/^#define UINT16_C(/;"	d
UINT16_MAX	/usr/include/stdint.h	/^#define UINT16_MAX /;"	d
UINT32_C	/usr/include/stdint.h	/^#define UINT32_C(/;"	d
UINT32_MAX	/usr/include/stdint.h	/^#define UINT32_MAX /;"	d
UINT64_C	/usr/include/stdint.h	/^#define UINT64_C(/;"	d
UINT64_MAX	/usr/include/stdint.h	/^#define UINT64_MAX /;"	d
UINT8_C	/usr/include/stdint.h	/^#define UINT8_C(/;"	d
UINT8_MAX	/usr/include/stdint.h	/^#define UINT8_MAX /;"	d
UINTMAX_C	/usr/include/stdint.h	/^#define UINTMAX_C(/;"	d
UINTMAX_MAX	/usr/include/stdint.h	/^#define UINTMAX_MAX /;"	d
UINTPTR_MAX	/usr/include/stdint.h	/^#define UINTPTR_MAX	/;"	d
UINTPTR_MAX	/usr/include/stdint.h	/^#define UINTPTR_MAX /;"	d
UINT_FAST16_MAX	/usr/include/stdint.h	/^#define UINT_FAST16_MAX /;"	d
UINT_FAST32_MAX	/usr/include/stdint.h	/^#define UINT_FAST32_MAX /;"	d
UINT_FAST64_MAX	/usr/include/stdint.h	/^#define UINT_FAST64_MAX /;"	d
UINT_FAST8_MAX	/usr/include/stdint.h	/^#define UINT_FAST8_MAX /;"	d
UINT_LEAST16_MAX	/usr/include/stdint.h	/^#define UINT_LEAST16_MAX /;"	d
UINT_LEAST32_MAX	/usr/include/stdint.h	/^#define UINT_LEAST32_MAX /;"	d
UINT_LEAST64_MAX	/usr/include/stdint.h	/^#define UINT_LEAST64_MAX /;"	d
UINT_LEAST8_MAX	/usr/include/stdint.h	/^#define UINT_LEAST8_MAX /;"	d
ULONG	/usr/include/sqltypes.h	/^typedef unsigned long		ULONG;$/;"	t
UL_GETFSIZE	/usr/include/ulimit.h	/^#define	UL_GETFSIZE	/;"	d
UL_SETFSIZE	/usr/include/ulimit.h	/^#define	UL_SETFSIZE	/;"	d
UNALIGNED_OK	/usr/include/zconf.h	/^#  define UNALIGNED_OK$/;"	d
UNAVAILABLE_ATTRIBUTE	/usr/include/AvailabilityMacros.h	/^    #define UNAVAILABLE_ATTRIBUTE /;"	d
UNAVAILABLE_ATTRIBUTE	/usr/include/AvailabilityMacros.h	/^    #define UNAVAILABLE_ATTRIBUTE$/;"	d
UNDEF	/usr/include/tic.h	/^#define UNDEF /;"	d
UNVIS_END	/usr/include/vis.h	/^#define	UNVIS_END	/;"	d
UNVIS_ERROR	/usr/include/vis.h	/^#define	UNVIS_ERROR	/;"	d
UNVIS_NOCHAR	/usr/include/vis.h	/^#define	UNVIS_NOCHAR	/;"	d
UNVIS_SYNBAD	/usr/include/vis.h	/^#define	UNVIS_SYNBAD	/;"	d
UNVIS_VALID	/usr/include/vis.h	/^#define	UNVIS_VALID	/;"	d
UNVIS_VALIDPUSH	/usr/include/vis.h	/^#define	UNVIS_VALIDPUSH	/;"	d
UNW_EBADFRAME	/usr/include/libunwind.h	/^    UNW_EBADFRAME          = -6546,        \/* bad frame *\/$/;"	e	enum:__anon69
UNW_EBADREG	/usr/include/libunwind.h	/^    UNW_EBADREG            = -6542,        \/* bad register number *\/$/;"	e	enum:__anon69
UNW_EBADVERSION	/usr/include/libunwind.h	/^    UNW_EBADVERSION        = -6548,        \/* unwind info has unsupported version *\/$/;"	e	enum:__anon69
UNW_EINVAL	/usr/include/libunwind.h	/^    UNW_EINVAL             = -6547,        \/* unsupported operation or bad value *\/$/;"	e	enum:__anon69
UNW_EINVALIDIP	/usr/include/libunwind.h	/^    UNW_EINVALIDIP         = -6545,        \/* invalid IP *\/$/;"	e	enum:__anon69
UNW_ENOINFO	/usr/include/libunwind.h	/^    UNW_ENOINFO            = -6549         \/* no unwind info found *\/$/;"	e	enum:__anon69
UNW_ENOMEM	/usr/include/libunwind.h	/^    UNW_ENOMEM             = -6541,        \/* out of memory *\/$/;"	e	enum:__anon69
UNW_EREADONLYREG	/usr/include/libunwind.h	/^    UNW_EREADONLYREG       = -6543,        \/* attempt to write read-only register *\/$/;"	e	enum:__anon69
UNW_ESTOPUNWIND	/usr/include/libunwind.h	/^    UNW_ESTOPUNWIND        = -6544,        \/* stop unwinding *\/$/;"	e	enum:__anon69
UNW_ESUCCESS	/usr/include/libunwind.h	/^    UNW_ESUCCESS           = 0,            \/* no error *\/$/;"	e	enum:__anon69
UNW_EUNSPEC	/usr/include/libunwind.h	/^    UNW_EUNSPEC            = -6540,        \/* unspecified (general) error *\/$/;"	e	enum:__anon69
UNW_PPC_AP	/usr/include/libunwind.h	/^    UNW_PPC_AP  = 67,$/;"	e	enum:__anon73
UNW_PPC_CR0	/usr/include/libunwind.h	/^	UNW_PPC_CR0 = 68,$/;"	e	enum:__anon73
UNW_PPC_CR1	/usr/include/libunwind.h	/^    UNW_PPC_CR1 = 69,$/;"	e	enum:__anon73
UNW_PPC_CR2	/usr/include/libunwind.h	/^	UNW_PPC_CR2 = 70,$/;"	e	enum:__anon73
UNW_PPC_CR3	/usr/include/libunwind.h	/^	UNW_PPC_CR3 = 71,$/;"	e	enum:__anon73
UNW_PPC_CR4	/usr/include/libunwind.h	/^	UNW_PPC_CR4 = 72,$/;"	e	enum:__anon73
UNW_PPC_CR5	/usr/include/libunwind.h	/^	UNW_PPC_CR5 = 73,$/;"	e	enum:__anon73
UNW_PPC_CR6	/usr/include/libunwind.h	/^	UNW_PPC_CR6 = 74,$/;"	e	enum:__anon73
UNW_PPC_CR7	/usr/include/libunwind.h	/^	UNW_PPC_CR7 = 75,$/;"	e	enum:__anon73
UNW_PPC_CTR	/usr/include/libunwind.h	/^    UNW_PPC_CTR = 66,$/;"	e	enum:__anon73
UNW_PPC_F0	/usr/include/libunwind.h	/^    UNW_PPC_F0  = 32,$/;"	e	enum:__anon73
UNW_PPC_F1	/usr/include/libunwind.h	/^    UNW_PPC_F1  = 33,$/;"	e	enum:__anon73
UNW_PPC_F10	/usr/include/libunwind.h	/^    UNW_PPC_F10 = 42,$/;"	e	enum:__anon73
UNW_PPC_F11	/usr/include/libunwind.h	/^    UNW_PPC_F11 = 43,$/;"	e	enum:__anon73
UNW_PPC_F12	/usr/include/libunwind.h	/^    UNW_PPC_F12 = 44,$/;"	e	enum:__anon73
UNW_PPC_F13	/usr/include/libunwind.h	/^    UNW_PPC_F13 = 45,$/;"	e	enum:__anon73
UNW_PPC_F14	/usr/include/libunwind.h	/^    UNW_PPC_F14 = 46,$/;"	e	enum:__anon73
UNW_PPC_F15	/usr/include/libunwind.h	/^    UNW_PPC_F15 = 47,$/;"	e	enum:__anon73
UNW_PPC_F16	/usr/include/libunwind.h	/^    UNW_PPC_F16 = 48,$/;"	e	enum:__anon73
UNW_PPC_F17	/usr/include/libunwind.h	/^    UNW_PPC_F17 = 49,$/;"	e	enum:__anon73
UNW_PPC_F18	/usr/include/libunwind.h	/^    UNW_PPC_F18 = 50,$/;"	e	enum:__anon73
UNW_PPC_F19	/usr/include/libunwind.h	/^    UNW_PPC_F19 = 51,$/;"	e	enum:__anon73
UNW_PPC_F2	/usr/include/libunwind.h	/^    UNW_PPC_F2  = 34,$/;"	e	enum:__anon73
UNW_PPC_F20	/usr/include/libunwind.h	/^    UNW_PPC_F20 = 52,$/;"	e	enum:__anon73
UNW_PPC_F21	/usr/include/libunwind.h	/^    UNW_PPC_F21 = 53,$/;"	e	enum:__anon73
UNW_PPC_F22	/usr/include/libunwind.h	/^    UNW_PPC_F22 = 54,$/;"	e	enum:__anon73
UNW_PPC_F23	/usr/include/libunwind.h	/^    UNW_PPC_F23 = 55,$/;"	e	enum:__anon73
UNW_PPC_F24	/usr/include/libunwind.h	/^    UNW_PPC_F24 = 56,$/;"	e	enum:__anon73
UNW_PPC_F25	/usr/include/libunwind.h	/^    UNW_PPC_F25 = 57,$/;"	e	enum:__anon73
UNW_PPC_F26	/usr/include/libunwind.h	/^    UNW_PPC_F26 = 58,$/;"	e	enum:__anon73
UNW_PPC_F27	/usr/include/libunwind.h	/^    UNW_PPC_F27 = 59,$/;"	e	enum:__anon73
UNW_PPC_F28	/usr/include/libunwind.h	/^    UNW_PPC_F28 = 60,$/;"	e	enum:__anon73
UNW_PPC_F29	/usr/include/libunwind.h	/^    UNW_PPC_F29 = 61,$/;"	e	enum:__anon73
UNW_PPC_F3	/usr/include/libunwind.h	/^    UNW_PPC_F3  = 35,$/;"	e	enum:__anon73
UNW_PPC_F30	/usr/include/libunwind.h	/^    UNW_PPC_F30 = 62,$/;"	e	enum:__anon73
UNW_PPC_F31	/usr/include/libunwind.h	/^    UNW_PPC_F31 = 63,$/;"	e	enum:__anon73
UNW_PPC_F4	/usr/include/libunwind.h	/^    UNW_PPC_F4  = 36,$/;"	e	enum:__anon73
UNW_PPC_F5	/usr/include/libunwind.h	/^    UNW_PPC_F5  = 37,$/;"	e	enum:__anon73
UNW_PPC_F6	/usr/include/libunwind.h	/^    UNW_PPC_F6  = 38,$/;"	e	enum:__anon73
UNW_PPC_F7	/usr/include/libunwind.h	/^    UNW_PPC_F7  = 39,$/;"	e	enum:__anon73
UNW_PPC_F8	/usr/include/libunwind.h	/^    UNW_PPC_F8  = 40,$/;"	e	enum:__anon73
UNW_PPC_F9	/usr/include/libunwind.h	/^    UNW_PPC_F9  = 41,$/;"	e	enum:__anon73
UNW_PPC_LR	/usr/include/libunwind.h	/^    UNW_PPC_LR  = 65,$/;"	e	enum:__anon73
UNW_PPC_MQ	/usr/include/libunwind.h	/^    UNW_PPC_MQ  = 64,$/;"	e	enum:__anon73
UNW_PPC_R0	/usr/include/libunwind.h	/^    UNW_PPC_R0  =  0,$/;"	e	enum:__anon73
UNW_PPC_R1	/usr/include/libunwind.h	/^    UNW_PPC_R1  =  1,$/;"	e	enum:__anon73
UNW_PPC_R10	/usr/include/libunwind.h	/^    UNW_PPC_R10 = 10,$/;"	e	enum:__anon73
UNW_PPC_R11	/usr/include/libunwind.h	/^    UNW_PPC_R11 = 11,$/;"	e	enum:__anon73
UNW_PPC_R12	/usr/include/libunwind.h	/^    UNW_PPC_R12 = 12,$/;"	e	enum:__anon73
UNW_PPC_R13	/usr/include/libunwind.h	/^    UNW_PPC_R13 = 13,$/;"	e	enum:__anon73
UNW_PPC_R14	/usr/include/libunwind.h	/^    UNW_PPC_R14 = 14,$/;"	e	enum:__anon73
UNW_PPC_R15	/usr/include/libunwind.h	/^    UNW_PPC_R15 = 15,$/;"	e	enum:__anon73
UNW_PPC_R16	/usr/include/libunwind.h	/^    UNW_PPC_R16 = 16,$/;"	e	enum:__anon73
UNW_PPC_R17	/usr/include/libunwind.h	/^    UNW_PPC_R17 = 17,$/;"	e	enum:__anon73
UNW_PPC_R18	/usr/include/libunwind.h	/^    UNW_PPC_R18 = 18,$/;"	e	enum:__anon73
UNW_PPC_R19	/usr/include/libunwind.h	/^    UNW_PPC_R19 = 19,$/;"	e	enum:__anon73
UNW_PPC_R2	/usr/include/libunwind.h	/^    UNW_PPC_R2  =  2,$/;"	e	enum:__anon73
UNW_PPC_R20	/usr/include/libunwind.h	/^    UNW_PPC_R20 = 20,$/;"	e	enum:__anon73
UNW_PPC_R21	/usr/include/libunwind.h	/^    UNW_PPC_R21 = 21,$/;"	e	enum:__anon73
UNW_PPC_R22	/usr/include/libunwind.h	/^    UNW_PPC_R22 = 22,$/;"	e	enum:__anon73
UNW_PPC_R23	/usr/include/libunwind.h	/^    UNW_PPC_R23 = 23,$/;"	e	enum:__anon73
UNW_PPC_R24	/usr/include/libunwind.h	/^    UNW_PPC_R24 = 24,$/;"	e	enum:__anon73
UNW_PPC_R25	/usr/include/libunwind.h	/^    UNW_PPC_R25 = 25,$/;"	e	enum:__anon73
UNW_PPC_R26	/usr/include/libunwind.h	/^    UNW_PPC_R26 = 26,$/;"	e	enum:__anon73
UNW_PPC_R27	/usr/include/libunwind.h	/^    UNW_PPC_R27 = 27,$/;"	e	enum:__anon73
UNW_PPC_R28	/usr/include/libunwind.h	/^    UNW_PPC_R28 = 28,$/;"	e	enum:__anon73
UNW_PPC_R29	/usr/include/libunwind.h	/^    UNW_PPC_R29 = 29,$/;"	e	enum:__anon73
UNW_PPC_R3	/usr/include/libunwind.h	/^    UNW_PPC_R3  =  3,$/;"	e	enum:__anon73
UNW_PPC_R30	/usr/include/libunwind.h	/^    UNW_PPC_R30 = 30,$/;"	e	enum:__anon73
UNW_PPC_R31	/usr/include/libunwind.h	/^    UNW_PPC_R31 = 31,$/;"	e	enum:__anon73
UNW_PPC_R4	/usr/include/libunwind.h	/^    UNW_PPC_R4  =  4,$/;"	e	enum:__anon73
UNW_PPC_R5	/usr/include/libunwind.h	/^    UNW_PPC_R5  =  5,$/;"	e	enum:__anon73
UNW_PPC_R6	/usr/include/libunwind.h	/^    UNW_PPC_R6  =  6,$/;"	e	enum:__anon73
UNW_PPC_R7	/usr/include/libunwind.h	/^    UNW_PPC_R7  =  7,$/;"	e	enum:__anon73
UNW_PPC_R8	/usr/include/libunwind.h	/^    UNW_PPC_R8  =  8,$/;"	e	enum:__anon73
UNW_PPC_R9	/usr/include/libunwind.h	/^    UNW_PPC_R9  =  9,$/;"	e	enum:__anon73
UNW_PPC_SPEFSCR	/usr/include/libunwind.h	/^    UNW_PPC_SPEFSCR = 112$/;"	e	enum:__anon73
UNW_PPC_SPE_ACC	/usr/include/libunwind.h	/^    UNW_PPC_SPE_ACC = 111,$/;"	e	enum:__anon73
UNW_PPC_V0	/usr/include/libunwind.h	/^	UNW_PPC_V0  = 77,$/;"	e	enum:__anon73
UNW_PPC_V1	/usr/include/libunwind.h	/^    UNW_PPC_V1  = 78,$/;"	e	enum:__anon73
UNW_PPC_V10	/usr/include/libunwind.h	/^    UNW_PPC_V10 = 87,$/;"	e	enum:__anon73
UNW_PPC_V11	/usr/include/libunwind.h	/^    UNW_PPC_V11 = 88,$/;"	e	enum:__anon73
UNW_PPC_V12	/usr/include/libunwind.h	/^    UNW_PPC_V12 = 89,$/;"	e	enum:__anon73
UNW_PPC_V13	/usr/include/libunwind.h	/^    UNW_PPC_V13 = 90,$/;"	e	enum:__anon73
UNW_PPC_V14	/usr/include/libunwind.h	/^    UNW_PPC_V14 = 91,$/;"	e	enum:__anon73
UNW_PPC_V15	/usr/include/libunwind.h	/^    UNW_PPC_V15 = 92,$/;"	e	enum:__anon73
UNW_PPC_V16	/usr/include/libunwind.h	/^    UNW_PPC_V16 = 93,$/;"	e	enum:__anon73
UNW_PPC_V17	/usr/include/libunwind.h	/^    UNW_PPC_V17 = 94,$/;"	e	enum:__anon73
UNW_PPC_V18	/usr/include/libunwind.h	/^    UNW_PPC_V18 = 95,$/;"	e	enum:__anon73
UNW_PPC_V19	/usr/include/libunwind.h	/^    UNW_PPC_V19 = 96,$/;"	e	enum:__anon73
UNW_PPC_V2	/usr/include/libunwind.h	/^    UNW_PPC_V2  = 79,$/;"	e	enum:__anon73
UNW_PPC_V20	/usr/include/libunwind.h	/^    UNW_PPC_V20 = 97,$/;"	e	enum:__anon73
UNW_PPC_V21	/usr/include/libunwind.h	/^    UNW_PPC_V21 = 98,$/;"	e	enum:__anon73
UNW_PPC_V22	/usr/include/libunwind.h	/^    UNW_PPC_V22 = 99,$/;"	e	enum:__anon73
UNW_PPC_V23	/usr/include/libunwind.h	/^    UNW_PPC_V23 = 100,$/;"	e	enum:__anon73
UNW_PPC_V24	/usr/include/libunwind.h	/^    UNW_PPC_V24 = 101,$/;"	e	enum:__anon73
UNW_PPC_V25	/usr/include/libunwind.h	/^    UNW_PPC_V25 = 102,$/;"	e	enum:__anon73
UNW_PPC_V26	/usr/include/libunwind.h	/^    UNW_PPC_V26 = 103,$/;"	e	enum:__anon73
UNW_PPC_V27	/usr/include/libunwind.h	/^    UNW_PPC_V27 = 104,$/;"	e	enum:__anon73
UNW_PPC_V28	/usr/include/libunwind.h	/^    UNW_PPC_V28 = 105,$/;"	e	enum:__anon73
UNW_PPC_V29	/usr/include/libunwind.h	/^    UNW_PPC_V29 = 106,$/;"	e	enum:__anon73
UNW_PPC_V3	/usr/include/libunwind.h	/^    UNW_PPC_V3  = 80,$/;"	e	enum:__anon73
UNW_PPC_V30	/usr/include/libunwind.h	/^    UNW_PPC_V30 = 107,$/;"	e	enum:__anon73
UNW_PPC_V31	/usr/include/libunwind.h	/^    UNW_PPC_V31 = 108,$/;"	e	enum:__anon73
UNW_PPC_V4	/usr/include/libunwind.h	/^    UNW_PPC_V4  = 81,$/;"	e	enum:__anon73
UNW_PPC_V5	/usr/include/libunwind.h	/^    UNW_PPC_V5  = 82,$/;"	e	enum:__anon73
UNW_PPC_V6	/usr/include/libunwind.h	/^    UNW_PPC_V6  = 83,$/;"	e	enum:__anon73
UNW_PPC_V7	/usr/include/libunwind.h	/^    UNW_PPC_V7  = 84,$/;"	e	enum:__anon73
UNW_PPC_V8	/usr/include/libunwind.h	/^    UNW_PPC_V8  = 85,$/;"	e	enum:__anon73
UNW_PPC_V9	/usr/include/libunwind.h	/^    UNW_PPC_V9  = 86,$/;"	e	enum:__anon73
UNW_PPC_VRSAVE	/usr/include/libunwind.h	/^    UNW_PPC_VRSAVE  = 109,$/;"	e	enum:__anon73
UNW_PPC_VSCR	/usr/include/libunwind.h	/^    UNW_PPC_VSCR    = 110,$/;"	e	enum:__anon73
UNW_PPC_XER	/usr/include/libunwind.h	/^	UNW_PPC_XER = 76,$/;"	e	enum:__anon73
UNW_REG_IP	/usr/include/libunwind.h	/^    UNW_REG_IP = -1,        \/\/ instruction pointer$/;"	e	enum:__anon70
UNW_REG_SP	/usr/include/libunwind.h	/^    UNW_REG_SP = -2,        \/\/ stack pointer$/;"	e	enum:__anon70
UNW_X86_64_R10	/usr/include/libunwind.h	/^    UNW_X86_64_R10 = 10,$/;"	e	enum:__anon72
UNW_X86_64_R11	/usr/include/libunwind.h	/^    UNW_X86_64_R11 = 11,$/;"	e	enum:__anon72
UNW_X86_64_R12	/usr/include/libunwind.h	/^    UNW_X86_64_R12 = 12,$/;"	e	enum:__anon72
UNW_X86_64_R13	/usr/include/libunwind.h	/^    UNW_X86_64_R13 = 13,$/;"	e	enum:__anon72
UNW_X86_64_R14	/usr/include/libunwind.h	/^    UNW_X86_64_R14 = 14,$/;"	e	enum:__anon72
UNW_X86_64_R15	/usr/include/libunwind.h	/^    UNW_X86_64_R15 = 15$/;"	e	enum:__anon72
UNW_X86_64_R8	/usr/include/libunwind.h	/^    UNW_X86_64_R8  =  8,$/;"	e	enum:__anon72
UNW_X86_64_R9	/usr/include/libunwind.h	/^    UNW_X86_64_R9  =  9,$/;"	e	enum:__anon72
UNW_X86_64_RAX	/usr/include/libunwind.h	/^    UNW_X86_64_RAX =  0,$/;"	e	enum:__anon72
UNW_X86_64_RBP	/usr/include/libunwind.h	/^    UNW_X86_64_RBP =  6,$/;"	e	enum:__anon72
UNW_X86_64_RBX	/usr/include/libunwind.h	/^    UNW_X86_64_RBX =  3,$/;"	e	enum:__anon72
UNW_X86_64_RCX	/usr/include/libunwind.h	/^    UNW_X86_64_RCX =  2,$/;"	e	enum:__anon72
UNW_X86_64_RDI	/usr/include/libunwind.h	/^    UNW_X86_64_RDI =  5,$/;"	e	enum:__anon72
UNW_X86_64_RDX	/usr/include/libunwind.h	/^    UNW_X86_64_RDX =  1,$/;"	e	enum:__anon72
UNW_X86_64_RSI	/usr/include/libunwind.h	/^    UNW_X86_64_RSI =  4,$/;"	e	enum:__anon72
UNW_X86_64_RSP	/usr/include/libunwind.h	/^    UNW_X86_64_RSP =  7,$/;"	e	enum:__anon72
UNW_X86_EAX	/usr/include/libunwind.h	/^    UNW_X86_EAX = 0,$/;"	e	enum:__anon71
UNW_X86_EBP	/usr/include/libunwind.h	/^    UNW_X86_EBP = 4,$/;"	e	enum:__anon71
UNW_X86_EBX	/usr/include/libunwind.h	/^    UNW_X86_EBX = 3,$/;"	e	enum:__anon71
UNW_X86_ECX	/usr/include/libunwind.h	/^    UNW_X86_ECX = 1,$/;"	e	enum:__anon71
UNW_X86_EDI	/usr/include/libunwind.h	/^    UNW_X86_EDI = 7$/;"	e	enum:__anon71
UNW_X86_EDX	/usr/include/libunwind.h	/^    UNW_X86_EDX = 2,$/;"	e	enum:__anon71
UNW_X86_ESI	/usr/include/libunwind.h	/^    UNW_X86_ESI = 6,$/;"	e	enum:__anon71
UNW_X86_ESP	/usr/include/libunwind.h	/^    UNW_X86_ESP = 5,$/;"	e	enum:__anon71
USED	/usr/include/tclTomMath.h	/^#define USED(/;"	d
USERDSN_ONLY	/usr/include/odbcinst.h	/^#define USERDSN_ONLY /;"	d
USER_PROCESS	/usr/include/utmpx.h	/^#define USER_PROCESS	/;"	d
USE_OLD_TTY	/usr/include/sgtty.h	/^#define	USE_OLD_TTY$/;"	d
USE_PANIC_ON_PHOTO_ALLOC_FAILURE	/usr/include/tk.h	/^#   define USE_PANIC_ON_PHOTO_ALLOC_FAILURE$/;"	d
USHORT	/usr/include/sqltypes.h	/^typedef unsigned short		USHORT;$/;"	t
UTMPX_AUTOFILL_MASK	/usr/include/utmpx.h	/^#define UTMPX_AUTOFILL_MASK	/;"	d
UTMPX_CHANGE_NOTIFICATION	/usr/include/utmpx.h	/^#define UTMPX_CHANGE_NOTIFICATION	/;"	d
UTMPX_DEAD_IF_CORRESPONDING_MASK	/usr/include/utmpx.h	/^#define UTMPX_DEAD_IF_CORRESPONDING_MASK	/;"	d
UTMPX_FILE	/usr/include/utmpx.h	/^#define	UTMPX_FILE	/;"	d
UT_HOSTSIZE	/usr/include/utmp.h	/^#define	UT_HOSTSIZE	/;"	d
UT_LINESIZE	/usr/include/utmp.h	/^#define	UT_LINESIZE	/;"	d
UT_NAMESIZE	/usr/include/utmp.h	/^#define	UT_NAMESIZE	/;"	d
UWORD	/usr/include/sqltypes.h	/^typedef unsigned short int	UWORD;$/;"	t
VALID_ADDRTYPE	/usr/include/tcpd.h	/^#define VALID_ADDRTYPE(/;"	d
VALID_BOOLEAN	/usr/include/tic.h	/^#define VALID_BOOLEAN(/;"	d
VALID_NUMERIC	/usr/include/tic.h	/^#define VALID_NUMERIC(/;"	d
VALID_STRING	/usr/include/tic.h	/^#define VALID_STRING(/;"	d
VERSION	/usr/include/fcgi_config.h	/^#define VERSION /;"	d
VISIT	/usr/include/search.h	/^} VISIT;$/;"	t	typeref:enum:__anon106
VIS_CSTYLE	/usr/include/vis.h	/^#define	VIS_CSTYLE	/;"	d
VIS_GLOB	/usr/include/vis.h	/^#define	VIS_GLOB	/;"	d
VIS_HTTPSTYLE	/usr/include/vis.h	/^#define	VIS_HTTPSTYLE	/;"	d
VIS_NL	/usr/include/vis.h	/^#define	VIS_NL	/;"	d
VIS_NOSLASH	/usr/include/vis.h	/^#define	VIS_NOSLASH	/;"	d
VIS_OCTAL	/usr/include/vis.h	/^#define	VIS_OCTAL	/;"	d
VIS_SAFE	/usr/include/vis.h	/^#define	VIS_SAFE	/;"	d
VIS_SP	/usr/include/vis.h	/^#define	VIS_SP	/;"	d
VIS_TAB	/usr/include/vis.h	/^#define	VIS_TAB	/;"	d
VIS_WHITE	/usr/include/vis.h	/^#define	VIS_WHITE	/;"	d
VOID	/usr/include/iodbcunix.h	/^#define VOID	/;"	d
VOID	/usr/include/tcl.h	/^#define VOID	/;"	d
VOID	/usr/include/tcl.h	/^#define VOID /;"	d
VPROC_HAS_TRANSACTIONS	/usr/include/vproc.h	/^	#define VPROC_HAS_TRANSACTIONS$/;"	d
VirtualEvent	/usr/include/tk.h	/^#define VirtualEvent	/;"	d
VirtualEventMask	/usr/include/tk.h	/^#define VirtualEventMask /;"	d
WACS_BBSS	/usr/include/curses.h	/^#define WACS_BBSS	/;"	d
WACS_BBSS	/usr/include/ncurses.h	/^#define WACS_BBSS	/;"	d
WACS_BLOCK	/usr/include/curses.h	/^#define WACS_BLOCK	/;"	d
WACS_BLOCK	/usr/include/ncurses.h	/^#define WACS_BLOCK	/;"	d
WACS_BOARD	/usr/include/curses.h	/^#define WACS_BOARD	/;"	d
WACS_BOARD	/usr/include/ncurses.h	/^#define WACS_BOARD	/;"	d
WACS_BSBS	/usr/include/curses.h	/^#define WACS_BSBS	/;"	d
WACS_BSBS	/usr/include/ncurses.h	/^#define WACS_BSBS	/;"	d
WACS_BSSB	/usr/include/curses.h	/^#define WACS_BSSB	/;"	d
WACS_BSSB	/usr/include/ncurses.h	/^#define WACS_BSSB	/;"	d
WACS_BSSS	/usr/include/curses.h	/^#define WACS_BSSS	/;"	d
WACS_BSSS	/usr/include/ncurses.h	/^#define WACS_BSSS	/;"	d
WACS_BTEE	/usr/include/curses.h	/^#define WACS_BTEE	/;"	d
WACS_BTEE	/usr/include/ncurses.h	/^#define WACS_BTEE	/;"	d
WACS_BULLET	/usr/include/curses.h	/^#define WACS_BULLET	/;"	d
WACS_BULLET	/usr/include/ncurses.h	/^#define WACS_BULLET	/;"	d
WACS_CKBOARD	/usr/include/curses.h	/^#define WACS_CKBOARD	/;"	d
WACS_CKBOARD	/usr/include/ncurses.h	/^#define WACS_CKBOARD	/;"	d
WACS_DARROW	/usr/include/curses.h	/^#define WACS_DARROW	/;"	d
WACS_DARROW	/usr/include/ncurses.h	/^#define WACS_DARROW	/;"	d
WACS_DEGREE	/usr/include/curses.h	/^#define WACS_DEGREE	/;"	d
WACS_DEGREE	/usr/include/ncurses.h	/^#define WACS_DEGREE	/;"	d
WACS_DIAMOND	/usr/include/curses.h	/^#define WACS_DIAMOND	/;"	d
WACS_DIAMOND	/usr/include/ncurses.h	/^#define WACS_DIAMOND	/;"	d
WACS_GEQUAL	/usr/include/curses.h	/^#define WACS_GEQUAL	/;"	d
WACS_GEQUAL	/usr/include/ncurses.h	/^#define WACS_GEQUAL	/;"	d
WACS_HLINE	/usr/include/curses.h	/^#define WACS_HLINE	/;"	d
WACS_HLINE	/usr/include/ncurses.h	/^#define WACS_HLINE	/;"	d
WACS_LANTERN	/usr/include/curses.h	/^#define WACS_LANTERN	/;"	d
WACS_LANTERN	/usr/include/ncurses.h	/^#define WACS_LANTERN	/;"	d
WACS_LARROW	/usr/include/curses.h	/^#define WACS_LARROW	/;"	d
WACS_LARROW	/usr/include/ncurses.h	/^#define WACS_LARROW	/;"	d
WACS_LEQUAL	/usr/include/curses.h	/^#define WACS_LEQUAL	/;"	d
WACS_LEQUAL	/usr/include/ncurses.h	/^#define WACS_LEQUAL	/;"	d
WACS_LLCORNER	/usr/include/curses.h	/^#define WACS_LLCORNER	/;"	d
WACS_LLCORNER	/usr/include/ncurses.h	/^#define WACS_LLCORNER	/;"	d
WACS_LRCORNER	/usr/include/curses.h	/^#define WACS_LRCORNER	/;"	d
WACS_LRCORNER	/usr/include/ncurses.h	/^#define WACS_LRCORNER	/;"	d
WACS_LTEE	/usr/include/curses.h	/^#define WACS_LTEE	/;"	d
WACS_LTEE	/usr/include/ncurses.h	/^#define WACS_LTEE	/;"	d
WACS_NEQUAL	/usr/include/curses.h	/^#define WACS_NEQUAL	/;"	d
WACS_NEQUAL	/usr/include/ncurses.h	/^#define WACS_NEQUAL	/;"	d
WACS_PI	/usr/include/curses.h	/^#define WACS_PI	/;"	d
WACS_PI	/usr/include/ncurses.h	/^#define WACS_PI	/;"	d
WACS_PLMINUS	/usr/include/curses.h	/^#define WACS_PLMINUS	/;"	d
WACS_PLMINUS	/usr/include/ncurses.h	/^#define WACS_PLMINUS	/;"	d
WACS_PLUS	/usr/include/curses.h	/^#define WACS_PLUS	/;"	d
WACS_PLUS	/usr/include/ncurses.h	/^#define WACS_PLUS	/;"	d
WACS_RARROW	/usr/include/curses.h	/^#define WACS_RARROW	/;"	d
WACS_RARROW	/usr/include/ncurses.h	/^#define WACS_RARROW	/;"	d
WACS_RTEE	/usr/include/curses.h	/^#define WACS_RTEE	/;"	d
WACS_RTEE	/usr/include/ncurses.h	/^#define WACS_RTEE	/;"	d
WACS_S1	/usr/include/curses.h	/^#define WACS_S1	/;"	d
WACS_S1	/usr/include/ncurses.h	/^#define WACS_S1	/;"	d
WACS_S3	/usr/include/curses.h	/^#define WACS_S3	/;"	d
WACS_S3	/usr/include/ncurses.h	/^#define WACS_S3	/;"	d
WACS_S7	/usr/include/curses.h	/^#define WACS_S7	/;"	d
WACS_S7	/usr/include/ncurses.h	/^#define WACS_S7	/;"	d
WACS_S9	/usr/include/curses.h	/^#define WACS_S9 /;"	d
WACS_S9	/usr/include/ncurses.h	/^#define WACS_S9 /;"	d
WACS_SBBS	/usr/include/curses.h	/^#define WACS_SBBS	/;"	d
WACS_SBBS	/usr/include/ncurses.h	/^#define WACS_SBBS	/;"	d
WACS_SBSB	/usr/include/curses.h	/^#define WACS_SBSB	/;"	d
WACS_SBSB	/usr/include/ncurses.h	/^#define WACS_SBSB	/;"	d
WACS_SBSS	/usr/include/curses.h	/^#define WACS_SBSS	/;"	d
WACS_SBSS	/usr/include/ncurses.h	/^#define WACS_SBSS	/;"	d
WACS_SSBB	/usr/include/curses.h	/^#define WACS_SSBB	/;"	d
WACS_SSBB	/usr/include/ncurses.h	/^#define WACS_SSBB	/;"	d
WACS_SSBS	/usr/include/curses.h	/^#define WACS_SSBS	/;"	d
WACS_SSBS	/usr/include/ncurses.h	/^#define WACS_SSBS	/;"	d
WACS_SSSB	/usr/include/curses.h	/^#define WACS_SSSB	/;"	d
WACS_SSSB	/usr/include/ncurses.h	/^#define WACS_SSSB	/;"	d
WACS_SSSS	/usr/include/curses.h	/^#define WACS_SSSS	/;"	d
WACS_SSSS	/usr/include/ncurses.h	/^#define WACS_SSSS	/;"	d
WACS_STERLING	/usr/include/curses.h	/^#define WACS_STERLING	/;"	d
WACS_STERLING	/usr/include/ncurses.h	/^#define WACS_STERLING	/;"	d
WACS_TTEE	/usr/include/curses.h	/^#define WACS_TTEE	/;"	d
WACS_TTEE	/usr/include/ncurses.h	/^#define WACS_TTEE	/;"	d
WACS_UARROW	/usr/include/curses.h	/^#define WACS_UARROW	/;"	d
WACS_UARROW	/usr/include/ncurses.h	/^#define WACS_UARROW	/;"	d
WACS_ULCORNER	/usr/include/curses.h	/^#define WACS_ULCORNER	/;"	d
WACS_ULCORNER	/usr/include/ncurses.h	/^#define WACS_ULCORNER	/;"	d
WACS_URCORNER	/usr/include/curses.h	/^#define WACS_URCORNER	/;"	d
WACS_URCORNER	/usr/include/ncurses.h	/^#define WACS_URCORNER	/;"	d
WACS_VLINE	/usr/include/curses.h	/^#define WACS_VLINE	/;"	d
WACS_VLINE	/usr/include/ncurses.h	/^#define WACS_VLINE	/;"	d
WANTED	/usr/include/term_entry.h	/^#define WANTED(/;"	d
WA_ALTCHARSET	/usr/include/curses.h	/^#define WA_ALTCHARSET	/;"	d
WA_ALTCHARSET	/usr/include/ncurses.h	/^#define WA_ALTCHARSET	/;"	d
WA_ATTRIBUTES	/usr/include/curses.h	/^#define WA_ATTRIBUTES	/;"	d
WA_ATTRIBUTES	/usr/include/ncurses.h	/^#define WA_ATTRIBUTES	/;"	d
WA_BLINK	/usr/include/curses.h	/^#define WA_BLINK	/;"	d
WA_BLINK	/usr/include/ncurses.h	/^#define WA_BLINK	/;"	d
WA_BOLD	/usr/include/curses.h	/^#define WA_BOLD	/;"	d
WA_BOLD	/usr/include/ncurses.h	/^#define WA_BOLD	/;"	d
WA_DIM	/usr/include/curses.h	/^#define WA_DIM	/;"	d
WA_DIM	/usr/include/ncurses.h	/^#define WA_DIM	/;"	d
WA_HORIZONTAL	/usr/include/curses.h	/^#define WA_HORIZONTAL	/;"	d
WA_HORIZONTAL	/usr/include/ncurses.h	/^#define WA_HORIZONTAL	/;"	d
WA_INVIS	/usr/include/curses.h	/^#define WA_INVIS	/;"	d
WA_INVIS	/usr/include/ncurses.h	/^#define WA_INVIS	/;"	d
WA_LEFT	/usr/include/curses.h	/^#define WA_LEFT	/;"	d
WA_LEFT	/usr/include/ncurses.h	/^#define WA_LEFT	/;"	d
WA_LOW	/usr/include/curses.h	/^#define WA_LOW	/;"	d
WA_LOW	/usr/include/ncurses.h	/^#define WA_LOW	/;"	d
WA_NORMAL	/usr/include/curses.h	/^#define WA_NORMAL	/;"	d
WA_NORMAL	/usr/include/ncurses.h	/^#define WA_NORMAL	/;"	d
WA_PROTECT	/usr/include/curses.h	/^#define WA_PROTECT	/;"	d
WA_PROTECT	/usr/include/ncurses.h	/^#define WA_PROTECT	/;"	d
WA_REVERSE	/usr/include/curses.h	/^#define WA_REVERSE	/;"	d
WA_REVERSE	/usr/include/ncurses.h	/^#define WA_REVERSE	/;"	d
WA_RIGHT	/usr/include/curses.h	/^#define WA_RIGHT	/;"	d
WA_RIGHT	/usr/include/ncurses.h	/^#define WA_RIGHT	/;"	d
WA_STANDOUT	/usr/include/curses.h	/^#define WA_STANDOUT	/;"	d
WA_STANDOUT	/usr/include/ncurses.h	/^#define WA_STANDOUT	/;"	d
WA_TOP	/usr/include/curses.h	/^#define WA_TOP	/;"	d
WA_TOP	/usr/include/ncurses.h	/^#define WA_TOP	/;"	d
WA_UNDERLINE	/usr/include/curses.h	/^#define WA_UNDERLINE	/;"	d
WA_UNDERLINE	/usr/include/ncurses.h	/^#define WA_UNDERLINE	/;"	d
WA_VERTICAL	/usr/include/curses.h	/^#define WA_VERTICAL	/;"	d
WA_VERTICAL	/usr/include/ncurses.h	/^#define WA_VERTICAL	/;"	d
WCHAR_MAX	/usr/include/stdint.h	/^#    define WCHAR_MAX /;"	d
WCHAR_MAX	/usr/include/wchar.h	/^#define WCHAR_MAX	/;"	d
WCHAR_MIN	/usr/include/stdint.h	/^#    define WCHAR_MIN /;"	d
WCHAR_MIN	/usr/include/wchar.h	/^#define WCHAR_MIN	/;"	d
WEAK_IMPORT_ATTRIBUTE	/usr/include/AvailabilityMacros.h	/^    #define WEAK_IMPORT_ATTRIBUTE /;"	d
WEAK_IMPORT_ATTRIBUTE	/usr/include/AvailabilityMacros.h	/^    #define WEAK_IMPORT_ATTRIBUTE$/;"	d
WEOF	/usr/include/_wctype.h	/^#define WEOF	/;"	d
WIN32	/usr/include/tcl.h	/^#	    define WIN32$/;"	d
WIN32	/usr/include/zconf.h	/^#    define WIN32$/;"	d
WIN32_LEAN_AND_MEAN	/usr/include/fcgios.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WINDOW	/usr/include/curses.h	/^typedef struct _win_st WINDOW;$/;"	t	typeref:struct:_win_st
WINDOW	/usr/include/ncurses.h	/^typedef struct _win_st WINDOW;$/;"	t	typeref:struct:_win_st
WINDOWS	/usr/include/zconf.h	/^#  define WINDOWS$/;"	d
WINT_MAX	/usr/include/stdint.h	/^#define WINT_MAX	/;"	d
WINT_MIN	/usr/include/stdint.h	/^#define WINT_MIN	/;"	d
WKS	/usr/include/dns_util.h	/^		dns_WKS_record_t *WKS;$/;"	m	union:__anon41::__anon42	access:public
WORD	/usr/include/iodbcunix.h	/^typedef unsigned short		WORD;$/;"	t
WRDE_APPEND	/usr/include/wordexp.h	/^#define WRDE_APPEND	/;"	d
WRDE_BADCHAR	/usr/include/wordexp.h	/^#define WRDE_BADCHAR	/;"	d
WRDE_BADVAL	/usr/include/wordexp.h	/^#define WRDE_BADVAL	/;"	d
WRDE_CMDSUB	/usr/include/wordexp.h	/^#define WRDE_CMDSUB	/;"	d
WRDE_DOOFFS	/usr/include/wordexp.h	/^#define WRDE_DOOFFS	/;"	d
WRDE_NOCMD	/usr/include/wordexp.h	/^#define WRDE_NOCMD	/;"	d
WRDE_NOSPACE	/usr/include/wordexp.h	/^#define WRDE_NOSPACE	/;"	d
WRDE_NOSYS	/usr/include/wordexp.h	/^#define WRDE_NOSYS	/;"	d
WRDE_REUSE	/usr/include/wordexp.h	/^#define WRDE_REUSE	/;"	d
WRDE_SHOWERR	/usr/include/wordexp.h	/^#define WRDE_SHOWERR	/;"	d
WRDE_SYNTAX	/usr/include/wordexp.h	/^#define WRDE_SYNTAX	/;"	d
WRDE_UNDEF	/usr/include/wordexp.h	/^#define WRDE_UNDEF	/;"	d
X25	/usr/include/dns_util.h	/^		dns_X25_record_t *X25;$/;"	m	union:__anon41::__anon42	access:public
XActivateDeactivateEvent	/usr/include/tk.h	/^} XActivateDeactivateEvent;$/;"	t	typeref:struct:__anon130
XActivateEvent	/usr/include/tk.h	/^typedef XActivateDeactivateEvent XActivateEvent;$/;"	t
XAllocColor	/usr/include/tkIntXlibDecls.h	/^#define XAllocColor /;"	d
XAllocColor	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XAllocColor (Display * d, Colormap c, XColor * xp);$/;"	p	signature:(Display * d, Colormap c, XColor * xp)
XAllocColor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XAllocColor_TCL_DECLARED$/;"	d
XBell	/usr/include/tkIntXlibDecls.h	/^#define XBell /;"	d
XBell	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XBell (Display * d, int i);$/;"	p	signature:(Display * d, int i)
XBell_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XBell_TCL_DECLARED$/;"	d
XCALLOC	/usr/include/tclTomMathDecls.h	/^#define XCALLOC(/;"	d
XChangeGC	/usr/include/tkIntXlibDecls.h	/^#define XChangeGC /;"	d
XChangeGC	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XChangeGC (Display * d, GC gc, unsigned long mask, $/;"	p	signature:(Display * d, GC gc, unsigned long mask, XGCValues * values)
XChangeGC_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XChangeGC_TCL_DECLARED$/;"	d
XChangeProperty	/usr/include/tkIntXlibDecls.h	/^#define XChangeProperty /;"	d
XChangeProperty	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XChangeProperty (Display * d, Window w, Atom a1, $/;"	p	signature:(Display * d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char * c, int i3)
XChangeProperty_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XChangeProperty_TCL_DECLARED$/;"	d
XChangeWindowAttributes	/usr/include/tkIntXlibDecls.h	/^#define XChangeWindowAttributes /;"	d
XChangeWindowAttributes	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XChangeWindowAttributes (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, unsigned long ul, XSetWindowAttributes * x)
XChangeWindowAttributes_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XChangeWindowAttributes_TCL_DECLARED$/;"	d
XClearWindow	/usr/include/tkIntXlibDecls.h	/^#define XClearWindow /;"	d
XClearWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XClearWindow (Display * d, Window w);$/;"	p	signature:(Display * d, Window w)
XClearWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XClearWindow_TCL_DECLARED$/;"	d
XConfigureWindow	/usr/include/tkIntXlibDecls.h	/^#define XConfigureWindow /;"	d
XConfigureWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XConfigureWindow (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, unsigned int i, XWindowChanges * x)
XConfigureWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XConfigureWindow_TCL_DECLARED$/;"	d
XCopyArea	/usr/include/tkIntXlibDecls.h	/^#define XCopyArea /;"	d
XCopyArea	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XCopyArea (Display * d, Drawable dr1, Drawable dr2, $/;"	p	signature:(Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4)
XCopyArea_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCopyArea_TCL_DECLARED$/;"	d
XCopyPlane	/usr/include/tkIntXlibDecls.h	/^#define XCopyPlane /;"	d
XCopyPlane	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XCopyPlane (Display * d, Drawable dr1, Drawable dr2, $/;"	p	signature:(Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul)
XCopyPlane_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCopyPlane_TCL_DECLARED$/;"	d
XCreateBitmapFromData	/usr/include/tkIntXlibDecls.h	/^#define XCreateBitmapFromData /;"	d
XCreateBitmapFromData	/usr/include/tkIntXlibDecls.h	/^EXTERN Pixmap		XCreateBitmapFromData (Display * display, Drawable d, $/;"	p	signature:(Display * display, Drawable d, _Xconst char * data, unsigned int width, unsigned int height)
XCreateBitmapFromData_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreateBitmapFromData_TCL_DECLARED$/;"	d
XCreateColormap	/usr/include/tkIntXlibDecls.h	/^#define XCreateColormap /;"	d
XCreateColormap	/usr/include/tkIntXlibDecls.h	/^EXTERN Colormap		XCreateColormap (Display * d, Window w, Visual * v, $/;"	p	signature:(Display * d, Window w, Visual * v, int i)
XCreateColormap_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreateColormap_TCL_DECLARED$/;"	d
XCreateGC	/usr/include/tkIntXlibDecls.h	/^#define XCreateGC /;"	d
XCreateGC	/usr/include/tkIntXlibDecls.h	/^EXTERN GC		XCreateGC (Display * display, Drawable d, $/;"	p	signature:(Display * display, Drawable d, unsigned long valuemask, XGCValues * values)
XCreateGC_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreateGC_TCL_DECLARED$/;"	d
XCreateGlyphCursor	/usr/include/tkIntXlibDecls.h	/^#define XCreateGlyphCursor /;"	d
XCreateGlyphCursor	/usr/include/tkIntXlibDecls.h	/^EXTERN Cursor		XCreateGlyphCursor (Display * d, Font f1, Font f2, $/;"	p	signature:(Display * d, Font f1, Font f2, unsigned int ui1, unsigned int ui2, XColor * x1, XColor * x2)
XCreateGlyphCursor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreateGlyphCursor_TCL_DECLARED$/;"	d
XCreateIC	/usr/include/tkIntXlibDecls.h	/^#define XCreateIC /;"	d
XCreateIC	/usr/include/tkIntXlibDecls.h	/^EXTERN XIC		XCreateIC (void);$/;"	p	signature:(void)
XCreateIC_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreateIC_TCL_DECLARED$/;"	d
XCreateImage	/usr/include/tkIntXlibDecls.h	/^#define XCreateImage /;"	d
XCreateImage	/usr/include/tkIntXlibDecls.h	/^EXTERN XImage *		XCreateImage (Display * d, Visual * v, $/;"	p	signature:(Display * d, Visual * v, unsigned int ui1, int i1, int i2, char * cp, unsigned int ui2, unsigned int ui3, int i3, int i4)
XCreateImage_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreateImage_TCL_DECLARED$/;"	d
XCreatePixmapCursor	/usr/include/tkIntXlibDecls.h	/^#define XCreatePixmapCursor /;"	d
XCreatePixmapCursor	/usr/include/tkIntXlibDecls.h	/^EXTERN Cursor		XCreatePixmapCursor (Display * d, Pixmap p1, $/;"	p	signature:(Display * d, Pixmap p1, Pixmap p2, XColor * x1, XColor * x2, unsigned int ui1, unsigned int ui2)
XCreatePixmapCursor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XCreatePixmapCursor_TCL_DECLARED$/;"	d
XDeactivateEvent	/usr/include/tk.h	/^typedef XActivateDeactivateEvent XDeactivateEvent;$/;"	t
XDefineCursor	/usr/include/tkIntXlibDecls.h	/^#define XDefineCursor /;"	d
XDefineCursor	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDefineCursor (Display * d, Window w, Cursor c);$/;"	p	signature:(Display * d, Window w, Cursor c)
XDefineCursor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDefineCursor_TCL_DECLARED$/;"	d
XDeleteProperty	/usr/include/tkIntXlibDecls.h	/^#define XDeleteProperty /;"	d
XDeleteProperty	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDeleteProperty (Display * d, Window w, Atom a);$/;"	p	signature:(Display * d, Window w, Atom a)
XDeleteProperty_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDeleteProperty_TCL_DECLARED$/;"	d
XDestroyIC	/usr/include/tkIntXlibDecls.h	/^#define XDestroyIC /;"	d
XDestroyIC	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDestroyIC (XIC x);$/;"	p	signature:(XIC x)
XDestroyIC_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDestroyIC_TCL_DECLARED$/;"	d
XDestroyWindow	/usr/include/tkIntXlibDecls.h	/^#define XDestroyWindow /;"	d
XDestroyWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDestroyWindow (Display * d, Window w);$/;"	p	signature:(Display * d, Window w)
XDestroyWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDestroyWindow_TCL_DECLARED$/;"	d
XDrawArc	/usr/include/tkIntXlibDecls.h	/^#define XDrawArc /;"	d
XDrawArc	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawArc (Display * d, Drawable dr, GC g, int i1, $/;"	p	signature:(Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4)
XDrawArc_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawArc_TCL_DECLARED$/;"	d
XDrawLine	/usr/include/tkIntXlibDecls.h	/^#define XDrawLine /;"	d
XDrawLine	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawLine (Display * d, Drawable dr, GC g, int x1, $/;"	p	signature:(Display * d, Drawable dr, GC g, int x1, int y1, int x2, int y2)
XDrawLine_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawLine_TCL_DECLARED$/;"	d
XDrawLines	/usr/include/tkIntXlibDecls.h	/^#define XDrawLines /;"	d
XDrawLines	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawLines (Display * d, Drawable dr, GC g, $/;"	p	signature:(Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2)
XDrawLines_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawLines_TCL_DECLARED$/;"	d
XDrawPoint	/usr/include/tkIntXlibDecls.h	/^#define XDrawPoint /;"	d
XDrawPoint	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawPoint (Display * display, Drawable d, GC gc, $/;"	p	signature:(Display * display, Drawable d, GC gc, int x, int y)
XDrawPoint_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawPoint_TCL_DECLARED$/;"	d
XDrawPoints	/usr/include/tkIntXlibDecls.h	/^#define XDrawPoints /;"	d
XDrawPoints	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawPoints (Display * display, Drawable d, GC gc, $/;"	p	signature:(Display * display, Drawable d, GC gc, XPoint * points, int npoints, int mode)
XDrawPoints_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawPoints_TCL_DECLARED$/;"	d
XDrawRectangle	/usr/include/tkIntXlibDecls.h	/^#define XDrawRectangle /;"	d
XDrawRectangle	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawRectangle (Display * d, Drawable dr, GC g, $/;"	p	signature:(Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2)
XDrawRectangle_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawRectangle_TCL_DECLARED$/;"	d
XDrawSegments	/usr/include/tkIntXlibDecls.h	/^#define XDrawSegments /;"	d
XDrawSegments	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XDrawSegments (Display * display, Drawable d, GC gc, $/;"	p	signature:(Display * display, Drawable d, GC gc, XSegment * segments, int nsegments)
XDrawSegments_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XDrawSegments_TCL_DECLARED$/;"	d
XFREE	/usr/include/tclTomMathDecls.h	/^#define XFREE(/;"	d
XFillArc	/usr/include/tkIntXlibDecls.h	/^#define XFillArc /;"	d
XFillArc	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFillArc (Display * d, Drawable dr, GC g, int i1, $/;"	p	signature:(Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4)
XFillArc_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFillArc_TCL_DECLARED$/;"	d
XFillPolygon	/usr/include/tkIntXlibDecls.h	/^#define XFillPolygon /;"	d
XFillPolygon	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFillPolygon (Display * d, Drawable dr, GC g, $/;"	p	signature:(Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2, int i3)
XFillPolygon_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFillPolygon_TCL_DECLARED$/;"	d
XFillRectangle	/usr/include/tkIntXlibDecls.h	/^#define XFillRectangle /;"	d
XFillRectangle	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFillRectangle (Display * display, Drawable d, GC gc, $/;"	p	signature:(Display * display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height)
XFillRectangle_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFillRectangle_TCL_DECLARED$/;"	d
XFillRectangles	/usr/include/tkIntXlibDecls.h	/^#define XFillRectangles /;"	d
XFillRectangles	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFillRectangles (Display * d, Drawable dr, GC g, $/;"	p	signature:(Display * d, Drawable dr, GC g, XRectangle * x, int i)
XFillRectangles_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFillRectangles_TCL_DECLARED$/;"	d
XFilterEvent	/usr/include/tkIntXlibDecls.h	/^#define XFilterEvent /;"	d
XFilterEvent	/usr/include/tkIntXlibDecls.h	/^EXTERN Bool		XFilterEvent (XEvent * x, Window w);$/;"	p	signature:(XEvent * x, Window w)
XFilterEvent_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFilterEvent_TCL_DECLARED$/;"	d
XForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^#define XForceScreenSaver /;"	d
XForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XForceScreenSaver (Display * d, int i);$/;"	p	signature:(Display * d, int i)
XForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XForceScreenSaver (Display * display, int mode);$/;"	p	signature:(Display * display, int mode)
XForceScreenSaver_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XForceScreenSaver_TCL_DECLARED$/;"	d
XFreeColormap	/usr/include/tkIntXlibDecls.h	/^#define XFreeColormap /;"	d
XFreeColormap	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFreeColormap (Display * d, Colormap c);$/;"	p	signature:(Display * d, Colormap c)
XFreeColormap_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFreeColormap_TCL_DECLARED$/;"	d
XFreeColors	/usr/include/tkIntXlibDecls.h	/^#define XFreeColors /;"	d
XFreeColors	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFreeColors (Display * d, Colormap c, $/;"	p	signature:(Display * d, Colormap c, unsigned long * ulp, int i, unsigned long ul)
XFreeColors_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFreeColors_TCL_DECLARED$/;"	d
XFreeCursor	/usr/include/tkIntXlibDecls.h	/^#define XFreeCursor /;"	d
XFreeCursor	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFreeCursor (Display * d, Cursor c);$/;"	p	signature:(Display * d, Cursor c)
XFreeCursor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFreeCursor_TCL_DECLARED$/;"	d
XFreeGC	/usr/include/tkIntXlibDecls.h	/^#define XFreeGC /;"	d
XFreeGC	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFreeGC (Display * display, GC gc);$/;"	p	signature:(Display * display, GC gc)
XFreeGC_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFreeGC_TCL_DECLARED$/;"	d
XFreeModifiermap	/usr/include/tkIntXlibDecls.h	/^#define XFreeModifiermap /;"	d
XFreeModifiermap	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XFreeModifiermap (XModifierKeymap * x);$/;"	p	signature:(XModifierKeymap * x)
XFreeModifiermap_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XFreeModifiermap_TCL_DECLARED$/;"	d
XGContextFromGC	/usr/include/tkIntXlibDecls.h	/^#define XGContextFromGC /;"	d
XGContextFromGC	/usr/include/tkIntXlibDecls.h	/^EXTERN GContext		XGContextFromGC (GC g);$/;"	p	signature:(GC g)
XGContextFromGC_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGContextFromGC_TCL_DECLARED$/;"	d
XGetAtomName	/usr/include/tkIntXlibDecls.h	/^#define XGetAtomName /;"	d
XGetAtomName	/usr/include/tkIntXlibDecls.h	/^EXTERN char *		XGetAtomName (Display * d, Atom a);$/;"	p	signature:(Display * d, Atom a)
XGetAtomName_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetAtomName_TCL_DECLARED$/;"	d
XGetGeometry	/usr/include/tkIntXlibDecls.h	/^#define XGetGeometry /;"	d
XGetGeometry	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XGetGeometry (Display * d, Drawable dr, Window * w, $/;"	p	signature:(Display * d, Drawable dr, Window * w, int * i1, int * i2, unsigned int * ui1, unsigned int * ui2, unsigned int * ui3, unsigned int * ui4)
XGetGeometry_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetGeometry_TCL_DECLARED$/;"	d
XGetImage	/usr/include/tkIntXlibDecls.h	/^#define XGetImage /;"	d
XGetImage	/usr/include/tkIntXlibDecls.h	/^EXTERN XImage *		XGetImage (Display * d, Drawable dr, int i1, int i2, $/;"	p	signature:(Display * d, Drawable dr, int i1, int i2, unsigned int ui1, unsigned int ui2, unsigned long ul, int i3)
XGetImage_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetImage_TCL_DECLARED$/;"	d
XGetInputFocus	/usr/include/tkIntXlibDecls.h	/^#define XGetInputFocus /;"	d
XGetInputFocus	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XGetInputFocus (Display * d, Window * w, int * i);$/;"	p	signature:(Display * d, Window * w, int * i)
XGetInputFocus_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetInputFocus_TCL_DECLARED$/;"	d
XGetModifierMapping	/usr/include/tkIntXlibDecls.h	/^#define XGetModifierMapping /;"	d
XGetModifierMapping	/usr/include/tkIntXlibDecls.h	/^EXTERN XModifierKeymap * XGetModifierMapping (Display * d);$/;"	p	signature:(Display * d)
XGetModifierMapping_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetModifierMapping_TCL_DECLARED$/;"	d
XGetVisualInfo	/usr/include/tkIntXlibDecls.h	/^#define XGetVisualInfo /;"	d
XGetVisualInfo	/usr/include/tkIntXlibDecls.h	/^EXTERN XVisualInfo *	XGetVisualInfo (Display * display, long vinfo_mask, $/;"	p	signature:(Display * display, long vinfo_mask, XVisualInfo * vinfo_template, int * nitems_return)
XGetVisualInfo_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetVisualInfo_TCL_DECLARED$/;"	d
XGetWMColormapWindows	/usr/include/tkIntXlibDecls.h	/^#define XGetWMColormapWindows /;"	d
XGetWMColormapWindows	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XGetWMColormapWindows (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, Window ** wpp, int * ip)
XGetWMColormapWindows_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetWMColormapWindows_TCL_DECLARED$/;"	d
XGetWindowAttributes	/usr/include/tkIntXlibDecls.h	/^#define XGetWindowAttributes /;"	d
XGetWindowAttributes	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XGetWindowAttributes (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, XWindowAttributes * x)
XGetWindowAttributes_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetWindowAttributes_TCL_DECLARED$/;"	d
XGetWindowProperty	/usr/include/tkIntXlibDecls.h	/^#define XGetWindowProperty /;"	d
XGetWindowProperty	/usr/include/tkIntXlibDecls.h	/^EXTERN int		XGetWindowProperty (Display * d, Window w, Atom a1, $/;"	p	signature:(Display * d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom * ap, int * ip, unsigned long * ulp1, unsigned long * ulp2, unsigned char ** cpp)
XGetWindowProperty_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGetWindowProperty_TCL_DECLARED$/;"	d
XGrabKeyboard	/usr/include/tkIntXlibDecls.h	/^#define XGrabKeyboard /;"	d
XGrabKeyboard	/usr/include/tkIntXlibDecls.h	/^EXTERN int		XGrabKeyboard (Display * d, Window w, Bool b, int i1, $/;"	p	signature:(Display * d, Window w, Bool b, int i1, int i2, Time t)
XGrabKeyboard_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGrabKeyboard_TCL_DECLARED$/;"	d
XGrabPointer	/usr/include/tkIntXlibDecls.h	/^#define XGrabPointer /;"	d
XGrabPointer	/usr/include/tkIntXlibDecls.h	/^EXTERN int		XGrabPointer (Display * d, Window w1, Bool b, $/;"	p	signature:(Display * d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t)
XGrabPointer_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XGrabPointer_TCL_DECLARED$/;"	d
XIconifyWindow	/usr/include/tkIntXlibDecls.h	/^#define XIconifyWindow /;"	d
XIconifyWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XIconifyWindow (Display * d, Window w, int i);$/;"	p	signature:(Display * d, Window w, int i)
XIconifyWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XIconifyWindow_TCL_DECLARED$/;"	d
XInternAtom	/usr/include/tkIntXlibDecls.h	/^#define XInternAtom /;"	d
XInternAtom	/usr/include/tkIntXlibDecls.h	/^EXTERN Atom		XInternAtom (Display * display, $/;"	p	signature:(Display * display, _Xconst char * atom_name, Bool only_if_exists)
XInternAtom_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XInternAtom_TCL_DECLARED$/;"	d
XKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^#define XKeycodeToKeysym /;"	d
XKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^EXTERN KeySym		XKeycodeToKeysym (Display * d, KeyCode k, int i);$/;"	p	signature:(Display * d, KeyCode k, int i)
XKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^EXTERN KeySym		XKeycodeToKeysym (Display * d, unsigned int k, int i);$/;"	p	signature:(Display * d, unsigned int k, int i)
XKeycodeToKeysym_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XKeycodeToKeysym_TCL_DECLARED$/;"	d
XKeysymToKeycode	/usr/include/tkIntXlibDecls.h	/^#define XKeysymToKeycode /;"	d
XKeysymToKeycode	/usr/include/tkIntXlibDecls.h	/^EXTERN KeyCode		XKeysymToKeycode (Display * d, KeySym k);$/;"	p	signature:(Display * d, KeySym k)
XKeysymToKeycode_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XKeysymToKeycode_TCL_DECLARED$/;"	d
XKeysymToString	/usr/include/tkIntXlibDecls.h	/^#define XKeysymToString /;"	d
XKeysymToString	/usr/include/tkIntXlibDecls.h	/^EXTERN char *		XKeysymToString (KeySym k);$/;"	p	signature:(KeySym k)
XKeysymToString_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XKeysymToString_TCL_DECLARED$/;"	d
XListHosts	/usr/include/tkIntXlibDecls.h	/^#define XListHosts /;"	d
XListHosts	/usr/include/tkIntXlibDecls.h	/^EXTERN XHostAddress *	XListHosts (Display * d, int * i, Bool * b);$/;"	p	signature:(Display * d, int * i, Bool * b)
XListHosts_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XListHosts_TCL_DECLARED$/;"	d
XLookupColor	/usr/include/tkIntXlibDecls.h	/^#define XLookupColor /;"	d
XLookupColor	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XLookupColor (Display * d, Colormap c1, $/;"	p	signature:(Display * d, Colormap c1, _Xconst char * c2, XColor * x1, XColor * x2)
XLookupColor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XLookupColor_TCL_DECLARED$/;"	d
XMALLOC	/usr/include/tclTomMathDecls.h	/^#define XMALLOC(/;"	d
XMLCALL	/usr/include/expat_external.h	/^#define XMLCALL /;"	d
XMLCALL	/usr/include/expat_external.h	/^#define XMLCALL$/;"	d
XMLIMPORT	/usr/include/expat_external.h	/^#define XMLIMPORT /;"	d
XMLIMPORT	/usr/include/expat_external.h	/^#define XMLIMPORT$/;"	d
XMLPARSEAPI	/usr/include/expat_external.h	/^#define XMLPARSEAPI(/;"	d
XML_AttlistDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_AttlistDeclHandler) ($/;"	t
XML_Bool	/usr/include/expat.h	/^typedef unsigned char XML_Bool;$/;"	t
XML_CQUANT_NONE	/usr/include/expat.h	/^  XML_CQUANT_NONE,$/;"	e	enum:XML_Content_Quant
XML_CQUANT_OPT	/usr/include/expat.h	/^  XML_CQUANT_OPT,$/;"	e	enum:XML_Content_Quant
XML_CQUANT_PLUS	/usr/include/expat.h	/^  XML_CQUANT_PLUS$/;"	e	enum:XML_Content_Quant
XML_CQUANT_REP	/usr/include/expat.h	/^  XML_CQUANT_REP,$/;"	e	enum:XML_Content_Quant
XML_CTYPE_ANY	/usr/include/expat.h	/^  XML_CTYPE_ANY,$/;"	e	enum:XML_Content_Type
XML_CTYPE_CHOICE	/usr/include/expat.h	/^  XML_CTYPE_CHOICE,$/;"	e	enum:XML_Content_Type
XML_CTYPE_EMPTY	/usr/include/expat.h	/^  XML_CTYPE_EMPTY = 1,$/;"	e	enum:XML_Content_Type
XML_CTYPE_MIXED	/usr/include/expat.h	/^  XML_CTYPE_MIXED,$/;"	e	enum:XML_Content_Type
XML_CTYPE_NAME	/usr/include/expat.h	/^  XML_CTYPE_NAME,$/;"	e	enum:XML_Content_Type
XML_CTYPE_SEQ	/usr/include/expat.h	/^  XML_CTYPE_SEQ$/;"	e	enum:XML_Content_Type
XML_Char	/usr/include/expat_external.h	/^typedef char XML_Char;$/;"	t
XML_Char	/usr/include/expat_external.h	/^typedef unsigned short XML_Char;$/;"	t
XML_Char	/usr/include/expat_external.h	/^typedef wchar_t XML_Char;$/;"	t
XML_CharacterDataHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_CharacterDataHandler) (void *userData,$/;"	t
XML_CommentHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_CommentHandler) (void *userData,$/;"	t
XML_Content	/usr/include/expat.h	/^typedef struct XML_cp XML_Content;$/;"	t	typeref:struct:XML_cp
XML_Content_Quant	/usr/include/expat.h	/^enum XML_Content_Quant {$/;"	g
XML_Content_Type	/usr/include/expat.h	/^enum XML_Content_Type {$/;"	g
XML_DefaultHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_DefaultHandler) (void *userData,$/;"	t
XML_ERROR_ABORTED	/usr/include/expat.h	/^  XML_ERROR_ABORTED,$/;"	e	enum:XML_Error
XML_ERROR_ASYNC_ENTITY	/usr/include/expat.h	/^  XML_ERROR_ASYNC_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF	/usr/include/expat.h	/^  XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_BAD_CHAR_REF	/usr/include/expat.h	/^  XML_ERROR_BAD_CHAR_REF,$/;"	e	enum:XML_Error
XML_ERROR_BINARY_ENTITY_REF	/usr/include/expat.h	/^  XML_ERROR_BINARY_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING	/usr/include/expat.h	/^  XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING,$/;"	e	enum:XML_Error
XML_ERROR_DUPLICATE_ATTRIBUTE	/usr/include/expat.h	/^  XML_ERROR_DUPLICATE_ATTRIBUTE,$/;"	e	enum:XML_Error
XML_ERROR_ENTITY_DECLARED_IN_PE	/usr/include/expat.h	/^  XML_ERROR_ENTITY_DECLARED_IN_PE,$/;"	e	enum:XML_Error
XML_ERROR_EXTERNAL_ENTITY_HANDLING	/usr/include/expat.h	/^  XML_ERROR_EXTERNAL_ENTITY_HANDLING,$/;"	e	enum:XML_Error
XML_ERROR_FEATURE_REQUIRES_XML_DTD	/usr/include/expat.h	/^  XML_ERROR_FEATURE_REQUIRES_XML_DTD,$/;"	e	enum:XML_Error
XML_ERROR_FINISHED	/usr/include/expat.h	/^  XML_ERROR_FINISHED,$/;"	e	enum:XML_Error
XML_ERROR_INCOMPLETE_PE	/usr/include/expat.h	/^  XML_ERROR_INCOMPLETE_PE,$/;"	e	enum:XML_Error
XML_ERROR_INCORRECT_ENCODING	/usr/include/expat.h	/^  XML_ERROR_INCORRECT_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_INVALID_TOKEN	/usr/include/expat.h	/^  XML_ERROR_INVALID_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_JUNK_AFTER_DOC_ELEMENT	/usr/include/expat.h	/^  XML_ERROR_JUNK_AFTER_DOC_ELEMENT,$/;"	e	enum:XML_Error
XML_ERROR_MISPLACED_XML_PI	/usr/include/expat.h	/^  XML_ERROR_MISPLACED_XML_PI,$/;"	e	enum:XML_Error
XML_ERROR_NONE	/usr/include/expat.h	/^  XML_ERROR_NONE,$/;"	e	enum:XML_Error
XML_ERROR_NOT_STANDALONE	/usr/include/expat.h	/^  XML_ERROR_NOT_STANDALONE,$/;"	e	enum:XML_Error
XML_ERROR_NOT_SUSPENDED	/usr/include/expat.h	/^  XML_ERROR_NOT_SUSPENDED,$/;"	e	enum:XML_Error
XML_ERROR_NO_ELEMENTS	/usr/include/expat.h	/^  XML_ERROR_NO_ELEMENTS,$/;"	e	enum:XML_Error
XML_ERROR_NO_MEMORY	/usr/include/expat.h	/^  XML_ERROR_NO_MEMORY,$/;"	e	enum:XML_Error
XML_ERROR_PARAM_ENTITY_REF	/usr/include/expat.h	/^  XML_ERROR_PARAM_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_PARTIAL_CHAR	/usr/include/expat.h	/^  XML_ERROR_PARTIAL_CHAR,$/;"	e	enum:XML_Error
XML_ERROR_PUBLICID	/usr/include/expat.h	/^  XML_ERROR_PUBLICID,$/;"	e	enum:XML_Error
XML_ERROR_RECURSIVE_ENTITY_REF	/usr/include/expat.h	/^  XML_ERROR_RECURSIVE_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_RESERVED_NAMESPACE_URI	/usr/include/expat.h	/^  XML_ERROR_RESERVED_NAMESPACE_URI$/;"	e	enum:XML_Error
XML_ERROR_RESERVED_PREFIX_XML	/usr/include/expat.h	/^  XML_ERROR_RESERVED_PREFIX_XML,$/;"	e	enum:XML_Error
XML_ERROR_RESERVED_PREFIX_XMLNS	/usr/include/expat.h	/^  XML_ERROR_RESERVED_PREFIX_XMLNS,$/;"	e	enum:XML_Error
XML_ERROR_SUSPENDED	/usr/include/expat.h	/^  XML_ERROR_SUSPENDED,$/;"	e	enum:XML_Error
XML_ERROR_SUSPEND_PE	/usr/include/expat.h	/^  XML_ERROR_SUSPEND_PE,$/;"	e	enum:XML_Error
XML_ERROR_SYNTAX	/usr/include/expat.h	/^  XML_ERROR_SYNTAX,$/;"	e	enum:XML_Error
XML_ERROR_TAG_MISMATCH	/usr/include/expat.h	/^  XML_ERROR_TAG_MISMATCH,$/;"	e	enum:XML_Error
XML_ERROR_TEXT_DECL	/usr/include/expat.h	/^  XML_ERROR_TEXT_DECL,$/;"	e	enum:XML_Error
XML_ERROR_UNBOUND_PREFIX	/usr/include/expat.h	/^  XML_ERROR_UNBOUND_PREFIX,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_CDATA_SECTION	/usr/include/expat.h	/^  XML_ERROR_UNCLOSED_CDATA_SECTION,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_TOKEN	/usr/include/expat.h	/^  XML_ERROR_UNCLOSED_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_UNDECLARING_PREFIX	/usr/include/expat.h	/^  XML_ERROR_UNDECLARING_PREFIX,$/;"	e	enum:XML_Error
XML_ERROR_UNDEFINED_ENTITY	/usr/include/expat.h	/^  XML_ERROR_UNDEFINED_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_UNEXPECTED_STATE	/usr/include/expat.h	/^  XML_ERROR_UNEXPECTED_STATE,$/;"	e	enum:XML_Error
XML_ERROR_UNKNOWN_ENCODING	/usr/include/expat.h	/^  XML_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_XML_DECL	/usr/include/expat.h	/^  XML_ERROR_XML_DECL,$/;"	e	enum:XML_Error
XML_ElementDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_ElementDeclHandler) (void *userData,$/;"	t
XML_Encoding	/usr/include/expat.h	/^} XML_Encoding;$/;"	t	typeref:struct:__anon49
XML_EndCdataSectionHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_EndCdataSectionHandler) (void *userData);$/;"	t
XML_EndDoctypeDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_EndDoctypeDeclHandler)(void *userData);$/;"	t
XML_EndElementHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_EndElementHandler) (void *userData,$/;"	t
XML_EndNamespaceDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_EndNamespaceDeclHandler) ($/;"	t
XML_EntityDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_EntityDeclHandler) ($/;"	t
XML_Error	/usr/include/expat.h	/^enum XML_Error {$/;"	g
XML_Expat_Version	/usr/include/expat.h	/^} XML_Expat_Version;$/;"	t	typeref:struct:__anon51
XML_ExternalEntityRefHandler	/usr/include/expat.h	/^typedef int (XMLCALL *XML_ExternalEntityRefHandler) ($/;"	t
XML_FALSE	/usr/include/expat.h	/^#define XML_FALSE /;"	d
XML_FEATURE_CONTEXT_BYTES	/usr/include/expat.h	/^  XML_FEATURE_CONTEXT_BYTES,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_DTD	/usr/include/expat.h	/^  XML_FEATURE_DTD,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_END	/usr/include/expat.h	/^  XML_FEATURE_END = 0,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_LARGE_SIZE	/usr/include/expat.h	/^  XML_FEATURE_LARGE_SIZE$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_MIN_SIZE	/usr/include/expat.h	/^  XML_FEATURE_MIN_SIZE,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_NS	/usr/include/expat.h	/^  XML_FEATURE_NS,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_SIZEOF_XML_CHAR	/usr/include/expat.h	/^  XML_FEATURE_SIZEOF_XML_CHAR,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_SIZEOF_XML_LCHAR	/usr/include/expat.h	/^  XML_FEATURE_SIZEOF_XML_LCHAR,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_UNICODE	/usr/include/expat.h	/^  XML_FEATURE_UNICODE,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_UNICODE_WCHAR_T	/usr/include/expat.h	/^  XML_FEATURE_UNICODE_WCHAR_T,$/;"	e	enum:XML_FeatureEnum
XML_FINISHED	/usr/include/expat.h	/^  XML_FINISHED,$/;"	e	enum:XML_Parsing
XML_Feature	/usr/include/expat.h	/^} XML_Feature;$/;"	t	typeref:struct:__anon52
XML_FeatureEnum	/usr/include/expat.h	/^enum XML_FeatureEnum {$/;"	g
XML_GetErrorByteIndex	/usr/include/expat.h	/^#define XML_GetErrorByteIndex /;"	d
XML_GetErrorColumnNumber	/usr/include/expat.h	/^#define XML_GetErrorColumnNumber /;"	d
XML_GetErrorLineNumber	/usr/include/expat.h	/^#define XML_GetErrorLineNumber /;"	d
XML_GetUserData	/usr/include/expat.h	/^#define XML_GetUserData(/;"	d
XML_INITIALIZED	/usr/include/expat.h	/^  XML_INITIALIZED,$/;"	e	enum:XML_Parsing
XML_Index	/usr/include/expat_external.h	/^typedef __int64 XML_Index; $/;"	t
XML_Index	/usr/include/expat_external.h	/^typedef long XML_Index;$/;"	t
XML_Index	/usr/include/expat_external.h	/^typedef long long XML_Index;$/;"	t
XML_LChar	/usr/include/expat_external.h	/^typedef char XML_LChar;$/;"	t
XML_LChar	/usr/include/expat_external.h	/^typedef wchar_t XML_LChar;$/;"	t
XML_MAJOR_VERSION	/usr/include/expat.h	/^#define XML_MAJOR_VERSION /;"	d
XML_MICRO_VERSION	/usr/include/expat.h	/^#define XML_MICRO_VERSION /;"	d
XML_MINOR_VERSION	/usr/include/expat.h	/^#define XML_MINOR_VERSION /;"	d
XML_Memory_Handling_Suite	/usr/include/expat.h	/^} XML_Memory_Handling_Suite;$/;"	t	typeref:struct:__anon48
XML_NotStandaloneHandler	/usr/include/expat.h	/^typedef int (XMLCALL *XML_NotStandaloneHandler) (void *userData);$/;"	t
XML_NotationDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_NotationDeclHandler) ($/;"	t
XML_PARAM_ENTITY_PARSING_ALWAYS	/usr/include/expat.h	/^  XML_PARAM_ENTITY_PARSING_ALWAYS$/;"	e	enum:XML_ParamEntityParsing
XML_PARAM_ENTITY_PARSING_NEVER	/usr/include/expat.h	/^  XML_PARAM_ENTITY_PARSING_NEVER,$/;"	e	enum:XML_ParamEntityParsing
XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE	/usr/include/expat.h	/^  XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE,$/;"	e	enum:XML_ParamEntityParsing
XML_PARSING	/usr/include/expat.h	/^  XML_PARSING,$/;"	e	enum:XML_Parsing
XML_ParamEntityParsing	/usr/include/expat.h	/^enum XML_ParamEntityParsing {$/;"	g
XML_Parser	/usr/include/expat.h	/^typedef struct XML_ParserStruct *XML_Parser;$/;"	t	typeref:struct:XML_ParserStruct
XML_Parsing	/usr/include/expat.h	/^enum XML_Parsing {$/;"	g
XML_ParsingStatus	/usr/include/expat.h	/^} XML_ParsingStatus;$/;"	t	typeref:struct:__anon50
XML_ProcessingInstructionHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_ProcessingInstructionHandler) ($/;"	t
XML_STATUS_ERROR	/usr/include/expat.h	/^  XML_STATUS_ERROR = 0,$/;"	e	enum:XML_Status
XML_STATUS_ERROR	/usr/include/expat.h	/^#define XML_STATUS_ERROR /;"	d
XML_STATUS_OK	/usr/include/expat.h	/^  XML_STATUS_OK = 1,$/;"	e	enum:XML_Status
XML_STATUS_OK	/usr/include/expat.h	/^#define XML_STATUS_OK /;"	d
XML_STATUS_SUSPENDED	/usr/include/expat.h	/^  XML_STATUS_SUSPENDED = 2$/;"	e	enum:XML_Status
XML_STATUS_SUSPENDED	/usr/include/expat.h	/^#define XML_STATUS_SUSPENDED /;"	d
XML_SUSPENDED	/usr/include/expat.h	/^  XML_SUSPENDED$/;"	e	enum:XML_Parsing
XML_SetExternalEntityRefHandlerArg	/usr/include/expat.h	/^#define XML_SetExternalEntityRefHandlerArg /;"	d
XML_SetProcessingInstructionHandler	/usr/include/expat.h	/^#define XML_SetProcessingInstructionHandler /;"	d
XML_SetStartNamespaceDeclHandler	/usr/include/expat.h	/^#define XML_SetStartNamespaceDeclHandler /;"	d
XML_SetUnparsedEntityDeclHandler	/usr/include/expat.h	/^#define XML_SetUnparsedEntityDeclHandler /;"	d
XML_Size	/usr/include/expat_external.h	/^typedef unsigned __int64 XML_Size;$/;"	t
XML_Size	/usr/include/expat_external.h	/^typedef unsigned long XML_Size;$/;"	t
XML_Size	/usr/include/expat_external.h	/^typedef unsigned long long XML_Size;$/;"	t
XML_SkippedEntityHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_SkippedEntityHandler) ($/;"	t
XML_StartCdataSectionHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_StartCdataSectionHandler) (void *userData);$/;"	t
XML_StartDoctypeDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_StartDoctypeDeclHandler) ($/;"	t
XML_StartElementHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_StartElementHandler) (void *userData,$/;"	t
XML_StartNamespaceDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_StartNamespaceDeclHandler) ($/;"	t
XML_Status	/usr/include/expat.h	/^enum XML_Status {$/;"	g
XML_TRUE	/usr/include/expat.h	/^#define XML_TRUE /;"	d
XML_UNICODE	/usr/include/expat_external.h	/^#define XML_UNICODE$/;"	d
XML_USE_MSC_EXTENSIONS	/usr/include/expat_external.h	/^#define XML_USE_MSC_EXTENSIONS /;"	d
XML_UnknownEncodingHandler	/usr/include/expat.h	/^typedef int (XMLCALL *XML_UnknownEncodingHandler) ($/;"	t
XML_UnparsedEntityDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_UnparsedEntityDeclHandler) ($/;"	t
XML_XmlDeclHandler	/usr/include/expat.h	/^typedef void (XMLCALL *XML_XmlDeclHandler) (void           *userData,$/;"	t
XML_cp	/usr/include/expat.h	/^struct XML_cp {$/;"	s
XML_cp::children	/usr/include/expat.h	/^  XML_Content *                 children;$/;"	m	struct:XML_cp	access:public
XML_cp::name	/usr/include/expat.h	/^  XML_Char *                    name;$/;"	m	struct:XML_cp	access:public
XML_cp::numchildren	/usr/include/expat.h	/^  unsigned int                  numchildren;$/;"	m	struct:XML_cp	access:public
XML_cp::quant	/usr/include/expat.h	/^  enum XML_Content_Quant        quant;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Quant	access:public
XML_cp::type	/usr/include/expat.h	/^  enum XML_Content_Type         type;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Type	access:public
XMapWindow	/usr/include/tkIntXlibDecls.h	/^#define XMapWindow /;"	d
XMapWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XMapWindow (Display * d, Window w);$/;"	p	signature:(Display * d, Window w)
XMapWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XMapWindow_TCL_DECLARED$/;"	d
XMoveResizeWindow	/usr/include/tkIntXlibDecls.h	/^#define XMoveResizeWindow /;"	d
XMoveResizeWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XMoveResizeWindow (Display * d, Window w, int i1, $/;"	p	signature:(Display * d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2)
XMoveResizeWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XMoveResizeWindow_TCL_DECLARED$/;"	d
XMoveWindow	/usr/include/tkIntXlibDecls.h	/^#define XMoveWindow /;"	d
XMoveWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XMoveWindow (Display * d, Window w, int i1, int i2);$/;"	p	signature:(Display * d, Window w, int i1, int i2)
XMoveWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XMoveWindow_TCL_DECLARED$/;"	d
XNextEvent	/usr/include/tkIntXlibDecls.h	/^#define XNextEvent /;"	d
XNextEvent	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XNextEvent (Display * d, XEvent * x);$/;"	p	signature:(Display * d, XEvent * x)
XNextEvent_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XNextEvent_TCL_DECLARED$/;"	d
XPLUGIN_H	/usr/include/Xplugin.h	/^#define XPLUGIN_H /;"	d
XPLUGIN_VERSION	/usr/include/Xplugin.h	/^#define XPLUGIN_VERSION /;"	d
XP_ATTACH_TRANSIENT	/usr/include/Xplugin.h	/^    XP_ATTACH_TRANSIENT		= 1 << 7,$/;"	e	enum:xp_window_changes_enum
XP_BACKGROUND_EVENTS	/usr/include/Xplugin.h	/^    XP_BACKGROUND_EVENTS	= 1 << 1,$/;"	e	enum:xp_init_options_enum
XP_BOUNDS	/usr/include/Xplugin.h	/^    XP_BOUNDS			= XP_ORIGIN | XP_SIZE,$/;"	e	enum:xp_window_changes_enum
XP_BadAccess	/usr/include/Xplugin.h	/^    XP_BadAccess		= 10,$/;"	e	enum:xp_error_enum
XP_BadImplementation	/usr/include/Xplugin.h	/^    XP_BadImplementation	= 17,$/;"	e	enum:xp_error_enum
XP_BadMatch	/usr/include/Xplugin.h	/^    XP_BadMatch			= 8,$/;"	e	enum:xp_error_enum
XP_BadRequest	/usr/include/Xplugin.h	/^    XP_BadRequest		= 1,$/;"	e	enum:xp_error_enum
XP_BadValue	/usr/include/Xplugin.h	/^    XP_BadValue			= 2,$/;"	e	enum:xp_error_enum
XP_BadWindow	/usr/include/Xplugin.h	/^    XP_BadWindow		= 3,$/;"	e	enum:xp_error_enum
XP_COLORMAP	/usr/include/Xplugin.h	/^    XP_COLORMAP			= 1 << 5,$/;"	e	enum:xp_window_changes_enum
XP_COMPOSITE_FUNCTION	/usr/include/Xplugin.h	/^#define XP_COMPOSITE_FUNCTION(/;"	d
XP_COMPOSITE_FUNCTION_DEST_DEPTH	/usr/include/Xplugin.h	/^#define XP_COMPOSITE_FUNCTION_DEST_DEPTH(/;"	d
XP_COMPOSITE_FUNCTION_MASK_DEPTH	/usr/include/Xplugin.h	/^#define XP_COMPOSITE_FUNCTION_MASK_DEPTH(/;"	d
XP_COMPOSITE_FUNCTION_OP	/usr/include/Xplugin.h	/^#define XP_COMPOSITE_FUNCTION_OP(/;"	d
XP_COMPOSITE_FUNCTION_SRC_DEPTH	/usr/include/Xplugin.h	/^#define XP_COMPOSITE_FUNCTION_SRC_DEPTH(/;"	d
XP_COMPOSITE_OVER	/usr/include/Xplugin.h	/^    XP_COMPOSITE_OVER,$/;"	e	enum:xp_composite_op_enum
XP_COMPOSITE_SRC	/usr/include/Xplugin.h	/^    XP_COMPOSITE_SRC = 0,$/;"	e	enum:xp_composite_op_enum
XP_DEPTH	/usr/include/Xplugin.h	/^    XP_DEPTH			= 1 << 4,$/;"	e	enum:xp_window_changes_enum
XP_DEPTH_A8	/usr/include/Xplugin.h	/^    XP_DEPTH_A8,			\/* for masks when compositing *\/$/;"	e	enum:xp_depth_enum
XP_DEPTH_ARGB8888	/usr/include/Xplugin.h	/^    XP_DEPTH_ARGB8888,$/;"	e	enum:xp_depth_enum
XP_DEPTH_INDEX8	/usr/include/Xplugin.h	/^    XP_DEPTH_INDEX8,$/;"	e	enum:xp_depth_enum
XP_DEPTH_NIL	/usr/include/Xplugin.h	/^    XP_DEPTH_NIL = 0,			\/* null source when compositing *\/$/;"	e	enum:xp_depth_enum
XP_DEPTH_RGB555	/usr/include/Xplugin.h	/^    XP_DEPTH_RGB555,$/;"	e	enum:xp_depth_enum
XP_EVENT_ASYNC_ERROR	/usr/include/Xplugin.h	/^    XP_EVENT_ASYNC_ERROR	= 1 << 2,$/;"	e	enum:xp_event_type_enum
XP_EVENT_DISPLAY_CHANGED	/usr/include/Xplugin.h	/^    XP_EVENT_DISPLAY_CHANGED	= 1 << 0,$/;"	e	enum:xp_event_type_enum
XP_EVENT_SPACE_CHANGED	/usr/include/Xplugin.h	/^    XP_EVENT_SPACE_CHANGED  = 1 << 6,$/;"	e	enum:xp_event_type_enum
XP_EVENT_SURFACE_CHANGED	/usr/include/Xplugin.h	/^    XP_EVENT_SURFACE_CHANGED	= 1 << 4,$/;"	e	enum:xp_event_type_enum
XP_EVENT_SURFACE_DESTROYED	/usr/include/Xplugin.h	/^    XP_EVENT_SURFACE_DESTROYED	= 1 << 3,$/;"	e	enum:xp_event_type_enum
XP_EVENT_WINDOW_MOVED	/usr/include/Xplugin.h	/^    XP_EVENT_WINDOW_MOVED	= 1 << 5,$/;"	e	enum:xp_event_type_enum
XP_EVENT_WINDOW_STATE_CHANGED	/usr/include/Xplugin.h	/^    XP_EVENT_WINDOW_STATE_CHANGED = 1 << 1,$/;"	e	enum:xp_event_type_enum
XP_FRAME_ACTIVE	/usr/include/Xplugin.h	/^    XP_FRAME_ACTIVE			= 0x0001,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_ANY_BUTTON	/usr/include/Xplugin.h	/^    XP_FRAME_ANY_BUTTON			= 0x0700,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_ANY_CLICKED	/usr/include/Xplugin.h	/^    XP_FRAME_ANY_CLICKED		= 0x3800,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_ATTR_IS_CLICKED	/usr/include/Xplugin.h	/^#define XP_FRAME_ATTR_IS_CLICKED(/;"	d
XP_FRAME_ATTR_IS_SET	/usr/include/Xplugin.h	/^#define XP_FRAME_ATTR_IS_SET(/;"	d
XP_FRAME_ATTR_SET_CLICKED	/usr/include/Xplugin.h	/^#define XP_FRAME_ATTR_SET_CLICKED(/;"	d
XP_FRAME_ATTR_UNSET_CLICKED	/usr/include/Xplugin.h	/^#define XP_FRAME_ATTR_UNSET_CLICKED(/;"	d
XP_FRAME_CLASS_BORDERLESS	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_BORDERLESS		= 1 << 8,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_DIALOG	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_DIALOG		= 1 << 1,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_DOCUMENT	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_DOCUMENT		= 1 << 0,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_MENU	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_MENU			= 1 << 6,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_MODAL_DIALOG	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_MODAL_DIALOG		= 1 << 2,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_SPLASH	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_SPLASH		= 1 << 7,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_SYSTEM_MODAL_DIALOG	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_SYSTEM_MODAL_DIALOG	= 1 << 3,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_TOOLBAR	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_TOOLBAR		= 1 << 5,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLASS_UTILITY	/usr/include/Xplugin.h	/^    XP_FRAME_CLASS_UTILITY		= 1 << 4,$/;"	e	enum:xp_frame_class_enum
XP_FRAME_CLOSE_BOX	/usr/include/Xplugin.h	/^    XP_FRAME_CLOSE_BOX			= 0x0100,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_CLOSE_BOX_CLICKED	/usr/include/Xplugin.h	/^    XP_FRAME_CLOSE_BOX_CLICKED		= 0x0800,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_COLLAPSE	/usr/include/Xplugin.h	/^    XP_FRAME_COLLAPSE			= 0x0200,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_COLLAPSE_BOX_CLICKED	/usr/include/Xplugin.h	/^    XP_FRAME_COLLAPSE_BOX_CLICKED	= 0x1000,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_GROW_BOX	/usr/include/Xplugin.h	/^    XP_FRAME_GROW_BOX			= 0x4000,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_POINTER_ATTRS	/usr/include/Xplugin.h	/^#define XP_FRAME_POINTER_ATTRS	/;"	d
XP_FRAME_PRELIGHT	/usr/include/Xplugin.h	/^    XP_FRAME_PRELIGHT			= 0x0008,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_RECT_GROWBOX	/usr/include/Xplugin.h	/^    XP_FRAME_RECT_GROWBOX		= 3,$/;"	e	enum:xp_frame_rect_enum
XP_FRAME_RECT_TITLEBAR	/usr/include/Xplugin.h	/^    XP_FRAME_RECT_TITLEBAR		= 1,$/;"	e	enum:xp_frame_rect_enum
XP_FRAME_RECT_TRACKING	/usr/include/Xplugin.h	/^    XP_FRAME_RECT_TRACKING		= 2,$/;"	e	enum:xp_frame_rect_enum
XP_FRAME_SHADED	/usr/include/Xplugin.h	/^    XP_FRAME_SHADED			= 0x0010,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_TITLE	/usr/include/Xplugin.h	/^    XP_FRAME_TITLE			= 0x0004,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_URGENT	/usr/include/Xplugin.h	/^    XP_FRAME_URGENT			= 0x0002,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_ZOOM	/usr/include/Xplugin.h	/^    XP_FRAME_ZOOM			= 0x0400,$/;"	e	enum:xp_frame_attr_enum
XP_FRAME_ZOOM_BOX_CLICKED	/usr/include/Xplugin.h	/^    XP_FRAME_ZOOM_BOX_CLICKED		= 0x2000,$/;"	e	enum:xp_frame_attr_enum
XP_GRAVITY_NONE	/usr/include/Xplugin.h	/^    XP_GRAVITY_NONE		= 0,	\/* no gravity, fill everything *\/$/;"	e	enum:xp_bit_gravity_enum
XP_GRAVITY_NORTH_EAST	/usr/include/Xplugin.h	/^    XP_GRAVITY_NORTH_EAST	= 2,	\/* anchor to top-right corner *\/$/;"	e	enum:xp_bit_gravity_enum
XP_GRAVITY_NORTH_WEST	/usr/include/Xplugin.h	/^    XP_GRAVITY_NORTH_WEST	= 1,	\/* anchor to top-left corner *\/$/;"	e	enum:xp_bit_gravity_enum
XP_GRAVITY_SOUTH_EAST	/usr/include/Xplugin.h	/^    XP_GRAVITY_SOUTH_EAST	= 3,	\/* anchor to bottom-right corner *\/$/;"	e	enum:xp_bit_gravity_enum
XP_GRAVITY_SOUTH_WEST	/usr/include/Xplugin.h	/^    XP_GRAVITY_SOUTH_WEST	= 4,	\/* anchor to bottom-left corner *\/$/;"	e	enum:xp_bit_gravity_enum
XP_IN_BACKGROUND	/usr/include/Xplugin.h	/^    XP_IN_BACKGROUND		= 1 << 0,$/;"	e	enum:xp_init_options_enum
XP_MAPPED_ABOVE	/usr/include/Xplugin.h	/^    XP_MAPPED_ABOVE		= 1,	\/* display the window on top *\/$/;"	e	enum:xp_window_stack_mode_enum
XP_MAPPED_BELOW	/usr/include/Xplugin.h	/^    XP_MAPPED_BELOW		= 2,	\/* display the window at bottom *\/$/;"	e	enum:xp_window_stack_mode_enum
XP_ORIGIN	/usr/include/Xplugin.h	/^    XP_ORIGIN			= 1 << 0,$/;"	e	enum:xp_window_changes_enum
XP_REQUEST_CONFIGURE_WINDOW	/usr/include/Xplugin.h	/^    XP_REQUEST_CONFIGURE_WINDOW = 2,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_COPY_WINDOW	/usr/include/Xplugin.h	/^    XP_REQUEST_COPY_WINDOW = 4,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_DESTROY_WINDOW	/usr/include/Xplugin.h	/^    XP_REQUEST_DESTROY_WINDOW = 1,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_DISABLE_UPDATE	/usr/include/Xplugin.h	/^    XP_REQUEST_DISABLE_UPDATE = 6,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_FLUSH_WINDOW	/usr/include/Xplugin.h	/^    XP_REQUEST_FLUSH_WINDOW = 3,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_FRAME_DRAW	/usr/include/Xplugin.h	/^    XP_REQUEST_FRAME_DRAW = 10,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_HIDE_CURSOR	/usr/include/Xplugin.h	/^    XP_REQUEST_HIDE_CURSOR = 8,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_NIL	/usr/include/Xplugin.h	/^    XP_REQUEST_NIL = 0,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_REENABLE_UPDATE	/usr/include/Xplugin.h	/^    XP_REQUEST_REENABLE_UPDATE = 7,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_SHOW_CURSOR	/usr/include/Xplugin.h	/^    XP_REQUEST_SHOW_CURSOR = 9,$/;"	e	enum:xp_request_type_enum
XP_REQUEST_UNLOCK_WINDOW	/usr/include/Xplugin.h	/^    XP_REQUEST_UNLOCK_WINDOW = 5,$/;"	e	enum:xp_request_type_enum
XP_SHAPE	/usr/include/Xplugin.h	/^    XP_SHAPE			= 1 << 2,$/;"	e	enum:xp_window_changes_enum
XP_SIZE	/usr/include/Xplugin.h	/^    XP_SIZE			= 1 << 1,$/;"	e	enum:xp_window_changes_enum
XP_STACKING	/usr/include/Xplugin.h	/^    XP_STACKING			= 1 << 3,$/;"	e	enum:xp_window_changes_enum
XP_Success	/usr/include/Xplugin.h	/^    XP_Success			= 0,$/;"	e	enum:xp_error_enum
XP_UNMAPPED	/usr/include/Xplugin.h	/^    XP_UNMAPPED			= 0,	\/* remove the window *\/$/;"	e	enum:xp_window_stack_mode_enum
XP_WINDOW_LEVEL	/usr/include/Xplugin.h	/^    XP_WINDOW_LEVEL		= 1 << 6,$/;"	e	enum:xp_window_changes_enum
XP_WINDOW_STATE_OBSCURED	/usr/include/Xplugin.h	/^    XP_WINDOW_STATE_OBSCURED	= 1 << 1,$/;"	e	enum:xp_window_state_enum
XP_WINDOW_STATE_OFFSCREEN	/usr/include/Xplugin.h	/^    XP_WINDOW_STATE_OFFSCREEN	= 1 << 0,$/;"	e	enum:xp_window_state_enum
XParseColor	/usr/include/tkIntXlibDecls.h	/^#define XParseColor /;"	d
XParseColor	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XParseColor (Display * display, Colormap map, $/;"	p	signature:(Display * display, Colormap map, _Xconst char * spec, XColor * colorPtr)
XParseColor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XParseColor_TCL_DECLARED$/;"	d
XPutBackEvent	/usr/include/tkIntXlibDecls.h	/^#define XPutBackEvent /;"	d
XPutBackEvent	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XPutBackEvent (Display * d, XEvent * x);$/;"	p	signature:(Display * d, XEvent * x)
XPutBackEvent_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XPutBackEvent_TCL_DECLARED$/;"	d
XQueryColor	/usr/include/tkIntXlibDecls.h	/^#define XQueryColor /;"	d
XQueryColor	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XQueryColor (Display * display, Colormap colormap, $/;"	p	signature:(Display * display, Colormap colormap, XColor * def_in_out)
XQueryColor_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XQueryColor_TCL_DECLARED$/;"	d
XQueryColors	/usr/include/tkIntXlibDecls.h	/^#define XQueryColors /;"	d
XQueryColors	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XQueryColors (Display * d, Colormap c, XColor * x, $/;"	p	signature:(Display * d, Colormap c, XColor * x, int i)
XQueryColors	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XQueryColors (Display * display, Colormap colormap, $/;"	p	signature:(Display * display, Colormap colormap, XColor * defs_in_out, int ncolors)
XQueryColors_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XQueryColors_TCL_DECLARED$/;"	d
XQueryPointer	/usr/include/tkIntXlibDecls.h	/^#define XQueryPointer /;"	d
XQueryPointer	/usr/include/tkIntXlibDecls.h	/^EXTERN Bool		XQueryPointer (Display * d, Window w1, Window * w2, $/;"	p	signature:(Display * d, Window w1, Window * w2, Window * w3, int * i1, int * i2, int * i3, int * i4, unsigned int * ui)
XQueryPointer_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XQueryPointer_TCL_DECLARED$/;"	d
XQueryTree	/usr/include/tkIntXlibDecls.h	/^#define XQueryTree /;"	d
XQueryTree	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XQueryTree (Display * d, Window w1, Window * w2, $/;"	p	signature:(Display * d, Window w1, Window * w2, Window * w3, Window ** w4, unsigned int * ui)
XQueryTree_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XQueryTree_TCL_DECLARED$/;"	d
XREALLOC	/usr/include/tclTomMathDecls.h	/^#define XREALLOC(/;"	d
XRaiseWindow	/usr/include/tkIntXlibDecls.h	/^#define XRaiseWindow /;"	d
XRaiseWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XRaiseWindow (Display * d, Window w);$/;"	p	signature:(Display * d, Window w)
XRaiseWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XRaiseWindow_TCL_DECLARED$/;"	d
XRefreshKeyboardMapping	/usr/include/tkIntXlibDecls.h	/^#define XRefreshKeyboardMapping /;"	d
XRefreshKeyboardMapping	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XRefreshKeyboardMapping (XMappingEvent * x);$/;"	p	signature:(XMappingEvent * x)
XRefreshKeyboardMapping_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XRefreshKeyboardMapping_TCL_DECLARED$/;"	d
XResizeWindow	/usr/include/tkIntXlibDecls.h	/^#define XResizeWindow /;"	d
XResizeWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XResizeWindow (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, unsigned int ui1, unsigned int ui2)
XResizeWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XResizeWindow_TCL_DECLARED$/;"	d
XRootWindow	/usr/include/tkIntXlibDecls.h	/^#define XRootWindow /;"	d
XRootWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN Window		XRootWindow (Display * d, int i);$/;"	p	signature:(Display * d, int i)
XRootWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XRootWindow_TCL_DECLARED$/;"	d
XSelectInput	/usr/include/tkIntXlibDecls.h	/^#define XSelectInput /;"	d
XSelectInput	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSelectInput (Display * d, Window w, long l);$/;"	p	signature:(Display * d, Window w, long l)
XSelectInput_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSelectInput_TCL_DECLARED$/;"	d
XSendEvent	/usr/include/tkIntXlibDecls.h	/^#define XSendEvent /;"	d
XSendEvent	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XSendEvent (Display * d, Window w, Bool b, long l, $/;"	p	signature:(Display * d, Window w, Bool b, long l, XEvent * x)
XSendEvent_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSendEvent_TCL_DECLARED$/;"	d
XSetArcMode	/usr/include/tkIntXlibDecls.h	/^#define XSetArcMode /;"	d
XSetArcMode	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetArcMode (Display * display, GC gc, int arc_mode);$/;"	p	signature:(Display * display, GC gc, int arc_mode)
XSetArcMode_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetArcMode_TCL_DECLARED$/;"	d
XSetBackground	/usr/include/tkIntXlibDecls.h	/^#define XSetBackground /;"	d
XSetBackground	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetBackground (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, unsigned long foreground)
XSetBackground_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetBackground_TCL_DECLARED$/;"	d
XSetClipMask	/usr/include/tkIntXlibDecls.h	/^#define XSetClipMask /;"	d
XSetClipMask	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetClipMask (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, Pixmap pixmap)
XSetClipMask_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetClipMask_TCL_DECLARED$/;"	d
XSetClipOrigin	/usr/include/tkIntXlibDecls.h	/^#define XSetClipOrigin /;"	d
XSetClipOrigin	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetClipOrigin (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, int clip_x_origin, int clip_y_origin)
XSetClipOrigin_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetClipOrigin_TCL_DECLARED$/;"	d
XSetCommand	/usr/include/tkIntXlibDecls.h	/^#define XSetCommand /;"	d
XSetCommand	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetCommand (Display * d, Window w, CONST char ** c, $/;"	p	signature:(Display * d, Window w, CONST char ** c, int i)
XSetCommand_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetCommand_TCL_DECLARED$/;"	d
XSetDashes	/usr/include/tkIntXlibDecls.h	/^#define XSetDashes /;"	d
XSetDashes	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetDashes (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, int dash_offset, _Xconst char * dash_list, int n)
XSetDashes_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetDashes_TCL_DECLARED$/;"	d
XSetErrorHandler	/usr/include/tkIntXlibDecls.h	/^#define XSetErrorHandler /;"	d
XSetErrorHandler	/usr/include/tkIntXlibDecls.h	/^EXTERN XErrorHandler	XSetErrorHandler (XErrorHandler x);$/;"	p	signature:(XErrorHandler x)
XSetErrorHandler_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetErrorHandler_TCL_DECLARED$/;"	d
XSetFillRule	/usr/include/tkIntXlibDecls.h	/^#define XSetFillRule /;"	d
XSetFillRule	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetFillRule (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, int fill_rule)
XSetFillRule_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetFillRule_TCL_DECLARED$/;"	d
XSetFillStyle	/usr/include/tkIntXlibDecls.h	/^#define XSetFillStyle /;"	d
XSetFillStyle	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetFillStyle (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, int fill_style)
XSetFillStyle_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetFillStyle_TCL_DECLARED$/;"	d
XSetFont	/usr/include/tkIntXlibDecls.h	/^#define XSetFont /;"	d
XSetFont	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetFont (Display * display, GC gc, Font font);$/;"	p	signature:(Display * display, GC gc, Font font)
XSetFont_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetFont_TCL_DECLARED$/;"	d
XSetForeground	/usr/include/tkIntXlibDecls.h	/^#define XSetForeground /;"	d
XSetForeground	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetForeground (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, unsigned long foreground)
XSetForeground_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetForeground_TCL_DECLARED$/;"	d
XSetFunction	/usr/include/tkIntXlibDecls.h	/^#define XSetFunction /;"	d
XSetFunction	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetFunction (Display * display, GC gc, int function);$/;"	p	signature:(Display * display, GC gc, int function)
XSetFunction_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetFunction_TCL_DECLARED$/;"	d
XSetIconName	/usr/include/tkIntXlibDecls.h	/^#define XSetIconName /;"	d
XSetIconName	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetIconName (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, _Xconst char * c)
XSetIconName_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetIconName_TCL_DECLARED$/;"	d
XSetInputFocus	/usr/include/tkIntXlibDecls.h	/^#define XSetInputFocus /;"	d
XSetInputFocus	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetInputFocus (Display * d, Window w, int i, Time t);$/;"	p	signature:(Display * d, Window w, int i, Time t)
XSetInputFocus_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetInputFocus_TCL_DECLARED$/;"	d
XSetLineAttributes	/usr/include/tkIntXlibDecls.h	/^#define XSetLineAttributes /;"	d
XSetLineAttributes	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetLineAttributes (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style)
XSetLineAttributes_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetLineAttributes_TCL_DECLARED$/;"	d
XSetSelectionOwner	/usr/include/tkIntXlibDecls.h	/^#define XSetSelectionOwner /;"	d
XSetSelectionOwner	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetSelectionOwner (Display * d, Atom a, Window w, $/;"	p	signature:(Display * d, Atom a, Window w, Time t)
XSetSelectionOwner_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetSelectionOwner_TCL_DECLARED$/;"	d
XSetStipple	/usr/include/tkIntXlibDecls.h	/^#define XSetStipple /;"	d
XSetStipple	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetStipple (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, Pixmap stipple)
XSetStipple_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetStipple_TCL_DECLARED$/;"	d
XSetTSOrigin	/usr/include/tkIntXlibDecls.h	/^#define XSetTSOrigin /;"	d
XSetTSOrigin	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetTSOrigin (Display * display, GC gc, $/;"	p	signature:(Display * display, GC gc, int ts_x_origin, int ts_y_origin)
XSetTSOrigin_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetTSOrigin_TCL_DECLARED$/;"	d
XSetWMClientMachine	/usr/include/tkIntXlibDecls.h	/^#define XSetWMClientMachine /;"	d
XSetWMClientMachine	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWMClientMachine (Display * display, Window w, $/;"	p	signature:(Display * display, Window w, XTextProperty * text_prop)
XSetWMClientMachine_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWMClientMachine_TCL_DECLARED$/;"	d
XSetWindowBackground	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBackground /;"	d
XSetWindowBackground	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWindowBackground (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, unsigned long ul)
XSetWindowBackgroundPixmap	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBackgroundPixmap /;"	d
XSetWindowBackgroundPixmap	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWindowBackgroundPixmap (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, Pixmap p)
XSetWindowBackgroundPixmap_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBackgroundPixmap_TCL_DECLARED$/;"	d
XSetWindowBackground_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBackground_TCL_DECLARED$/;"	d
XSetWindowBorder	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBorder /;"	d
XSetWindowBorder	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWindowBorder (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, unsigned long ul)
XSetWindowBorderPixmap	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBorderPixmap /;"	d
XSetWindowBorderPixmap	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWindowBorderPixmap (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, Pixmap p)
XSetWindowBorderPixmap_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBorderPixmap_TCL_DECLARED$/;"	d
XSetWindowBorderWidth	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBorderWidth /;"	d
XSetWindowBorderWidth	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWindowBorderWidth (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, unsigned int ui)
XSetWindowBorderWidth_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBorderWidth_TCL_DECLARED$/;"	d
XSetWindowBorder_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowBorder_TCL_DECLARED$/;"	d
XSetWindowColormap	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowColormap /;"	d
XSetWindowColormap	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XSetWindowColormap (Display * d, Window w, $/;"	p	signature:(Display * d, Window w, Colormap c)
XSetWindowColormap_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSetWindowColormap_TCL_DECLARED$/;"	d
XStringListToTextProperty	/usr/include/tkIntXlibDecls.h	/^#define XStringListToTextProperty /;"	d
XStringListToTextProperty	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XStringListToTextProperty (char ** list, int count, $/;"	p	signature:(char ** list, int count, XTextProperty * text_prop_return)
XStringListToTextProperty_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XStringListToTextProperty_TCL_DECLARED$/;"	d
XStringToKeysym	/usr/include/tkIntXlibDecls.h	/^#define XStringToKeysym /;"	d
XStringToKeysym	/usr/include/tkIntXlibDecls.h	/^EXTERN KeySym		XStringToKeysym (_Xconst char * c);$/;"	p	signature:(_Xconst char * c)
XStringToKeysym_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XStringToKeysym_TCL_DECLARED$/;"	d
XSync	/usr/include/tkIntXlibDecls.h	/^#define XSync /;"	d
XSync	/usr/include/tkIntXlibDecls.h	/^EXTERN int		XSync (Display * display, Bool flag);$/;"	p	signature:(Display * display, Bool flag)
XSync_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XSync_TCL_DECLARED$/;"	d
XTranslateCoordinates	/usr/include/tkIntXlibDecls.h	/^#define XTranslateCoordinates /;"	d
XTranslateCoordinates	/usr/include/tkIntXlibDecls.h	/^EXTERN Bool		XTranslateCoordinates (Display * d, Window w1, $/;"	p	signature:(Display * d, Window w1, Window w2, int i1, int i2, int * i3, int * i4, Window * w3)
XTranslateCoordinates_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XTranslateCoordinates_TCL_DECLARED$/;"	d
XUngrabKeyboard	/usr/include/tkIntXlibDecls.h	/^#define XUngrabKeyboard /;"	d
XUngrabKeyboard	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XUngrabKeyboard (Display * d, Time t);$/;"	p	signature:(Display * d, Time t)
XUngrabKeyboard_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XUngrabKeyboard_TCL_DECLARED$/;"	d
XUngrabPointer	/usr/include/tkIntXlibDecls.h	/^#define XUngrabPointer /;"	d
XUngrabPointer	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XUngrabPointer (Display * d, Time t);$/;"	p	signature:(Display * d, Time t)
XUngrabPointer_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XUngrabPointer_TCL_DECLARED$/;"	d
XUnmapWindow	/usr/include/tkIntXlibDecls.h	/^#define XUnmapWindow /;"	d
XUnmapWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XUnmapWindow (Display * d, Window w);$/;"	p	signature:(Display * d, Window w)
XUnmapWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XUnmapWindow_TCL_DECLARED$/;"	d
XVirtualEvent	/usr/include/tk.h	/^} XVirtualEvent;$/;"	t	typeref:struct:__anon129
XWarpPointer	/usr/include/tkIntXlibDecls.h	/^#define XWarpPointer /;"	d
XWarpPointer	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XWarpPointer (Display * d, Window s, Window dw, $/;"	p	signature:(Display * d, Window s, Window dw, int sx, int sy, unsigned int sw, unsigned int sh, int dx, int dy)
XWarpPointer	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XWarpPointer (Display * display, Window src_w, $/;"	p	signature:(Display * display, Window src_w, Window dest_w, int src_x, int src_y, unsigned int src_width, unsigned int src_height, int dest_x, int dest_y)
XWarpPointer_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XWarpPointer_TCL_DECLARED$/;"	d
XWindowEvent	/usr/include/tkIntXlibDecls.h	/^#define XWindowEvent /;"	d
XWindowEvent	/usr/include/tkIntXlibDecls.h	/^EXTERN void		XWindowEvent (Display * d, Window w, long l, $/;"	p	signature:(Display * d, Window w, long l, XEvent * x)
XWindowEvent_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XWindowEvent_TCL_DECLARED$/;"	d
XWithdrawWindow	/usr/include/tkIntXlibDecls.h	/^#define XWithdrawWindow /;"	d
XWithdrawWindow	/usr/include/tkIntXlibDecls.h	/^EXTERN Status		XWithdrawWindow (Display * d, Window w, int i);$/;"	p	signature:(Display * d, Window w, int i)
XWithdrawWindow_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XWithdrawWindow_TCL_DECLARED$/;"	d
X_OK	/usr/include/fcgios.h	/^#define X_OK /;"	d
XmbLookupString	/usr/include/tkIntXlibDecls.h	/^#define XmbLookupString /;"	d
XmbLookupString	/usr/include/tkIntXlibDecls.h	/^EXTERN int		XmbLookupString (XIC xi, XKeyPressedEvent * xk, $/;"	p	signature:(XIC xi, XKeyPressedEvent * xk, char * c, int i, KeySym * k, Status * s)
XmbLookupString_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define XmbLookupString_TCL_DECLARED$/;"	d
YESEXPR	/usr/include/langinfo.h	/^#define	YESEXPR	/;"	d
YESSTR	/usr/include/langinfo.h	/^#define	YESSTR	/;"	d
YYLeng	/usr/include/FlexLexer.h	/^	int YYLeng()	const	{ return yyleng; }$/;"	f	class:FlexLexer	access:public	signature:() const
YYText	/usr/include/FlexLexer.h	/^	const char* YYText() const	{ return yytext; }$/;"	f	class:FlexLexer	access:public	signature:() const
ZCONF_H	/usr/include/zconf.h	/^#define ZCONF_H$/;"	d
ZEXPORT	/usr/include/zconf.h	/^#      define ZEXPORT /;"	d
ZEXPORT	/usr/include/zconf.h	/^#    define ZEXPORT /;"	d
ZEXPORT	/usr/include/zconf.h	/^#  define ZEXPORT$/;"	d
ZEXPORTVA	/usr/include/zconf.h	/^#      define ZEXPORTVA /;"	d
ZEXPORTVA	/usr/include/zconf.h	/^#  define ZEXPORTVA$/;"	d
ZEXTERN	/usr/include/zconf.h	/^#        define ZEXTERN /;"	d
ZEXTERN	/usr/include/zconf.h	/^#  define ZEXTERN /;"	d
ZLIB_H	/usr/include/zlib.h	/^#define ZLIB_H$/;"	d
ZLIB_VERNUM	/usr/include/zlib.h	/^#define ZLIB_VERNUM /;"	d
ZLIB_VERSION	/usr/include/zlib.h	/^#define ZLIB_VERSION /;"	d
Z_ASCII	/usr/include/zlib.h	/^#define Z_ASCII /;"	d
Z_BEST_COMPRESSION	/usr/include/zlib.h	/^#define Z_BEST_COMPRESSION /;"	d
Z_BEST_SPEED	/usr/include/zlib.h	/^#define Z_BEST_SPEED /;"	d
Z_BINARY	/usr/include/zlib.h	/^#define Z_BINARY /;"	d
Z_BLOCK	/usr/include/zlib.h	/^#define Z_BLOCK /;"	d
Z_BUF_ERROR	/usr/include/zlib.h	/^#define Z_BUF_ERROR /;"	d
Z_DATA_ERROR	/usr/include/zlib.h	/^#define Z_DATA_ERROR /;"	d
Z_DEFAULT_COMPRESSION	/usr/include/zlib.h	/^#define Z_DEFAULT_COMPRESSION /;"	d
Z_DEFAULT_STRATEGY	/usr/include/zlib.h	/^#define Z_DEFAULT_STRATEGY /;"	d
Z_DEFLATED	/usr/include/zlib.h	/^#define Z_DEFLATED /;"	d
Z_ERRNO	/usr/include/zlib.h	/^#define Z_ERRNO /;"	d
Z_FILTERED	/usr/include/zlib.h	/^#define Z_FILTERED /;"	d
Z_FINISH	/usr/include/zlib.h	/^#define Z_FINISH /;"	d
Z_FIXED	/usr/include/zlib.h	/^#define Z_FIXED /;"	d
Z_FULL_FLUSH	/usr/include/zlib.h	/^#define Z_FULL_FLUSH /;"	d
Z_HUFFMAN_ONLY	/usr/include/zlib.h	/^#define Z_HUFFMAN_ONLY /;"	d
Z_MEM_ERROR	/usr/include/zlib.h	/^#define Z_MEM_ERROR /;"	d
Z_NEED_DICT	/usr/include/zlib.h	/^#define Z_NEED_DICT /;"	d
Z_NO_COMPRESSION	/usr/include/zlib.h	/^#define Z_NO_COMPRESSION /;"	d
Z_NO_FLUSH	/usr/include/zlib.h	/^#define Z_NO_FLUSH /;"	d
Z_NULL	/usr/include/zlib.h	/^#define Z_NULL /;"	d
Z_OK	/usr/include/zlib.h	/^#define Z_OK /;"	d
Z_PARTIAL_FLUSH	/usr/include/zlib.h	/^#define Z_PARTIAL_FLUSH /;"	d
Z_RLE	/usr/include/zlib.h	/^#define Z_RLE /;"	d
Z_STREAM_END	/usr/include/zlib.h	/^#define Z_STREAM_END /;"	d
Z_STREAM_ERROR	/usr/include/zlib.h	/^#define Z_STREAM_ERROR /;"	d
Z_SYNC_FLUSH	/usr/include/zlib.h	/^#define Z_SYNC_FLUSH /;"	d
Z_TEXT	/usr/include/zlib.h	/^#define Z_TEXT /;"	d
Z_UNKNOWN	/usr/include/zlib.h	/^#define Z_UNKNOWN /;"	d
Z_VERSION_ERROR	/usr/include/zlib.h	/^#define Z_VERSION_ERROR /;"	d
_A	/usr/include/ctype.h	/^#define	_A	/;"	d
_AIO_H_	/usr/include/aio.h	/^#define	_AIO_H_$/;"	d
_ALLOCA_H_	/usr/include/alloca.h	/^#define _ALLOCA_H_$/;"	d
_ANSI_ARGS_	/usr/include/tcl.h	/^#   define _ANSI_ARGS_(/;"	d
_ANSI_ARGS_	/usr/include/tcl.h	/^#undef _ANSI_ARGS_$/;"	d
_ANSI_ARGS_	/usr/include/tcl.h	/^typedef ClientData (Tcl_FSCreateInternalRepProc) _ANSI_ARGS_(($/;"	t
_ANSI_ARGS_	/usr/include/tcl.h	/^typedef ClientData (Tcl_FSDupInternalRepProc) _ANSI_ARGS_(($/;"	t
_ANSI_ARGS_	/usr/include/tcl.h	/^typedef ClientData (Tcl_InitNotifierProc) _ANSI_ARGS_((VOID));$/;"	t
_ANSI_ARGS_	/usr/include/tcl.h	/^typedef Tcl_Channel (Tcl_FSOpenFileChannelProc) _ANSI_ARGS_(($/;"	t
_ANSI_ARGS_	/usr/include/tcl.h	/^typedef Tcl_WideInt (Tcl_DriverWideSeekProc) _ANSI_ARGS_(($/;"	t
_ANSI_ARGS_	/usr/include/tk.h	/^typedef ClientData (Tk_ImageGetProc) _ANSI_ARGS_((Tk_Window tkwin,$/;"	t
_ANSI_ARGS_	/usr/include/tk.h	/^typedef Tk_RestrictAction (Tk_RestrictProc) _ANSI_ARGS_(($/;"	t
_ANSI_ARGS_	/usr/include/tk.h	/^typedef Window (Tk_ClassCreateProc) _ANSI_ARGS_((Tk_Window tkwin,$/;"	t
_AR_H_	/usr/include/ar.h	/^#define	_AR_H_$/;"	d
_B	/usr/include/ctype.h	/^#define	_B	/;"	d
_BITSTRING_H_	/usr/include/bitstring.h	/^#define	_BITSTRING_H_$/;"	d
_BSD_SEMAPHORE_H	/usr/include/semaphore.h	/^#define _BSD_SEMAPHORE_H$/;"	d
_BSD_SETJMP_H	/usr/include/setjmp.h	/^#define _BSD_SETJMP_H$/;"	d
_BZLIB_H	/usr/include/bzlib.h	/^#define _BZLIB_H$/;"	d
_Block_H_	/usr/include/Block.h	/^#define _Block_H_$/;"	d
_Block_copy	/usr/include/Block.h	/^BLOCK_EXPORT void *_Block_copy(const void *aBlock);$/;"	p	signature:(const void *aBlock)
_Block_release	/usr/include/Block.h	/^BLOCK_EXPORT void _Block_release(const void *aBlock);$/;"	p	signature:(const void *aBlock)
_Bool	/usr/include/stdbool.h	/^typedef	int	_Bool;$/;"	t
_C	/usr/include/ctype.h	/^#define	_C	/;"	d
_CACHED_RUNES	/usr/include/runetype.h	/^#define	_CACHED_RUNES	/;"	d
_CACHE_CALLBACKS_H_	/usr/include/cache_callbacks.h	/^#define _CACHE_CALLBACKS_H_$/;"	d
_CACHE_H_	/usr/include/cache.h	/^#define _CACHE_H_$/;"	d
_CLIENTDATA	/usr/include/fcgios.h	/^#define _CLIENTDATA$/;"	d
_CLIENTDATA	/usr/include/tcl.h	/^#   define _CLIENTDATA$/;"	d
_CLOCK_T	/usr/include/time.h	/^#define _CLOCK_T$/;"	d
_COPYFILE_H_	/usr/include/copyfile.h	/^#define _COPYFILE_H_$/;"	d
_CPIO_H_	/usr/include/cpio.h	/^#define	_CPIO_H_$/;"	d
_CRMASK	/usr/include/runetype.h	/^#define	_CRMASK	/;"	d
_CS_DARWIN_USER_CACHE_DIR	/usr/include/unistd.h	/^#define	_CS_DARWIN_USER_CACHE_DIR	/;"	d
_CS_DARWIN_USER_DIR	/usr/include/unistd.h	/^#define	_CS_DARWIN_USER_DIR	/;"	d
_CS_DARWIN_USER_TEMP_DIR	/usr/include/unistd.h	/^#define	_CS_DARWIN_USER_TEMP_DIR	/;"	d
_CS_PATH	/usr/include/unistd.h	/^#define	_CS_PATH	/;"	d
_CS_POSIX_V6_ILP32_OFF32_CFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_ILP32_OFF32_CFLAGS	/;"	d
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_ILP32_OFF32_LDFLAGS	/;"	d
_CS_POSIX_V6_ILP32_OFF32_LIBS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_ILP32_OFF32_LIBS	/;"	d
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS	/;"	d
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS	/;"	d
_CS_POSIX_V6_ILP32_OFFBIG_LIBS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_ILP32_OFFBIG_LIBS	/;"	d
_CS_POSIX_V6_LP64_OFF64_CFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_LP64_OFF64_CFLAGS	/;"	d
_CS_POSIX_V6_LP64_OFF64_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_LP64_OFF64_LDFLAGS	/;"	d
_CS_POSIX_V6_LP64_OFF64_LIBS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_LP64_OFF64_LIBS	/;"	d
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS	/;"	d
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS	/;"	d
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_LPBIG_OFFBIG_LIBS	/;"	d
_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS	/usr/include/unistd.h	/^#define	_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS	/;"	d
_CS_XBS5_ILP32_OFF32_CFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFF32_CFLAGS	/;"	d
_CS_XBS5_ILP32_OFF32_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFF32_LDFLAGS	/;"	d
_CS_XBS5_ILP32_OFF32_LIBS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFF32_LIBS	/;"	d
_CS_XBS5_ILP32_OFF32_LINTFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFF32_LINTFLAGS	/;"	d
_CS_XBS5_ILP32_OFFBIG_CFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFFBIG_CFLAGS	/;"	d
_CS_XBS5_ILP32_OFFBIG_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFFBIG_LDFLAGS	/;"	d
_CS_XBS5_ILP32_OFFBIG_LIBS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFFBIG_LIBS	/;"	d
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_ILP32_OFFBIG_LINTFLAGS	/;"	d
_CS_XBS5_LP64_OFF64_CFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_LP64_OFF64_CFLAGS	/;"	d
_CS_XBS5_LP64_OFF64_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_LP64_OFF64_LDFLAGS	/;"	d
_CS_XBS5_LP64_OFF64_LIBS	/usr/include/unistd.h	/^#define	_CS_XBS5_LP64_OFF64_LIBS	/;"	d
_CS_XBS5_LP64_OFF64_LINTFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_LP64_OFF64_LINTFLAGS	/;"	d
_CS_XBS5_LPBIG_OFFBIG_CFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_LPBIG_OFFBIG_CFLAGS	/;"	d
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_LPBIG_OFFBIG_LDFLAGS	/;"	d
_CS_XBS5_LPBIG_OFFBIG_LIBS	/usr/include/unistd.h	/^#define	_CS_XBS5_LPBIG_OFFBIG_LIBS	/;"	d
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	/usr/include/unistd.h	/^#define	_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	/;"	d
_CTYPE_A	/usr/include/ctype.h	/^#define	_CTYPE_A	/;"	d
_CTYPE_B	/usr/include/ctype.h	/^#define	_CTYPE_B	/;"	d
_CTYPE_C	/usr/include/ctype.h	/^#define	_CTYPE_C	/;"	d
_CTYPE_D	/usr/include/ctype.h	/^#define	_CTYPE_D	/;"	d
_CTYPE_G	/usr/include/ctype.h	/^#define	_CTYPE_G	/;"	d
_CTYPE_H_	/usr/include/ctype.h	/^#define _CTYPE_H_$/;"	d
_CTYPE_I	/usr/include/ctype.h	/^#define	_CTYPE_I	/;"	d
_CTYPE_L	/usr/include/ctype.h	/^#define	_CTYPE_L	/;"	d
_CTYPE_P	/usr/include/ctype.h	/^#define	_CTYPE_P	/;"	d
_CTYPE_Q	/usr/include/ctype.h	/^#define	_CTYPE_Q	/;"	d
_CTYPE_R	/usr/include/ctype.h	/^#define	_CTYPE_R	/;"	d
_CTYPE_S	/usr/include/ctype.h	/^#define	_CTYPE_S	/;"	d
_CTYPE_SW0	/usr/include/ctype.h	/^#define	_CTYPE_SW0	/;"	d
_CTYPE_SW1	/usr/include/ctype.h	/^#define	_CTYPE_SW1	/;"	d
_CTYPE_SW2	/usr/include/ctype.h	/^#define	_CTYPE_SW2	/;"	d
_CTYPE_SW3	/usr/include/ctype.h	/^#define	_CTYPE_SW3	/;"	d
_CTYPE_SWM	/usr/include/ctype.h	/^#define	_CTYPE_SWM	/;"	d
_CTYPE_SWS	/usr/include/ctype.h	/^#define	_CTYPE_SWS	/;"	d
_CTYPE_T	/usr/include/ctype.h	/^#define	_CTYPE_T	/;"	d
_CTYPE_U	/usr/include/ctype.h	/^#define	_CTYPE_U	/;"	d
_CTYPE_X	/usr/include/ctype.h	/^#define	_CTYPE_X	/;"	d
_CT_RUNE_T	/usr/include/runetype.h	/^#define _CT_RUNE_T$/;"	d
_CT_RUNE_T	/usr/include/stdlib.h	/^#define _CT_RUNE_T$/;"	d
_CT_RUNE_T	/usr/include/wchar.h	/^#define _CT_RUNE_T$/;"	d
_Complex_I	/usr/include/complex.h	/^#define _Complex_I /;"	d
_Complex_I	/usr/include/complex.h	/^#undef _Complex_I$/;"	d
_D	/usr/include/ctype.h	/^#define	_D	/;"	d
_DBM	/usr/include/ndbm.h	/^#define _DBM$/;"	d
_DB_H_	/usr/include/db.h	/^#define	_DB_H_$/;"	d
_DEV_T	/usr/include/fts.h	/^#define _DEV_T$/;"	d
_DEV_T	/usr/include/stdlib.h	/^#define _DEV_T$/;"	d
_DEV_T	/usr/include/unistd.h	/^#define	_DEV_T$/;"	d
_DIRENT_H_	/usr/include/dirent.h	/^#define _DIRENT_H_$/;"	d
_DISKTAB_H_	/usr/include/disktab.h	/^#define	_DISKTAB_H_$/;"	d
_DLFCN_H_	/usr/include/dlfcn.h	/^#define _DLFCN_H_$/;"	d
_DNS_SD_H	/usr/include/dns_sd.h	/^#define _DNS_SD_H /;"	d
_DTRACE_H	/usr/include/dtrace.h	/^#define	_DTRACE_H$/;"	d
_ENDLINE	/usr/include/curses.h	/^#define _ENDLINE /;"	d
_ENDLINE	/usr/include/ncurses.h	/^#define _ENDLINE /;"	d
_ERR_H_	/usr/include/err.h	/^#define	_ERR_H_$/;"	d
_EXECINFO_H_	/usr/include/execinfo.h	/^#define _EXECINFO_H_ /;"	d
_FASTCGI_H	/usr/include/fastcgi.h	/^#define _FASTCGI_H$/;"	d
_FCGIAPP_H	/usr/include/fcgiapp.h	/^#define _FCGIAPP_H$/;"	d
_FCGIMISC_H	/usr/include/fcgimisc.h	/^#define _FCGIMISC_H$/;"	d
_FCGIOS_H	/usr/include/fcgios.h	/^#define _FCGIOS_H$/;"	d
_FCGI_STDIO	/usr/include/fcgi_stdio.h	/^#define _FCGI_STDIO /;"	d
_FLOAT_H_	/usr/include/float.h	/^#define _FLOAT_H_$/;"	d
_FMTMSG_H_	/usr/include/fmtmsg.h	/^#define	_FMTMSG_H_$/;"	d
_FNMATCH_H_	/usr/include/fnmatch.h	/^#define	_FNMATCH_H_$/;"	d
_FORTIFY_SOURCE	/usr/include/_types.h	/^#    define _FORTIFY_SOURCE /;"	d
_FSPROPERTIES_H_	/usr/include/fsproperties.h	/^#define _FSPROPERTIES_H_$/;"	d
_FSTAB_H_	/usr/include/fstab.h	/^#define _FSTAB_H_$/;"	d
_FSTDIO	/usr/include/stdio.h	/^#define	_FSTDIO	/;"	d
_FTS_H_	/usr/include/fts.h	/^#define	_FTS_H_$/;"	d
_FTW_H	/usr/include/ftw.h	/^#define	_FTW_H$/;"	d
_FULLWIN	/usr/include/curses.h	/^#define _FULLWIN /;"	d
_FULLWIN	/usr/include/ncurses.h	/^#define _FULLWIN /;"	d
_G	/usr/include/ctype.h	/^#define	_G	/;"	d
_GETOPT	/usr/include/getopt.h	/^#define	_GETOPT$/;"	d
_GETOPT_H_	/usr/include/getopt.h	/^#define _GETOPT_H_$/;"	d
_GID_T	/usr/include/grp.h	/^#define _GID_T$/;"	d
_GID_T	/usr/include/pwd.h	/^#define _GID_T$/;"	d
_GID_T	/usr/include/unistd.h	/^#define	_GID_T$/;"	d
_GLOB_ERR_BLOCK	/usr/include/glob.h	/^#define	_GLOB_ERR_BLOCK	/;"	d
_GLOB_H_	/usr/include/glob.h	/^#define	_GLOB_H_$/;"	d
_GRP_H_	/usr/include/grp.h	/^#define	_GRP_H_$/;"	d
_HASMOVED	/usr/include/curses.h	/^#define _HASMOVED /;"	d
_HASMOVED	/usr/include/ncurses.h	/^#define _HASMOVED /;"	d
_HISTEDIT_H_	/usr/include/histedit.h	/^#define	_HISTEDIT_H_$/;"	d
_I	/usr/include/ctype.h	/^#define	_I	/;"	d
_ICONV_T	/usr/include/iconv.h	/^#define _ICONV_T$/;"	d
_IFADDRS_H_	/usr/include/ifaddrs.h	/^#define	_IFADDRS_H_$/;"	d
_ILP32	/usr/include/dtrace.h	/^#define _ILP32 /;"	d
_INO_T	/usr/include/fts.h	/^#define _INO_T$/;"	d
_INT16_T	/usr/include/stdint.h	/^#define _INT16_T$/;"	d
_INT32_T	/usr/include/stdint.h	/^#define _INT32_T$/;"	d
_INT64_T	/usr/include/stdint.h	/^#define _INT64_T$/;"	d
_INT8_T	/usr/include/stdint.h	/^#define _INT8_T$/;"	d
_INTMAX_T	/usr/include/stdint.h	/^#define _INTMAX_T$/;"	d
_INTPTR_T	/usr/include/stdint.h	/^#define _INTPTR_T$/;"	d
_INTPTR_T	/usr/include/unistd.h	/^#define	_INTPTR_T$/;"	d
_INTTYPES_H_	/usr/include/inttypes.h	/^#define _INTTYPES_H_$/;"	d
_INVALID_RUNE	/usr/include/rune.h	/^#define _INVALID_RUNE /;"	d
_IODBCEXT_H	/usr/include/iodbcext.h	/^#define _IODBCEXT_H$/;"	d
_IODBCUNIX_H	/usr/include/iodbcunix.h	/^#define _IODBCUNIX_H$/;"	d
_IOFBF	/usr/include/stdio.h	/^#define	_IOFBF	/;"	d
_IOLBF	/usr/include/stdio.h	/^#define	_IOLBF	/;"	d
_IONBF	/usr/include/stdio.h	/^#define	_IONBF	/;"	d
_ISO646_H_	/usr/include/iso646.h	/^#define	_ISO646_H_$/;"	d
_ISPAD	/usr/include/curses.h	/^#define _ISPAD	/;"	d
_ISPAD	/usr/include/ncurses.h	/^#define _ISPAD	/;"	d
_KRB5_PROFILE_H	/usr/include/profile.h	/^#define _KRB5_PROFILE_H$/;"	d
_L	/usr/include/ctype.h	/^#define	_L	/;"	d
_LANGINFO_H_	/usr/include/langinfo.h	/^#define	_LANGINFO_H_$/;"	d
_LAUNCH_H_	/usr/include/launch.h	/^#define _LAUNCH_H_$/;"	d
_LBER_H	/usr/include/lber.h	/^#define _LBER_H$/;"	d
_LBER_TYPES_H	/usr/include/lber_types.h	/^#define _LBER_TYPES_H$/;"	d
_LC_LAST	/usr/include/locale.h	/^#define	_LC_LAST	/;"	d
_LC_LAST_MASK	/usr/include/xlocale.h	/^#define _LC_LAST_MASK	/;"	d
_LC_NUM_MASK	/usr/include/xlocale.h	/^#define _LC_NUM_MASK	/;"	d
_LDAP_CDEFS_H	/usr/include/ldap_cdefs.h	/^#define _LDAP_CDEFS_H$/;"	d
_LDAP_FEATURES_H	/usr/include/ldap_features.h	/^#define _LDAP_FEATURES_H /;"	d
_LDAP_H	/usr/include/ldap.h	/^#define _LDAP_H$/;"	d
_LDAP_SCHEMA_H	/usr/include/ldap_schema.h	/^#define _LDAP_SCHEMA_H /;"	d
_LDAP_UTF8_H	/usr/include/ldap_utf8.h	/^#define _LDAP_UTF8_H$/;"	d
_LIBCHARSET_H	/usr/include/libcharset.h	/^#define _LIBCHARSET_H$/;"	d
_LIBC_H	/usr/include/libc.h	/^#define _LIBC_H$/;"	d
_LIBGEN_H_	/usr/include/libgen.h	/^#define _LIBGEN_H_$/;"	d
_LIBICONV_H	/usr/include/iconv.h	/^#define _LIBICONV_H$/;"	d
_LIBICONV_VERSION	/usr/include/iconv.h	/^#define _LIBICONV_VERSION /;"	d
_LIBPROC_H_	/usr/include/libproc.h	/^#define _LIBPROC_H_$/;"	d
_LIMITS_H_	/usr/include/limits.h	/^#define	_LIMITS_H_$/;"	d
_LOCALCHARSET_H	/usr/include/localcharset.h	/^#define _LOCALCHARSET_H$/;"	d
_LOCALE_H_	/usr/include/locale.h	/^#define _LOCALE_H_$/;"	d
_LP64	/usr/include/dtrace.h	/^#define _LP64 /;"	d
_MACH_PORT_T	/usr/include/pthread.h	/^#define _MACH_PORT_T$/;"	d
_MASTERPASSWD	/usr/include/pwd.h	/^#define	_MASTERPASSWD	/;"	d
_MBSTATE_T	/usr/include/wchar.h	/^#define	_MBSTATE_T$/;"	d
_MEMBERSHIP_H_	/usr/include/membership.h	/^#define _MEMBERSHIP_H_$/;"	d
_MODE_T	/usr/include/ndbm.h	/^#define _MODE_T$/;"	d
_MODE_T	/usr/include/spawn.h	/^#define _MODE_T$/;"	d
_MODE_T	/usr/include/stdlib.h	/^#define _MODE_T$/;"	d
_MODE_T	/usr/include/unistd.h	/^#define	_MODE_T$/;"	d
_MONETARY_H_	/usr/include/monetary.h	/^#define	_MONETARY_H_$/;"	d
_MPOOL_H_	/usr/include/mpool.h	/^#define _MPOOL_H_$/;"	d
_MP_DB	/usr/include/pwd.h	/^#define	_MP_DB	/;"	d
_NAMESER_9_H_	/usr/include/nameser.h	/^#define _NAMESER_9_H_$/;"	d
_NC_EVENT_FILE	/usr/include/curses.h	/^#  define _NC_EVENT_FILE	/;"	d
_NC_EVENT_FILE	/usr/include/ncurses.h	/^#  define _NC_EVENT_FILE	/;"	d
_NC_EVENT_FILE_READABLE	/usr/include/curses.h	/^#  define _NC_EVENT_FILE_READABLE	/;"	d
_NC_EVENT_FILE_READABLE	/usr/include/ncurses.h	/^#  define _NC_EVENT_FILE_READABLE	/;"	d
_NC_EVENT_TIMEOUT_MSEC	/usr/include/curses.h	/^#  define _NC_EVENT_TIMEOUT_MSEC	/;"	d
_NC_EVENT_TIMEOUT_MSEC	/usr/include/ncurses.h	/^#  define _NC_EVENT_TIMEOUT_MSEC	/;"	d
_NDBM_H_	/usr/include/ndbm.h	/^#define	_NDBM_H_$/;"	d
_NETDB_H_	/usr/include/netdb.h	/^#define _NETDB_H_$/;"	d
_NEWINDEX	/usr/include/curses.h	/^#define _NEWINDEX	/;"	d
_NEWINDEX	/usr/include/ncurses.h	/^#define _NEWINDEX	/;"	d
_NLINK_T	/usr/include/fts.h	/^#define	_NLINK_T$/;"	d
_NLIST_H_	/usr/include/nlist.h	/^#define	_NLIST_H_$/;"	d
_NL_ITEM	/usr/include/langinfo.h	/^#define	_NL_ITEM$/;"	d
_NL_ITEM	/usr/include/nl_types.h	/^#define _NL_ITEM$/;"	d
_NL_TYPES_H_	/usr/include/nl_types.h	/^#define _NL_TYPES_H_$/;"	d
_NOCHANGE	/usr/include/curses.h	/^#define _NOCHANGE /;"	d
_NOCHANGE	/usr/include/ncurses.h	/^#define _NOCHANGE /;"	d
_NSGetArgc	/usr/include/crt_externs.h	/^extern int *_NSGetArgc(void);$/;"	p	signature:(void)
_NSGetArgv	/usr/include/crt_externs.h	/^extern char ***_NSGetArgv(void);$/;"	p	signature:(void)
_NSGetEnviron	/usr/include/crt_externs.h	/^extern char ***_NSGetEnviron(void);$/;"	p	signature:(void)
_NSGetMachExecuteHeader	/usr/include/crt_externs.h	/^				_NSGetMachExecuteHeader(void);$/;"	p	signature:(void)
_NSGetProgname	/usr/include/crt_externs.h	/^extern char **_NSGetProgname(void);$/;"	p	signature:(void)
_NTSID_H_	/usr/include/ntsid.h	/^#define _NTSID_H_$/;"	d
_ODBCINST_H	/usr/include/odbcinst.h	/^#define _ODBCINST_H$/;"	d
_OFF_T	/usr/include/stdio.h	/^#define	_OFF_T$/;"	d
_OFF_T	/usr/include/unistd.h	/^#define	_OFF_T$/;"	d
_OPTRESET	/usr/include/getopt.h	/^#define	_OPTRESET$/;"	d
_P	/usr/include/ctype.h	/^#define	_P	/;"	d
_PAGE	/usr/include/form.h	/^} _PAGE;$/;"	t	typeref:struct:__anon61
_PASSWD	/usr/include/pwd.h	/^#define	_PASSWD	/;"	d
_PASSWORD_CHGNOW	/usr/include/pwd.h	/^#define _PASSWORD_CHGNOW	/;"	d
_PASSWORD_EFMT1	/usr/include/pwd.h	/^#define	_PASSWORD_EFMT1	/;"	d
_PASSWORD_LEN	/usr/include/pwd.h	/^#define	_PASSWORD_LEN	/;"	d
_PASSWORD_NOCHG	/usr/include/pwd.h	/^#define _PASSWORD_NOCHG	/;"	d
_PASSWORD_NOEXP	/usr/include/pwd.h	/^#define _PASSWORD_NOEXP	/;"	d
_PASSWORD_NOGID	/usr/include/pwd.h	/^#define _PASSWORD_NOGID	/;"	d
_PASSWORD_NOUID	/usr/include/pwd.h	/^#define _PASSWORD_NOUID	/;"	d
_PASSWORD_WARNDAYS	/usr/include/pwd.h	/^#define _PASSWORD_WARNDAYS	/;"	d
_PATHS_H_	/usr/include/paths.h	/^#define	_PATHS_H_$/;"	d
_PATH_BSHELL	/usr/include/paths.h	/^#define	_PATH_BSHELL	/;"	d
_PATH_CONSOLE	/usr/include/paths.h	/^#define	_PATH_CONSOLE	/;"	d
_PATH_CSHELL	/usr/include/paths.h	/^#define	_PATH_CSHELL	/;"	d
_PATH_DEFPATH	/usr/include/paths.h	/^#define	_PATH_DEFPATH	/;"	d
_PATH_DEFTAPE	/usr/include/paths.h	/^#define _PATH_DEFTAPE	/;"	d
_PATH_DEV	/usr/include/paths.h	/^#define	_PATH_DEV	/;"	d
_PATH_DEVDB	/usr/include/paths.h	/^#define	_PATH_DEVDB	/;"	d
_PATH_DEVNULL	/usr/include/paths.h	/^#define	_PATH_DEVNULL	/;"	d
_PATH_DRUM	/usr/include/paths.h	/^#define	_PATH_DRUM	/;"	d
_PATH_FSIRAND	/usr/include/paths.h	/^#define	_PATH_FSIRAND	/;"	d
_PATH_FSTAB	/usr/include/fstab.h	/^#define	_PATH_FSTAB	/;"	d
_PATH_GROUP	/usr/include/grp.h	/^#define	_PATH_GROUP	/;"	d
_PATH_HEQUIV	/usr/include/netdb.h	/^# define	_PATH_HEQUIV	/;"	d
_PATH_HOSTS	/usr/include/netdb.h	/^#define	_PATH_HOSTS	/;"	d
_PATH_KMEM	/usr/include/paths.h	/^#define	_PATH_KMEM	/;"	d
_PATH_KVMDB	/usr/include/paths.h	/^#define	_PATH_KVMDB	/;"	d
_PATH_LASTLOG	/usr/include/utmp.h	/^#define	_PATH_LASTLOG	/;"	d
_PATH_LOCALE	/usr/include/paths.h	/^#define	_PATH_LOCALE	/;"	d
_PATH_LOCALE	/usr/include/rune.h	/^#define	_PATH_LOCALE	/;"	d
_PATH_MAILDIR	/usr/include/paths.h	/^#define	_PATH_MAILDIR	/;"	d
_PATH_MAN	/usr/include/paths.h	/^#define	_PATH_MAN	/;"	d
_PATH_MASTERPASSWD	/usr/include/pwd.h	/^#define	_PATH_MASTERPASSWD	/;"	d
_PATH_MASTERPASSWD_LOCK	/usr/include/pwd.h	/^#define	_PATH_MASTERPASSWD_LOCK	/;"	d
_PATH_MEM	/usr/include/paths.h	/^#define	_PATH_MEM	/;"	d
_PATH_MP_DB	/usr/include/pwd.h	/^#define	_PATH_MP_DB	/;"	d
_PATH_NETWORKS	/usr/include/netdb.h	/^#define	_PATH_NETWORKS	/;"	d
_PATH_NOLOGIN	/usr/include/paths.h	/^#define	_PATH_NOLOGIN	/;"	d
_PATH_PASSWD	/usr/include/pwd.h	/^#define	_PATH_PASSWD	/;"	d
_PATH_PROTOCOLS	/usr/include/netdb.h	/^#define	_PATH_PROTOCOLS	/;"	d
_PATH_PWD	/usr/include/pwd.h	/^#define	_PATH_PWD	/;"	d
_PATH_PWD_MKDB	/usr/include/pwd.h	/^#define	_PATH_PWD_MKDB	/;"	d
_PATH_RESCONF	/usr/include/resolv.h	/^#define _PATH_RESCONF /;"	d
_PATH_RSH	/usr/include/paths.h	/^#define	_PATH_RSH	/;"	d
_PATH_SENDMAIL	/usr/include/paths.h	/^#define	_PATH_SENDMAIL	/;"	d
_PATH_SERVICES	/usr/include/netdb.h	/^#define	_PATH_SERVICES	/;"	d
_PATH_SHELLS	/usr/include/paths.h	/^#define	_PATH_SHELLS	/;"	d
_PATH_SMP_DB	/usr/include/pwd.h	/^#define	_PATH_SMP_DB	/;"	d
_PATH_STDPATH	/usr/include/paths.h	/^#define	_PATH_STDPATH	/;"	d
_PATH_TMP	/usr/include/paths.h	/^#define	_PATH_TMP	/;"	d
_PATH_TTY	/usr/include/paths.h	/^#define	_PATH_TTY	/;"	d
_PATH_TTYS	/usr/include/ttyent.h	/^#define	_PATH_TTYS	/;"	d
_PATH_UNIX	/usr/include/paths.h	/^#define	_PATH_UNIX	/;"	d
_PATH_UTMP	/usr/include/utmp.h	/^#define	_PATH_UTMP	/;"	d
_PATH_UTMPX	/usr/include/utmpx.h	/^#define	_PATH_UTMPX	/;"	d
_PATH_UUCPLOCK	/usr/include/paths.h	/^#define	_PATH_UUCPLOCK	/;"	d
_PATH_VARDB	/usr/include/paths.h	/^#define	_PATH_VARDB	/;"	d
_PATH_VARRUN	/usr/include/paths.h	/^#define	_PATH_VARRUN	/;"	d
_PATH_VARTMP	/usr/include/paths.h	/^#define	_PATH_VARTMP	/;"	d
_PATH_VI	/usr/include/paths.h	/^#define	_PATH_VI	/;"	d
_PATH_WTMP	/usr/include/utmp.h	/^#define	_PATH_WTMP	/;"	d
_PID_T	/usr/include/spawn.h	/^#define _PID_T$/;"	d
_PID_T	/usr/include/termios.h	/^#define _PID_T$/;"	d
_PID_T	/usr/include/unistd.h	/^#define	_PID_T$/;"	d
_PID_T	/usr/include/utmpx.h	/^#define _PID_T$/;"	d
_POSIX2_BC_BASE_MAX	/usr/include/limits.h	/^#define	_POSIX2_BC_BASE_MAX	/;"	d
_POSIX2_BC_DIM_MAX	/usr/include/limits.h	/^#define	_POSIX2_BC_DIM_MAX	/;"	d
_POSIX2_BC_SCALE_MAX	/usr/include/limits.h	/^#define	_POSIX2_BC_SCALE_MAX	/;"	d
_POSIX2_BC_STRING_MAX	/usr/include/limits.h	/^#define	_POSIX2_BC_STRING_MAX	/;"	d
_POSIX2_CHARCLASS_NAME_MAX	/usr/include/limits.h	/^#define _POSIX2_CHARCLASS_NAME_MAX	/;"	d
_POSIX2_CHAR_TERM	/usr/include/unistd.h	/^#define	_POSIX2_CHAR_TERM	/;"	d
_POSIX2_COLL_WEIGHTS_MAX	/usr/include/limits.h	/^#define	_POSIX2_COLL_WEIGHTS_MAX	/;"	d
_POSIX2_C_BIND	/usr/include/unistd.h	/^#define	_POSIX2_C_BIND	/;"	d
_POSIX2_C_DEV	/usr/include/unistd.h	/^#define	_POSIX2_C_DEV	/;"	d
_POSIX2_EQUIV_CLASS_MAX	/usr/include/limits.h	/^#define	_POSIX2_EQUIV_CLASS_MAX	/;"	d
_POSIX2_EXPR_NEST_MAX	/usr/include/limits.h	/^#define	_POSIX2_EXPR_NEST_MAX	/;"	d
_POSIX2_FORT_DEV	/usr/include/unistd.h	/^#define	_POSIX2_FORT_DEV	/;"	d
_POSIX2_FORT_RUN	/usr/include/unistd.h	/^#define	_POSIX2_FORT_RUN	/;"	d
_POSIX2_LINE_MAX	/usr/include/limits.h	/^#define	_POSIX2_LINE_MAX	/;"	d
_POSIX2_LOCALEDEF	/usr/include/unistd.h	/^#define	_POSIX2_LOCALEDEF	/;"	d
_POSIX2_PBS	/usr/include/unistd.h	/^#define	_POSIX2_PBS	/;"	d
_POSIX2_PBS_ACCOUNTING	/usr/include/unistd.h	/^#define	_POSIX2_PBS_ACCOUNTING	/;"	d
_POSIX2_PBS_CHECKPOINT	/usr/include/unistd.h	/^#define	_POSIX2_PBS_CHECKPOINT	/;"	d
_POSIX2_PBS_LOCATE	/usr/include/unistd.h	/^#define	_POSIX2_PBS_LOCATE	/;"	d
_POSIX2_PBS_MESSAGE	/usr/include/unistd.h	/^#define	_POSIX2_PBS_MESSAGE	/;"	d
_POSIX2_PBS_TRACK	/usr/include/unistd.h	/^#define	_POSIX2_PBS_TRACK	/;"	d
_POSIX2_RE_DUP_MAX	/usr/include/limits.h	/^#define	_POSIX2_RE_DUP_MAX	/;"	d
_POSIX2_SW_DEV	/usr/include/unistd.h	/^#define	_POSIX2_SW_DEV	/;"	d
_POSIX2_UPE	/usr/include/unistd.h	/^#define	_POSIX2_UPE	/;"	d
_POSIX_ADVISORY_INFO	/usr/include/unistd.h	/^#define	_POSIX_ADVISORY_INFO	/;"	d
_POSIX_AIO_LISTIO_MAX	/usr/include/limits.h	/^#define _POSIX_AIO_LISTIO_MAX /;"	d
_POSIX_AIO_MAX	/usr/include/limits.h	/^#define _POSIX_AIO_MAX /;"	d
_POSIX_ARG_MAX	/usr/include/limits.h	/^#define	_POSIX_ARG_MAX	/;"	d
_POSIX_ASYNCHRONOUS_IO	/usr/include/unistd.h	/^#define	_POSIX_ASYNCHRONOUS_IO	/;"	d
_POSIX_BARRIERS	/usr/include/unistd.h	/^#define	_POSIX_BARRIERS	/;"	d
_POSIX_CHILD_MAX	/usr/include/limits.h	/^#define	_POSIX_CHILD_MAX	/;"	d
_POSIX_CHOWN_RESTRICTED	/usr/include/unistd.h	/^#define	_POSIX_CHOWN_RESTRICTED	/;"	d
_POSIX_CLOCK_SELECTION	/usr/include/unistd.h	/^#define	_POSIX_CLOCK_SELECTION	/;"	d
_POSIX_CPUTIME	/usr/include/unistd.h	/^#define	_POSIX_CPUTIME	/;"	d
_POSIX_DELAYTIMER_MAX	/usr/include/limits.h	/^#define _POSIX_DELAYTIMER_MAX /;"	d
_POSIX_FSYNC	/usr/include/unistd.h	/^#define	_POSIX_FSYNC	/;"	d
_POSIX_HOST_NAME_MAX	/usr/include/limits.h	/^#define _POSIX_HOST_NAME_MAX /;"	d
_POSIX_IPV6	/usr/include/unistd.h	/^#define	_POSIX_IPV6	/;"	d
_POSIX_JOB_CONTROL	/usr/include/unistd.h	/^#define	_POSIX_JOB_CONTROL	/;"	d
_POSIX_LINK_MAX	/usr/include/limits.h	/^#define	_POSIX_LINK_MAX	/;"	d
_POSIX_LOGIN_NAME_MAX	/usr/include/limits.h	/^#define _POSIX_LOGIN_NAME_MAX /;"	d
_POSIX_MAPPED_FILES	/usr/include/unistd.h	/^#define	_POSIX_MAPPED_FILES	/;"	d
_POSIX_MAX_CANON	/usr/include/limits.h	/^#define	_POSIX_MAX_CANON	/;"	d
_POSIX_MAX_INPUT	/usr/include/limits.h	/^#define	_POSIX_MAX_INPUT	/;"	d
_POSIX_MEMLOCK	/usr/include/unistd.h	/^#define	_POSIX_MEMLOCK	/;"	d
_POSIX_MEMLOCK_RANGE	/usr/include/unistd.h	/^#define	_POSIX_MEMLOCK_RANGE	/;"	d
_POSIX_MEMORY_PROTECTION	/usr/include/unistd.h	/^#define	_POSIX_MEMORY_PROTECTION	/;"	d
_POSIX_MESSAGE_PASSING	/usr/include/unistd.h	/^#define	_POSIX_MESSAGE_PASSING	/;"	d
_POSIX_MONOTONIC_CLOCK	/usr/include/unistd.h	/^#define	_POSIX_MONOTONIC_CLOCK	/;"	d
_POSIX_MQ_OPEN_MAX	/usr/include/limits.h	/^#define _POSIX_MQ_OPEN_MAX /;"	d
_POSIX_MQ_PRIO_MAX	/usr/include/limits.h	/^#define _POSIX_MQ_PRIO_MAX	/;"	d
_POSIX_NAME_MAX	/usr/include/limits.h	/^#define	_POSIX_NAME_MAX	/;"	d
_POSIX_NGROUPS_MAX	/usr/include/limits.h	/^#define	_POSIX_NGROUPS_MAX	/;"	d
_POSIX_NO_TRUNC	/usr/include/unistd.h	/^#define	_POSIX_NO_TRUNC	/;"	d
_POSIX_OPEN_MAX	/usr/include/limits.h	/^#define	_POSIX_OPEN_MAX	/;"	d
_POSIX_PATH_MAX	/usr/include/limits.h	/^#define	_POSIX_PATH_MAX	/;"	d
_POSIX_PIPE_BUF	/usr/include/limits.h	/^#define	_POSIX_PIPE_BUF	/;"	d
_POSIX_PRIORITIZED_IO	/usr/include/unistd.h	/^#define	_POSIX_PRIORITIZED_IO	/;"	d
_POSIX_PRIORITY_SCHEDULING	/usr/include/unistd.h	/^#define	_POSIX_PRIORITY_SCHEDULING	/;"	d
_POSIX_RAW_SOCKETS	/usr/include/unistd.h	/^#define	_POSIX_RAW_SOCKETS	/;"	d
_POSIX_READER_WRITER_LOCKS	/usr/include/unistd.h	/^#define	_POSIX_READER_WRITER_LOCKS	/;"	d
_POSIX_REALTIME_SIGNALS	/usr/include/unistd.h	/^#define	_POSIX_REALTIME_SIGNALS	/;"	d
_POSIX_REGEXP	/usr/include/unistd.h	/^#define	_POSIX_REGEXP	/;"	d
_POSIX_RE_DUP_MAX	/usr/include/limits.h	/^#define _POSIX_RE_DUP_MAX /;"	d
_POSIX_RTSIG_MAX	/usr/include/limits.h	/^#define _POSIX_RTSIG_MAX /;"	d
_POSIX_SAVED_IDS	/usr/include/unistd.h	/^#define	_POSIX_SAVED_IDS	/;"	d
_POSIX_SEMAPHORES	/usr/include/unistd.h	/^#define	_POSIX_SEMAPHORES	/;"	d
_POSIX_SEM_NSEMS_MAX	/usr/include/limits.h	/^#define _POSIX_SEM_NSEMS_MAX /;"	d
_POSIX_SEM_VALUE_MAX	/usr/include/limits.h	/^#define _POSIX_SEM_VALUE_MAX /;"	d
_POSIX_SHARED_MEMORY_OBJECTS	/usr/include/unistd.h	/^#define	_POSIX_SHARED_MEMORY_OBJECTS	/;"	d
_POSIX_SHELL	/usr/include/unistd.h	/^#define	_POSIX_SHELL	/;"	d
_POSIX_SIGQUEUE_MAX	/usr/include/limits.h	/^#define _POSIX_SIGQUEUE_MAX /;"	d
_POSIX_SPAWN	/usr/include/unistd.h	/^#define	_POSIX_SPAWN	/;"	d
_POSIX_SPIN_LOCKS	/usr/include/unistd.h	/^#define	_POSIX_SPIN_LOCKS	/;"	d
_POSIX_SPORADIC_SERVER	/usr/include/unistd.h	/^#define	_POSIX_SPORADIC_SERVER	/;"	d
_POSIX_SSIZE_MAX	/usr/include/limits.h	/^#define	_POSIX_SSIZE_MAX	/;"	d
_POSIX_SS_REPL_MAX	/usr/include/limits.h	/^#define _POSIX_SS_REPL_MAX /;"	d
_POSIX_STREAM_MAX	/usr/include/limits.h	/^#define	_POSIX_STREAM_MAX	/;"	d
_POSIX_SYMLINK_MAX	/usr/include/limits.h	/^#define _POSIX_SYMLINK_MAX /;"	d
_POSIX_SYMLOOP_MAX	/usr/include/limits.h	/^#define _POSIX_SYMLOOP_MAX /;"	d
_POSIX_SYNCHRONIZED_IO	/usr/include/unistd.h	/^#define	_POSIX_SYNCHRONIZED_IO	/;"	d
_POSIX_THREADS	/usr/include/unistd.h	/^#define	_POSIX_THREADS	/;"	d
_POSIX_THREAD_ATTR_STACKADDR	/usr/include/unistd.h	/^#define	_POSIX_THREAD_ATTR_STACKADDR	/;"	d
_POSIX_THREAD_ATTR_STACKSIZE	/usr/include/unistd.h	/^#define	_POSIX_THREAD_ATTR_STACKSIZE	/;"	d
_POSIX_THREAD_CPUTIME	/usr/include/unistd.h	/^#define	_POSIX_THREAD_CPUTIME	/;"	d
_POSIX_THREAD_DESTRUCTOR_ITERATIONS	/usr/include/limits.h	/^#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS /;"	d
_POSIX_THREAD_KEYS_MAX	/usr/include/limits.h	/^#define _POSIX_THREAD_KEYS_MAX /;"	d
_POSIX_THREAD_PRIORITY_SCHEDULING	/usr/include/unistd.h	/^#define	_POSIX_THREAD_PRIORITY_SCHEDULING	/;"	d
_POSIX_THREAD_PRIO_INHERIT	/usr/include/unistd.h	/^#define	_POSIX_THREAD_PRIO_INHERIT	/;"	d
_POSIX_THREAD_PRIO_PROTECT	/usr/include/unistd.h	/^#define	_POSIX_THREAD_PRIO_PROTECT	/;"	d
_POSIX_THREAD_PROCESS_SHARED	/usr/include/unistd.h	/^#define	_POSIX_THREAD_PROCESS_SHARED	/;"	d
_POSIX_THREAD_SAFE_FUNCTIONS	/usr/include/unistd.h	/^#define	_POSIX_THREAD_SAFE_FUNCTIONS	/;"	d
_POSIX_THREAD_SPORADIC_SERVER	/usr/include/unistd.h	/^#define	_POSIX_THREAD_SPORADIC_SERVER	/;"	d
_POSIX_THREAD_THREADS_MAX	/usr/include/limits.h	/^#define _POSIX_THREAD_THREADS_MAX /;"	d
_POSIX_TIMEOUTS	/usr/include/unistd.h	/^#define	_POSIX_TIMEOUTS	/;"	d
_POSIX_TIMERS	/usr/include/unistd.h	/^#define	_POSIX_TIMERS	/;"	d
_POSIX_TIMER_MAX	/usr/include/limits.h	/^#define _POSIX_TIMER_MAX /;"	d
_POSIX_TRACE	/usr/include/unistd.h	/^#define	_POSIX_TRACE	/;"	d
_POSIX_TRACE_EVENT_FILTER	/usr/include/unistd.h	/^#define	_POSIX_TRACE_EVENT_FILTER	/;"	d
_POSIX_TRACE_EVENT_NAME_MAX	/usr/include/limits.h	/^#define _POSIX_TRACE_EVENT_NAME_MAX /;"	d
_POSIX_TRACE_INHERIT	/usr/include/unistd.h	/^#define	_POSIX_TRACE_INHERIT	/;"	d
_POSIX_TRACE_LOG	/usr/include/unistd.h	/^#define	_POSIX_TRACE_LOG	/;"	d
_POSIX_TRACE_NAME_MAX	/usr/include/limits.h	/^#define _POSIX_TRACE_NAME_MAX /;"	d
_POSIX_TRACE_SYS_MAX	/usr/include/limits.h	/^#define _POSIX_TRACE_SYS_MAX /;"	d
_POSIX_TRACE_USER_EVENT_MAX	/usr/include/limits.h	/^#define _POSIX_TRACE_USER_EVENT_MAX /;"	d
_POSIX_TTY_NAME_MAX	/usr/include/limits.h	/^#define _POSIX_TTY_NAME_MAX /;"	d
_POSIX_TYPED_MEMORY_OBJECTS	/usr/include/unistd.h	/^#define	_POSIX_TYPED_MEMORY_OBJECTS	/;"	d
_POSIX_TZNAME_MAX	/usr/include/limits.h	/^#define	_POSIX_TZNAME_MAX	/;"	d
_POSIX_VDISABLE	/usr/include/unistd.h	/^#define	_POSIX_VDISABLE	/;"	d
_PTHREAD_ATTR_T	/usr/include/pthread.h	/^#define _PTHREAD_ATTR_T$/;"	d
_PTHREAD_CONDATTR_T	/usr/include/pthread.h	/^#define _PTHREAD_CONDATTR_T$/;"	d
_PTHREAD_COND_SIG_init	/usr/include/pthread_impl.h	/^#define _PTHREAD_COND_SIG_init	/;"	d
_PTHREAD_COND_T	/usr/include/pthread.h	/^#define _PTHREAD_COND_T$/;"	d
_PTHREAD_H	/usr/include/pthread.h	/^#define _PTHREAD_H$/;"	d
_PTHREAD_IMPL_H_	/usr/include/pthread_impl.h	/^#define _PTHREAD_IMPL_H_$/;"	d
_PTHREAD_KEY_T	/usr/include/pthread.h	/^#define _PTHREAD_KEY_T$/;"	d
_PTHREAD_MUTEXATTR_T	/usr/include/pthread.h	/^#define _PTHREAD_MUTEXATTR_T$/;"	d
_PTHREAD_MUTEX_SIG_init	/usr/include/pthread_impl.h	/^#define _PTHREAD_MUTEX_SIG_init	/;"	d
_PTHREAD_MUTEX_T	/usr/include/pthread.h	/^#define _PTHREAD_MUTEX_T$/;"	d
_PTHREAD_ONCE_SIG_init	/usr/include/pthread_impl.h	/^#define _PTHREAD_ONCE_SIG_init	/;"	d
_PTHREAD_ONCE_T	/usr/include/pthread.h	/^#define _PTHREAD_ONCE_T$/;"	d
_PTHREAD_RWLOCKATTR_T	/usr/include/pthread.h	/^#define _PTHREAD_RWLOCKATTR_T$/;"	d
_PTHREAD_RWLOCK_SIG_init	/usr/include/pthread_impl.h	/^#define _PTHREAD_RWLOCK_SIG_init /;"	d
_PTHREAD_RWLOCK_T	/usr/include/pthread.h	/^#define _PTHREAD_RWLOCK_T$/;"	d
_PTHREAD_T	/usr/include/pthread.h	/^#define _PTHREAD_T$/;"	d
_PTHREAD_T	/usr/include/signal.h	/^#define _PTHREAD_T$/;"	d
_PTRDIFF_T	/usr/include/stddef.h	/^#define _PTRDIFF_T$/;"	d
_PWD_H_	/usr/include/pwd.h	/^#define	_PWD_H_$/;"	d
_PW_KEYBYNAME	/usr/include/pwd.h	/^#define	_PW_KEYBYNAME	/;"	d
_PW_KEYBYNUM	/usr/include/pwd.h	/^#define	_PW_KEYBYNUM	/;"	d
_PW_KEYBYUID	/usr/include/pwd.h	/^#define	_PW_KEYBYUID	/;"	d
_Q	/usr/include/ctype.h	/^#define	_Q	/;"	d
_R	/usr/include/ctype.h	/^#define	_R	/;"	d
_RANLIB_H_	/usr/include/ranlib.h	/^#define _RANLIB_H_$/;"	d
_READPASSPHRASE_H_	/usr/include/readpassphrase.h	/^#define _READPASSPHRASE_H_$/;"	d
_REGEX_H_	/usr/include/regex.h	/^#define	_REGEX_H_$/;"	d
_RESOLV_9_H_	/usr/include/resolv.h	/^#define	_RESOLV_9_H_$/;"	d
_RUNETYPE_H_	/usr/include/runetype.h	/^#define	_RUNETYPE_H_$/;"	d
_RUNE_H_	/usr/include/rune.h	/^#define	_RUNE_H_$/;"	d
_RUNE_MAGIC_A	/usr/include/runetype.h	/^#define	_RUNE_MAGIC_A	/;"	d
_RUNE_T	/usr/include/runetype.h	/^#define _RUNE_T$/;"	d
_RUNE_T	/usr/include/stdlib.h	/^#define _RUNE_T$/;"	d
_RUNE_T	/usr/include/wchar.h	/^#define _RUNE_T$/;"	d
_RuneCharClass	/usr/include/runetype.h	/^} _RuneCharClass;$/;"	t	typeref:struct:__anon103
_RuneEntry	/usr/include/runetype.h	/^} _RuneEntry;$/;"	t	typeref:struct:__anon101
_RuneLocale	/usr/include/runetype.h	/^} _RuneLocale;$/;"	t	typeref:struct:__anon104
_RuneRange	/usr/include/runetype.h	/^} _RuneRange;$/;"	t	typeref:struct:__anon102
_S	/usr/include/ctype.h	/^#define	_S	/;"	d
_SANDBOX_H_	/usr/include/sandbox.h	/^#define _SANDBOX_H_$/;"	d
_SCHED_H_	/usr/include/sched.h	/^#define _SCHED_H_$/;"	d
_SCROLLWIN	/usr/include/curses.h	/^#define _SCROLLWIN /;"	d
_SCROLLWIN	/usr/include/ncurses.h	/^#define _SCROLLWIN /;"	d
_SC_2_CHAR_TERM	/usr/include/unistd.h	/^#define	_SC_2_CHAR_TERM	/;"	d
_SC_2_C_BIND	/usr/include/unistd.h	/^#define	_SC_2_C_BIND	/;"	d
_SC_2_C_DEV	/usr/include/unistd.h	/^#define	_SC_2_C_DEV	/;"	d
_SC_2_FORT_DEV	/usr/include/unistd.h	/^#define	_SC_2_FORT_DEV	/;"	d
_SC_2_FORT_RUN	/usr/include/unistd.h	/^#define	_SC_2_FORT_RUN	/;"	d
_SC_2_LOCALEDEF	/usr/include/unistd.h	/^#define	_SC_2_LOCALEDEF	/;"	d
_SC_2_PBS	/usr/include/unistd.h	/^#define	_SC_2_PBS	/;"	d
_SC_2_PBS_ACCOUNTING	/usr/include/unistd.h	/^#define	_SC_2_PBS_ACCOUNTING	/;"	d
_SC_2_PBS_CHECKPOINT	/usr/include/unistd.h	/^#define	_SC_2_PBS_CHECKPOINT	/;"	d
_SC_2_PBS_LOCATE	/usr/include/unistd.h	/^#define	_SC_2_PBS_LOCATE	/;"	d
_SC_2_PBS_MESSAGE	/usr/include/unistd.h	/^#define	_SC_2_PBS_MESSAGE	/;"	d
_SC_2_PBS_TRACK	/usr/include/unistd.h	/^#define	_SC_2_PBS_TRACK	/;"	d
_SC_2_SW_DEV	/usr/include/unistd.h	/^#define	_SC_2_SW_DEV	/;"	d
_SC_2_UPE	/usr/include/unistd.h	/^#define	_SC_2_UPE	/;"	d
_SC_2_VERSION	/usr/include/unistd.h	/^#define	_SC_2_VERSION	/;"	d
_SC_ADVISORY_INFO	/usr/include/unistd.h	/^#define	_SC_ADVISORY_INFO	/;"	d
_SC_AIO_LISTIO_MAX	/usr/include/unistd.h	/^#define	_SC_AIO_LISTIO_MAX	/;"	d
_SC_AIO_MAX	/usr/include/unistd.h	/^#define	_SC_AIO_MAX	/;"	d
_SC_AIO_PRIO_DELTA_MAX	/usr/include/unistd.h	/^#define	_SC_AIO_PRIO_DELTA_MAX	/;"	d
_SC_ARG_MAX	/usr/include/unistd.h	/^#define	_SC_ARG_MAX	/;"	d
_SC_ASYNCHRONOUS_IO	/usr/include/unistd.h	/^#define	_SC_ASYNCHRONOUS_IO	/;"	d
_SC_ATEXIT_MAX	/usr/include/unistd.h	/^#define	_SC_ATEXIT_MAX	/;"	d
_SC_BARRIERS	/usr/include/unistd.h	/^#define	_SC_BARRIERS	/;"	d
_SC_BC_BASE_MAX	/usr/include/unistd.h	/^#define	_SC_BC_BASE_MAX	/;"	d
_SC_BC_DIM_MAX	/usr/include/unistd.h	/^#define	_SC_BC_DIM_MAX	/;"	d
_SC_BC_SCALE_MAX	/usr/include/unistd.h	/^#define	_SC_BC_SCALE_MAX	/;"	d
_SC_BC_STRING_MAX	/usr/include/unistd.h	/^#define	_SC_BC_STRING_MAX	/;"	d
_SC_CHILD_MAX	/usr/include/unistd.h	/^#define	_SC_CHILD_MAX	/;"	d
_SC_CLK_TCK	/usr/include/unistd.h	/^#define	_SC_CLK_TCK	/;"	d
_SC_CLOCK_SELECTION	/usr/include/unistd.h	/^#define	_SC_CLOCK_SELECTION	/;"	d
_SC_COLL_WEIGHTS_MAX	/usr/include/unistd.h	/^#define	_SC_COLL_WEIGHTS_MAX	/;"	d
_SC_CPUTIME	/usr/include/unistd.h	/^#define	_SC_CPUTIME	/;"	d
_SC_DELAYTIMER_MAX	/usr/include/unistd.h	/^#define	_SC_DELAYTIMER_MAX	/;"	d
_SC_EXPR_NEST_MAX	/usr/include/unistd.h	/^#define	_SC_EXPR_NEST_MAX	/;"	d
_SC_FILE_LOCKING	/usr/include/unistd.h	/^#define	_SC_FILE_LOCKING	/;"	d
_SC_FSYNC	/usr/include/unistd.h	/^#define	_SC_FSYNC	/;"	d
_SC_GETGR_R_SIZE_MAX	/usr/include/unistd.h	/^#define	_SC_GETGR_R_SIZE_MAX	/;"	d
_SC_GETPW_R_SIZE_MAX	/usr/include/unistd.h	/^#define	_SC_GETPW_R_SIZE_MAX	/;"	d
_SC_HOST_NAME_MAX	/usr/include/unistd.h	/^#define	_SC_HOST_NAME_MAX	/;"	d
_SC_IOV_MAX	/usr/include/unistd.h	/^#define	_SC_IOV_MAX	/;"	d
_SC_IPV6	/usr/include/unistd.h	/^#define	_SC_IPV6	/;"	d
_SC_JOB_CONTROL	/usr/include/unistd.h	/^#define	_SC_JOB_CONTROL	/;"	d
_SC_LINE_MAX	/usr/include/unistd.h	/^#define	_SC_LINE_MAX	/;"	d
_SC_LOGIN_NAME_MAX	/usr/include/unistd.h	/^#define	_SC_LOGIN_NAME_MAX	/;"	d
_SC_MAPPED_FILES	/usr/include/unistd.h	/^#define	_SC_MAPPED_FILES	/;"	d
_SC_MEMLOCK	/usr/include/unistd.h	/^#define	_SC_MEMLOCK	/;"	d
_SC_MEMLOCK_RANGE	/usr/include/unistd.h	/^#define	_SC_MEMLOCK_RANGE	/;"	d
_SC_MEMORY_PROTECTION	/usr/include/unistd.h	/^#define	_SC_MEMORY_PROTECTION	/;"	d
_SC_MESSAGE_PASSING	/usr/include/unistd.h	/^#define	_SC_MESSAGE_PASSING	/;"	d
_SC_MONOTONIC_CLOCK	/usr/include/unistd.h	/^#define	_SC_MONOTONIC_CLOCK	/;"	d
_SC_MQ_OPEN_MAX	/usr/include/unistd.h	/^#define	_SC_MQ_OPEN_MAX	/;"	d
_SC_MQ_PRIO_MAX	/usr/include/unistd.h	/^#define	_SC_MQ_PRIO_MAX	/;"	d
_SC_NGROUPS_MAX	/usr/include/unistd.h	/^#define	_SC_NGROUPS_MAX	/;"	d
_SC_NPROCESSORS_CONF	/usr/include/unistd.h	/^#define	_SC_NPROCESSORS_CONF	/;"	d
_SC_NPROCESSORS_ONLN	/usr/include/unistd.h	/^#define	_SC_NPROCESSORS_ONLN	/;"	d
_SC_OPEN_MAX	/usr/include/unistd.h	/^#define	_SC_OPEN_MAX	/;"	d
_SC_PAGESIZE	/usr/include/unistd.h	/^#define	_SC_PAGESIZE	/;"	d
_SC_PAGE_SIZE	/usr/include/unistd.h	/^#define	_SC_PAGE_SIZE	/;"	d
_SC_PASS_MAX	/usr/include/unistd.h	/^#define	_SC_PASS_MAX	/;"	d
_SC_PRIORITIZED_IO	/usr/include/unistd.h	/^#define	_SC_PRIORITIZED_IO	/;"	d
_SC_PRIORITY_SCHEDULING	/usr/include/unistd.h	/^#define	_SC_PRIORITY_SCHEDULING	/;"	d
_SC_RAW_SOCKETS	/usr/include/unistd.h	/^#define	_SC_RAW_SOCKETS	/;"	d
_SC_READER_WRITER_LOCKS	/usr/include/unistd.h	/^#define	_SC_READER_WRITER_LOCKS	/;"	d
_SC_REALTIME_SIGNALS	/usr/include/unistd.h	/^#define	_SC_REALTIME_SIGNALS	/;"	d
_SC_REGEXP	/usr/include/unistd.h	/^#define	_SC_REGEXP	/;"	d
_SC_RE_DUP_MAX	/usr/include/unistd.h	/^#define	_SC_RE_DUP_MAX	/;"	d
_SC_RTSIG_MAX	/usr/include/unistd.h	/^#define	_SC_RTSIG_MAX	/;"	d
_SC_SAVED_IDS	/usr/include/unistd.h	/^#define	_SC_SAVED_IDS	/;"	d
_SC_SEMAPHORES	/usr/include/unistd.h	/^#define	_SC_SEMAPHORES	/;"	d
_SC_SEM_NSEMS_MAX	/usr/include/unistd.h	/^#define	_SC_SEM_NSEMS_MAX	/;"	d
_SC_SEM_VALUE_MAX	/usr/include/unistd.h	/^#define	_SC_SEM_VALUE_MAX	/;"	d
_SC_SHARED_MEMORY_OBJECTS	/usr/include/unistd.h	/^#define	_SC_SHARED_MEMORY_OBJECTS /;"	d
_SC_SHELL	/usr/include/unistd.h	/^#define	_SC_SHELL	/;"	d
_SC_SIGQUEUE_MAX	/usr/include/unistd.h	/^#define	_SC_SIGQUEUE_MAX	/;"	d
_SC_SPAWN	/usr/include/unistd.h	/^#define	_SC_SPAWN	/;"	d
_SC_SPIN_LOCKS	/usr/include/unistd.h	/^#define	_SC_SPIN_LOCKS	/;"	d
_SC_SPORADIC_SERVER	/usr/include/unistd.h	/^#define	_SC_SPORADIC_SERVER	/;"	d
_SC_SS_REPL_MAX	/usr/include/unistd.h	/^#define	_SC_SS_REPL_MAX	/;"	d
_SC_STREAM_MAX	/usr/include/unistd.h	/^#define	_SC_STREAM_MAX	/;"	d
_SC_SYMLOOP_MAX	/usr/include/unistd.h	/^#define	_SC_SYMLOOP_MAX	/;"	d
_SC_SYNCHRONIZED_IO	/usr/include/unistd.h	/^#define	_SC_SYNCHRONIZED_IO	/;"	d
_SC_THREADS	/usr/include/unistd.h	/^#define	_SC_THREADS	/;"	d
_SC_THREAD_ATTR_STACKADDR	/usr/include/unistd.h	/^#define	_SC_THREAD_ATTR_STACKADDR	/;"	d
_SC_THREAD_ATTR_STACKSIZE	/usr/include/unistd.h	/^#define	_SC_THREAD_ATTR_STACKSIZE	/;"	d
_SC_THREAD_CPUTIME	/usr/include/unistd.h	/^#define	_SC_THREAD_CPUTIME	/;"	d
_SC_THREAD_DESTRUCTOR_ITERATIONS	/usr/include/unistd.h	/^#define	_SC_THREAD_DESTRUCTOR_ITERATIONS /;"	d
_SC_THREAD_KEYS_MAX	/usr/include/unistd.h	/^#define	_SC_THREAD_KEYS_MAX	/;"	d
_SC_THREAD_PRIORITY_SCHEDULING	/usr/include/unistd.h	/^#define	_SC_THREAD_PRIORITY_SCHEDULING	/;"	d
_SC_THREAD_PRIO_INHERIT	/usr/include/unistd.h	/^#define	_SC_THREAD_PRIO_INHERIT	/;"	d
_SC_THREAD_PRIO_PROTECT	/usr/include/unistd.h	/^#define	_SC_THREAD_PRIO_PROTECT	/;"	d
_SC_THREAD_PROCESS_SHARED	/usr/include/unistd.h	/^#define	_SC_THREAD_PROCESS_SHARED	/;"	d
_SC_THREAD_SAFE_FUNCTIONS	/usr/include/unistd.h	/^#define	_SC_THREAD_SAFE_FUNCTIONS	/;"	d
_SC_THREAD_SPORADIC_SERVER	/usr/include/unistd.h	/^#define	_SC_THREAD_SPORADIC_SERVER	/;"	d
_SC_THREAD_STACK_MIN	/usr/include/unistd.h	/^#define	_SC_THREAD_STACK_MIN	/;"	d
_SC_THREAD_THREADS_MAX	/usr/include/unistd.h	/^#define	_SC_THREAD_THREADS_MAX	/;"	d
_SC_TIMEOUTS	/usr/include/unistd.h	/^#define	_SC_TIMEOUTS	/;"	d
_SC_TIMERS	/usr/include/unistd.h	/^#define	_SC_TIMERS	/;"	d
_SC_TIMER_MAX	/usr/include/unistd.h	/^#define	_SC_TIMER_MAX	/;"	d
_SC_TRACE	/usr/include/unistd.h	/^#define	_SC_TRACE	/;"	d
_SC_TRACE_EVENT_FILTER	/usr/include/unistd.h	/^#define	_SC_TRACE_EVENT_FILTER	/;"	d
_SC_TRACE_EVENT_NAME_MAX	/usr/include/unistd.h	/^#define	_SC_TRACE_EVENT_NAME_MAX	/;"	d
_SC_TRACE_INHERIT	/usr/include/unistd.h	/^#define	_SC_TRACE_INHERIT	/;"	d
_SC_TRACE_LOG	/usr/include/unistd.h	/^#define	_SC_TRACE_LOG	/;"	d
_SC_TRACE_NAME_MAX	/usr/include/unistd.h	/^#define	_SC_TRACE_NAME_MAX	/;"	d
_SC_TRACE_SYS_MAX	/usr/include/unistd.h	/^#define	_SC_TRACE_SYS_MAX	/;"	d
_SC_TRACE_USER_EVENT_MAX	/usr/include/unistd.h	/^#define	_SC_TRACE_USER_EVENT_MAX	/;"	d
_SC_TTY_NAME_MAX	/usr/include/unistd.h	/^#define	_SC_TTY_NAME_MAX	/;"	d
_SC_TYPED_MEMORY_OBJECTS	/usr/include/unistd.h	/^#define	_SC_TYPED_MEMORY_OBJECTS	/;"	d
_SC_TZNAME_MAX	/usr/include/unistd.h	/^#define	_SC_TZNAME_MAX	/;"	d
_SC_V6_ILP32_OFF32	/usr/include/unistd.h	/^#define	_SC_V6_ILP32_OFF32	/;"	d
_SC_V6_ILP32_OFFBIG	/usr/include/unistd.h	/^#define	_SC_V6_ILP32_OFFBIG	/;"	d
_SC_V6_LP64_OFF64	/usr/include/unistd.h	/^#define	_SC_V6_LP64_OFF64	/;"	d
_SC_V6_LPBIG_OFFBIG	/usr/include/unistd.h	/^#define	_SC_V6_LPBIG_OFFBIG	/;"	d
_SC_VERSION	/usr/include/unistd.h	/^#define	_SC_VERSION	/;"	d
_SC_XBS5_ILP32_OFF32	/usr/include/unistd.h	/^#define	_SC_XBS5_ILP32_OFF32	/;"	d
_SC_XBS5_ILP32_OFFBIG	/usr/include/unistd.h	/^#define	_SC_XBS5_ILP32_OFFBIG	/;"	d
_SC_XBS5_LP64_OFF64	/usr/include/unistd.h	/^#define	_SC_XBS5_LP64_OFF64	/;"	d
_SC_XBS5_LPBIG_OFFBIG	/usr/include/unistd.h	/^#define	_SC_XBS5_LPBIG_OFFBIG	/;"	d
_SC_XOPEN_CRYPT	/usr/include/unistd.h	/^#define	_SC_XOPEN_CRYPT	/;"	d
_SC_XOPEN_ENH_I18N	/usr/include/unistd.h	/^#define	_SC_XOPEN_ENH_I18N	/;"	d
_SC_XOPEN_LEGACY	/usr/include/unistd.h	/^#define	_SC_XOPEN_LEGACY	/;"	d
_SC_XOPEN_REALTIME	/usr/include/unistd.h	/^#define	_SC_XOPEN_REALTIME	/;"	d
_SC_XOPEN_REALTIME_THREADS	/usr/include/unistd.h	/^#define	_SC_XOPEN_REALTIME_THREADS	/;"	d
_SC_XOPEN_SHM	/usr/include/unistd.h	/^#define	_SC_XOPEN_SHM	/;"	d
_SC_XOPEN_STREAMS	/usr/include/unistd.h	/^#define	_SC_XOPEN_STREAMS	/;"	d
_SC_XOPEN_UNIX	/usr/include/unistd.h	/^#define	_SC_XOPEN_UNIX	/;"	d
_SC_XOPEN_VERSION	/usr/include/unistd.h	/^#define	_SC_XOPEN_VERSION	/;"	d
_SC_XOPEN_XCU_VERSION	/usr/include/unistd.h	/^#define	_SC_XOPEN_XCU_VERSION	/;"	d
_SEARCH_H_	/usr/include/search.h	/^#define _SEARCH_H_$/;"	d
_SGTTY_H_	/usr/include/sgtty.h	/^#define _SGTTY_H_$/;"	d
_SIGSET_T	/usr/include/pthread.h	/^#define _SIGSET_T$/;"	d
_SIGSET_T	/usr/include/spawn.h	/^#define _SIGSET_T$/;"	d
_SIZE_T	/usr/include/alloca.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/glob.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/grp.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/iconv.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/monetary.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/ndbm.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/netdb.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/pwd.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/readpassphrase.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/regex.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/runetype.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/search.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/spawn.h	/^#define _SIZE_T$/;"	d
_SIZE_T	/usr/include/stddef.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/stdio.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/stdlib.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/string.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/strings.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/time.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/unistd.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/vis.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/wchar.h	/^#define	_SIZE_T$/;"	d
_SIZE_T	/usr/include/wordexp.h	/^#define	_SIZE_T$/;"	d
_SLAPI_PLUGIN_H	/usr/include/slapi-plugin.h	/^#define _SLAPI_PLUGIN_H$/;"	d
_SMP_DB	/usr/include/pwd.h	/^#define	_SMP_DB	/;"	d
_SOCKLEN_T	/usr/include/netdb.h	/^#define _SOCKLEN_T$/;"	d
_SPAWN_H_	/usr/include/spawn.h	/^#define	_SPAWN_H_$/;"	d
_SQLEXT_H	/usr/include/sqlext.h	/^#define _SQLEXT_H$/;"	d
_SQLITE3EXT_H_	/usr/include/sqlite3ext.h	/^#define _SQLITE3EXT_H_$/;"	d
_SQLITE3_H_	/usr/include/sqlite3.h	/^#define _SQLITE3_H_$/;"	d
_SQLTYPES_H	/usr/include/sqltypes.h	/^#define _SQLTYPES_H$/;"	d
_SQLUCODE_H	/usr/include/sqlucode.h	/^#define _SQLUCODE_H$/;"	d
_SQL_H	/usr/include/sql.h	/^#define _SQL_H$/;"	d
_SSIZE_T	/usr/include/monetary.h	/^#define _SSIZE_T$/;"	d
_SSIZE_T	/usr/include/string.h	/^#define _SSIZE_T$/;"	d
_SSIZE_T	/usr/include/unistd.h	/^#define	_SSIZE_T$/;"	d
_STANDARDS_H	/usr/include/standards.h	/^#define _STANDARDS_H$/;"	d
_STDBOOL_H_	/usr/include/stdbool.h	/^#define	_STDBOOL_H_	/;"	d
_STDINT_H_	/usr/include/stdint.h	/^#define _STDINT_H_$/;"	d
_STDIO_H_	/usr/include/stdio.h	/^#define	_STDIO_H_$/;"	d
_STDLIB_H_	/usr/include/stdlib.h	/^#define _STDLIB_H_$/;"	d
_STRHASH_H_INCLUDE	/usr/include/strhash.h	/^#define _STRHASH_H_INCLUDE$/;"	d
_STRINGLIST_H	/usr/include/stringlist.h	/^#define _STRINGLIST_H /;"	d
_STRING_H_	/usr/include/string.h	/^#define	_STRING_H_$/;"	d
_STRUCT_H_	/usr/include/struct.h	/^#define	_STRUCT_H_$/;"	d
_SUBWIN	/usr/include/curses.h	/^#define _SUBWIN /;"	d
_SUBWIN	/usr/include/ncurses.h	/^#define _SUBWIN /;"	d
_SW0	/usr/include/ctype.h	/^#define	_SW0	/;"	d
_SW1	/usr/include/ctype.h	/^#define	_SW1	/;"	d
_SW2	/usr/include/ctype.h	/^#define	_SW2	/;"	d
_SW3	/usr/include/ctype.h	/^#define	_SW3	/;"	d
_SYSEXITS_H_	/usr/include/sysexits.h	/^#define	_SYSEXITS_H_$/;"	d
_T	/usr/include/ctype.h	/^#define	_T	/;"	d
_TARGETCONFIG_H_	/usr/include/TargetConfig.h	/^#define _TARGETCONFIG_H_$/;"	d
_TAR_H	/usr/include/tar.h	/^#define _TAR_H$/;"	d
_TCHAR_DEFINED	/usr/include/tclPlatDecls.h	/^#	define _TCHAR_DEFINED$/;"	d
_TCL	/usr/include/tcl.h	/^#define _TCL$/;"	d
_TCLDECLS	/usr/include/tclDecls.h	/^#define _TCLDECLS$/;"	d
_TCLPLATDECLS	/usr/include/tclPlatDecls.h	/^#define _TCLPLATDECLS$/;"	d
_TCLTOMMATHDECLS	/usr/include/tclTomMathDecls.h	/^#define _TCLTOMMATHDECLS$/;"	d
_TIMECONV_H_	/usr/include/timeconv.h	/^#define	_TIMECONV_H_$/;"	d
_TIME_H_	/usr/include/time.h	/^#define	_TIME_H_$/;"	d
_TIME_T	/usr/include/time.h	/^#define	_TIME_T$/;"	d
_TIME_T	/usr/include/utime.h	/^#define _TIME_T$/;"	d
_TIME_T	/usr/include/utmp.h	/^#define _TIME_T$/;"	d
_TK	/usr/include/tk.h	/^#define _TK$/;"	d
_TKDECLS	/usr/include/tkDecls.h	/^#define _TKDECLS$/;"	d
_TKINTXLIBDECLS	/usr/include/tkIntXlibDecls.h	/^#define _TKINTXLIBDECLS$/;"	d
_TKMAC	/usr/include/tkMacOSX.h	/^#define _TKMAC$/;"	d
_TKPLATDECLS	/usr/include/tkPlatDecls.h	/^#define _TKPLATDECLS$/;"	d
_TTYENT_H_	/usr/include/ttyent.h	/^#define	_TTYENT_H_$/;"	d
_TTYS_OFF	/usr/include/ttyent.h	/^#define	_TTYS_OFF	/;"	d
_TTYS_ON	/usr/include/ttyent.h	/^#define	_TTYS_ON	/;"	d
_TTYS_ONERROR	/usr/include/ttyent.h	/^#define _TTYS_ONERROR /;"	d
_TTYS_ONOPTION	/usr/include/ttyent.h	/^#define _TTYS_ONOPTION /;"	d
_TTYS_SECURE	/usr/include/ttyent.h	/^#define	_TTYS_SECURE	/;"	d
_TTYS_SLOT	/usr/include/ttyent.h	/^#define _TTYS_SLOT /;"	d
_TTYS_WINDOW	/usr/include/ttyent.h	/^#define	_TTYS_WINDOW	/;"	d
_TXTRecordRef_t	/usr/include/dns_sd.h	/^typedef union _TXTRecordRef_t { char PrivateData[16]; char *ForceNaturalAlignment; } TXTRecordRef;$/;"	u
_TXTRecordRef_t::ForceNaturalAlignment	/usr/include/dns_sd.h	/^typedef union _TXTRecordRef_t { char PrivateData[16]; char *ForceNaturalAlignment; } TXTRecordRef;$/;"	m	union:_TXTRecordRef_t	access:public
_TXTRecordRef_t::PrivateData	/usr/include/dns_sd.h	/^typedef union _TXTRecordRef_t { char PrivateData[16]; char *ForceNaturalAlignment; } TXTRecordRef;$/;"	m	union:_TXTRecordRef_t	access:public
_U	/usr/include/ctype.h	/^#define	_U	/;"	d
_UCONTEXT_H_	/usr/include/ucontext.h	/^#define _UCONTEXT_H_$/;"	d
_UID_T	/usr/include/pwd.h	/^#define _UID_T$/;"	d
_UID_T	/usr/include/unistd.h	/^#define	_UID_T$/;"	d
_UID_T	/usr/include/utmpx.h	/^#define _UID_T$/;"	d
_UINT16_T	/usr/include/stdint.h	/^#define _UINT16_T$/;"	d
_UINT32_T	/usr/include/stdint.h	/^#define _UINT32_T$/;"	d
_UINT64_T	/usr/include/stdint.h	/^#define _UINT64_T$/;"	d
_UINT8_T	/usr/include/stdint.h	/^#define _UINT8_T$/;"	d
_UINTMAX_T	/usr/include/stdint.h	/^#define _UINTMAX_T$/;"	d
_UINTPTR_T	/usr/include/stdint.h	/^#define _UINTPTR_T$/;"	d
_ULIMIT_H_	/usr/include/ulimit.h	/^#define	_ULIMIT_H_$/;"	d
_UNISTD_H_	/usr/include/unistd.h	/^#define	_UNISTD_H_$/;"	d
_UNUSED	/usr/include/dns_sd.h	/^#define _UNUSED$/;"	d
_USECONDS_T	/usr/include/unistd.h	/^#define	_USECONDS_T$/;"	d
_USER_SIGNAL_H	/usr/include/signal.h	/^#define _USER_SIGNAL_H$/;"	d
_USE_CTYPE_INLINE_	/usr/include/ctype.h	/^#define _USE_CTYPE_INLINE_$/;"	d
_USE_CTYPE_INLINE_	/usr/include/wctype.h	/^#define _USE_CTYPE_INLINE_$/;"	d
_USE_EXTENDED_LOCALES_	/usr/include/xlocale.h	/^#define _USE_EXTENDED_LOCALES_$/;"	d
_UTIL_H_	/usr/include/util.h	/^#define _UTIL_H_$/;"	d
_UTIME_H_	/usr/include/utime.h	/^#define	_UTIME_H_$/;"	d
_UTMPX_H_	/usr/include/utmpx.h	/^#define	_UTMPX_H_$/;"	d
_UTMP_H_	/usr/include/utmp.h	/^#define	_UTMP_H_$/;"	d
_UTX_HOSTSIZE	/usr/include/utmpx.h	/^#define _UTX_HOSTSIZE	/;"	d
_UTX_IDSIZE	/usr/include/utmpx.h	/^#define	_UTX_IDSIZE	/;"	d
_UTX_LINESIZE	/usr/include/utmpx.h	/^#define _UTX_LINESIZE	/;"	d
_UTX_USERSIZE	/usr/include/utmpx.h	/^#define _UTX_USERSIZE	/;"	d
_UUID_T	/usr/include/unistd.h	/^#define	_UUID_T$/;"	d
_V6_ILP32_OFF32	/usr/include/unistd.h	/^#define	_V6_ILP32_OFF32	/;"	d
_V6_ILP32_OFFBIG	/usr/include/unistd.h	/^#define	_V6_ILP32_OFFBIG	/;"	d
_V6_LP64_OFF64	/usr/include/unistd.h	/^#define	_V6_LP64_OFF64	/;"	d
_V6_LPBIG_OFFBIG	/usr/include/unistd.h	/^#define	_V6_LPBIG_OFFBIG	/;"	d
_VA_LIST	/usr/include/stdio.h	/^#define _VA_LIST$/;"	d
_VIS_H_	/usr/include/vis.h	/^#define	_VIS_H_$/;"	d
_VPROC_H_	/usr/include/vproc.h	/^#define _VPROC_H_$/;"	d
_WCHAR_H_	/usr/include/wchar.h	/^#define _WCHAR_H_$/;"	d
_WCHAR_T	/usr/include/iconv.h	/^#define _WCHAR_T$/;"	d
_WCHAR_T	/usr/include/inttypes.h	/^#    define	_WCHAR_T$/;"	d
_WCHAR_T	/usr/include/runetype.h	/^#define	_WCHAR_T$/;"	d
_WCHAR_T	/usr/include/stddef.h	/^#define	_WCHAR_T$/;"	d
_WCHAR_T	/usr/include/stdlib.h	/^#define	_WCHAR_T$/;"	d
_WCHAR_T	/usr/include/wchar.h	/^#define	_WCHAR_T$/;"	d
_WCTRANS_T	/usr/include/wctype.h	/^#define	_WCTRANS_T$/;"	d
_WCTYPE_H_	/usr/include/wctype.h	/^#define	_WCTYPE_H_$/;"	d
_WCTYPE_T	/usr/include/_wctype.h	/^#define _WCTYPE_T$/;"	d
_WIN32	/usr/include/tcl.h	/^#	    define _WIN32$/;"	d
_WINT_T	/usr/include/_wctype.h	/^#define _WINT_T$/;"	d
_WINT_T	/usr/include/runetype.h	/^#define _WINT_T$/;"	d
_WINT_T	/usr/include/stddef.h	/^#define	_WINT_T$/;"	d
_WORDEXP_H	/usr/include/wordexp.h	/^#define _WORDEXP_H$/;"	d
_WRAPPED	/usr/include/curses.h	/^#define _WRAPPED /;"	d
_WRAPPED	/usr/include/ncurses.h	/^#define _WRAPPED /;"	d
_X	/usr/include/ctype.h	/^#define	_X	/;"	d
_XBS5_ILP32_OFF32	/usr/include/unistd.h	/^#define	_XBS5_ILP32_OFF32	/;"	d
_XBS5_ILP32_OFFBIG	/usr/include/unistd.h	/^#define	_XBS5_ILP32_OFFBIG	/;"	d
_XBS5_LP64_OFF64	/usr/include/unistd.h	/^#define	_XBS5_LP64_OFF64	/;"	d
_XBS5_LPBIG_OFFBIG	/usr/include/unistd.h	/^#define	_XBS5_LPBIG_OFFBIG	/;"	d
_XInitImageFuncPtrs	/usr/include/tkIntXlibDecls.h	/^    int (*_XInitImageFuncPtrs) (XImage * image); \/* 75 *\/$/;"	m	struct:TkIntXlibStubs	access:public
_XInitImageFuncPtrs	/usr/include/tkIntXlibDecls.h	/^    int (*_XInitImageFuncPtrs) (XImage * image); \/* 99 *\/$/;"	m	struct:TkIntXlibStubs	access:public
_XInitImageFuncPtrs	/usr/include/tkIntXlibDecls.h	/^#define _XInitImageFuncPtrs /;"	d
_XInitImageFuncPtrs	/usr/include/tkIntXlibDecls.h	/^EXTERN int		_XInitImageFuncPtrs (XImage * image);$/;"	p	signature:(XImage * image)
_XInitImageFuncPtrs_TCL_DECLARED	/usr/include/tkIntXlibDecls.h	/^#define _XInitImageFuncPtrs_TCL_DECLARED$/;"	d
_XLOCALE_H_	/usr/include/xlocale.h	/^#define _XLOCALE_H_$/;"	d
_XOPEN_CRYPT	/usr/include/unistd.h	/^#define	_XOPEN_CRYPT	/;"	d
_XOPEN_ENH_I18N	/usr/include/unistd.h	/^#define	_XOPEN_ENH_I18N	/;"	d
_XOPEN_IOV_MAX	/usr/include/limits.h	/^#define _XOPEN_IOV_MAX	/;"	d
_XOPEN_LEGACY	/usr/include/unistd.h	/^#define	_XOPEN_LEGACY	/;"	d
_XOPEN_NAME_MAX	/usr/include/limits.h	/^#define _XOPEN_NAME_MAX /;"	d
_XOPEN_PATH_MAX	/usr/include/limits.h	/^#define _XOPEN_PATH_MAX /;"	d
_XOPEN_REALTIME	/usr/include/unistd.h	/^#define	_XOPEN_REALTIME	/;"	d
_XOPEN_REALTIME_THREADS	/usr/include/unistd.h	/^#define	_XOPEN_REALTIME_THREADS	/;"	d
_XOPEN_SHM	/usr/include/unistd.h	/^#define	_XOPEN_SHM	/;"	d
_XOPEN_STREAMS	/usr/include/unistd.h	/^#define	_XOPEN_STREAMS	/;"	d
_XOPEN_UNIX	/usr/include/unistd.h	/^#define	_XOPEN_UNIX	/;"	d
_XOPEN_VERSION	/usr/include/unistd.h	/^#define	_XOPEN_VERSION	/;"	d
_XOPEN_XCU_VERSION	/usr/include/unistd.h	/^#define	_XOPEN_XCU_VERSION	/;"	d
__ASL_H__	/usr/include/asl.h	/^#define __ASL_H__$/;"	d
__ASSERTMACROS__	/usr/include/AssertMacros.h	/^#define __ASSERTMACROS__$/;"	d
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	/usr/include/AssertMacros.h	/^	#define	__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	/;"	d
__AVAILABILITYMACROS__	/usr/include/AvailabilityMacros.h	/^#define __AVAILABILITYMACROS__$/;"	d
__AVAILABILITY_INTERNAL_DEPRECATED	/usr/include/AvailabilityInternal.h	/^#define __AVAILABILITY_INTERNAL_DEPRECATED /;"	d
__AVAILABILITY_INTERNAL_REGULAR	/usr/include/AvailabilityInternal.h	/^#define __AVAILABILITY_INTERNAL_REGULAR /;"	d
__AVAILABILITY_INTERNAL_UNAVAILABLE	/usr/include/AvailabilityInternal.h	/^#define __AVAILABILITY_INTERNAL_UNAVAILABLE /;"	d
__AVAILABILITY_INTERNAL_WEAK_IMPORT	/usr/include/AvailabilityInternal.h	/^#define __AVAILABILITY_INTERNAL_WEAK_IMPORT /;"	d
__AVAILABILITY_INTERNAL__	/usr/include/AvailabilityInternal.h	/^#define __AVAILABILITY_INTERNAL__$/;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_1	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_1 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_2 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA /;"	d
__AVAILABILITY_INTERNAL__IPHONE_3_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_3_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0 /;"	d
__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA /;"	d
__AVAILABILITY_INTERNAL__IPHONE_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_NA /;"	d
__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_1 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_2	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_2 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_3	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_3 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_4	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_4 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_5	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_5 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_10_6	/usr/include/AvailabilityInternal.h	/^        #define __AVAILABILITY_INTERNAL__MAC_10_6 /;"	d
__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_NA /;"	d
__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA	/usr/include/AvailabilityInternal.h	/^    #define __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA /;"	d
__AVAILABILITY__	/usr/include/Availability.h	/^#define __AVAILABILITY__$/;"	d
__CHECKINT_H__	/usr/include/checkint.h	/^#define __CHECKINT_H__$/;"	d
__CHECKINT_INLINE	/usr/include/checkint.h	/^#define __CHECKINT_INLINE /;"	d
__CHECKINT_INLINE	/usr/include/checkint.h	/^#undef __CHECKINT_INLINE$/;"	d
__CHECKINT_SIGN_DEMUX	/usr/include/checkint.h	/^#define __CHECKINT_SIGN_DEMUX(/;"	d
__COMPLEX__	/usr/include/complex.h	/^#define __COMPLEX__$/;"	d
__Check	/usr/include/AssertMacros.h	/^	   #define __Check(/;"	d
__Check_Compile_Time	/usr/include/AssertMacros.h	/^        #define __Check_Compile_Time(/;"	d
__Check_String	/usr/include/AssertMacros.h	/^	   #define __Check_String(/;"	d
__Check_noErr	/usr/include/AssertMacros.h	/^	   #define __Check_noErr(/;"	d
__Check_noErr_String	/usr/include/AssertMacros.h	/^	   #define __Check_noErr_String(/;"	d
__DARWIN_ALIAS	/usr/include/stdio.h	/^FILE	*fdopen(int, const char *) __DARWIN_10_6_AND_LATER_ALIAS(__DARWIN_ALIAS(fdopen));$/;"	p	signature:(fdopen)
__DARWIN_ALIAS	/usr/include/stdio.h	/^FILE	*fopen(const char * __restrict, const char * __restrict) __DARWIN_10_6_AND_LATER_ALIAS(__DARWIN_ALIAS(fopen));$/;"	p	signature:(fopen)
__DARWIN_ALIAS	/usr/include/stdio.h	/^FILE	*popen(const char *, const char *) __DARWIN_10_6_AND_LATER_ALIAS(__DARWIN_ALIAS(popen));$/;"	p	signature:(popen)
__DARWIN_ALIAS	/usr/include/time.h	/^extern long timezone __DARWIN_ALIAS(timezone);$/;"	p	signature:(timezone)
__DARWIN_CTYPE_TOP_static_inline	/usr/include/ctype.h	/^#define __DARWIN_CTYPE_TOP_static_inline	/;"	d
__DARWIN_CTYPE_TOP_static_inline	/usr/include/ctype.h	/^#define __DARWIN_CTYPE_TOP_static_inline$/;"	d
__DARWIN_CTYPE_static_inline	/usr/include/ctype.h	/^#define __DARWIN_CTYPE_static_inline	/;"	d
__DARWIN_CTYPE_static_inline	/usr/include/ctype.h	/^#define __DARWIN_CTYPE_static_inline$/;"	d
__DARWIN_LDBL_COMPAT2	/usr/include/asl.h	/^#define __DARWIN_LDBL_COMPAT2(/;"	d
__DARWIN_WCHAR_MAX	/usr/include/_types.h	/^#define __DARWIN_WCHAR_MAX	/;"	d
__DARWIN_WCHAR_MIN	/usr/include/_types.h	/^#define __DARWIN_WCHAR_MIN	/;"	d
__DARWIN_WCTYPE_TOP_static_inline	/usr/include/_wctype.h	/^#define __DARWIN_WCTYPE_TOP_static_inline /;"	d
__DARWIN_WCTYPE_TOP_static_inline	/usr/include/wctype.h	/^#define __DARWIN_WCTYPE_TOP_static_inline	/;"	d
__DARWIN_WCTYPE_TOP_static_inline	/usr/include/wctype.h	/^#define __DARWIN_WCTYPE_TOP_static_inline$/;"	d
__DARWIN_WEOF	/usr/include/_types.h	/^#define	__DARWIN_WEOF /;"	d
__DBL_DIG__	/usr/include/float.h	/^#define __DBL_DIG__ /;"	d
__DBL_EPSILON__	/usr/include/float.h	/^#define __DBL_EPSILON__ /;"	d
__DBL_MANT_DIG__	/usr/include/float.h	/^#define __DBL_MANT_DIG__ /;"	d
__DBL_MAX_10_EXP__	/usr/include/float.h	/^#define __DBL_MAX_10_EXP__ /;"	d
__DBL_MAX_EXP__	/usr/include/float.h	/^#define __DBL_MAX_EXP__ /;"	d
__DBL_MAX__	/usr/include/float.h	/^#define __DBL_MAX__ /;"	d
__DBL_MIN_10_EXP__	/usr/include/float.h	/^#define __DBL_MIN_10_EXP__ /;"	d
__DBL_MIN_EXP__	/usr/include/float.h	/^#define __DBL_MIN_EXP__ /;"	d
__DBL_MIN__	/usr/include/float.h	/^#define __DBL_MIN__ /;"	d
__DNS_H__	/usr/include/dns.h	/^#define __DNS_H__$/;"	d
__DNS_UTIL_H__	/usr/include/dns_util.h	/^#define __DNS_UTIL_H__$/;"	d
__DTF_READALL	/usr/include/dirent.h	/^#define __DTF_READALL	/;"	d
__Debug_String	/usr/include/AssertMacros.h	/^	   #define __Debug_String(/;"	d
__FENV_H__	/usr/include/fenv.h	/^#define __FENV_H__$/;"	d
__FLEX_LEXER_H	/usr/include/FlexLexer.h	/^#define __FLEX_LEXER_H$/;"	d
__FLT_DIG__	/usr/include/float.h	/^#define __FLT_DIG__ /;"	d
__FLT_EPSILON__	/usr/include/float.h	/^#define __FLT_EPSILON__ /;"	d
__FLT_MANT_DIG__	/usr/include/float.h	/^#define __FLT_MANT_DIG__ /;"	d
__FLT_MAX_10_EXP__	/usr/include/float.h	/^#define __FLT_MAX_10_EXP__ /;"	d
__FLT_MAX_EXP__	/usr/include/float.h	/^#define __FLT_MAX_EXP__ /;"	d
__FLT_MAX__	/usr/include/float.h	/^#define __FLT_MAX__ /;"	d
__FLT_MIN_10_EXP__	/usr/include/float.h	/^#define __FLT_MIN_10_EXP__ /;"	d
__FLT_MIN_EXP__	/usr/include/float.h	/^#define __FLT_MIN_EXP__ /;"	d
__FLT_MIN__	/usr/include/float.h	/^#define __FLT_MIN__ /;"	d
__FLT_RADIX__	/usr/include/float.h	/^#define __FLT_RADIX__ /;"	d
__IPHONE_2_0	/usr/include/Availability.h	/^#define __IPHONE_2_0 /;"	d
__IPHONE_2_1	/usr/include/Availability.h	/^#define __IPHONE_2_1 /;"	d
__IPHONE_2_2	/usr/include/Availability.h	/^#define __IPHONE_2_2 /;"	d
__IPHONE_3_0	/usr/include/Availability.h	/^#define __IPHONE_3_0 /;"	d
__IPHONE_NA	/usr/include/Availability.h	/^#define __IPHONE_NA /;"	d
__IPHONE_OS_VERSION_MAX_ALLOWED	/usr/include/AvailabilityInternal.h	/^        #define __IPHONE_OS_VERSION_MAX_ALLOWED /;"	d
__IPHONE_OS_VERSION_MIN_REQUIRED	/usr/include/AvailabilityInternal.h	/^        #define __IPHONE_OS_VERSION_MIN_REQUIRED /;"	d
__IPHONE_OS_VERSION_MIN_REQUIRED	/usr/include/AvailabilityInternal.h	/^        #undef __IPHONE_OS_VERSION_MIN_REQUIRED$/;"	d
__KERBEROSCOMERR__	/usr/include/com_err.h	/^#define __KERBEROSCOMERR__$/;"	d
__KERBEROSPROFILE__	/usr/include/profile.h	/^#define __KERBEROSPROFILE__$/;"	d
__LDBL_DIG__	/usr/include/float.h	/^#define __LDBL_DIG__ /;"	d
__LDBL_EPSILON__	/usr/include/float.h	/^#define __LDBL_EPSILON__ /;"	d
__LDBL_MANT_DIG__	/usr/include/float.h	/^#define __LDBL_MANT_DIG__ /;"	d
__LDBL_MAX_10_EXP__	/usr/include/float.h	/^#define __LDBL_MAX_10_EXP__ /;"	d
__LDBL_MAX_EXP__	/usr/include/float.h	/^#define __LDBL_MAX_EXP__ /;"	d
__LDBL_MAX__	/usr/include/float.h	/^#define __LDBL_MAX__ /;"	d
__LDBL_MIN_10_EXP__	/usr/include/float.h	/^#define __LDBL_MIN_10_EXP__ /;"	d
__LDBL_MIN_EXP__	/usr/include/float.h	/^#define __LDBL_MIN_EXP__ /;"	d
__LDBL_MIN__	/usr/include/float.h	/^#define __LDBL_MIN__ /;"	d
__LIBMLDBL_COMPAT	/usr/include/complex.h	/^#define __LIBMLDBL_COMPAT(/;"	d
__LIBUNWIND__	/usr/include/libunwind.h	/^#define __LIBUNWIND__$/;"	d
__LOCALE_H_	/usr/include/_locale.h	/^#define __LOCALE_H_$/;"	d
__MAC_10_0	/usr/include/Availability.h	/^#define __MAC_10_0 /;"	d
__MAC_10_1	/usr/include/Availability.h	/^#define __MAC_10_1 /;"	d
__MAC_10_2	/usr/include/Availability.h	/^#define __MAC_10_2 /;"	d
__MAC_10_3	/usr/include/Availability.h	/^#define __MAC_10_3 /;"	d
__MAC_10_4	/usr/include/Availability.h	/^#define __MAC_10_4 /;"	d
__MAC_10_5	/usr/include/Availability.h	/^#define __MAC_10_5 /;"	d
__MAC_10_6	/usr/include/Availability.h	/^#define __MAC_10_6 /;"	d
__MAC_NA	/usr/include/Availability.h	/^#define __MAC_NA /;"	d
__MAC_OS_X_VERSION_MAX_ALLOWED	/usr/include/AvailabilityInternal.h	/^        #define __MAC_OS_X_VERSION_MAX_ALLOWED /;"	d
__MAC_OS_X_VERSION_MIN_REQUIRED	/usr/include/AvailabilityInternal.h	/^    #define __MAC_OS_X_VERSION_MIN_REQUIRED /;"	d
__MATH_H__	/usr/include/math.h	/^#define __MATH_H__$/;"	d
__MONITOR_HEADER__	/usr/include/monitor.h	/^#define __MONITOR_HEADER__$/;"	d
__NAMESER	/usr/include/nameser.h	/^#define __NAMESER	/;"	d
__NCURSES_H	/usr/include/curses.h	/^#define __NCURSES_H$/;"	d
__NCURSES_H	/usr/include/ncurses.h	/^#define __NCURSES_H$/;"	d
__NOTIFICATION_H__	/usr/include/notify.h	/^#define __NOTIFICATION_H__$/;"	d
__NS_SYSTEM_DIRECTORIES_H__	/usr/include/NSSystemDirectories.h	/^#define __NS_SYSTEM_DIRECTORIES_H__$/;"	d
__OSX_AVAILABLE_BUT_DEPRECATED	/usr/include/Availability.h	/^    #define __OSX_AVAILABLE_BUT_DEPRECATED(/;"	d
__OSX_AVAILABLE_STARTING	/usr/include/Availability.h	/^    #define __OSX_AVAILABLE_STARTING(/;"	d
__PRI_64_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#    define __PRI_64_LENGTH_MODIFIER__ /;"	d
__PRI_64_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#  undef __PRI_64_LENGTH_MODIFIER__$/;"	d
__PRI_8_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#    define __PRI_8_LENGTH_MODIFIER__ /;"	d
__PRI_8_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#  undef __PRI_8_LENGTH_MODIFIER__$/;"	d
__PRI_MAX_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#  define __PRI_MAX_LENGTH_MODIFIER__ /;"	d
__REMOVEFILE_H__	/usr/include/removefile.h	/^#define __REMOVEFILE_H__$/;"	d
__RES	/usr/include/resolv.h	/^#define	__RES	/;"	d
__RESTRICT_KEYWORD_DEFINED__	/usr/include/inttypes.h	/^#    define __RESTRICT_KEYWORD_DEFINED__$/;"	d
__RESTRICT_KEYWORD_DEFINED__	/usr/include/inttypes.h	/^#  undef __RESTRICT_KEYWORD_DEFINED__$/;"	d
__R_UNUSED	/usr/include/db.h	/^#define	__R_UNUSED	/;"	d
__Require	/usr/include/AssertMacros.h	/^	   #define __Require(/;"	d
__Require_Action	/usr/include/AssertMacros.h	/^	   #define __Require_Action(/;"	d
__Require_Action_Quiet	/usr/include/AssertMacros.h	/^	#define __Require_Action_Quiet(/;"	d
__Require_Action_String	/usr/include/AssertMacros.h	/^	   #define __Require_Action_String(/;"	d
__Require_Quiet	/usr/include/AssertMacros.h	/^	#define __Require_Quiet(/;"	d
__Require_String	/usr/include/AssertMacros.h	/^	   #define __Require_String(/;"	d
__Require_noErr	/usr/include/AssertMacros.h	/^	   #define __Require_noErr(/;"	d
__Require_noErr_Action	/usr/include/AssertMacros.h	/^	   #define __Require_noErr_Action(/;"	d
__Require_noErr_Action_Quiet	/usr/include/AssertMacros.h	/^	#define __Require_noErr_Action_Quiet(/;"	d
__Require_noErr_Action_String	/usr/include/AssertMacros.h	/^	   #define __Require_noErr_Action_String(/;"	d
__Require_noErr_Quiet	/usr/include/AssertMacros.h	/^	#define __Require_noErr_Quiet(/;"	d
__Require_noErr_String	/usr/include/AssertMacros.h	/^	   #define __Require_noErr_String(/;"	d
__SALC	/usr/include/stdio.h	/^#define __SALC /;"	d
__SAPP	/usr/include/stdio.h	/^#define	__SAPP	/;"	d
__SCHED_PARAM_SIZE__	/usr/include/pthread_impl.h	/^#define __SCHED_PARAM_SIZE__ /;"	d
__SCN_64_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#    define __SCN_64_LENGTH_MODIFIER__ /;"	d
__SCN_64_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#  undef __SCN_64_LENGTH_MODIFIER__$/;"	d
__SCN_MAX_LENGTH_MODIFIER__	/usr/include/inttypes.h	/^#  define __SCN_MAX_LENGTH_MODIFIER__ /;"	d
__SEOF	/usr/include/stdio.h	/^#define	__SEOF	/;"	d
__SERR	/usr/include/stdio.h	/^#define	__SERR	/;"	d
__SIGN	/usr/include/stdio.h	/^#define __SIGN /;"	d
__SLBF	/usr/include/stdio.h	/^#define	__SLBF	/;"	d
__SMBF	/usr/include/stdio.h	/^#define	__SMBF	/;"	d
__SMOD	/usr/include/stdio.h	/^#define	__SMOD	/;"	d
__SNBF	/usr/include/stdio.h	/^#define	__SNBF	/;"	d
__SNPT	/usr/include/stdio.h	/^#define	__SNPT	/;"	d
__SOFF	/usr/include/stdio.h	/^#define	__SOFF	/;"	d
__SOPT	/usr/include/stdio.h	/^#define	__SOPT	/;"	d
__SRD	/usr/include/stdio.h	/^#define	__SRD	/;"	d
__SRW	/usr/include/stdio.h	/^#define	__SRW	/;"	d
__SSTR	/usr/include/stdio.h	/^#define	__SSTR	/;"	d
__STDC_FORMAT_MACROS_DEFINED	/usr/include/inttypes.h	/^#define __STDC_FORMAT_MACROS_DEFINED$/;"	d
__STDDEF_H__	/usr/include/stddef.h	/^#define __STDDEF_H__$/;"	d
__STRICT_ANSI__	/usr/include/standards.h	/^#                define __STRICT_ANSI__$/;"	d
__STRICT_BSD__	/usr/include/standards.h	/^#        undef __STRICT_BSD__$/;"	d
__SWR	/usr/include/stdio.h	/^#define	__SWR	/;"	d
__TARGETCONDITIONALS__	/usr/include/TargetConditionals.h	/^#define __TARGETCONDITIONALS__$/;"	d
__TERMIOS_H__	/usr/include/termios.h	/^#define __TERMIOS_H__$/;"	d
__TIC_H	/usr/include/tic.h	/^#define __TIC_H$/;"	d
__TYPES_H_	/usr/include/_types.h	/^#define __TYPES_H_$/;"	d
__Verify	/usr/include/AssertMacros.h	/^	   #define __Verify(/;"	d
__Verify_Action	/usr/include/AssertMacros.h	/^	   #define __Verify_Action(/;"	d
__Verify_String	/usr/include/AssertMacros.h	/^	   #define __Verify_String(/;"	d
__Verify_noErr	/usr/include/AssertMacros.h	/^	   #define __Verify_noErr(/;"	d
__Verify_noErr_Action	/usr/include/AssertMacros.h	/^	   #define __Verify_noErr_Action(/;"	d
__Verify_noErr_String	/usr/include/AssertMacros.h	/^	   #define __Verify_noErr_String(/;"	d
__WANT_LONG_DOUBLE_FORMAT__	/usr/include/complex.h	/^#define __WANT_LONG_DOUBLE_FORMAT__ /;"	d
__WCTYPE_H_	/usr/include/_wctype.h	/^#define __WCTYPE_H_$/;"	d
__WIN32__	/usr/include/tcl.h	/^#	define __WIN32__$/;"	d
__WORDSIZE	/usr/include/stdint.h	/^#define __WORDSIZE /;"	d
__XLOCALE_H_	/usr/include/_xlocale.h	/^#define __XLOCALE_H_$/;"	d
___mb_cur_max	/usr/include/_xlocale.h	/^int		___mb_cur_max(void);$/;"	p	signature:(void)
___mb_cur_max_l	/usr/include/_xlocale.h	/^int		___mb_cur_max_l(locale_t);$/;"	p	signature:(locale_t)
___runetype	/usr/include/ctype.h	/^unsigned long		___runetype(__darwin_ct_rune_t);$/;"	p	signature:(__darwin_ct_rune_t)
___tolower	/usr/include/ctype.h	/^__darwin_ct_rune_t	___tolower(__darwin_ct_rune_t);$/;"	p	signature:(__darwin_ct_rune_t)
___toupper	/usr/include/ctype.h	/^__darwin_ct_rune_t	___toupper(__darwin_ct_rune_t);$/;"	p	signature:(__darwin_ct_rune_t)
__align32	/usr/include/resolv.h	/^	int32_t			__align32;	\/* 32bit alignment *\/$/;"	m	union:res_sockaddr_union	access:public
__align64	/usr/include/resolv.h	/^	int64_t			__align64;	\/* 64bit alignment *\/$/;"	m	union:res_sockaddr_union	access:public
__alloca	/usr/include/alloca.h	/^#define	__alloca(/;"	d
__alloca	/usr/include/alloca.h	/^#undef	__alloca$/;"	d
__anon101::__map	/usr/include/runetype.h	/^	__darwin_rune_t	__map;		\/* What first maps to in maps *\/$/;"	m	struct:__anon101	access:public
__anon101::__max	/usr/include/runetype.h	/^	__darwin_rune_t	__max;		\/* Last rune (inclusive) of the range *\/$/;"	m	struct:__anon101	access:public
__anon101::__min	/usr/include/runetype.h	/^	__darwin_rune_t	__min;		\/* First rune of the range *\/$/;"	m	struct:__anon101	access:public
__anon101::__types	/usr/include/runetype.h	/^	__uint32_t	*__types;	\/* Array of types in range *\/$/;"	m	struct:__anon101	access:public
__anon102::__nranges	/usr/include/runetype.h	/^	int		__nranges;	\/* Number of ranges stored *\/$/;"	m	struct:__anon102	access:public
__anon102::__ranges	/usr/include/runetype.h	/^	_RuneEntry	*__ranges;	\/* Pointer to the ranges *\/$/;"	m	struct:__anon102	access:public
__anon103::__mask	/usr/include/runetype.h	/^	__uint32_t	__mask;		\/* charclass mask *\/$/;"	m	struct:__anon103	access:public
__anon103::__name	/usr/include/runetype.h	/^	char		__name[14];	\/* CHARCLASS_NAME_MAX = 14 *\/$/;"	m	struct:__anon103	access:public
__anon104::__charclasses	/usr/include/runetype.h	/^	_RuneCharClass	*__charclasses;$/;"	m	struct:__anon104	access:public
__anon104::__encoding	/usr/include/runetype.h	/^	char		__encoding[32];	\/* ASCII name of this encoding *\/$/;"	m	struct:__anon104	access:public
__anon104::__invalid_rune	/usr/include/runetype.h	/^	__darwin_rune_t	__invalid_rune;$/;"	m	struct:__anon104	access:public
__anon104::__magic	/usr/include/runetype.h	/^	char		__magic[8];	\/* Magic saying what version we are *\/$/;"	m	struct:__anon104	access:public
__anon104::__maplower	/usr/include/runetype.h	/^	__darwin_rune_t	__maplower[_CACHED_RUNES];$/;"	m	struct:__anon104	access:public
__anon104::__maplower_ext	/usr/include/runetype.h	/^	_RuneRange	__maplower_ext;$/;"	m	struct:__anon104	access:public
__anon104::__mapupper	/usr/include/runetype.h	/^	__darwin_rune_t	__mapupper[_CACHED_RUNES];$/;"	m	struct:__anon104	access:public
__anon104::__mapupper_ext	/usr/include/runetype.h	/^	_RuneRange	__mapupper_ext;$/;"	m	struct:__anon104	access:public
__anon104::__ncharclasses	/usr/include/runetype.h	/^	int		__ncharclasses;$/;"	m	struct:__anon104	access:public
__anon104::__runetype	/usr/include/runetype.h	/^	__uint32_t	__runetype[_CACHED_RUNES];$/;"	m	struct:__anon104	access:public
__anon104::__runetype_ext	/usr/include/runetype.h	/^	_RuneRange	__runetype_ext;$/;"	m	struct:__anon104	access:public
__anon104::__sgetrune	/usr/include/runetype.h	/^	__darwin_rune_t	(*__sgetrune)(const char *, __darwin_size_t, char const **);$/;"	m	struct:__anon104	access:public
__anon104::__sputrune	/usr/include/runetype.h	/^	int		(*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);$/;"	m	struct:__anon104	access:public
__anon104::__variable	/usr/include/runetype.h	/^	void		*__variable;	\/* Data which depends on the encoding *\/$/;"	m	struct:__anon104	access:public
__anon104::__variable_len	/usr/include/runetype.h	/^	int		__variable_len;	\/* how long that data is *\/$/;"	m	struct:__anon104	access:public
__anon109::quot	/usr/include/stdlib.h	/^	int quot;		\/* quotient *\/$/;"	m	struct:__anon109	access:public
__anon109::rem	/usr/include/stdlib.h	/^	int rem;		\/* remainder *\/$/;"	m	struct:__anon109	access:public
__anon10::bstate	/usr/include/curses.h	/^    mmask_t bstate;	\/* button state bits *\/$/;"	m	struct:__anon10	access:public
__anon10::id	/usr/include/curses.h	/^    short id;		\/* ID to distinguish multiple devices *\/$/;"	m	struct:__anon10	access:public
__anon10::x	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon10	access:public
__anon10::y	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon10	access:public
__anon10::z	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon10	access:public
__anon110::quot	/usr/include/stdlib.h	/^	long quot;		\/* quotient *\/$/;"	m	struct:__anon110	access:public
__anon110::rem	/usr/include/stdlib.h	/^	long rem;		\/* remainder *\/$/;"	m	struct:__anon110	access:public
__anon111::quot	/usr/include/stdlib.h	/^	long long quot;$/;"	m	struct:__anon111	access:public
__anon111::rem	/usr/include/stdlib.h	/^	long long rem;$/;"	m	struct:__anon111	access:public
__anon112::buckets	/usr/include/strhash.h	/^    hash_node **buckets;$/;"	m	struct:__anon112	access:public
__anon112::size	/usr/include/strhash.h	/^    int size;$/;"	m	struct:__anon112	access:public
__anon118::dictionaryPtr	/usr/include/tcl.h	/^    Tcl_Dict dictionaryPtr;	\/* Reference to dictionary being searched. *\/$/;"	m	struct:__anon118	access:public
__anon118::epoch	/usr/include/tcl.h	/^    int epoch;			\/* Epoch marker for dictionary being searched,$/;"	m	struct:__anon118	access:public
__anon118::next	/usr/include/tcl.h	/^    void *next;			\/* Search position for underlying hash$/;"	m	struct:__anon118	access:public
__anon11::data	/usr/include/db.h	/^	void	*data;			\/* data *\/$/;"	m	struct:__anon11	access:public
__anon11::size	/usr/include/db.h	/^	size_t	 size;			\/* data length *\/$/;"	m	struct:__anon11	access:public
__anon125::dst	/usr/include/tk.h	/^    char *dst;			\/* Address of value to be modified; usage$/;"	m	struct:__anon125	access:public
__anon125::help	/usr/include/tk.h	/^    char *help;			\/* Documentation message describing this$/;"	m	struct:__anon125	access:public
__anon125::key	/usr/include/tk.h	/^    char *key;			\/* The key string that flags the option in the$/;"	m	struct:__anon125	access:public
__anon125::src	/usr/include/tk.h	/^    char *src;			\/* Value to be used in setting dst; usage$/;"	m	struct:__anon125	access:public
__anon125::type	/usr/include/tk.h	/^    int type;			\/* Indicates option type; see below. *\/$/;"	m	struct:__anon125	access:public
__anon129::display	/usr/include/tk.h	/^    Display *display;		\/* Display the event was read from. *\/$/;"	m	struct:__anon129	access:public
__anon129::event	/usr/include/tk.h	/^    Window event;		\/* Window on which event was requested. *\/$/;"	m	struct:__anon129	access:public
__anon129::name	/usr/include/tk.h	/^    Tk_Uid name;		\/* Name of virtual event. *\/$/;"	m	struct:__anon129	access:public
__anon129::root	/usr/include/tk.h	/^    Window root;		\/* Root window that the event occured on. *\/$/;"	m	struct:__anon129	access:public
__anon129::same_screen	/usr/include/tk.h	/^    Bool same_screen;		\/* Same screen flag. *\/$/;"	m	struct:__anon129	access:public
__anon129::send_event	/usr/include/tk.h	/^    Bool send_event;		\/* True if this came from a SendEvent$/;"	m	struct:__anon129	access:public
__anon129::serial	/usr/include/tk.h	/^    unsigned long serial;	\/* # of last request processed by server. *\/$/;"	m	struct:__anon129	access:public
__anon129::state	/usr/include/tk.h	/^    unsigned int state;		\/* Key or button mask *\/$/;"	m	struct:__anon129	access:public
__anon129::subwindow	/usr/include/tk.h	/^    Window subwindow;		\/* Child window. *\/$/;"	m	struct:__anon129	access:public
__anon129::time	/usr/include/tk.h	/^    Time time;			\/* Milliseconds. *\/$/;"	m	struct:__anon129	access:public
__anon129::type	/usr/include/tk.h	/^    int type;$/;"	m	struct:__anon129	access:public
__anon129::user_data	/usr/include/tk.h	/^    Tcl_Obj *user_data;		\/* Application-specific data reference; Tk$/;"	m	struct:__anon129	access:public
__anon129::x	/usr/include/tk.h	/^    int x, y;			\/* Pointer x, y coordinates in event$/;"	m	struct:__anon129	access:public
__anon129::x_root	/usr/include/tk.h	/^    int x_root, y_root;		\/* Coordinates relative to root. *\/$/;"	m	struct:__anon129	access:public
__anon129::y	/usr/include/tk.h	/^    int x, y;			\/* Pointer x, y coordinates in event$/;"	m	struct:__anon129	access:public
__anon129::y_root	/usr/include/tk.h	/^    int x_root, y_root;		\/* Coordinates relative to root. *\/$/;"	m	struct:__anon129	access:public
__anon130::display	/usr/include/tk.h	/^    Display *display;		\/* Display the event was read from. *\/$/;"	m	struct:__anon130	access:public
__anon130::send_event	/usr/include/tk.h	/^    Bool send_event;		\/* True if this came from a SendEvent$/;"	m	struct:__anon130	access:public
__anon130::serial	/usr/include/tk.h	/^    unsigned long serial;	\/* # of last request processed by server. *\/$/;"	m	struct:__anon130	access:public
__anon130::type	/usr/include/tk.h	/^    int type;$/;"	m	struct:__anon130	access:public
__anon130::window	/usr/include/tk.h	/^    Window window;		\/* Window in which event occurred. *\/$/;"	m	struct:__anon130	access:public
__anon133::we_offs	/usr/include/wordexp.h	/^	size_t we_offs;$/;"	m	struct:__anon133	access:public
__anon133::we_wordc	/usr/include/wordexp.h	/^	size_t we_wordc;$/;"	m	struct:__anon133	access:public
__anon133::we_wordv	/usr/include/wordexp.h	/^	char **we_wordv;$/;"	m	struct:__anon133	access:public
__anon13::cachesize	/usr/include/db.h	/^	unsigned int	cachesize;	\/* bytes to cache *\/$/;"	m	struct:__anon13	access:public
__anon13::compare	/usr/include/db.h	/^	int		(*compare)	\/* comparison function *\/$/;"	m	struct:__anon13	access:public
__anon13::flags	/usr/include/db.h	/^	unsigned long	flags;$/;"	m	struct:__anon13	access:public
__anon13::lorder	/usr/include/db.h	/^	int		lorder;		\/* byte order *\/$/;"	m	struct:__anon13	access:public
__anon13::maxkeypage	/usr/include/db.h	/^	int		maxkeypage;	\/* maximum keys per page *\/$/;"	m	struct:__anon13	access:public
__anon13::minkeypage	/usr/include/db.h	/^	int		minkeypage;	\/* minimum keys per page *\/$/;"	m	struct:__anon13	access:public
__anon13::prefix	/usr/include/db.h	/^	size_t		(*prefix)	\/* prefix function *\/$/;"	m	struct:__anon13	access:public
__anon13::psize	/usr/include/db.h	/^	unsigned int	psize;		\/* page size *\/$/;"	m	struct:__anon13	access:public
__anon14::bsize	/usr/include/db.h	/^	unsigned int	bsize;		\/* bucket size *\/$/;"	m	struct:__anon14	access:public
__anon14::cachesize	/usr/include/db.h	/^	unsigned int	cachesize;	\/* bytes to cache *\/$/;"	m	struct:__anon14	access:public
__anon14::ffactor	/usr/include/db.h	/^	unsigned int	ffactor;	\/* fill factor *\/$/;"	m	struct:__anon14	access:public
__anon14::hash	/usr/include/db.h	/^		(*hash)(const void *, size_t);$/;"	m	struct:__anon14	access:public
__anon14::lorder	/usr/include/db.h	/^	int	lorder;		\/* byte order *\/$/;"	m	struct:__anon14	access:public
__anon14::nelem	/usr/include/db.h	/^	unsigned int	nelem;		\/* number of elements *\/$/;"	m	struct:__anon14	access:public
__anon15::bfname	/usr/include/db.h	/^	char	*bfname;	\/* btree file name *\/ $/;"	m	struct:__anon15	access:public
__anon15::bval	/usr/include/db.h	/^	unsigned char	bval;		\/* delimiting byte (variable-length records *\/$/;"	m	struct:__anon15	access:public
__anon15::cachesize	/usr/include/db.h	/^	unsigned int	cachesize;	\/* bytes to cache *\/$/;"	m	struct:__anon15	access:public
__anon15::flags	/usr/include/db.h	/^	unsigned long	flags;$/;"	m	struct:__anon15	access:public
__anon15::lorder	/usr/include/db.h	/^	int		lorder;		\/* byte order *\/$/;"	m	struct:__anon15	access:public
__anon15::psize	/usr/include/db.h	/^	unsigned int	psize;		\/* page size *\/$/;"	m	struct:__anon15	access:public
__anon15::reclen	/usr/include/db.h	/^	size_t		reclen;		\/* record length (fixed-length records) *\/$/;"	m	struct:__anon15	access:public
__anon16::__dd_buf	/usr/include/dirent.h	/^	char	*__dd_buf;	\/* data buffer *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_fd	/usr/include/dirent.h	/^	int	__dd_fd;	\/* file descriptor associated with directory *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_flags	/usr/include/dirent.h	/^	int	__dd_flags;	\/* flags for readdir *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_len	/usr/include/dirent.h	/^	int	__dd_len;	\/* size of data buffer *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_loc	/usr/include/dirent.h	/^	long	__dd_loc;	\/* offset in current buffer *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_lock	/usr/include/dirent.h	/^	__darwin_pthread_mutex_t __dd_lock; \/* for thread locking *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_rewind	/usr/include/dirent.h	/^	long	__dd_rewind;	\/* magic cookie for rewinding *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_seek	/usr/include/dirent.h	/^	long	__dd_seek;	\/* magic cookie returned *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_size	/usr/include/dirent.h	/^	long	__dd_size;	\/* amount of data returned *\/$/;"	m	struct:__anon16	access:public
__anon16::__dd_td	/usr/include/dirent.h	/^	struct _telldir *__dd_td; \/* telldir position recording *\/$/;"	m	struct:__anon16	typeref:struct:__anon16::_telldir	access:public
__anon22::ancount	/usr/include/dns_util.h	/^	uint16_t ancount;$/;"	m	struct:__anon22	access:public
__anon22::arcount	/usr/include/dns_util.h	/^	uint16_t arcount;$/;"	m	struct:__anon22	access:public
__anon22::flags	/usr/include/dns_util.h	/^	uint16_t flags;$/;"	m	struct:__anon22	access:public
__anon22::nscount	/usr/include/dns_util.h	/^	uint16_t nscount;$/;"	m	struct:__anon22	access:public
__anon22::qdcount	/usr/include/dns_util.h	/^	uint16_t qdcount;$/;"	m	struct:__anon22	access:public
__anon22::xid	/usr/include/dns_util.h	/^	uint16_t xid;$/;"	m	struct:__anon22	access:public
__anon23::dnsclass	/usr/include/dns_util.h	/^	uint16_t dnsclass;$/;"	m	struct:__anon23	access:public
__anon23::dnstype	/usr/include/dns_util.h	/^	uint16_t dnstype;$/;"	m	struct:__anon23	access:public
__anon23::name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon23	access:public
__anon24::data	/usr/include/dns_util.h	/^	char *data;$/;"	m	struct:__anon24	access:public
__anon24::length	/usr/include/dns_util.h	/^	uint16_t length;$/;"	m	struct:__anon24	access:public
__anon25::addr	/usr/include/dns_util.h	/^	struct in_addr addr;$/;"	m	struct:__anon25	typeref:struct:__anon25::in_addr	access:public
__anon26::addr	/usr/include/dns_util.h	/^	struct in6_addr addr;$/;"	m	struct:__anon26	typeref:struct:__anon26::in6_addr	access:public
__anon27::name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon27	access:public
__anon28::expire	/usr/include/dns_util.h	/^	uint32_t expire;$/;"	m	struct:__anon28	access:public
__anon28::minimum	/usr/include/dns_util.h	/^	uint32_t minimum;$/;"	m	struct:__anon28	access:public
__anon28::mname	/usr/include/dns_util.h	/^	char *mname;$/;"	m	struct:__anon28	access:public
__anon28::refresh	/usr/include/dns_util.h	/^	uint32_t refresh;$/;"	m	struct:__anon28	access:public
__anon28::retry	/usr/include/dns_util.h	/^	uint32_t retry;$/;"	m	struct:__anon28	access:public
__anon28::rname	/usr/include/dns_util.h	/^	char *rname;$/;"	m	struct:__anon28	access:public
__anon28::serial	/usr/include/dns_util.h	/^	uint32_t serial;$/;"	m	struct:__anon28	access:public
__anon29::cpu	/usr/include/dns_util.h	/^	char *cpu;$/;"	m	struct:__anon29	access:public
__anon29::os	/usr/include/dns_util.h	/^	char *os;$/;"	m	struct:__anon29	access:public
__anon30::emailbx	/usr/include/dns_util.h	/^	char *emailbx;$/;"	m	struct:__anon30	access:public
__anon30::rmailbx	/usr/include/dns_util.h	/^	char *rmailbx;$/;"	m	struct:__anon30	access:public
__anon31::name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon31	access:public
__anon31::preference	/usr/include/dns_util.h	/^	uint16_t preference;$/;"	m	struct:__anon31	access:public
__anon32::string_count	/usr/include/dns_util.h	/^	uint32_t string_count;$/;"	m	struct:__anon32	access:public
__anon32::strings	/usr/include/dns_util.h	/^	char **strings;$/;"	m	struct:__anon32	access:public
__anon33::addr	/usr/include/dns_util.h	/^	struct in_addr addr;$/;"	m	struct:__anon33	typeref:struct:__anon33::in_addr	access:public
__anon33::map	/usr/include/dns_util.h	/^	uint8_t *map;$/;"	m	struct:__anon33	access:public
__anon33::maplength	/usr/include/dns_util.h	/^	uint32_t maplength;$/;"	m	struct:__anon33	access:public
__anon33::protocol	/usr/include/dns_util.h	/^	uint8_t protocol;$/;"	m	struct:__anon33	access:public
__anon34::mailbox	/usr/include/dns_util.h	/^	char *mailbox;$/;"	m	struct:__anon34	access:public
__anon34::txtdname	/usr/include/dns_util.h	/^	char *txtdname;$/;"	m	struct:__anon34	access:public
__anon35::hostname	/usr/include/dns_util.h	/^	char *hostname;$/;"	m	struct:__anon35	access:public
__anon35::subtype	/usr/include/dns_util.h	/^	uint32_t subtype;$/;"	m	struct:__anon35	access:public
__anon36::psdn_address	/usr/include/dns_util.h	/^	char *psdn_address;$/;"	m	struct:__anon36	access:public
__anon37::isdn_address	/usr/include/dns_util.h	/^	char *isdn_address;$/;"	m	struct:__anon37	access:public
__anon37::subaddress	/usr/include/dns_util.h	/^	char *subaddress;$/;"	m	struct:__anon37	access:public
__anon38::intermediate	/usr/include/dns_util.h	/^	char * intermediate;$/;"	m	struct:__anon38	access:public
__anon38::preference	/usr/include/dns_util.h	/^	uint16_t preference;$/;"	m	struct:__anon38	access:public
__anon39::altitude	/usr/include/dns_util.h	/^	uint32_t altitude;$/;"	m	struct:__anon39	access:public
__anon39::horizontal_precision	/usr/include/dns_util.h	/^	uint8_t horizontal_precision;$/;"	m	struct:__anon39	access:public
__anon39::latitude	/usr/include/dns_util.h	/^	uint32_t latitude;$/;"	m	struct:__anon39	access:public
__anon39::longitude	/usr/include/dns_util.h	/^	uint32_t longitude;$/;"	m	struct:__anon39	access:public
__anon39::size	/usr/include/dns_util.h	/^	uint8_t size;$/;"	m	struct:__anon39	access:public
__anon39::version	/usr/include/dns_util.h	/^	uint8_t version;$/;"	m	struct:__anon39	access:public
__anon39::vertical_precision	/usr/include/dns_util.h	/^	uint8_t vertical_precision;$/;"	m	struct:__anon39	access:public
__anon3::avail_in	/usr/include/bzlib.h	/^      unsigned int avail_in;$/;"	m	struct:__anon3	access:public
__anon3::avail_out	/usr/include/bzlib.h	/^      unsigned int avail_out;$/;"	m	struct:__anon3	access:public
__anon3::bzalloc	/usr/include/bzlib.h	/^      void *(*bzalloc)(void *,int,int);$/;"	m	struct:__anon3	access:public
__anon3::bzfree	/usr/include/bzlib.h	/^      void (*bzfree)(void *,void *);$/;"	m	struct:__anon3	access:public
__anon3::next_in	/usr/include/bzlib.h	/^      char *next_in;$/;"	m	struct:__anon3	access:public
__anon3::next_out	/usr/include/bzlib.h	/^      char *next_out;$/;"	m	struct:__anon3	access:public
__anon3::opaque	/usr/include/bzlib.h	/^      void *opaque;$/;"	m	struct:__anon3	access:public
__anon3::state	/usr/include/bzlib.h	/^      void *state;$/;"	m	struct:__anon3	access:public
__anon3::total_in_hi32	/usr/include/bzlib.h	/^      unsigned int total_in_hi32;$/;"	m	struct:__anon3	access:public
__anon3::total_in_lo32	/usr/include/bzlib.h	/^      unsigned int total_in_lo32;$/;"	m	struct:__anon3	access:public
__anon3::total_out_hi32	/usr/include/bzlib.h	/^      unsigned int total_out_hi32;$/;"	m	struct:__anon3	access:public
__anon3::total_out_lo32	/usr/include/bzlib.h	/^      unsigned int total_out_lo32;$/;"	m	struct:__anon3	access:public
__anon40::port	/usr/include/dns_util.h	/^	uint16_t port;$/;"	m	struct:__anon40	access:public
__anon40::priority	/usr/include/dns_util.h	/^	uint16_t priority;$/;"	m	struct:__anon40	access:public
__anon40::target	/usr/include/dns_util.h	/^	char *target;$/;"	m	struct:__anon40	access:public
__anon40::weight	/usr/include/dns_util.h	/^	uint16_t weight;$/;"	m	struct:__anon40	access:public
__anon41::__anon42::A	/usr/include/dns_util.h	/^		dns_address_record_t *A;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::AAAA	/usr/include/dns_util.h	/^		dns_in6_address_record_t *AAAA;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::AFSDB	/usr/include/dns_util.h	/^		dns_AFSDB_record_t *AFSDB;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::CNAME	/usr/include/dns_util.h	/^		dns_domain_name_record_t *CNAME;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::DNSNULL	/usr/include/dns_util.h	/^		dns_raw_resource_record_t *DNSNULL;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::HINFO	/usr/include/dns_util.h	/^		dns_HINFO_record_t *HINFO;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::ISDN	/usr/include/dns_util.h	/^		dns_ISDN_record_t *ISDN;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::LOC	/usr/include/dns_util.h	/^		dns_LOC_record_t *LOC;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MB	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MB;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MD	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MD;		\/* Obsolete *\/$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MF	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MF;		\/* Obsolete *\/$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MG	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MG;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MINFO	/usr/include/dns_util.h	/^		dns_MINFO_record_t *MINFO;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MR	/usr/include/dns_util.h	/^		dns_domain_name_record_t *MR;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::MX	/usr/include/dns_util.h	/^		dns_MX_record_t *MX;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::NS	/usr/include/dns_util.h	/^		dns_domain_name_record_t *NS;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::PTR	/usr/include/dns_util.h	/^		dns_domain_name_record_t *PTR;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::RP	/usr/include/dns_util.h	/^		dns_RP_record_t *RP;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::RT	/usr/include/dns_util.h	/^		dns_RT_record_t *RT;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::SOA	/usr/include/dns_util.h	/^		dns_SOA_record_t *SOA;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::SRV	/usr/include/dns_util.h	/^		dns_SRV_record_t *SRV;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::TXT	/usr/include/dns_util.h	/^		dns_TXT_record_t *TXT;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::WKS	/usr/include/dns_util.h	/^		dns_WKS_record_t *WKS;$/;"	m	union:__anon41::__anon42	access:public
__anon41::__anon42::X25	/usr/include/dns_util.h	/^		dns_X25_record_t *X25;$/;"	m	union:__anon41::__anon42	access:public
__anon41::data	/usr/include/dns_util.h	/^	} data;$/;"	m	struct:__anon41	typeref:union:__anon41::__anon42	access:public
__anon41::dnsclass	/usr/include/dns_util.h	/^	uint16_t dnsclass;$/;"	m	struct:__anon41	access:public
__anon41::dnstype	/usr/include/dns_util.h	/^	uint16_t dnstype;$/;"	m	struct:__anon41	access:public
__anon41::name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon41	access:public
__anon41::ttl	/usr/include/dns_util.h	/^	uint32_t ttl;$/;"	m	struct:__anon41	access:public
__anon43::additional	/usr/include/dns_util.h	/^	dns_resource_record_t **additional;$/;"	m	struct:__anon43	access:public
__anon43::answer	/usr/include/dns_util.h	/^	dns_resource_record_t **answer;$/;"	m	struct:__anon43	access:public
__anon43::authority	/usr/include/dns_util.h	/^	dns_resource_record_t **authority;$/;"	m	struct:__anon43	access:public
__anon43::header	/usr/include/dns_util.h	/^	dns_header_t *header;$/;"	m	struct:__anon43	access:public
__anon43::question	/usr/include/dns_util.h	/^	dns_question_t **question;$/;"	m	struct:__anon43	access:public
__anon43::server	/usr/include/dns_util.h	/^	struct sockaddr *server;$/;"	m	struct:__anon43	typeref:struct:__anon43::sockaddr	access:public
__anon43::status	/usr/include/dns_util.h	/^	uint32_t status;$/;"	m	struct:__anon43	access:public
__anon44::st_info	/usr/include/dtrace.h	/^	unsigned char	st_info;	\/* bind, type: ELF_64_ST_... *\/$/;"	m	struct:__anon44	access:public
__anon44::st_name	/usr/include/dtrace.h	/^	GElf_Sxword	st_name;$/;"	m	struct:__anon44	access:public
__anon44::st_other	/usr/include/dtrace.h	/^	unsigned char	st_other;$/;"	m	struct:__anon44	access:public
__anon44::st_shndx	/usr/include/dtrace.h	/^	GElf_Half	st_shndx;	\/* SHN_... *\/$/;"	m	struct:__anon44	access:public
__anon44::st_size	/usr/include/dtrace.h	/^	GElf_Xword	st_size;$/;"	m	struct:__anon44	access:public
__anon44::st_value	/usr/include/dtrace.h	/^	GElf_Addr	st_value;$/;"	m	struct:__anon44	access:public
__anon48::free_fcn	/usr/include/expat.h	/^  void (*free_fcn)(void *ptr);$/;"	m	struct:__anon48	access:public
__anon48::malloc_fcn	/usr/include/expat.h	/^  void *(*malloc_fcn)(size_t size);$/;"	m	struct:__anon48	access:public
__anon48::realloc_fcn	/usr/include/expat.h	/^  void *(*realloc_fcn)(void *ptr, size_t size);$/;"	m	struct:__anon48	access:public
__anon49::convert	/usr/include/expat.h	/^  int (XMLCALL *convert)(void *data, const char *s);$/;"	m	struct:__anon49	access:public
__anon49::data	/usr/include/expat.h	/^  void *data;$/;"	m	struct:__anon49	access:public
__anon49::map	/usr/include/expat.h	/^  int map[256];$/;"	m	struct:__anon49	access:public
__anon49::release	/usr/include/expat.h	/^  void (XMLCALL *release)(void *data);$/;"	m	struct:__anon49	access:public
__anon50::finalBuffer	/usr/include/expat.h	/^  XML_Bool finalBuffer;$/;"	m	struct:__anon50	access:public
__anon50::parsing	/usr/include/expat.h	/^  enum XML_Parsing parsing;$/;"	m	struct:__anon50	typeref:enum:__anon50::XML_Parsing	access:public
__anon51::major	/usr/include/expat.h	/^  int major;$/;"	m	struct:__anon51	access:public
__anon51::micro	/usr/include/expat.h	/^  int micro;$/;"	m	struct:__anon51	access:public
__anon51::minor	/usr/include/expat.h	/^  int minor;$/;"	m	struct:__anon51	access:public
__anon52::feature	/usr/include/expat.h	/^  enum XML_FeatureEnum  feature;$/;"	m	struct:__anon52	typeref:enum:__anon52::XML_FeatureEnum	access:public
__anon52::name	/usr/include/expat.h	/^  const XML_LChar       *name;$/;"	m	struct:__anon52	access:public
__anon52::value	/usr/include/expat.h	/^  long int              value;$/;"	m	struct:__anon52	access:public
__anon53::contentLengthB0	/usr/include/fastcgi.h	/^    unsigned char contentLengthB0;$/;"	m	struct:__anon53	access:public
__anon53::contentLengthB1	/usr/include/fastcgi.h	/^    unsigned char contentLengthB1;$/;"	m	struct:__anon53	access:public
__anon53::paddingLength	/usr/include/fastcgi.h	/^    unsigned char paddingLength;$/;"	m	struct:__anon53	access:public
__anon53::requestIdB0	/usr/include/fastcgi.h	/^    unsigned char requestIdB0;$/;"	m	struct:__anon53	access:public
__anon53::requestIdB1	/usr/include/fastcgi.h	/^    unsigned char requestIdB1;$/;"	m	struct:__anon53	access:public
__anon53::reserved	/usr/include/fastcgi.h	/^    unsigned char reserved;$/;"	m	struct:__anon53	access:public
__anon53::type	/usr/include/fastcgi.h	/^    unsigned char type;$/;"	m	struct:__anon53	access:public
__anon53::version	/usr/include/fastcgi.h	/^    unsigned char version;$/;"	m	struct:__anon53	access:public
__anon54::flags	/usr/include/fastcgi.h	/^    unsigned char flags;$/;"	m	struct:__anon54	access:public
__anon54::reserved	/usr/include/fastcgi.h	/^    unsigned char reserved[5];$/;"	m	struct:__anon54	access:public
__anon54::roleB0	/usr/include/fastcgi.h	/^    unsigned char roleB0;$/;"	m	struct:__anon54	access:public
__anon54::roleB1	/usr/include/fastcgi.h	/^    unsigned char roleB1;$/;"	m	struct:__anon54	access:public
__anon55::body	/usr/include/fastcgi.h	/^    FCGI_BeginRequestBody body;$/;"	m	struct:__anon55	access:public
__anon55::header	/usr/include/fastcgi.h	/^    FCGI_Header header;$/;"	m	struct:__anon55	access:public
__anon56::appStatusB0	/usr/include/fastcgi.h	/^    unsigned char appStatusB0;$/;"	m	struct:__anon56	access:public
__anon56::appStatusB1	/usr/include/fastcgi.h	/^    unsigned char appStatusB1;$/;"	m	struct:__anon56	access:public
__anon56::appStatusB2	/usr/include/fastcgi.h	/^    unsigned char appStatusB2;$/;"	m	struct:__anon56	access:public
__anon56::appStatusB3	/usr/include/fastcgi.h	/^    unsigned char appStatusB3;$/;"	m	struct:__anon56	access:public
__anon56::protocolStatus	/usr/include/fastcgi.h	/^    unsigned char protocolStatus;$/;"	m	struct:__anon56	access:public
__anon56::reserved	/usr/include/fastcgi.h	/^    unsigned char reserved[3];$/;"	m	struct:__anon56	access:public
__anon57::body	/usr/include/fastcgi.h	/^    FCGI_EndRequestBody body;$/;"	m	struct:__anon57	access:public
__anon57::header	/usr/include/fastcgi.h	/^    FCGI_Header header;$/;"	m	struct:__anon57	access:public
__anon58::reserved	/usr/include/fastcgi.h	/^    unsigned char reserved[7];$/;"	m	struct:__anon58	access:public
__anon58::type	/usr/include/fastcgi.h	/^    unsigned char type;    $/;"	m	struct:__anon58	access:public
__anon59::body	/usr/include/fastcgi.h	/^    FCGI_UnknownTypeBody body;$/;"	m	struct:__anon59	access:public
__anon59::header	/usr/include/fastcgi.h	/^    FCGI_Header header;$/;"	m	struct:__anon59	access:public
__anon5::attr	/usr/include/curses.h	/^    attr_t	attr;$/;"	m	struct:__anon5	access:public
__anon5::chars	/usr/include/curses.h	/^    wchar_t	chars[CCHARW_MAX];$/;"	m	struct:__anon5	access:public
__anon60::fcgx_stream	/usr/include/fcgi_stdio.h	/^    FCGX_Stream *fcgx_stream;$/;"	m	struct:__anon60	access:public
__anon60::stdio_stream	/usr/include/fcgi_stdio.h	/^    FILE *stdio_stream;$/;"	m	struct:__anon60	access:public
__anon61::pmax	/usr/include/form.h	/^  short pmax;		\/* index of last field on page			*\/$/;"	m	struct:__anon61	access:public
__anon61::pmin	/usr/include/form.h	/^  short pmin;		\/* index of first field on page			*\/$/;"	m	struct:__anon61	access:public
__anon61::smax	/usr/include/form.h	/^  short smax;		\/* index of bottom rightmost field on page	*\/$/;"	m	struct:__anon61	access:public
__anon61::smin	/usr/include/form.h	/^  short smin;		\/* index of top leftmost field on page		*\/$/;"	m	struct:__anon61	access:public
__anon62::__anon63::fts_compar	/usr/include/fts.h	/^	    int (*fts_compar)();	\/* compare function *\/$/;"	m	union:__anon62::__anon63	access:public
__anon62::fts_array	/usr/include/fts.h	/^	struct _ftsent **fts_array;	\/* sort array *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::_ftsent	access:public
__anon62::fts_child	/usr/include/fts.h	/^	struct _ftsent *fts_child;	\/* linked list of children *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::_ftsent	access:public
__anon62::fts_cur	/usr/include/fts.h	/^	struct _ftsent *fts_cur;	\/* current node *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::_ftsent	access:public
__anon62::fts_dev	/usr/include/fts.h	/^	dev_t fts_dev;			\/* starting device # *\/$/;"	m	struct:__anon62	access:public
__anon62::fts_nitems	/usr/include/fts.h	/^	int fts_nitems;			\/* elements in the sort array *\/$/;"	m	struct:__anon62	access:public
__anon62::fts_options	/usr/include/fts.h	/^	int fts_options;		\/* fts_open options, global flags *\/$/;"	m	struct:__anon62	access:public
__anon62::fts_path	/usr/include/fts.h	/^	char *fts_path;			\/* path for this descent *\/$/;"	m	struct:__anon62	access:public
__anon62::fts_pathlen	/usr/include/fts.h	/^	int fts_pathlen;		\/* sizeof(path) *\/$/;"	m	struct:__anon62	access:public
__anon62::fts_rfd	/usr/include/fts.h	/^	int fts_rfd;			\/* fd for root *\/$/;"	m	struct:__anon62	access:public
__anon64::__anon65::gl_errfunc	/usr/include/glob.h	/^		int (*gl_errfunc)(const char *, int);$/;"	m	union:__anon64::__anon65	access:public
__anon64::gl_closedir	/usr/include/glob.h	/^	void (*gl_closedir)(void *);$/;"	m	struct:__anon64	access:public
__anon64::gl_flags	/usr/include/glob.h	/^	int gl_flags;		\/* Copy of flags parameter to glob. *\/$/;"	m	struct:__anon64	access:public
__anon64::gl_lstat	/usr/include/glob.h	/^	int (*gl_lstat)(const char *, struct stat *);$/;"	m	struct:__anon64	access:public
__anon64::gl_lstat	/usr/include/glob.h	/^	int (*gl_lstat)(const char *, void *);$/;"	m	struct:__anon64	access:public
__anon64::gl_matchc	/usr/include/glob.h	/^	int gl_matchc;		\/* Count of paths matching pattern. *\/$/;"	m	struct:__anon64	access:public
__anon64::gl_offs	/usr/include/glob.h	/^	size_t gl_offs;		\/* Reserved at beginning of gl_pathv. *\/$/;"	m	struct:__anon64	access:public
__anon64::gl_opendir	/usr/include/glob.h	/^	void *(*gl_opendir)(const char *);$/;"	m	struct:__anon64	access:public
__anon64::gl_pathc	/usr/include/glob.h	/^	size_t gl_pathc;	\/* Count of total paths so far. *\/$/;"	m	struct:__anon64	access:public
__anon64::gl_pathv	/usr/include/glob.h	/^	char **gl_pathv;	\/* List of paths matching pattern. *\/$/;"	m	struct:__anon64	access:public
__anon64::gl_readdir	/usr/include/glob.h	/^	struct dirent *(*gl_readdir)(void *);$/;"	m	struct:__anon64	typeref:struct:__anon64::gl_readdir	access:public
__anon64::gl_readdir	/usr/include/glob.h	/^	void *(*gl_readdir)(void *);$/;"	m	struct:__anon64	access:public
__anon64::gl_stat	/usr/include/glob.h	/^	int (*gl_stat)(const char *, struct stat *);$/;"	m	struct:__anon64	access:public
__anon64::gl_stat	/usr/include/glob.h	/^	int (*gl_stat)(const char *, void *);$/;"	m	struct:__anon64	access:public
__anon66::quot	/usr/include/inttypes.h	/^        intmax_t quot;$/;"	m	struct:__anon66	access:public
__anon66::rem	/usr/include/inttypes.h	/^        intmax_t rem;$/;"	m	struct:__anon66	access:public
__anon6::__anon7::__anon8::fd	/usr/include/curses.h	/^	    int fd;$/;"	m	struct:__anon6::__anon7::__anon8	access:public
__anon6::__anon7::__anon8::flags	/usr/include/curses.h	/^	    unsigned int flags;$/;"	m	struct:__anon6::__anon7::__anon8	access:public
__anon6::__anon7::__anon8::result	/usr/include/curses.h	/^	    unsigned int result;$/;"	m	struct:__anon6::__anon7::__anon8	access:public
__anon6::__anon7::fev	/usr/include/curses.h	/^	} fev;				\/* _NC_EVENT_FILE *\/$/;"	m	union:__anon6::__anon7	typeref:struct:__anon6::__anon7::__anon8	access:public
__anon6::__anon7::timeout_msec	/usr/include/curses.h	/^	long timeout_msec;	\/* _NC_EVENT_TIMEOUT_MSEC *\/$/;"	m	union:__anon6::__anon7	access:public
__anon6::data	/usr/include/curses.h	/^    } data;$/;"	m	struct:__anon6	typeref:union:__anon6::__anon7	access:public
__anon6::type	/usr/include/curses.h	/^    int type;$/;"	m	struct:__anon6	access:public
__anon74::address	/usr/include/ltdl.h	/^  void       *address;$/;"	m	struct:__anon74	access:public
__anon74::name	/usr/include/ltdl.h	/^  const char *name;$/;"	m	struct:__anon74	access:public
__anon75::filename	/usr/include/ltdl.h	/^  char *	filename;	\/* file name *\/$/;"	m	struct:__anon75	access:public
__anon75::is_resident	/usr/include/ltdl.h	/^  unsigned int	is_resident:1;	\/* module can't be unloaded. *\/$/;"	m	struct:__anon75	access:public
__anon75::is_symglobal	/usr/include/ltdl.h	/^  unsigned int	is_symglobal:1;	\/* module symbols can satisfy$/;"	m	struct:__anon75	access:public
__anon75::is_symlocal	/usr/include/ltdl.h	/^  unsigned int	is_symlocal:1;	\/* module symbols are only available$/;"	m	struct:__anon75	access:public
__anon75::name	/usr/include/ltdl.h	/^  char *	name;		\/* module name *\/$/;"	m	struct:__anon75	access:public
__anon75::ref_count	/usr/include/ltdl.h	/^  int		ref_count;	\/* number of times lt_dlopened minus$/;"	m	struct:__anon75	access:public
__anon76::length	/usr/include/menu.h	/^  unsigned short length;$/;"	m	struct:__anon76	access:public
__anon76::str	/usr/include/menu.h	/^  const char* str;$/;"	m	struct:__anon76	access:public
__anon81::attr	/usr/include/ncurses.h	/^    attr_t	attr;$/;"	m	struct:__anon81	access:public
__anon81::chars	/usr/include/ncurses.h	/^    wchar_t	chars[CCHARW_MAX];$/;"	m	struct:__anon81	access:public
__anon82::__anon83::__anon84::fd	/usr/include/ncurses.h	/^	    int fd;$/;"	m	struct:__anon82::__anon83::__anon84	access:public
__anon82::__anon83::__anon84::flags	/usr/include/ncurses.h	/^	    unsigned int flags;$/;"	m	struct:__anon82::__anon83::__anon84	access:public
__anon82::__anon83::__anon84::result	/usr/include/ncurses.h	/^	    unsigned int result;$/;"	m	struct:__anon82::__anon83::__anon84	access:public
__anon82::__anon83::fev	/usr/include/ncurses.h	/^	} fev;				\/* _NC_EVENT_FILE *\/$/;"	m	union:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon84	access:public
__anon82::__anon83::timeout_msec	/usr/include/ncurses.h	/^	long timeout_msec;	\/* _NC_EVENT_TIMEOUT_MSEC *\/$/;"	m	union:__anon82::__anon83	access:public
__anon82::data	/usr/include/ncurses.h	/^    } data;$/;"	m	struct:__anon82	typeref:union:__anon82::__anon83	access:public
__anon82::type	/usr/include/ncurses.h	/^    int type;$/;"	m	struct:__anon82	access:public
__anon85::count	/usr/include/ncurses.h	/^    int count;$/;"	m	struct:__anon85	access:public
__anon85::events	/usr/include/ncurses.h	/^    _nc_event *events[1];$/;"	m	struct:__anon85	access:public
__anon85::result_flags	/usr/include/ncurses.h	/^    int result_flags;	\/* _NC_EVENT_TIMEOUT_MSEC or _NC_EVENT_FILE_READABLE *\/$/;"	m	struct:__anon85	access:public
__anon86::bstate	/usr/include/ncurses.h	/^    mmask_t bstate;	\/* button state bits *\/$/;"	m	struct:__anon86	access:public
__anon86::id	/usr/include/ncurses.h	/^    short id;		\/* ID to distinguish multiple devices *\/$/;"	m	struct:__anon86	access:public
__anon86::x	/usr/include/ncurses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon86	access:public
__anon86::y	/usr/include/ncurses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon86	access:public
__anon86::z	/usr/include/ncurses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon86	access:public
__anon87::dptr	/usr/include/ndbm.h	/^	void *dptr;$/;"	m	struct:__anon87	access:public
__anon87::dsize	/usr/include/ndbm.h	/^	size_t dsize;$/;"	m	struct:__anon87	access:public
__anon88::__opaque	/usr/include/ndbm.h	/^    char __opaque[sizeof(int) + 8 * sizeof(void *)];$/;"	m	struct:__anon88	access:public
__anon90::sid_authcount	/usr/include/ntsid.h	/^	u_int8_t		sid_authcount;$/;"	m	struct:__anon90	access:public
__anon90::sid_authorities	/usr/include/ntsid.h	/^	u_int32_t		sid_authorities[NTSID_MAX_AUTHORITIES];$/;"	m	struct:__anon90	access:public
__anon90::sid_authority	/usr/include/ntsid.h	/^	u_int8_t		sid_authority[6];$/;"	m	struct:__anon90	access:public
__anon90::sid_kind	/usr/include/ntsid.h	/^	u_int8_t		sid_kind;$/;"	m	struct:__anon90	access:public
__anon92::re_endp	/usr/include/regex.h	/^	const char *re_endp;	\/* end pointer for REG_PEND *\/$/;"	m	struct:__anon92	access:public
__anon92::re_g	/usr/include/regex.h	/^	struct re_guts *re_g;	\/* none of your business :-) *\/$/;"	m	struct:__anon92	typeref:struct:__anon92::re_guts	access:public
__anon92::re_magic	/usr/include/regex.h	/^	int re_magic;$/;"	m	struct:__anon92	access:public
__anon92::re_nsub	/usr/include/regex.h	/^	size_t re_nsub;		\/* number of parenthesized subexpressions *\/$/;"	m	struct:__anon92	access:public
__anon93::rm_eo	/usr/include/regex.h	/^	regoff_t rm_eo;		\/* end of match *\/$/;"	m	struct:__anon93	access:public
__anon93::rm_so	/usr/include/regex.h	/^	regoff_t rm_so;		\/* start of match *\/$/;"	m	struct:__anon93	access:public
__anon9::count	/usr/include/curses.h	/^    int count;$/;"	m	struct:__anon9	access:public
__anon9::events	/usr/include/curses.h	/^    _nc_event *events[1];$/;"	m	struct:__anon9	access:public
__anon9::result_flags	/usr/include/curses.h	/^    int result_flags;	\/* _NC_EVENT_TIMEOUT_MSEC or _NC_EVENT_FILE_READABLE *\/$/;"	m	struct:__anon9	access:public
__assert	/usr/include/assert.h	/^#define __assert(/;"	d
__assert	/usr/include/assert.h	/^#undef __assert$/;"	d
__attribute__	/usr/include/curses.h	/^#define __attribute__(/;"	d
__attribute__	/usr/include/ncurses.h	/^#define __attribute__(/;"	d
__bool_true_false_are_defined	/usr/include/stdbool.h	/^#define	__bool_true_false_are_defined	/;"	d
__bt_open	/usr/include/db.h	/^DB	*__bt_open(const char *, int, int, const BTREEINFO *, int);$/;"	p	signature:(const char *, int, int, const BTREEINFO *, int)
__charclasses	/usr/include/runetype.h	/^	_RuneCharClass	*__charclasses;$/;"	m	struct:__anon104	access:public
__checkint_cond_expr	/usr/include/checkint.h	/^#define	__checkint_cond_expr(/;"	d
__checkint_int32_add	/usr/include/checkint.h	/^__checkint_int32_add(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int32_div	/usr/include/checkint.h	/^#define __checkint_int32_div(/;"	d
__checkint_int32_div_signed_signed	/usr/include/checkint.h	/^__checkint_int32_div_signed_signed(int32_t x, int32_t y, int32_t* err) {$/;"	f	signature:(int32_t x, int32_t y, int32_t* err)
__checkint_int32_div_signed_unsigned	/usr/include/checkint.h	/^__checkint_int32_div_signed_unsigned(int32_t x, uint32_t y, int32_t* err) {$/;"	f	signature:(int32_t x, uint32_t y, int32_t* err)
__checkint_int32_div_unsigned_signed	/usr/include/checkint.h	/^__checkint_int32_div_unsigned_signed(uint32_t x, int32_t y, int32_t* err) {$/;"	f	signature:(uint32_t x, int32_t y, int32_t* err)
__checkint_int32_div_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_int32_div_unsigned_unsigned(uint32_t x, uint32_t y, int32_t* err) {$/;"	f	signature:(uint32_t x, uint32_t y, int32_t* err)
__checkint_int32_mul	/usr/include/checkint.h	/^__checkint_int32_mul(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int32_sub	/usr/include/checkint.h	/^__checkint_int32_sub(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int32_type_error	/usr/include/checkint.h	/^__checkint_int32_type_error(int32_t* err)  {*err |= CHECKINT_TYPE_ERROR; return -1;}$/;"	f	signature:(int32_t* err)
__checkint_int64_add	/usr/include/checkint.h	/^#define __checkint_int64_add(/;"	d
__checkint_int64_add_signed_signed	/usr/include/checkint.h	/^__checkint_int64_add_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int64_add_signed_unsigned	/usr/include/checkint.h	/^__checkint_int64_add_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_int64_add_unsigned_signed	/usr/include/checkint.h	/^__checkint_int64_add_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_int64_add_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_int64_add_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_int64_div	/usr/include/checkint.h	/^#define __checkint_int64_div(/;"	d
__checkint_int64_div_signed_signed	/usr/include/checkint.h	/^__checkint_int64_div_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int64_div_signed_unsigned	/usr/include/checkint.h	/^__checkint_int64_div_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_int64_div_unsigned_signed	/usr/include/checkint.h	/^__checkint_int64_div_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_int64_div_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_int64_div_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_int64_mul	/usr/include/checkint.h	/^#define __checkint_int64_mul(/;"	d
__checkint_int64_mul_signed_signed	/usr/include/checkint.h	/^__checkint_int64_mul_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int64_mul_signed_unsigned	/usr/include/checkint.h	/^__checkint_int64_mul_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_int64_mul_unsigned_signed	/usr/include/checkint.h	/^__checkint_int64_mul_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_int64_mul_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_int64_mul_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_int64_sub	/usr/include/checkint.h	/^#define __checkint_int64_sub(/;"	d
__checkint_int64_sub_signed_signed	/usr/include/checkint.h	/^__checkint_int64_sub_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_int64_sub_signed_unsigned	/usr/include/checkint.h	/^__checkint_int64_sub_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_int64_sub_unsigned_signed	/usr/include/checkint.h	/^__checkint_int64_sub_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_int64_sub_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_int64_sub_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_int64_type_error	/usr/include/checkint.h	/^__checkint_int64_type_error(int32_t* err)  {*err |= CHECKINT_TYPE_ERROR; return -1;}$/;"	f	signature:(int32_t* err)
__checkint_is_mixed_sign32	/usr/include/checkint.h	/^__checkint_is_mixed_sign32(int32_t x, int32_t y) {return ((x ^ y) < 0);}$/;"	f	signature:(int32_t x, int32_t y)
__checkint_is_mixed_sign64	/usr/include/checkint.h	/^__checkint_is_mixed_sign64(int64_t x, int64_t y) {return ((x ^ y) < 0);}$/;"	f	signature:(int64_t x, int64_t y)
__checkint_is_signed	/usr/include/checkint.h	/^#define __checkint_is_signed(/;"	d
__checkint_is_signed_signed	/usr/include/checkint.h	/^#define __checkint_is_signed_signed(/;"	d
__checkint_is_signed_unsigned	/usr/include/checkint.h	/^#define __checkint_is_signed_unsigned(/;"	d
__checkint_is_unsigned	/usr/include/checkint.h	/^#define __checkint_is_unsigned(/;"	d
__checkint_is_unsigned_signed	/usr/include/checkint.h	/^#define __checkint_is_unsigned_signed(/;"	d
__checkint_is_unsigned_unsigned	/usr/include/checkint.h	/^#define __checkint_is_unsigned_unsigned(/;"	d
__checkint_same_type	/usr/include/checkint.h	/^#define	__checkint_same_type(/;"	d
__checkint_uint32_add	/usr/include/checkint.h	/^__checkint_uint32_add(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint32_div	/usr/include/checkint.h	/^#define __checkint_uint32_div(/;"	d
__checkint_uint32_div_signed_signed	/usr/include/checkint.h	/^__checkint_uint32_div_signed_signed(int32_t x, int32_t y, int32_t* err) {$/;"	f	signature:(int32_t x, int32_t y, int32_t* err)
__checkint_uint32_div_signed_unsigned	/usr/include/checkint.h	/^__checkint_uint32_div_signed_unsigned(int32_t x, uint32_t y, int32_t* err) {$/;"	f	signature:(int32_t x, uint32_t y, int32_t* err)
__checkint_uint32_div_unsigned_signed	/usr/include/checkint.h	/^__checkint_uint32_div_unsigned_signed(uint32_t x, int32_t y, int32_t* err) {$/;"	f	signature:(uint32_t x, int32_t y, int32_t* err)
__checkint_uint32_div_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_uint32_div_unsigned_unsigned(uint32_t x, uint32_t y, int32_t* err) {$/;"	f	signature:(uint32_t x, uint32_t y, int32_t* err)
__checkint_uint32_mul	/usr/include/checkint.h	/^__checkint_uint32_mul(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint32_sub	/usr/include/checkint.h	/^__checkint_uint32_sub(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint32_type_error	/usr/include/checkint.h	/^__checkint_uint32_type_error(int32_t* err) {*err |= CHECKINT_TYPE_ERROR; return -1;}$/;"	f	signature:(int32_t* err)
__checkint_uint64_add	/usr/include/checkint.h	/^#define __checkint_uint64_add(/;"	d
__checkint_uint64_add_signed_signed	/usr/include/checkint.h	/^__checkint_uint64_add_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint64_add_signed_unsigned	/usr/include/checkint.h	/^__checkint_uint64_add_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_uint64_add_unsigned_signed	/usr/include/checkint.h	/^__checkint_uint64_add_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_uint64_add_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_uint64_add_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_uint64_div	/usr/include/checkint.h	/^#define __checkint_uint64_div(/;"	d
__checkint_uint64_div_signed_signed	/usr/include/checkint.h	/^__checkint_uint64_div_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint64_div_signed_unsigned	/usr/include/checkint.h	/^__checkint_uint64_div_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_uint64_div_unsigned_signed	/usr/include/checkint.h	/^__checkint_uint64_div_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_uint64_div_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_uint64_div_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_uint64_mul	/usr/include/checkint.h	/^#define __checkint_uint64_mul(/;"	d
__checkint_uint64_mul_signed_signed	/usr/include/checkint.h	/^__checkint_uint64_mul_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint64_mul_signed_unsigned	/usr/include/checkint.h	/^__checkint_uint64_mul_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_uint64_mul_unsigned_signed	/usr/include/checkint.h	/^__checkint_uint64_mul_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_uint64_mul_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_uint64_mul_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_uint64_sub	/usr/include/checkint.h	/^#define __checkint_uint64_sub(/;"	d
__checkint_uint64_sub_signed_signed	/usr/include/checkint.h	/^__checkint_uint64_sub_signed_signed(int64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, int64_t y, int32_t* err)
__checkint_uint64_sub_signed_unsigned	/usr/include/checkint.h	/^__checkint_uint64_sub_signed_unsigned(int64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(int64_t x, uint64_t y, int32_t* err)
__checkint_uint64_sub_unsigned_signed	/usr/include/checkint.h	/^__checkint_uint64_sub_unsigned_signed(uint64_t x, int64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, int64_t y, int32_t* err)
__checkint_uint64_sub_unsigned_unsigned	/usr/include/checkint.h	/^__checkint_uint64_sub_unsigned_unsigned(uint64_t x, uint64_t y, int32_t* err) {$/;"	f	signature:(uint64_t x, uint64_t y, int32_t* err)
__checkint_uint64_type_error	/usr/include/checkint.h	/^__checkint_uint64_type_error(int32_t* err) {*err |= CHECKINT_TYPE_ERROR; return -1;}$/;"	f	signature:(int32_t* err)
__darwin_nl_item	/usr/include/_types.h	/^typedef	int		__darwin_nl_item;$/;"	t
__darwin_wctrans_t	/usr/include/_types.h	/^typedef	int		__darwin_wctrans_t;$/;"	t
__darwin_wctype_t	/usr/include/_types.h	/^typedef	__uint32_t	__darwin_wctype_t;$/;"	t
__darwin_wctype_t	/usr/include/_types.h	/^typedef	unsigned long	__darwin_wctype_t;$/;"	t
__db	/usr/include/db.h	/^typedef struct __db {$/;"	s
__db::close	/usr/include/db.h	/^	int (*close)(struct __db *);$/;"	m	struct:__db	access:public
__db::del	/usr/include/db.h	/^	int (*del)(const struct __db *, const DBT *, unsigned int);$/;"	m	struct:__db	access:public
__db::fd	/usr/include/db.h	/^	int (*fd)(const struct __db *);$/;"	m	struct:__db	access:public
__db::get	/usr/include/db.h	/^	int (*get)(const struct __db *, const DBT *, DBT *, unsigned int);$/;"	m	struct:__db	access:public
__db::internal	/usr/include/db.h	/^	void *internal;			\/* Access method private. *\/$/;"	m	struct:__db	access:public
__db::put	/usr/include/db.h	/^	int (*put)(const struct __db *, DBT *, const DBT *, unsigned int);$/;"	m	struct:__db	access:public
__db::seq	/usr/include/db.h	/^	int (*seq)(const struct __db *, DBT *, DBT *, unsigned int);$/;"	m	struct:__db	access:public
__db::sync	/usr/include/db.h	/^	int (*sync)(const struct __db *, unsigned int);$/;"	m	struct:__db	access:public
__db::type	/usr/include/db.h	/^	DBTYPE type;			\/* Underlying db type. *\/$/;"	m	struct:__db	access:public
__dbpanic	/usr/include/db.h	/^void	 __dbpanic(DB *dbp);$/;"	p	signature:(DB *dbp)
__dd_buf	/usr/include/dirent.h	/^	char	*__dd_buf;	\/* data buffer *\/$/;"	m	struct:__anon16	access:public
__dd_fd	/usr/include/dirent.h	/^	int	__dd_fd;	\/* file descriptor associated with directory *\/$/;"	m	struct:__anon16	access:public
__dd_flags	/usr/include/dirent.h	/^	int	__dd_flags;	\/* flags for readdir *\/$/;"	m	struct:__anon16	access:public
__dd_len	/usr/include/dirent.h	/^	int	__dd_len;	\/* size of data buffer *\/$/;"	m	struct:__anon16	access:public
__dd_loc	/usr/include/dirent.h	/^	long	__dd_loc;	\/* offset in current buffer *\/$/;"	m	struct:__anon16	access:public
__dd_lock	/usr/include/dirent.h	/^	__darwin_pthread_mutex_t __dd_lock; \/* for thread locking *\/$/;"	m	struct:__anon16	access:public
__dd_rewind	/usr/include/dirent.h	/^	long	__dd_rewind;	\/* magic cookie for rewinding *\/$/;"	m	struct:__anon16	access:public
__dd_seek	/usr/include/dirent.h	/^	long	__dd_seek;	\/* magic cookie returned *\/$/;"	m	struct:__anon16	access:public
__dd_size	/usr/include/dirent.h	/^	long	__dd_size;	\/* amount of data returned *\/$/;"	m	struct:__anon16	access:public
__dd_td	/usr/include/dirent.h	/^	struct _telldir *__dd_td; \/* telldir position recording *\/$/;"	m	struct:__anon16	typeref:struct:__anon16::_telldir	access:public
__deprecated	/usr/include/utmp.h	/^}					__deprecated;$/;"	v	typeref:struct:lastlog
__deprecated	/usr/include/utmp.h	/^}					__deprecated;$/;"	v	typeref:struct:utmp
__encoding	/usr/include/runetype.h	/^	char		__encoding[32];	\/* ASCII name of this encoding *\/$/;"	m	struct:__anon104	access:public
__fegetfltrounds	/usr/include/float.h	/^extern int __fegetfltrounds( void ); $/;"	p	signature:( void )
__h_errno_set	/usr/include/resolv.h	/^#define __h_errno_set /;"	d
__h_errno_set	/usr/include/resolv.h	/^void __h_errno_set(struct __res_state *res, int err);$/;"	p	signature:(struct __res_state *res, int err)
__hash_open	/usr/include/db.h	/^DB	*__hash_open(const char *, int, int, const HASHINFO *, int);$/;"	p	signature:(const char *, int, int, const HASHINFO *, int)
__invalid_rune	/usr/include/runetype.h	/^	__darwin_rune_t	__invalid_rune;$/;"	m	struct:__anon104	access:public
__isctype	/usr/include/ctype.h	/^__isctype(__darwin_ct_rune_t _c, unsigned long _f)$/;"	f	signature:(__darwin_ct_rune_t _c, unsigned long _f)
__istype	/usr/include/ctype.h	/^__istype(__darwin_ct_rune_t _c, unsigned long _f)$/;"	f	signature:(__darwin_ct_rune_t _c, unsigned long _f)
__ld_allocator	/usr/include/launch.h	/^#define __ld_allocator /;"	d
__ld_getter	/usr/include/launch.h	/^#define __ld_getter /;"	d
__ld_iterator	/usr/include/launch.h	/^#define __ld_iterator(/;"	d
__ld_normal	/usr/include/launch.h	/^#define __ld_normal /;"	d
__ld_setter	/usr/include/launch.h	/^#define __ld_setter /;"	d
__magic	/usr/include/runetype.h	/^	char		__magic[8];	\/* Magic saying what version we are *\/$/;"	m	struct:__anon104	access:public
__map	/usr/include/runetype.h	/^	__darwin_rune_t	__map;		\/* What first maps to in maps *\/$/;"	m	struct:__anon101	access:public
__maplower	/usr/include/runetype.h	/^	__darwin_rune_t	__maplower[_CACHED_RUNES];$/;"	m	struct:__anon104	access:public
__maplower_ext	/usr/include/runetype.h	/^	_RuneRange	__maplower_ext;$/;"	m	struct:__anon104	access:public
__mapupper	/usr/include/runetype.h	/^	__darwin_rune_t	__mapupper[_CACHED_RUNES];$/;"	m	struct:__anon104	access:public
__mapupper_ext	/usr/include/runetype.h	/^	_RuneRange	__mapupper_ext;$/;"	m	struct:__anon104	access:public
__mask	/usr/include/runetype.h	/^	__uint32_t	__mask;		\/* charclass mask *\/$/;"	m	struct:__anon103	access:public
__maskrune	/usr/include/ctype.h	/^__maskrune(__darwin_ct_rune_t _c, unsigned long _f)$/;"	f	signature:(__darwin_ct_rune_t _c, unsigned long _f)
__maskrune	/usr/include/ctype.h	/^int             	__maskrune(__darwin_ct_rune_t, unsigned long);   $/;"	p	signature:(__darwin_ct_rune_t, unsigned long)
__max	/usr/include/runetype.h	/^	__darwin_rune_t	__max;		\/* Last rune (inclusive) of the range *\/$/;"	m	struct:__anon101	access:public
__min	/usr/include/runetype.h	/^	__darwin_rune_t	__min;		\/* First rune of the range *\/$/;"	m	struct:__anon101	access:public
__nCheck	/usr/include/AssertMacros.h	/^	#define __nCheck(/;"	d
__nCheck_String	/usr/include/AssertMacros.h	/^	#define __nCheck_String(/;"	d
__nRequire	/usr/include/AssertMacros.h	/^	#define __nRequire(/;"	d
__nRequire_Action	/usr/include/AssertMacros.h	/^	#define __nRequire_Action(/;"	d
__nRequire_Action_Quiet	/usr/include/AssertMacros.h	/^	#define __nRequire_Action_Quiet(/;"	d
__nRequire_Action_String	/usr/include/AssertMacros.h	/^	#define __nRequire_Action_String(/;"	d
__nRequire_Quiet	/usr/include/AssertMacros.h	/^	#define __nRequire_Quiet(/;"	d
__nRequire_String	/usr/include/AssertMacros.h	/^	#define __nRequire_String(/;"	d
__nVerify	/usr/include/AssertMacros.h	/^	#define __nVerify(/;"	d
__nVerify_String	/usr/include/AssertMacros.h	/^	#define __nVerify_String(/;"	d
__name	/usr/include/runetype.h	/^	char		__name[14];	\/* CHARCLASS_NAME_MAX = 14 *\/$/;"	m	struct:__anon103	access:public
__ncharclasses	/usr/include/runetype.h	/^	int		__ncharclasses;$/;"	m	struct:__anon104	access:public
__need_NULL	/usr/include/stddef.h	/^#undef __need_NULL$/;"	d
__need_ptrdiff_t	/usr/include/stddef.h	/^#undef __need_ptrdiff_t$/;"	d
__need_size_t	/usr/include/stddef.h	/^#undef __need_size_t$/;"	d
__need_struct_timespec	/usr/include/time.h	/^#define __need_struct_timespec$/;"	d
__need_wchar_t	/usr/include/stddef.h	/^#undef __need_wchar_t$/;"	d
__need_wint_t	/usr/include/stddef.h	/^#undef __need_wint_t$/;"	d
__nranges	/usr/include/runetype.h	/^	int		__nranges;	\/* Number of ranges stored *\/$/;"	m	struct:__anon102	access:public
__ns_cert_types	/usr/include/nameser.h	/^typedef enum __ns_cert_types {$/;"	g
__ns_class	/usr/include/nameser.h	/^typedef enum __ns_class {$/;"	g
__ns_flag	/usr/include/nameser.h	/^typedef enum __ns_flag {$/;"	g
__ns_key_types	/usr/include/nameser.h	/^typedef enum __ns_key_types {$/;"	g
__ns_msg	/usr/include/nameser.h	/^typedef struct __ns_msg {$/;"	s
__ns_msg::_counts	/usr/include/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg	access:public
__ns_msg::_eom	/usr/include/nameser.h	/^	const u_char	*_msg, *_eom;$/;"	m	struct:__ns_msg	access:public
__ns_msg::_flags	/usr/include/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg	access:public
__ns_msg::_id	/usr/include/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg	access:public
__ns_msg::_msg	/usr/include/nameser.h	/^	const u_char	*_msg, *_eom;$/;"	m	struct:__ns_msg	access:public
__ns_msg::_msg_ptr	/usr/include/nameser.h	/^	const u_char	*_msg_ptr;$/;"	m	struct:__ns_msg	access:public
__ns_msg::_rrnum	/usr/include/nameser.h	/^	int		_rrnum;$/;"	m	struct:__ns_msg	access:public
__ns_msg::_sect	/usr/include/nameser.h	/^	ns_sect		_sect;$/;"	m	struct:__ns_msg	access:public
__ns_msg::_sections	/usr/include/nameser.h	/^	const u_char	*_sections[ns_s_max];$/;"	m	struct:__ns_msg	access:public
__ns_opcode	/usr/include/nameser.h	/^typedef enum __ns_opcode {$/;"	g
__ns_rcode	/usr/include/nameser.h	/^typedef	enum __ns_rcode {$/;"	g
__ns_rr	/usr/include/nameser.h	/^typedef	struct __ns_rr {$/;"	s
__ns_rr::name	/usr/include/nameser.h	/^	char		name[NS_MAXDNAME];$/;"	m	struct:__ns_rr	access:public
__ns_rr::rdata	/usr/include/nameser.h	/^	const u_char *	rdata;$/;"	m	struct:__ns_rr	access:public
__ns_rr::rdlength	/usr/include/nameser.h	/^	u_int16_t	rdlength;$/;"	m	struct:__ns_rr	access:public
__ns_rr::rr_class	/usr/include/nameser.h	/^	u_int16_t	rr_class;$/;"	m	struct:__ns_rr	access:public
__ns_rr::ttl	/usr/include/nameser.h	/^	u_int32_t	ttl;$/;"	m	struct:__ns_rr	access:public
__ns_rr::type	/usr/include/nameser.h	/^	u_int16_t	type;$/;"	m	struct:__ns_rr	access:public
__ns_sect	/usr/include/nameser.h	/^typedef enum __ns_sect {$/;"	g
__ns_type	/usr/include/nameser.h	/^typedef enum __ns_type {$/;"	g
__ns_update_operation	/usr/include/nameser.h	/^typedef enum __ns_update_operation {$/;"	g
__offsetof	/usr/include/stddef.h	/^#define __offsetof(/;"	d
__opaque	/usr/include/ndbm.h	/^    char __opaque[sizeof(int) + 8 * sizeof(void *)];$/;"	m	struct:__anon88	access:public
__opaque	/usr/include/sched.h	/^struct sched_param { int sched_priority;  char __opaque[__SCHED_PARAM_SIZE__]; };$/;"	m	struct:sched_param	access:public
__opendir2	/usr/include/dirent.h	/^DIR *__opendir2(const char *, int) __DARWIN_ALIAS_I(__opendir2);$/;"	v
__p_cert_syms	/usr/include/resolv.h	/^#define __p_cert_syms /;"	d
__p_class_syms	/usr/include/resolv.h	/^#define __p_class_syms /;"	d
__p_key_syms	/usr/include/resolv.h	/^#define __p_key_syms /;"	d
__p_rcode_syms	/usr/include/resolv.h	/^#define __p_rcode_syms /;"	d
__p_type_syms	/usr/include/resolv.h	/^#define __p_type_syms /;"	d
__printflike	/usr/include/asl.h	/^#define __printflike(/;"	d
__ranges	/usr/include/runetype.h	/^	_RuneEntry	*__ranges;	\/* Pointer to the ranges *\/$/;"	m	struct:__anon102	access:public
__rec_open	/usr/include/db.h	/^DB	*__rec_open(const char *, int, int, const RECNOINFO *, int);$/;"	p	signature:(const char *, int, int, const RECNOINFO *, int)
__res_state	/usr/include/resolv.h	/^#define __res_state /;"	d
__res_state	/usr/include/resolv.h	/^struct __res_state {$/;"	s
__res_state::__anon98::addr	/usr/include/resolv.h	/^		struct in_addr	addr;$/;"	m	struct:__res_state::__anon98	typeref:struct:__res_state::__anon98::in_addr	access:public
__res_state::__anon98::mask	/usr/include/resolv.h	/^		u_int32_t	mask;$/;"	m	struct:__res_state::__anon98	access:public
__res_state::__anon99::__anon100::ext	/usr/include/resolv.h	/^			struct __res_state_ext *ext;	\/* extention for IPv6 *\/$/;"	m	struct:__res_state::__anon99::__anon100	typeref:struct:__res_state::__anon99::__anon100::__res_state_ext	access:public
__res_state::__anon99::__anon100::nscount	/usr/include/resolv.h	/^			u_int16_t		nscount;$/;"	m	struct:__res_state::__anon99::__anon100	access:public
__res_state::__anon99::__anon100::nssocks	/usr/include/resolv.h	/^			int			nssocks[MAXNS];$/;"	m	struct:__res_state::__anon99::__anon100	access:public
__res_state::__anon99::__anon100::nstimes	/usr/include/resolv.h	/^			u_int16_t		nstimes[MAXNS];	\/* ms. *\/$/;"	m	struct:__res_state::__anon99::__anon100	access:public
__res_state::__anon99::_ext	/usr/include/resolv.h	/^		} _ext;$/;"	m	union:__res_state::__anon99	typeref:struct:__res_state::__anon99::__anon100	access:public
__res_state::__anon99::pad	/usr/include/resolv.h	/^		char	pad[72 - 4*sizeof (int) - 2*sizeof (void *)];$/;"	m	union:__res_state::__anon99	access:public
__res_state::_flags	/usr/include/resolv.h	/^	u_int	_flags;			\/* PRIVATE: see below *\/$/;"	m	struct:__res_state	access:public
__res_state::_pad	/usr/include/resolv.h	/^	u_int	_pad;			\/* make _u 64 bit aligned *\/$/;"	m	struct:__res_state	access:public
__res_state::_u	/usr/include/resolv.h	/^	} _u;$/;"	m	struct:__res_state	typeref:union:__res_state::__anon99	access:public
__res_state::_vcsock	/usr/include/resolv.h	/^	int	_vcsock;		\/* PRIVATE: for res_send VC i\/o *\/$/;"	m	struct:__res_state	access:public
__res_state::defdname	/usr/include/resolv.h	/^	char	defdname[256];		\/* default domain (deprecated) *\/$/;"	m	struct:__res_state	access:public
__res_state::dnsrch	/usr/include/resolv.h	/^	char	*dnsrch[MAXDNSRCH+1];	\/* components of domain to search *\/$/;"	m	struct:__res_state	access:public
__res_state::id	/usr/include/resolv.h	/^	u_short	id;			\/* current message id *\/$/;"	m	struct:__res_state	access:public
__res_state::ndots	/usr/include/resolv.h	/^	unsigned ndots:4;		\/* threshold for initial abs. query *\/$/;"	m	struct:__res_state	access:public
__res_state::nsaddr_list	/usr/include/resolv.h	/^		nsaddr_list[MAXNS];	\/* address of name server *\/$/;"	m	struct:__res_state	typeref:struct:__res_state::sockaddr_in	access:public
__res_state::nscount	/usr/include/resolv.h	/^	int	nscount;		\/* number of name servers *\/$/;"	m	struct:__res_state	access:public
__res_state::nsort	/usr/include/resolv.h	/^	unsigned nsort:4;		\/* number of elements in sort_list[] *\/$/;"	m	struct:__res_state	access:public
__res_state::options	/usr/include/resolv.h	/^	u_int	options;		\/* option flags - see below. *\/$/;"	m	struct:__res_state	access:public
__res_state::options	/usr/include/resolv.h	/^	u_long	options;		\/* option flags - see below. *\/$/;"	m	struct:__res_state	access:public
__res_state::pfcode	/usr/include/resolv.h	/^	u_int	pfcode;			\/* RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state	access:public
__res_state::pfcode	/usr/include/resolv.h	/^	u_long	pfcode;			\/* RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state	access:public
__res_state::qhook	/usr/include/resolv.h	/^	res_send_qhook qhook;		\/* query hook *\/$/;"	m	struct:__res_state	access:public
__res_state::res_h_errno	/usr/include/resolv.h	/^	int	res_h_errno;		\/* last one set for this context *\/$/;"	m	struct:__res_state	access:public
__res_state::retrans	/usr/include/resolv.h	/^	int	retrans;	 	\/* retransmition time interval *\/$/;"	m	struct:__res_state	access:public
__res_state::retry	/usr/include/resolv.h	/^	int	retry;			\/* number of times to transmit (attempts, not retries) *\/$/;"	m	struct:__res_state	access:public
__res_state::rhook	/usr/include/resolv.h	/^	res_send_rhook rhook;		\/* response hook *\/$/;"	m	struct:__res_state	access:public
__res_state::sort_list	/usr/include/resolv.h	/^	} sort_list[MAXRESOLVSORT];$/;"	m	struct:__res_state	typeref:struct:__res_state::__anon98	access:public
__res_state::unused	/usr/include/resolv.h	/^	char	unused[3];$/;"	m	struct:__res_state	access:public
__res_state_ext	/usr/include/resolv.h	/^#define __res_state_ext /;"	d
__res_vinit	/usr/include/resolv.h	/^#define __res_vinit	/;"	d
__res_vinit	/usr/include/resolv.h	/^int		__res_vinit __P((res_state, int));$/;"	p	signature:(res_state, int)
__runetype	/usr/include/runetype.h	/^	__uint32_t	__runetype[_CACHED_RUNES];$/;"	m	struct:__anon104	access:public
__runetype_ext	/usr/include/runetype.h	/^	_RuneRange	__runetype_ext;$/;"	m	struct:__anon104	access:public
__sFILE	/usr/include/stdio.h	/^typedef	struct __sFILE {$/;"	s
__sFILE::_bf	/usr/include/stdio.h	/^	struct	__sbuf _bf;	\/* the buffer (at least 1 byte, if !NULL) *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sbuf	access:public
__sFILE::_blksize	/usr/include/stdio.h	/^	int	_blksize;	\/* stat.st_blksize (may be != _bf._size) *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_close	/usr/include/stdio.h	/^	int	(*_close)(void *);$/;"	m	struct:__sFILE	access:public
__sFILE::_cookie	/usr/include/stdio.h	/^	void	*_cookie;	\/* cookie passed to io functions *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_extra	/usr/include/stdio.h	/^	struct __sFILEX *_extra; \/* additions to FILE to not break ABI *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sFILEX	access:public
__sFILE::_file	/usr/include/stdio.h	/^	short	_file;		\/* fileno, if Unix descriptor, else -1 *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_flags	/usr/include/stdio.h	/^	short	_flags;		\/* flags, below; this FILE is free if 0 *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_lb	/usr/include/stdio.h	/^	struct	__sbuf _lb;	\/* buffer for fgetln() *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sbuf	access:public
__sFILE::_lbfsize	/usr/include/stdio.h	/^	int	_lbfsize;	\/* 0 or -_bf._size, for inline putc *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_nbuf	/usr/include/stdio.h	/^	unsigned char _nbuf[1];	\/* guarantee a getc() buffer *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_offset	/usr/include/stdio.h	/^	fpos_t	_offset;	\/* current lseek offset (see WARNING) *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_p	/usr/include/stdio.h	/^	unsigned char *_p;	\/* current position in (some) buffer *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_r	/usr/include/stdio.h	/^	int	_r;		\/* read space left for getc() *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_read	/usr/include/stdio.h	/^	int	(*_read) (void *, char *, int);$/;"	m	struct:__sFILE	access:public
__sFILE::_seek	/usr/include/stdio.h	/^	fpos_t	(*_seek) (void *, fpos_t, int);$/;"	m	struct:__sFILE	access:public
__sFILE::_ub	/usr/include/stdio.h	/^	struct	__sbuf _ub;	\/* ungetc buffer *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sbuf	access:public
__sFILE::_ubuf	/usr/include/stdio.h	/^	unsigned char _ubuf[3];	\/* guarantee an ungetc() buffer *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_ur	/usr/include/stdio.h	/^	int	_ur;		\/* saved _r when _r is counting ungetc data *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_w	/usr/include/stdio.h	/^	int	_w;		\/* write space left for putc() *\/$/;"	m	struct:__sFILE	access:public
__sFILE::_write	/usr/include/stdio.h	/^	int	(*_write)(void *, const char *, int);$/;"	m	struct:__sFILE	access:public
__sbuf	/usr/include/stdio.h	/^struct __sbuf {$/;"	s
__sbuf::_base	/usr/include/stdio.h	/^	unsigned char	*_base;$/;"	m	struct:__sbuf	access:public
__sbuf::_size	/usr/include/stdio.h	/^	int		_size;$/;"	m	struct:__sbuf	access:public
__sclearerr	/usr/include/stdio.h	/^#define	__sclearerr(/;"	d
__sfeof	/usr/include/stdio.h	/^#define	__sfeof(/;"	d
__sferror	/usr/include/stdio.h	/^#define	__sferror(/;"	d
__sfileno	/usr/include/stdio.h	/^#define	__sfileno(/;"	d
__sgetc	/usr/include/stdio.h	/^#define	__sgetc(/;"	d
__sgetrune	/usr/include/rune.h	/^#define __sgetrune /;"	d
__sgetrune	/usr/include/runetype.h	/^	__darwin_rune_t	(*__sgetrune)(const char *, __darwin_size_t, char const **);$/;"	m	struct:__anon104	access:public
__sigbits	/usr/include/signal.h	/^__sigbits(int __signo)$/;"	f	signature:(int __signo)
__space	/usr/include/resolv.h	/^	char			__space[128];   \/* max size *\/$/;"	m	union:res_sockaddr_union	access:public
__sputc	/usr/include/stdio.h	/^static __inline int __sputc(int _c, FILE *_p) {$/;"	f	signature:(int _c, FILE *_p)
__sputrune	/usr/include/rune.h	/^#define __sputrune /;"	d
__sputrune	/usr/include/runetype.h	/^	int		(*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);$/;"	m	struct:__anon104	access:public
__srget	/usr/include/stdio.h	/^int	__srget(FILE *);$/;"	p	signature:(FILE *)
__stdcall	/usr/include/iodbcunix.h	/^#define __stdcall$/;"	d
__strfmonlike	/usr/include/_types.h	/^#define __strfmonlike(/;"	d
__strftimelike	/usr/include/_types.h	/^#define __strftimelike(/;"	d
__svfscanf	/usr/include/stdio.h	/^int	__svfscanf(FILE *, const char *, va_list) __DARWIN_LDBL_COMPAT(__svfscanf);$/;"	v
__swbuf	/usr/include/stdio.h	/^int	__swbuf(int, FILE *);$/;"	p	signature:(int, FILE *)
__tolower	/usr/include/ctype.h	/^__darwin_ct_rune_t	__tolower(__darwin_ct_rune_t);$/;"	p	signature:(__darwin_ct_rune_t)
__tolower	/usr/include/ctype.h	/^__tolower(__darwin_ct_rune_t _c)$/;"	f	signature:(__darwin_ct_rune_t _c)
__toupper	/usr/include/ctype.h	/^__darwin_ct_rune_t	__toupper(__darwin_ct_rune_t);$/;"	p	signature:(__darwin_ct_rune_t)
__toupper	/usr/include/ctype.h	/^__toupper(__darwin_ct_rune_t _c)$/;"	f	signature:(__darwin_ct_rune_t _c)
__types	/usr/include/runetype.h	/^	__uint32_t	*__types;	\/* Array of types in range *\/$/;"	m	struct:__anon101	access:public
__variable	/usr/include/runetype.h	/^	void		*__variable;	\/* Data which depends on the encoding *\/$/;"	m	struct:__anon104	access:public
__variable_len	/usr/include/runetype.h	/^	int		__variable_len;	\/* how long that data is *\/$/;"	m	struct:__anon104	access:public
__wcwidth	/usr/include/ctype.h	/^__wcwidth(__darwin_ct_rune_t _c)$/;"	f	signature:(__darwin_ct_rune_t _c)
_attrs	/usr/include/curses.h	/^	attr_t  _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_attrs	/usr/include/ncurses.h	/^	attr_t  _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_base	/usr/include/stdio.h	/^	unsigned char	*_base;$/;"	m	struct:__sbuf	access:public
_baudrate	/usr/include/term.h	/^    int		_baudrate;	\/* used to compute padding *\/$/;"	m	struct:term	access:public
_begx	/usr/include/curses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_begx	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_begy	/usr/include/curses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_begy	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_bf	/usr/include/stdio.h	/^	struct	__sbuf _bf;	\/* the buffer (at least 1 byte, if !NULL) *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sbuf	access:public
_bit_byte	/usr/include/bitstring.h	/^#define	_bit_byte(/;"	d
_bit_mask	/usr/include/bitstring.h	/^#define	_bit_mask(/;"	d
_bkgd	/usr/include/curses.h	/^	chtype  _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkgd	/usr/include/ncurses.h	/^	chtype  _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkgrnd	/usr/include/curses.h	/^	cchar_t  _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkgrnd	/usr/include/ncurses.h	/^	cchar_t  _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkt	/usr/include/mpool.h	/^typedef struct _bkt {$/;"	s
_bkt::flags	/usr/include/mpool.h	/^	u_int8_t flags;			\/* flags *\/$/;"	m	struct:_bkt	access:public
_bkt::hq	/usr/include/mpool.h	/^	TAILQ_ENTRY(_bkt) hq;		\/* hash queue *\/$/;"	m	struct:_bkt	access:public
_bkt::page	/usr/include/mpool.h	/^	void    *page;			\/* page *\/$/;"	m	struct:_bkt	access:public
_bkt::pgno	/usr/include/mpool.h	/^	pgno_t   pgno;			\/* page number *\/$/;"	m	struct:_bkt	access:public
_bkt::q	/usr/include/mpool.h	/^	TAILQ_ENTRY(_bkt) q;		\/* lru queue *\/$/;"	m	struct:_bkt	access:public
_blksize	/usr/include/stdio.h	/^	int	_blksize;	\/* stat.st_blksize (may be != _bf._size) *\/$/;"	m	struct:__sFILE	access:public
_cancelled	/usr/include/mpi.h	/^  int _cancelled;$/;"	m	struct:ompi_status_public_t	access:public
_cdecl	/usr/include/iodbcunix.h	/^#define _cdecl$/;"	d
_clear	/usr/include/curses.h	/^	bool	_clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_clear	/usr/include/ncurses.h	/^	bool	_clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_close	/usr/include/stdio.h	/^	int	(*_close)(void *);$/;"	m	struct:__sFILE	access:public
_cookie	/usr/include/stdio.h	/^	void	*_cookie;	\/* cookie passed to io functions *\/$/;"	m	struct:__sFILE	access:public
_count	/usr/include/mpi.h	/^  int _count;$/;"	m	struct:ompi_status_public_t	access:public
_counts	/usr/include/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg	access:public
_curx	/usr/include/curses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_curx	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_cury	/usr/include/curses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_cury	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_delay	/usr/include/curses.h	/^	int	_delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_delay	/usr/include/ncurses.h	/^	int	_delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_el_fn_complete	/usr/include/histedit.h	/^unsigned char	_el_fn_complete(EditLine *, int);$/;"	p	signature:(EditLine *, int)
_eom	/usr/include/nameser.h	/^	const u_char	*_msg, *_eom;$/;"	m	struct:__ns_msg	access:public
_ext	/usr/include/resolv.h	/^		} _ext;$/;"	m	union:__res_state::__anon99	typeref:struct:__res_state::__anon99::__anon100	access:public
_extra	/usr/include/stdio.h	/^	struct __sFILEX *_extra; \/* additions to FILE to not break ABI *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sFILEX	access:public
_file	/usr/include/stdio.h	/^	short	_file;		\/* fileno, if Unix descriptor, else -1 *\/$/;"	m	struct:__sFILE	access:public
_flags	/usr/include/curses.h	/^	short   _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_flags	/usr/include/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg	access:public
_flags	/usr/include/ncurses.h	/^	short   _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_flags	/usr/include/resolv.h	/^	u_int	_flags;			\/* PRIVATE: see below *\/$/;"	m	struct:__res_state	access:public
_flags	/usr/include/stdio.h	/^	short	_flags;		\/* flags, below; this FILE is free if 0 *\/$/;"	m	struct:__sFILE	access:public
_ftsent	/usr/include/fts.h	/^typedef struct _ftsent {$/;"	s
_ftsent::fts_accpath	/usr/include/fts.h	/^	char *fts_accpath;		\/* access path *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_cycle	/usr/include/fts.h	/^	struct _ftsent *fts_cycle;	\/* cycle node *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
_ftsent::fts_dev	/usr/include/fts.h	/^	dev_t fts_dev;			\/* device *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_errno	/usr/include/fts.h	/^	int fts_errno;			\/* errno for this node *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_flags	/usr/include/fts.h	/^	unsigned short fts_flags;	\/* private flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_info	/usr/include/fts.h	/^	unsigned short fts_info;	\/* user flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_ino	/usr/include/fts.h	/^	ino_t fts_ino;			\/* inode *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_instr	/usr/include/fts.h	/^	unsigned short fts_instr;	\/* fts_set() instructions *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_level	/usr/include/fts.h	/^	short fts_level;		\/* depth (-1 to N) *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_link	/usr/include/fts.h	/^	struct _ftsent *fts_link;	\/* next file in directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
_ftsent::fts_name	/usr/include/fts.h	/^	char fts_name[1];		\/* file name *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_namelen	/usr/include/fts.h	/^	unsigned short fts_namelen;	\/* strlen(fts_name) *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_nlink	/usr/include/fts.h	/^	nlink_t fts_nlink;		\/* link count *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_number	/usr/include/fts.h	/^	long fts_number;	        \/* local numeric value *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_parent	/usr/include/fts.h	/^	struct _ftsent *fts_parent;	\/* parent directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
_ftsent::fts_path	/usr/include/fts.h	/^	char *fts_path;			\/* root path *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_pathlen	/usr/include/fts.h	/^	unsigned short fts_pathlen;	\/* strlen(fts_path) *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_pointer	/usr/include/fts.h	/^	void *fts_pointer;	        \/* local address value *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_statp	/usr/include/fts.h	/^	struct stat *fts_statp;		\/* stat(2) information *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::stat	access:public
_ftsent::fts_symfd	/usr/include/fts.h	/^	int fts_symfd;			\/* fd for symlink *\/$/;"	m	struct:_ftsent	access:public
_getlong	/usr/include/resolv.h	/^#define _getlong	/;"	d
_getlong	/usr/include/resolv.h	/^u_int32_t	_getlong __P((const u_char *src));$/;"	p	signature:(const u_char *src)
_getshort	/usr/include/resolv.h	/^#define _getshort	/;"	d
_getshort	/usr/include/resolv.h	/^u_int16_t	_getshort __P((const u_char *src));$/;"	p	signature:(const u_char *src)
_id	/usr/include/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg	access:public
_idcok	/usr/include/curses.h	/^	bool	_idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_idcok	/usr/include/ncurses.h	/^	bool	_idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_idlok	/usr/include/curses.h	/^	bool	_idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_idlok	/usr/include/ncurses.h	/^	bool	_idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_immed	/usr/include/curses.h	/^	bool	_immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_immed	/usr/include/ncurses.h	/^	bool	_immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_int_to_time	/usr/include/timeconv.h	/^time_t _int_to_time(int tint);$/;"	p	signature:(int tint)
_lb	/usr/include/stdio.h	/^	struct	__sbuf _lb;	\/* buffer for fgetln() *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sbuf	access:public
_lbfsize	/usr/include/stdio.h	/^	int	_lbfsize;	\/* 0 or -_bf._size, for inline putc *\/$/;"	m	struct:__sFILE	access:public
_leaveok	/usr/include/curses.h	/^	bool	_leaveok;	\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_leaveok	/usr/include/ncurses.h	/^	bool	_leaveok;	\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_line	/usr/include/curses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_line	/usr/include/ncurses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_long_to_time	/usr/include/timeconv.h	/^time_t _long_to_time(long tlong);$/;"	p	signature:(long tlong)
_maxx	/usr/include/curses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_maxx	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_maxy	/usr/include/curses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_maxy	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_msg	/usr/include/nameser.h	/^	const u_char	*_msg, *_eom;$/;"	m	struct:__ns_msg	access:public
_msg_ptr	/usr/include/nameser.h	/^	const u_char	*_msg_ptr;$/;"	m	struct:__ns_msg	access:public
_nbuf	/usr/include/stdio.h	/^	unsigned char _nbuf[1];	\/* guarantee a getc() buffer *\/$/;"	m	struct:__sFILE	access:public
_nc_event	/usr/include/curses.h	/^} _nc_event;$/;"	t	typeref:struct:__anon6
_nc_event	/usr/include/ncurses.h	/^} _nc_event;$/;"	t	typeref:struct:__anon82
_nc_eventlist	/usr/include/curses.h	/^} _nc_eventlist;$/;"	t	typeref:struct:__anon9
_nc_eventlist	/usr/include/ncurses.h	/^} _nc_eventlist;$/;"	t	typeref:struct:__anon85
_nc_tinfo_fkeys	/usr/include/tic.h	/^#define	_nc_tinfo_fkeys	/;"	d
_node	/usr/include/strhash.h	/^typedef struct _node {$/;"	s
_node::data	/usr/include/strhash.h	/^    void *data;$/;"	m	struct:_node	access:public
_node::key	/usr/include/strhash.h	/^    char *key;$/;"	m	struct:_node	access:public
_node::next	/usr/include/strhash.h	/^    struct _node *next;$/;"	m	struct:_node	typeref:struct:_node::_node	access:public
_notimeout	/usr/include/curses.h	/^	bool	_notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_notimeout	/usr/include/ncurses.h	/^	bool	_notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_ns_flagdata	/usr/include/nameser.h	/^#define _ns_flagdata /;"	d
_ns_flagdata	/usr/include/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	s
_ns_flagdata::mask	/usr/include/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	m	struct:_ns_flagdata	access:public
_ns_flagdata::shift	/usr/include/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	m	struct:_ns_flagdata	access:public
_offset	/usr/include/stdio.h	/^	fpos_t	_offset;	\/* current lseek offset (see WARNING) *\/$/;"	m	struct:__sFILE	access:public
_p	/usr/include/stdio.h	/^	unsigned char *_p;	\/* current position in (some) buffer *\/$/;"	m	struct:__sFILE	access:public
_pad	/usr/include/curses.h	/^	} _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_pad	/usr/include/ncurses.h	/^	} _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_pad	/usr/include/resolv.h	/^	u_int	_pad;			\/* make _u 64 bit aligned *\/$/;"	m	struct:__res_state	access:public
_pad_bottom	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_pad_bottom	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_pad_left	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_pad_left	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_pad_right	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_pad_right	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_pad_top	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_pad_top	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_pad_x	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_pad_x	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_pad_y	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_pad_y	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_parent	/usr/include/curses.h	/^	WINDOW	*_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_parent	/usr/include/ncurses.h	/^	WINDOW	*_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_parx	/usr/include/curses.h	/^	int	_parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_parx	/usr/include/ncurses.h	/^	int	_parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_pary	/usr/include/curses.h	/^	int	_pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_pary	/usr/include/ncurses.h	/^	int	_pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_r	/usr/include/stdio.h	/^	int	_r;		\/* read space left for getc() *\/$/;"	m	struct:__sFILE	access:public
_read	/usr/include/stdio.h	/^	int	(*_read) (void *, char *, int);$/;"	m	struct:__sFILE	access:public
_regbottom	/usr/include/curses.h	/^	NCURSES_SIZE_T _regbottom; \/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_regbottom	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _regbottom; \/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_regtop	/usr/include/curses.h	/^	NCURSES_SIZE_T _regtop;	\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_regtop	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _regtop;	\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_rrnum	/usr/include/nameser.h	/^	int		_rrnum;$/;"	m	struct:__ns_msg	access:public
_scroll	/usr/include/curses.h	/^	bool	_scroll;	\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_scroll	/usr/include/ncurses.h	/^	bool	_scroll;	\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_sect	/usr/include/nameser.h	/^	ns_sect		_sect;$/;"	m	struct:__ns_msg	access:public
_sections	/usr/include/nameser.h	/^	const u_char	*_sections[ns_s_max];$/;"	m	struct:__ns_msg	access:public
_seek	/usr/include/stdio.h	/^	fpos_t	(*_seek) (void *, fpos_t, int);$/;"	m	struct:__sFILE	access:public
_sg_sa	/usr/include/tcpd.h	/^	struct sockaddr	_sg_sa;$/;"	m	union:sockaddr_gen::__anon120	typeref:struct:sockaddr_gen::__anon120::sockaddr	access:public
_sg_sin	/usr/include/tcpd.h	/^	struct sockaddr_in	_sg_sin;$/;"	m	union:sockaddr_gen::__anon120	typeref:struct:sockaddr_gen::__anon120::sockaddr_in	access:public
_sg_sin6	/usr/include/tcpd.h	/^	struct sockaddr_in6	_sg_sin6;$/;"	m	union:sockaddr_gen::__anon120	typeref:struct:sockaddr_gen::__anon120::sockaddr_in6	access:public
_size	/usr/include/stdio.h	/^	int		_size;$/;"	m	struct:__sbuf	access:public
_stringlist	/usr/include/stringlist.h	/^typedef struct _stringlist {$/;"	s
_stringlist::sl_cur	/usr/include/stringlist.h	/^	size_t	  sl_cur;$/;"	m	struct:_stringlist	access:public
_stringlist::sl_max	/usr/include/stringlist.h	/^	size_t	  sl_max;$/;"	m	struct:_stringlist	access:public
_stringlist::sl_str	/usr/include/stringlist.h	/^	char	**sl_str;$/;"	m	struct:_stringlist	access:public
_sync	/usr/include/curses.h	/^	bool	_sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_sync	/usr/include/ncurses.h	/^	bool	_sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_termname	/usr/include/term.h	/^    char *      _termname;      \/* used for termname() *\/$/;"	m	struct:term	access:public
_time32_to_time	/usr/include/timeconv.h	/^time_t _time32_to_time(int32_t t32);$/;"	p	signature:(int32_t t32)
_time64_to_time	/usr/include/timeconv.h	/^time_t _time64_to_time(int64_t t64);$/;"	p	signature:(int64_t t64)
_time_to_int	/usr/include/timeconv.h	/^int _time_to_int(time_t t);$/;"	p	signature:(time_t t)
_time_to_long	/usr/include/timeconv.h	/^long _time_to_long(time_t t);$/;"	p	signature:(time_t t)
_time_to_time32	/usr/include/timeconv.h	/^int32_t _time_to_time32(time_t t);$/;"	p	signature:(time_t t)
_time_to_time64	/usr/include/timeconv.h	/^int64_t _time_to_time64(time_t t);$/;"	p	signature:(time_t t)
_tolower	/usr/include/ctype.h	/^#define	_tolower(/;"	d
_tolower	/usr/include/ctype.h	/^int     _tolower(int);$/;"	p	signature:(int)
_toupper	/usr/include/ctype.h	/^#define	_toupper(/;"	d
_toupper	/usr/include/ctype.h	/^int     _toupper(int);$/;"	p	signature:(int)
_tracech_t	/usr/include/curses.h	/^#define _tracech_t	/;"	d
_tracech_t	/usr/include/ncurses.h	/^#define _tracech_t	/;"	d
_tracech_t2	/usr/include/curses.h	/^#define _tracech_t2	/;"	d
_tracech_t2	/usr/include/ncurses.h	/^#define _tracech_t2	/;"	d
_u	/usr/include/resolv.h	/^	} _u;$/;"	m	struct:__res_state	typeref:union:__res_state::__anon99	access:public
_ub	/usr/include/stdio.h	/^	struct	__sbuf _ub;	\/* ungetc buffer *\/$/;"	m	struct:__sFILE	typeref:struct:__sFILE::__sbuf	access:public
_ubuf	/usr/include/stdio.h	/^	unsigned char _ubuf[3];	\/* guarantee an ungetc() buffer *\/$/;"	m	struct:__sFILE	access:public
_ur	/usr/include/stdio.h	/^	int	_ur;		\/* saved _r when _r is counting ungetc data *\/$/;"	m	struct:__sFILE	access:public
_use_keypad	/usr/include/curses.h	/^	bool	_use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_use_keypad	/usr/include/ncurses.h	/^	bool	_use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_vcsock	/usr/include/resolv.h	/^	int	_vcsock;		\/* PRIVATE: for res_send VC i\/o *\/$/;"	m	struct:__res_state	access:public
_w	/usr/include/stdio.h	/^	int	_w;		\/* write space left for putc() *\/$/;"	m	struct:__sFILE	access:public
_win_st	/usr/include/curses.h	/^struct _win_st$/;"	s
_win_st	/usr/include/ncurses.h	/^struct _win_st$/;"	s
_win_st::_attrs	/usr/include/curses.h	/^	attr_t  _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_win_st::_attrs	/usr/include/ncurses.h	/^	attr_t  _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_win_st::_begx	/usr/include/curses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_win_st::_begx	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_win_st::_begy	/usr/include/curses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_win_st::_begy	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgd	/usr/include/curses.h	/^	chtype  _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgd	/usr/include/ncurses.h	/^	chtype  _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgrnd	/usr/include/curses.h	/^	cchar_t  _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgrnd	/usr/include/ncurses.h	/^	cchar_t  _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_clear	/usr/include/curses.h	/^	bool	_clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_win_st::_clear	/usr/include/ncurses.h	/^	bool	_clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_win_st::_curx	/usr/include/curses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_win_st::_curx	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_win_st::_cury	/usr/include/curses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_win_st::_cury	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_win_st::_delay	/usr/include/curses.h	/^	int	_delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_win_st::_delay	/usr/include/ncurses.h	/^	int	_delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_win_st::_flags	/usr/include/curses.h	/^	short   _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_win_st::_flags	/usr/include/ncurses.h	/^	short   _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_win_st::_idcok	/usr/include/curses.h	/^	bool	_idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_win_st::_idcok	/usr/include/ncurses.h	/^	bool	_idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_win_st::_idlok	/usr/include/curses.h	/^	bool	_idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_win_st::_idlok	/usr/include/ncurses.h	/^	bool	_idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_win_st::_immed	/usr/include/curses.h	/^	bool	_immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_win_st::_immed	/usr/include/ncurses.h	/^	bool	_immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_win_st::_leaveok	/usr/include/curses.h	/^	bool	_leaveok;	\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_win_st::_leaveok	/usr/include/ncurses.h	/^	bool	_leaveok;	\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_win_st::_line	/usr/include/curses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_win_st::_line	/usr/include/ncurses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_win_st::_maxx	/usr/include/curses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_win_st::_maxx	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_win_st::_maxy	/usr/include/curses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_win_st::_maxy	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_win_st::_notimeout	/usr/include/curses.h	/^	bool	_notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_win_st::_notimeout	/usr/include/ncurses.h	/^	bool	_notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_win_st::_pad	/usr/include/curses.h	/^	} _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_win_st::_pad	/usr/include/ncurses.h	/^	} _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_win_st::_parent	/usr/include/curses.h	/^	WINDOW	*_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_win_st::_parent	/usr/include/ncurses.h	/^	WINDOW	*_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_win_st::_parx	/usr/include/curses.h	/^	int	_parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_parx	/usr/include/ncurses.h	/^	int	_parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_pary	/usr/include/curses.h	/^	int	_pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_pary	/usr/include/ncurses.h	/^	int	_pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_regbottom	/usr/include/curses.h	/^	NCURSES_SIZE_T _regbottom; \/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_regbottom	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _regbottom; \/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_regtop	/usr/include/curses.h	/^	NCURSES_SIZE_T _regtop;	\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_regtop	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _regtop;	\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_scroll	/usr/include/curses.h	/^	bool	_scroll;	\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_win_st::_scroll	/usr/include/ncurses.h	/^	bool	_scroll;	\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_win_st::_sync	/usr/include/curses.h	/^	bool	_sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_win_st::_sync	/usr/include/ncurses.h	/^	bool	_sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_win_st::_use_keypad	/usr/include/curses.h	/^	bool	_use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_win_st::_use_keypad	/usr/include/ncurses.h	/^	bool	_use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_win_st::_yoffset	/usr/include/curses.h	/^	NCURSES_SIZE_T _yoffset; \/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
_win_st::_yoffset	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _yoffset; \/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
_win_st::pdat	/usr/include/curses.h	/^	struct pdat$/;"	s	struct:_win_st	access:public
_win_st::pdat	/usr/include/ncurses.h	/^	struct pdat$/;"	s	struct:_win_st	access:public
_win_st::pdat::_pad_bottom	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_bottom	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_left	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_left	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_right	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_right	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_top	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_top	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_x	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_x	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_y	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_win_st::pdat::_pad_y	/usr/include/ncurses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	access:public
_write	/usr/include/stdio.h	/^	int	(*_write)(void *, const char *, int);$/;"	m	struct:__sFILE	access:public
_yoffset	/usr/include/curses.h	/^	NCURSES_SIZE_T _yoffset; \/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
_yoffset	/usr/include/ncurses.h	/^	NCURSES_SIZE_T _yoffset; \/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
a64l	/usr/include/stdlib.h	/^long	 a64l(const char *);$/;"	p	signature:(const char *)
aConstraint	/usr/include/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	access:public
aConstraintUsage	/usr/include/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	access:public
aOrderBy	/usr/include/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	access:public
above	/usr/include/panel.h	/^  struct panel *above;$/;"	m	struct:panel	typeref:struct:panel::panel	access:public
access	/usr/include/unistd.h	/^int	 access(const char *, int);$/;"	p	signature:(const char *, int)
accessProc	/usr/include/tcl.h	/^    Tcl_FSAccessProc *accessProc;$/;"	m	struct:Tcl_Filesystem	access:public
accessx_np	/usr/include/unistd.h	/^int	 accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);$/;"	p	signature:(const struct accessx_descriptor *, size_t, int *, uid_t)
acct	/usr/include/unistd.h	/^int	 acct(const char *);$/;"	p	signature:(const char *)
acs_btee	/usr/include/term.h	/^#define acs_btee /;"	d
acs_chars	/usr/include/term.h	/^#define acs_chars /;"	d
acs_chars_index	/usr/include/term.h	/^#define acs_chars_index	/;"	d
acs_hline	/usr/include/term.h	/^#define acs_hline /;"	d
acs_llcorner	/usr/include/term.h	/^#define acs_llcorner /;"	d
acs_lrcorner	/usr/include/term.h	/^#define acs_lrcorner /;"	d
acs_ltee	/usr/include/term.h	/^#define acs_ltee /;"	d
acs_plus	/usr/include/term.h	/^#define acs_plus /;"	d
acs_rtee	/usr/include/term.h	/^#define acs_rtee /;"	d
acs_ttee	/usr/include/term.h	/^#define acs_ttee /;"	d
acs_ulcorner	/usr/include/term.h	/^#define acs_ulcorner /;"	d
acs_urcorner	/usr/include/term.h	/^#define acs_urcorner /;"	d
acs_vline	/usr/include/term.h	/^#define acs_vline /;"	d
actime	/usr/include/utime.h	/^	time_t actime;		\/* Access time *\/$/;"	m	struct:utimbuf	access:public
activeColor	/usr/include/tk.h	/^    XColor *activeColor;	\/* Outline color if state is active. *\/$/;"	m	struct:Tk_Outline	access:public
activeDash	/usr/include/tk.h	/^    Tk_Dash activeDash;		\/* Dash pattern if state is active. *\/$/;"	m	struct:Tk_Outline	access:public
activeStipple	/usr/include/tk.h	/^    Pixmap activeStipple;	\/* Outline Stipple pattern if state is$/;"	m	struct:Tk_Outline	access:public
activeWidth	/usr/include/tk.h	/^    double activeWidth;		\/* Width of outline. *\/$/;"	m	struct:Tk_Outline	access:public
add_error_table	/usr/include/com_err.h	/^errcode_t add_error_table    (const struct error_table *et);$/;"	p	signature:(const struct error_table *et)
add_profil	/usr/include/unistd.h	/^int	 add_profil(char *, size_t, unsigned long, unsigned int);$/;"	p	signature:(char *, size_t, unsigned long, unsigned int)
add_wch	/usr/include/curses.h	/^#define add_wch(/;"	d
add_wch	/usr/include/ncurses.h	/^#define add_wch(/;"	d
add_wchnstr	/usr/include/curses.h	/^#define add_wchnstr(/;"	d
add_wchnstr	/usr/include/ncurses.h	/^#define add_wchnstr(/;"	d
add_wchstr	/usr/include/curses.h	/^#define add_wchstr(/;"	d
add_wchstr	/usr/include/ncurses.h	/^#define add_wchstr(/;"	d
addch	/usr/include/curses.h	/^#define addch(/;"	d
addch	/usr/include/ncurses.h	/^#define addch(/;"	d
addchnstr	/usr/include/curses.h	/^#define addchnstr(/;"	d
addchnstr	/usr/include/ncurses.h	/^#define addchnstr(/;"	d
addchstr	/usr/include/curses.h	/^#define addchstr(/;"	d
addchstr	/usr/include/ncurses.h	/^#define addchstr(/;"	d
additional	/usr/include/dns_util.h	/^	dns_resource_record_t **additional;$/;"	m	struct:__anon43	access:public
addnstr	/usr/include/curses.h	/^#define addnstr(/;"	d
addnstr	/usr/include/ncurses.h	/^#define addnstr(/;"	d
addnwstr	/usr/include/curses.h	/^#define addnwstr(/;"	d
addnwstr	/usr/include/ncurses.h	/^#define addnwstr(/;"	d
addr	/usr/include/dns_util.h	/^	struct in6_addr addr;$/;"	m	struct:__anon26	typeref:struct:__anon26::in6_addr	access:public
addr	/usr/include/dns_util.h	/^	struct in_addr addr;$/;"	m	struct:__anon25	typeref:struct:__anon25::in_addr	access:public
addr	/usr/include/dns_util.h	/^	struct in_addr addr;$/;"	m	struct:__anon33	typeref:struct:__anon33::in_addr	access:public
addr	/usr/include/resolv.h	/^		struct in_addr	addr;$/;"	m	struct:__res_state::__anon98	typeref:struct:__res_state::__anon98::in_addr	access:public
addr	/usr/include/tcpd.h	/^    char    addr[STRING_LENGTH];	\/* access via eval_hostaddr(host) *\/$/;"	m	struct:host_info	access:public
address	/usr/include/ltdl.h	/^  void       *address;$/;"	m	struct:__anon74	access:public
addrinfo	/usr/include/netdb.h	/^struct addrinfo {$/;"	s
addrinfo::ai_addr	/usr/include/netdb.h	/^	struct	sockaddr *ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	/usr/include/netdb.h	/^	socklen_t ai_addrlen;	\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	/usr/include/netdb.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	/usr/include/netdb.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	/usr/include/netdb.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_next	/usr/include/netdb.h	/^	struct	addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	/usr/include/netdb.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	/usr/include/netdb.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
addstr	/usr/include/curses.h	/^#define addstr(/;"	d
addstr	/usr/include/ncurses.h	/^#define addstr(/;"	d
addwstr	/usr/include/curses.h	/^#define addwstr(/;"	d
addwstr	/usr/include/ncurses.h	/^#define addwstr(/;"	d
adler	/usr/include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	access:public
adler32	/usr/include/zconf.h	/^#  define adler32 /;"	d
adler32	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT adler32 OF((uLong adler, const Bytef *buf, uInt len));$/;"	p	signature:(uLong adler, const Bytef *buf, uInt len)
adler32_combine	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,$/;"	p	signature:(uLong adler1, uLong adler2, z_off_t len2)
aggregate_context	/usr/include/sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	access:public
aggregate_count	/usr/include/sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
ai_addr	/usr/include/netdb.h	/^	struct	sockaddr *ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	/usr/include/netdb.h	/^	socklen_t ai_addrlen;	\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
ai_canonname	/usr/include/netdb.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	struct:addrinfo	access:public
ai_family	/usr/include/netdb.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
ai_flags	/usr/include/netdb.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST *\/$/;"	m	struct:addrinfo	access:public
ai_next	/usr/include/netdb.h	/^	struct	addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	/usr/include/netdb.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
ai_socktype	/usr/include/netdb.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
alarm	/usr/include/unistd.h	/^	 alarm(unsigned int);$/;"	p	signature:(unsigned int)
alertNotifierProc	/usr/include/tcl.h	/^    Tcl_AlertNotifierProc *alertNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
alg	/usr/include/nameser.h	/^        char name[NS_MAXDNAME], alg[NS_MAXDNAME];$/;"	m	struct:ns_tsig_key	access:public
alias	/usr/include/tic.h	/^struct alias$/;"	s
alias::from	/usr/include/tic.h	/^	const char	*from;$/;"	m	struct:alias	access:public
alias::source	/usr/include/tic.h	/^	const char	*source;$/;"	m	struct:alias	access:public
alias::to	/usr/include/tic.h	/^	const char	*to;$/;"	m	struct:alias	access:public
all_morphs	/usr/include/mecab.h	/^    virtual bool  all_morphs() const                          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
alloc	/usr/include/tclTomMath.h	/^    int used, alloc, sign;$/;"	m	struct:mp_int	access:public
allocEntryProc	/usr/include/tcl.h	/^    Tcl_AllocHashEntryProc *allocEntryProc;$/;"	m	struct:Tcl_HashKeyType	access:public
alloc_func	/usr/include/zconf.h	/^#  define alloc_func /;"	d
alloc_func	/usr/include/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alloca	/usr/include/alloca.h	/^#define	alloca(/;"	d
alloca	/usr/include/alloca.h	/^#undef	alloca$/;"	d
alloca	/usr/include/alloca.h	/^void	*alloca(size_t);		\/* built-in for gcc *\/$/;"	p	signature:(size_t)
alpha	/usr/include/mecab.h	/^  double                       alpha;$/;"	m	struct:mecab_learner_node_t	access:public
alpha	/usr/include/mecab.h	/^  float                 alpha;$/;"	m	struct:mecab_node_t	access:public
alphasort	/usr/include/dirent.h	/^int alphasort(const void *, const void *) __DARWIN_INODE64(alphasort);$/;"	v
alt_scancode_esc	/usr/include/term.h	/^#define alt_scancode_esc /;"	d
altitude	/usr/include/dns_util.h	/^	uint32_t altitude;$/;"	m	struct:__anon39	access:public
alwaysRedraw	/usr/include/tk.h	/^    int alwaysRedraw;		\/* Non-zero means displayProc should be called$/;"	m	struct:Tk_ItemType	access:public
anchorItemPtr	/usr/include/tk.h	/^    Tk_Item *anchorItemPtr;	\/* Item corresponding to "selectAnchor": not$/;"	m	struct:Tk_CanvasTextInfo	access:public
ancount	/usr/include/dns_util.h	/^	uint16_t ancount;$/;"	m	struct:__anon22	access:public
and	/usr/include/iso646.h	/^#define	and	/;"	d
and_eq	/usr/include/iso646.h	/^#define	and_eq	/;"	d
anext	/usr/include/mecab.h	/^  struct mecab_learner_node_t *anext;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
answer	/usr/include/dns_util.h	/^	dns_resource_record_t **answer;$/;"	m	struct:__anon43	access:public
appStatus	/usr/include/fcgiapp.h	/^    int appStatus;$/;"	m	struct:FCGX_Request	access:public
appStatusB0	/usr/include/fastcgi.h	/^    unsigned char appStatusB0;$/;"	m	struct:__anon56	access:public
appStatusB1	/usr/include/fastcgi.h	/^    unsigned char appStatusB1;$/;"	m	struct:__anon56	access:public
appStatusB2	/usr/include/fastcgi.h	/^    unsigned char appStatusB2;$/;"	m	struct:__anon56	access:public
appStatusB3	/usr/include/fastcgi.h	/^    unsigned char appStatusB3;$/;"	m	struct:__anon56	access:public
appendAvl	/usr/include/tcl.h	/^    int appendAvl;$/;"	m	struct:Tcl_SavedResult	access:public
appendResult	/usr/include/tcl.h	/^    char *appendResult;$/;"	m	struct:Tcl_SavedResult	access:public
appendUsed	/usr/include/tcl.h	/^    int appendUsed;$/;"	m	struct:Tcl_SavedResult	access:public
ar_date	/usr/include/ar.h	/^	char ar_date[12];		\/* modification time *\/$/;"	m	struct:ar_hdr	access:public
ar_fmag	/usr/include/ar.h	/^	char ar_fmag[2];		\/* consistency check *\/$/;"	m	struct:ar_hdr	access:public
ar_gid	/usr/include/ar.h	/^	char ar_gid[6];			\/* group id *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr	/usr/include/ar.h	/^struct ar_hdr {$/;"	s
ar_hdr::ar_date	/usr/include/ar.h	/^	char ar_date[12];		\/* modification time *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_fmag	/usr/include/ar.h	/^	char ar_fmag[2];		\/* consistency check *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_gid	/usr/include/ar.h	/^	char ar_gid[6];			\/* group id *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_mode	/usr/include/ar.h	/^	char ar_mode[8];		\/* octal file permissions *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_name	/usr/include/ar.h	/^	char ar_name[16];		\/* name *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_size	/usr/include/ar.h	/^	char ar_size[10];		\/* size in bytes *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_uid	/usr/include/ar.h	/^	char ar_uid[6];			\/* user id *\/$/;"	m	struct:ar_hdr	access:public
ar_mode	/usr/include/ar.h	/^	char ar_mode[8];		\/* octal file permissions *\/$/;"	m	struct:ar_hdr	access:public
ar_name	/usr/include/ar.h	/^	char ar_name[16];		\/* name *\/$/;"	m	struct:ar_hdr	access:public
ar_size	/usr/include/ar.h	/^	char ar_size[10];		\/* size in bytes *\/$/;"	m	struct:ar_hdr	access:public
ar_uid	/usr/include/ar.h	/^	char ar_uid[6];			\/* user id *\/$/;"	m	struct:ar_hdr	access:public
arc4random	/usr/include/stdlib.h	/^	 arc4random(void);$/;"	p	signature:(void)
arc4random_addrandom	/usr/include/stdlib.h	/^void	 arc4random_addrandom(unsigned char *dat, int datlen);$/;"	p	signature:(unsigned char *dat, int datlen)
arc4random_stir	/usr/include/stdlib.h	/^void	 arc4random_stir(void);$/;"	p	signature:(void)
arcount	/usr/include/dns_util.h	/^	uint16_t arcount;$/;"	m	struct:__anon22	access:public
areaProc	/usr/include/tk.h	/^    Tk_ItemAreaProc *areaProc;	\/* Computes whether item is inside, outside,$/;"	m	struct:Tk_ItemType	access:public
arg	/usr/include/form.h	/^  void *		arg;		\/* argument for type		*\/$/;"	m	struct:fieldnode	access:public
argvIndex	/usr/include/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	access:public
argvName	/usr/include/tk.h	/^    char *argvName;		\/* Switch used to specify option in argv. NULL$/;"	m	struct:Tk_ConfigSpec	access:public
arows	/usr/include/menu.h	/^  short          arows;                 \/* Nr. of items high (actual)      *\/$/;"	m	struct:tagMENU	access:public
array	/usr/include/tk.h	/^	char array[sizeof(char *)];$/;"	m	union:Tk_Dash::__anon132	access:public
arrow_key_map	/usr/include/term.h	/^#define arrow_key_map /;"	d
ascent	/usr/include/tk.h	/^    int ascent;			\/* The amount in pixels that the tallest$/;"	m	struct:Tk_FontMetrics	access:public
asctime	/usr/include/time.h	/^char *asctime(const struct tm *);$/;"	p	signature:(const struct tm *)
asctime_r	/usr/include/time.h	/^char *asctime_r(const struct tm * __restrict, char * __restrict);$/;"	p	signature:(const struct tm * __restrict, char * __restrict)
asl_add_log_file	/usr/include/asl.h	/^int asl_add_log_file(aslclient asl, int fd);$/;"	p	signature:(aslclient asl, int fd)
asl_close	/usr/include/asl.h	/^void asl_close(aslclient asl);$/;"	p	signature:(aslclient asl)
asl_free	/usr/include/asl.h	/^void asl_free(aslmsg msg);$/;"	p	signature:(aslmsg msg)
asl_get	/usr/include/asl.h	/^const char *asl_get(aslmsg msg, const char *key);$/;"	p	signature:(aslmsg msg, const char *key)
asl_key	/usr/include/asl.h	/^const char *asl_key(aslmsg msg, uint32_t n);$/;"	p	signature:(aslmsg msg, uint32_t n)
asl_new	/usr/include/asl.h	/^aslmsg asl_new(uint32_t type);$/;"	p	signature:(uint32_t type)
asl_open	/usr/include/asl.h	/^aslclient asl_open(const char *ident, const char *facility, uint32_t opts);$/;"	p	signature:(const char *ident, const char *facility, uint32_t opts)
asl_remove_log_file	/usr/include/asl.h	/^int asl_remove_log_file(aslclient asl, int fd);$/;"	p	signature:(aslclient asl, int fd)
asl_search	/usr/include/asl.h	/^aslresponse asl_search(aslclient asl, aslmsg msg);$/;"	p	signature:(aslclient asl, aslmsg msg)
asl_send	/usr/include/asl.h	/^int asl_send(aslclient asl, aslmsg msg);$/;"	p	signature:(aslclient asl, aslmsg msg)
asl_set	/usr/include/asl.h	/^int asl_set(aslmsg msg, const char *key, const char *value);$/;"	p	signature:(aslmsg msg, const char *key, const char *value)
asl_set_filter	/usr/include/asl.h	/^int asl_set_filter(aslclient asl, int f);$/;"	p	signature:(aslclient asl, int f)
asl_set_query	/usr/include/asl.h	/^int asl_set_query(aslmsg msg, const char *key, const char *value, uint32_t op);$/;"	p	signature:(aslmsg msg, const char *key, const char *value, uint32_t op)
asl_unset	/usr/include/asl.h	/^int asl_unset(aslmsg msg, const char *key);$/;"	p	signature:(aslmsg msg, const char *key)
aslclient	/usr/include/asl.h	/^typedef struct __aslclient *aslclient;$/;"	t	typeref:struct:__aslclient
aslmsg	/usr/include/asl.h	/^typedef struct __aslmsg *aslmsg;$/;"	t	typeref:struct:__aslmsg
aslresponse	/usr/include/asl.h	/^typedef struct __aslresponse *aslresponse;$/;"	t	typeref:struct:__aslresponse
aslresponse_free	/usr/include/asl.h	/^void aslresponse_free(aslresponse r);$/;"	p	signature:(aslresponse r)
aslresponse_next	/usr/include/asl.h	/^aslmsg aslresponse_next(aslresponse r);$/;"	p	signature:(aslresponse r)
asprintf	/usr/include/stdio.h	/^int	 asprintf(char **, const char *, ...) __DARWIN_LDBL_COMPAT(asprintf);$/;"	v
assert	/usr/include/assert.h	/^#define	assert(/;"	d
assert	/usr/include/assert.h	/^#define assert(/;"	d
assert	/usr/include/assert.h	/^#undef assert$/;"	d
assert0	/usr/include/dns_sd.h	/^    char assert0[(sizeof(union _TXTRecordRef_t) == 16) ? 1 : -1];$/;"	m	struct:CompileTimeAssertionChecks_DNS_SD	access:public
at_collective	/usr/include/ldap_schema.h	/^	int  at_collective;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
at_desc	/usr/include/ldap_schema.h	/^	char *at_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_equality_oid	/usr/include/ldap_schema.h	/^	char *at_equality_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **at_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_names	/usr/include/ldap_schema.h	/^	char **at_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_no_user_mod	/usr/include/ldap_schema.h	/^	int  at_no_user_mod;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
at_obsolete	/usr/include/ldap_schema.h	/^	int  at_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
at_oid	/usr/include/ldap_schema.h	/^	char *at_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_attributetype	access:public
at_ordering_oid	/usr/include/ldap_schema.h	/^	char *at_ordering_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_single_value	/usr/include/ldap_schema.h	/^	int  at_single_value;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
at_substr_oid	/usr/include/ldap_schema.h	/^	char *at_substr_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_sup_oid	/usr/include/ldap_schema.h	/^	char *at_sup_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_syntax_len	/usr/include/ldap_schema.h	/^	int  at_syntax_len;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_syntax_oid	/usr/include/ldap_schema.h	/^	char *at_syntax_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
at_usage	/usr/include/ldap_schema.h	/^	int  at_usage;		\/* 0=userApplications, 1=directoryOperation,$/;"	m	struct:ldap_attributetype	access:public
atexit	/usr/include/stdlib.h	/^int	 atexit(void (*)(void));$/;"	p	signature:(void (*)(void))
atexit_b	/usr/include/stdlib.h	/^int	 atexit_b(void (^)(void));$/;"	p	signature:(void (^)(void))
atof	/usr/include/stdlib.h	/^double	 atof(const char *);$/;"	p	signature:(const char *)
atoi	/usr/include/stdlib.h	/^int	 atoi(const char *);$/;"	p	signature:(const char *)
atol	/usr/include/stdlib.h	/^long	 atol(const char *);$/;"	p	signature:(const char *)
atoll	/usr/include/stdlib.h	/^	 atoll(const char *);$/;"	p	signature:(const char *)
attach	/usr/include/fcgio.h	/^    int attach(FCGX_Stream * fcgx);$/;"	p	class:fcgi_streambuf	access:public	signature:(FCGX_Stream * fcgx)
attach	/usr/include/fcgio.h	/^    virtual void attach(FCGX_Stream * fcgx);$/;"	p	class:fcgi_istream	access:public	signature:(FCGX_Stream * fcgx)
attach	/usr/include/fcgio.h	/^    virtual void attach(FCGX_Stream *fcgx);$/;"	p	class:fcgi_ostream	access:public	signature:(FCGX_Stream *fcgx)
attemptckalloc	/usr/include/tcl.h	/^#   define attemptckalloc(/;"	d
attemptckrealloc	/usr/include/tcl.h	/^#   define attemptckrealloc(/;"	d
attr	/usr/include/curses.h	/^    attr_t	attr;$/;"	m	struct:__anon5	access:public
attr	/usr/include/ncurses.h	/^    attr_t	attr;$/;"	m	struct:__anon81	access:public
attr_get	/usr/include/curses.h	/^#define attr_get(/;"	d
attr_get	/usr/include/ncurses.h	/^#define attr_get(/;"	d
attr_off	/usr/include/curses.h	/^#define attr_off(/;"	d
attr_off	/usr/include/ncurses.h	/^#define attr_off(/;"	d
attr_on	/usr/include/curses.h	/^#define attr_on(/;"	d
attr_on	/usr/include/ncurses.h	/^#define attr_on(/;"	d
attr_set	/usr/include/curses.h	/^#define attr_set(/;"	d
attr_set	/usr/include/ncurses.h	/^#define attr_set(/;"	d
attr_t	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _traceattr (attr_t);$/;"	v
attr_t	/usr/include/curses.h	/^typedef	chtype	attr_t;		\/* ...must be at least as wide as chtype *\/$/;"	t
attr_t	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(char *) _traceattr (attr_t);$/;"	v
attr_t	/usr/include/ncurses.h	/^typedef	chtype	attr_t;		\/* ...must be at least as wide as chtype *\/$/;"	t
attributeType	/usr/include/ldap.h	/^	char *attributeType;$/;"	m	struct:ldapsortkey	access:public
attroff	/usr/include/curses.h	/^#define attroff(/;"	d
attroff	/usr/include/ncurses.h	/^#define attroff(/;"	d
attron	/usr/include/curses.h	/^#define attron(/;"	d
attron	/usr/include/ncurses.h	/^#define attron(/;"	d
attrset	/usr/include/curses.h	/^#define attrset(/;"	d
attrset	/usr/include/ncurses.h	/^#define attrset(/;"	d
atts	/usr/include/tk.h	/^    XSetWindowAttributes atts;$/;"	m	struct:Tk_FakeWin	access:public
authority	/usr/include/dns_util.h	/^	dns_resource_record_t **authority;$/;"	m	struct:__anon43	access:public
auto_left_margin	/usr/include/term.h	/^#define auto_left_margin /;"	d
auto_right_margin	/usr/include/term.h	/^#define auto_right_margin /;"	d
avail_in	/usr/include/bzlib.h	/^      unsigned int avail_in;$/;"	m	struct:__anon3	access:public
avail_in	/usr/include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	access:public
avail_out	/usr/include/bzlib.h	/^      unsigned int avail_out;$/;"	m	struct:__anon3	access:public
avail_out	/usr/include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	access:public
b64_ntop	/usr/include/resolv.h	/^#define b64_ntop	/;"	d
b64_ntop	/usr/include/resolv.h	/^int		b64_ntop __P((u_char const *, size_t, char *, size_t));$/;"	p	signature:(u_char const *, size_t, char *, size_t)
b64_pton	/usr/include/resolv.h	/^#define b64_pton	/;"	d
b64_pton	/usr/include/resolv.h	/^int		b64_pton __P((char const *, u_char *, size_t));$/;"	p	signature:(char const *, u_char *, size_t)
back	/usr/include/form.h	/^  chtype		back;		\/* background attribute		*\/$/;"	m	struct:fieldnode	access:public
back	/usr/include/menu.h	/^  chtype         back;                  \/* Nonselection attribute          *\/$/;"	m	struct:tagMENU	access:public
back_color_erase	/usr/include/term.h	/^#define back_color_erase /;"	d
back_tab	/usr/include/term.h	/^#define back_tab /;"	d
backspace_delay	/usr/include/term.h	/^#define backspace_delay /;"	d
backspace_if_not_bs	/usr/include/term.h	/^#define backspace_if_not_bs /;"	d
backspaces_with_bs	/usr/include/term.h	/^#define backspaces_with_bs /;"	d
backtrace	/usr/include/execinfo.h	/^int backtrace(void**,int);$/;"	p	signature:(void**,int)
backtrace_symbols	/usr/include/execinfo.h	/^char** backtrace_symbols(void* const*,int);$/;"	p	signature:(void* const*,int)
backtrace_symbols_fd	/usr/include/execinfo.h	/^void backtrace_symbols_fd(void* const*,int,int);$/;"	p	signature:(void* const*,int,int)
base	/usr/include/com_err.h	/^    int32_t base;$/;"	m	struct:error_table	access:public
base	/usr/include/ftw.h	/^	int base;$/;"	m	struct:FTW	access:public
basename	/usr/include/libgen.h	/^char	*basename(char *);$/;"	p	signature:(char *)
bcmp	/usr/include/string.h	/^int	 bcmp(const void *, const void *, size_t);$/;"	p	signature:(const void *, const void *, size_t)
bcmp	/usr/include/strings.h	/^int      bcmp(const void *, const void *, size_t);$/;"	p	signature:(const void *, const void *, size_t)
bcopy	/usr/include/string.h	/^void	 bcopy(const void *, void *, size_t);$/;"	p	signature:(const void *, void *, size_t)
bcopy	/usr/include/strings.h	/^void     bcopy(const void *, void *, size_t);$/;"	p	signature:(const void *, void *, size_t)
beehive_glitch	/usr/include/term.h	/^#define beehive_glitch	/;"	d
begin_node_list	/usr/include/mecab.h	/^  struct mecab_node_t **begin_node_list;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
begincol	/usr/include/form.h	/^  int			begincol;	\/* in horiz. scrollable field	*\/$/;"	m	struct:formnode	access:public
bell	/usr/include/term.h	/^#define bell /;"	d
below	/usr/include/panel.h	/^  struct panel *below;$/;"	m	struct:panel	typeref:struct:panel::panel	access:public
ber_alloc	/usr/include/lber.h	/^ber_alloc LDAP_P(( void )); \/* DEPRECATED *\/$/;"	p	signature:( void )
ber_alloc_t	/usr/include/lber.h	/^ber_alloc_t LDAP_P(($/;"	p	signature:( int beroptions )
ber_bprint	/usr/include/lber.h	/^ber_bprint LDAP_P(($/;"	p	signature:( LDAP_CONST char *data, ber_len_t len )
ber_bvarray_add	/usr/include/lber.h	/^ber_bvarray_add LDAP_P(( BerVarray *p, BerValue *bv ));$/;"	p	signature:( BerVarray *p, BerValue *bv )
ber_bvarray_free	/usr/include/lber.h	/^ber_bvarray_free LDAP_P(( BerVarray p ));$/;"	p	signature:( BerVarray p )
ber_bvcmp	/usr/include/lber.h	/^#define ber_bvcmp(/;"	d
ber_bvdup	/usr/include/lber.h	/^ber_bvdup LDAP_P(($/;"	p	signature:( struct berval *src )
ber_bvecadd	/usr/include/lber.h	/^ber_bvecadd LDAP_P(($/;"	p	signature:( struct berval ***bvec, struct berval *bv )
ber_bvecfree	/usr/include/lber.h	/^ber_bvecfree LDAP_P(($/;"	p	signature:( struct berval **bv )
ber_bvfree	/usr/include/lber.h	/^ber_bvfree LDAP_P(($/;"	p	signature:( struct berval *bv )
ber_bvreplace	/usr/include/lber.h	/^ber_bvreplace LDAP_P(($/;"	p	signature:( struct berval *dst, LDAP_CONST struct berval *src )
ber_bvstr	/usr/include/lber.h	/^#define	ber_bvstr(/;"	d
ber_bvstrdup	/usr/include/lber.h	/^#define	ber_bvstrdup(/;"	d
ber_decode_oid	/usr/include/lber.h	/^ber_decode_oid LDAP_P(($/;"	p	signature:( struct berval *in, struct berval *out )
ber_dump	/usr/include/lber.h	/^ber_dump LDAP_P(($/;"	p	signature:( BerElement *ber, int inout )
ber_dup	/usr/include/lber.h	/^ber_dup LDAP_P(($/;"	p	signature:( BerElement *ber )
ber_dupbv	/usr/include/lber.h	/^ber_dupbv LDAP_P(($/;"	p	signature:( struct berval *dst, struct berval *src )
ber_encode_oid	/usr/include/lber.h	/^ber_encode_oid LDAP_P(($/;"	p	signature:( struct berval *in, struct berval *out )
ber_errno	/usr/include/lber.h	/^#define ber_errno /;"	d
ber_errno_addr	/usr/include/lber.h	/^LBER_F( int * ) ber_errno_addr LDAP_P((void));$/;"	p	signature:(void)
ber_error_print	/usr/include/lber.h	/^ber_error_print LDAP_P(($/;"	p	signature:( LDAP_CONST char *data )
ber_first_element	/usr/include/lber.h	/^ber_first_element LDAP_P(($/;"	p	signature:( BerElement *ber, ber_len_t *len, char **last )
ber_flatten	/usr/include/lber.h	/^ber_flatten LDAP_P(($/;"	p	signature:( BerElement *ber, struct berval **bvPtr )
ber_flatten2	/usr/include/lber.h	/^ber_flatten2 LDAP_P(($/;"	p	signature:( BerElement *ber, struct berval *bv, int alloc )
ber_flush	/usr/include/lber.h	/^ber_flush LDAP_P(($/;"	p	signature:( Sockbuf *sb, BerElement *ber, int freeit )
ber_flush2	/usr/include/lber.h	/^ber_flush2 LDAP_P(($/;"	p	signature:( Sockbuf *sb, BerElement *ber, int freeit )
ber_free	/usr/include/lber.h	/^ber_free LDAP_P(($/;"	p	signature:( BerElement *ber, int freebuf )
ber_free_buf	/usr/include/lber.h	/^ber_free_buf LDAP_P(( BerElement *ber ));$/;"	p	signature:( BerElement *ber )
ber_get_bitstringa	/usr/include/lber.h	/^ber_get_bitstringa LDAP_P(($/;"	p	signature:( BerElement *ber, char **buf, ber_len_t *len )
ber_get_boolean	/usr/include/lber.h	/^ber_get_boolean LDAP_P(($/;"	p	signature:( BerElement *ber, ber_int_t *boolval )
ber_get_enum	/usr/include/lber.h	/^ber_get_enum LDAP_P(($/;"	p	signature:( BerElement *ber, ber_int_t *num )
ber_get_int	/usr/include/lber.h	/^ber_get_int LDAP_P(($/;"	p	signature:( BerElement *ber, ber_int_t *num )
ber_get_next	/usr/include/lber.h	/^ber_get_next LDAP_P(($/;"	p	signature:( Sockbuf *sb, ber_len_t *len, BerElement *ber )
ber_get_null	/usr/include/lber.h	/^ber_get_null LDAP_P(($/;"	p	signature:( BerElement *ber )
ber_get_option	/usr/include/lber.h	/^ber_get_option LDAP_P(($/;"	p	signature:( void *item, int option, void *outvalue)
ber_get_stringa	/usr/include/lber.h	/^ber_get_stringa LDAP_P(($/;"	p	signature:( BerElement *ber, char **buf )
ber_get_stringal	/usr/include/lber.h	/^ber_get_stringal LDAP_P(($/;"	p	signature:( BerElement *ber, struct berval **bv )
ber_get_stringb	/usr/include/lber.h	/^ber_get_stringb LDAP_P(($/;"	p	signature:( BerElement *ber, char *buf, ber_len_t *len )
ber_get_stringbv	/usr/include/lber.h	/^ber_get_stringbv LDAP_P(($/;"	p	signature:( BerElement *ber, struct berval *bv, int options )
ber_get_tag	/usr/include/lber.h	/^ber_get_tag LDAP_P(($/;"	p	signature:( BerElement *ber )
ber_init	/usr/include/lber.h	/^ber_init LDAP_P(($/;"	p	signature:( struct berval *bv )
ber_init2	/usr/include/lber.h	/^ber_init2 LDAP_P(($/;"	p	signature:( BerElement *ber, struct berval *bv, int options )
ber_init_w_nullc	/usr/include/lber.h	/^ber_init_w_nullc LDAP_P((	\/* DEPRECATED *\/$/;"	p	signature:( BerElement *ber, int options )
ber_int_t	/usr/include/lber_types.h	/^typedef LBER_INT_T ber_int_t;$/;"	t
ber_len_t	/usr/include/lber_types.h	/^typedef unsigned LBER_LEN_T ber_len_t;$/;"	t
ber_mem2bv	/usr/include/lber.h	/^ber_mem2bv LDAP_P(($/;"	p	signature:( LDAP_CONST char *, ber_len_t len, int duplicate, struct berval *bv)
ber_memalloc	/usr/include/lber.h	/^ber_memalloc LDAP_P(($/;"	p	signature:( ber_len_t s )
ber_memcalloc	/usr/include/lber.h	/^ber_memcalloc LDAP_P(($/;"	p	signature:( ber_len_t n, ber_len_t s )
ber_memfree	/usr/include/lber.h	/^ber_memfree LDAP_P(($/;"	p	signature:( void* p )
ber_memrealloc	/usr/include/lber.h	/^ber_memrealloc LDAP_P(($/;"	p	signature:( void* p, ber_len_t s )
ber_memvfree	/usr/include/lber.h	/^ber_memvfree LDAP_P(($/;"	p	signature:( void** vector )
ber_next_element	/usr/include/lber.h	/^ber_next_element LDAP_P(($/;"	p	signature:( BerElement *ber, ber_len_t *len, LDAP_CONST char *last )
ber_peek_tag	/usr/include/lber.h	/^ber_peek_tag LDAP_P(($/;"	p	signature:( BerElement *ber, ber_len_t *len )
ber_printf	/usr/include/lber.h	/^ber_printf LDAP_P(($/;"	p	signature:( BerElement *ber, LDAP_CONST char *fmt, ... )
ber_put_berval	/usr/include/lber.h	/^ber_put_berval LDAP_P(($/;"	p	signature:( BerElement *ber, struct berval *bv, ber_tag_t tag )
ber_put_bitstring	/usr/include/lber.h	/^ber_put_bitstring LDAP_P(($/;"	p	signature:( BerElement *ber, LDAP_CONST char *str, ber_len_t bitlen, ber_tag_t tag )
ber_put_boolean	/usr/include/lber.h	/^ber_put_boolean LDAP_P(($/;"	p	signature:( BerElement *ber, ber_int_t boolval, ber_tag_t tag )
ber_put_enum	/usr/include/lber.h	/^ber_put_enum LDAP_P(($/;"	p	signature:( BerElement *ber, ber_int_t num, ber_tag_t tag )
ber_put_int	/usr/include/lber.h	/^ber_put_int LDAP_P(($/;"	p	signature:( BerElement *ber, ber_int_t num, ber_tag_t tag )
ber_put_null	/usr/include/lber.h	/^ber_put_null LDAP_P(($/;"	p	signature:( BerElement *ber, ber_tag_t tag )
ber_put_ostring	/usr/include/lber.h	/^ber_put_ostring LDAP_P(($/;"	p	signature:( BerElement *ber, LDAP_CONST char *str, ber_len_t len, ber_tag_t tag )
ber_put_seq	/usr/include/lber.h	/^ber_put_seq LDAP_P(($/;"	p	signature:( BerElement *ber )
ber_put_set	/usr/include/lber.h	/^ber_put_set LDAP_P(($/;"	p	signature:( BerElement *ber )
ber_put_string	/usr/include/lber.h	/^ber_put_string LDAP_P(($/;"	p	signature:( BerElement *ber, LDAP_CONST char *str, ber_tag_t tag )
ber_read	/usr/include/lber.h	/^ber_read LDAP_P(($/;"	p	signature:( BerElement *ber, char *buf, ber_len_t len )
ber_remaining	/usr/include/lber.h	/^ber_remaining LDAP_P(($/;"	p	signature:( BerElement *ber )
ber_reset	/usr/include/lber.h	/^ber_reset LDAP_P(($/;"	p	signature:( BerElement *ber, int was_writing )
ber_scanf	/usr/include/lber.h	/^ber_scanf LDAP_P(($/;"	p	signature:( BerElement *ber, LDAP_CONST char *fmt, ... )
ber_set_option	/usr/include/lber.h	/^ber_set_option LDAP_P(($/;"	p	signature:( void *item, int option, LDAP_CONST void *invalue)
ber_sint_t	/usr/include/lber_types.h	/^typedef signed LBER_INT_T ber_sint_t;$/;"	t
ber_skip_data	/usr/include/lber.h	/^ber_skip_data LDAP_P(($/;"	p	signature:( BerElement *ber, ber_len_t len )
ber_skip_tag	/usr/include/lber.h	/^ber_skip_tag LDAP_P(($/;"	p	signature:( BerElement *ber, ber_len_t *len )
ber_slen_t	/usr/include/lber_types.h	/^typedef signed LBER_LEN_T ber_slen_t;$/;"	t
ber_sockbuf_add_io	/usr/include/lber.h	/^ber_sockbuf_add_io LDAP_P(($/;"	p	signature:( Sockbuf *sb, Sockbuf_IO *sbio, int layer, void *arg )
ber_sockbuf_alloc	/usr/include/lber.h	/^ber_sockbuf_alloc LDAP_P(($/;"	p	signature:( void )
ber_sockbuf_ctrl	/usr/include/lber.h	/^ber_sockbuf_ctrl LDAP_P(($/;"	p	signature:( Sockbuf *sb, int opt, void *arg )
ber_sockbuf_free	/usr/include/lber.h	/^ber_sockbuf_free LDAP_P(($/;"	p	signature:( Sockbuf *sb )
ber_sockbuf_remove_io	/usr/include/lber.h	/^ber_sockbuf_remove_io LDAP_P(($/;"	p	signature:( Sockbuf *sb, Sockbuf_IO *sbio, int layer )
ber_socket_t	/usr/include/lber_types.h	/^typedef LBER_SOCKET_T ber_socket_t;$/;"	t
ber_sos_dump	/usr/include/lber.h	/^ber_sos_dump LDAP_P(($/;"	p	signature:( Seqorset *sos )
ber_start_seq	/usr/include/lber.h	/^ber_start_seq LDAP_P(($/;"	p	signature:( BerElement *ber, ber_tag_t tag )
ber_start_set	/usr/include/lber.h	/^ber_start_set LDAP_P(($/;"	p	signature:( BerElement *ber, ber_tag_t tag )
ber_str2bv	/usr/include/lber.h	/^ber_str2bv LDAP_P(($/;"	p	signature:( LDAP_CONST char *, ber_len_t len, int duplicate, struct berval *bv)
ber_strdup	/usr/include/lber.h	/^ber_strdup LDAP_P(($/;"	p	signature:( LDAP_CONST char * )
ber_tag_t	/usr/include/lber_types.h	/^typedef unsigned LBER_TAG_T ber_tag_t;$/;"	t
ber_uint_t	/usr/include/lber_types.h	/^typedef unsigned LBER_INT_T ber_uint_t;$/;"	t
ber_write	/usr/include/lber.h	/^ber_write LDAP_P(($/;"	p	signature:( BerElement *ber, LDAP_CONST char *buf, ber_len_t len, int nosos )
berval	/usr/include/lber.h	/^typedef struct berval {$/;"	s
berval::bv_len	/usr/include/lber.h	/^	ber_len_t	bv_len;$/;"	m	struct:berval	access:public
berval::bv_val	/usr/include/lber.h	/^	char		*bv_val;$/;"	m	struct:berval	access:public
beta	/usr/include/mecab.h	/^  double                       beta;$/;"	m	struct:mecab_learner_node_t	access:public
beta	/usr/include/mecab.h	/^  float                 beta;$/;"	m	struct:mecab_node_t	access:public
bfname	/usr/include/db.h	/^	char	*bfname;	\/* btree file name *\/ $/;"	m	struct:__anon15	access:public
bind_blob	/usr/include/sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
bind_double	/usr/include/sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	access:public
bind_int	/usr/include/sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
bind_int64	/usr/include/sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	access:public
bind_null	/usr/include/sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
bind_parameter_count	/usr/include/sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
bind_parameter_index	/usr/include/sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	access:public
bind_parameter_name	/usr/include/sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
bind_text	/usr/include/sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
bind_text16	/usr/include/sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
bind_value	/usr/include/sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
bind_zeroblob	/usr/include/sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
bit_alloc	/usr/include/bitstring.h	/^#define	bit_alloc(/;"	d
bit_clear	/usr/include/bitstring.h	/^#define	bit_clear(/;"	d
bit_decl	/usr/include/bitstring.h	/^#define	bit_decl(/;"	d
bit_ffc	/usr/include/bitstring.h	/^#define	bit_ffc(/;"	d
bit_ffs	/usr/include/bitstring.h	/^#define	bit_ffs(/;"	d
bit_gravity	/usr/include/Xplugin.h	/^    int bit_gravity;			\/* how to resize the backing store *\/$/;"	m	struct:xp_window_changes_struct	access:public
bit_image_carriage_return	/usr/include/term.h	/^#define bit_image_carriage_return /;"	d
bit_image_entwining	/usr/include/term.h	/^#define bit_image_entwining /;"	d
bit_image_newline	/usr/include/term.h	/^#define bit_image_newline /;"	d
bit_image_repeat	/usr/include/term.h	/^#define bit_image_repeat /;"	d
bit_image_type	/usr/include/term.h	/^#define bit_image_type /;"	d
bit_nclear	/usr/include/bitstring.h	/^#define	bit_nclear(/;"	d
bit_nset	/usr/include/bitstring.h	/^#define	bit_nset(/;"	d
bit_set	/usr/include/bitstring.h	/^#define	bit_set(/;"	d
bit_test	/usr/include/bitstring.h	/^#define	bit_test(/;"	d
bitand	/usr/include/iso646.h	/^#define	bitand	/;"	d
bitor	/usr/include/iso646.h	/^#define	bitor	/;"	d
bitstr_size	/usr/include/bitstring.h	/^#define	bitstr_size(/;"	d
bitstr_t	/usr/include/bitstring.h	/^typedef	unsigned char bitstr_t;$/;"	t
bkgd	/usr/include/curses.h	/^#define bkgd(/;"	d
bkgd	/usr/include/ncurses.h	/^#define bkgd(/;"	d
bkgdset	/usr/include/curses.h	/^#define bkgdset(/;"	d
bkgdset	/usr/include/ncurses.h	/^#define bkgdset(/;"	d
bkgrnd	/usr/include/curses.h	/^#define bkgrnd(/;"	d
bkgrnd	/usr/include/ncurses.h	/^#define bkgrnd(/;"	d
bkgrndset	/usr/include/curses.h	/^#define bkgrndset(/;"	d
bkgrndset	/usr/include/ncurses.h	/^#define bkgrndset(/;"	d
blob_bytes	/usr/include/sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	access:public
blob_close	/usr/include/sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	access:public
blob_open	/usr/include/sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,int,sqlite3_blob**);$/;"	m	struct:sqlite3_api_routines	access:public
blob_read	/usr/include/sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
blob_write	/usr/include/sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
blockModeProc	/usr/include/tcl.h	/^    Tcl_DriverBlockModeProc *blockModeProc;$/;"	m	struct:Tcl_ChannelType	access:public
bmf_calloc	/usr/include/lber.h	/^	BER_MEMCALLOC_FN *bmf_calloc;$/;"	m	struct:lber_memory_fns	access:public
bmf_free	/usr/include/lber.h	/^	BER_MEMFREE_FN *bmf_free;$/;"	m	struct:lber_memory_fns	access:public
bmf_malloc	/usr/include/lber.h	/^	BER_MEMALLOC_FN	*bmf_malloc;$/;"	m	struct:lber_memory_fns	access:public
bmf_realloc	/usr/include/lber.h	/^	BER_MEMREALLOC_FN *bmf_realloc;$/;"	m	struct:lber_memory_fns	access:public
bn_reverse	/usr/include/tclTomMathDecls.h	/^#define bn_reverse /;"	d
bnext	/usr/include/mecab.h	/^  struct mecab_learner_node_t *bnext;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
bnext	/usr/include/mecab.h	/^  struct mecab_node_t  *bnext;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
body	/usr/include/fastcgi.h	/^    FCGI_BeginRequestBody body;$/;"	m	struct:__anon55	access:public
body	/usr/include/fastcgi.h	/^    FCGI_EndRequestBody body;$/;"	m	struct:__anon57	access:public
body	/usr/include/fastcgi.h	/^    FCGI_UnknownTypeBody body;$/;"	m	struct:__anon59	access:public
bool	/usr/include/curses.h	/^#define bool /;"	d
bool	/usr/include/curses.h	/^#undef bool$/;"	d
bool	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) use_extended_names (bool);$/;"	v
bool	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) use_env (bool);				\/* implemented *\/$/;"	v
bool	/usr/include/ncurses.h	/^#define bool /;"	d
bool	/usr/include/ncurses.h	/^#undef bool$/;"	d
bool	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) use_extended_names (bool);$/;"	v
bool	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(void) use_env (bool);				\/* implemented *\/$/;"	v
bool	/usr/include/stdbool.h	/^#define	bool	/;"	d
bool	/usr/include/term_entry.h	/^extern NCURSES_EXPORT(int) _nc_resolve_uses (bool); \/* obs 20040705 *\/$/;"	v
bool	/usr/include/tic.h	/^extern NCURSES_EXPORT(const short *) _nc_get_hash_table (bool);$/;"	v
bool	/usr/include/tic.h	/^extern NCURSES_EXPORT(const struct alias *) _nc_get_alias_table (bool);$/;"	v
bool	/usr/include/tic.h	/^extern NCURSES_EXPORT(const struct name_table_entry *) _nc_get_table (bool);$/;"	v
bool	/usr/include/tic.h	/^extern NCURSES_EXPORT(int)  _nc_get_token (bool);$/;"	v
border	/usr/include/curses.h	/^#define border(/;"	d
border	/usr/include/ncurses.h	/^#define border(/;"	d
border_set	/usr/include/curses.h	/^#define border_set(/;"	d
border_set	/usr/include/ncurses.h	/^#define border_set(/;"	d
box	/usr/include/curses.h	/^#define box(/;"	d
box	/usr/include/curses.h	/^#undef box$/;"	d
box	/usr/include/ncurses.h	/^#define box(/;"	d
box	/usr/include/ncurses.h	/^#undef box$/;"	d
box_chars_1	/usr/include/term.h	/^#define box_chars_1 /;"	d
box_set	/usr/include/curses.h	/^#define box_set(/;"	d
box_set	/usr/include/ncurses.h	/^#define box_set(/;"	d
brk	/usr/include/unistd.h	/^void	*brk(const void *);$/;"	p	signature:(const void *)
bsd_signal	/usr/include/signal.h	/^void	(*bsd_signal(int, void (*)(int)))(int);$/;"	p	signature:(int, void (*)(int))
bsearch	/usr/include/stdlib.h	/^void	*bsearch(const void *, const void *, size_t,$/;"	p	signature:(const void *, const void *, size_t, size_t, int (*)(const void *, const void *))
bsearch_b	/usr/include/stdlib.h	/^void	*bsearch_b(const void *, const void *, size_t,$/;"	p	signature:(const void *, const void *, size_t, size_t, int (^)(const void *, const void *))
bsize	/usr/include/db.h	/^	unsigned int	bsize;		\/* bucket size *\/$/;"	m	struct:__anon14	access:public
bstate	/usr/include/curses.h	/^    mmask_t bstate;	\/* button state bits *\/$/;"	m	struct:__anon10	access:public
bstate	/usr/include/ncurses.h	/^    mmask_t bstate;	\/* button state bits *\/$/;"	m	struct:__anon86	access:public
btowc	/usr/include/wchar.h	/^wint_t	btowc(int);$/;"	p	signature:(int)
bucketPtr	/usr/include/tcl.h	/^    Tcl_HashEntry **bucketPtr;	\/* Pointer to bucket that points to first$/;"	m	struct:Tcl_HashEntry	access:public
buckets	/usr/include/strhash.h	/^    hash_node **buckets;$/;"	m	struct:__anon112	access:public
buckets	/usr/include/tcl.h	/^    Tcl_HashEntry **buckets;	\/* Pointer to bucket array. Each element$/;"	m	struct:Tcl_HashTable	access:public
buf	/usr/include/fcgio.h	/^    char_type * buf;$/;"	m	class:fcgi_streambuf	access:private
buf	/usr/include/form.h	/^  FIELD_CELL *		buf;		\/* field buffers		*\/$/;"	m	struct:fieldnode	access:public
buf	/usr/include/term.h	/^extern NCURSES_EXPORT(int) _nc_get_tty_mode (TTY *buf);$/;"	v
buf	/usr/include/term.h	/^extern NCURSES_EXPORT(int) _nc_set_tty_mode (TTY *buf);$/;"	v
buffer	/usr/include/histedit.h	/^	const char	*buffer;$/;"	m	struct:lineinfo	access:public
buffer_capacity	/usr/include/term.h	/^#define buffer_capacity /;"	d
bufsize	/usr/include/fcgio.h	/^    std::streamsize bufsize;$/;"	m	class:fcgi_streambuf	access:private
busy_handler	/usr/include/sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	access:public
busy_timeout	/usr/include/sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	access:public
buttons	/usr/include/term.h	/^#define buttons /;"	d
bv_len	/usr/include/lber.h	/^	ber_len_t	bv_len;$/;"	m	struct:berval	access:public
bv_val	/usr/include/lber.h	/^	char		*bv_val;$/;"	m	struct:berval	access:public
bval	/usr/include/db.h	/^	unsigned char	bval;		\/* delimiting byte (variable-length records *\/$/;"	m	struct:__anon15	access:public
bytes	/usr/include/tcl.h	/^    char *bytes;		\/* This points to the first byte of the$/;"	m	struct:Tcl_Obj	access:public
bz_stream	/usr/include/bzlib.h	/^   bz_stream;$/;"	t	typeref:struct:__anon3
bzalloc	/usr/include/bzlib.h	/^      void *(*bzalloc)(void *,int,int);$/;"	m	struct:__anon3	access:public
bzero	/usr/include/string.h	/^void	 bzero(void *, size_t);$/;"	p	signature:(void *, size_t)
bzero	/usr/include/strings.h	/^void     bzero(void *, size_t);$/;"	p	signature:(void *, size_t)
bzfree	/usr/include/bzlib.h	/^      void (*bzfree)(void *,void *);$/;"	m	struct:__anon3	access:public
cabs	/usr/include/complex.h	/^extern double cabs( double complex );$/;"	p	signature:( double complex )
cabsf	/usr/include/complex.h	/^extern float cabsf( float complex );$/;"	p	signature:( float complex )
cabsl	/usr/include/complex.h	/^extern long double cabsl( long double complex ) __LIBMLDBL_COMPAT(cabsl);$/;"	v
cache_attributes_s	/usr/include/cache.h	/^PUBLIC_API struct cache_attributes_s {$/;"	s
cache_attributes_s::key_hash_cb	/usr/include/cache.h	/^    cache_key_hash_cb_t key_hash_cb;                               $/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::key_is_equal_cb	/usr/include/cache.h	/^    cache_key_is_equal_cb_t key_is_equal_cb;                        $/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::key_release_cb	/usr/include/cache.h	/^    cache_release_cb_t key_release_cb;$/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::key_retain_cb	/usr/include/cache.h	/^    cache_key_retain_cb_t  key_retain_cb;$/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::user_data	/usr/include/cache.h	/^    void *user_data;$/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::value_make_nonpurgeable_cb	/usr/include/cache.h	/^    cache_value_make_nonpurgeable_cb_t value_make_nonpurgeable_cb; $/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::value_make_purgeable_cb	/usr/include/cache.h	/^    cache_value_make_purgeable_cb_t value_make_purgeable_cb;       $/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::value_release_cb	/usr/include/cache.h	/^    cache_release_cb_t value_release_cb;                           $/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::value_retain_cb	/usr/include/cache.h	/^	cache_value_retain_cb_t value_retain_cb;$/;"	m	struct:cache_attributes_s	access:public
cache_attributes_s::version	/usr/include/cache.h	/^    uint32_t version;$/;"	m	struct:cache_attributes_s	access:public
cache_attributes_t	/usr/include/cache.h	/^typedef struct cache_attributes_s cache_attributes_t;$/;"	t	typeref:struct:cache_attributes_s
cache_cost_t	/usr/include/cache.h	/^typedef size_t cache_cost_t;$/;"	t
cache_create	/usr/include/cache.h	/^PUBLIC_API int cache_create(const char *name, cache_attributes_t *attrs, cache_t **cache_out);$/;"	p	signature:(const char *name, cache_attributes_t *attrs, cache_t **cache_out)
cache_destroy	/usr/include/cache.h	/^PUBLIC_API int cache_destroy(cache_t *cache);$/;"	p	signature:(cache_t *cache)
cache_get_and_retain	/usr/include/cache.h	/^PUBLIC_API int cache_get_and_retain(cache_t *cache, void *key, void **value_out);$/;"	p	signature:(cache_t *cache, void *key, void **value_out)
cache_hash_byte_string	/usr/include/cache_callbacks.h	/^uintptr_t cache_hash_byte_string(const char *data, size_t bytes);$/;"	p	signature:(const char *data, size_t bytes)
cache_key_hash_cb_cstring	/usr/include/cache_callbacks.h	/^PUBLIC_API uintptr_t cache_key_hash_cb_cstring(void *key, void *unused);$/;"	p	signature:(void *key, void *unused)
cache_key_hash_cb_integer	/usr/include/cache_callbacks.h	/^PUBLIC_API uintptr_t cache_key_hash_cb_integer(void *key, void *unused);$/;"	p	signature:(void *key, void *unused)
cache_key_hash_cb_t	/usr/include/cache.h	/^typedef uintptr_t (*cache_key_hash_cb_t)(void *key, void *user_data);$/;"	t
cache_key_is_equal_cb_cstring	/usr/include/cache_callbacks.h	/^PUBLIC_API bool cache_key_is_equal_cb_cstring(void *key1, void *key2, void *unused);$/;"	p	signature:(void *key1, void *key2, void *unused)
cache_key_is_equal_cb_integer	/usr/include/cache_callbacks.h	/^PUBLIC_API bool cache_key_is_equal_cb_integer(void *key1, void *key2, void *unused);$/;"	p	signature:(void *key1, void *key2, void *unused)
cache_key_is_equal_cb_t	/usr/include/cache.h	/^typedef bool (*cache_key_is_equal_cb_t)(void *key1, void *key2, void *user_data);$/;"	t
cache_key_retain_cb_t	/usr/include/cache.h	/^typedef void (*cache_key_retain_cb_t)(void *key_in, void **key_out, void *user_data);$/;"	t
cache_release_cb_free	/usr/include/cache_callbacks.h	/^PUBLIC_API void cache_release_cb_free(void *key_or_value, void *unused);$/;"	p	signature:(void *key_or_value, void *unused)
cache_release_cb_t	/usr/include/cache.h	/^typedef void (*cache_release_cb_t)(void *key_or_value, void *user_data);$/;"	t
cache_release_value	/usr/include/cache.h	/^PUBLIC_API int cache_release_value(cache_t *cache, void *value);$/;"	p	signature:(cache_t *cache, void *value)
cache_remove	/usr/include/cache.h	/^PUBLIC_API int cache_remove(cache_t *cache, void *key);$/;"	p	signature:(cache_t *cache, void *key)
cache_remove_all	/usr/include/cache.h	/^PUBLIC_API int cache_remove_all(cache_t *cache);$/;"	p	signature:(cache_t *cache)
cache_set_and_retain	/usr/include/cache.h	/^PUBLIC_API int cache_set_and_retain(cache_t *cache, void *key, void *value, cache_cost_t cost);$/;"	p	signature:(cache_t *cache, void *key, void *value, cache_cost_t cost)
cache_t	/usr/include/cache.h	/^typedef struct cache_s cache_t;$/;"	t	typeref:struct:cache_s
cache_value_make_nonpurgeable_cb	/usr/include/cache_callbacks.h	/^PUBLIC_API bool cache_value_make_nonpurgeable_cb(void *value, void *unused);$/;"	p	signature:(void *value, void *unused)
cache_value_make_nonpurgeable_cb_t	/usr/include/cache.h	/^typedef bool (*cache_value_make_nonpurgeable_cb_t)(void *value, void *user_data);$/;"	t
cache_value_make_purgeable_cb	/usr/include/cache_callbacks.h	/^PUBLIC_API void cache_value_make_purgeable_cb(void *value, void *unused);$/;"	p	signature:(void *value, void *unused)
cache_value_make_purgeable_cb_t	/usr/include/cache.h	/^typedef void (*cache_value_make_purgeable_cb_t)(void *value, void *user_data);$/;"	t
cache_value_retain_cb_t	/usr/include/cache.h	/^typedef void (*cache_value_retain_cb_t)(void *value_in, void *user_data);$/;"	t
cachehit	/usr/include/mpool.h	/^	unsigned long	cachehit;$/;"	m	struct:MPOOL	access:public
cachemiss	/usr/include/mpool.h	/^	unsigned long	cachemiss;$/;"	m	struct:MPOOL	access:public
cachesize	/usr/include/db.h	/^	unsigned int	cachesize;	\/* bytes to cache *\/$/;"	m	struct:__anon13	access:public
cachesize	/usr/include/db.h	/^	unsigned int	cachesize;	\/* bytes to cache *\/$/;"	m	struct:__anon14	access:public
cachesize	/usr/include/db.h	/^	unsigned int	cachesize;	\/* bytes to cache *\/$/;"	m	struct:__anon15	access:public
cacos	/usr/include/complex.h	/^extern double complex cacos( double complex );$/;"	p	signature:( double complex )
cacosf	/usr/include/complex.h	/^extern float complex cacosf( float complex );$/;"	p	signature:( float complex )
cacosh	/usr/include/complex.h	/^extern double complex cacosh( double complex );$/;"	p	signature:( double complex )
cacoshf	/usr/include/complex.h	/^extern float complex cacoshf( float complex );$/;"	p	signature:( float complex )
cacoshl	/usr/include/complex.h	/^extern long double complex cacoshl( long double complex ) __LIBMLDBL_COMPAT(cacoshl);$/;"	v
cacosl	/usr/include/complex.h	/^extern long double complex cacosl( long double complex ) __LIBMLDBL_COMPAT(cacosl);$/;"	v
calloc	/usr/include/stdlib.h	/^void	*calloc(size_t, size_t);$/;"	p	signature:(size_t, size_t)
can_change	/usr/include/term.h	/^#define can_change /;"	d
carg	/usr/include/complex.h	/^extern double carg( double complex );$/;"	p	signature:( double complex )
cargf	/usr/include/complex.h	/^extern float cargf( float complex );$/;"	p	signature:( float complex )
cargl	/usr/include/complex.h	/^extern long double cargl( long double complex ) __LIBMLDBL_COMPAT(cargl);$/;"	v
carriage_return	/usr/include/term.h	/^#define carriage_return /;"	d
carriage_return_delay	/usr/include/term.h	/^#define carriage_return_delay /;"	d
casin	/usr/include/complex.h	/^extern double complex casin( double complex );$/;"	p	signature:( double complex )
casinf	/usr/include/complex.h	/^extern float complex casinf( float complex );$/;"	p	signature:( float complex )
casinh	/usr/include/complex.h	/^extern double complex casinh( double complex );$/;"	p	signature:( double complex )
casinhf	/usr/include/complex.h	/^extern float complex casinhf( float complex );$/;"	p	signature:( float complex )
casinhl	/usr/include/complex.h	/^extern long double complex casinhl( long double complex ) __LIBMLDBL_COMPAT(casinhl);$/;"	v
casinl	/usr/include/complex.h	/^extern long double complex casinl( long double complex ) __LIBMLDBL_COMPAT(casinl);$/;"	v
catan	/usr/include/complex.h	/^extern double complex catan( double complex );$/;"	p	signature:( double complex )
catanf	/usr/include/complex.h	/^extern float complex catanf( float complex );$/;"	p	signature:( float complex )
catanh	/usr/include/complex.h	/^extern double complex catanh( double complex );$/;"	p	signature:( double complex )
catanhf	/usr/include/complex.h	/^extern float complex catanhf( float complex );$/;"	p	signature:( float complex )
catanhl	/usr/include/complex.h	/^extern long double complex catanhl( long double complex ) __LIBMLDBL_COMPAT(catanhl);$/;"	v
catanl	/usr/include/complex.h	/^extern long double complex catanl( long double complex ) __LIBMLDBL_COMPAT(catanl);$/;"	v
catclose	/usr/include/nl_types.h	/^extern int	catclose(nl_catd);$/;"	p	signature:(nl_catd)
catgets	/usr/include/nl_types.h	/^extern char    *catgets(nl_catd, int, int, const char *);$/;"	p	signature:(nl_catd, int, int, const char *)
catopen	/usr/include/nl_types.h	/^extern nl_catd 	catopen(const char *, int);$/;"	p	signature:(const char *, int)
cchar_t	/usr/include/curses.h	/^cchar_t;$/;"	t	typeref:struct:__anon5
cchar_t	/usr/include/ncurses.h	/^cchar_t;$/;"	t	typeref:struct:__anon81
ccheck	/usr/include/form.h	/^  bool	(*ccheck)(int,const void *);		\/* character validation *\/$/;"	m	struct:typenode	access:public
ccos	/usr/include/complex.h	/^extern double complex ccos( double complex );$/;"	p	signature:( double complex )
ccosf	/usr/include/complex.h	/^extern float complex ccosf( float complex );$/;"	p	signature:( float complex )
ccosh	/usr/include/complex.h	/^extern double complex ccosh( double complex );$/;"	p	signature:( double complex )
ccoshf	/usr/include/complex.h	/^extern float complex ccoshf( float complex );$/;"	p	signature:( float complex )
ccoshl	/usr/include/complex.h	/^extern long double complex ccoshl( long double complex ) __LIBMLDBL_COMPAT(ccoshl);$/;"	v
ccosl	/usr/include/complex.h	/^extern long double complex ccosl( long double complex ) __LIBMLDBL_COMPAT(ccosl);$/;"	v
cend	/usr/include/term_entry.h	/^	long		cstart, cend;$/;"	m	struct:entry	access:public
ceol_standout_glitch	/usr/include/term.h	/^#define ceol_standout_glitch /;"	d
cert_t_oid	/usr/include/nameser.h	/^	cert_t_oid  = 254	\/* OID private type *\/$/;"	e	enum:__ns_cert_types
cert_t_pgp	/usr/include/nameser.h	/^	cert_t_pgp  = 3,	\/* PGP *\/$/;"	e	enum:__ns_cert_types
cert_t_pkix	/usr/include/nameser.h	/^	cert_t_pkix = 1,	\/* PKIX (X.509v3) *\/$/;"	e	enum:__ns_cert_types
cert_t_spki	/usr/include/nameser.h	/^	cert_t_spki = 2,	\/* SPKI *\/$/;"	e	enum:__ns_cert_types
cert_t_url	/usr/include/nameser.h	/^	cert_t_url  = 253,	\/* URL private type *\/$/;"	e	enum:__ns_cert_types
cexp	/usr/include/complex.h	/^extern double complex cexp( double complex );$/;"	p	signature:( double complex )
cexpf	/usr/include/complex.h	/^extern float complex cexpf( float complex );$/;"	p	signature:( float complex )
cexpl	/usr/include/complex.h	/^extern long double complex cexpl( long double complex ) __LIBMLDBL_COMPAT(cexpl);$/;"	v
cgetcap	/usr/include/stdlib.h	/^char	*cgetcap(char *, const char *, int);$/;"	p	signature:(char *, const char *, int)
cgetclose	/usr/include/stdlib.h	/^int	 cgetclose(void);$/;"	p	signature:(void)
cgetent	/usr/include/stdlib.h	/^int	 cgetent(char **, char **, const char *);$/;"	p	signature:(char **, char **, const char *)
cgetfirst	/usr/include/stdlib.h	/^int	 cgetfirst(char **, char **);$/;"	p	signature:(char **, char **)
cgetmatch	/usr/include/stdlib.h	/^int	 cgetmatch(const char *, const char *);$/;"	p	signature:(const char *, const char *)
cgetnext	/usr/include/stdlib.h	/^int	 cgetnext(char **, char **);$/;"	p	signature:(char **, char **)
cgetnum	/usr/include/stdlib.h	/^int	 cgetnum(char *, const char *, long *);$/;"	p	signature:(char *, const char *, long *)
cgetset	/usr/include/stdlib.h	/^int	 cgetset(const char *);$/;"	p	signature:(const char *)
cgetstr	/usr/include/stdlib.h	/^int	 cgetstr(char *, const char *, char **);$/;"	p	signature:(char *, const char *, char **)
cgetustr	/usr/include/stdlib.h	/^int	 cgetustr(char *, const char *, char **);$/;"	p	signature:(char *, const char *, char **)
change_char_pitch	/usr/include/term.h	/^#define change_char_pitch /;"	d
change_line_pitch	/usr/include/term.h	/^#define change_line_pitch /;"	d
change_res_horz	/usr/include/term.h	/^#define change_res_horz /;"	d
change_res_vert	/usr/include/term.h	/^#define change_res_vert /;"	d
change_scroll_region	/usr/include/term.h	/^#define change_scroll_region /;"	d
changes	/usr/include/sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
changes	/usr/include/tk.h	/^    XWindowChanges changes;$/;"	m	struct:Tk_FakeWin	access:public
char_padding	/usr/include/term.h	/^#define char_padding /;"	d
char_set_names	/usr/include/term.h	/^#define char_set_names /;"	d
char_type	/usr/include/fcgio.h	/^typedef char char_type;$/;"	t
char_type	/usr/include/mecab.h	/^  unsigned char                char_type;$/;"	m	struct:mecab_learner_node_t	access:public
char_type	/usr/include/mecab.h	/^  unsigned char         char_type;$/;"	m	struct:mecab_node_t	access:public
charf	/usr/include/zconf.h	/^#  define charf /;"	d
charf	/usr/include/zconf.h	/^typedef char  FAR charf;$/;"	t
chars	/usr/include/curses.h	/^    wchar_t	chars[CCHARW_MAX];$/;"	m	struct:__anon5	access:public
chars	/usr/include/ncurses.h	/^    wchar_t	chars[CCHARW_MAX];$/;"	m	struct:__anon81	access:public
charset	/usr/include/mecab.h	/^  const char                     *charset;$/;"	m	struct:mecab_dictionary_info_t	access:public
chdir	/usr/include/unistd.h	/^int	 chdir(const char *);$/;"	p	signature:(const char *)
chdirProc	/usr/include/tcl.h	/^    Tcl_FSChdirProc *chdirProc;	\/* Function to process a 'Tcl_FSChdir()' call.$/;"	m	struct:Tcl_Filesystem	access:public
check	/usr/include/AssertMacros.h	/^	#define check(/;"	d
check_compile_time	/usr/include/AssertMacros.h	/^		#define check_compile_time(/;"	d
check_int32_add	/usr/include/checkint.h	/^#define check_int32_add(/;"	d
check_int32_div	/usr/include/checkint.h	/^#define check_int32_div(/;"	d
check_int32_mul	/usr/include/checkint.h	/^#define check_int32_mul(/;"	d
check_int32_sub	/usr/include/checkint.h	/^#define check_int32_sub(/;"	d
check_int64_add	/usr/include/checkint.h	/^#define check_int64_add(/;"	d
check_int64_div	/usr/include/checkint.h	/^#define check_int64_div(/;"	d
check_int64_mul	/usr/include/checkint.h	/^#define check_int64_mul(/;"	d
check_int64_sub	/usr/include/checkint.h	/^#define check_int64_sub(/;"	d
check_noerr	/usr/include/AssertMacros.h	/^	#define check_noerr(/;"	d
check_noerr_string	/usr/include/AssertMacros.h	/^		#define check_noerr_string(/;"	d
check_string	/usr/include/AssertMacros.h	/^		#define check_string(/;"	d
check_uint32_add	/usr/include/checkint.h	/^#define check_uint32_add(/;"	d
check_uint32_div	/usr/include/checkint.h	/^#define check_uint32_div(/;"	d
check_uint32_mul	/usr/include/checkint.h	/^#define check_uint32_mul(/;"	d
check_uint32_sub	/usr/include/checkint.h	/^#define check_uint32_sub(/;"	d
check_uint64_add	/usr/include/checkint.h	/^#define check_uint64_add(/;"	d
check_uint64_div	/usr/include/checkint.h	/^#define check_uint64_div(/;"	d
check_uint64_mul	/usr/include/checkint.h	/^#define check_uint64_mul(/;"	d
check_uint64_sub	/usr/include/checkint.h	/^#define check_uint64_sub(/;"	d
chgat	/usr/include/curses.h	/^#define chgat(/;"	d
chgat	/usr/include/ncurses.h	/^#define chgat(/;"	d
children	/usr/include/expat.h	/^  XML_Content *                 children;$/;"	m	struct:XML_cp	access:public
chown	/usr/include/unistd.h	/^int	 chown(const char *, uid_t, gid_t);$/;"	p	signature:(const char *, uid_t, gid_t)
chroot	/usr/include/unistd.h	/^int	 chroot(const char *);$/;"	p	signature:(const char *)
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _tracechtype (chtype);$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addch (const chtype);			\/* generated *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) bkgd (chtype);				\/* generated *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) echochar (const chtype);			\/* generated *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) insch (chtype);				\/* generated *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attroff (const chtype);			\/* implemented *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attron (const chtype);			\/* implemented *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attrset (const chtype);			\/* implemented *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vidattr (chtype);				\/* implemented *\/$/;"	v
chtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) bkgdset (chtype);				\/* generated *\/$/;"	v
chtype	/usr/include/curses.h	/^typedef unsigned int chtype;$/;"	t
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(char *) _tracechtype (chtype);$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) addch (const chtype);			\/* generated *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) bkgd (chtype);				\/* generated *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) echochar (const chtype);			\/* generated *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) insch (chtype);				\/* generated *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) slk_attroff (const chtype);			\/* implemented *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) slk_attron (const chtype);			\/* implemented *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) slk_attrset (const chtype);			\/* implemented *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(int) vidattr (chtype);				\/* implemented *\/$/;"	v
chtype	/usr/include/ncurses.h	/^extern NCURSES_EXPORT(void) bkgdset (chtype);				\/* generated *\/$/;"	v
chtype	/usr/include/ncurses.h	/^typedef unsigned int chtype;$/;"	t
chtype	/usr/include/unctrl.h	/^NCURSES_EXPORT(NCURSES_CONST char *) unctrl (chtype);$/;"	v
cimag	/usr/include/complex.h	/^extern double cimag( double complex );$/;"	p	signature:( double complex )
cimagf	/usr/include/complex.h	/^extern float cimagf( float complex );$/;"	p	signature:( float complex )
cimagl	/usr/include/complex.h	/^extern long double cimagl( long double complex ) __LIBMLDBL_COMPAT(cimagl);$/;"	v
ckalloc	/usr/include/tcl.h	/^#   define ckalloc(/;"	d
ckfree	/usr/include/tcl.h	/^#   define ckfree(/;"	d
ckrealloc	/usr/include/tcl.h	/^#   define ckrealloc(/;"	d
classUid	/usr/include/tk.h	/^    Tk_Uid classUid;$/;"	m	struct:Tk_FakeWin	access:public
clean_exit	/usr/include/tcpd.h	/^extern void clean_exit();		\/* clean up and exit *\/$/;"	p	signature:()
cleanup	/usr/include/tcpd.h	/^    void  (*cleanup) ();		\/* cleanup function or 0 *\/$/;"	m	struct:request_info	access:public
clear	/usr/include/curses.h	/^#define clear(/;"	d
clear	/usr/include/curses.h	/^#undef clear$/;"	d
clear	/usr/include/ncurses.h	/^#define clear(/;"	d
clear	/usr/include/ncurses.h	/^#undef clear$/;"	d
clear_all_tabs	/usr/include/term.h	/^#define clear_all_tabs /;"	d
clear_bindings	/usr/include/sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
clear_margins	/usr/include/term.h	/^#define clear_margins /;"	d
clear_screen	/usr/include/term.h	/^#define clear_screen /;"	d
clearerr	/usr/include/fcgi_stdio.h	/^#define	clearerr /;"	d
clearerr	/usr/include/fcgi_stdio.h	/^#undef  clearerr$/;"	d
clearerr	/usr/include/stdio.h	/^void	 clearerr(FILE *);$/;"	p	signature:(FILE *)
clearerr_unlocked	/usr/include/stdio.h	/^#define	clearerr_unlocked(/;"	d
client	/usr/include/tcpd.h	/^    struct host_info client[1];		\/* client endpoint info *\/$/;"	m	struct:request_info	typeref:struct:request_info::host_info	access:public
clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* Application stores something here with$/;"	m	struct:Tcl_HashEntry	access:public
clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* Arbitrary value associated with encoding$/;"	m	struct:Tcl_EncodingType	access:public
clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* Arbitrary value associated with this$/;"	m	struct:Tcl_Namespace	access:public
clientData	/usr/include/tcl.h	/^    ClientData clientData;	\/* ClientData for string proc. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
clientData	/usr/include/tk.h	/^    ClientData clientData;	\/* An alternate place to put option-specific$/;"	m	struct:Tk_OptionSpec	access:public
clientData	/usr/include/tk.h	/^    ClientData clientData;	\/* Arbitrary one-word value passed to the$/;"	m	struct:Tk_ObjCustomOption	access:public
clientData	/usr/include/tk.h	/^    ClientData clientData;	\/* Arbitrary one-word value used by option$/;"	m	struct:Tk_CustomOption	access:public
clock	/usr/include/time.h	/^clock_t clock(void) __DARWIN_ALIAS(clock);$/;"	v
clock_t	/usr/include/time.h	/^typedef	__darwin_clock_t	clock_t;$/;"	t
clog	/usr/include/complex.h	/^extern double complex clog( double complex );$/;"	p	signature:( double complex )
clogf	/usr/include/complex.h	/^extern float complex clogf( float complex );$/;"	p	signature:( float complex )
clogl	/usr/include/complex.h	/^extern long double complex clogl( long double complex ) __LIBMLDBL_COMPAT(clogl);$/;"	v
close	/usr/include/db.h	/^	int (*close)(struct __db *);$/;"	m	struct:__db	access:public
close	/usr/include/sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
close	/usr/include/unistd.h	/^int	 close(int) __DARWIN_ALIAS_C(close);$/;"	v
close2Proc	/usr/include/tcl.h	/^    Tcl_DriverClose2Proc *close2Proc;$/;"	m	struct:Tcl_ChannelType	access:public
closeProc	/usr/include/tcl.h	/^    Tcl_DriverCloseProc *closeProc;$/;"	m	struct:Tcl_ChannelType	access:public
closedir	/usr/include/dirent.h	/^int closedir(DIR *) __DARWIN_ALIAS(closedir);$/;"	v
clr_bol	/usr/include/term.h	/^#define clr_bol /;"	d
clr_eol	/usr/include/term.h	/^#define clr_eol /;"	d
clr_eos	/usr/include/term.h	/^#define clr_eos /;"	d
clrtobot	/usr/include/curses.h	/^#define clrtobot(/;"	d
clrtobot	/usr/include/ncurses.h	/^#define clrtobot(/;"	d
clrtoeol	/usr/include/curses.h	/^#define clrtoeol(/;"	d
clrtoeol	/usr/include/ncurses.h	/^#define clrtoeol(/;"	d
code	/usr/include/tic.h	/^	chtype code;$/;"	m	struct:tinfo_fkeys	access:public
code_set_init	/usr/include/term.h	/^#define code_set_init /;"	d
col_addr_glitch	/usr/include/term.h	/^#define col_addr_glitch /;"	d
collation_needed	/usr/include/sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const char*));$/;"	m	struct:sqlite3_api_routines	access:public
collation_needed16	/usr/include/sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const void*));$/;"	m	struct:sqlite3_api_routines	access:public
color	/usr/include/tk.h	/^    XColor *color;		\/* Outline color. *\/$/;"	m	struct:Tk_Outline	access:public
color_names	/usr/include/term.h	/^#define color_names /;"	d
color_set	/usr/include/curses.h	/^#define color_set(/;"	d
color_set	/usr/include/ncurses.h	/^#define color_set(/;"	d
colormap	/usr/include/Xplugin.h	/^    xp_colormap_fun *colormap;$/;"	m	struct:xp_window_changes_struct	access:public
colormap_data	/usr/include/Xplugin.h	/^    void *colormap_data;$/;"	m	struct:xp_window_changes_struct	access:public
cols	/usr/include/form.h	/^  short			cols;		\/* size in cols			*\/$/;"	m	struct:fieldnode	access:public
cols	/usr/include/form.h	/^  short			cols;		\/* size in cols			*\/$/;"	m	struct:formnode	access:public
cols	/usr/include/menu.h	/^  short          cols;                  \/* Nr. of items wide               *\/$/;"	m	struct:tagMENU	access:public
column_address	/usr/include/term.h	/^#define column_address /;"	d
column_blob	/usr/include/sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_bytes	/usr/include/sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_bytes16	/usr/include/sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_count	/usr/include/sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
column_database_name	/usr/include/sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_database_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_decltype	/usr/include/sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	access:public
column_decltype16	/usr/include/sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_double	/usr/include/sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_int	/usr/include/sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_int64	/usr/include/sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_name	/usr/include/sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_origin_name	/usr/include/sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_origin_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_table_name	/usr/include/sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_table_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
column_text	/usr/include/sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_text16	/usr/include/sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_type	/usr/include/sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
column_value	/usr/include/sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
columns	/usr/include/term.h	/^#define columns /;"	d
com_err	/usr/include/com_err.h	/^void com_err    (const char *progname, errcode_t code, const char *format, ...);$/;"	p	signature:(const char *progname, errcode_t code, const char *format, ...)
com_err_handler_t	/usr/include/com_err.h	/^typedef void (*com_err_handler_t)$/;"	t
com_err_va	/usr/include/com_err.h	/^void com_err_va (const char *progname, errcode_t code, const char *format, va_list args);$/;"	p	signature:(const char *progname, errcode_t code, const char *format, va_list args)
comm_max	/usr/include/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
commandSize	/usr/include/tcl.h	/^    int commandSize;		\/* Number of bytes in command, including first$/;"	m	struct:Tcl_Parse	access:public
commandStart	/usr/include/tcl.h	/^    CONST char *commandStart;	\/* First character in first word of$/;"	m	struct:Tcl_Parse	access:public
command_character	/usr/include/term.h	/^#define command_character /;"	d
comment	/usr/include/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
commentSize	/usr/include/tcl.h	/^    int commentSize;		\/* Number of bytes in comments (up through$/;"	m	struct:Tcl_Parse	access:public
commentStart	/usr/include/tcl.h	/^    CONST char *commentStart;	\/* Pointer to # that begins the first of one$/;"	m	struct:Tcl_Parse	access:public
commit_hook	/usr/include/sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
compare	/usr/include/db.h	/^	int		(*compare)	\/* comparison function *\/$/;"	m	struct:__anon13	access:public
compareKeysProc	/usr/include/tcl.h	/^    Tcl_CompareHashKeysProc *compareKeysProc;$/;"	m	struct:Tcl_HashKeyType	access:public
compat_mode	/usr/include/get_compat.h	/^extern bool compat_mode(const char *function, const char *mode);$/;"	p	signature:(const char *function, const char *mode)
compl	/usr/include/iso646.h	/^#define	compl	/;"	d
complete	/usr/include/sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	access:public
complete16	/usr/include/sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	access:public
complex	/usr/include/complex.h	/^#define complex /;"	d
complex	/usr/include/complex.h	/^#undef complex$/;"	d
compound	/usr/include/mecab.h	/^  unsigned int   compound;  \/* reserved for noun compound *\/$/;"	m	struct:mecab_token_t	access:public
compress	/usr/include/zconf.h	/^#  define compress /;"	d
compress	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT compress OF((Bytef *dest,   uLongf *destLen,$/;"	p	signature:(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
compress2	/usr/include/zconf.h	/^#  define compress2 /;"	d
compress2	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,$/;"	p	signature:(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level)
compressBound	/usr/include/zconf.h	/^#  define compressBound /;"	d
compressBound	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT compressBound OF((uLong sourceLen));$/;"	p	signature:(uLong sourceLen)
compute_evaluator	/usr/include/slapi-plugin.h	/^int compute_evaluator(computed_attr_context *c, char *type, Slapi_Entry *e, slapi_compute_output_t outputfn);$/;"	p	signature:(computed_attr_context *c, char *type, Slapi_Entry *e, slapi_compute_output_t outputfn)
compute_rewrite_search_filter	/usr/include/slapi-plugin.h	/^int compute_rewrite_search_filter(Slapi_PBlock *pb);$/;"	p	signature:(Slapi_PBlock *pb)
computed_attr_context	/usr/include/slapi-plugin.h	/^typedef struct _computed_attr_context computed_attr_context;$/;"	t	typeref:struct:_computed_attr_context
config	/usr/include/tcpd.h	/^    struct netconfig *config;		\/* netdir handle *\/$/;"	m	struct:request_info	typeref:struct:request_info::netconfig	access:public
configProc	/usr/include/tk.h	/^    Tk_ItemConfigureProc *configProc;$/;"	m	struct:Tk_ItemType	access:public
configSpecs	/usr/include/tk.h	/^    Tk_ConfigSpec *configSpecs;	\/* Pointer to array of configuration specs for$/;"	m	struct:Tk_ItemType	access:public
confstr	/usr/include/unistd.h	/^size_t	 confstr(int, char *, size_t) __DARWIN_ALIAS(confstr);$/;"	v
conj	/usr/include/complex.h	/^extern double complex conj( double complex );$/;"	p	signature:( double complex )
conjf	/usr/include/complex.h	/^extern float complex conjf( float complex );$/;"	p	signature:( float complex )
conjl	/usr/include/complex.h	/^extern long double complex conjl( long double complex ) __LIBMLDBL_COMPAT(conjl);$/;"	v
const	/usr/include/zconf.h	/^#    define const /;"	d
const_profile_filespec_list_t	/usr/include/profile.h	/^typedef const char * const_profile_filespec_list_t;	\/* list of : separated paths, C string *\/$/;"	t
const_profile_filespec_t	/usr/include/profile.h	/^typedef const char * const_profile_filespec_t;	\/* path as C string *\/$/;"	t
contentLengthB0	/usr/include/fastcgi.h	/^    unsigned char contentLengthB0;$/;"	m	struct:__anon53	access:public
contentLengthB1	/usr/include/fastcgi.h	/^    unsigned char contentLengthB1;$/;"	m	struct:__anon53	access:public
context_db_handle	/usr/include/sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
convert	/usr/include/expat.h	/^  int (XMLCALL *convert)(void *data, const char *s);$/;"	m	struct:__anon49	access:public
coordProc	/usr/include/tk.h	/^    Tk_ItemCoordProc *coordProc;\/* Procedure to call to get and set the item's$/;"	m	struct:Tk_ItemType	access:public
coordProc	/usr/include/tk.h	/^    int (*coordProc) _ANSI_ARGS_((Tk_Canvas canvas,$/;"	m	struct:Tk_SmoothMethod	access:public
copyDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSCopyDirectoryProc *copyDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
copyFileProc	/usr/include/tcl.h	/^    Tcl_FSCopyFileProc *copyFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
copyarg	/usr/include/form.h	/^  void* (*copyarg)(const void *);		\/* copy fieldtype arg	*\/$/;"	m	struct:typenode	access:public
copyfile	/usr/include/copyfile.h	/^int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags);$/;"	p	signature:(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
copyfile_callback_t	/usr/include/copyfile.h	/^typedef int (*copyfile_callback_t)(int, int, copyfile_state_t, const char *, const char *, void *);$/;"	t
copyfile_flags_t	/usr/include/copyfile.h	/^typedef uint32_t copyfile_flags_t;$/;"	t
copyfile_state_alloc	/usr/include/copyfile.h	/^copyfile_state_t copyfile_state_alloc(void);$/;"	p	signature:(void)
copyfile_state_free	/usr/include/copyfile.h	/^int copyfile_state_free(copyfile_state_t);$/;"	p	signature:(copyfile_state_t)
copyfile_state_get	/usr/include/copyfile.h	/^int copyfile_state_get(copyfile_state_t s, uint32_t flag, void * dst);$/;"	p	signature:(copyfile_state_t s, uint32_t flag, void * dst)
copyfile_state_set	/usr/include/copyfile.h	/^int copyfile_state_set(copyfile_state_t s, uint32_t flag, const void * src);$/;"	p	signature:(copyfile_state_t s, uint32_t flag, const void * src)
copyfile_state_t	/usr/include/copyfile.h	/^typedef struct _copyfile_state * copyfile_state_t;$/;"	t	typeref:struct:_copyfile_state
cost	/usr/include/mecab.h	/^  double                        cost;$/;"	m	struct:mecab_learner_path_t	access:public
cost	/usr/include/mecab.h	/^  double                       cost;$/;"	m	struct:mecab_learner_node_t	access:public
cost	/usr/include/mecab.h	/^  int                  cost;$/;"	m	struct:mecab_path_t	access:public
cost	/usr/include/mecab.h	/^  long                  cost;$/;"	m	struct:mecab_node_t	access:public
count	/usr/include/com_err.h	/^    int32_t count;$/;"	m	struct:error_table	access:public
count	/usr/include/curses.h	/^    int count;$/;"	m	struct:__anon9	access:public
count	/usr/include/ncurses.h	/^    int count;$/;"	m	struct:__anon85	access:public
counter	/usr/include/nameser.h	/^	int counter;$/;"	m	struct:ns_tcp_tsig_state	access:public
cpi_changes_res	/usr/include/term.h	/^#define cpi_changes_res /;"	d
cpow	/usr/include/complex.h	/^extern double complex cpow( double complex, double complex );$/;"	p	signature:( double complex, double complex )
cpowf	/usr/include/complex.h	/^extern float complex cpowf( float complex, float complex );$/;"	p	signature:( float complex, float complex )
cpowl	/usr/include/complex.h	/^extern long double complex cpowl( long double complex, long double complex ) __LIBMLDBL_COMPAT(cpowl);$/;"	v
cproj	/usr/include/complex.h	/^extern double complex cproj( double complex );$/;"	p	signature:( double complex )
cprojf	/usr/include/complex.h	/^extern float complex cprojf( float complex );$/;"	p	signature:( float complex )
cprojl	/usr/include/complex.h	/^extern long double complex cprojl( long double complex ) __LIBMLDBL_COMPAT(cprojl);$/;"	v
cpu	/usr/include/dns_util.h	/^	char *cpu;$/;"	m	struct:__anon29	access:public
cr_at_oids_may	/usr/include/ldap_schema.h	/^	char **cr_at_oids_may;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_at_oids_must	/usr/include/ldap_schema.h	/^	char **cr_at_oids_must;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_at_oids_not	/usr/include/ldap_schema.h	/^	char **cr_at_oids_not;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_cancels_micro_mode	/usr/include/term.h	/^#define cr_cancels_micro_mode /;"	d
cr_desc	/usr/include/ldap_schema.h	/^	char *cr_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **cr_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_names	/usr/include/ldap_schema.h	/^	char **cr_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_obsolete	/usr/include/ldap_schema.h	/^	int  cr_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_contentrule	access:public
cr_oc_oids_aux	/usr/include/ldap_schema.h	/^	char **cr_oc_oids_aux;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
cr_oid	/usr/include/ldap_schema.h	/^	char *cr_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_contentrule	access:public
cr_sup_oids	/usr/include/ldap_schema.h	/^	char **cr_sup_oids;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
crc32	/usr/include/zconf.h	/^#  define crc32 /;"	d
crc32	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT crc32   OF((uLong crc, const Bytef *buf, uInt len));$/;"	p	signature:(uLong crc, const Bytef *buf, uInt len)
crc32_combine	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));$/;"	p	signature:(uLong crc1, uLong crc2, z_off_t len2)
creal	/usr/include/complex.h	/^extern double creal( double complex );$/;"	p	signature:( double complex )
crealf	/usr/include/complex.h	/^extern float crealf( float complex );$/;"	p	signature:( float complex )
creall	/usr/include/complex.h	/^extern long double creall( long double complex ) __LIBMLDBL_COMPAT(creall);$/;"	v
create	/usr/include/mecab.h	/^    static Tagger* create(const char *arg);$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *arg)
create	/usr/include/mecab.h	/^    static Tagger* create(int argc, char **argv);$/;"	p	class:MeCab::Tagger	access:public	signature:(int argc, char **argv)
createDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSCreateDirectoryProc *createDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
createFileHandlerProc	/usr/include/tcl.h	/^    Tcl_CreateFileHandlerProc *createFileHandlerProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
createInternalRepProc	/usr/include/tcl.h	/^    Tcl_FSCreateInternalRepProc *createInternalRepProc;$/;"	m	struct:Tcl_Filesystem	access:public
createProc	/usr/include/tcl.h	/^    Tcl_HashEntry *(*createProc) _ANSI_ARGS_((Tcl_HashTable *tablePtr,$/;"	m	struct:Tcl_HashTable	access:public
createProc	/usr/include/tk.h	/^    Tk_ClassCreateProc *createProc;$/;"	m	struct:Tk_ClassProcs	access:public
createProc	/usr/include/tk.h	/^    Tk_ImageCreateProc *createProc;$/;"	m	struct:Tk_ImageType	access:public
createProc	/usr/include/tk.h	/^    Tk_ItemCreateProc *createProc;$/;"	m	struct:Tk_ItemType	access:public
createTagger	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN Tagger *createTagger(const char *arg);$/;"	p	namespace:MeCab	signature:(const char *arg)
createTagger	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN Tagger *createTagger(int argc, char **argv);$/;"	p	namespace:MeCab	signature:(int argc, char **argv)
create_collation	/usr/include/sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*));$/;"	m	struct:sqlite3_api_routines	access:public
create_collation16	/usr/include/sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,int(*)(void*,int,const void*,int,const void*));$/;"	m	struct:sqlite3_api_routines	access:public
create_collation_v2	/usr/include/sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*),void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
create_function	/usr/include/sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));$/;"	m	struct:sqlite3_api_routines	access:public
create_function16	/usr/include/sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));$/;"	m	struct:sqlite3_api_routines	access:public
create_module	/usr/include/sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	access:public
create_module_v2	/usr/include/sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,void (*xDestroy)(void *));$/;"	m	struct:sqlite3_api_routines	access:public
create_window	/usr/include/term.h	/^#define create_window /;"	d
crmode	/usr/include/curses.h	/^#define crmode(/;"	d
crmode	/usr/include/ncurses.h	/^#define crmode(/;"	d
crosslinks	/usr/include/term_entry.h	/^	struct entry	*crosslinks[MAX_CROSSLINKS];$/;"	m	struct:entry	typeref:struct:entry::entry	access:public
crt_no_scrolling	/usr/include/term.h	/^#define crt_no_scrolling /;"	d
crypt	/usr/include/unistd.h	/^char	*crypt(const char *, const char *);$/;"	p	signature:(const char *, const char *)
csin	/usr/include/complex.h	/^extern double complex csin( double complex );$/;"	p	signature:( double complex )
csinf	/usr/include/complex.h	/^extern float complex csinf( float complex );$/;"	p	signature:( float complex )
csinh	/usr/include/complex.h	/^extern double complex csinh( double complex );$/;"	p	signature:( double complex )
csinhf	/usr/include/complex.h	/^extern float complex csinhf( float complex );$/;"	p	signature:( float complex )
csinhl	/usr/include/complex.h	/^extern long double complex csinhl( long double complex ) __LIBMLDBL_COMPAT(csinhl);$/;"	v
csinl	/usr/include/complex.h	/^extern long double complex csinl( long double complex ) __LIBMLDBL_COMPAT(csinl);$/;"	v
csqrt	/usr/include/complex.h	/^extern double complex csqrt( double complex );$/;"	p	signature:( double complex )
csqrtf	/usr/include/complex.h	/^extern float complex csqrtf( float complex );$/;"	p	signature:( float complex )
csqrtl	/usr/include/complex.h	/^extern long double complex csqrtl( long double complex ) __LIBMLDBL_COMPAT(csqrtl);$/;"	v
cstart	/usr/include/term_entry.h	/^	long		cstart, cend;$/;"	m	struct:entry	access:public
ct_rune_t	/usr/include/runetype.h	/^typedef	__darwin_ct_rune_t	ct_rune_t;$/;"	t
ct_rune_t	/usr/include/stdlib.h	/^typedef	__darwin_ct_rune_t	ct_rune_t;$/;"	t
ct_rune_t	/usr/include/wchar.h	/^typedef	__darwin_ct_rune_t	ct_rune_t;$/;"	t
ctan	/usr/include/complex.h	/^extern double complex ctan( double complex );$/;"	p	signature:( double complex )
ctanf	/usr/include/complex.h	/^extern float complex ctanf( float complex );$/;"	p	signature:( float complex )
ctanh	/usr/include/complex.h	/^extern double complex ctanh( double complex );$/;"	p	signature:( double complex )
ctanhf	/usr/include/complex.h	/^extern float complex ctanhf( float complex );$/;"	p	signature:( float complex )
ctanhl	/usr/include/complex.h	/^extern long double complex ctanhl( long double complex ) __LIBMLDBL_COMPAT(ctanhl);$/;"	v
ctanl	/usr/include/complex.h	/^extern long double complex ctanl( long double complex ) __LIBMLDBL_COMPAT(ctanl);$/;"	v
ctermid	/usr/include/stdio.h	/^char	*ctermid(char *);$/;"	p	signature:(char *)
ctermid	/usr/include/unistd.h	/^char	*ctermid(char *);$/;"	p	signature:(char *)
ctermid_r	/usr/include/stdio.h	/^char	*ctermid_r(char *);$/;"	p	signature:(char *)
ctime	/usr/include/time.h	/^char *ctime(const time_t *);$/;"	p	signature:(const time_t *)
ctime_r	/usr/include/time.h	/^char *ctime_r(const time_t *, char *);$/;"	p	signature:(const time_t *, char *)
ctx	/usr/include/nameser.h	/^	void *ctx;$/;"	m	struct:ns_tcp_tsig_state	access:public
curcache	/usr/include/mpool.h	/^	pgno_t	curcache;		\/* current number of cached pages *\/$/;"	m	struct:MPOOL	access:public
curcol	/usr/include/form.h	/^  int			curcol;		\/* current col in field window	*\/$/;"	m	struct:formnode	access:public
curitem	/usr/include/menu.h	/^  ITEM          *curitem;               \/* Current item                    *\/$/;"	m	struct:tagMENU	access:public
curpage	/usr/include/form.h	/^  short			curpage;	\/* index into page		*\/$/;"	m	struct:formnode	access:public
currency_symbol	/usr/include/_locale.h	/^	char	*currency_symbol;$/;"	m	struct:lconv	access:public
current	/usr/include/form.h	/^  FIELD *		current;	\/* current field		*\/$/;"	m	struct:formnode	access:public
currow	/usr/include/form.h	/^  int			currow;		\/* current row in field window	*\/$/;"	m	struct:formnode	access:public
curses_version	/usr/include/curses.h	/^#define curses_version(/;"	d
curses_version	/usr/include/ncurses.h	/^#define curses_version(/;"	d
cursor	/usr/include/histedit.h	/^	const char	*cursor;$/;"	m	struct:lineinfo	access:public
cursorOn	/usr/include/tk.h	/^    int cursorOn;		\/* Non-zero means that an insertion cursor$/;"	m	struct:Tk_CanvasTextInfo	access:public
cursor_address	/usr/include/term.h	/^#define cursor_address /;"	d
cursor_down	/usr/include/term.h	/^#define cursor_down /;"	d
cursor_home	/usr/include/term.h	/^#define cursor_home /;"	d
cursor_invisible	/usr/include/term.h	/^#define cursor_invisible /;"	d
cursor_left	/usr/include/term.h	/^#define cursor_left /;"	d
cursor_mem_address	/usr/include/term.h	/^#define cursor_mem_address /;"	d
cursor_normal	/usr/include/term.h	/^#define cursor_normal /;"	d
cursor_right	/usr/include/term.h	/^#define cursor_right /;"	d
cursor_to_ll	/usr/include/term.h	/^#define cursor_to_ll /;"	d
cursor_up	/usr/include/term.h	/^#define cursor_up /;"	d
cursor_visible	/usr/include/term.h	/^#define cursor_visible /;"	d
customPtr	/usr/include/tk.h	/^    Tk_CustomOption *customPtr;	\/* If type is TK_CONFIG_CUSTOM then this is a$/;"	m	struct:Tk_ConfigSpec	access:public
dCharsProc	/usr/include/tk.h	/^    Tk_ItemDCharsProc *dCharsProc;$/;"	m	struct:Tk_ItemType	access:public
d_badsectforw	/usr/include/disktab.h	/^	int	d_badsectforw;		\/* supports DEC bad144 std *\/$/;"	m	struct:disktab	access:public
d_name	/usr/include/disktab.h	/^	char	*d_name;		\/* drive name *\/$/;"	m	struct:disktab	access:public
d_ncylinders	/usr/include/disktab.h	/^	int	d_ncylinders;		\/* # cylinders *\/$/;"	m	struct:disktab	access:public
d_nsectors	/usr/include/disktab.h	/^	int	d_nsectors;		\/* # sectors\/track *\/$/;"	m	struct:disktab	access:public
d_ntracks	/usr/include/disktab.h	/^	int	d_ntracks;		\/* # tracks\/cylinder *\/$/;"	m	struct:disktab	access:public
d_partitions	/usr/include/disktab.h	/^	} d_partitions[8];$/;"	m	struct:disktab	typeref:struct:disktab::partition	access:public
d_rpm	/usr/include/disktab.h	/^	int	d_rpm;			\/* revolutions\/minute *\/$/;"	m	struct:disktab	access:public
d_secsize	/usr/include/disktab.h	/^	int	d_secsize;		\/* sector size in bytes *\/$/;"	m	struct:disktab	access:public
d_sectoffset	/usr/include/disktab.h	/^	int	d_sectoffset;		\/* use sect rather than cyl offsets *\/$/;"	m	struct:disktab	access:public
d_type	/usr/include/disktab.h	/^	char	*d_type;		\/* drive type *\/$/;"	m	struct:disktab	access:public
daemon	/usr/include/tcpd.h	/^    char    daemon[STRING_LENGTH];	\/* access via eval_daemon(request) *\/$/;"	m	struct:request_info	access:public
dash	/usr/include/tk.h	/^    Tk_Dash dash;		\/* Dash pattern. *\/$/;"	m	struct:Tk_Outline	access:public
data	/usr/include/curses.h	/^    } data;$/;"	m	struct:__anon6	typeref:union:__anon6::__anon7	access:public
data	/usr/include/db.h	/^	void	*data;			\/* data *\/$/;"	m	struct:__anon11	access:public
data	/usr/include/dns_util.h	/^	char *data;$/;"	m	struct:__anon24	access:public
data	/usr/include/dns_util.h	/^	} data;$/;"	m	struct:__anon41	typeref:union:__anon41::__anon42	access:public
data	/usr/include/expat.h	/^  void *data;$/;"	m	struct:__anon49	access:public
data	/usr/include/fcgiapp.h	/^    void *data;$/;"	m	struct:FCGX_Stream	access:public
data	/usr/include/iconv.h	/^  void* data;$/;"	m	struct:iconv_fallbacks	access:public
data	/usr/include/iconv.h	/^  void* data;$/;"	m	struct:iconv_hooks	access:public
data	/usr/include/libunwind.h	/^struct unw_context_t { uint64_t data[128]; };$/;"	m	struct:unw_context_t	access:public
data	/usr/include/libunwind.h	/^struct unw_cursor_t { uint64_t data[140]; };$/;"	m	struct:unw_cursor_t	access:public
data	/usr/include/nameser.h	/^        unsigned char *data;$/;"	m	struct:ns_tsig_key	access:public
data	/usr/include/ncurses.h	/^    } data;$/;"	m	struct:__anon82	typeref:union:__anon82::__anon83	access:public
data	/usr/include/search.h	/^	void	*data;$/;"	m	struct:entry	access:public
data	/usr/include/strhash.h	/^    void *data;$/;"	m	struct:_node	access:public
data_count	/usr/include/sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
data_type	/usr/include/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s	access:public
datum	/usr/include/ndbm.h	/^} datum;$/;"	t	typeref:struct:__anon87
day	/usr/include/sqltypes.h	/^    SQLUINTEGER day;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
day	/usr/include/sqltypes.h	/^    SQLUSMALLINT day;$/;"	m	struct:tagDATE_STRUCT	access:public
day	/usr/include/sqltypes.h	/^    SQLUSMALLINT day;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
day_second	/usr/include/sqltypes.h	/^	SQL_DAY_SECOND_STRUCT day_second;$/;"	m	union:tagSQL_INTERVAL_STRUCT::__anon108	access:public
dbClass	/usr/include/tk.h	/^    Tk_Uid dbClass;		\/* Class for option in database. *\/$/;"	m	struct:Tk_ConfigSpec	access:public
dbClass	/usr/include/tk.h	/^    const char *dbClass;	\/* Class for option in database. *\/$/;"	m	struct:Tk_OptionSpec	access:public
dbName	/usr/include/tk.h	/^    Tk_Uid dbName;		\/* Name for option in option database. *\/$/;"	m	struct:Tk_ConfigSpec	access:public
dbName	/usr/include/tk.h	/^    const char *dbName;		\/* Name for option in option database. *\/$/;"	m	struct:Tk_OptionSpec	access:public
db_handle	/usr/include/sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
dbdCfgList	/usr/include/tic.h	/^    dbdCfgList,$/;"	e	enum:__anon122
dbdCfgList2	/usr/include/tic.h	/^    dbdCfgList2,$/;"	e	enum:__anon122
dbdCfgOnce	/usr/include/tic.h	/^    dbdCfgOnce,$/;"	e	enum:__anon122
dbdEnvList	/usr/include/tic.h	/^    dbdEnvList,$/;"	e	enum:__anon122
dbdEnvList2	/usr/include/tic.h	/^    dbdEnvList2,$/;"	e	enum:__anon122
dbdEnvOnce	/usr/include/tic.h	/^    dbdEnvOnce,$/;"	e	enum:__anon122
dbdEnvOnce2	/usr/include/tic.h	/^    dbdEnvOnce2,$/;"	e	enum:__anon122
dbdHome	/usr/include/tic.h	/^    dbdHome,$/;"	e	enum:__anon122
dbdLAST	/usr/include/tic.h	/^    dbdLAST$/;"	e	enum:__anon122
dbdTIC	/usr/include/tic.h	/^    dbdTIC = 0,$/;"	e	enum:__anon122
dbm_clearerr	/usr/include/ndbm.h	/^int	 dbm_clearerr( DBM *);$/;"	p	signature:( DBM *)
dbm_close	/usr/include/ndbm.h	/^void	 dbm_close(DBM *);$/;"	p	signature:(DBM *)
dbm_delete	/usr/include/ndbm.h	/^int	 dbm_delete(DBM *, datum);$/;"	p	signature:(DBM *, datum)
dbm_dirfno	/usr/include/ndbm.h	/^int	 dbm_dirfno(DBM *);$/;"	p	signature:(DBM *)
dbm_error	/usr/include/ndbm.h	/^int	 dbm_error( DBM *);$/;"	p	signature:( DBM *)
dbm_fetch	/usr/include/ndbm.h	/^datum	 dbm_fetch(DBM *, datum);$/;"	p	signature:(DBM *, datum)
dbm_firstkey	/usr/include/ndbm.h	/^datum	 dbm_firstkey(DBM *);$/;"	p	signature:(DBM *)
dbm_forder	/usr/include/ndbm.h	/^long	 dbm_forder(DBM *, datum);$/;"	p	signature:(DBM *, datum)
dbm_nextkey	/usr/include/ndbm.h	/^datum	 dbm_nextkey(DBM *);$/;"	p	signature:(DBM *)
dbm_open	/usr/include/ndbm.h	/^DBM	*dbm_open(const char *, int, mode_t);$/;"	p	signature:(const char *, int, mode_t)
dbm_pagfno	/usr/include/ndbm.h	/^#define	dbm_pagfno(/;"	d
dbm_store	/usr/include/ndbm.h	/^int	 dbm_store(DBM *, datum, datum, int);$/;"	p	signature:(DBM *, datum, datum, int)
dbopen	/usr/include/db.h	/^DB *dbopen(const char *, int, int, DBTYPE, const void *);$/;"	p	signature:(const char *, int, int, DBTYPE, const void *)
dcols	/usr/include/form.h	/^  int			dcols;		\/* dynamic cols			*\/$/;"	m	struct:fieldnode	access:public
debug	/usr/include/FlexLexer.h	/^	int debug() const		{ return yy_flex_debug; }$/;"	f	class:FlexLexer	access:public	signature:() const
debug_string	/usr/include/AssertMacros.h	/^		#define debug_string(/;"	d
decimal_point	/usr/include/_locale.h	/^	char	*decimal_point;$/;"	m	struct:lconv	access:public
declare_vtab	/usr/include/sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	access:public
defValue	/usr/include/tk.h	/^    Tk_Uid defValue;		\/* Default value for option if not specified$/;"	m	struct:Tk_ConfigSpec	access:public
defValue	/usr/include/tk.h	/^    const char *defValue;	\/* Default value for option if not specified$/;"	m	struct:Tk_OptionSpec	access:public
defdname	/usr/include/resolv.h	/^	char	defdname[256];		\/* default domain (deprecated) *\/$/;"	m	struct:__res_state	access:public
define_bit_image_region	/usr/include/term.h	/^#define define_bit_image_region /;"	d
define_char	/usr/include/term.h	/^#define define_char /;"	d
deflate	/usr/include/zconf.h	/^#  define deflate /;"	d
deflate	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));$/;"	p	signature:(z_streamp strm, int flush)
deflateBound	/usr/include/zconf.h	/^#  define deflateBound /;"	d
deflateBound	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT deflateBound OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, uLong sourceLen)
deflateCopy	/usr/include/zconf.h	/^#  define deflateCopy /;"	d
deflateCopy	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateCopy OF((z_streamp dest,$/;"	p	signature:(z_streamp dest, z_streamp source)
deflateEnd	/usr/include/zconf.h	/^#  define deflateEnd /;"	d
deflateEnd	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateEnd OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
deflateInit	/usr/include/zlib.h	/^#define deflateInit(/;"	d
deflateInit2	/usr/include/zlib.h	/^#define deflateInit2(/;"	d
deflateInit2_	/usr/include/zconf.h	/^#  define deflateInit2_ /;"	d
deflateInit2_	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateInit2_ OF((z_streamp strm, int  level, int  method,$/;"	p	signature:(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
deflateInit_	/usr/include/zconf.h	/^#  define deflateInit_ /;"	d
deflateInit_	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateInit_ OF((z_streamp strm, int level,$/;"	p	signature:(z_streamp strm, int level, const char *version, int stream_size)
deflateParams	/usr/include/zconf.h	/^#  define deflateParams /;"	d
deflateParams	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateParams OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int level, int strategy)
deflatePrime	/usr/include/zconf.h	/^#  define deflatePrime /;"	d
deflatePrime	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflatePrime OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int bits, int value)
deflateReset	/usr/include/zconf.h	/^#  define deflateReset /;"	d
deflateReset	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateReset OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
deflateSetDictionary	/usr/include/zconf.h	/^#  define deflateSetDictionary /;"	d
deflateSetDictionary	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateSetDictionary OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, const Bytef *dictionary, uInt dictLength)
deflateSetHeader	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateSetHeader OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, gz_headerp head)
deflateTune	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT deflateTune OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int good_length, int max_lazy, int nice_length, int max_chain)
del	/usr/include/db.h	/^	int (*del)(const struct __db *, const DBT *, unsigned int);$/;"	m	struct:__db	access:public
delch	/usr/include/curses.h	/^#define delch(/;"	d
delch	/usr/include/ncurses.h	/^#define delch(/;"	d
deleteData	/usr/include/tcl.h	/^    ClientData deleteData;	\/* Value to pass to deleteProc (usually the$/;"	m	struct:Tcl_CmdInfo	access:public
deleteFileHandlerProc	/usr/include/tcl.h	/^    Tcl_DeleteFileHandlerProc *deleteFileHandlerProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
deleteFileProc	/usr/include/tcl.h	/^    Tcl_FSDeleteFileProc *deleteFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
deleteProc	/usr/include/tcl.h	/^    Tcl_CmdDeleteProc *deleteProc;$/;"	m	struct:Tcl_CmdInfo	access:public
deleteProc	/usr/include/tcl.h	/^    Tcl_NamespaceDeleteProc *deleteProc;$/;"	m	struct:Tcl_Namespace	access:public
deleteProc	/usr/include/tk.h	/^    Tk_ImageDeleteProc *deleteProc;$/;"	m	struct:Tk_ImageType	access:public
deleteProc	/usr/include/tk.h	/^    Tk_ItemDeleteProc *deleteProc;$/;"	m	struct:Tk_ItemType	access:public
delete_character	/usr/include/term.h	/^#define delete_character /;"	d
delete_line	/usr/include/term.h	/^#define delete_line /;"	d
deleteln	/usr/include/curses.h	/^#define deleteln(/;"	d
deleteln	/usr/include/ncurses.h	/^#define deleteln(/;"	d
demangleSymbolCString	/usr/include/dtrace.h	/^extern char* demangleSymbolCString(const char*);$/;"	p	signature:(const char*)
depth	/usr/include/Xplugin.h	/^    unsigned int depth;$/;"	m	struct:xp_window_changes_struct	access:public
depth	/usr/include/tk.h	/^    int depth;$/;"	m	struct:Tk_FakeWin	access:public
der_alloc	/usr/include/lber.h	/^der_alloc LDAP_P(( void )); \/* DEPRECATED *\/$/;"	p	signature:( void )
desc	/usr/include/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	access:public
descent	/usr/include/tk.h	/^    int descent;		\/* The largest amount in pixels that any$/;"	m	struct:Tk_FontMetrics	access:public
desclen	/usr/include/menu.h	/^  short          desclen;               \/* Max. description length         *\/$/;"	m	struct:tagMENU	access:public
description	/usr/include/menu.h	/^  TEXT           description; \/* description of item, optional in display  *\/ $/;"	m	struct:tagITEM	access:public
dest_tabs_magic_smso	/usr/include/term.h	/^#define dest_tabs_magic_smso /;"	d
dev_t	/usr/include/fts.h	/^typedef	__darwin_dev_t		dev_t;		\/* device number *\/$/;"	t
dev_t	/usr/include/stdlib.h	/^typedef	__darwin_dev_t	dev_t;$/;"	t
dev_t	/usr/include/unistd.h	/^typedef __darwin_dev_t		dev_t;$/;"	t
device_type	/usr/include/term.h	/^#define device_type /;"	d
devname	/usr/include/stdlib.h	/^char	*devname(dev_t, mode_t);$/;"	p	signature:(dev_t, mode_t)
devname_r	/usr/include/stdlib.h	/^char	*devname_r(dev_t, mode_t, char *buf, int len);$/;"	p	signature:(dev_t, mode_t, char *buf, int len)
dial_phone	/usr/include/term.h	/^#define dial_phone /;"	d
dictionaryPtr	/usr/include/tcl.h	/^    Tcl_Dict dictionaryPtr;	\/* Reference to dictionary being searched. *\/$/;"	m	struct:__anon118	access:public
dictionary_info	/usr/include/mecab.h	/^    virtual const DictionaryInfo* dictionary_info() const = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
difftime	/usr/include/time.h	/^double difftime(time_t, time_t);$/;"	p	signature:(time_t, time_t)
digittoint	/usr/include/ctype.h	/^digittoint(int _c)$/;"	f	signature:(int _c)
digittoint	/usr/include/ctype.h	/^int     digittoint(int);$/;"	p	signature:(int)
dirfd	/usr/include/dirent.h	/^#define	dirfd(/;"	d
dirname	/usr/include/libgen.h	/^char	*dirname(char *);$/;"	p	signature:(char *)
dis_status_line	/usr/include/term.h	/^#define dis_status_line /;"	d
disabledColor	/usr/include/tk.h	/^    XColor *disabledColor;	\/* Outline color if state is disabled. *\/$/;"	m	struct:Tk_Outline	access:public
disabledDash	/usr/include/tk.h	/^    Tk_Dash disabledDash;	\/* Dash pattern if state is disabled. *\/$/;"	m	struct:Tk_Outline	access:public
disabledStipple	/usr/include/tk.h	/^    Pixmap disabledStipple;	\/* Outline Stipple pattern if state is$/;"	m	struct:Tk_Outline	access:public
disabledWidth	/usr/include/tk.h	/^    double disabledWidth;	\/* Width of outline. *\/$/;"	m	struct:Tk_Outline	access:public
disktab	/usr/include/disktab.h	/^struct	disktab {$/;"	s
disktab::d_badsectforw	/usr/include/disktab.h	/^	int	d_badsectforw;		\/* supports DEC bad144 std *\/$/;"	m	struct:disktab	access:public
disktab::d_name	/usr/include/disktab.h	/^	char	*d_name;		\/* drive name *\/$/;"	m	struct:disktab	access:public
disktab::d_ncylinders	/usr/include/disktab.h	/^	int	d_ncylinders;		\/* # cylinders *\/$/;"	m	struct:disktab	access:public
disktab::d_nsectors	/usr/include/disktab.h	/^	int	d_nsectors;		\/* # sectors\/track *\/$/;"	m	struct:disktab	access:public
disktab::d_ntracks	/usr/include/disktab.h	/^	int	d_ntracks;		\/* # tracks\/cylinder *\/$/;"	m	struct:disktab	access:public
disktab::d_partitions	/usr/include/disktab.h	/^	} d_partitions[8];$/;"	m	struct:disktab	typeref:struct:disktab::partition	access:public
disktab::d_rpm	/usr/include/disktab.h	/^	int	d_rpm;			\/* revolutions\/minute *\/$/;"	m	struct:disktab	access:public
disktab::d_secsize	/usr/include/disktab.h	/^	int	d_secsize;		\/* sector size in bytes *\/$/;"	m	struct:disktab	access:public
disktab::d_sectoffset	/usr/include/disktab.h	/^	int	d_sectoffset;		\/* use sect rather than cyl offsets *\/$/;"	m	struct:disktab	access:public
disktab::d_type	/usr/include/disktab.h	/^	char	*d_type;		\/* drive type *\/$/;"	m	struct:disktab	access:public
disktab::partition	/usr/include/disktab.h	/^	struct	partition {$/;"	s	struct:disktab	access:public
disktab::partition::p_bsize	/usr/include/disktab.h	/^		short	p_bsize;	\/* block size in bytes *\/$/;"	m	struct:disktab::partition	access:public
disktab::partition::p_fsize	/usr/include/disktab.h	/^		short	p_fsize;	\/* frag size in bytes *\/$/;"	m	struct:disktab::partition	access:public
disktab::partition::p_size	/usr/include/disktab.h	/^		int	p_size;		\/* #sectors in partition *\/$/;"	m	struct:disktab::partition	access:public
display	/usr/include/tk.h	/^    Display *display;		\/* Display the event was read from. *\/$/;"	m	struct:__anon129	access:public
display	/usr/include/tk.h	/^    Display *display;		\/* Display the event was read from. *\/$/;"	m	struct:__anon130	access:public
display	/usr/include/tk.h	/^    Display *display;$/;"	m	struct:Tk_FakeWin	access:public
displayProc	/usr/include/tk.h	/^    Tk_ImageDisplayProc *displayProc;$/;"	m	struct:Tk_ImageType	access:public
displayProc	/usr/include/tk.h	/^    Tk_ItemDisplayProc *displayProc;$/;"	m	struct:Tk_ItemType	access:public
display_clock	/usr/include/term.h	/^#define display_clock /;"	d
display_pc_char	/usr/include/term.h	/^#define display_pc_char /;"	d
div_t	/usr/include/stdlib.h	/^} div_t;$/;"	t	typeref:struct:__anon109
dl_info	/usr/include/dlfcn.h	/^typedef struct dl_info {$/;"	s
dl_info::dli_fbase	/usr/include/dlfcn.h	/^        void            *dli_fbase;     \/* Base address of shared object *\/$/;"	m	struct:dl_info	access:public
dl_info::dli_fname	/usr/include/dlfcn.h	/^        const char      *dli_fname;     \/* Pathname of shared object *\/$/;"	m	struct:dl_info	access:public
dl_info::dli_saddr	/usr/include/dlfcn.h	/^        void            *dli_saddr;     \/* Address of nearest symbol *\/$/;"	m	struct:dl_info	access:public
dl_info::dli_sname	/usr/include/dlfcn.h	/^        const char      *dli_sname;     \/* Name of nearest symbol *\/$/;"	m	struct:dl_info	access:public
dladdr	/usr/include/dlfcn.h	/^extern int dladdr(const void *, Dl_info *);$/;"	p	signature:(const void *, Dl_info *)
dlclose	/usr/include/dlfcn.h	/^extern int dlclose(void * __handle);$/;"	p	signature:(void * __handle)
dlerror	/usr/include/dlfcn.h	/^extern char * dlerror(void);$/;"	p	signature:(void)
dli_fbase	/usr/include/dlfcn.h	/^        void            *dli_fbase;     \/* Base address of shared object *\/$/;"	m	struct:dl_info	access:public
dli_fname	/usr/include/dlfcn.h	/^        const char      *dli_fname;     \/* Pathname of shared object *\/$/;"	m	struct:dl_info	access:public
dli_saddr	/usr/include/dlfcn.h	/^        void            *dli_saddr;     \/* Address of nearest symbol *\/$/;"	m	struct:dl_info	access:public
dli_sname	/usr/include/dlfcn.h	/^        const char      *dli_sname;     \/* Name of nearest symbol *\/$/;"	m	struct:dl_info	access:public
dlopen	/usr/include/dlfcn.h	/^extern void * dlopen(const char * __path, int __mode);$/;"	p	signature:(const char * __path, int __mode)
dlsym	/usr/include/dlfcn.h	/^extern void * dlsym(void * __handle, const char * __symbol);$/;"	p	signature:(void * __handle, const char * __symbol)
dn_comp	/usr/include/resolv.h	/^#define dn_comp	/;"	d
dn_comp	/usr/include/resolv.h	/^int		dn_comp __P((const char *, u_char *, int, u_char **, u_char **));$/;"	p	signature:(const char *, u_char *, int, u_char **, u_char **)
dn_count_labels	/usr/include/resolv.h	/^#define dn_count_labels	/;"	d
dn_count_labels	/usr/include/resolv.h	/^int		dn_count_labels __P((const char *));$/;"	p	signature:(const char *)
dn_expand	/usr/include/resolv.h	/^#define dn_expand	/;"	d
dn_expand	/usr/include/resolv.h	/^int		dn_expand __P((const u_char *, const u_char *, const u_char *, char *, int));$/;"	p	signature:(const u_char *, const u_char *, const u_char *, char *, int)
dn_skipname	/usr/include/resolv.h	/^#define dn_skipname	/;"	d
dn_skipname	/usr/include/resolv.h	/^int		dn_skipname __P((const u_char *, const u_char *));$/;"	p	signature:(const u_char *, const u_char *)
dns_AFSDB_record_t	/usr/include/dns_util.h	/^} dns_AFSDB_record_t;$/;"	t	typeref:struct:__anon35
dns_HINFO_record_t	/usr/include/dns_util.h	/^} dns_HINFO_record_t;$/;"	t	typeref:struct:__anon29
dns_ISDN_record_t	/usr/include/dns_util.h	/^} dns_ISDN_record_t;$/;"	t	typeref:struct:__anon37
dns_LOC_record_t	/usr/include/dns_util.h	/^} dns_LOC_record_t;$/;"	t	typeref:struct:__anon39
dns_MINFO_record_t	/usr/include/dns_util.h	/^} dns_MINFO_record_t;$/;"	t	typeref:struct:__anon30
dns_MX_record_t	/usr/include/dns_util.h	/^} dns_MX_record_t;$/;"	t	typeref:struct:__anon31
dns_RP_record_t	/usr/include/dns_util.h	/^} dns_RP_record_t;$/;"	t	typeref:struct:__anon34
dns_RT_record_t	/usr/include/dns_util.h	/^} dns_RT_record_t;$/;"	t	typeref:struct:__anon38
dns_SOA_record_t	/usr/include/dns_util.h	/^} dns_SOA_record_t;$/;"	t	typeref:struct:__anon28
dns_SRV_record_t	/usr/include/dns_util.h	/^} dns_SRV_record_t;$/;"	t	typeref:struct:__anon40
dns_TXT_record_t	/usr/include/dns_util.h	/^} dns_TXT_record_t;$/;"	t	typeref:struct:__anon32
dns_WKS_record_t	/usr/include/dns_util.h	/^} dns_WKS_record_t;$/;"	t	typeref:struct:__anon33
dns_X25_record_t	/usr/include/dns_util.h	/^} dns_X25_record_t;$/;"	t	typeref:struct:__anon36
dns_address_record_t	/usr/include/dns_util.h	/^} dns_address_record_t;$/;"	t	typeref:struct:__anon25
dns_class_number	/usr/include/dns_util.h	/^extern int32_t dns_class_number(const char *c, uint16_t *n);$/;"	p	signature:(const char *c, uint16_t *n)
dns_class_string	/usr/include/dns_util.h	/^extern const char *dns_class_string(uint16_t dnsclass);$/;"	p	signature:(uint16_t dnsclass)
dns_domain_name_record_t	/usr/include/dns_util.h	/^} dns_domain_name_record_t;$/;"	t	typeref:struct:__anon27
dns_free	/usr/include/dns.h	/^extern void dns_free(dns_handle_t dns);$/;"	p	signature:(dns_handle_t dns)
dns_free_question	/usr/include/dns_util.h	/^extern void dns_free_question(dns_question_t *q);$/;"	p	signature:(dns_question_t *q)
dns_free_reply	/usr/include/dns_util.h	/^extern void dns_free_reply(dns_reply_t *r);$/;"	p	signature:(dns_reply_t *r)
dns_free_resource_record	/usr/include/dns_util.h	/^extern void dns_free_resource_record(dns_resource_record_t *rr);$/;"	p	signature:(dns_resource_record_t *rr)
dns_get_buffer_size	/usr/include/dns_util.h	/^extern uint32_t dns_get_buffer_size(dns_handle_t d);$/;"	p	signature:(dns_handle_t d)
dns_handle_t	/usr/include/dns.h	/^typedef const struct __dns_handle_private_struct *dns_handle_t;$/;"	t	typeref:struct:__dns_handle_private_struct
dns_header_t	/usr/include/dns_util.h	/^} dns_header_t;$/;"	t	typeref:struct:__anon22
dns_in6_address_record_t	/usr/include/dns_util.h	/^} dns_in6_address_record_t;$/;"	t	typeref:struct:__anon26
dns_lookup	/usr/include/dns_util.h	/^extern dns_reply_t *dns_lookup(dns_handle_t dns, const char *name, uint32_t dnsclass, uint32_t dnstype);$/;"	p	signature:(dns_handle_t dns, const char *name, uint32_t dnsclass, uint32_t dnstype)
dns_open	/usr/include/dns.h	/^extern dns_handle_t dns_open(const char *name);$/;"	p	signature:(const char *name)
dns_parse_packet	/usr/include/dns_util.h	/^extern dns_reply_t *dns_parse_packet(const char *buf, uint32_t len);$/;"	p	signature:(const char *buf, uint32_t len)
dns_parse_question	/usr/include/dns_util.h	/^extern dns_question_t *dns_parse_question(const char *buf, uint32_t len);$/;"	p	signature:(const char *buf, uint32_t len)
dns_parse_resource_record	/usr/include/dns_util.h	/^extern dns_resource_record_t *dns_parse_resource_record(const char *buf, uint32_t len);$/;"	p	signature:(const char *buf, uint32_t len)
dns_print_handle	/usr/include/dns_util.h	/^extern void dns_print_handle(dns_handle_t d, FILE *f);$/;"	p	signature:(dns_handle_t d, FILE *f)
dns_print_question	/usr/include/dns_util.h	/^extern void dns_print_question(const dns_question_t *q, FILE *f);$/;"	p	signature:(const dns_question_t *q, FILE *f)
dns_print_reply	/usr/include/dns_util.h	/^extern void dns_print_reply(const dns_reply_t *r, FILE *f, uint16_t mask);$/;"	p	signature:(const dns_reply_t *r, FILE *f, uint16_t mask)
dns_print_resource_record	/usr/include/dns_util.h	/^extern void dns_print_resource_record(const dns_resource_record_t *r, FILE *f);$/;"	p	signature:(const dns_resource_record_t *r, FILE *f)
dns_query	/usr/include/dns.h	/^extern int32_t dns_query(dns_handle_t dns, const char *name, uint32_t dnsclass, uint32_t dnstype, char *buf, uint32_t len, struct sockaddr *from, uint32_t *fromlen);$/;"	p	signature:(dns_handle_t dns, const char *name, uint32_t dnsclass, uint32_t dnstype, char *buf, uint32_t len, struct sockaddr *from, uint32_t *fromlen)
dns_question_t	/usr/include/dns_util.h	/^} dns_question_t;$/;"	t	typeref:struct:__anon23
dns_raw_resource_record_t	/usr/include/dns_util.h	/^} dns_raw_resource_record_t;$/;"	t	typeref:struct:__anon24
dns_reply_t	/usr/include/dns_util.h	/^} dns_reply_t;$/;"	t	typeref:struct:__anon43
dns_resource_record_t	/usr/include/dns_util.h	/^} dns_resource_record_t;$/;"	t	typeref:struct:__anon41
dns_search	/usr/include/dns.h	/^extern int32_t dns_search(dns_handle_t dns, const char *name, uint32_t dnsclass, uint32_t dnstype, char *buf, uint32_t len, struct sockaddr *from, uint32_t *fromlen);$/;"	p	signature:(dns_handle_t dns, const char *name, uint32_t dnsclass, uint32_t dnstype, char *buf, uint32_t len, struct sockaddr *from, uint32_t *fromlen)
dns_search_list_domain	/usr/include/dns.h	/^extern char *dns_search_list_domain(dns_handle_t dns, uint32_t i);$/;"	p	signature:(dns_handle_t dns, uint32_t i)
dns_search_list_domain_count	/usr/include/dns.h	/^extern uint32_t dns_search_list_domain_count(dns_handle_t dns);$/;"	p	signature:(dns_handle_t dns)
dns_set_buffer_size	/usr/include/dns_util.h	/^extern void dns_set_buffer_size(dns_handle_t d, uint32_t len);$/;"	p	signature:(dns_handle_t d, uint32_t len)
dns_set_debug	/usr/include/dns.h	/^extern void dns_set_debug(dns_handle_t dns, uint32_t flag);$/;"	p	signature:(dns_handle_t dns, uint32_t flag)
dns_type_number	/usr/include/dns_util.h	/^extern int32_t dns_type_number(const char *t, uint16_t *n);$/;"	p	signature:(const char *t, uint16_t *n)
dns_type_string	/usr/include/dns_util.h	/^extern const char *dns_type_string(uint16_t dnstype);$/;"	p	signature:(uint16_t dnstype)
dnsclass	/usr/include/dns_util.h	/^	uint16_t dnsclass;$/;"	m	struct:__anon23	access:public
dnsclass	/usr/include/dns_util.h	/^	uint16_t dnsclass;$/;"	m	struct:__anon41	access:public
dnsrch	/usr/include/resolv.h	/^	char	*dnsrch[MAXDNSRCH+1];	\/* components of domain to search *\/$/;"	m	struct:__res_state	access:public
dnstype	/usr/include/dns_util.h	/^	uint16_t dnstype;$/;"	m	struct:__anon23	access:public
dnstype	/usr/include/dns_util.h	/^	uint16_t dnstype;$/;"	m	struct:__anon41	access:public
done	/usr/include/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	access:public
dot_horz_spacing	/usr/include/term.h	/^#define dot_horz_spacing /;"	d
dot_quad_addr	/usr/include/tcpd.h	/^extern unsigned long dot_quad_addr();	\/* restricted inet_addr() *\/$/;"	p	signature:()
dot_vert_spacing	/usr/include/term.h	/^#define dot_vert_spacing /;"	d
double	/usr/include/sqlite3.h	/^# define double /;"	d
double	/usr/include/sqlite3.h	/^# undef double$/;"	d
doubleValue	/usr/include/tcl.h	/^	double doubleValue;	\/*   - a double-precision floating value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
doubleValue	/usr/include/tcl.h	/^    double doubleValue;		\/* Double-precision floating value. *\/$/;"	m	struct:Tcl_Value	access:public
down	/usr/include/menu.h	/^  struct tagITEM *down;$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
downShift	/usr/include/tcl.h	/^    int downShift;		\/* Shift count used in hashing function.$/;"	m	struct:Tcl_HashTable	access:public
down_half_line	/usr/include/term.h	/^#define down_half_line /;"	d
dp	/usr/include/tclTomMath.h	/^    mp_digit *dp;$/;"	m	struct:mp_int	access:public
dpi_aggregates	/usr/include/dtrace.h	/^	uint_t dpi_aggregates;	\/* number of aggregates specified in program *\/$/;"	m	struct:dtrace_proginfo	access:public
dpi_descattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dpi_descattr; \/* minimum probedesc attributes *\/$/;"	m	struct:dtrace_proginfo	access:public
dpi_matches	/usr/include/dtrace.h	/^	uint_t dpi_matches;	\/* number of probes matched by program *\/$/;"	m	struct:dtrace_proginfo	access:public
dpi_recgens	/usr/include/dtrace.h	/^	uint_t dpi_recgens;	\/* number of record generating probes in prog *\/$/;"	m	struct:dtrace_proginfo	access:public
dpi_speculations	/usr/include/dtrace.h	/^	uint_t dpi_speculations; \/* number of speculations specified in prog *\/$/;"	m	struct:dtrace_proginfo	access:public
dpi_stmtattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dpi_stmtattr; \/* minimum statement attributes *\/$/;"	m	struct:dtrace_proginfo	access:public
dptr	/usr/include/ndbm.h	/^	void *dptr;$/;"	m	struct:__anon87	access:public
drand48	/usr/include/stdlib.h	/^double	 drand48(void);$/;"	p	signature:(void)
draw	/usr/include/tk.h	/^    Tk_DrawElementProc *draw;	\/* Draw the element in the given bounding$/;"	m	struct:Tk_ElementSpec	access:public
drows	/usr/include/form.h	/^  int			drows;		\/* dynamic rows			*\/$/;"	m	struct:fieldnode	access:public
dsize	/usr/include/ndbm.h	/^	size_t dsize;$/;"	m	struct:__anon87	access:public
dst	/usr/include/tk.h	/^    char *dst;			\/* Address of value to be modified; usage$/;"	m	struct:__anon125	access:public
dtada_data	/usr/include/dtrace.h	/^	caddr_t dtada_data;			\/* pointer to raw data *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_delta	/usr/include/dtrace.h	/^	caddr_t dtada_delta;			\/* delta data, if available *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_desc	/usr/include/dtrace.h	/^	dtrace_aggdesc_t *dtada_desc;		\/* aggregation description *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_edesc	/usr/include/dtrace.h	/^	dtrace_eprobedesc_t *dtada_edesc;	\/* enabled probe description *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtada_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_normal	/usr/include/dtrace.h	/^	uint64_t dtada_normal;			\/* the normal -- 1 for denorm *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_pdesc	/usr/include/dtrace.h	/^	dtrace_probedesc_t *dtada_pdesc;	\/* probe description *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_percpu	/usr/include/dtrace.h	/^	caddr_t *dtada_percpu;			\/* per CPU data, if avail *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_percpu_delta	/usr/include/dtrace.h	/^	caddr_t *dtada_percpu_delta;		\/* per CPU delta, if avail *\/$/;"	m	struct:dtrace_aggdata	access:public
dtada_size	/usr/include/dtrace.h	/^	size_t dtada_size;			\/* total size of the data *\/$/;"	m	struct:dtrace_aggdata	access:public
dtbda_aggdata	/usr/include/dtrace.h	/^	const dtrace_aggdata_t *dtbda_aggdata;	\/* aggregation data, if agg. *\/$/;"	m	struct:dtrace_bufdata	access:public
dtbda_buffered	/usr/include/dtrace.h	/^	const char *dtbda_buffered;		\/* buffered output *\/$/;"	m	struct:dtrace_bufdata	access:public
dtbda_flags	/usr/include/dtrace.h	/^	uint32_t dtbda_flags;			\/* flags; see above *\/$/;"	m	struct:dtrace_bufdata	access:public
dtbda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtbda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_bufdata	access:public
dtbda_probe	/usr/include/dtrace.h	/^	dtrace_probedata_t *dtbda_probe;	\/* probe data *\/$/;"	m	struct:dtrace_bufdata	access:public
dtbda_recdesc	/usr/include/dtrace.h	/^	const dtrace_recdesc_t *dtbda_recdesc;	\/* record description *\/$/;"	m	struct:dtrace_bufdata	access:public
dtdda_cpu	/usr/include/dtrace.h	/^	processorid_t dtdda_cpu;		\/* CPU, if any *\/$/;"	m	struct:dtrace_dropdata	access:public
dtdda_drops	/usr/include/dtrace.h	/^	uint64_t dtdda_drops;			\/* number of drops *\/$/;"	m	struct:dtrace_dropdata	access:public
dtdda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtdda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_dropdata	access:public
dtdda_kind	/usr/include/dtrace.h	/^	dtrace_dropkind_t dtdda_kind;		\/* kind of drop *\/$/;"	m	struct:dtrace_dropdata	access:public
dtdda_msg	/usr/include/dtrace.h	/^	const char *dtdda_msg;			\/* preconstructed message *\/$/;"	m	struct:dtrace_dropdata	access:public
dtdda_total	/usr/include/dtrace.h	/^	uint64_t dtdda_total;			\/* total drops *\/$/;"	m	struct:dtrace_dropdata	access:public
dteda_action	/usr/include/dtrace.h	/^	int dteda_action;			\/* action inducing error *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_addr	/usr/include/dtrace.h	/^	uint64_t dteda_addr;			\/* address of fault, if any *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_cpu	/usr/include/dtrace.h	/^	processorid_t dteda_cpu;		\/* CPU of error *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_edesc	/usr/include/dtrace.h	/^	dtrace_eprobedesc_t *dteda_edesc;	\/* enabled probe inducing err *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_fault	/usr/include/dtrace.h	/^	int dteda_fault;			\/* specific fault *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dteda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_msg	/usr/include/dtrace.h	/^	const char *dteda_msg;			\/* preconstructed message *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_offset	/usr/include/dtrace.h	/^	int dteda_offset;			\/* offset in DIFO of error *\/$/;"	m	struct:dtrace_errdata	access:public
dteda_pdesc	/usr/include/dtrace.h	/^	dtrace_probedesc_t *dteda_pdesc;	\/* probe inducing error *\/$/;"	m	struct:dtrace_errdata	access:public
dto_bss_size	/usr/include/dtrace.h	/^	GElf_Xword dto_bss_size;		\/* size of BSS *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_bss_va	/usr/include/dtrace.h	/^	GElf_Addr dto_bss_va;			\/* address of BSS *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_data_size	/usr/include/dtrace.h	/^	GElf_Xword dto_data_size;		\/* size of data section *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_data_va	/usr/include/dtrace.h	/^	GElf_Addr dto_data_va;			\/* address of data section *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_file	/usr/include/dtrace.h	/^	const char *dto_file;			\/* object file path (if any) *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_flags	/usr/include/dtrace.h	/^	uint_t dto_flags;			\/* object flags (see below) *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_id	/usr/include/dtrace.h	/^	int dto_id;				\/* object file id (if any) *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_name	/usr/include/dtrace.h	/^	const char *dto_name;			\/* object file scope name *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_text_size	/usr/include/dtrace.h	/^	GElf_Xword dto_text_size;		\/* size of text section *\/$/;"	m	struct:dtrace_objinfo	access:public
dto_text_va	/usr/include/dtrace.h	/^	GElf_Addr dto_text_va;			\/* address of text section *\/$/;"	m	struct:dtrace_objinfo	access:public
dtp_arga	/usr/include/dtrace.h	/^	dtrace_attribute_t dtp_arga;		\/* arg attributes *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtp_argc	/usr/include/dtrace.h	/^	int dtp_argc;				\/* arg count *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtp_argv	/usr/include/dtrace.h	/^	const dtrace_typeinfo_t *dtp_argv;	\/* arg types *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtp_attr	/usr/include/dtrace.h	/^	dtrace_attribute_t dtp_attr;		\/* name attributes *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtpda_cpu	/usr/include/dtrace.h	/^	processorid_t dtpda_cpu;		\/* CPU for data *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_data	/usr/include/dtrace.h	/^	caddr_t dtpda_data;			\/* pointer to raw data *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_edesc	/usr/include/dtrace.h	/^	dtrace_eprobedesc_t *dtpda_edesc;	\/* enabled probe description *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_flow	/usr/include/dtrace.h	/^	dtrace_flowkind_t dtpda_flow;		\/* flow kind *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtpda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_indent	/usr/include/dtrace.h	/^	int dtpda_indent;			\/* recommended flow indent *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_pdesc	/usr/include/dtrace.h	/^	dtrace_probedesc_t *dtpda_pdesc;	\/* probe description *\/$/;"	m	struct:dtrace_probedata	access:public
dtpda_prefix	/usr/include/dtrace.h	/^	const char *dtpda_prefix;		\/* recommended flow prefix *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_addr2str	/usr/include/dtrace.h	/^extern int dtrace_addr2str(dtrace_hdl_t *, uint64_t, char *, int);$/;"	p	signature:(dtrace_hdl_t *, uint64_t, char *, int)
dtrace_aggdata	/usr/include/dtrace.h	/^struct dtrace_aggdata {$/;"	s
dtrace_aggdata::dtada_data	/usr/include/dtrace.h	/^	caddr_t dtada_data;			\/* pointer to raw data *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_delta	/usr/include/dtrace.h	/^	caddr_t dtada_delta;			\/* delta data, if available *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_desc	/usr/include/dtrace.h	/^	dtrace_aggdesc_t *dtada_desc;		\/* aggregation description *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_edesc	/usr/include/dtrace.h	/^	dtrace_eprobedesc_t *dtada_edesc;	\/* enabled probe description *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtada_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_normal	/usr/include/dtrace.h	/^	uint64_t dtada_normal;			\/* the normal -- 1 for denorm *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_pdesc	/usr/include/dtrace.h	/^	dtrace_probedesc_t *dtada_pdesc;	\/* probe description *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_percpu	/usr/include/dtrace.h	/^	caddr_t *dtada_percpu;			\/* per CPU data, if avail *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_percpu_delta	/usr/include/dtrace.h	/^	caddr_t *dtada_percpu_delta;		\/* per CPU delta, if avail *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata::dtada_size	/usr/include/dtrace.h	/^	size_t dtada_size;			\/* total size of the data *\/$/;"	m	struct:dtrace_aggdata	access:public
dtrace_aggdata_t	/usr/include/dtrace.h	/^typedef struct dtrace_aggdata dtrace_aggdata_t;$/;"	t	typeref:struct:dtrace_aggdata
dtrace_aggregate_clear	/usr/include/dtrace.h	/^extern void dtrace_aggregate_clear(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_aggregate_f	/usr/include/dtrace.h	/^typedef int dtrace_aggregate_f(const dtrace_aggdata_t *, void *);$/;"	t
dtrace_aggregate_print	/usr/include/dtrace.h	/^extern int dtrace_aggregate_print(dtrace_hdl_t *, FILE *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, dtrace_aggregate_walk_f *)
dtrace_aggregate_snap	/usr/include/dtrace.h	/^extern int dtrace_aggregate_snap(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_aggregate_walk	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk(dtrace_hdl_t *, dtrace_aggregate_f *, void *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_f	/usr/include/dtrace.h	/^typedef int dtrace_aggregate_walk_f(dtrace_hdl_t *,$/;"	t
dtrace_aggregate_walk_joined	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_joined(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggvarid_t *, int, dtrace_aggregate_walk_joined_f *, void *)
dtrace_aggregate_walk_joined_f	/usr/include/dtrace.h	/^typedef int dtrace_aggregate_walk_joined_f(const dtrace_aggdata_t **,$/;"	t
dtrace_aggregate_walk_keyrevsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_keyrevsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_keysorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_keysorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_keyvarrevsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_keyvarrevsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_keyvarsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_keyvarsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_sorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_sorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_valrevsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_valrevsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_valsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_valsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_valvarrevsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_valvarrevsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_aggregate_walk_valvarsorted	/usr/include/dtrace.h	/^extern int dtrace_aggregate_walk_valvarsorted(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_aggregate_f *, void *)
dtrace_attr2str	/usr/include/dtrace.h	/^extern char *dtrace_attr2str(dtrace_attribute_t, char *, size_t);$/;"	p	signature:(dtrace_attribute_t, char *, size_t)
dtrace_bufdata	/usr/include/dtrace.h	/^typedef struct dtrace_bufdata {$/;"	s
dtrace_bufdata::dtbda_aggdata	/usr/include/dtrace.h	/^	const dtrace_aggdata_t *dtbda_aggdata;	\/* aggregation data, if agg. *\/$/;"	m	struct:dtrace_bufdata	access:public
dtrace_bufdata::dtbda_buffered	/usr/include/dtrace.h	/^	const char *dtbda_buffered;		\/* buffered output *\/$/;"	m	struct:dtrace_bufdata	access:public
dtrace_bufdata::dtbda_flags	/usr/include/dtrace.h	/^	uint32_t dtbda_flags;			\/* flags; see above *\/$/;"	m	struct:dtrace_bufdata	access:public
dtrace_bufdata::dtbda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtbda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_bufdata	access:public
dtrace_bufdata::dtbda_probe	/usr/include/dtrace.h	/^	dtrace_probedata_t *dtbda_probe;	\/* probe data *\/$/;"	m	struct:dtrace_bufdata	access:public
dtrace_bufdata::dtbda_recdesc	/usr/include/dtrace.h	/^	const dtrace_recdesc_t *dtbda_recdesc;	\/* record description *\/$/;"	m	struct:dtrace_bufdata	access:public
dtrace_bufdata_t	/usr/include/dtrace.h	/^} dtrace_bufdata_t;$/;"	t	typeref:struct:dtrace_bufdata
dtrace_class_name	/usr/include/dtrace.h	/^extern const char *dtrace_class_name(dtrace_class_t);$/;"	p	signature:(dtrace_class_t)
dtrace_close	/usr/include/dtrace.h	/^extern void dtrace_close(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_consume	/usr/include/dtrace.h	/^extern int dtrace_consume(dtrace_hdl_t *, FILE *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, dtrace_consume_probe_f *, dtrace_consume_rec_f *, void *)
dtrace_consume_probe_f	/usr/include/dtrace.h	/^typedef int dtrace_consume_probe_f(const dtrace_probedata_t *, void *);$/;"	t
dtrace_consume_rec_f	/usr/include/dtrace.h	/^typedef int dtrace_consume_rec_f(const dtrace_probedata_t *,$/;"	t
dtrace_ctlfd	/usr/include/dtrace.h	/^extern int dtrace_ctlfd(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_desc2str	/usr/include/dtrace.h	/^extern char *dtrace_desc2str(const dtrace_probedesc_t *, char *, size_t);$/;"	p	signature:(const dtrace_probedesc_t *, char *, size_t)
dtrace_dof_create	/usr/include/dtrace.h	/^extern void *dtrace_dof_create(dtrace_hdl_t *, dtrace_prog_t *, uint_t);$/;"	p	signature:(dtrace_hdl_t *, dtrace_prog_t *, uint_t)
dtrace_dof_destroy	/usr/include/dtrace.h	/^extern void dtrace_dof_destroy(dtrace_hdl_t *, void *);$/;"	p	signature:(dtrace_hdl_t *, void *)
dtrace_dropdata	/usr/include/dtrace.h	/^typedef struct dtrace_dropdata {$/;"	s
dtrace_dropdata::dtdda_cpu	/usr/include/dtrace.h	/^	processorid_t dtdda_cpu;		\/* CPU, if any *\/$/;"	m	struct:dtrace_dropdata	access:public
dtrace_dropdata::dtdda_drops	/usr/include/dtrace.h	/^	uint64_t dtdda_drops;			\/* number of drops *\/$/;"	m	struct:dtrace_dropdata	access:public
dtrace_dropdata::dtdda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtdda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_dropdata	access:public
dtrace_dropdata::dtdda_kind	/usr/include/dtrace.h	/^	dtrace_dropkind_t dtdda_kind;		\/* kind of drop *\/$/;"	m	struct:dtrace_dropdata	access:public
dtrace_dropdata::dtdda_msg	/usr/include/dtrace.h	/^	const char *dtdda_msg;			\/* preconstructed message *\/$/;"	m	struct:dtrace_dropdata	access:public
dtrace_dropdata::dtdda_total	/usr/include/dtrace.h	/^	uint64_t dtdda_total;			\/* total drops *\/$/;"	m	struct:dtrace_dropdata	access:public
dtrace_dropdata_t	/usr/include/dtrace.h	/^} dtrace_dropdata_t;$/;"	t	typeref:struct:dtrace_dropdata
dtrace_dropkind_t	/usr/include/dtrace.h	/^} dtrace_dropkind_t;$/;"	t	typeref:enum:__anon47
dtrace_errdata	/usr/include/dtrace.h	/^typedef struct dtrace_errdata {$/;"	s
dtrace_errdata::dteda_action	/usr/include/dtrace.h	/^	int dteda_action;			\/* action inducing error *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_addr	/usr/include/dtrace.h	/^	uint64_t dteda_addr;			\/* address of fault, if any *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_cpu	/usr/include/dtrace.h	/^	processorid_t dteda_cpu;		\/* CPU of error *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_edesc	/usr/include/dtrace.h	/^	dtrace_eprobedesc_t *dteda_edesc;	\/* enabled probe inducing err *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_fault	/usr/include/dtrace.h	/^	int dteda_fault;			\/* specific fault *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dteda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_msg	/usr/include/dtrace.h	/^	const char *dteda_msg;			\/* preconstructed message *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_offset	/usr/include/dtrace.h	/^	int dteda_offset;			\/* offset in DIFO of error *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata::dteda_pdesc	/usr/include/dtrace.h	/^	dtrace_probedesc_t *dteda_pdesc;	\/* probe inducing error *\/$/;"	m	struct:dtrace_errdata	access:public
dtrace_errdata_t	/usr/include/dtrace.h	/^} dtrace_errdata_t;$/;"	t	typeref:struct:dtrace_errdata
dtrace_errmsg	/usr/include/dtrace.h	/^extern const char *dtrace_errmsg(dtrace_hdl_t *, int);$/;"	p	signature:(dtrace_hdl_t *, int)
dtrace_errno	/usr/include/dtrace.h	/^extern int dtrace_errno(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_faultstr	/usr/include/dtrace.h	/^extern const char *dtrace_faultstr(dtrace_hdl_t *, int);$/;"	p	signature:(dtrace_hdl_t *, int)
dtrace_flowkind_t	/usr/include/dtrace.h	/^} dtrace_flowkind_t;$/;"	t	typeref:enum:__anon45
dtrace_fprinta	/usr/include/dtrace.h	/^extern int dtrace_fprinta(dtrace_hdl_t *, FILE *, void *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, void *, const dtrace_probedata_t *, const dtrace_recdesc_t *, uint_t, const void *, size_t)
dtrace_fprintf	/usr/include/dtrace.h	/^extern int dtrace_fprintf(dtrace_hdl_t *, FILE *, void *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, void *, const dtrace_probedata_t *, const dtrace_recdesc_t *, uint_t, const void *, size_t)
dtrace_freopen	/usr/include/dtrace.h	/^extern int dtrace_freopen(dtrace_hdl_t *, FILE *, void *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, void *, const dtrace_probedata_t *, const dtrace_recdesc_t *, uint_t, const void *, size_t)
dtrace_geterr_dof	/usr/include/dtrace.h	/^extern void *dtrace_geterr_dof(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_getopt	/usr/include/dtrace.h	/^extern int dtrace_getopt(dtrace_hdl_t *, const char *, dtrace_optval_t *);$/;"	p	signature:(dtrace_hdl_t *, const char *, dtrace_optval_t *)
dtrace_getopt_dof	/usr/include/dtrace.h	/^extern void *dtrace_getopt_dof(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_go	/usr/include/dtrace.h	/^extern int dtrace_go(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_handle_buffered	/usr/include/dtrace.h	/^extern int dtrace_handle_buffered(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_handle_buffered_f *, void *)
dtrace_handle_buffered_f	/usr/include/dtrace.h	/^typedef int dtrace_handle_buffered_f(const dtrace_bufdata_t *, void *);$/;"	t
dtrace_handle_drop	/usr/include/dtrace.h	/^extern int dtrace_handle_drop(dtrace_hdl_t *, dtrace_handle_drop_f *, void *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_handle_drop_f *, void *)
dtrace_handle_drop_f	/usr/include/dtrace.h	/^typedef int dtrace_handle_drop_f(const dtrace_dropdata_t *, void *);$/;"	t
dtrace_handle_err	/usr/include/dtrace.h	/^extern int dtrace_handle_err(dtrace_hdl_t *, dtrace_handle_err_f *, void *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_handle_err_f *, void *)
dtrace_handle_err_f	/usr/include/dtrace.h	/^typedef int dtrace_handle_err_f(const dtrace_errdata_t *, void *);$/;"	t
dtrace_handle_proc	/usr/include/dtrace.h	/^extern int dtrace_handle_proc(dtrace_hdl_t *, dtrace_handle_proc_f *, void *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_handle_proc_f *, void *)
dtrace_handle_proc_f	/usr/include/dtrace.h	/^typedef void dtrace_handle_proc_f(struct ps_prochandle *, const char *, void *);$/;"	t
dtrace_handle_setopt	/usr/include/dtrace.h	/^extern int dtrace_handle_setopt(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_handle_setopt_f *, void *)
dtrace_handle_setopt_f	/usr/include/dtrace.h	/^typedef int dtrace_handle_setopt_f(const dtrace_setoptdata_t *, void *);$/;"	t
dtrace_hdl_t	/usr/include/dtrace.h	/^typedef struct dtrace_hdl dtrace_hdl_t;$/;"	t	typeref:struct:dtrace_hdl
dtrace_id2desc	/usr/include/dtrace.h	/^extern int dtrace_id2desc(dtrace_hdl_t *, dtrace_id_t, dtrace_probedesc_t *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_id_t, dtrace_probedesc_t *)
dtrace_lookup_by_addr	/usr/include/dtrace.h	/^extern int dtrace_lookup_by_addr(dtrace_hdl_t *, GElf_Addr addr,$/;"	p	signature:(dtrace_hdl_t *, GElf_Addr addr, GElf_Sym *, dtrace_syminfo_t *)
dtrace_lookup_by_name	/usr/include/dtrace.h	/^extern int dtrace_lookup_by_name(dtrace_hdl_t *, const char *, const char *,$/;"	p	signature:(dtrace_hdl_t *, const char *, const char *, GElf_Sym *, dtrace_syminfo_t *)
dtrace_lookup_by_type	/usr/include/dtrace.h	/^extern int dtrace_lookup_by_type(dtrace_hdl_t *, const char *, const char *,$/;"	p	signature:(dtrace_hdl_t *, const char *, const char *, dtrace_typeinfo_t *)
dtrace_obj_f	/usr/include/dtrace.h	/^typedef int dtrace_obj_f(dtrace_hdl_t *, const dtrace_objinfo_t *, void *);$/;"	t
dtrace_object_info	/usr/include/dtrace.h	/^extern int dtrace_object_info(dtrace_hdl_t *, const char *, dtrace_objinfo_t *);$/;"	p	signature:(dtrace_hdl_t *, const char *, dtrace_objinfo_t *)
dtrace_object_iter	/usr/include/dtrace.h	/^extern int dtrace_object_iter(dtrace_hdl_t *, dtrace_obj_f *, void *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_obj_f *, void *)
dtrace_objinfo	/usr/include/dtrace.h	/^typedef struct dtrace_objinfo {$/;"	s
dtrace_objinfo::dto_bss_size	/usr/include/dtrace.h	/^	GElf_Xword dto_bss_size;		\/* size of BSS *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_bss_va	/usr/include/dtrace.h	/^	GElf_Addr dto_bss_va;			\/* address of BSS *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_data_size	/usr/include/dtrace.h	/^	GElf_Xword dto_data_size;		\/* size of data section *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_data_va	/usr/include/dtrace.h	/^	GElf_Addr dto_data_va;			\/* address of data section *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_file	/usr/include/dtrace.h	/^	const char *dto_file;			\/* object file path (if any) *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_flags	/usr/include/dtrace.h	/^	uint_t dto_flags;			\/* object flags (see below) *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_id	/usr/include/dtrace.h	/^	int dto_id;				\/* object file id (if any) *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_name	/usr/include/dtrace.h	/^	const char *dto_name;			\/* object file scope name *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_text_size	/usr/include/dtrace.h	/^	GElf_Xword dto_text_size;		\/* size of text section *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo::dto_text_va	/usr/include/dtrace.h	/^	GElf_Addr dto_text_va;			\/* address of text section *\/$/;"	m	struct:dtrace_objinfo	access:public
dtrace_objinfo_t	/usr/include/dtrace.h	/^} dtrace_objinfo_t;$/;"	t	typeref:struct:dtrace_objinfo
dtrace_open	/usr/include/dtrace.h	/^extern dtrace_hdl_t *dtrace_open(int, int, int *);$/;"	p	signature:(int, int, int *)
dtrace_printa_create	/usr/include/dtrace.h	/^extern void *dtrace_printa_create(dtrace_hdl_t *, const char *);$/;"	p	signature:(dtrace_hdl_t *, const char *)
dtrace_printf_create	/usr/include/dtrace.h	/^extern void *dtrace_printf_create(dtrace_hdl_t *, const char *);$/;"	p	signature:(dtrace_hdl_t *, const char *)
dtrace_printf_format	/usr/include/dtrace.h	/^extern size_t dtrace_printf_format(dtrace_hdl_t *, void *, char *, size_t);$/;"	p	signature:(dtrace_hdl_t *, void *, char *, size_t)
dtrace_probe_f	/usr/include/dtrace.h	/^typedef int dtrace_probe_f(dtrace_hdl_t *, const dtrace_probedesc_t *, void *);$/;"	t
dtrace_probe_info	/usr/include/dtrace.h	/^extern int dtrace_probe_info(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, const dtrace_probedesc_t *, dtrace_probeinfo_t *)
dtrace_probe_iter	/usr/include/dtrace.h	/^extern int dtrace_probe_iter(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, const dtrace_probedesc_t *pdp, dtrace_probe_f *, void *)
dtrace_probedata	/usr/include/dtrace.h	/^typedef struct dtrace_probedata {$/;"	s
dtrace_probedata::dtpda_cpu	/usr/include/dtrace.h	/^	processorid_t dtpda_cpu;		\/* CPU for data *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_data	/usr/include/dtrace.h	/^	caddr_t dtpda_data;			\/* pointer to raw data *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_edesc	/usr/include/dtrace.h	/^	dtrace_eprobedesc_t *dtpda_edesc;	\/* enabled probe description *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_flow	/usr/include/dtrace.h	/^	dtrace_flowkind_t dtpda_flow;		\/* flow kind *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtpda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_indent	/usr/include/dtrace.h	/^	int dtpda_indent;			\/* recommended flow indent *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_pdesc	/usr/include/dtrace.h	/^	dtrace_probedesc_t *dtpda_pdesc;	\/* probe description *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata::dtpda_prefix	/usr/include/dtrace.h	/^	const char *dtpda_prefix;		\/* recommended flow prefix *\/$/;"	m	struct:dtrace_probedata	access:public
dtrace_probedata_t	/usr/include/dtrace.h	/^} dtrace_probedata_t;$/;"	t	typeref:struct:dtrace_probedata
dtrace_probeinfo	/usr/include/dtrace.h	/^typedef struct dtrace_probeinfo {$/;"	s
dtrace_probeinfo::dtp_arga	/usr/include/dtrace.h	/^	dtrace_attribute_t dtp_arga;		\/* arg attributes *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtrace_probeinfo::dtp_argc	/usr/include/dtrace.h	/^	int dtp_argc;				\/* arg count *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtrace_probeinfo::dtp_argv	/usr/include/dtrace.h	/^	const dtrace_typeinfo_t *dtp_argv;	\/* arg types *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtrace_probeinfo::dtp_attr	/usr/include/dtrace.h	/^	dtrace_attribute_t dtp_attr;		\/* name attributes *\/$/;"	m	struct:dtrace_probeinfo	access:public
dtrace_probeinfo_t	/usr/include/dtrace.h	/^} dtrace_probeinfo_t;$/;"	t	typeref:struct:dtrace_probeinfo
dtrace_proc_continue	/usr/include/dtrace.h	/^extern void dtrace_proc_continue(dtrace_hdl_t *, struct ps_prochandle *);$/;"	p	signature:(dtrace_hdl_t *, struct ps_prochandle *)
dtrace_proc_create	/usr/include/dtrace.h	/^extern struct ps_prochandle *dtrace_proc_create(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, const char *, char *const *)
dtrace_proc_grab	/usr/include/dtrace.h	/^extern struct ps_prochandle *dtrace_proc_grab(dtrace_hdl_t *, pid_t, int);$/;"	p	signature:(dtrace_hdl_t *, pid_t, int)
dtrace_proc_release	/usr/include/dtrace.h	/^extern void dtrace_proc_release(dtrace_hdl_t *, struct ps_prochandle *);$/;"	p	signature:(dtrace_hdl_t *, struct ps_prochandle *)
dtrace_prog_t	/usr/include/dtrace.h	/^typedef struct dtrace_prog dtrace_prog_t;$/;"	t	typeref:struct:dtrace_prog
dtrace_proginfo	/usr/include/dtrace.h	/^typedef struct dtrace_proginfo {$/;"	s
dtrace_proginfo::dpi_aggregates	/usr/include/dtrace.h	/^	uint_t dpi_aggregates;	\/* number of aggregates specified in program *\/$/;"	m	struct:dtrace_proginfo	access:public
dtrace_proginfo::dpi_descattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dpi_descattr; \/* minimum probedesc attributes *\/$/;"	m	struct:dtrace_proginfo	access:public
dtrace_proginfo::dpi_matches	/usr/include/dtrace.h	/^	uint_t dpi_matches;	\/* number of probes matched by program *\/$/;"	m	struct:dtrace_proginfo	access:public
dtrace_proginfo::dpi_recgens	/usr/include/dtrace.h	/^	uint_t dpi_recgens;	\/* number of record generating probes in prog *\/$/;"	m	struct:dtrace_proginfo	access:public
dtrace_proginfo::dpi_speculations	/usr/include/dtrace.h	/^	uint_t dpi_speculations; \/* number of speculations specified in prog *\/$/;"	m	struct:dtrace_proginfo	access:public
dtrace_proginfo::dpi_stmtattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dpi_stmtattr; \/* minimum statement attributes *\/$/;"	m	struct:dtrace_proginfo	access:public
dtrace_proginfo_t	/usr/include/dtrace.h	/^} dtrace_proginfo_t;$/;"	t	typeref:struct:dtrace_proginfo
dtrace_program_exec	/usr/include/dtrace.h	/^extern int dtrace_program_exec(dtrace_hdl_t *, dtrace_prog_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_prog_t *, dtrace_proginfo_t *)
dtrace_program_fcompile	/usr/include/dtrace.h	/^extern dtrace_prog_t *dtrace_program_fcompile(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, uint_t, int, char *const [])
dtrace_program_header	/usr/include/dtrace.h	/^extern int dtrace_program_header(dtrace_hdl_t *, FILE *, const char *);$/;"	p	signature:(dtrace_hdl_t *, FILE *, const char *)
dtrace_program_info	/usr/include/dtrace.h	/^extern void dtrace_program_info(dtrace_hdl_t *, dtrace_prog_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_prog_t *, dtrace_proginfo_t *)
dtrace_program_link	/usr/include/dtrace.h	/^extern int dtrace_program_link(dtrace_hdl_t *, dtrace_prog_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_prog_t *, uint_t, const char *, int, char *const [])
dtrace_program_strcompile	/usr/include/dtrace.h	/^extern dtrace_prog_t *dtrace_program_strcompile(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, const char *, dtrace_probespec_t, uint_t, int, char *const [])
dtrace_provider_modules	/usr/include/dtrace.h	/^extern int dtrace_provider_modules(dtrace_hdl_t *, const char **, int);$/;"	p	signature:(dtrace_hdl_t *, const char **, int)
dtrace_setopt	/usr/include/dtrace.h	/^extern int dtrace_setopt(dtrace_hdl_t *, const char *, const char *);$/;"	p	signature:(dtrace_hdl_t *, const char *, const char *)
dtrace_setoptdata	/usr/include/dtrace.h	/^typedef struct dtrace_setoptdata {$/;"	s
dtrace_setoptdata::dtsda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtsda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtrace_setoptdata::dtsda_newval	/usr/include/dtrace.h	/^	dtrace_optval_t dtsda_newval;		\/* new value *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtrace_setoptdata::dtsda_oldval	/usr/include/dtrace.h	/^	dtrace_optval_t dtsda_oldval;		\/* old value *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtrace_setoptdata::dtsda_option	/usr/include/dtrace.h	/^	const char *dtsda_option;		\/* option that was set *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtrace_setoptdata::dtsda_probe	/usr/include/dtrace.h	/^	const dtrace_probedata_t *dtsda_probe;	\/* probe data *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtrace_setoptdata_t	/usr/include/dtrace.h	/^} dtrace_setoptdata_t;$/;"	t	typeref:struct:dtrace_setoptdata
dtrace_sleep	/usr/include/dtrace.h	/^extern void dtrace_sleep(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_stability_name	/usr/include/dtrace.h	/^extern const char *dtrace_stability_name(dtrace_stability_t);$/;"	p	signature:(dtrace_stability_t)
dtrace_status	/usr/include/dtrace.h	/^extern int dtrace_status(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_stmt_action	/usr/include/dtrace.h	/^extern dtrace_actdesc_t *dtrace_stmt_action(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_stmtdesc_t *)
dtrace_stmt_add	/usr/include/dtrace.h	/^extern int dtrace_stmt_add(dtrace_hdl_t *, dtrace_prog_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_prog_t *, dtrace_stmtdesc_t *)
dtrace_stmt_create	/usr/include/dtrace.h	/^extern dtrace_stmtdesc_t *dtrace_stmt_create(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_ecbdesc_t *)
dtrace_stmt_destroy	/usr/include/dtrace.h	/^extern void dtrace_stmt_destroy(dtrace_hdl_t *, dtrace_stmtdesc_t *);$/;"	p	signature:(dtrace_hdl_t *, dtrace_stmtdesc_t *)
dtrace_stmt_f	/usr/include/dtrace.h	/^typedef int dtrace_stmt_f(dtrace_hdl_t *, dtrace_prog_t *,$/;"	t
dtrace_stmt_iter	/usr/include/dtrace.h	/^extern int dtrace_stmt_iter(dtrace_hdl_t *, dtrace_prog_t *,$/;"	p	signature:(dtrace_hdl_t *, dtrace_prog_t *, dtrace_stmt_f *, void *)
dtrace_stmtdesc	/usr/include/dtrace.h	/^typedef struct dtrace_stmtdesc {$/;"	s
dtrace_stmtdesc::dtsd_action	/usr/include/dtrace.h	/^	dtrace_actdesc_t *dtsd_action;		\/* action list *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_action_last	/usr/include/dtrace.h	/^	dtrace_actdesc_t *dtsd_action_last;	\/* last action in action list *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_aggdata	/usr/include/dtrace.h	/^	void *dtsd_aggdata;			\/* aggregation data *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_callback	/usr/include/dtrace.h	/^	void (*dtsd_callback)();		\/* callback function for EPID *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_data	/usr/include/dtrace.h	/^	void *dtsd_data;			\/* callback data pointer *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_descattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dtsd_descattr;	\/* probedesc attributes *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_ecbdesc	/usr/include/dtrace.h	/^	dtrace_ecbdesc_t *dtsd_ecbdesc;		\/* ECB description *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_fmtdata	/usr/include/dtrace.h	/^	void *dtsd_fmtdata;			\/* type-specific output data *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc::dtsd_stmtattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dtsd_stmtattr;	\/* statement attributes *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtrace_stmtdesc_t	/usr/include/dtrace.h	/^} dtrace_stmtdesc_t;$/;"	t	typeref:struct:dtrace_stmtdesc
dtrace_stop	/usr/include/dtrace.h	/^extern int dtrace_stop(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_str2attr	/usr/include/dtrace.h	/^extern int dtrace_str2attr(const char *, dtrace_attribute_t *);$/;"	p	signature:(const char *, dtrace_attribute_t *)
dtrace_str2desc	/usr/include/dtrace.h	/^extern int dtrace_str2desc(dtrace_hdl_t *, dtrace_probespec_t,$/;"	p	signature:(dtrace_hdl_t *, dtrace_probespec_t, const char *, dtrace_probedesc_t *)
dtrace_subrstr	/usr/include/dtrace.h	/^extern const char *dtrace_subrstr(dtrace_hdl_t *, int);$/;"	p	signature:(dtrace_hdl_t *, int)
dtrace_symbol_type	/usr/include/dtrace.h	/^extern int dtrace_symbol_type(dtrace_hdl_t *, const GElf_Sym *,$/;"	p	signature:(dtrace_hdl_t *, const GElf_Sym *, const dtrace_syminfo_t *, dtrace_typeinfo_t *)
dtrace_syminfo	/usr/include/dtrace.h	/^typedef struct dtrace_syminfo {$/;"	s
dtrace_syminfo::dts_id	/usr/include/dtrace.h	/^	ulong_t dts_id;				\/* symbol id *\/$/;"	m	struct:dtrace_syminfo	access:public
dtrace_syminfo::dts_name	/usr/include/dtrace.h	/^	const char *dts_name;			\/* symbol name *\/$/;"	m	struct:dtrace_syminfo	access:public
dtrace_syminfo::dts_object	/usr/include/dtrace.h	/^	const char *dts_object;			\/* object name *\/$/;"	m	struct:dtrace_syminfo	access:public
dtrace_syminfo_t	/usr/include/dtrace.h	/^} dtrace_syminfo_t;$/;"	t	typeref:struct:dtrace_syminfo
dtrace_system	/usr/include/dtrace.h	/^extern int dtrace_system(dtrace_hdl_t *, FILE *, void *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, void *, const dtrace_probedata_t *, const dtrace_recdesc_t *, uint_t, const void *, size_t)
dtrace_type_fcompile	/usr/include/dtrace.h	/^extern int dtrace_type_fcompile(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, dtrace_typeinfo_t *)
dtrace_type_strcompile	/usr/include/dtrace.h	/^extern int dtrace_type_strcompile(dtrace_hdl_t *,$/;"	p	signature:(dtrace_hdl_t *, const char *, dtrace_typeinfo_t *)
dtrace_typeinfo	/usr/include/dtrace.h	/^typedef struct dtrace_typeinfo {$/;"	s
dtrace_typeinfo::dtt_ctfp	/usr/include/dtrace.h	/^	ctf_file_t *dtt_ctfp;			\/* CTF container handle *\/$/;"	m	struct:dtrace_typeinfo	access:public
dtrace_typeinfo::dtt_object	/usr/include/dtrace.h	/^	const char *dtt_object;			\/* object containing type *\/$/;"	m	struct:dtrace_typeinfo	access:public
dtrace_typeinfo::dtt_type	/usr/include/dtrace.h	/^	ctf_id_t dtt_type;			\/* CTF type identifier *\/$/;"	m	struct:dtrace_typeinfo	access:public
dtrace_typeinfo_t	/usr/include/dtrace.h	/^} dtrace_typeinfo_t;$/;"	t	typeref:struct:dtrace_typeinfo
dtrace_uaddr2str	/usr/include/dtrace.h	/^extern int dtrace_uaddr2str(dtrace_hdl_t *, pid_t, uint64_t, char *, int);$/;"	p	signature:(dtrace_hdl_t *, pid_t, uint64_t, char *, int)
dtrace_update	/usr/include/dtrace.h	/^extern void dtrace_update(dtrace_hdl_t *);$/;"	p	signature:(dtrace_hdl_t *)
dtrace_vector	/usr/include/dtrace.h	/^struct dtrace_vector {$/;"	s
dtrace_vector::dtv_ioctl	/usr/include/dtrace.h	/^	int (*dtv_ioctl)(void *, int, void *);$/;"	m	struct:dtrace_vector	access:public
dtrace_vector::dtv_lookup_by_addr	/usr/include/dtrace.h	/^	int (*dtv_lookup_by_addr)(void *, GElf_Addr, GElf_Sym *,$/;"	m	struct:dtrace_vector	access:public
dtrace_vector::dtv_status	/usr/include/dtrace.h	/^	int (*dtv_status)(void *, processorid_t);$/;"	m	struct:dtrace_vector	access:public
dtrace_vector::dtv_sysconf	/usr/include/dtrace.h	/^	long (*dtv_sysconf)(void *, int);$/;"	m	struct:dtrace_vector	access:public
dtrace_vector_t	/usr/include/dtrace.h	/^typedef struct dtrace_vector dtrace_vector_t;$/;"	t	typeref:struct:dtrace_vector
dtrace_vopen	/usr/include/dtrace.h	/^extern dtrace_hdl_t *dtrace_vopen(int, int, int *,$/;"	p	signature:(int, int, int *, const dtrace_vector_t *, void *)
dtrace_work	/usr/include/dtrace.h	/^extern dtrace_workstatus_t dtrace_work(dtrace_hdl_t *, FILE *,$/;"	p	signature:(dtrace_hdl_t *, FILE *, dtrace_consume_probe_f *, dtrace_consume_rec_f *, void *)
dtrace_workstatus_t	/usr/include/dtrace.h	/^} dtrace_workstatus_t;$/;"	t	typeref:enum:__anon46
dtrace_xstr2desc	/usr/include/dtrace.h	/^extern int dtrace_xstr2desc(dtrace_hdl_t *, dtrace_probespec_t,$/;"	p	signature:(dtrace_hdl_t *, dtrace_probespec_t, const char *, int, char *const [], dtrace_probedesc_t *)
dts_id	/usr/include/dtrace.h	/^	ulong_t dts_id;				\/* symbol id *\/$/;"	m	struct:dtrace_syminfo	access:public
dts_name	/usr/include/dtrace.h	/^	const char *dts_name;			\/* symbol name *\/$/;"	m	struct:dtrace_syminfo	access:public
dts_object	/usr/include/dtrace.h	/^	const char *dts_object;			\/* object name *\/$/;"	m	struct:dtrace_syminfo	access:public
dtsd_action	/usr/include/dtrace.h	/^	dtrace_actdesc_t *dtsd_action;		\/* action list *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_action_last	/usr/include/dtrace.h	/^	dtrace_actdesc_t *dtsd_action_last;	\/* last action in action list *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_aggdata	/usr/include/dtrace.h	/^	void *dtsd_aggdata;			\/* aggregation data *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_callback	/usr/include/dtrace.h	/^	void (*dtsd_callback)();		\/* callback function for EPID *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_data	/usr/include/dtrace.h	/^	void *dtsd_data;			\/* callback data pointer *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_descattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dtsd_descattr;	\/* probedesc attributes *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_ecbdesc	/usr/include/dtrace.h	/^	dtrace_ecbdesc_t *dtsd_ecbdesc;		\/* ECB description *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_fmtdata	/usr/include/dtrace.h	/^	void *dtsd_fmtdata;			\/* type-specific output data *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsd_stmtattr	/usr/include/dtrace.h	/^	dtrace_attribute_t dtsd_stmtattr;	\/* statement attributes *\/$/;"	m	struct:dtrace_stmtdesc	access:public
dtsda_handle	/usr/include/dtrace.h	/^	dtrace_hdl_t *dtsda_handle;		\/* handle to DTrace library *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtsda_newval	/usr/include/dtrace.h	/^	dtrace_optval_t dtsda_newval;		\/* new value *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtsda_oldval	/usr/include/dtrace.h	/^	dtrace_optval_t dtsda_oldval;		\/* old value *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtsda_option	/usr/include/dtrace.h	/^	const char *dtsda_option;		\/* option that was set *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtsda_probe	/usr/include/dtrace.h	/^	const dtrace_probedata_t *dtsda_probe;	\/* probe data *\/$/;"	m	struct:dtrace_setoptdata	access:public
dtt_ctfp	/usr/include/dtrace.h	/^	ctf_file_t *dtt_ctfp;			\/* CTF container handle *\/$/;"	m	struct:dtrace_typeinfo	access:public
dtt_object	/usr/include/dtrace.h	/^	const char *dtt_object;			\/* object containing type *\/$/;"	m	struct:dtrace_typeinfo	access:public
dtt_type	/usr/include/dtrace.h	/^	ctf_id_t dtt_type;			\/* CTF type identifier *\/$/;"	m	struct:dtrace_typeinfo	access:public
dtv_ioctl	/usr/include/dtrace.h	/^	int (*dtv_ioctl)(void *, int, void *);$/;"	m	struct:dtrace_vector	access:public
dtv_lookup_by_addr	/usr/include/dtrace.h	/^	int (*dtv_lookup_by_addr)(void *, GElf_Addr, GElf_Sym *,$/;"	m	struct:dtrace_vector	access:public
dtv_status	/usr/include/dtrace.h	/^	int (*dtv_status)(void *, processorid_t);$/;"	m	struct:dtrace_vector	access:public
dtv_sysconf	/usr/include/dtrace.h	/^	long (*dtv_sysconf)(void *, int);$/;"	m	struct:dtrace_vector	access:public
dummy	/usr/include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state	access:public
dummy1	/usr/include/tcl.h	/^    int dummy1;$/;"	m	struct:Tcl_CallFrame	access:public
dummy1	/usr/include/tk.h	/^    char *dummy1;		\/* dispPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy10	/usr/include/tcl.h	/^    char *dummy10;$/;"	m	struct:Tcl_CallFrame	access:public
dummy10	/usr/include/tk.h	/^    ClientData *dummy10;	\/* tagPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy11	/usr/include/tcl.h	/^    char *dummy11;$/;"	m	struct:Tcl_CallFrame	access:public
dummy11	/usr/include/tk.h	/^    int dummy11;		\/* numTags *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy12	/usr/include/tcl.h	/^    char *dummy12;$/;"	m	struct:Tcl_CallFrame	access:public
dummy12	/usr/include/tk.h	/^    int dummy12;		\/* optionLevel *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy13	/usr/include/tk.h	/^    char *dummy13;		\/* selHandlerList *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy14	/usr/include/tk.h	/^    char *dummy14;		\/* geomMgrPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy15	/usr/include/tk.h	/^    ClientData dummy15;		\/* geomData *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy16	/usr/include/tk.h	/^    char *dummy16;		\/* wmInfoPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy17	/usr/include/tk.h	/^    char *dummy17;		\/* classProcPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy18	/usr/include/tk.h	/^    ClientData dummy18;		\/* instanceData *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy19	/usr/include/tk.h	/^    char *dummy19;		\/* privatePtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy2	/usr/include/tcl.h	/^    int dummy2;$/;"	m	struct:Tcl_CallFrame	access:public
dummy2	/usr/include/tk.h	/^    char *dummy2;		\/* childList *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy3	/usr/include/tcl.h	/^    char *dummy3;$/;"	m	struct:Tcl_CallFrame	access:public
dummy3	/usr/include/tk.h	/^    char *dummy3;		\/* lastChildPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy4	/usr/include/tcl.h	/^    char *dummy4;$/;"	m	struct:Tcl_CallFrame	access:public
dummy4	/usr/include/tk.h	/^    char *dummy4;		\/* nextPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy5	/usr/include/tcl.h	/^    char *dummy5;$/;"	m	struct:Tcl_CallFrame	access:public
dummy5	/usr/include/tk.h	/^    char *dummy5;		\/* mainPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy6	/usr/include/tcl.h	/^    int dummy6;$/;"	m	struct:Tcl_CallFrame	access:public
dummy6	/usr/include/tk.h	/^    unsigned int dummy6;	\/* dirtyChanges *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy7	/usr/include/tcl.h	/^    char *dummy7;$/;"	m	struct:Tcl_CallFrame	access:public
dummy7	/usr/include/tk.h	/^    unsigned long dummy7;	\/* dirtyAtts *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy8	/usr/include/tcl.h	/^    char *dummy8;$/;"	m	struct:Tcl_CallFrame	access:public
dummy8	/usr/include/tk.h	/^    char *dummy8;		\/* handlerList *\/$/;"	m	struct:Tk_FakeWin	access:public
dummy9	/usr/include/tcl.h	/^    int dummy9;$/;"	m	struct:Tcl_CallFrame	access:public
dummy9	/usr/include/tk.h	/^    XIC dummy9;			\/* inputContext *\/$/;"	m	struct:Tk_FakeWin	access:public
dup	/usr/include/unistd.h	/^int	 dup(int);$/;"	p	signature:(int)
dup2	/usr/include/unistd.h	/^int	 dup2(int, int);$/;"	p	signature:(int, int)
dupIntRepProc	/usr/include/tcl.h	/^    Tcl_DupInternalRepProc *dupIntRepProc;$/;"	m	struct:Tcl_ObjType	access:public
dupInternalRepProc	/usr/include/tcl.h	/^    Tcl_FSDupInternalRepProc *dupInternalRepProc;$/;"	m	struct:Tcl_Filesystem	access:public
duplocale	/usr/include/xlocale.h	/^locale_t	duplocale(locale_t);$/;"	p	signature:(locale_t)
eat_newline_glitch	/usr/include/term.h	/^#define eat_newline_glitch /;"	d
echo_wchar	/usr/include/curses.h	/^#define echo_wchar(/;"	d
echo_wchar	/usr/include/ncurses.h	/^#define echo_wchar(/;"	d
echochar	/usr/include/curses.h	/^#define echochar(/;"	d
echochar	/usr/include/ncurses.h	/^#define echochar(/;"	d
ecvt	/usr/include/stdlib.h	/^char	*ecvt(double, int, int *__restrict, int *__restrict); \/* LEGACY *\/$/;"	p	signature:(double, int, int *__restrict, int *__restrict)
el_beep	/usr/include/histedit.h	/^void		 el_beep(EditLine *);$/;"	p	signature:(EditLine *)
el_deletestr	/usr/include/histedit.h	/^void		 el_deletestr(EditLine *, int);$/;"	p	signature:(EditLine *, int)
el_end	/usr/include/histedit.h	/^void		 el_end(EditLine *);$/;"	p	signature:(EditLine *)
el_get	/usr/include/histedit.h	/^int		 el_get(EditLine *, int, ...);$/;"	p	signature:(EditLine *, int, ...)
el_getc	/usr/include/histedit.h	/^int		 el_getc(EditLine *, char *);$/;"	p	signature:(EditLine *, char *)
el_gets	/usr/include/histedit.h	/^const char	*el_gets(EditLine *, int *);$/;"	p	signature:(EditLine *, int *)
el_init	/usr/include/histedit.h	/^EditLine	*el_init(const char *, FILE *, FILE *, FILE *);$/;"	p	signature:(const char *, FILE *, FILE *, FILE *)
el_insertstr	/usr/include/histedit.h	/^int		 el_insertstr(EditLine *, const char *);$/;"	p	signature:(EditLine *, const char *)
el_line	/usr/include/histedit.h	/^const LineInfo	*el_line(EditLine *);$/;"	p	signature:(EditLine *)
el_parse	/usr/include/histedit.h	/^int		 el_parse(EditLine *, int, const char **);$/;"	p	signature:(EditLine *, int, const char **)
el_push	/usr/include/histedit.h	/^void		 el_push(EditLine *, const char *);$/;"	p	signature:(EditLine *, const char *)
el_reset	/usr/include/histedit.h	/^void		 el_reset(EditLine *);$/;"	p	signature:(EditLine *)
el_resize	/usr/include/histedit.h	/^void		 el_resize(EditLine *);$/;"	p	signature:(EditLine *)
el_set	/usr/include/histedit.h	/^int		 el_set(EditLine *, int, ...);$/;"	p	signature:(EditLine *, int, ...)
el_source	/usr/include/histedit.h	/^int		el_source(EditLine *, const char *);$/;"	p	signature:(EditLine *, const char *)
emailbx	/usr/include/dns_util.h	/^	char *emailbx;$/;"	m	struct:__anon30	access:public
emptyBuffProc	/usr/include/fcgiapp.h	/^    void (*emptyBuffProc) (struct FCGX_Stream *stream, int doClose);$/;"	m	struct:FCGX_Stream	access:public
ena_acs	/usr/include/term.h	/^#define ena_acs /;"	d
enable_shared_cache	/usr/include/sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	access:public
encoding	/usr/include/expat.h	/^XML_ParserCreate(const XML_Char *encoding);$/;"	v
encodingName	/usr/include/tcl.h	/^    CONST char *encodingName;	\/* The name of the encoding, e.g. "euc-jp".$/;"	m	struct:Tcl_EncodingType	access:public
encrypt	/usr/include/unistd.h	/^int	 encrypt(char *, int);$/;"	p	signature:(char *, int)
encrypt	/usr/include/unistd.h	/^void	 encrypt(char *, int) __DARWIN_ALIAS(encrypt);$/;"	v
end	/usr/include/tcl.h	/^    CONST char *end;		\/* Points to the character just after the last$/;"	m	struct:Tcl_Parse	access:public
end	/usr/include/tcl.h	/^    long end;			\/* Character offset of first character after$/;"	m	struct:Tcl_RegExpIndices	access:public
end_bit_image_region	/usr/include/term.h	/^#define end_bit_image_region /;"	d
end_ip	/usr/include/libunwind.h	/^    unw_word_t    end_ip;           \/* address after end of function *\/$/;"	m	struct:unw_proc_info_t	access:public
end_node_list	/usr/include/mecab.h	/^  struct mecab_node_t **end_node_list;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
endfsent	/usr/include/fstab.h	/^void endfsent(void);$/;"	p	signature:(void)
endgrent	/usr/include/grp.h	/^void endgrent(void);$/;"	p	signature:(void)
endhostent	/usr/include/netdb.h	/^void		endhostent(void);$/;"	p	signature:(void)
endnetent	/usr/include/netdb.h	/^void		endnetent(void);$/;"	p	signature:(void)
endnetgrent	/usr/include/netdb.h	/^void		endnetgrent(void);$/;"	p	signature:(void)
endorder	/usr/include/search.h	/^	endorder,$/;"	e	enum:__anon106
endprotoent	/usr/include/netdb.h	/^void		endprotoent(void);$/;"	p	signature:(void)
endpwent	/usr/include/pwd.h	/^void		 endpwent(void);$/;"	p	signature:(void)
endrpcent	/usr/include/netdb.h	/^void		endrpcent(void);$/;"	p	signature:(void)
endservent	/usr/include/netdb.h	/^void		endservent(void);$/;"	p	signature:(void)
endttyent	/usr/include/ttyent.h	/^int endttyent(void);$/;"	p	signature:(void)
endusershell	/usr/include/unistd.h	/^void	 endusershell(void);$/;"	p	signature:(void)
endutxent	/usr/include/utmpx.h	/^void	endutxent(void);$/;"	p	signature:(void)
endutxent_wtmp	/usr/include/utmpx.h	/^void	endutxent_wtmp(void);$/;"	p	signature:(void)
enext	/usr/include/mecab.h	/^  struct mecab_learner_node_t *enext;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
enext	/usr/include/mecab.h	/^  struct mecab_node_t  *enext;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
enter_alt_charset_mode	/usr/include/term.h	/^#define enter_alt_charset_mode /;"	d
enter_am_mode	/usr/include/term.h	/^#define enter_am_mode /;"	d
enter_blink_mode	/usr/include/term.h	/^#define enter_blink_mode /;"	d
enter_bold_mode	/usr/include/term.h	/^#define enter_bold_mode /;"	d
enter_ca_mode	/usr/include/term.h	/^#define enter_ca_mode /;"	d
enter_delete_mode	/usr/include/term.h	/^#define enter_delete_mode /;"	d
enter_dim_mode	/usr/include/term.h	/^#define enter_dim_mode /;"	d
enter_doublewide_mode	/usr/include/term.h	/^#define enter_doublewide_mode /;"	d
enter_draft_quality	/usr/include/term.h	/^#define enter_draft_quality /;"	d
enter_horizontal_hl_mode	/usr/include/term.h	/^#define enter_horizontal_hl_mode /;"	d
enter_insert_mode	/usr/include/term.h	/^#define enter_insert_mode /;"	d
enter_italics_mode	/usr/include/term.h	/^#define enter_italics_mode /;"	d
enter_left_hl_mode	/usr/include/term.h	/^#define enter_left_hl_mode /;"	d
enter_leftward_mode	/usr/include/term.h	/^#define enter_leftward_mode /;"	d
enter_low_hl_mode	/usr/include/term.h	/^#define enter_low_hl_mode /;"	d
enter_micro_mode	/usr/include/term.h	/^#define enter_micro_mode /;"	d
enter_near_letter_quality	/usr/include/term.h	/^#define enter_near_letter_quality /;"	d
enter_normal_quality	/usr/include/term.h	/^#define enter_normal_quality /;"	d
enter_pc_charset_mode	/usr/include/term.h	/^#define enter_pc_charset_mode /;"	d
enter_protected_mode	/usr/include/term.h	/^#define enter_protected_mode /;"	d
enter_reverse_mode	/usr/include/term.h	/^#define enter_reverse_mode /;"	d
enter_right_hl_mode	/usr/include/term.h	/^#define enter_right_hl_mode /;"	d
enter_scancode_mode	/usr/include/term.h	/^#define enter_scancode_mode /;"	d
enter_secure_mode	/usr/include/term.h	/^#define enter_secure_mode /;"	d
enter_shadow_mode	/usr/include/term.h	/^#define enter_shadow_mode /;"	d
enter_standout_mode	/usr/include/term.h	/^#define enter_standout_mode /;"	d
enter_subscript_mode	/usr/include/term.h	/^#define enter_subscript_mode /;"	d
enter_superscript_mode	/usr/include/term.h	/^#define enter_superscript_mode /;"	d
enter_top_hl_mode	/usr/include/term.h	/^#define enter_top_hl_mode /;"	d
enter_underline_mode	/usr/include/term.h	/^#define enter_underline_mode /;"	d
enter_upward_mode	/usr/include/term.h	/^#define enter_upward_mode /;"	d
enter_vertical_hl_mode	/usr/include/term.h	/^#define enter_vertical_hl_mode /;"	d
enter_xon_mode	/usr/include/term.h	/^#define enter_xon_mode /;"	d
entry	/usr/include/search.h	/^typedef	struct entry {$/;"	s
entry	/usr/include/term_entry.h	/^typedef struct entry {$/;"	s
entry::__anon121::line	/usr/include/term_entry.h	/^	    long		line;$/;"	m	struct:entry::__anon121	access:public
entry::__anon121::link	/usr/include/term_entry.h	/^	    struct entry	*link;$/;"	m	struct:entry::__anon121	typeref:struct:entry::__anon121::entry	access:public
entry::__anon121::name	/usr/include/term_entry.h	/^	    char		*name;$/;"	m	struct:entry::__anon121	access:public
entry::cend	/usr/include/term_entry.h	/^	long		cstart, cend;$/;"	m	struct:entry	access:public
entry::crosslinks	/usr/include/term_entry.h	/^	struct entry	*crosslinks[MAX_CROSSLINKS];$/;"	m	struct:entry	typeref:struct:entry::entry	access:public
entry::cstart	/usr/include/term_entry.h	/^	long		cstart, cend;$/;"	m	struct:entry	access:public
entry::data	/usr/include/search.h	/^	void	*data;$/;"	m	struct:entry	access:public
entry::key	/usr/include/search.h	/^	char	*key;$/;"	m	struct:entry	access:public
entry::last	/usr/include/term_entry.h	/^	struct entry	*last;$/;"	m	struct:entry	typeref:struct:entry::entry	access:public
entry::ncrosslinks	/usr/include/term_entry.h	/^	int		ncrosslinks;$/;"	m	struct:entry	access:public
entry::next	/usr/include/term_entry.h	/^	struct entry	*next;$/;"	m	struct:entry	typeref:struct:entry::entry	access:public
entry::nuses	/usr/include/term_entry.h	/^	unsigned	nuses;$/;"	m	struct:entry	access:public
entry::startline	/usr/include/term_entry.h	/^	long		startline;$/;"	m	struct:entry	access:public
entry::tterm	/usr/include/term_entry.h	/^	TERMTYPE	tterm;$/;"	m	struct:entry	access:public
entry::uses	/usr/include/term_entry.h	/^	uses[MAX_USES];$/;"	m	struct:entry	typeref:struct:entry::__anon121	access:public
envp	/usr/include/fcgiapp.h	/^	char **envp;$/;"	m	struct:FCGX_Request	access:public
epoch	/usr/include/tcl.h	/^    int epoch;			\/* Epoch marker for dictionary being searched,$/;"	m	struct:__anon118	access:public
erand48	/usr/include/stdlib.h	/^double	 erand48(unsigned short[3]); $/;"	p	signature:(unsigned short[3])
erase	/usr/include/curses.h	/^#define erase(/;"	d
erase	/usr/include/curses.h	/^#undef erase$/;"	d
erase	/usr/include/ncurses.h	/^#define erase(/;"	d
erase	/usr/include/ncurses.h	/^#undef erase$/;"	d
erase_chars	/usr/include/term.h	/^#define erase_chars /;"	d
erase_overstrike	/usr/include/term.h	/^#define erase_overstrike /;"	d
err	/usr/include/fcgiapp.h	/^    FCGX_Stream *err;$/;"	m	struct:FCGX_Request	access:public
err_set_exit	/usr/include/err.h	/^void	err_set_exit(void (*)(int));$/;"	p	signature:(void (*)(int))
err_set_exit_b	/usr/include/err.h	/^void	err_set_exit_b(void (^)(int));$/;"	p	signature:(void (^)(int))
err_set_file	/usr/include/err.h	/^void	err_set_file(void *);$/;"	p	signature:(void *)
errcode	/usr/include/sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	access:public
errcode_t	/usr/include/com_err.h	/^typedef long errcode_t;$/;"	t
errmsg	/usr/include/sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
errmsg16	/usr/include/sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
error	/usr/include/Xplugin.h	/^    xp_error error;$/;"	m	struct:xp_async_error_event_struct	access:public
errorLine	/usr/include/tcl.h	/^    int errorLine;		\/* When TCL_ERROR is returned, this gives the$/;"	m	struct:Tcl_Interp	access:public
errorType	/usr/include/tcl.h	/^    int errorType;		\/* One of the parsing error types defined$/;"	m	struct:Tcl_Parse	access:public
error_manager	/usr/include/com_err.h	/^const char *error_manager (errcode_t code);$/;"	p	signature:(errcode_t code)
error_message	/usr/include/com_err.h	/^const char *error_message (errcode_t code);$/;"	p	signature:(errcode_t code)
error_table	/usr/include/com_err.h	/^struct error_table {$/;"	s
error_table::base	/usr/include/com_err.h	/^    int32_t base;$/;"	m	struct:error_table	access:public
error_table::count	/usr/include/com_err.h	/^    int32_t count;$/;"	m	struct:error_table	access:public
error_table::messages	/usr/include/com_err.h	/^    const char * const * const messages;$/;"	m	struct:error_table	access:public
estimatedCost	/usr/include/sqlite3.h	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	access:public
eval_client	/usr/include/tcpd.h	/^extern char *eval_client();		\/* whatever is available *\/$/;"	p	signature:()
eval_daemon	/usr/include/tcpd.h	/^#define eval_daemon(/;"	d
eval_hostaddr	/usr/include/tcpd.h	/^extern char *eval_hostaddr();		\/* printable host address *\/$/;"	p	signature:()
eval_hostinfo	/usr/include/tcpd.h	/^extern char *eval_hostinfo();		\/* host name or address *\/$/;"	p	signature:()
eval_hostname	/usr/include/tcpd.h	/^extern char *eval_hostname();		\/* printable hostname *\/$/;"	p	signature:()
eval_pid	/usr/include/tcpd.h	/^#define eval_pid(/;"	d
eval_server	/usr/include/tcpd.h	/^extern char *eval_server();		\/* whatever is available *\/$/;"	p	signature:()
eval_user	/usr/include/tcpd.h	/^extern char *eval_user();		\/* client user *\/$/;"	p	signature:()
event	/usr/include/tk.h	/^    Window event;		\/* Window on which event was requested. *\/$/;"	m	struct:__anon129	access:public
events	/usr/include/curses.h	/^    _nc_event *events[1];$/;"	m	struct:__anon9	access:public
events	/usr/include/ncurses.h	/^    _nc_event *events[1];$/;"	m	struct:__anon85	access:public
exchangedata	/usr/include/unistd.h	/^int exchangedata(const char*,const char*,unsigned int);$/;"	p	signature:(const char*,const char*,unsigned int)
exchangedata	/usr/include/unistd.h	/^int exchangedata(const char*,const char*,unsigned long);$/;"	p	signature:(const char*,const char*,unsigned long)
exec	/usr/include/sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	access:public
execl	/usr/include/unistd.h	/^int	 execl(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
execle	/usr/include/unistd.h	/^int	 execle(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
execlp	/usr/include/unistd.h	/^int	 execlp(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
execv	/usr/include/unistd.h	/^int	 execv(const char *, char * const *);$/;"	p	signature:(const char *, char * const *)
execvP	/usr/include/unistd.h	/^int	 execvP(const char *, const char *, char * const *);$/;"	p	signature:(const char *, const char *, char * const *)
execve	/usr/include/unistd.h	/^int	 execve(const char *, char * const *, char * const *);$/;"	p	signature:(const char *, char * const *, char * const *)
execvp	/usr/include/unistd.h	/^int	 execvp(const char *, char * const *);$/;"	p	signature:(const char *, char * const *)
exit_alt_charset_mode	/usr/include/term.h	/^#define exit_alt_charset_mode /;"	d
exit_am_mode	/usr/include/term.h	/^#define exit_am_mode /;"	d
exit_attribute_mode	/usr/include/term.h	/^#define exit_attribute_mode /;"	d
exit_ca_mode	/usr/include/term.h	/^#define exit_ca_mode /;"	d
exit_delete_mode	/usr/include/term.h	/^#define exit_delete_mode /;"	d
exit_doublewide_mode	/usr/include/term.h	/^#define exit_doublewide_mode /;"	d
exit_insert_mode	/usr/include/term.h	/^#define exit_insert_mode /;"	d
exit_italics_mode	/usr/include/term.h	/^#define exit_italics_mode /;"	d
exit_leftward_mode	/usr/include/term.h	/^#define exit_leftward_mode /;"	d
exit_micro_mode	/usr/include/term.h	/^#define exit_micro_mode /;"	d
exit_pc_charset_mode	/usr/include/term.h	/^#define exit_pc_charset_mode /;"	d
exit_scancode_mode	/usr/include/term.h	/^#define exit_scancode_mode /;"	d
exit_shadow_mode	/usr/include/term.h	/^#define exit_shadow_mode /;"	d
exit_standout_mode	/usr/include/term.h	/^#define exit_standout_mode /;"	d
exit_subscript_mode	/usr/include/term.h	/^#define exit_subscript_mode /;"	d
exit_superscript_mode	/usr/include/term.h	/^#define exit_superscript_mode /;"	d
exit_underline_mode	/usr/include/term.h	/^#define exit_underline_mode /;"	d
exit_upward_mode	/usr/include/term.h	/^#define exit_upward_mode /;"	d
exit_xon_mode	/usr/include/term.h	/^#define exit_xon_mode /;"	d
expire	/usr/include/dns_util.h	/^	uint32_t expire;$/;"	m	struct:__anon28	access:public
expired	/usr/include/sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
ext	/usr/include/resolv.h	/^			struct __res_state_ext *ext;	\/* extention for IPv6 *\/$/;"	m	struct:__res_state::__anon99::__anon100	typeref:struct:__res_state::__anon99::__anon100::__res_state_ext	access:public
ext_Booleans	/usr/include/term.h	/^    unsigned short ext_Booleans;\/* count extensions to Booleans *\/$/;"	m	struct:termtype	access:public
ext_Names	/usr/include/term.h	/^    char  **ext_Names;		\/* corresponding names *\/$/;"	m	struct:termtype	access:public
ext_Numbers	/usr/include/term.h	/^    unsigned short ext_Numbers;	\/* count extensions to Numbers *\/$/;"	m	struct:termtype	access:public
ext_Strings	/usr/include/term.h	/^    unsigned short ext_Strings;	\/* count extensions to Strings *\/$/;"	m	struct:termtype	access:public
ext_str_table	/usr/include/term.h	/^    char  *ext_str_table;	\/* pointer to extended string table *\/$/;"	m	struct:termtype	access:public
extendStart	/usr/include/tcl.h	/^    long extendStart;		\/* The offset at which a subsequent match$/;"	m	struct:Tcl_RegExpInfo	access:public
extended_result_codes	/usr/include/sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	access:public
extra	/usr/include/libunwind.h	/^    unw_word_t    extra;            \/* mach_header of mach-o image containing function *\/$/;"	m	struct:unw_proc_info_t	access:public
extra	/usr/include/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	access:public
extra_len	/usr/include/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	access:public
extra_max	/usr/include/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
false	/usr/include/stdbool.h	/^#define	false	/;"	d
fast_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^#define fast_s_mp_mul_digs /;"	d
fast_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^#define fast_s_mp_sqr /;"	d
fcgi_istream	/usr/include/fcgio.h	/^    fcgi_istream(FCGX_Stream * fcgx = 0);$/;"	p	class:fcgi_istream	access:public	signature:(FCGX_Stream * fcgx = 0)
fcgi_istream	/usr/include/fcgio.h	/^class DLLAPI fcgi_istream : public std::istream$/;"	c	inherits:std::istream
fcgi_istream::attach	/usr/include/fcgio.h	/^    virtual void attach(FCGX_Stream * fcgx);$/;"	p	class:fcgi_istream	access:public	signature:(FCGX_Stream * fcgx)
fcgi_istream::fcgi_istream	/usr/include/fcgio.h	/^    fcgi_istream(FCGX_Stream * fcgx = 0);$/;"	p	class:fcgi_istream	access:public	signature:(FCGX_Stream * fcgx = 0)
fcgi_istream::fcgi_strmbuf	/usr/include/fcgio.h	/^    fcgi_streambuf fcgi_strmbuf;$/;"	m	class:fcgi_istream	access:private
fcgi_istream::~fcgi_istream	/usr/include/fcgio.h	/^    ~fcgi_istream(void) {}$/;"	f	class:fcgi_istream	access:public	signature:(void)
fcgi_ostream	/usr/include/fcgio.h	/^    fcgi_ostream(FCGX_Stream * fcgx = 0);$/;"	p	class:fcgi_ostream	access:public	signature:(FCGX_Stream * fcgx = 0)
fcgi_ostream	/usr/include/fcgio.h	/^class DLLAPI fcgi_ostream : public std::ostream$/;"	c	inherits:std::ostream
fcgi_ostream::attach	/usr/include/fcgio.h	/^    virtual void attach(FCGX_Stream *fcgx);$/;"	p	class:fcgi_ostream	access:public	signature:(FCGX_Stream *fcgx)
fcgi_ostream::fcgi_ostream	/usr/include/fcgio.h	/^    fcgi_ostream(FCGX_Stream * fcgx = 0);$/;"	p	class:fcgi_ostream	access:public	signature:(FCGX_Stream * fcgx = 0)
fcgi_ostream::fcgi_strmbuf	/usr/include/fcgio.h	/^    fcgi_streambuf fcgi_strmbuf;$/;"	m	class:fcgi_ostream	access:private
fcgi_ostream::~fcgi_ostream	/usr/include/fcgio.h	/^    ~fcgi_ostream(void) {}$/;"	f	class:fcgi_ostream	access:public	signature:(void)
fcgi_streambuf	/usr/include/fcgio.h	/^    fcgi_streambuf(FCGX_Stream * fcgx = 0);$/;"	p	class:fcgi_streambuf	access:public	signature:(FCGX_Stream * fcgx = 0)
fcgi_streambuf	/usr/include/fcgio.h	/^    fcgi_streambuf(FCGX_Stream * fcgx, char * buf, int len);$/;"	p	class:fcgi_streambuf	access:public	signature:(FCGX_Stream * fcgx, char * buf, int len)
fcgi_streambuf	/usr/include/fcgio.h	/^    fcgi_streambuf(char_type * buf, std::streamsize len);$/;"	p	class:fcgi_streambuf	access:public	signature:(char_type * buf, std::streamsize len)
fcgi_streambuf	/usr/include/fcgio.h	/^class DLLAPI fcgi_streambuf : public std::streambuf$/;"	c	inherits:std::streambuf
fcgi_streambuf::attach	/usr/include/fcgio.h	/^    int attach(FCGX_Stream * fcgx);$/;"	p	class:fcgi_streambuf	access:public	signature:(FCGX_Stream * fcgx)
fcgi_streambuf::buf	/usr/include/fcgio.h	/^    char_type * buf;$/;"	m	class:fcgi_streambuf	access:private
fcgi_streambuf::bufsize	/usr/include/fcgio.h	/^    std::streamsize bufsize;$/;"	m	class:fcgi_streambuf	access:private
fcgi_streambuf::fcgi_streambuf	/usr/include/fcgio.h	/^    fcgi_streambuf(FCGX_Stream * fcgx = 0);$/;"	p	class:fcgi_streambuf	access:public	signature:(FCGX_Stream * fcgx = 0)
fcgi_streambuf::fcgi_streambuf	/usr/include/fcgio.h	/^    fcgi_streambuf(FCGX_Stream * fcgx, char * buf, int len);$/;"	p	class:fcgi_streambuf	access:public	signature:(FCGX_Stream * fcgx, char * buf, int len)
fcgi_streambuf::fcgi_streambuf	/usr/include/fcgio.h	/^    fcgi_streambuf(char_type * buf, std::streamsize len);$/;"	p	class:fcgi_streambuf	access:public	signature:(char_type * buf, std::streamsize len)
fcgi_streambuf::fcgx	/usr/include/fcgio.h	/^    FCGX_Stream * fcgx;$/;"	m	class:fcgi_streambuf	access:private
fcgi_streambuf::init	/usr/include/fcgio.h	/^    void init(FCGX_Stream * fcgx, char_type * buf, std::streamsize bufsize);$/;"	p	class:fcgi_streambuf	access:private	signature:(FCGX_Stream * fcgx, char_type * buf, std::streamsize bufsize)
fcgi_streambuf::overflow	/usr/include/fcgio.h	/^    virtual int overflow(int);$/;"	p	class:fcgi_streambuf	access:protected	signature:(int)
fcgi_streambuf::reset	/usr/include/fcgio.h	/^    void reset(void);$/;"	p	class:fcgi_streambuf	access:private	signature:(void)
fcgi_streambuf::setbuf	/usr/include/fcgio.h	/^    virtual std::streambuf * setbuf(char_type * buf, std::streamsize len);$/;"	p	class:fcgi_streambuf	access:protected	signature:(char_type * buf, std::streamsize len)
fcgi_streambuf::sync	/usr/include/fcgio.h	/^    virtual int sync();$/;"	p	class:fcgi_streambuf	access:protected	signature:()
fcgi_streambuf::uflow	/usr/include/fcgio.h	/^    virtual int uflow();$/;"	p	class:fcgi_streambuf	access:protected	signature:()
fcgi_streambuf::underflow	/usr/include/fcgio.h	/^    virtual int underflow();$/;"	p	class:fcgi_streambuf	access:protected	signature:()
fcgi_streambuf::xsgetn	/usr/include/fcgio.h	/^    virtual std::streamsize xsgetn(char_type * s, std::streamsize n);$/;"	p	class:fcgi_streambuf	access:protected	signature:(char_type * s, std::streamsize n)
fcgi_streambuf::xsputn	/usr/include/fcgio.h	/^    virtual std::streamsize xsputn(const char_type * s, std::streamsize n);$/;"	p	class:fcgi_streambuf	access:protected	signature:(const char_type * s, std::streamsize n)
fcgi_streambuf::~fcgi_streambuf	/usr/include/fcgio.h	/^    ~fcgi_streambuf(void);$/;"	p	class:fcgi_streambuf	access:public	signature:(void)
fcgi_strmbuf	/usr/include/fcgio.h	/^    fcgi_streambuf fcgi_strmbuf;$/;"	m	class:fcgi_istream	access:private
fcgi_strmbuf	/usr/include/fcgio.h	/^    fcgi_streambuf fcgi_strmbuf;$/;"	m	class:fcgi_ostream	access:private
fcgx	/usr/include/fcgio.h	/^    FCGX_Stream * fcgx;$/;"	m	class:fcgi_streambuf	access:private
fcgx_stream	/usr/include/fcgi_stdio.h	/^    FCGX_Stream *fcgx_stream;$/;"	m	struct:__anon60	access:public
fchdir	/usr/include/unistd.h	/^int	 fchdir(int);$/;"	p	signature:(int)
fcheck	/usr/include/form.h	/^  bool	(*fcheck)(FIELD *,const void *);	\/* field validation	*\/$/;"	m	struct:typenode	access:public
fchown	/usr/include/unistd.h	/^int	 fchown(int, uid_t, gid_t);$/;"	p	signature:(int, uid_t, gid_t)
fclose	/usr/include/fcgi_stdio.h	/^#define	fclose /;"	d
fclose	/usr/include/fcgi_stdio.h	/^#undef  fclose$/;"	d
fclose	/usr/include/stdio.h	/^int	 fclose(FILE *);$/;"	p	signature:(FILE *)
fcol	/usr/include/form.h	/^  short			fcol;		\/* first col			*\/$/;"	m	struct:fieldnode	access:public
fcols	/usr/include/menu.h	/^  short          fcols;                 \/* Nr. of formatted items wide     *\/$/;"	m	struct:tagMENU	access:public
fcopyfile	/usr/include/copyfile.h	/^int fcopyfile(int from_fd, int to_fd, copyfile_state_t, copyfile_flags_t flags);$/;"	p	signature:(int from_fd, int to_fd, copyfile_state_t, copyfile_flags_t flags)
fcvt	/usr/include/stdlib.h	/^char	*fcvt(double, int, int *__restrict, int *__restrict); \/* LEGACY *\/$/;"	p	signature:(double, int, int *__restrict, int *__restrict)
fd	/usr/include/curses.h	/^	    int fd;$/;"	m	struct:__anon6::__anon7::__anon8	access:public
fd	/usr/include/db.h	/^	int (*fd)(const struct __db *);$/;"	m	struct:__db	access:public
fd	/usr/include/mpool.h	/^	int	fd;			\/* file descriptor *\/$/;"	m	struct:MPOOL	access:public
fd	/usr/include/ncurses.h	/^	    int fd;$/;"	m	struct:__anon82::__anon83::__anon84	access:public
fd	/usr/include/tcpd.h	/^    int     fd;				\/* socket handle *\/$/;"	m	struct:request_info	access:public
fdopen	/usr/include/fcgi_stdio.h	/^#define fdopen /;"	d
fdopen	/usr/include/fcgi_stdio.h	/^#undef  fdopen$/;"	d
fdopen	/usr/include/stdio.h	/^FILE	*fdopen(int, const char *) __DARWIN_EXTSN(fdopen);$/;"	v
feature	/usr/include/expat.h	/^  enum XML_FeatureEnum  feature;$/;"	m	struct:__anon52	typeref:enum:__anon52::XML_FeatureEnum	access:public
feature	/usr/include/mecab.h	/^  const char                  *feature;$/;"	m	struct:mecab_learner_node_t	access:public
feature	/usr/include/mecab.h	/^  const char           *feature;$/;"	m	struct:mecab_node_t	access:public
feature	/usr/include/mecab.h	/^  unsigned int   feature;$/;"	m	struct:mecab_token_t	access:public
feof	/usr/include/fcgi_stdio.h	/^#define	feof /;"	d
feof	/usr/include/fcgi_stdio.h	/^#undef  feof$/;"	d
feof	/usr/include/stdio.h	/^int	 feof(FILE *);$/;"	p	signature:(FILE *)
feof_unlocked	/usr/include/stdio.h	/^#define	feof_unlocked(/;"	d
ferror	/usr/include/fcgi_stdio.h	/^#define ferror /;"	d
ferror	/usr/include/fcgi_stdio.h	/^#undef  ferror$/;"	d
ferror	/usr/include/stdio.h	/^int	 ferror(FILE *);$/;"	p	signature:(FILE *)
ferror_unlocked	/usr/include/stdio.h	/^#define	ferror_unlocked(/;"	d
fev	/usr/include/curses.h	/^	} fev;				\/* _NC_EVENT_FILE *\/$/;"	m	union:__anon6::__anon7	typeref:struct:__anon6::__anon7::__anon8	access:public
fev	/usr/include/ncurses.h	/^	} fev;				\/* _NC_EVENT_FILE *\/$/;"	m	union:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon84	access:public
ffactor	/usr/include/db.h	/^	unsigned int	ffactor;	\/* fill factor *\/$/;"	m	struct:__anon14	access:public
fflagstostr	/usr/include/unistd.h	/^char	*fflagstostr(unsigned long);$/;"	p	signature:(unsigned long)
fflush	/usr/include/fcgi_stdio.h	/^#define	fflush /;"	d
fflush	/usr/include/fcgi_stdio.h	/^#undef  fflush$/;"	d
fflush	/usr/include/stdio.h	/^int	 fflush(FILE *);$/;"	p	signature:(FILE *)
ffs	/usr/include/string.h	/^int	 ffs(int);$/;"	p	signature:(int)
ffs	/usr/include/strings.h	/^int      ffs(int);$/;"	p	signature:(int)
ffsctl	/usr/include/unistd.h	/^int	 ffsctl(int,unsigned long,void*,unsigned int);$/;"	p	signature:(int,unsigned long,void*,unsigned int)
ffsl	/usr/include/string.h	/^int	 ffsl(long);$/;"	p	signature:(long)
fgetattrlist	/usr/include/unistd.h	/^int	fgetattrlist(int,void*,void*,size_t,unsigned long);$/;"	p	signature:(int,void*,void*,size_t,unsigned long)
fgetattrlist	/usr/include/unistd.h	/^int    fgetattrlist(int,void*,void*,size_t,unsigned int);$/;"	p	signature:(int,void*,void*,size_t,unsigned int)
fgetc	/usr/include/fcgi_stdio.h	/^#define	fgetc /;"	d
fgetc	/usr/include/fcgi_stdio.h	/^#undef  fgetc$/;"	d
fgetc	/usr/include/stdio.h	/^int	 fgetc(FILE *);$/;"	p	signature:(FILE *)
fgetln	/usr/include/stdio.h	/^char	*fgetln(FILE *, size_t *);$/;"	p	signature:(FILE *, size_t *)
fgetpos	/usr/include/fcgi_stdio.h	/^#define fgetpos /;"	d
fgetpos	/usr/include/fcgi_stdio.h	/^#undef  fgetpos$/;"	d
fgetpos	/usr/include/stdio.h	/^int	 fgetpos(FILE * __restrict, fpos_t *);$/;"	p	signature:(FILE * __restrict, fpos_t *)
fgets	/usr/include/fcgi_stdio.h	/^#define fgets /;"	d
fgets	/usr/include/fcgi_stdio.h	/^#undef  fgets$/;"	d
fgets	/usr/include/stdio.h	/^char	*fgets(char * __restrict, int, FILE *);$/;"	p	signature:(char * __restrict, int, FILE *)
fgets	/usr/include/tcpd.h	/^#define fgets /;"	d
fgetwc	/usr/include/wchar.h	/^wint_t	fgetwc(FILE *);$/;"	p	signature:(FILE *)
fgetws	/usr/include/wchar.h	/^wchar_t	*fgetws(wchar_t * __restrict, int, FILE * __restrict);$/;"	p	signature:(wchar_t * __restrict, int, FILE * __restrict)
field	/usr/include/form.h	/^  FIELD **		field;		\/* field [maxfield]		*\/$/;"	m	struct:formnode	access:public
fieldinit	/usr/include/form.h	/^  void			(*fieldinit)(struct formnode *);$/;"	m	struct:formnode	access:public
fieldnode	/usr/include/form.h	/^typedef struct fieldnode {$/;"	s
fieldnode::arg	/usr/include/form.h	/^  void *		arg;		\/* argument for type		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::back	/usr/include/form.h	/^  chtype		back;		\/* background attribute		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::buf	/usr/include/form.h	/^  FIELD_CELL *		buf;		\/* field buffers		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::cols	/usr/include/form.h	/^  short			cols;		\/* size in cols			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::dcols	/usr/include/form.h	/^  int			dcols;		\/* dynamic cols			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::drows	/usr/include/form.h	/^  int			drows;		\/* dynamic rows			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::fcol	/usr/include/form.h	/^  short			fcol;		\/* first col			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::fore	/usr/include/form.h	/^  chtype		fore;		\/* foreground attribute		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::form	/usr/include/form.h	/^  struct formnode *	form;		\/* containing form		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::formnode	access:public
fieldnode::frow	/usr/include/form.h	/^  short			frow;		\/* first row			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::index	/usr/include/form.h	/^  short			index;		\/* into form -> field		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::just	/usr/include/form.h	/^  short			just;		\/* justification		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::link	/usr/include/form.h	/^  struct fieldnode *	link;		\/* linked field chain		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::fieldnode	access:public
fieldnode::maxgrow	/usr/include/form.h	/^  int			maxgrow;	\/* maximum field growth		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::nbuf	/usr/include/form.h	/^  short			nbuf;		\/* additional buffers		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::nrow	/usr/include/form.h	/^  int			nrow;		\/* off-screen rows		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::opts	/usr/include/form.h	/^  Field_Options		opts;		\/* options			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::pad	/usr/include/form.h	/^  int			pad;		\/* pad character		*\/$/;"	m	struct:fieldnode	access:public
fieldnode::page	/usr/include/form.h	/^  short			page;		\/* page on form			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::rows	/usr/include/form.h	/^  short			rows;		\/* size in rows			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::snext	/usr/include/form.h	/^  struct fieldnode *	snext;		\/* sorted order pointer		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::fieldnode	access:public
fieldnode::sprev	/usr/include/form.h	/^  struct fieldnode *	sprev;		\/* sorted order pointer		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::fieldnode	access:public
fieldnode::status	/usr/include/form.h	/^  unsigned short	status;		\/* flags			*\/$/;"	m	struct:fieldnode	access:public
fieldnode::type	/usr/include/form.h	/^  struct typenode *	type;		\/* field type			*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::typenode	access:public
fieldnode::usrptr	/usr/include/form.h	/^  void *		usrptr;		\/* user pointer			*\/$/;"	m	struct:fieldnode	access:public
fieldterm	/usr/include/form.h	/^  void			(*fieldterm)(struct formnode *);$/;"	m	struct:formnode	access:public
file	/usr/include/tcpd.h	/^    char   *file;			\/* current file *\/$/;"	m	struct:tcpd_context	access:public
fileAttrStringsProc	/usr/include/tcl.h	/^    Tcl_FSFileAttrStringsProc *fileAttrStringsProc;$/;"	m	struct:Tcl_Filesystem	access:public
fileAttrsGetProc	/usr/include/tcl.h	/^    Tcl_FSFileAttrsGetProc *fileAttrsGetProc;$/;"	m	struct:Tcl_Filesystem	access:public
fileAttrsSetProc	/usr/include/tcl.h	/^    Tcl_FSFileAttrsSetProc *fileAttrsSetProc;$/;"	m	struct:Tcl_Filesystem	access:public
fileMatchProc	/usr/include/tk.h	/^    Tk_ImageFileMatchProc *fileMatchProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
fileReadProc	/usr/include/tk.h	/^    Tk_ImageFileReadProc *fileReadProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
fileWriteProc	/usr/include/tk.h	/^    Tk_ImageFileWriteProc *fileWriteProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
file_control	/usr/include/sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	access:public
filename	/usr/include/ltdl.h	/^  char *	filename;	\/* file name *\/$/;"	m	struct:__anon75	access:public
filename	/usr/include/mecab.h	/^  const char                     *filename;$/;"	m	struct:mecab_dictionary_info_t	access:public
fileno	/usr/include/fcgi_stdio.h	/^#define fileno /;"	d
fileno	/usr/include/fcgi_stdio.h	/^#undef  fileno$/;"	d
fileno	/usr/include/stdio.h	/^int	 fileno(FILE *);$/;"	p	signature:(FILE *)
fileno_unlocked	/usr/include/stdio.h	/^#define	fileno_unlocked(/;"	d
filesystemPathTypeProc	/usr/include/tcl.h	/^    Tcl_FSFilesystemPathTypeProc *filesystemPathTypeProc;$/;"	m	struct:Tcl_Filesystem	access:public
filesystemSeparatorProc	/usr/include/tcl.h	/^    Tcl_FSFilesystemSeparatorProc *filesystemSeparatorProc;$/;"	m	struct:Tcl_Filesystem	access:public
fillBuffProc	/usr/include/fcgiapp.h	/^    void (*fillBuffProc) (struct FCGX_Stream *stream);$/;"	m	struct:FCGX_Stream	access:public
finalBuffer	/usr/include/expat.h	/^  XML_Bool finalBuffer;$/;"	m	struct:__anon50	access:public
finalize	/usr/include/sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
finalizeNotifierProc	/usr/include/tcl.h	/^    Tcl_FinalizeNotifierProc *finalizeNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
findProc	/usr/include/tcl.h	/^    Tcl_HashEntry *(*findProc) _ANSI_ARGS_((Tcl_HashTable *tablePtr,$/;"	m	struct:Tcl_HashTable	access:public
fix_fgets	/usr/include/tcpd.h	/^extern char *fix_fgets();$/;"	p	signature:()
fix_gethostbyname	/usr/include/tcpd.h	/^extern struct hostent *fix_gethostbyname();$/;"	p	signature:()
fix_getpeername	/usr/include/tcpd.h	/^extern int fix_getpeername();$/;"	p	signature:()
fix_inet_addr	/usr/include/tcpd.h	/^extern long fix_inet_addr();$/;"	p	signature:()
fix_recvfrom	/usr/include/tcpd.h	/^extern int fix_recvfrom();$/;"	p	signature:()
fix_strtok	/usr/include/tcpd.h	/^extern char *fix_strtok();$/;"	p	signature:()
fixed_pause	/usr/include/term.h	/^#define fixed_pause /;"	d
fixterm	/usr/include/curses.h	/^#define fixterm(/;"	d
fixterm	/usr/include/ncurses.h	/^#define fixterm(/;"	d
flag	/usr/include/getopt.h	/^	int *flag;$/;"	m	struct:option	access:public
flags	/usr/include/curses.h	/^	    unsigned int flags;$/;"	m	struct:__anon6::__anon7::__anon8	access:public
flags	/usr/include/db.h	/^	unsigned long	flags;$/;"	m	struct:__anon13	access:public
flags	/usr/include/db.h	/^	unsigned long	flags;$/;"	m	struct:__anon15	access:public
flags	/usr/include/dns_util.h	/^	uint16_t flags;$/;"	m	struct:__anon22	access:public
flags	/usr/include/fastcgi.h	/^    unsigned char flags;$/;"	m	struct:__anon54	access:public
flags	/usr/include/fcgiapp.h	/^	int flags;$/;"	m	struct:FCGX_Request	access:public
flags	/usr/include/libunwind.h	/^    unw_word_t    flags;            \/* not used *\/$/;"	m	struct:unw_proc_info_t	access:public
flags	/usr/include/mpool.h	/^	u_int8_t flags;			\/* flags *\/$/;"	m	struct:_bkt	access:public
flags	/usr/include/ncurses.h	/^	    unsigned int flags;$/;"	m	struct:__anon82::__anon83::__anon84	access:public
flags	/usr/include/tcl.h	/^    int flags;			\/* Flags, see above for details. *\/$/;"	m	struct:Tcl_HashKeyType	access:public
flags	/usr/include/tk.h	/^    int flags;			\/* Any combination of the values defined$/;"	m	struct:Tk_OptionSpec	access:public
flags	/usr/include/tk.h	/^    int flags;			\/* Flags; see below for possible values *\/$/;"	m	struct:Tk_TSOffset	access:public
flags	/usr/include/tk.h	/^    unsigned int flags;$/;"	m	struct:Tk_FakeWin	access:public
flash_hook	/usr/include/term.h	/^#define flash_hook /;"	d
flash_screen	/usr/include/term.h	/^#define flash_screen /;"	d
fldoff	/usr/include/struct.h	/^#define	fldoff(/;"	d
fldsiz	/usr/include/struct.h	/^#define	fldsiz(/;"	d
flockfile	/usr/include/stdio.h	/^void	 flockfile(FILE *);$/;"	p	signature:(FILE *)
fls	/usr/include/string.h	/^int	 fls(int);$/;"	p	signature:(int)
flsl	/usr/include/string.h	/^int	 flsl(long);$/;"	p	signature:(long)
flushProc	/usr/include/tcl.h	/^    Tcl_DriverFlushProc *flushProc;$/;"	m	struct:Tcl_ChannelType	access:public
fmtcheck	/usr/include/stdio.h	/^	*fmtcheck(const char *, const char *);$/;"	p	signature:(const char *, const char *)
fmtmsg	/usr/include/fmtmsg.h	/^int	fmtmsg(long, const char *, int, const char *, const char *,$/;"	p	signature:(long, const char *, int, const char *, const char *, const char *)
fnmatch	/usr/include/fnmatch.h	/^int	 fnmatch(const char *, const char *, int) __DARWIN_ALIAS(fnmatch);$/;"	v
focusItemPtr	/usr/include/tk.h	/^    Tk_Item *focusItemPtr;	\/* Item that currently has the input focus, or$/;"	m	struct:Tk_CanvasTextInfo	access:public
fopen	/usr/include/fcgi_stdio.h	/^#define	fopen /;"	d
fopen	/usr/include/fcgi_stdio.h	/^#undef  fopen$/;"	d
fopen	/usr/include/stdio.h	/^FILE	*fopen(const char * __restrict, const char * __restrict) __DARWIN_EXTSN(fopen);$/;"	v
for_each_boolean	/usr/include/term_entry.h	/^#define for_each_boolean(/;"	d
for_each_number	/usr/include/term_entry.h	/^#define for_each_number(/;"	d
for_each_string	/usr/include/term_entry.h	/^#define for_each_string(/;"	d
for_entry_list	/usr/include/term_entry.h	/^#define for_entry_list(/;"	d
fore	/usr/include/form.h	/^  chtype		fore;		\/* foreground attribute		*\/$/;"	m	struct:fieldnode	access:public
fore	/usr/include/menu.h	/^  chtype         fore;                  \/* Selection attribute             *\/$/;"	m	struct:tagMENU	access:public
fork	/usr/include/unistd.h	/^pid_t	 fork(void);$/;"	p	signature:(void)
forkpty	/usr/include/util.h	/^pid_t	forkpty(int *, char *, struct termios *, struct winsize *);$/;"	p	signature:(int *, char *, struct termios *, struct winsize *)
form	/usr/include/form.h	/^  struct formnode *	form;		\/* containing form		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::formnode	access:public
form_feed	/usr/include/term.h	/^#define form_feed /;"	d
format	/usr/include/libunwind.h	/^    uint32_t      format;           \/* compact unwind encoding, or zero if none *\/$/;"	m	struct:unw_proc_info_t	access:public
formatNode	/usr/include/mecab.h	/^    virtual const char* formatNode(const Node *node)          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const Node *node)
formatNode	/usr/include/mecab.h	/^    virtual const char* formatNode(const Node *node, char *ostr, size_t olen) = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const Node *node, char *ostr, size_t olen)
forminit	/usr/include/form.h	/^  void			(*forminit)(struct formnode *);$/;"	m	struct:formnode	access:public
formnode	/usr/include/form.h	/^typedef struct formnode {$/;"	s
formnode::begincol	/usr/include/form.h	/^  int			begincol;	\/* in horiz. scrollable field	*\/$/;"	m	struct:formnode	access:public
formnode::cols	/usr/include/form.h	/^  short			cols;		\/* size in cols			*\/$/;"	m	struct:formnode	access:public
formnode::curcol	/usr/include/form.h	/^  int			curcol;		\/* current col in field window	*\/$/;"	m	struct:formnode	access:public
formnode::curpage	/usr/include/form.h	/^  short			curpage;	\/* index into page		*\/$/;"	m	struct:formnode	access:public
formnode::current	/usr/include/form.h	/^  FIELD *		current;	\/* current field		*\/$/;"	m	struct:formnode	access:public
formnode::currow	/usr/include/form.h	/^  int			currow;		\/* current row in field window	*\/$/;"	m	struct:formnode	access:public
formnode::field	/usr/include/form.h	/^  FIELD **		field;		\/* field [maxfield]		*\/$/;"	m	struct:formnode	access:public
formnode::fieldinit	/usr/include/form.h	/^  void			(*fieldinit)(struct formnode *);$/;"	m	struct:formnode	access:public
formnode::fieldterm	/usr/include/form.h	/^  void			(*fieldterm)(struct formnode *);$/;"	m	struct:formnode	access:public
formnode::forminit	/usr/include/form.h	/^  void			(*forminit)(struct formnode *);$/;"	m	struct:formnode	access:public
formnode::formterm	/usr/include/form.h	/^  void			(*formterm)(struct formnode *);$/;"	m	struct:formnode	access:public
formnode::maxfield	/usr/include/form.h	/^  short			maxfield;	\/* number of fields		*\/$/;"	m	struct:formnode	access:public
formnode::maxpage	/usr/include/form.h	/^  short			maxpage;	\/* number of pages		*\/$/;"	m	struct:formnode	access:public
formnode::opts	/usr/include/form.h	/^  Form_Options		opts;		\/* options			*\/$/;"	m	struct:formnode	access:public
formnode::page	/usr/include/form.h	/^  _PAGE *		page;		\/* page [maxpage]		*\/$/;"	m	struct:formnode	access:public
formnode::rows	/usr/include/form.h	/^  short			rows;		\/* size in rows			*\/$/;"	m	struct:formnode	access:public
formnode::status	/usr/include/form.h	/^  unsigned short	status;		\/* flags			*\/$/;"	m	struct:formnode	access:public
formnode::sub	/usr/include/form.h	/^  WINDOW *		sub;		\/* subwindow			*\/$/;"	m	struct:formnode	access:public
formnode::toprow	/usr/include/form.h	/^  int			toprow;		\/* in scrollable field window	*\/$/;"	m	struct:formnode	access:public
formnode::usrptr	/usr/include/form.h	/^  void *		usrptr;		\/* user pointer			*\/$/;"	m	struct:formnode	access:public
formnode::w	/usr/include/form.h	/^  WINDOW *		w;		\/* window for current field	*\/$/;"	m	struct:formnode	access:public
formnode::win	/usr/include/form.h	/^  WINDOW *		win;		\/* window			*\/$/;"	m	struct:formnode	access:public
formterm	/usr/include/form.h	/^  void			(*formterm)(struct formnode *);$/;"	m	struct:formnode	access:public
fp_nquery	/usr/include/resolv.h	/^#define fp_nquery	/;"	d
fp_nquery	/usr/include/resolv.h	/^void		fp_nquery __P((const u_char *, int, FILE *));$/;"	p	signature:(const u_char *, int, FILE *)
fp_query	/usr/include/resolv.h	/^#define fp_query	/;"	d
fp_query	/usr/include/resolv.h	/^void		fp_query __P((const u_char *, FILE *));$/;"	p	signature:(const u_char *, FILE *)
fp_resstat	/usr/include/resolv.h	/^#define fp_resstat	/;"	d
fp_resstat	/usr/include/resolv.h	/^void		fp_resstat __P((const res_state, FILE *));$/;"	p	signature:(const res_state, FILE *)
fparseln	/usr/include/util.h	/^char   *fparseln(FILE *, size_t *, size_t *, const char[3], int);$/;"	p	signature:(FILE *, size_t *, size_t *, const char[3], int)
fpathconf	/usr/include/unistd.h	/^long	 fpathconf(int, int);$/;"	p	signature:(int, int)
fpos_t	/usr/include/stdio.h	/^typedef __darwin_off_t		fpos_t;$/;"	t
fprintf	/usr/include/fcgi_stdio.h	/^#define	fprintf /;"	d
fprintf	/usr/include/fcgi_stdio.h	/^#undef  fprintf$/;"	d
fprintf	/usr/include/stdio.h	/^int	 fprintf(FILE * __restrict, const char * __restrict, ...) __DARWIN_LDBL_COMPAT(fprintf);$/;"	v
fpurge	/usr/include/stdio.h	/^int	 fpurge(FILE *);$/;"	p	signature:(FILE *)
fputc	/usr/include/fcgi_stdio.h	/^#define fputc /;"	d
fputc	/usr/include/fcgi_stdio.h	/^#undef  fputc$/;"	d
fputc	/usr/include/stdio.h	/^int	 fputc(int, FILE *);$/;"	p	signature:(int, FILE *)
fputs	/usr/include/fcgi_stdio.h	/^#define	fputs /;"	d
fputs	/usr/include/fcgi_stdio.h	/^#undef  fputs$/;"	d
fputs	/usr/include/stdio.h	/^int	 fputs(const char * __restrict, FILE * __restrict) __DARWIN_ALIAS(fputs);$/;"	v
fputwc	/usr/include/wchar.h	/^wint_t	fputwc(wchar_t, FILE *);$/;"	p	signature:(wchar_t, FILE *)
fputws	/usr/include/wchar.h	/^int	fputws(const wchar_t * __restrict, FILE * __restrict);$/;"	p	signature:(const wchar_t * __restrict, FILE * __restrict)
frac_digits	/usr/include/_locale.h	/^	char	frac_digits;$/;"	m	struct:lconv	access:public
fraction	/usr/include/sqltypes.h	/^    SQLUINTEGER fraction;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
fraction	/usr/include/sqltypes.h	/^    SQLUINTEGER fraction;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
fread	/usr/include/fcgi_stdio.h	/^#define	fread /;"	d
fread	/usr/include/fcgi_stdio.h	/^#undef  fread$/;"	d
fread	/usr/include/stdio.h	/^size_t	 fread(void * __restrict, size_t, size_t, FILE * __restrict);$/;"	p	signature:(void * __restrict, size_t, size_t, FILE * __restrict)
free	/usr/include/sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	access:public
free	/usr/include/stdlib.h	/^void	 free(void *);$/;"	p	signature:(void *)
freeEntryProc	/usr/include/tcl.h	/^    Tcl_FreeHashEntryProc *freeEntryProc;$/;"	m	struct:Tcl_HashKeyType	access:public
freeIntRepProc	/usr/include/tcl.h	/^    Tcl_FreeInternalRepProc *freeIntRepProc;$/;"	m	struct:Tcl_ObjType	access:public
freeInternalRepProc	/usr/include/tcl.h	/^    Tcl_FSFreeInternalRepProc *freeInternalRepProc;$/;"	m	struct:Tcl_Filesystem	access:public
freeProc	/usr/include/tcl.h	/^    Tcl_EncodingFreeProc *freeProc;$/;"	m	struct:Tcl_EncodingType	access:public
freeProc	/usr/include/tcl.h	/^    Tcl_FreeProc *freeProc;$/;"	m	struct:Tcl_SavedResult	access:public
freeProc	/usr/include/tcl.h	/^    void (*freeProc) _ANSI_ARGS_((char *blockPtr));$/;"	m	struct:Tcl_Interp	access:public
freeProc	/usr/include/tk.h	/^    Tk_CustomOptionFreeProc *freeProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
freeProc	/usr/include/tk.h	/^    Tk_ImageFreeProc *freeProc;	\/* Procedure to call whenever Tk_FreeImage is$/;"	m	struct:Tk_ImageType	access:public
free_fcn	/usr/include/expat.h	/^  void (*free_fcn)(void *ptr);$/;"	m	struct:__anon48	access:public
free_func	/usr/include/zconf.h	/^#  define free_func /;"	d
free_func	/usr/include/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_table	/usr/include/sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	access:public
freeaddrinfo	/usr/include/netdb.h	/^void		freeaddrinfo(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
freearg	/usr/include/form.h	/^  void	(*freearg)(void *);			\/* free fieldtype arg	*\/$/;"	m	struct:typenode	access:public
freehostent	/usr/include/netdb.h	/^void		freehostent(struct hostent *);$/;"	p	signature:(struct hostent *)
freeifaddrs	/usr/include/ifaddrs.h	/^extern void freeifaddrs __P((struct ifaddrs *));$/;"	p	signature:(struct ifaddrs *)
freelocale	/usr/include/xlocale.h	/^int		freelocale(locale_t);$/;"	p	signature:(locale_t)
freopen	/usr/include/fcgi_stdio.h	/^#define	freopen /;"	d
freopen	/usr/include/fcgi_stdio.h	/^#undef  freopen$/;"	d
freopen	/usr/include/stdio.h	/^	    FILE * __restrict) __DARWIN_ALIAS(freopen);$/;"	v
from	/usr/include/tic.h	/^	const char	*from;$/;"	m	struct:alias	access:public
fromUtfProc	/usr/include/tcl.h	/^    Tcl_EncodingConvertProc *fromUtfProc;$/;"	m	struct:Tcl_EncodingType	access:public
from_status_line	/usr/include/term.h	/^#define from_status_line /;"	d
fromhost	/usr/include/tcpd.h	/^#define fromhost /;"	d
fromhost	/usr/include/tcpd.h	/^extern void fromhost();			\/* get\/validate client host info *\/$/;"	p	signature:()
fropen	/usr/include/stdio.h	/^#define	fropen(/;"	d
frow	/usr/include/form.h	/^  short			frow;		\/* first row			*\/$/;"	m	struct:fieldnode	access:public
frows	/usr/include/menu.h	/^  short          frows;                 \/* Nr. of formatted items high     *\/$/;"	m	struct:tagMENU	access:public
fs_file	/usr/include/fstab.h	/^	char	*fs_file;		\/* file system path prefix *\/$/;"	m	struct:fstab	access:public
fs_freq	/usr/include/fstab.h	/^	int	fs_freq;		\/* dump frequency, in days *\/$/;"	m	struct:fstab	access:public
fs_mntops	/usr/include/fstab.h	/^	char	*fs_mntops;		\/* Mount options ala -o *\/$/;"	m	struct:fstab	access:public
fs_passno	/usr/include/fstab.h	/^	int	fs_passno;		\/* pass number on parallel dump *\/$/;"	m	struct:fstab	access:public
fs_spec	/usr/include/fstab.h	/^	char	*fs_spec;		\/* block special device name *\/$/;"	m	struct:fstab	access:public
fs_type	/usr/include/fstab.h	/^	char	*fs_type;		\/* FSTAB_* from fs_mntops *\/$/;"	m	struct:fstab	access:public
fs_vfstype	/usr/include/fstab.h	/^	char	*fs_vfstype;		\/* File system type, ufs, nfs *\/$/;"	m	struct:fstab	access:public
fscanf	/usr/include/stdio.h	/^int	 fscanf(FILE * __restrict, const char * __restrict, ...) __DARWIN_LDBL_COMPAT(fscanf);$/;"	v
fsctl	/usr/include/unistd.h	/^int	 fsctl(const char *,unsigned long,void*,unsigned int);$/;"	p	signature:(const char *,unsigned long,void*,unsigned int)
fseek	/usr/include/fcgi_stdio.h	/^#define fseek /;"	d
fseek	/usr/include/fcgi_stdio.h	/^#undef  fseek$/;"	d
fseek	/usr/include/stdio.h	/^int	 fseek(FILE *, long, int);$/;"	p	signature:(FILE *, long, int)
fseeko	/usr/include/stdio.h	/^int	 fseeko(FILE *, off_t, int);$/;"	p	signature:(FILE *, off_t, int)
fsetattrlist	/usr/include/unistd.h	/^int	fsetattrlist(int,void*,void*,size_t,unsigned long);$/;"	p	signature:(int,void*,void*,size_t,unsigned long)
fsetattrlist	/usr/include/unistd.h	/^int    fsetattrlist(int,void*,void*,size_t,unsigned int);$/;"	p	signature:(int,void*,void*,size_t,unsigned int)
fsetpos	/usr/include/fcgi_stdio.h	/^#define fsetpos /;"	d
fsetpos	/usr/include/fcgi_stdio.h	/^#undef  fsetpos$/;"	d
fsetpos	/usr/include/stdio.h	/^int	 fsetpos(FILE *, const fpos_t *);$/;"	p	signature:(FILE *, const fpos_t *)
fstab	/usr/include/fstab.h	/^struct fstab {$/;"	s
fstab::fs_file	/usr/include/fstab.h	/^	char	*fs_file;		\/* file system path prefix *\/$/;"	m	struct:fstab	access:public
fstab::fs_freq	/usr/include/fstab.h	/^	int	fs_freq;		\/* dump frequency, in days *\/$/;"	m	struct:fstab	access:public
fstab::fs_mntops	/usr/include/fstab.h	/^	char	*fs_mntops;		\/* Mount options ala -o *\/$/;"	m	struct:fstab	access:public
fstab::fs_passno	/usr/include/fstab.h	/^	int	fs_passno;		\/* pass number on parallel dump *\/$/;"	m	struct:fstab	access:public
fstab::fs_spec	/usr/include/fstab.h	/^	char	*fs_spec;		\/* block special device name *\/$/;"	m	struct:fstab	access:public
fstab::fs_type	/usr/include/fstab.h	/^	char	*fs_type;		\/* FSTAB_* from fs_mntops *\/$/;"	m	struct:fstab	access:public
fstab::fs_vfstype	/usr/include/fstab.h	/^	char	*fs_vfstype;		\/* File system type, ufs, nfs *\/$/;"	m	struct:fstab	access:public
fsync	/usr/include/unistd.h	/^int	 fsync(int) __DARWIN_ALIAS_C(fsync);$/;"	v
ftell	/usr/include/fcgi_stdio.h	/^#define ftell /;"	d
ftell	/usr/include/fcgi_stdio.h	/^#undef  ftell$/;"	d
ftell	/usr/include/stdio.h	/^long	 ftell(FILE *);$/;"	p	signature:(FILE *)
ftello	/usr/include/stdio.h	/^off_t	 ftello(FILE *);$/;"	p	signature:(FILE *)
ftruncate	/usr/include/unistd.h	/^int	 ftruncate(int, off_t);$/;"	p	signature:(int, off_t)
ftrylockfile	/usr/include/stdio.h	/^int	 ftrylockfile(FILE *);$/;"	p	signature:(FILE *)
fts_accpath	/usr/include/fts.h	/^	char *fts_accpath;		\/* access path *\/$/;"	m	struct:_ftsent	access:public
fts_array	/usr/include/fts.h	/^	struct _ftsent **fts_array;	\/* sort array *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::_ftsent	access:public
fts_child	/usr/include/fts.h	/^	struct _ftsent *fts_child;	\/* linked list of children *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::_ftsent	access:public
fts_children	/usr/include/fts.h	/^FTSENT	*fts_children(FTS *, int) __DARWIN_INODE64(fts_children);$/;"	v
fts_close	/usr/include/fts.h	/^int	 fts_close(FTS *) __DARWIN_INODE64(fts_close);$/;"	v
fts_compar	/usr/include/fts.h	/^	    int (*fts_compar)();	\/* compare function *\/$/;"	m	union:__anon62::__anon63	access:public
fts_cur	/usr/include/fts.h	/^	struct _ftsent *fts_cur;	\/* current node *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::_ftsent	access:public
fts_cycle	/usr/include/fts.h	/^	struct _ftsent *fts_cycle;	\/* cycle node *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
fts_dev	/usr/include/fts.h	/^	dev_t fts_dev;			\/* device *\/$/;"	m	struct:_ftsent	access:public
fts_dev	/usr/include/fts.h	/^	dev_t fts_dev;			\/* starting device # *\/$/;"	m	struct:__anon62	access:public
fts_errno	/usr/include/fts.h	/^	int fts_errno;			\/* errno for this node *\/$/;"	m	struct:_ftsent	access:public
fts_flags	/usr/include/fts.h	/^	unsigned short fts_flags;	\/* private flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
fts_info	/usr/include/fts.h	/^	unsigned short fts_info;	\/* user flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
fts_ino	/usr/include/fts.h	/^	ino_t fts_ino;			\/* inode *\/$/;"	m	struct:_ftsent	access:public
fts_instr	/usr/include/fts.h	/^	unsigned short fts_instr;	\/* fts_set() instructions *\/$/;"	m	struct:_ftsent	access:public
fts_level	/usr/include/fts.h	/^	short fts_level;		\/* depth (-1 to N) *\/$/;"	m	struct:_ftsent	access:public
fts_link	/usr/include/fts.h	/^	struct _ftsent *fts_link;	\/* next file in directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
fts_name	/usr/include/fts.h	/^	char fts_name[1];		\/* file name *\/$/;"	m	struct:_ftsent	access:public
fts_namelen	/usr/include/fts.h	/^	unsigned short fts_namelen;	\/* strlen(fts_name) *\/$/;"	m	struct:_ftsent	access:public
fts_nitems	/usr/include/fts.h	/^	int fts_nitems;			\/* elements in the sort array *\/$/;"	m	struct:__anon62	access:public
fts_nlink	/usr/include/fts.h	/^	nlink_t fts_nlink;		\/* link count *\/$/;"	m	struct:_ftsent	access:public
fts_number	/usr/include/fts.h	/^	long fts_number;	        \/* local numeric value *\/$/;"	m	struct:_ftsent	access:public
fts_open	/usr/include/fts.h	/^	    int (*)(const FTSENT **, const FTSENT **)) __DARWIN_INODE64(fts_open);$/;"	v
fts_open_b	/usr/include/fts.h	/^	    int (^)(const FTSENT **, const FTSENT **)) __DARWIN_INODE64(fts_open_b);$/;"	v
fts_options	/usr/include/fts.h	/^	int fts_options;		\/* fts_open options, global flags *\/$/;"	m	struct:__anon62	access:public
fts_parent	/usr/include/fts.h	/^	struct _ftsent *fts_parent;	\/* parent directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
fts_path	/usr/include/fts.h	/^	char *fts_path;			\/* path for this descent *\/$/;"	m	struct:__anon62	access:public
fts_path	/usr/include/fts.h	/^	char *fts_path;			\/* root path *\/$/;"	m	struct:_ftsent	access:public
fts_pathlen	/usr/include/fts.h	/^	int fts_pathlen;		\/* sizeof(path) *\/$/;"	m	struct:__anon62	access:public
fts_pathlen	/usr/include/fts.h	/^	unsigned short fts_pathlen;	\/* strlen(fts_path) *\/$/;"	m	struct:_ftsent	access:public
fts_pointer	/usr/include/fts.h	/^	void *fts_pointer;	        \/* local address value *\/$/;"	m	struct:_ftsent	access:public
fts_read	/usr/include/fts.h	/^FTSENT	*fts_read(FTS *) __DARWIN_INODE64(fts_read);$/;"	v
fts_rfd	/usr/include/fts.h	/^	int fts_rfd;			\/* fd for root *\/$/;"	m	struct:__anon62	access:public
fts_set	/usr/include/fts.h	/^int	 fts_set(FTS *, FTSENT *, int) __DARWIN_INODE64(fts_set);$/;"	v
fts_statp	/usr/include/fts.h	/^	struct stat *fts_statp;		\/* stat(2) information *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::stat	access:public
fts_symfd	/usr/include/fts.h	/^	int fts_symfd;			\/* fd for symlink *\/$/;"	m	struct:_ftsent	access:public
ftw	/usr/include/ftw.h	/^	__DARWIN_ALIAS_I(ftw);$/;"	v
fullName	/usr/include/tcl.h	/^    char *fullName;		\/* The namespace's fully qualified name. This$/;"	m	struct:Tcl_Namespace	access:public
funlockfile	/usr/include/stdio.h	/^void	 funlockfile(FILE *);$/;"	p	signature:(FILE *)
funopen	/usr/include/stdio.h	/^FILE	*funopen(const void *,$/;"	p	signature:(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *))
fvector	/usr/include/mecab.h	/^  const int                     *fvector;$/;"	m	struct:mecab_learner_path_t	access:public
fvector	/usr/include/mecab.h	/^  const int                    *fvector;$/;"	m	struct:mecab_learner_node_t	access:public
fwide	/usr/include/wchar.h	/^int	fwide(FILE *, int);$/;"	p	signature:(FILE *, int)
fwopen	/usr/include/stdio.h	/^#define	fwopen(/;"	d
fwprintf	/usr/include/wchar.h	/^int	fwprintf(FILE * __restrict, const wchar_t * __restrict, ...) __DARWIN_LDBL_COMPAT(fwprintf);$/;"	v
fwrite	/usr/include/fcgi_stdio.h	/^#define fwrite /;"	d
fwrite	/usr/include/fcgi_stdio.h	/^#undef  fwrite$/;"	d
fwrite	/usr/include/stdio.h	/^size_t	 fwrite(const void * __restrict, size_t, size_t, FILE * __restrict) __DARWIN_ALIAS(fwrite);$/;"	v
fwscanf	/usr/include/wchar.h	/^int	fwscanf(FILE * __restrict, const wchar_t * __restrict, ...) __DARWIN_LDBL_COMPAT(fwscanf);$/;"	v
ga_in	/usr/include/tcpd.h	/^    struct in_addr	ga_in;$/;"	m	union:gen_addr	typeref:struct:gen_addr::in_addr	access:public
ga_in6	/usr/include/tcpd.h	/^    struct in6_addr	ga_in6;$/;"	m	union:gen_addr	typeref:struct:gen_addr::in6_addr	access:public
gai_strerror	/usr/include/netdb.h	/^const char	*gai_strerror(int);$/;"	p	signature:(int)
gc	/usr/include/tk.h	/^    GC gc;			\/* Graphics context. *\/$/;"	m	struct:Tk_Outline	access:public
gcvt	/usr/include/stdlib.h	/^char	*gcvt(double, int, char *); \/* LEGACY *\/$/;"	p	signature:(double, int, char *)
gen_addr	/usr/include/tcpd.h	/^typedef union gen_addr {$/;"	u
gen_addr	/usr/include/tcpd.h	/^} gen_addr;$/;"	t	typeref:union:gen_addr
gen_addr::ga_in	/usr/include/tcpd.h	/^    struct in_addr	ga_in;$/;"	m	union:gen_addr	typeref:struct:gen_addr::in_addr	access:public
gen_addr::ga_in6	/usr/include/tcpd.h	/^    struct in6_addr	ga_in6;$/;"	m	union:gen_addr	typeref:struct:gen_addr::in6_addr	access:public
generic_type	/usr/include/term.h	/^#define generic_type /;"	d
get	/usr/include/db.h	/^	int (*get)(const struct __db *, const DBT *, DBT *, unsigned int);$/;"	m	struct:__db	access:public
getBorderWidth	/usr/include/tk.h	/^    Tk_GetElementBorderWidthProc *getBorderWidth;$/;"	m	struct:Tk_ElementSpec	access:public
getBox	/usr/include/tk.h	/^    Tk_GetElementBoxProc *getBox;$/;"	m	struct:Tk_ElementSpec	access:public
getCwdProc	/usr/include/tcl.h	/^    Tcl_FSGetCwdProc *getCwdProc;$/;"	m	struct:Tcl_Filesystem	access:public
getHandleProc	/usr/include/tcl.h	/^    Tcl_DriverGetHandleProc *getHandleProc;$/;"	m	struct:Tcl_ChannelType	access:public
getOptionProc	/usr/include/tcl.h	/^    Tcl_DriverGetOptionProc *getOptionProc;$/;"	m	struct:Tcl_ChannelType	access:public
getProc	/usr/include/tk.h	/^    Tk_CustomOptionGetProc *getProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
getProc	/usr/include/tk.h	/^    Tk_ImageGetProc *getProc;	\/* Procedure to call the first time$/;"	m	struct:Tk_ImageType	access:public
getSize	/usr/include/tk.h	/^    Tk_GetElementSizeProc *getSize;$/;"	m	struct:Tk_ElementSpec	access:public
getTaggerError	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char* getTaggerError();$/;"	p	namespace:MeCab	signature:()
get_autocommit	/usr/include/sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
get_auxdata	/usr/include/sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
get_crc_table	/usr/include/zconf.h	/^#  define get_crc_table /;"	d
get_crc_table	/usr/include/zlib.h	/^ZEXTERN const uLongf * ZEXPORT get_crc_table    OF((void));$/;"	p	signature:(void)
get_mouse	/usr/include/term.h	/^#define get_mouse /;"	d
get_table	/usr/include/sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	access:public
get_wch	/usr/include/curses.h	/^#define get_wch(/;"	d
get_wch	/usr/include/ncurses.h	/^#define get_wch(/;"	d
get_wstr	/usr/include/curses.h	/^#define get_wstr(/;"	d
get_wstr	/usr/include/ncurses.h	/^#define get_wstr(/;"	d
getaddrinfo	/usr/include/netdb.h	/^int		getaddrinfo(const char * __restrict, const char * __restrict,$/;"	p	signature:(const char * __restrict, const char * __restrict, const struct addrinfo * __restrict, struct addrinfo ** __restrict)
getattrlist	/usr/include/unistd.h	/^int	getattrlist(const char*,void*,void*,size_t,unsigned long) __DARWIN_ALIAS(getattrlist);$/;"	v
getattrlist	/usr/include/unistd.h	/^int    getattrlist(const char*,void*,void*,size_t,unsigned int) __DARWIN_ALIAS(getattrlist);$/;"	v
getattrs	/usr/include/curses.h	/^#define getattrs(/;"	d
getattrs	/usr/include/ncurses.h	/^#define getattrs(/;"	d
getbegx	/usr/include/curses.h	/^#define getbegx(/;"	d
getbegx	/usr/include/ncurses.h	/^#define getbegx(/;"	d
getbegy	/usr/include/curses.h	/^#define getbegy(/;"	d
getbegy	/usr/include/ncurses.h	/^#define getbegy(/;"	d
getbegyx	/usr/include/curses.h	/^#define getbegyx(/;"	d
getbegyx	/usr/include/ncurses.h	/^#define getbegyx(/;"	d
getbkgd	/usr/include/curses.h	/^#define getbkgd(/;"	d
getbkgd	/usr/include/ncurses.h	/^#define getbkgd(/;"	d
getbkgrnd	/usr/include/curses.h	/^#define getbkgrnd(/;"	d
getbkgrnd	/usr/include/ncurses.h	/^#define getbkgrnd(/;"	d
getbsize	/usr/include/stdlib.h	/^char	*getbsize(int *, long *);$/;"	p	signature:(int *, long *)
getc	/usr/include/fcgi_stdio.h	/^#define getc /;"	d
getc	/usr/include/fcgi_stdio.h	/^#undef  getc$/;"	d
getc	/usr/include/stdio.h	/^int	 getc(FILE *);$/;"	p	signature:(FILE *)
getc_unlocked	/usr/include/stdio.h	/^#define	getc_unlocked(/;"	d
getc_unlocked	/usr/include/stdio.h	/^int	 getc_unlocked(FILE *);$/;"	p	signature:(FILE *)
getch	/usr/include/curses.h	/^#define getch(/;"	d
getch	/usr/include/ncurses.h	/^#define getch(/;"	d
getchar	/usr/include/fcgi_stdio.h	/^#define	getchar /;"	d
getchar	/usr/include/fcgi_stdio.h	/^#undef  getchar$/;"	d
getchar	/usr/include/stdio.h	/^int	 getchar(void);$/;"	p	signature:(void)
getchar_unlocked	/usr/include/stdio.h	/^#define	getchar_unlocked(/;"	d
getchar_unlocked	/usr/include/stdio.h	/^int	 getchar_unlocked(void);$/;"	p	signature:(void)
getcontext	/usr/include/ucontext.h	/^int  getcontext(ucontext_t *);$/;"	p	signature:(ucontext_t *)
getcurx	/usr/include/curses.h	/^#define getcurx(/;"	d
getcurx	/usr/include/ncurses.h	/^#define getcurx(/;"	d
getcury	/usr/include/curses.h	/^#define getcury(/;"	d
getcury	/usr/include/ncurses.h	/^#define getcury(/;"	d
getcwd	/usr/include/unistd.h	/^char	*getcwd(char *, size_t);$/;"	p	signature:(char *, size_t)
getdate	/usr/include/time.h	/^struct tm *getdate(const char *);$/;"	p	signature:(const char *)
getdirentriesattr	/usr/include/unistd.h	/^int	getdirentriesattr(int,void*,void*,size_t,unsigned long*,unsigned long*,unsigned long*,unsigned long);$/;"	p	signature:(int,void*,void*,size_t,unsigned long*,unsigned long*,unsigned long*,unsigned long)
getdirentriesattr	/usr/include/unistd.h	/^int    getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int);$/;"	p	signature:(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int)
getdomainname	/usr/include/unistd.h	/^int	 getdomainname(char *, int);$/;"	p	signature:(char *, int)
getdtablesize	/usr/include/unistd.h	/^int	 getdtablesize(void);$/;"	p	signature:(void)
getegid	/usr/include/unistd.h	/^gid_t	 getegid(void);$/;"	p	signature:(void)
getenv	/usr/include/stdlib.h	/^char	*getenv(const char *);$/;"	p	signature:(const char *)
geteuid	/usr/include/unistd.h	/^uid_t	 geteuid(void);$/;"	p	signature:(void)
getfsent	/usr/include/fstab.h	/^struct fstab *getfsent(void);$/;"	p	signature:(void)
getfsfile	/usr/include/fstab.h	/^struct fstab *getfsfile(const char *);$/;"	p	signature:(const char *)
getfsspec	/usr/include/fstab.h	/^struct fstab *getfsspec(const char *);$/;"	p	signature:(const char *)
getgid	/usr/include/unistd.h	/^gid_t	 getgid(void);$/;"	p	signature:(void)
getgrent	/usr/include/grp.h	/^struct group *getgrent(void);$/;"	p	signature:(void)
getgrgid	/usr/include/grp.h	/^struct group *getgrgid(gid_t);$/;"	p	signature:(gid_t)
getgrgid_r	/usr/include/grp.h	/^int getgrgid_r(gid_t, struct group *, char *, size_t, struct group **);$/;"	p	signature:(gid_t, struct group *, char *, size_t, struct group **)
getgrnam	/usr/include/grp.h	/^struct group *getgrnam(const char *);$/;"	p	signature:(const char *)
getgrnam_r	/usr/include/grp.h	/^int getgrnam_r(const char *, struct group *, char *, size_t, struct group **);$/;"	p	signature:(const char *, struct group *, char *, size_t, struct group **)
getgrouplist	/usr/include/unistd.h	/^int	 getgrouplist(const char *, int, int *, int *);$/;"	p	signature:(const char *, int, int *, int *)
getgroups	/usr/include/unistd.h	/^int	 getgroups(int, gid_t []) __DARWIN_EXTSN(getgroups);$/;"	v
getgroups	/usr/include/unistd.h	/^int	 getgroups(int, gid_t []);$/;"	p	signature:(int, gid_t [])
gethostbyaddr	/usr/include/netdb.h	/^struct hostent	*gethostbyaddr(const void *, socklen_t, int);$/;"	p	signature:(const void *, socklen_t, int)
gethostbyname	/usr/include/netdb.h	/^struct hostent	*gethostbyname(const char *);$/;"	p	signature:(const char *)
gethostbyname	/usr/include/tcpd.h	/^#define gethostbyname /;"	d
gethostbyname2	/usr/include/netdb.h	/^struct hostent	*gethostbyname2(const char *, int);$/;"	p	signature:(const char *, int)
gethostent	/usr/include/netdb.h	/^struct hostent	*gethostent(void);$/;"	p	signature:(void)
gethostid	/usr/include/unistd.h	/^long	 gethostid(void);$/;"	p	signature:(void)
gethostname	/usr/include/unistd.h	/^int	 gethostname(char *, size_t);$/;"	p	signature:(char *, size_t)
gethostuuid	/usr/include/unistd.h	/^int	 gethostuuid(uuid_t, const struct timespec *);$/;"	p	signature:(uuid_t, const struct timespec *)
getifaddrs	/usr/include/ifaddrs.h	/^extern int getifaddrs __P((struct ifaddrs **));$/;"	p	signature:(struct ifaddrs **)
getipnodebyaddr	/usr/include/netdb.h	/^struct hostent	*getipnodebyaddr(const void *, size_t, int, int *);$/;"	p	signature:(const void *, size_t, int, int *)
getipnodebyname	/usr/include/netdb.h	/^struct hostent	*getipnodebyname(const char *, int, int, int *);$/;"	p	signature:(const char *, int, int, int *)
getlastlogx	/usr/include/utmpx.h	/^	getlastlogx(uid_t, struct lastlogx *);$/;"	p	signature:(uid_t, struct lastlogx *)
getlastlogxbyname	/usr/include/utmpx.h	/^	getlastlogxbyname(const char*, struct lastlogx *);$/;"	p	signature:(const char*, struct lastlogx *)
getloadavg	/usr/include/stdlib.h	/^int	 getloadavg(double [], int);$/;"	p	signature:(double [], int)
getlogin	/usr/include/unistd.h	/^char	*getlogin(void);$/;"	p	signature:(void)
getlogin_r	/usr/include/unistd.h	/^int	 getlogin_r(char *, size_t);$/;"	p	signature:(char *, size_t)
getmaxx	/usr/include/curses.h	/^#define getmaxx(/;"	d
getmaxx	/usr/include/ncurses.h	/^#define getmaxx(/;"	d
getmaxy	/usr/include/curses.h	/^#define getmaxy(/;"	d
getmaxy	/usr/include/ncurses.h	/^#define getmaxy(/;"	d
getmaxyx	/usr/include/curses.h	/^#define getmaxyx(/;"	d
getmaxyx	/usr/include/ncurses.h	/^#define getmaxyx(/;"	d
getmode	/usr/include/unistd.h	/^mode_t	 getmode(const void *, mode_t);$/;"	p	signature:(const void *, mode_t)
getn_wstr	/usr/include/curses.h	/^#define getn_wstr(/;"	d
getn_wstr	/usr/include/ncurses.h	/^#define getn_wstr(/;"	d
getnameinfo	/usr/include/netdb.h	/^int             getnameinfo(const struct sockaddr * __restrict, socklen_t,$/;"	p	signature:(const struct sockaddr * __restrict, socklen_t, char * __restrict, socklen_t, char * __restrict, socklen_t, int)
getnetbyaddr	/usr/include/netdb.h	/^struct netent	*getnetbyaddr(uint32_t, int);$/;"	p	signature:(uint32_t, int)
getnetbyname	/usr/include/netdb.h	/^struct netent	*getnetbyname(const char *);$/;"	p	signature:(const char *)
getnetent	/usr/include/netdb.h	/^struct netent	*getnetent(void);$/;"	p	signature:(void)
getnetgrent	/usr/include/netdb.h	/^int			getnetgrent(char **, char **, char **);$/;"	p	signature:(char **, char **, char **)
getnstr	/usr/include/curses.h	/^#define getnstr(/;"	d
getnstr	/usr/include/ncurses.h	/^#define getnstr(/;"	d
getopt	/usr/include/getopt.h	/^int	 getopt(int, char * const [], const char *) __DARWIN_ALIAS(getopt);$/;"	v
getopt	/usr/include/unistd.h	/^int	 getopt(int, char * const [], const char *) __DARWIN_ALIAS(getopt);$/;"	v
getopt_long	/usr/include/getopt.h	/^int	getopt_long(int, char * const *, const char *,$/;"	p	signature:(int, char * const *, const char *, const struct option *, int *)
getopt_long_only	/usr/include/getopt.h	/^int	getopt_long_only(int, char * const *, const char *,$/;"	p	signature:(int, char * const *, const char *, const struct option *, int *)
getparx	/usr/include/curses.h	/^#define getparx(/;"	d
getparx	/usr/include/ncurses.h	/^#define getparx(/;"	d
getpary	/usr/include/curses.h	/^#define getpary(/;"	d
getpary	/usr/include/ncurses.h	/^#define getpary(/;"	d
getparyx	/usr/include/curses.h	/^#define getparyx(/;"	d
getparyx	/usr/include/ncurses.h	/^#define getparyx(/;"	d
getpass	/usr/include/unistd.h	/^char	*getpass(const char *);$/;"	p	signature:(const char *)
getpeereid	/usr/include/unistd.h	/^int	 getpeereid(int, uid_t *, gid_t *);$/;"	p	signature:(int, uid_t *, gid_t *)
getpeername	/usr/include/tcpd.h	/^#define getpeername /;"	d
getpgid	/usr/include/unistd.h	/^int	 getpgid(pid_t _pid);$/;"	p	signature:(pid_t _pid)
getpgid	/usr/include/unistd.h	/^pid_t	 getpgid(pid_t);$/;"	p	signature:(pid_t)
getpgrp	/usr/include/unistd.h	/^pid_t	 getpgrp(void);$/;"	p	signature:(void)
getpid	/usr/include/unistd.h	/^pid_t	 getpid(void);$/;"	p	signature:(void)
getppid	/usr/include/unistd.h	/^pid_t	 getppid(void);$/;"	p	signature:(void)
getprogname	/usr/include/stdlib.h	/^	*getprogname(void);$/;"	p	signature:(void)
getprotobyname	/usr/include/netdb.h	/^struct protoent	*getprotobyname(const char *);$/;"	p	signature:(const char *)
getprotobynumber	/usr/include/netdb.h	/^struct protoent	*getprotobynumber(int);$/;"	p	signature:(int)
getprotoent	/usr/include/netdb.h	/^struct protoent	*getprotoent(void);$/;"	p	signature:(void)
getpwent	/usr/include/pwd.h	/^struct passwd	*getpwent(void);$/;"	p	signature:(void)
getpwnam	/usr/include/pwd.h	/^struct passwd	*getpwnam(const char *);$/;"	p	signature:(const char *)
getpwnam_r	/usr/include/pwd.h	/^int		 getpwnam_r(const char *, struct passwd *, char *, size_t, struct passwd **);$/;"	p	signature:(const char *, struct passwd *, char *, size_t, struct passwd **)
getpwuid	/usr/include/pwd.h	/^struct passwd	*getpwuid(uid_t);$/;"	p	signature:(uid_t)
getpwuid_r	/usr/include/pwd.h	/^int		 getpwuid_r(uid_t, struct passwd *, char *, size_t, struct passwd **);$/;"	p	signature:(uid_t, struct passwd *, char *, size_t, struct passwd **)
getrpcbyname	/usr/include/netdb.h	/^struct rpcent	*getrpcbyname(const char *name);$/;"	p	signature:(const char *name)
getrpcbynumber	/usr/include/netdb.h	/^struct rpcent	*getrpcbynumber(int number);$/;"	p	signature:(int number)
getrpcbynumber	/usr/include/netdb.h	/^struct rpcent	*getrpcbynumber(long number);$/;"	p	signature:(long number)
getrpcent	/usr/include/netdb.h	/^struct rpcent	*getrpcent(void);$/;"	p	signature:(void)
gets	/usr/include/fcgi_stdio.h	/^#define	gets /;"	d
gets	/usr/include/fcgi_stdio.h	/^#undef  gets$/;"	d
gets	/usr/include/stdio.h	/^char	*gets(char *);$/;"	p	signature:(char *)
getservbyname	/usr/include/netdb.h	/^struct servent	*getservbyname(const char *, const char *);$/;"	p	signature:(const char *, const char *)
getservbyport	/usr/include/netdb.h	/^struct servent	*getservbyport(int, const char *);$/;"	p	signature:(int, const char *)
getservent	/usr/include/netdb.h	/^struct servent	*getservent(void);$/;"	p	signature:(void)
getsgroups_np	/usr/include/unistd.h	/^int	 getsgroups_np(int *, uuid_t);$/;"	p	signature:(int *, uuid_t)
getsid	/usr/include/unistd.h	/^int	 getsid(pid_t _pid);$/;"	p	signature:(pid_t _pid)
getsid	/usr/include/unistd.h	/^pid_t	 getsid(pid_t);$/;"	p	signature:(pid_t)
getstr	/usr/include/curses.h	/^#define getstr(/;"	d
getstr	/usr/include/ncurses.h	/^#define getstr(/;"	d
getsubopt	/usr/include/stdlib.h	/^int	 getsubopt(char **, char * const *, char **);$/;"	p	signature:(char **, char * const *, char **)
getsubopt	/usr/include/unistd.h	/^int	 getsubopt(char **, char * const *, char **);$/;"	p	signature:(char **, char * const *, char **)
getsyx	/usr/include/curses.h	/^#define getsyx(/;"	d
getsyx	/usr/include/ncurses.h	/^#define getsyx(/;"	d
gettmode	/usr/include/curses.h	/^#define gettmode(/;"	d
gettmode	/usr/include/ncurses.h	/^#define gettmode(/;"	d
getttyent	/usr/include/ttyent.h	/^struct ttyent *getttyent(void);$/;"	p	signature:(void)
getttynam	/usr/include/ttyent.h	/^struct ttyent *getttynam(const char *);$/;"	p	signature:(const char *)
getuid	/usr/include/unistd.h	/^uid_t	 getuid(void);$/;"	p	signature:(void)
getusershell	/usr/include/unistd.h	/^char	*getusershell(void);$/;"	p	signature:(void)
getutmp	/usr/include/utmpx.h	/^void	getutmp(const struct utmpx *, struct utmp *);$/;"	p	signature:(const struct utmpx *, struct utmp *)
getutmpx	/usr/include/utmpx.h	/^void	getutmpx(const struct utmp *, struct utmpx *);$/;"	p	signature:(const struct utmp *, struct utmpx *)
getutxent	/usr/include/utmpx.h	/^	getutxent(void);$/;"	p	signature:(void)
getutxent_wtmp	/usr/include/utmpx.h	/^	getutxent_wtmp(void);$/;"	p	signature:(void)
getutxid	/usr/include/utmpx.h	/^	getutxid(const struct utmpx *);$/;"	p	signature:(const struct utmpx *)
getutxline	/usr/include/utmpx.h	/^	getutxline(const struct utmpx *);$/;"	p	signature:(const struct utmpx *)
getw	/usr/include/stdio.h	/^int	 getw(FILE *);$/;"	p	signature:(FILE *)
getwc	/usr/include/wchar.h	/^wint_t	getwc(FILE *);$/;"	p	signature:(FILE *)
getwchar	/usr/include/wchar.h	/^wint_t	getwchar(void);$/;"	p	signature:(void)
getwd	/usr/include/unistd.h	/^char	*getwd(char *);			\/* obsoleted by getcwd() *\/$/;"	p	signature:(char *)
getwgroups_np	/usr/include/unistd.h	/^int	 getwgroups_np(int *, uuid_t);$/;"	p	signature:(int *, uuid_t)
getyx	/usr/include/curses.h	/^#define getyx(/;"	d
getyx	/usr/include/ncurses.h	/^#define getyx(/;"	d
gid_t	/usr/include/grp.h	/^typedef __darwin_gid_t	gid_t;		\/* [XBD] *\/$/;"	t
gid_t	/usr/include/pwd.h	/^typedef __darwin_gid_t		gid_t;$/;"	t
gid_t	/usr/include/unistd.h	/^typedef __darwin_gid_t		gid_t;$/;"	t
gl_closedir	/usr/include/glob.h	/^	void (*gl_closedir)(void *);$/;"	m	struct:__anon64	access:public
gl_errfunc	/usr/include/glob.h	/^		int (*gl_errfunc)(const char *, int);$/;"	m	union:__anon64::__anon65	access:public
gl_flags	/usr/include/glob.h	/^	int gl_flags;		\/* Copy of flags parameter to glob. *\/$/;"	m	struct:__anon64	access:public
gl_lstat	/usr/include/glob.h	/^	int (*gl_lstat)(const char *, struct stat *);$/;"	m	struct:__anon64	access:public
gl_lstat	/usr/include/glob.h	/^	int (*gl_lstat)(const char *, void *);$/;"	m	struct:__anon64	access:public
gl_matchc	/usr/include/glob.h	/^	int gl_matchc;		\/* Count of paths matching pattern. *\/$/;"	m	struct:__anon64	access:public
gl_offs	/usr/include/glob.h	/^	size_t gl_offs;		\/* Reserved at beginning of gl_pathv. *\/$/;"	m	struct:__anon64	access:public
gl_opendir	/usr/include/glob.h	/^	void *(*gl_opendir)(const char *);$/;"	m	struct:__anon64	access:public
gl_pathc	/usr/include/glob.h	/^	size_t gl_pathc;	\/* Count of total paths so far. *\/$/;"	m	struct:__anon64	access:public
gl_pathv	/usr/include/glob.h	/^	char **gl_pathv;	\/* List of paths matching pattern. *\/$/;"	m	struct:__anon64	access:public
gl_readdir	/usr/include/glob.h	/^	struct dirent *(*gl_readdir)(void *);$/;"	m	struct:__anon64	typeref:struct:__anon64::gl_readdir	access:public
gl_readdir	/usr/include/glob.h	/^	void *(*gl_readdir)(void *);$/;"	m	struct:__anon64	access:public
gl_stat	/usr/include/glob.h	/^	int (*gl_stat)(const char *, struct stat *);$/;"	m	struct:__anon64	access:public
gl_stat	/usr/include/glob.h	/^	int (*gl_stat)(const char *, void *);$/;"	m	struct:__anon64	access:public
glob	/usr/include/glob.h	/^	     glob_t * __restrict) __DARWIN_INODE64(glob);$/;"	v
glob_b	/usr/include/glob.h	/^	     glob_t * __restrict) __DARWIN_INODE64(glob_b);$/;"	v
glob_t	/usr/include/glob.h	/^} glob_t;$/;"	t	typeref:struct:__anon64
global_recover	/usr/include/sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	access:public
globfree	/usr/include/glob.h	/^void	globfree(glob_t *);$/;"	p	signature:(glob_t *)
gmtime	/usr/include/time.h	/^struct tm *gmtime(const time_t *);$/;"	p	signature:(const time_t *)
gmtime_r	/usr/include/time.h	/^struct tm *gmtime_r(const time_t * __restrict, struct tm * __restrict);$/;"	p	signature:(const time_t * __restrict, struct tm * __restrict)
gnu_has_meta_key	/usr/include/term.h	/^#define gnu_has_meta_key /;"	d
gotFocus	/usr/include/tk.h	/^    int gotFocus;		\/* Non-zero means that the canvas widget has$/;"	m	struct:Tk_CanvasTextInfo	access:public
goto_window	/usr/include/term.h	/^#define goto_window /;"	d
gp	/usr/include/libunwind.h	/^    unw_word_t    gp;               \/* not used *\/$/;"	m	struct:unw_proc_info_t	access:public
gr_gid	/usr/include/grp.h	/^	gid_t	gr_gid;			\/* [XBD] group id *\/$/;"	m	struct:group	access:public
gr_mem	/usr/include/grp.h	/^	char	**gr_mem;		\/* [XBD] group members *\/$/;"	m	struct:group	access:public
gr_name	/usr/include/grp.h	/^	char	*gr_name;		\/* [XBD] group name *\/$/;"	m	struct:group	access:public
gr_passwd	/usr/include/grp.h	/^	char	*gr_passwd;		\/* [???] group password *\/$/;"	m	struct:group	access:public
grantpt	/usr/include/stdlib.h	/^int	 grantpt(int);$/;"	p	signature:(int)
grey	/usr/include/menu.h	/^  chtype         grey;                  \/* Inactive attribute              *\/$/;"	m	struct:tagMENU	access:public
group	/usr/include/grp.h	/^struct group {$/;"	s
group::gr_gid	/usr/include/grp.h	/^	gid_t	gr_gid;			\/* [XBD] group id *\/$/;"	m	struct:group	access:public
group::gr_mem	/usr/include/grp.h	/^	char	**gr_mem;		\/* [XBD] group members *\/$/;"	m	struct:group	access:public
group::gr_name	/usr/include/grp.h	/^	char	*gr_name;		\/* [XBD] group name *\/$/;"	m	struct:group	access:public
group::gr_passwd	/usr/include/grp.h	/^	char	*gr_passwd;		\/* [???] group password *\/$/;"	m	struct:group	access:public
group_from_gid	/usr/include/grp.h	/^char *group_from_gid(gid_t, int);$/;"	p	signature:(gid_t, int)
grouping	/usr/include/_locale.h	/^	char	*grouping;$/;"	m	struct:lconv	access:public
gtty	/usr/include/sgtty.h	/^#define	gtty(/;"	d
gtty	/usr/include/sgtty.h	/^int	gtty(int, struct sgttyb *);$/;"	p	signature:(int, struct sgttyb *)
gzFile	/usr/include/zlib.h	/^typedef voidp gzFile;$/;"	t
gz_header	/usr/include/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	/usr/include/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_header_s::comm_max	/usr/include/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::comment	/usr/include/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::done	/usr/include/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	access:public
gz_header_s::extra	/usr/include/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::extra_len	/usr/include/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::extra_max	/usr/include/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::hcrc	/usr/include/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::name	/usr/include/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::name_max	/usr/include/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::os	/usr/include/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::text	/usr/include/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::time	/usr/include/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::xflags	/usr/include/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	access:public
gz_headerp	/usr/include/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gzclearerr	/usr/include/zlib.h	/^ZEXTERN void ZEXPORT gzclearerr OF((gzFile file));$/;"	p	signature:(gzFile file)
gzclose	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzclose OF((gzFile file));$/;"	p	signature:(gzFile file)
gzdirect	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT gzdirect OF((gzFile file));$/;"	p	signature:(gzFile file)
gzdopen	/usr/include/zlib.h	/^ZEXTERN gzFile ZEXPORT gzdopen  OF((int fd, const char *mode));$/;"	p	signature:(int fd, const char *mode)
gzeof	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT gzeof OF((gzFile file));$/;"	p	signature:(gzFile file)
gzerror	/usr/include/zlib.h	/^ZEXTERN const char * ZEXPORT gzerror OF((gzFile file, int *errnum));$/;"	p	signature:(gzFile file, int *errnum)
gzflush	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzflush OF((gzFile file, int flush));$/;"	p	signature:(gzFile file, int flush)
gzgetc	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzgetc OF((gzFile file));$/;"	p	signature:(gzFile file)
gzgets	/usr/include/zlib.h	/^ZEXTERN char * ZEXPORT gzgets OF((gzFile file, char *buf, int len));$/;"	p	signature:(gzFile file, char *buf, int len)
gzopen	/usr/include/zlib.h	/^ZEXTERN gzFile ZEXPORT gzopen  OF((const char *path, const char *mode));$/;"	p	signature:(const char *path, const char *mode)
gzprintf	/usr/include/zlib.h	/^ZEXTERN int ZEXPORTVA   gzprintf OF((gzFile file, const char *format, ...));$/;"	p	signature:(gzFile file, const char *format, ...)
gzputc	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzputc OF((gzFile file, int c));$/;"	p	signature:(gzFile file, int c)
gzputs	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT gzputs OF((gzFile file, const char *s));$/;"	p	signature:(gzFile file, const char *s)
gzread	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzread  OF((gzFile file, voidp buf, unsigned len));$/;"	p	signature:(gzFile file, voidp buf, unsigned len)
gzrewind	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzrewind OF((gzFile file));$/;"	p	signature:(gzFile file)
gzseek	/usr/include/zlib.h	/^ZEXTERN z_off_t ZEXPORT    gzseek OF((gzFile file,$/;"	p	signature:(gzFile file, z_off_t offset, int whence)
gzsetparams	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT gzsetparams OF((gzFile file, int level, int strategy));$/;"	p	signature:(gzFile file, int level, int strategy)
gztell	/usr/include/zlib.h	/^ZEXTERN z_off_t ZEXPORT    gztell OF((gzFile file));$/;"	p	signature:(gzFile file)
gzungetc	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzungetc OF((int c, gzFile file));$/;"	p	signature:(int c, gzFile file)
gzwrite	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT    gzwrite OF((gzFile file,$/;"	p	signature:(gzFile file, voidpc buf, unsigned len)
h_addr	/usr/include/netdb.h	/^#define	h_addr	/;"	d
h_addr_list	/usr/include/netdb.h	/^	char	**h_addr_list;	\/* list of addresses from name server *\/$/;"	m	struct:hostent	access:public
h_addrtype	/usr/include/netdb.h	/^	int	h_addrtype;	\/* host address type *\/$/;"	m	struct:hostent	access:public
h_aliases	/usr/include/netdb.h	/^	char	**h_aliases;	\/* alias list *\/$/;"	m	struct:hostent	access:public
h_length	/usr/include/netdb.h	/^	int	h_length;	\/* length of address *\/$/;"	m	struct:hostent	access:public
h_name	/usr/include/netdb.h	/^	char	*h_name;	\/* official name of host *\/$/;"	m	struct:hostent	access:public
handler	/usr/include/libunwind.h	/^    unw_word_t    handler;          \/* personality routine, or zero if not used *\/$/;"	m	struct:unw_proc_info_t	access:public
handlerProc	/usr/include/tcl.h	/^    Tcl_DriverHandlerProc *handlerProc;$/;"	m	struct:Tcl_ChannelType	access:public
hangup	/usr/include/term.h	/^#define hangup /;"	d
hard_copy	/usr/include/term.h	/^#define hard_copy /;"	d
hard_cursor	/usr/include/term.h	/^#define hard_cursor /;"	d
has_arg	/usr/include/getopt.h	/^	int has_arg;$/;"	m	struct:option	access:public
has_hardware_tabs	/usr/include/term.h	/^#define has_hardware_tabs /;"	d
has_meta_key	/usr/include/term.h	/^#define has_meta_key /;"	d
has_print_wheel	/usr/include/term.h	/^#define has_print_wheel /;"	d
has_status_line	/usr/include/term.h	/^#define has_status_line /;"	d
hash	/usr/include/db.h	/^		(*hash)(const void *, size_t);$/;"	m	struct:__anon14	access:public
hash	/usr/include/tcl.h	/^    VOID *hash;			\/* Hash value, stored as pointer to ensure$/;"	m	struct:Tcl_HashEntry	access:public
hashKeyProc	/usr/include/tcl.h	/^    Tcl_HashKeyProc *hashKeyProc;$/;"	m	struct:Tcl_HashKeyType	access:public
hash_create	/usr/include/strhash.h	/^hash_table *hash_create(int size);$/;"	p	signature:(int size)
hash_destroy	/usr/include/strhash.h	/^void	hash_destroy(hash_table *table, char *key,$/;"	p	signature:(hash_table *table, char *key, void (*nukefunc)(char *k, void *d))
hash_node	/usr/include/strhash.h	/^} hash_node;$/;"	t	typeref:struct:_node
hash_purge	/usr/include/strhash.h	/^void	hash_purge(hash_table *table, void (*purge_func)(char *k, void *d));$/;"	p	signature:(hash_table *table, void (*purge_func)(char *k, void *d))
hash_search	/usr/include/strhash.h	/^void	*hash_search(hash_table *table, char *key, void *datum,$/;"	p	signature:(hash_table *table, char *key, void *datum, void (*replace_func)(void *d))
hash_stats	/usr/include/strhash.h	/^extern void hash_stats();$/;"	p	signature:()
hash_table	/usr/include/strhash.h	/^} hash_table;$/;"	t	typeref:struct:__anon112
hash_traverse	/usr/include/strhash.h	/^void	hash_traverse(hash_table *table,$/;"	p	signature:(hash_table *table, int (*func)(char *k, void *d, void *arg), void *arg)
hcrc	/usr/include/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	access:public
hcreate	/usr/include/search.h	/^int	 hcreate(size_t);$/;"	p	signature:(size_t)
hdestroy	/usr/include/search.h	/^void	 hdestroy(void);$/;"	p	signature:(void)
header	/usr/include/dns_util.h	/^	dns_header_t *header;$/;"	m	struct:__anon43	access:public
header	/usr/include/fastcgi.h	/^    FCGI_Header header;$/;"	m	struct:__anon55	access:public
header	/usr/include/fastcgi.h	/^    FCGI_Header header;$/;"	m	struct:__anon57	access:public
header	/usr/include/fastcgi.h	/^    FCGI_Header header;$/;"	m	struct:__anon59	access:public
heapsort	/usr/include/stdlib.h	/^int	 heapsort(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (*)(const void *, const void *))
heapsort_b	/usr/include/stdlib.h	/^int	 heapsort_b(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (^)(const void *, const void *))
height	/usr/include/Xplugin.h	/^    unsigned int width, height;$/;"	m	struct:xp_window_changes_struct	access:public
height	/usr/include/menu.h	/^  short          height;                \/* Nr. of chars high               *\/$/;"	m	struct:tagMENU	access:public
height	/usr/include/tk.h	/^    int height;			\/* Height of block, in pixels. *\/$/;"	m	struct:Tk_PhotoImageBlock	access:public
help	/usr/include/tk.h	/^    char *help;			\/* Documentation message describing this$/;"	m	struct:__anon125	access:public
herror	/usr/include/netdb.h	/^void		herror(const char *);$/;"	p	signature:(const char *)
history	/usr/include/histedit.h	/^int		history(History *, HistEvent *, int, ...);$/;"	p	signature:(History *, HistEvent *, int, ...)
history_end	/usr/include/histedit.h	/^void		history_end(History *);$/;"	p	signature:(History *)
history_init	/usr/include/histedit.h	/^History *	history_init(void);$/;"	p	signature:(void)
hline	/usr/include/curses.h	/^#define hline(/;"	d
hline	/usr/include/ncurses.h	/^#define hline(/;"	d
hline_set	/usr/include/curses.h	/^#define hline_set(/;"	d
hline_set	/usr/include/ncurses.h	/^#define hline_set(/;"	d
hooks	/usr/include/tclDecls.h	/^    struct TclStubHooks *hooks;$/;"	m	struct:TclStubs	typeref:struct:TclStubs::TclStubHooks	access:public
hooks	/usr/include/tclPlatDecls.h	/^    struct TclPlatStubHooks *hooks;$/;"	m	struct:TclPlatStubs	typeref:struct:TclPlatStubs::TclPlatStubHooks	access:public
hooks	/usr/include/tclTomMathDecls.h	/^    struct TclTomMathStubHooks *hooks;$/;"	m	struct:TclTomMathStubs	typeref:struct:TclTomMathStubs::TclTomMathStubHooks	access:public
hooks	/usr/include/tkDecls.h	/^    struct TkStubHooks *hooks;$/;"	m	struct:TkStubs	typeref:struct:TkStubs::TkStubHooks	access:public
hooks	/usr/include/tkIntXlibDecls.h	/^    struct TkIntXlibStubHooks *hooks;$/;"	m	struct:TkIntXlibStubs	typeref:struct:TkIntXlibStubs::TkIntXlibStubHooks	access:public
hooks	/usr/include/tkPlatDecls.h	/^    struct TkPlatStubHooks *hooks;$/;"	m	struct:TkPlatStubs	typeref:struct:TkPlatStubs::TkPlatStubHooks	access:public
horizontal_precision	/usr/include/dns_util.h	/^	uint8_t horizontal_precision;$/;"	m	struct:__anon39	access:public
horizontal_tab_delay	/usr/include/term.h	/^#define horizontal_tab_delay /;"	d
host_info	/usr/include/tcpd.h	/^struct host_info {$/;"	s
host_info::addr	/usr/include/tcpd.h	/^    char    addr[STRING_LENGTH];	\/* access via eval_hostaddr(host) *\/$/;"	m	struct:host_info	access:public
host_info::name	/usr/include/tcpd.h	/^    char    name[STRING_LENGTH];	\/* access via eval_hostname(host) *\/$/;"	m	struct:host_info	access:public
host_info::request	/usr/include/tcpd.h	/^    struct request_info *request;	\/* for shared information *\/$/;"	m	struct:host_info	typeref:struct:host_info::request_info	access:public
host_info::sin	/usr/include/tcpd.h	/^    struct sockaddr_gen *sin;		\/* socket address or 0 *\/$/;"	m	struct:host_info	typeref:struct:host_info::sockaddr_gen	access:public
host_info::unit	/usr/include/tcpd.h	/^    struct t_unitdata *unit;		\/* TLI transport address or 0 *\/$/;"	m	struct:host_info	typeref:struct:host_info::t_unitdata	access:public
hostaddr	/usr/include/tcpd.h	/^    void  (*hostaddr) ();		\/* address to printable address *\/$/;"	m	struct:request_info	access:public
hostalias	/usr/include/resolv.h	/^#define hostalias	/;"	d
hostalias	/usr/include/resolv.h	/^const char *hostalias __P((const char *));$/;"	p	signature:(const char *)
hostent	/usr/include/netdb.h	/^struct hostent {$/;"	s
hostent::h_addr_list	/usr/include/netdb.h	/^	char	**h_addr_list;	\/* list of addresses from name server *\/$/;"	m	struct:hostent	access:public
hostent::h_addrtype	/usr/include/netdb.h	/^	int	h_addrtype;	\/* host address type *\/$/;"	m	struct:hostent	access:public
hostent::h_aliases	/usr/include/netdb.h	/^	char	**h_aliases;	\/* alias list *\/$/;"	m	struct:hostent	access:public
hostent::h_length	/usr/include/netdb.h	/^	int	h_length;	\/* length of address *\/$/;"	m	struct:hostent	access:public
hostent::h_name	/usr/include/netdb.h	/^	char	*h_name;	\/* official name of host *\/$/;"	m	struct:hostent	access:public
hostname	/usr/include/dns_util.h	/^	char *hostname;$/;"	m	struct:__anon35	access:public
hostname	/usr/include/tcpd.h	/^    void  (*hostname) ();		\/* address to printable hostname *\/$/;"	m	struct:request_info	access:public
hosts_access	/usr/include/tcpd.h	/^extern int hosts_access();		\/* access control *\/$/;"	p	signature:()
hour	/usr/include/sqltypes.h	/^    SQLUINTEGER hour;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
hour	/usr/include/sqltypes.h	/^    SQLUSMALLINT hour;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
hour	/usr/include/sqltypes.h	/^    SQLUSMALLINT hour;$/;"	m	struct:tagTIME_STRUCT	access:public
hq	/usr/include/mpool.h	/^	TAILQ_ENTRY(_bkt) hq;		\/* hash queue *\/$/;"	m	struct:_bkt	access:public
hqh	/usr/include/mpool.h	/^	TAILQ_HEAD(_hqh, _bkt) hqh[HASHSIZE];$/;"	m	struct:MPOOL	access:public
hsearch	/usr/include/search.h	/^ENTRY	*hsearch(ENTRY, ACTION);$/;"	p	signature:(ENTRY, ACTION)
hstrerror	/usr/include/netdb.h	/^const char	*hstrerror(int);$/;"	p	signature:(int)
hue_lightness_saturation	/usr/include/term.h	/^#define hue_lightness_saturation /;"	d
humanname	/usr/include/resolv.h	/^	const char *	humanname; \/* Its fun name, like "mail exchanger" *\/$/;"	m	struct:res_sym	access:public
iColumn	/usr/include/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	access:public
iColumn	/usr/include/sqlite3.h	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
iTermOffset	/usr/include/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
iVersion	/usr/include/sqlite3.h	/^  int iVersion;            \/* Structure version number *\/$/;"	m	struct:sqlite3_vfs	access:public
iVersion	/usr/include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	access:public
iVersion	/usr/include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module	access:public
iconv	/usr/include/iconv.h	/^size_t iconv (iconv_t \/*cd*\/,$/;"	p	signature:(iconv_t , char ** __restrict , size_t * __restrict , char ** __restrict , size_t * __restrict )
iconv_canonicalize	/usr/include/iconv.h	/^extern const char * iconv_canonicalize (const char * name);$/;"	p	signature:(const char * name)
iconv_close	/usr/include/iconv.h	/^int iconv_close (iconv_t \/*cd*\/);$/;"	p	signature:(iconv_t )
iconv_fallbacks	/usr/include/iconv.h	/^struct iconv_fallbacks {$/;"	s
iconv_fallbacks::data	/usr/include/iconv.h	/^  void* data;$/;"	m	struct:iconv_fallbacks	access:public
iconv_fallbacks::mb_to_uc_fallback	/usr/include/iconv.h	/^  iconv_unicode_mb_to_uc_fallback mb_to_uc_fallback;$/;"	m	struct:iconv_fallbacks	access:public
iconv_fallbacks::mb_to_wc_fallback	/usr/include/iconv.h	/^  iconv_wchar_mb_to_wc_fallback mb_to_wc_fallback;$/;"	m	struct:iconv_fallbacks	access:public
iconv_fallbacks::uc_to_mb_fallback	/usr/include/iconv.h	/^  iconv_unicode_uc_to_mb_fallback uc_to_mb_fallback;$/;"	m	struct:iconv_fallbacks	access:public
iconv_fallbacks::wc_to_mb_fallback	/usr/include/iconv.h	/^  iconv_wchar_wc_to_mb_fallback wc_to_mb_fallback;$/;"	m	struct:iconv_fallbacks	access:public
iconv_hooks	/usr/include/iconv.h	/^struct iconv_hooks {$/;"	s
iconv_hooks::data	/usr/include/iconv.h	/^  void* data;$/;"	m	struct:iconv_hooks	access:public
iconv_hooks::uc_hook	/usr/include/iconv.h	/^  iconv_unicode_char_hook uc_hook;$/;"	m	struct:iconv_hooks	access:public
iconv_hooks::wc_hook	/usr/include/iconv.h	/^  iconv_wide_char_hook wc_hook;$/;"	m	struct:iconv_hooks	access:public
iconv_open	/usr/include/iconv.h	/^iconv_t iconv_open (const char* \/*tocode*\/, const char* \/*fromcode*\/);$/;"	p	signature:(const char* , const char* )
iconv_t	/usr/include/iconv.h	/^typedef void* iconv_t;$/;"	t
iconv_unicode_char_hook	/usr/include/iconv.h	/^typedef void (*iconv_unicode_char_hook) (unsigned int uc, void* data);$/;"	t
iconv_unicode_mb_to_uc_fallback	/usr/include/iconv.h	/^typedef void (*iconv_unicode_mb_to_uc_fallback)$/;"	t
iconv_unicode_uc_to_mb_fallback	/usr/include/iconv.h	/^typedef void (*iconv_unicode_uc_to_mb_fallback)$/;"	t
iconv_wchar_mb_to_wc_fallback	/usr/include/iconv.h	/^typedef void (*iconv_wchar_mb_to_wc_fallback) ();$/;"	t
iconv_wchar_mb_to_wc_fallback	/usr/include/iconv.h	/^typedef void (*iconv_wchar_mb_to_wc_fallback)$/;"	t
iconv_wchar_wc_to_mb_fallback	/usr/include/iconv.h	/^typedef void (*iconv_wchar_wc_to_mb_fallback) ();$/;"	t
iconv_wchar_wc_to_mb_fallback	/usr/include/iconv.h	/^typedef void (*iconv_wchar_wc_to_mb_fallback)$/;"	t
iconv_wide_char_hook	/usr/include/iconv.h	/^typedef void (*iconv_wide_char_hook) (wchar_t wc, void* data);$/;"	t
iconvctl	/usr/include/iconv.h	/^int iconvctl (iconv_t \/*cd*\/, int \/*request*\/, void* \/*argument*\/);$/;"	p	signature:(iconv_t , int , void* )
iconvlist	/usr/include/iconv.h	/^void iconvlist (int (* \/*do_one*\/) (unsigned int \/*namescount*\/,$/;"	p	signature:(int (* ) (unsigned int , const char * const * , void* ), void* )
icursorProc	/usr/include/tk.h	/^    Tk_ItemCursorProc *icursorProc;$/;"	m	struct:Tk_ItemType	access:public
id	/usr/include/Xplugin.h	/^    xp_resource_id id;$/;"	m	struct:xp_async_error_event_struct	access:public
id	/usr/include/Xplugin.h	/^    xp_window_id id;$/;"	m	struct:xp_window_state_event_struct	access:public
id	/usr/include/curses.h	/^    short id;		\/* ID to distinguish multiple devices *\/$/;"	m	struct:__anon10	access:public
id	/usr/include/mecab.h	/^  unsigned int                 id;$/;"	m	struct:mecab_learner_node_t	access:public
id	/usr/include/mecab.h	/^  unsigned int          id;$/;"	m	struct:mecab_node_t	access:public
id	/usr/include/ncurses.h	/^    short id;		\/* ID to distinguish multiple devices *\/$/;"	m	struct:__anon86	access:public
id	/usr/include/resolv.h	/^	u_short	id;			\/* current message id *\/$/;"	m	struct:__res_state	access:public
id	/usr/include/tk.h	/^    int id;			\/* Unique identifier for this item (also$/;"	m	struct:Tk_Item	access:public
idxNum	/usr/include/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	access:public
idxStr	/usr/include/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	access:public
ifa_addr	/usr/include/ifaddrs.h	/^	struct sockaddr	*ifa_addr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifa_broadaddr	/usr/include/ifaddrs.h	/^#define	ifa_broadaddr	/;"	d
ifa_data	/usr/include/ifaddrs.h	/^	void		*ifa_data;$/;"	m	struct:ifaddrs	access:public
ifa_dstaddr	/usr/include/ifaddrs.h	/^	struct sockaddr	*ifa_dstaddr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifa_flags	/usr/include/ifaddrs.h	/^	unsigned int		 ifa_flags;$/;"	m	struct:ifaddrs	access:public
ifa_name	/usr/include/ifaddrs.h	/^	char		*ifa_name;$/;"	m	struct:ifaddrs	access:public
ifa_netmask	/usr/include/ifaddrs.h	/^	struct sockaddr	*ifa_netmask;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifa_next	/usr/include/ifaddrs.h	/^	struct ifaddrs  *ifa_next;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs	access:public
ifaddrs	/usr/include/ifaddrs.h	/^struct ifaddrs {$/;"	s
ifaddrs::ifa_addr	/usr/include/ifaddrs.h	/^	struct sockaddr	*ifa_addr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifaddrs::ifa_data	/usr/include/ifaddrs.h	/^	void		*ifa_data;$/;"	m	struct:ifaddrs	access:public
ifaddrs::ifa_dstaddr	/usr/include/ifaddrs.h	/^	struct sockaddr	*ifa_dstaddr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifaddrs::ifa_flags	/usr/include/ifaddrs.h	/^	unsigned int		 ifa_flags;$/;"	m	struct:ifaddrs	access:public
ifaddrs::ifa_name	/usr/include/ifaddrs.h	/^	char		*ifa_name;$/;"	m	struct:ifaddrs	access:public
ifaddrs::ifa_netmask	/usr/include/ifaddrs.h	/^	struct sockaddr	*ifa_netmask;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifaddrs::ifa_next	/usr/include/ifaddrs.h	/^	struct ifaddrs  *ifa_next;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs	access:public
imaxabs	/usr/include/inttypes.h	/^  extern intmax_t imaxabs(intmax_t j);$/;"	p	signature:(intmax_t j)
imaxdiv	/usr/include/inttypes.h	/^  extern imaxdiv_t imaxdiv(intmax_t numer, intmax_t denom);$/;"	p	signature:(intmax_t numer, intmax_t denom)
imaxdiv_t	/usr/include/inttypes.h	/^  } imaxdiv_t;$/;"	t	typeref:struct:__anon66
imenu	/usr/include/menu.h	/^  struct tagMENU *imenu;      \/* Pointer to parent menu                    *\/$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagMENU	access:public
in	/usr/include/fcgiapp.h	/^    FCGX_Stream *in;$/;"	m	struct:FCGX_Request	access:public
in_func	/usr/include/zconf.h	/^#  define in_func /;"	d
in_func	/usr/include/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
in_wch	/usr/include/curses.h	/^#define in_wch(/;"	d
in_wch	/usr/include/ncurses.h	/^#define in_wch(/;"	d
in_wchnstr	/usr/include/curses.h	/^#define in_wchnstr(/;"	d
in_wchnstr	/usr/include/ncurses.h	/^#define in_wchnstr(/;"	d
in_wchstr	/usr/include/curses.h	/^#define in_wchstr(/;"	d
in_wchstr	/usr/include/ncurses.h	/^#define in_wchstr(/;"	d
inch	/usr/include/curses.h	/^#define inch(/;"	d
inch	/usr/include/ncurses.h	/^#define inch(/;"	d
inchnstr	/usr/include/curses.h	/^#define inchnstr(/;"	d
inchnstr	/usr/include/ncurses.h	/^#define inchnstr(/;"	d
inchstr	/usr/include/curses.h	/^#define inchstr(/;"	d
inchstr	/usr/include/ncurses.h	/^#define inchstr(/;"	d
incomplete	/usr/include/tcl.h	/^    int incomplete;		\/* This field is set to 1 by Tcl_ParseCommand$/;"	m	struct:Tcl_Parse	access:public
index	/usr/include/form.h	/^  short			index;		\/* into form -> field		*\/$/;"	m	struct:fieldnode	access:public
index	/usr/include/menu.h	/^  short          index;       \/* Item number if connected to a menu        *\/$/;"	m	struct:tagITEM	access:public
index	/usr/include/string.h	/^char	*index(const char *, int);$/;"	p	signature:(const char *, int)
index	/usr/include/strings.h	/^char    *index(const char *, int);$/;"	p	signature:(const char *, int)
indexProc	/usr/include/tk.h	/^    Tk_ItemIndexProc *indexProc;\/* Procedure to determine index of indicated$/;"	m	struct:Tk_ItemType	access:public
indx_t	/usr/include/db.h	/^typedef u_int16_t	indx_t;$/;"	t
inet_addr	/usr/include/tcpd.h	/^#define inet_addr /;"	d
inflate	/usr/include/zconf.h	/^#  define inflate /;"	d
inflate	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));$/;"	p	signature:(z_streamp strm, int flush)
inflateBack	/usr/include/zconf.h	/^#  define inflateBack /;"	d
inflateBack	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, in_func in, void FAR *in_desc, out_func out, void FAR *out_desc)
inflateBackEnd	/usr/include/zconf.h	/^#  define inflateBackEnd /;"	d
inflateBackEnd	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateBackEnd OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateBackInit	/usr/include/zlib.h	/^#define inflateBackInit(/;"	d
inflateBackInit_	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateBackInit_ OF((z_streamp strm, int windowBits,$/;"	p	signature:(z_streamp strm, int windowBits, unsigned char FAR *window, const char *version, int stream_size)
inflateCopy	/usr/include/zconf.h	/^#  define inflateCopy /;"	d
inflateCopy	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateCopy OF((z_streamp dest,$/;"	p	signature:(z_streamp dest, z_streamp source)
inflateEnd	/usr/include/zconf.h	/^#  define inflateEnd /;"	d
inflateEnd	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateEnd OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateGetHeader	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateGetHeader OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, gz_headerp head)
inflateInit	/usr/include/zlib.h	/^#define inflateInit(/;"	d
inflateInit2	/usr/include/zlib.h	/^#define inflateInit2(/;"	d
inflateInit2_	/usr/include/zconf.h	/^#  define inflateInit2_ /;"	d
inflateInit2_	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateInit2_ OF((z_streamp strm, int  windowBits,$/;"	p	signature:(z_streamp strm, int windowBits, const char *version, int stream_size)
inflateInit_	/usr/include/zconf.h	/^#  define inflateInit_ /;"	d
inflateInit_	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateInit_ OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, const char *version, int stream_size)
inflatePrime	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflatePrime OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int bits, int value)
inflateReset	/usr/include/zconf.h	/^#  define inflateReset /;"	d
inflateReset	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateReset OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateSetDictionary	/usr/include/zconf.h	/^#  define inflateSetDictionary /;"	d
inflateSetDictionary	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, const Bytef *dictionary, uInt dictLength)
inflateSync	/usr/include/zconf.h	/^#  define inflateSync /;"	d
inflateSync	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT inflateSync OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateSyncPoint	/usr/include/zconf.h	/^#  define inflateSyncPoint /;"	d
inflateSyncPoint	/usr/include/zlib.h	/^ZEXTERN int            ZEXPORT inflateSyncPoint OF((z_streamp z));$/;"	p	signature:(z_streamp z)
init	/usr/include/fcgio.h	/^    void init(FCGX_Stream * fcgx, char_type * buf, std::streamsize bufsize);$/;"	p	class:fcgi_streambuf	access:private	signature:(FCGX_Stream * fcgx, char_type * buf, std::streamsize bufsize)
initNotifierProc	/usr/include/tcl.h	/^    Tcl_InitNotifierProc *initNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
initSaturn	/usr/include/Saturn.h	/^void initSaturn (const char *path);$/;"	p	signature:(const char *path)
init_1string	/usr/include/term.h	/^#define init_1string /;"	d
init_2string	/usr/include/term.h	/^#define init_2string /;"	d
init_3string	/usr/include/term.h	/^#define init_3string /;"	d
init_file	/usr/include/term.h	/^#define init_file /;"	d
init_prof_err_tbl	/usr/include/profile.h	/^#define init_prof_err_tbl /;"	d
init_prog	/usr/include/term.h	/^#define init_prog /;"	d
init_tabs	/usr/include/term.h	/^#define init_tabs /;"	d
initgroups	/usr/include/unistd.h	/^int	 initgroups(const char *, int);$/;"	p	signature:(const char *, int)
initialize_color	/usr/include/term.h	/^#define initialize_color /;"	d
initialize_pair	/usr/include/term.h	/^#define initialize_pair /;"	d
initialize_prof_error_table	/usr/include/profile.h	/^#define initialize_prof_error_table(/;"	d
initialize_prof_error_table	/usr/include/profile.h	/^extern void initialize_prof_error_table (void) \/*@modifies internalState@*\/;$/;"	p	signature:(void)
initstate	/usr/include/stdlib.h	/^char	*initstate(unsigned long, char *, long);$/;"	p	signature:(unsigned long, char *, long)
initstate	/usr/include/stdlib.h	/^char	*initstate(unsigned, char *, size_t); \/* no  __DARWIN_ALIAS needed *\/$/;"	p	signature:(unsigned, char *, size_t)
innetgr	/usr/include/netdb.h	/^int			innetgr(const char *, const char *, const char *, const char *);$/;"	p	signature:(const char *, const char *, const char *, const char *)
innstr	/usr/include/curses.h	/^#define innstr(/;"	d
innstr	/usr/include/ncurses.h	/^#define innstr(/;"	d
innwstr	/usr/include/curses.h	/^#define innwstr(/;"	d
innwstr	/usr/include/ncurses.h	/^#define innwstr(/;"	d
ino_t	/usr/include/fts.h	/^typedef	__darwin_ino_t	ino_t;		\/* inode number *\/$/;"	t
inputProc	/usr/include/tcl.h	/^    Tcl_DriverInputProc *inputProc;$/;"	m	struct:Tcl_ChannelType	access:public
ins_nwstr	/usr/include/curses.h	/^#define ins_nwstr(/;"	d
ins_nwstr	/usr/include/ncurses.h	/^#define ins_nwstr(/;"	d
ins_wch	/usr/include/curses.h	/^#define ins_wch(/;"	d
ins_wch	/usr/include/ncurses.h	/^#define ins_wch(/;"	d
ins_wstr	/usr/include/curses.h	/^#define ins_wstr(/;"	d
ins_wstr	/usr/include/ncurses.h	/^#define ins_wstr(/;"	d
insch	/usr/include/curses.h	/^#define insch(/;"	d
insch	/usr/include/ncurses.h	/^#define insch(/;"	d
insdelln	/usr/include/curses.h	/^#define insdelln(/;"	d
insdelln	/usr/include/ncurses.h	/^#define insdelln(/;"	d
insertBorder	/usr/include/tk.h	/^    Tk_3DBorder insertBorder;	\/* Used to draw vertical bar for insertion$/;"	m	struct:Tk_CanvasTextInfo	access:public
insertBorderWidth	/usr/include/tk.h	/^    int insertBorderWidth;	\/* Width of 3-D border around insert cursor.$/;"	m	struct:Tk_CanvasTextInfo	access:public
insertProc	/usr/include/tk.h	/^    Tk_ItemInsertProc *insertProc;$/;"	m	struct:Tk_ItemType	access:public
insertWidth	/usr/include/tk.h	/^    int insertWidth;		\/* Total width of insertion cursor. Read-only$/;"	m	struct:Tk_CanvasTextInfo	access:public
insert_character	/usr/include/term.h	/^#define insert_character /;"	d
insert_line	/usr/include/term.h	/^#define insert_line /;"	d
insert_null_glitch	/usr/include/term.h	/^#define insert_null_glitch /;"	d
insert_padding	/usr/include/term.h	/^#define insert_padding /;"	d
insertln	/usr/include/curses.h	/^#define insertln(/;"	d
insertln	/usr/include/ncurses.h	/^#define insertln(/;"	d
insnstr	/usr/include/curses.h	/^#define insnstr(/;"	d
insnstr	/usr/include/ncurses.h	/^#define insnstr(/;"	d
insque	/usr/include/search.h	/^void	 insque(void *, void *);$/;"	p	signature:(void *, void *)
insstr	/usr/include/curses.h	/^#define insstr(/;"	d
insstr	/usr/include/ncurses.h	/^#define insstr(/;"	d
instr	/usr/include/curses.h	/^#define instr(/;"	d
instr	/usr/include/ncurses.h	/^#define instr(/;"	d
int16_t	/usr/include/dns_sd.h	/^typedef INT16       int16_t;$/;"	t
int16_t	/usr/include/stdint.h	/^typedef short                int16_t;$/;"	t
int32_t	/usr/include/dns_sd.h	/^typedef INT32       int32_t;$/;"	t
int32_t	/usr/include/stdint.h	/^typedef int                  int32_t;$/;"	t
int64_t	/usr/include/stdint.h	/^typedef long long            int64_t;$/;"	t
int8_t	/usr/include/dns_sd.h	/^typedef INT8        int8_t;$/;"	t
int8_t	/usr/include/stdint.h	/^typedef signed char           int8_t;$/;"	t
intValue	/usr/include/tcl.h	/^    long intValue;		\/* Integer value. *\/$/;"	m	struct:Tcl_Value	access:public
int_curr_symbol	/usr/include/_locale.h	/^	char	*int_curr_symbol;$/;"	m	struct:lconv	access:public
int_fast16_t	/usr/include/stdint.h	/^typedef int16_t          int_fast16_t;$/;"	t
int_fast32_t	/usr/include/stdint.h	/^typedef int32_t          int_fast32_t;$/;"	t
int_fast64_t	/usr/include/stdint.h	/^typedef int64_t          int_fast64_t;$/;"	t
int_fast8_t	/usr/include/stdint.h	/^typedef int8_t            int_fast8_t;$/;"	t
int_frac_digits	/usr/include/_locale.h	/^	char	int_frac_digits;$/;"	m	struct:lconv	access:public
int_least16_t	/usr/include/stdint.h	/^typedef int16_t         int_least16_t;$/;"	t
int_least32_t	/usr/include/stdint.h	/^typedef int32_t         int_least32_t;$/;"	t
int_least64_t	/usr/include/stdint.h	/^typedef int64_t         int_least64_t;$/;"	t
int_least8_t	/usr/include/stdint.h	/^typedef int8_t           int_least8_t;$/;"	t
int_n_cs_precedes	/usr/include/_locale.h	/^	char	int_n_cs_precedes;$/;"	m	struct:lconv	access:public
int_n_sep_by_space	/usr/include/_locale.h	/^	char	int_n_sep_by_space;$/;"	m	struct:lconv	access:public
int_n_sign_posn	/usr/include/_locale.h	/^	char	int_n_sign_posn;$/;"	m	struct:lconv	access:public
int_p_cs_precedes	/usr/include/_locale.h	/^	char	int_p_cs_precedes;$/;"	m	struct:lconv	access:public
int_p_sep_by_space	/usr/include/_locale.h	/^	char	int_p_sep_by_space;$/;"	m	struct:lconv	access:public
int_p_sign_posn	/usr/include/_locale.h	/^	char	int_p_sign_posn;$/;"	m	struct:lconv	access:public
intermediate	/usr/include/dns_util.h	/^	char * intermediate;$/;"	m	struct:__anon38	access:public
internal	/usr/include/db.h	/^	void *internal;			\/* Access method private. *\/$/;"	m	struct:__db	access:public
internalBorderBottom	/usr/include/tk.h	/^    int internalBorderBottom;$/;"	m	struct:Tk_FakeWin	access:public
internalBorderLeft	/usr/include/tk.h	/^    int internalBorderLeft;$/;"	m	struct:Tk_FakeWin	access:public
internalBorderRight	/usr/include/tk.h	/^    int internalBorderRight;$/;"	m	struct:Tk_FakeWin	access:public
internalBorderTop	/usr/include/tk.h	/^    int internalBorderTop;$/;"	m	struct:Tk_FakeWin	access:public
internalForm	/usr/include/tk.h	/^    double internalForm;	\/* The old value of the option, in some$/;"	m	struct:Tk_SavedOption	access:public
internalOffset	/usr/include/tk.h	/^    int internalOffset;		\/* Where in record to store the internal$/;"	m	struct:Tk_OptionSpec	access:public
internalRep	/usr/include/tcl.h	/^    } internalRep;$/;"	m	struct:Tcl_Obj	typeref:union:Tcl_Obj::__anon114	access:public
internalToNormalizedProc	/usr/include/tcl.h	/^    Tcl_FSInternalToNormalizedProc *internalToNormalizedProc;$/;"	m	struct:Tcl_Filesystem	access:public
internal_state	/usr/include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
internal_state::dummy	/usr/include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state	access:public
interp	/usr/include/tcl.h	/^    Tcl_Interp *interp;		\/* Interpreter to use for error reporting, or$/;"	m	struct:Tcl_Parse	access:public
interruptx	/usr/include/sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
interval_sign	/usr/include/sqltypes.h	/^    SQLSMALLINT interval_sign;$/;"	m	struct:tagSQL_INTERVAL_STRUCT	access:public
interval_type	/usr/include/sqltypes.h	/^    SQLINTERVAL interval_type;$/;"	m	struct:tagSQL_INTERVAL_STRUCT	access:public
intf	/usr/include/zconf.h	/^#  define intf /;"	d
intf	/usr/include/zconf.h	/^typedef int   FAR intf;$/;"	t
intmax_t	/usr/include/stdint.h	/^typedef __INTMAX_TYPE__             intmax_t;$/;"	t
intmax_t	/usr/include/stdint.h	/^typedef long long                intmax_t;$/;"	t
intptr_t	/usr/include/stdint.h	/^typedef long   intptr_t;$/;"	t
intptr_t	/usr/include/unistd.h	/^typedef __darwin_intptr_t	intptr_t;$/;"	t
intval	/usr/include/sqltypes.h	/^    intval;$/;"	m	struct:tagSQL_INTERVAL_STRUCT	typeref:union:tagSQL_INTERVAL_STRUCT::__anon108	access:public
inwstr	/usr/include/curses.h	/^#define inwstr(/;"	d
inwstr	/usr/include/ncurses.h	/^#define inwstr(/;"	d
ipcFd	/usr/include/fcgiapp.h	/^    int ipcFd;               \/* < 0 means no connection *\/$/;"	m	struct:FCGX_Request	access:public
iruserok	/usr/include/unistd.h	/^int	 iruserok(unsigned long, int, const char *, const char *);$/;"	p	signature:(unsigned long, int, const char *, const char *)
iruserok_sa	/usr/include/unistd.h	/^int	 iruserok_sa(const void *, int, int, const char *, const char *);$/;"	p	signature:(const void *, int, int, const char *, const char *)
isBeginProcessed	/usr/include/fcgiapp.h	/^    int isBeginProcessed;     \/* FCGI_BEGIN_REQUEST seen *\/$/;"	m	struct:FCGX_Request	access:public
isClosed	/usr/include/fcgiapp.h	/^    int isClosed;$/;"	m	struct:FCGX_Stream	access:public
isNativeObjectProc	/usr/include/tcl.h	/^    int isNativeObjectProc;	\/* 1 if objProc was registered by a call to$/;"	m	struct:Tcl_CmdInfo	access:public
isReader	/usr/include/fcgiapp.h	/^    int isReader;$/;"	m	struct:FCGX_Stream	access:public
is_cleared	/usr/include/curses.h	/^#define is_cleared(/;"	d
is_cleared	/usr/include/ncurses.h	/^#define is_cleared(/;"	d
is_idcok	/usr/include/curses.h	/^#define is_idcok(/;"	d
is_idcok	/usr/include/ncurses.h	/^#define is_idcok(/;"	d
is_idlok	/usr/include/curses.h	/^#define is_idlok(/;"	d
is_idlok	/usr/include/ncurses.h	/^#define is_idlok(/;"	d
is_immedok	/usr/include/curses.h	/^#define is_immedok(/;"	d
is_immedok	/usr/include/ncurses.h	/^#define is_immedok(/;"	d
is_keypad	/usr/include/curses.h	/^#define is_keypad(/;"	d
is_keypad	/usr/include/ncurses.h	/^#define is_keypad(/;"	d
is_leaveok	/usr/include/curses.h	/^#define is_leaveok(/;"	d
is_leaveok	/usr/include/ncurses.h	/^#define is_leaveok(/;"	d
is_nodelay	/usr/include/curses.h	/^#define is_nodelay(/;"	d
is_nodelay	/usr/include/ncurses.h	/^#define is_nodelay(/;"	d
is_notimeout	/usr/include/curses.h	/^#define is_notimeout(/;"	d
is_notimeout	/usr/include/ncurses.h	/^#define is_notimeout(/;"	d
is_resident	/usr/include/ltdl.h	/^  unsigned int	is_resident:1;	\/* module can't be unloaded. *\/$/;"	m	struct:__anon75	access:public
is_scrollok	/usr/include/curses.h	/^#define is_scrollok(/;"	d
is_scrollok	/usr/include/ncurses.h	/^#define is_scrollok(/;"	d
is_symglobal	/usr/include/ltdl.h	/^  unsigned int	is_symglobal:1;	\/* module symbols can satisfy$/;"	m	struct:__anon75	access:public
is_symlocal	/usr/include/ltdl.h	/^  unsigned int	is_symlocal:1;	\/* module symbols are only available$/;"	m	struct:__anon75	access:public
is_syncok	/usr/include/curses.h	/^#define is_syncok(/;"	d
is_syncok	/usr/include/ncurses.h	/^#define is_syncok(/;"	d
isalnum	/usr/include/ctype.h	/^int     isalnum(int);$/;"	p	signature:(int)
isalnum	/usr/include/ctype.h	/^isalnum(int _c)$/;"	f	signature:(int _c)
isalpha	/usr/include/ctype.h	/^int     isalpha(int);$/;"	p	signature:(int)
isalpha	/usr/include/ctype.h	/^isalpha(int _c)$/;"	f	signature:(int _c)
isascii	/usr/include/ctype.h	/^int     isascii(int);$/;"	p	signature:(int)
isascii	/usr/include/ctype.h	/^isascii(int _c)$/;"	f	signature:(int _c)
isatty	/usr/include/unistd.h	/^int	 isatty(int);$/;"	p	signature:(int)
isbest	/usr/include/mecab.h	/^  unsigned char                isbest;$/;"	m	struct:mecab_learner_node_t	access:public
isbest	/usr/include/mecab.h	/^  unsigned char         isbest;$/;"	m	struct:mecab_node_t	access:public
isblank	/usr/include/ctype.h	/^int     isblank(int);$/;"	p	signature:(int)
isblank	/usr/include/ctype.h	/^isblank(int _c)$/;"	f	signature:(int _c)
iscntrl	/usr/include/ctype.h	/^int     iscntrl(int);$/;"	p	signature:(int)
iscntrl	/usr/include/ctype.h	/^iscntrl(int _c)$/;"	f	signature:(int _c)
isdigit	/usr/include/ctype.h	/^int     isdigit(int);$/;"	p	signature:(int)
isdigit	/usr/include/ctype.h	/^isdigit(int _c)$/;"	f	signature:(int _c)
isdn_address	/usr/include/dns_util.h	/^	char *isdn_address;$/;"	m	struct:__anon37	access:public
isgraph	/usr/include/ctype.h	/^int     isgraph(int);$/;"	p	signature:(int)
isgraph	/usr/include/ctype.h	/^isgraph(int _c)$/;"	f	signature:(int _c)
ishexnumber	/usr/include/ctype.h	/^int     ishexnumber(int);$/;"	p	signature:(int)
ishexnumber	/usr/include/ctype.h	/^ishexnumber(int _c)$/;"	f	signature:(int _c)
isideogram	/usr/include/ctype.h	/^int     isideogram(int);$/;"	p	signature:(int)
isideogram	/usr/include/ctype.h	/^isideogram(int _c)$/;"	f	signature:(int _c)
isleap	/usr/include/tzfile.h	/^#define isleap(/;"	d
islower	/usr/include/ctype.h	/^int     islower(int);$/;"	p	signature:(int)
islower	/usr/include/ctype.h	/^islower(int _c)$/;"	f	signature:(int _c)
isnumber	/usr/include/ctype.h	/^int     isnumber(int);$/;"	p	signature:(int)
isnumber	/usr/include/ctype.h	/^isnumber(int _c)$/;"	f	signature:(int _c)
isphonogram	/usr/include/ctype.h	/^int     isphonogram(int);$/;"	p	signature:(int)
isphonogram	/usr/include/ctype.h	/^isphonogram(int _c)$/;"	f	signature:(int _c)
isprint	/usr/include/ctype.h	/^int     isprint(int);$/;"	p	signature:(int)
isprint	/usr/include/ctype.h	/^isprint(int _c)$/;"	f	signature:(int _c)
ispunct	/usr/include/ctype.h	/^int     ispunct(int);$/;"	p	signature:(int)
ispunct	/usr/include/ctype.h	/^ispunct(int _c)$/;"	f	signature:(int _c)
isrune	/usr/include/ctype.h	/^int     isrune(int);$/;"	p	signature:(int)
isrune	/usr/include/ctype.h	/^isrune(int _c)$/;"	f	signature:(int _c)
issetugid	/usr/include/unistd.h	/^int	 issetugid(void);$/;"	p	signature:(void)
isspace	/usr/include/ctype.h	/^int     isspace(int);$/;"	p	signature:(int)
isspace	/usr/include/ctype.h	/^isspace(int _c)$/;"	f	signature:(int _c)
isspecial	/usr/include/ctype.h	/^int     isspecial(int);$/;"	p	signature:(int)
isspecial	/usr/include/ctype.h	/^isspecial(int _c)$/;"	f	signature:(int _c)
isupper	/usr/include/ctype.h	/^int     isupper(int);$/;"	p	signature:(int)
isupper	/usr/include/ctype.h	/^isupper(int _c)$/;"	f	signature:(int _c)
iswalnum	/usr/include/_wctype.h	/^int	iswalnum(wint_t);$/;"	p	signature:(wint_t)
iswalnum	/usr/include/_wctype.h	/^iswalnum(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswalpha	/usr/include/_wctype.h	/^int	iswalpha(wint_t);$/;"	p	signature:(wint_t)
iswalpha	/usr/include/_wctype.h	/^iswalpha(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswascii	/usr/include/wctype.h	/^iswascii(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswascii	/usr/include/wctype.h	/^wint_t	iswascii(wint_t);$/;"	p	signature:(wint_t)
iswblank	/usr/include/wctype.h	/^int	iswblank(wint_t);$/;"	p	signature:(wint_t)
iswblank	/usr/include/wctype.h	/^iswblank(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswcntrl	/usr/include/_wctype.h	/^int	iswcntrl(wint_t);$/;"	p	signature:(wint_t)
iswcntrl	/usr/include/_wctype.h	/^iswcntrl(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswctype	/usr/include/_wctype.h	/^int	iswctype(wint_t, wctype_t);$/;"	p	signature:(wint_t, wctype_t)
iswctype	/usr/include/_wctype.h	/^iswctype(wint_t _wc, wctype_t _charclass)$/;"	f	signature:(wint_t _wc, wctype_t _charclass)
iswdigit	/usr/include/_wctype.h	/^int	iswdigit(wint_t);$/;"	p	signature:(wint_t)
iswdigit	/usr/include/_wctype.h	/^iswdigit(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswgraph	/usr/include/_wctype.h	/^int	iswgraph(wint_t);$/;"	p	signature:(wint_t)
iswgraph	/usr/include/_wctype.h	/^iswgraph(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswhexnumber	/usr/include/wctype.h	/^iswhexnumber(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswhexnumber	/usr/include/wctype.h	/^wint_t	iswhexnumber(wint_t);$/;"	p	signature:(wint_t)
iswideogram	/usr/include/wctype.h	/^iswideogram(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswideogram	/usr/include/wctype.h	/^wint_t	iswideogram(wint_t);$/;"	p	signature:(wint_t)
iswlower	/usr/include/_wctype.h	/^int	iswlower(wint_t);$/;"	p	signature:(wint_t)
iswlower	/usr/include/_wctype.h	/^iswlower(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswnumber	/usr/include/wctype.h	/^iswnumber(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswnumber	/usr/include/wctype.h	/^wint_t	iswnumber(wint_t);$/;"	p	signature:(wint_t)
iswphonogram	/usr/include/wctype.h	/^iswphonogram(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswphonogram	/usr/include/wctype.h	/^wint_t	iswphonogram(wint_t);$/;"	p	signature:(wint_t)
iswprint	/usr/include/_wctype.h	/^int	iswprint(wint_t);$/;"	p	signature:(wint_t)
iswprint	/usr/include/_wctype.h	/^iswprint(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswpunct	/usr/include/_wctype.h	/^int	iswpunct(wint_t);$/;"	p	signature:(wint_t)
iswpunct	/usr/include/_wctype.h	/^iswpunct(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswrune	/usr/include/wctype.h	/^iswrune(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswrune	/usr/include/wctype.h	/^wint_t	iswrune(wint_t);$/;"	p	signature:(wint_t)
iswspace	/usr/include/_wctype.h	/^int	iswspace(wint_t);$/;"	p	signature:(wint_t)
iswspace	/usr/include/_wctype.h	/^iswspace(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswspecial	/usr/include/wctype.h	/^iswspecial(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswspecial	/usr/include/wctype.h	/^wint_t	iswspecial(wint_t);$/;"	p	signature:(wint_t)
iswupper	/usr/include/_wctype.h	/^int	iswupper(wint_t);$/;"	p	signature:(wint_t)
iswupper	/usr/include/_wctype.h	/^iswupper(wint_t _wc)$/;"	f	signature:(wint_t _wc)
iswxdigit	/usr/include/_wctype.h	/^int	iswxdigit(wint_t);$/;"	p	signature:(wint_t)
iswxdigit	/usr/include/_wctype.h	/^iswxdigit(wint_t _wc)$/;"	f	signature:(wint_t _wc)
isxdigit	/usr/include/ctype.h	/^int     isxdigit(int);$/;"	p	signature:(int)
isxdigit	/usr/include/ctype.h	/^isxdigit(int _c)$/;"	f	signature:(int _c)
itemSize	/usr/include/tk.h	/^    int itemSize;		\/* Total amount of space needed for item's$/;"	m	struct:Tk_ItemType	access:public
iteminit	/usr/include/menu.h	/^  Menu_Hook      iteminit;$/;"	m	struct:tagMENU	access:public
itemlen	/usr/include/menu.h	/^  short          itemlen;               \/* Length of one item              *\/$/;"	m	struct:tagMENU	access:public
items	/usr/include/menu.h	/^  ITEM          **items;                \/* array of items                  *\/ $/;"	m	struct:tagMENU	access:public
items	/usr/include/tk.h	/^    Tk_SavedOption items[TK_NUM_SAVED_OPTIONS];$/;"	m	struct:Tk_SavedOptions	access:public
itemterm	/usr/include/menu.h	/^  Menu_Hook      itemterm;$/;"	m	struct:tagMENU	access:public
jrand48	/usr/include/stdlib.h	/^long	 jrand48(unsigned short[3]);$/;"	p	signature:(unsigned short[3])
just	/usr/include/form.h	/^  short			just;		\/* justification		*\/$/;"	m	struct:fieldnode	access:public
kDNSServiceClass_IN	/usr/include/dns_sd.h	/^    kDNSServiceClass_IN       = 1       \/* Internet *\/$/;"	e	enum:__anon19
kDNSServiceCompMulticastDNS	/usr/include/dns_sd.h	/^#define kDNSServiceCompMulticastDNS /;"	d
kDNSServiceCompPrivateDNS	/usr/include/dns_sd.h	/^#define kDNSServiceCompPrivateDNS /;"	d
kDNSServiceErr_AlreadyRegistered	/usr/include/dns_sd.h	/^    kDNSServiceErr_AlreadyRegistered         = -65547,$/;"	e	enum:__anon21
kDNSServiceErr_BadFlags	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadFlags                  = -65543,$/;"	e	enum:__anon21
kDNSServiceErr_BadInterfaceIndex	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadInterfaceIndex         = -65552,$/;"	e	enum:__anon21
kDNSServiceErr_BadKey	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadKey                    = -65561,$/;"	e	enum:__anon21
kDNSServiceErr_BadParam	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadParam                  = -65540,$/;"	e	enum:__anon21
kDNSServiceErr_BadReference	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadReference              = -65541,$/;"	e	enum:__anon21
kDNSServiceErr_BadSig	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadSig                    = -65560,$/;"	e	enum:__anon21
kDNSServiceErr_BadState	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadState                  = -65542,$/;"	e	enum:__anon21
kDNSServiceErr_BadTime	/usr/include/dns_sd.h	/^    kDNSServiceErr_BadTime                   = -65559,  \/* Codes up to here existed in Tiger *\/$/;"	e	enum:__anon21
kDNSServiceErr_DoubleNAT	/usr/include/dns_sd.h	/^    kDNSServiceErr_DoubleNAT                 = -65558,$/;"	e	enum:__anon21
kDNSServiceErr_Firewall	/usr/include/dns_sd.h	/^    kDNSServiceErr_Firewall                  = -65550,$/;"	e	enum:__anon21
kDNSServiceErr_Incompatible	/usr/include/dns_sd.h	/^    kDNSServiceErr_Incompatible              = -65551,  \/* client library incompatible with daemon *\/$/;"	e	enum:__anon21
kDNSServiceErr_Invalid	/usr/include/dns_sd.h	/^    kDNSServiceErr_Invalid                   = -65549,$/;"	e	enum:__anon21
kDNSServiceErr_NATPortMappingDisabled	/usr/include/dns_sd.h	/^    kDNSServiceErr_NATPortMappingDisabled    = -65565,  \/* NAT supports NAT-PMP or UPnP but it's disabled by the administrator *\/$/;"	e	enum:__anon21
kDNSServiceErr_NATPortMappingUnsupported	/usr/include/dns_sd.h	/^    kDNSServiceErr_NATPortMappingUnsupported = -65564,  \/* NAT doesn't support NAT-PMP or UPnP *\/$/;"	e	enum:__anon21
kDNSServiceErr_NATTraversal	/usr/include/dns_sd.h	/^    kDNSServiceErr_NATTraversal              = -65557,$/;"	e	enum:__anon21
kDNSServiceErr_NameConflict	/usr/include/dns_sd.h	/^    kDNSServiceErr_NameConflict              = -65548,$/;"	e	enum:__anon21
kDNSServiceErr_NoAuth	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoAuth                    = -65555,$/;"	e	enum:__anon21
kDNSServiceErr_NoError	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoError                   = 0,$/;"	e	enum:__anon21
kDNSServiceErr_NoMemory	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoMemory                  = -65539,$/;"	e	enum:__anon21
kDNSServiceErr_NoRouter	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoRouter                  = -65566,  \/* No router currently configured (probably no network connectivity) *\/$/;"	e	enum:__anon21
kDNSServiceErr_NoSuchKey	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoSuchKey                 = -65556,$/;"	e	enum:__anon21
kDNSServiceErr_NoSuchName	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoSuchName                = -65538,$/;"	e	enum:__anon21
kDNSServiceErr_NoSuchRecord	/usr/include/dns_sd.h	/^    kDNSServiceErr_NoSuchRecord              = -65554,$/;"	e	enum:__anon21
kDNSServiceErr_NotInitialized	/usr/include/dns_sd.h	/^    kDNSServiceErr_NotInitialized            = -65545,$/;"	e	enum:__anon21
kDNSServiceErr_PollingMode	/usr/include/dns_sd.h	/^    kDNSServiceErr_PollingMode               = -65567$/;"	e	enum:__anon21
kDNSServiceErr_Refused	/usr/include/dns_sd.h	/^    kDNSServiceErr_Refused                   = -65553,$/;"	e	enum:__anon21
kDNSServiceErr_ServiceNotRunning	/usr/include/dns_sd.h	/^    kDNSServiceErr_ServiceNotRunning         = -65563,  \/* Background daemon not running *\/$/;"	e	enum:__anon21
kDNSServiceErr_Transient	/usr/include/dns_sd.h	/^    kDNSServiceErr_Transient                 = -65562,$/;"	e	enum:__anon21
kDNSServiceErr_Unknown	/usr/include/dns_sd.h	/^    kDNSServiceErr_Unknown                   = -65537,  \/* 0xFFFE FFFF *\/$/;"	e	enum:__anon21
kDNSServiceErr_Unsupported	/usr/include/dns_sd.h	/^    kDNSServiceErr_Unsupported               = -65544,$/;"	e	enum:__anon21
kDNSServiceFlagsAdd	/usr/include/dns_sd.h	/^    kDNSServiceFlagsAdd                 = 0x2,$/;"	e	enum:__anon17
kDNSServiceFlagsAllowRemoteQuery	/usr/include/dns_sd.h	/^    kDNSServiceFlagsAllowRemoteQuery    = 0x200,$/;"	e	enum:__anon17
kDNSServiceFlagsBrowseDomains	/usr/include/dns_sd.h	/^    kDNSServiceFlagsBrowseDomains       = 0x40,$/;"	e	enum:__anon17
kDNSServiceFlagsDefault	/usr/include/dns_sd.h	/^    kDNSServiceFlagsDefault             = 0x4,$/;"	e	enum:__anon17
kDNSServiceFlagsForce	/usr/include/dns_sd.h	/^    kDNSServiceFlagsForce               = 0x800,$/;"	e	enum:__anon17
kDNSServiceFlagsForceMulticast	/usr/include/dns_sd.h	/^    kDNSServiceFlagsForceMulticast      = 0x400,$/;"	e	enum:__anon17
kDNSServiceFlagsLongLivedQuery	/usr/include/dns_sd.h	/^    kDNSServiceFlagsLongLivedQuery      = 0x100,$/;"	e	enum:__anon17
kDNSServiceFlagsMoreComing	/usr/include/dns_sd.h	/^    kDNSServiceFlagsMoreComing          = 0x1,$/;"	e	enum:__anon17
kDNSServiceFlagsNoAutoRename	/usr/include/dns_sd.h	/^    kDNSServiceFlagsNoAutoRename        = 0x8,$/;"	e	enum:__anon17
kDNSServiceFlagsNonBrowsable	/usr/include/dns_sd.h	/^    kDNSServiceFlagsNonBrowsable        = 0x2000,$/;"	e	enum:__anon17
kDNSServiceFlagsRegistrationDomains	/usr/include/dns_sd.h	/^    kDNSServiceFlagsRegistrationDomains = 0x80,$/;"	e	enum:__anon17
kDNSServiceFlagsReturnIntermediates	/usr/include/dns_sd.h	/^    kDNSServiceFlagsReturnIntermediates = 0x1000,$/;"	e	enum:__anon17
kDNSServiceFlagsShareConnection	/usr/include/dns_sd.h	/^    kDNSServiceFlagsShareConnection     = 0x4000,$/;"	e	enum:__anon17
kDNSServiceFlagsShared	/usr/include/dns_sd.h	/^    kDNSServiceFlagsShared              = 0x10,$/;"	e	enum:__anon17
kDNSServiceFlagsSuppressUnusable	/usr/include/dns_sd.h	/^    kDNSServiceFlagsSuppressUnusable    = 0x8000$/;"	e	enum:__anon17
kDNSServiceFlagsUnique	/usr/include/dns_sd.h	/^    kDNSServiceFlagsUnique              = 0x20,$/;"	e	enum:__anon17
kDNSServiceInterfaceIndexAny	/usr/include/dns_sd.h	/^#define kDNSServiceInterfaceIndexAny /;"	d
kDNSServiceInterfaceIndexLocalOnly	/usr/include/dns_sd.h	/^#define kDNSServiceInterfaceIndexLocalOnly /;"	d
kDNSServiceInterfaceIndexUnicast	/usr/include/dns_sd.h	/^#define kDNSServiceInterfaceIndexUnicast /;"	d
kDNSServiceMaxDomainName	/usr/include/dns_sd.h	/^#define kDNSServiceMaxDomainName /;"	d
kDNSServiceMaxServiceName	/usr/include/dns_sd.h	/^#define kDNSServiceMaxServiceName /;"	d
kDNSServiceProperty_DaemonVersion	/usr/include/dns_sd.h	/^#define kDNSServiceProperty_DaemonVersion /;"	d
kDNSServiceProtocol_IPv4	/usr/include/dns_sd.h	/^    kDNSServiceProtocol_IPv4 = 0x01,$/;"	e	enum:__anon18
kDNSServiceProtocol_IPv6	/usr/include/dns_sd.h	/^    kDNSServiceProtocol_IPv6 = 0x02,$/;"	e	enum:__anon18
kDNSServiceProtocol_TCP	/usr/include/dns_sd.h	/^    kDNSServiceProtocol_TCP  = 0x20$/;"	e	enum:__anon18
kDNSServiceProtocol_UDP	/usr/include/dns_sd.h	/^    kDNSServiceProtocol_UDP  = 0x10,$/;"	e	enum:__anon18
kDNSServiceType_A	/usr/include/dns_sd.h	/^    kDNSServiceType_A         = 1,      \/* Host address. *\/$/;"	e	enum:__anon20
kDNSServiceType_A6	/usr/include/dns_sd.h	/^    kDNSServiceType_A6        = 38,     \/* IPv6 Address (deprecated) *\/$/;"	e	enum:__anon20
kDNSServiceType_AAAA	/usr/include/dns_sd.h	/^    kDNSServiceType_AAAA      = 28,     \/* IPv6 Address. *\/$/;"	e	enum:__anon20
kDNSServiceType_AFSDB	/usr/include/dns_sd.h	/^    kDNSServiceType_AFSDB     = 18,     \/* AFS cell database. *\/$/;"	e	enum:__anon20
kDNSServiceType_ANY	/usr/include/dns_sd.h	/^    kDNSServiceType_ANY       = 255     \/* Wildcard match. *\/$/;"	e	enum:__anon20
kDNSServiceType_APL	/usr/include/dns_sd.h	/^    kDNSServiceType_APL       = 42,     \/* Address Prefix List *\/$/;"	e	enum:__anon20
kDNSServiceType_ATMA	/usr/include/dns_sd.h	/^    kDNSServiceType_ATMA      = 34,     \/* ATM Address *\/$/;"	e	enum:__anon20
kDNSServiceType_AXFR	/usr/include/dns_sd.h	/^    kDNSServiceType_AXFR      = 252,    \/* Transfer zone of authority. *\/$/;"	e	enum:__anon20
kDNSServiceType_CERT	/usr/include/dns_sd.h	/^    kDNSServiceType_CERT      = 37,     \/* Certification record *\/$/;"	e	enum:__anon20
kDNSServiceType_CNAME	/usr/include/dns_sd.h	/^    kDNSServiceType_CNAME     = 5,      \/* Canonical name. *\/$/;"	e	enum:__anon20
kDNSServiceType_DHCID	/usr/include/dns_sd.h	/^    kDNSServiceType_DHCID     = 49,     \/* DHCP Client Identifier *\/$/;"	e	enum:__anon20
kDNSServiceType_DNAME	/usr/include/dns_sd.h	/^    kDNSServiceType_DNAME     = 39,     \/* Non-terminal DNAME (for IPv6) *\/$/;"	e	enum:__anon20
kDNSServiceType_DNSKEY	/usr/include/dns_sd.h	/^    kDNSServiceType_DNSKEY    = 48,     \/* DNSKEY *\/$/;"	e	enum:__anon20
kDNSServiceType_DS	/usr/include/dns_sd.h	/^    kDNSServiceType_DS        = 43,     \/* Delegation Signer *\/$/;"	e	enum:__anon20
kDNSServiceType_EID	/usr/include/dns_sd.h	/^    kDNSServiceType_EID       = 31,     \/* Endpoint identifier. *\/$/;"	e	enum:__anon20
kDNSServiceType_GID	/usr/include/dns_sd.h	/^    kDNSServiceType_GID       = 102,    \/* IANA-Reserved *\/$/;"	e	enum:__anon20
kDNSServiceType_GPOS	/usr/include/dns_sd.h	/^    kDNSServiceType_GPOS      = 27,     \/* Geographical position (withdrawn). *\/$/;"	e	enum:__anon20
kDNSServiceType_HINFO	/usr/include/dns_sd.h	/^    kDNSServiceType_HINFO     = 13,     \/* Host information. *\/$/;"	e	enum:__anon20
kDNSServiceType_HIP	/usr/include/dns_sd.h	/^    kDNSServiceType_HIP       = 55,     \/* Host Identity Protocol *\/$/;"	e	enum:__anon20
kDNSServiceType_IPSECKEY	/usr/include/dns_sd.h	/^    kDNSServiceType_IPSECKEY  = 45,     \/* IPSECKEY *\/$/;"	e	enum:__anon20
kDNSServiceType_ISDN	/usr/include/dns_sd.h	/^    kDNSServiceType_ISDN      = 20,     \/* ISDN calling address. *\/$/;"	e	enum:__anon20
kDNSServiceType_IXFR	/usr/include/dns_sd.h	/^    kDNSServiceType_IXFR      = 251,    \/* Incremental zone transfer. *\/$/;"	e	enum:__anon20
kDNSServiceType_KEY	/usr/include/dns_sd.h	/^    kDNSServiceType_KEY       = 25,     \/* Security key. *\/$/;"	e	enum:__anon20
kDNSServiceType_KX	/usr/include/dns_sd.h	/^    kDNSServiceType_KX        = 36,     \/* Key Exchange *\/$/;"	e	enum:__anon20
kDNSServiceType_LOC	/usr/include/dns_sd.h	/^    kDNSServiceType_LOC       = 29,     \/* Location Information. *\/$/;"	e	enum:__anon20
kDNSServiceType_MAILA	/usr/include/dns_sd.h	/^    kDNSServiceType_MAILA     = 254,    \/* Transfer mail agent records. *\/$/;"	e	enum:__anon20
kDNSServiceType_MAILB	/usr/include/dns_sd.h	/^    kDNSServiceType_MAILB     = 253,    \/* Transfer mailbox records. *\/$/;"	e	enum:__anon20
kDNSServiceType_MB	/usr/include/dns_sd.h	/^    kDNSServiceType_MB        = 7,      \/* Mailbox domain name. *\/$/;"	e	enum:__anon20
kDNSServiceType_MD	/usr/include/dns_sd.h	/^    kDNSServiceType_MD        = 3,      \/* Mail destination. *\/$/;"	e	enum:__anon20
kDNSServiceType_MF	/usr/include/dns_sd.h	/^    kDNSServiceType_MF        = 4,      \/* Mail forwarder. *\/$/;"	e	enum:__anon20
kDNSServiceType_MG	/usr/include/dns_sd.h	/^    kDNSServiceType_MG        = 8,      \/* Mail group member. *\/$/;"	e	enum:__anon20
kDNSServiceType_MINFO	/usr/include/dns_sd.h	/^    kDNSServiceType_MINFO     = 14,     \/* Mailbox information. *\/$/;"	e	enum:__anon20
kDNSServiceType_MR	/usr/include/dns_sd.h	/^    kDNSServiceType_MR        = 9,      \/* Mail rename name. *\/$/;"	e	enum:__anon20
kDNSServiceType_MX	/usr/include/dns_sd.h	/^    kDNSServiceType_MX        = 15,     \/* Mail routing information. *\/$/;"	e	enum:__anon20
kDNSServiceType_NAPTR	/usr/include/dns_sd.h	/^    kDNSServiceType_NAPTR     = 35,     \/* Naming Authority PoinTeR *\/$/;"	e	enum:__anon20
kDNSServiceType_NIMLOC	/usr/include/dns_sd.h	/^    kDNSServiceType_NIMLOC    = 32,     \/* Nimrod Locator. *\/$/;"	e	enum:__anon20
kDNSServiceType_NS	/usr/include/dns_sd.h	/^    kDNSServiceType_NS        = 2,      \/* Authoritative server. *\/$/;"	e	enum:__anon20
kDNSServiceType_NSAP	/usr/include/dns_sd.h	/^    kDNSServiceType_NSAP      = 22,     \/* NSAP address. *\/$/;"	e	enum:__anon20
kDNSServiceType_NSAP_PTR	/usr/include/dns_sd.h	/^    kDNSServiceType_NSAP_PTR  = 23,     \/* Reverse NSAP lookup (deprecated). *\/$/;"	e	enum:__anon20
kDNSServiceType_NSEC	/usr/include/dns_sd.h	/^    kDNSServiceType_NSEC      = 47,     \/* Denial of Existence *\/$/;"	e	enum:__anon20
kDNSServiceType_NSEC3	/usr/include/dns_sd.h	/^    kDNSServiceType_NSEC3     = 50,     \/* Hashed Authenticated Denial of Existence *\/$/;"	e	enum:__anon20
kDNSServiceType_NSEC3PARAM	/usr/include/dns_sd.h	/^    kDNSServiceType_NSEC3PARAM= 51,     \/* Hashed Authenticated Denial of Existence *\/$/;"	e	enum:__anon20
kDNSServiceType_NULL	/usr/include/dns_sd.h	/^    kDNSServiceType_NULL      = 10,     \/* Null resource record. *\/$/;"	e	enum:__anon20
kDNSServiceType_NXT	/usr/include/dns_sd.h	/^    kDNSServiceType_NXT       = 30,     \/* Next domain (security). *\/$/;"	e	enum:__anon20
kDNSServiceType_OPT	/usr/include/dns_sd.h	/^    kDNSServiceType_OPT       = 41,     \/* EDNS0 option (meta-RR) *\/$/;"	e	enum:__anon20
kDNSServiceType_PTR	/usr/include/dns_sd.h	/^    kDNSServiceType_PTR       = 12,     \/* Domain name pointer. *\/$/;"	e	enum:__anon20
kDNSServiceType_PX	/usr/include/dns_sd.h	/^    kDNSServiceType_PX        = 26,     \/* X.400 mail mapping. *\/$/;"	e	enum:__anon20
kDNSServiceType_RP	/usr/include/dns_sd.h	/^    kDNSServiceType_RP        = 17,     \/* Responsible person. *\/$/;"	e	enum:__anon20
kDNSServiceType_RRSIG	/usr/include/dns_sd.h	/^    kDNSServiceType_RRSIG     = 46,     \/* RRSIG *\/$/;"	e	enum:__anon20
kDNSServiceType_RT	/usr/include/dns_sd.h	/^    kDNSServiceType_RT        = 21,     \/* Router. *\/$/;"	e	enum:__anon20
kDNSServiceType_SIG	/usr/include/dns_sd.h	/^    kDNSServiceType_SIG       = 24,     \/* Security signature. *\/$/;"	e	enum:__anon20
kDNSServiceType_SINK	/usr/include/dns_sd.h	/^    kDNSServiceType_SINK      = 40,     \/* Kitchen sink (experimental) *\/$/;"	e	enum:__anon20
kDNSServiceType_SOA	/usr/include/dns_sd.h	/^    kDNSServiceType_SOA       = 6,      \/* Start of authority zone. *\/$/;"	e	enum:__anon20
kDNSServiceType_SPF	/usr/include/dns_sd.h	/^    kDNSServiceType_SPF       = 99,     \/* Sender Policy Framework for E-Mail *\/$/;"	e	enum:__anon20
kDNSServiceType_SRV	/usr/include/dns_sd.h	/^    kDNSServiceType_SRV       = 33,     \/* Server Selection. *\/$/;"	e	enum:__anon20
kDNSServiceType_SSHFP	/usr/include/dns_sd.h	/^    kDNSServiceType_SSHFP     = 44,     \/* SSH Key Fingerprint *\/$/;"	e	enum:__anon20
kDNSServiceType_TKEY	/usr/include/dns_sd.h	/^    kDNSServiceType_TKEY      = 249,    \/* Transaction key *\/$/;"	e	enum:__anon20
kDNSServiceType_TSIG	/usr/include/dns_sd.h	/^    kDNSServiceType_TSIG      = 250,    \/* Transaction signature. *\/$/;"	e	enum:__anon20
kDNSServiceType_TXT	/usr/include/dns_sd.h	/^    kDNSServiceType_TXT       = 16,     \/* One or more text strings (NOT "zero or more..."). *\/$/;"	e	enum:__anon20
kDNSServiceType_UID	/usr/include/dns_sd.h	/^    kDNSServiceType_UID       = 101,    \/* IANA-Reserved *\/$/;"	e	enum:__anon20
kDNSServiceType_UINFO	/usr/include/dns_sd.h	/^    kDNSServiceType_UINFO     = 100,    \/* IANA-Reserved *\/$/;"	e	enum:__anon20
kDNSServiceType_UNSPEC	/usr/include/dns_sd.h	/^    kDNSServiceType_UNSPEC    = 103,    \/* IANA-Reserved *\/$/;"	e	enum:__anon20
kDNSServiceType_WKS	/usr/include/dns_sd.h	/^    kDNSServiceType_WKS       = 11,     \/* Well known service. *\/$/;"	e	enum:__anon20
kDNSServiceType_X25	/usr/include/dns_sd.h	/^    kDNSServiceType_X25       = 19,     \/* X_25 calling address. *\/$/;"	e	enum:__anon20
kFSFormatArgumentsKey	/usr/include/fsproperties.h	/^#define kFSFormatArgumentsKey /;"	d
kFSFormatContentMaskKey	/usr/include/fsproperties.h	/^#define kFSFormatContentMaskKey /;"	d
kFSFormatExecutableKey	/usr/include/fsproperties.h	/^#define kFSFormatExecutableKey /;"	d
kFSFormatInteractiveKey	/usr/include/fsproperties.h	/^#define kFSFormatInteractiveKey /;"	d
kFSFormatMaximumSizeKey	/usr/include/fsproperties.h	/^#define kFSFormatMaximumSizeKey /;"	d
kFSFormatMinimumSizeKey	/usr/include/fsproperties.h	/^#define kFSFormatMinimumSizeKey /;"	d
kFSMediaPropertiesKey	/usr/include/fsproperties.h	/^#define kFSMediaPropertiesKey /;"	d
kFSMediaTypesKey	/usr/include/fsproperties.h	/^#define kFSMediaTypesKey /;"	d
kFSMountArgumentsKey	/usr/include/fsproperties.h	/^#define kFSMountArgumentsKey /;"	d
kFSMountExecutableKey	/usr/include/fsproperties.h	/^#define kFSMountExecutableKey /;"	d
kFSNameKey	/usr/include/fsproperties.h	/^#define kFSNameKey /;"	d
kFSPersonalitiesKey	/usr/include/fsproperties.h	/^#define kFSPersonalitiesKey /;"	d
kFSProbeArgumentsKey	/usr/include/fsproperties.h	/^#define kFSProbeArgumentsKey /;"	d
kFSProbeExecutableKey	/usr/include/fsproperties.h	/^#define kFSProbeExecutableKey /;"	d
kFSProbeOrderKey	/usr/include/fsproperties.h	/^#define kFSProbeOrderKey /;"	d
kFSRepairArgumentsKey	/usr/include/fsproperties.h	/^#define kFSRepairArgumentsKey /;"	d
kFSRepairExecutableKey	/usr/include/fsproperties.h	/^#define kFSRepairExecutableKey /;"	d
kFSSubTypeKey	/usr/include/fsproperties.h	/^#define kFSSubTypeKey /;"	d
kFSVerificationArgumentsKey	/usr/include/fsproperties.h	/^#define kFSVerificationArgumentsKey /;"	d
kFSVerificationExecutableKey	/usr/include/fsproperties.h	/^#define kFSVerificationExecutableKey /;"	d
kNotifyASLDBUpdate	/usr/include/notify_keys.h	/^#define kNotifyASLDBUpdate /;"	d
kNotifyClockSet	/usr/include/notify_keys.h	/^#define kNotifyClockSet /;"	d
kNotifyDSCacheInvalidation	/usr/include/notify_keys.h	/^#define kNotifyDSCacheInvalidation /;"	d
kNotifyDSCacheInvalidationGroup	/usr/include/notify_keys.h	/^#define kNotifyDSCacheInvalidationGroup /;"	d
kNotifyDSCacheInvalidationHost	/usr/include/notify_keys.h	/^#define kNotifyDSCacheInvalidationHost /;"	d
kNotifyDSCacheInvalidationService	/usr/include/notify_keys.h	/^#define kNotifyDSCacheInvalidationService /;"	d
kNotifyDSCacheInvalidationUser	/usr/include/notify_keys.h	/^#define kNotifyDSCacheInvalidationUser /;"	d
kNotifySCHostNameChange	/usr/include/notify_keys.h	/^#define kNotifySCHostNameChange /;"	d
kNotifySCNetworkChange	/usr/include/notify_keys.h	/^#define kNotifySCNetworkChange /;"	d
kNotifyTimeZoneChange	/usr/include/notify_keys.h	/^#define kNotifyTimeZoneChange /;"	d
kNotifyVFSLowDiskSpace	/usr/include/notify_keys.h	/^#define kNotifyVFSLowDiskSpace /;"	d
kNotifyVFSLowDiskSpaceOtherFS	/usr/include/notify_keys.h	/^#define kNotifyVFSLowDiskSpaceOtherFS /;"	d
kNotifyVFSLowDiskSpaceRootFS	/usr/include/notify_keys.h	/^#define kNotifyVFSLowDiskSpaceRootFS /;"	d
kNotifyVFSMount	/usr/include/notify_keys.h	/^#define kNotifyVFSMount /;"	d
kNotifyVFSUnmount	/usr/include/notify_keys.h	/^#define kNotifyVFSUnmount /;"	d
keepConnection	/usr/include/fcgiapp.h	/^    int keepConnection;       \/* don't close ipcFd at end of request *\/$/;"	m	struct:FCGX_Request	access:public
key	/usr/include/nameser.h	/^	struct dst_key *key;$/;"	m	struct:ns_tcp_tsig_state	typeref:struct:ns_tcp_tsig_state::dst_key	access:public
key	/usr/include/search.h	/^	char	*key;$/;"	m	struct:entry	access:public
key	/usr/include/search.h	/^	char         *key;$/;"	m	struct:node	access:public
key	/usr/include/strhash.h	/^    char *key;$/;"	m	struct:_node	access:public
key	/usr/include/tcl.h	/^    CONST char *key;		\/* Configuration key to register. ASCII$/;"	m	struct:Tcl_Config	access:public
key	/usr/include/tcl.h	/^    } key;			\/* MUST BE LAST FIELD IN RECORD!! *\/$/;"	m	struct:Tcl_HashEntry	typeref:union:Tcl_HashEntry::__anon117	access:public
key	/usr/include/tk.h	/^    char *key;			\/* The key string that flags the option in the$/;"	m	struct:__anon125	access:public
keyType	/usr/include/tcl.h	/^    int keyType;		\/* Type of keys used in this table. It's$/;"	m	struct:Tcl_HashTable	access:public
key_a1	/usr/include/term.h	/^#define key_a1 /;"	d
key_a3	/usr/include/term.h	/^#define key_a3 /;"	d
key_b2	/usr/include/term.h	/^#define key_b2 /;"	d
key_backspace	/usr/include/term.h	/^#define key_backspace /;"	d
key_beg	/usr/include/term.h	/^#define key_beg /;"	d
key_btab	/usr/include/term.h	/^#define key_btab /;"	d
key_c1	/usr/include/term.h	/^#define key_c1 /;"	d
key_c3	/usr/include/term.h	/^#define key_c3 /;"	d
key_cancel	/usr/include/term.h	/^#define key_cancel /;"	d
key_catab	/usr/include/term.h	/^#define key_catab /;"	d
key_clear	/usr/include/term.h	/^#define key_clear /;"	d
key_close	/usr/include/term.h	/^#define key_close /;"	d
key_command	/usr/include/term.h	/^#define key_command /;"	d
key_copy	/usr/include/term.h	/^#define key_copy /;"	d
key_create	/usr/include/term.h	/^#define key_create /;"	d
key_ctab	/usr/include/term.h	/^#define key_ctab /;"	d
key_dc	/usr/include/term.h	/^#define key_dc /;"	d
key_dl	/usr/include/term.h	/^#define key_dl /;"	d
key_down	/usr/include/term.h	/^#define key_down /;"	d
key_eic	/usr/include/term.h	/^#define key_eic /;"	d
key_end	/usr/include/term.h	/^#define key_end /;"	d
key_enter	/usr/include/term.h	/^#define key_enter /;"	d
key_eol	/usr/include/term.h	/^#define key_eol /;"	d
key_eos	/usr/include/term.h	/^#define key_eos /;"	d
key_exit	/usr/include/term.h	/^#define key_exit /;"	d
key_f0	/usr/include/term.h	/^#define key_f0 /;"	d
key_f1	/usr/include/term.h	/^#define key_f1 /;"	d
key_f10	/usr/include/term.h	/^#define key_f10 /;"	d
key_f11	/usr/include/term.h	/^#define key_f11 /;"	d
key_f12	/usr/include/term.h	/^#define key_f12 /;"	d
key_f13	/usr/include/term.h	/^#define key_f13 /;"	d
key_f14	/usr/include/term.h	/^#define key_f14 /;"	d
key_f15	/usr/include/term.h	/^#define key_f15 /;"	d
key_f16	/usr/include/term.h	/^#define key_f16 /;"	d
key_f17	/usr/include/term.h	/^#define key_f17 /;"	d
key_f18	/usr/include/term.h	/^#define key_f18 /;"	d
key_f19	/usr/include/term.h	/^#define key_f19 /;"	d
key_f2	/usr/include/term.h	/^#define key_f2 /;"	d
key_f20	/usr/include/term.h	/^#define key_f20 /;"	d
key_f21	/usr/include/term.h	/^#define key_f21 /;"	d
key_f22	/usr/include/term.h	/^#define key_f22 /;"	d
key_f23	/usr/include/term.h	/^#define key_f23 /;"	d
key_f24	/usr/include/term.h	/^#define key_f24 /;"	d
key_f25	/usr/include/term.h	/^#define key_f25 /;"	d
key_f26	/usr/include/term.h	/^#define key_f26 /;"	d
key_f27	/usr/include/term.h	/^#define key_f27 /;"	d
key_f28	/usr/include/term.h	/^#define key_f28 /;"	d
key_f29	/usr/include/term.h	/^#define key_f29 /;"	d
key_f3	/usr/include/term.h	/^#define key_f3 /;"	d
key_f30	/usr/include/term.h	/^#define key_f30 /;"	d
key_f31	/usr/include/term.h	/^#define key_f31 /;"	d
key_f32	/usr/include/term.h	/^#define key_f32 /;"	d
key_f33	/usr/include/term.h	/^#define key_f33 /;"	d
key_f34	/usr/include/term.h	/^#define key_f34 /;"	d
key_f35	/usr/include/term.h	/^#define key_f35 /;"	d
key_f36	/usr/include/term.h	/^#define key_f36 /;"	d
key_f37	/usr/include/term.h	/^#define key_f37 /;"	d
key_f38	/usr/include/term.h	/^#define key_f38 /;"	d
key_f39	/usr/include/term.h	/^#define key_f39 /;"	d
key_f4	/usr/include/term.h	/^#define key_f4 /;"	d
key_f40	/usr/include/term.h	/^#define key_f40 /;"	d
key_f41	/usr/include/term.h	/^#define key_f41 /;"	d
key_f42	/usr/include/term.h	/^#define key_f42 /;"	d
key_f43	/usr/include/term.h	/^#define key_f43 /;"	d
key_f44	/usr/include/term.h	/^#define key_f44 /;"	d
key_f45	/usr/include/term.h	/^#define key_f45 /;"	d
key_f46	/usr/include/term.h	/^#define key_f46 /;"	d
key_f47	/usr/include/term.h	/^#define key_f47 /;"	d
key_f48	/usr/include/term.h	/^#define key_f48 /;"	d
key_f49	/usr/include/term.h	/^#define key_f49 /;"	d
key_f5	/usr/include/term.h	/^#define key_f5 /;"	d
key_f50	/usr/include/term.h	/^#define key_f50 /;"	d
key_f51	/usr/include/term.h	/^#define key_f51 /;"	d
key_f52	/usr/include/term.h	/^#define key_f52 /;"	d
key_f53	/usr/include/term.h	/^#define key_f53 /;"	d
key_f54	/usr/include/term.h	/^#define key_f54 /;"	d
key_f55	/usr/include/term.h	/^#define key_f55 /;"	d
key_f56	/usr/include/term.h	/^#define key_f56 /;"	d
key_f57	/usr/include/term.h	/^#define key_f57 /;"	d
key_f58	/usr/include/term.h	/^#define key_f58 /;"	d
key_f59	/usr/include/term.h	/^#define key_f59 /;"	d
key_f6	/usr/include/term.h	/^#define key_f6 /;"	d
key_f60	/usr/include/term.h	/^#define key_f60 /;"	d
key_f61	/usr/include/term.h	/^#define key_f61 /;"	d
key_f62	/usr/include/term.h	/^#define key_f62 /;"	d
key_f63	/usr/include/term.h	/^#define key_f63 /;"	d
key_f7	/usr/include/term.h	/^#define key_f7 /;"	d
key_f8	/usr/include/term.h	/^#define key_f8 /;"	d
key_f9	/usr/include/term.h	/^#define key_f9 /;"	d
key_find	/usr/include/term.h	/^#define key_find /;"	d
key_hash_cb	/usr/include/cache.h	/^    cache_key_hash_cb_t key_hash_cb;                               $/;"	m	struct:cache_attributes_s	access:public
key_help	/usr/include/term.h	/^#define key_help /;"	d
key_home	/usr/include/term.h	/^#define key_home /;"	d
key_ic	/usr/include/term.h	/^#define key_ic /;"	d
key_il	/usr/include/term.h	/^#define key_il /;"	d
key_is_equal_cb	/usr/include/cache.h	/^    cache_key_is_equal_cb_t key_is_equal_cb;                        $/;"	m	struct:cache_attributes_s	access:public
key_left	/usr/include/term.h	/^#define key_left /;"	d
key_ll	/usr/include/term.h	/^#define key_ll /;"	d
key_mark	/usr/include/term.h	/^#define key_mark /;"	d
key_message	/usr/include/term.h	/^#define key_message /;"	d
key_mouse	/usr/include/term.h	/^#define key_mouse /;"	d
key_move	/usr/include/term.h	/^#define key_move /;"	d
key_next	/usr/include/term.h	/^#define key_next /;"	d
key_npage	/usr/include/term.h	/^#define key_npage /;"	d
key_open	/usr/include/term.h	/^#define key_open /;"	d
key_options	/usr/include/term.h	/^#define key_options /;"	d
key_ppage	/usr/include/term.h	/^#define key_ppage /;"	d
key_previous	/usr/include/term.h	/^#define key_previous /;"	d
key_print	/usr/include/term.h	/^#define key_print /;"	d
key_redo	/usr/include/term.h	/^#define key_redo /;"	d
key_reference	/usr/include/term.h	/^#define key_reference /;"	d
key_refresh	/usr/include/term.h	/^#define key_refresh /;"	d
key_release_cb	/usr/include/cache.h	/^    cache_release_cb_t key_release_cb;$/;"	m	struct:cache_attributes_s	access:public
key_replace	/usr/include/term.h	/^#define key_replace /;"	d
key_restart	/usr/include/term.h	/^#define key_restart /;"	d
key_resume	/usr/include/term.h	/^#define key_resume /;"	d
key_retain_cb	/usr/include/cache.h	/^    cache_key_retain_cb_t  key_retain_cb;$/;"	m	struct:cache_attributes_s	access:public
key_right	/usr/include/term.h	/^#define key_right /;"	d
key_save	/usr/include/term.h	/^#define key_save /;"	d
key_sbeg	/usr/include/term.h	/^#define key_sbeg /;"	d
key_scancel	/usr/include/term.h	/^#define key_scancel /;"	d
key_scommand	/usr/include/term.h	/^#define key_scommand /;"	d
key_scopy	/usr/include/term.h	/^#define key_scopy /;"	d
key_screate	/usr/include/term.h	/^#define key_screate /;"	d
key_sdc	/usr/include/term.h	/^#define key_sdc /;"	d
key_sdl	/usr/include/term.h	/^#define key_sdl /;"	d
key_select	/usr/include/term.h	/^#define key_select /;"	d
key_send	/usr/include/term.h	/^#define key_send /;"	d
key_seol	/usr/include/term.h	/^#define key_seol /;"	d
key_sexit	/usr/include/term.h	/^#define key_sexit /;"	d
key_sf	/usr/include/term.h	/^#define key_sf /;"	d
key_sfind	/usr/include/term.h	/^#define key_sfind /;"	d
key_shelp	/usr/include/term.h	/^#define key_shelp /;"	d
key_shome	/usr/include/term.h	/^#define key_shome /;"	d
key_sic	/usr/include/term.h	/^#define key_sic /;"	d
key_sleft	/usr/include/term.h	/^#define key_sleft /;"	d
key_smessage	/usr/include/term.h	/^#define key_smessage /;"	d
key_smove	/usr/include/term.h	/^#define key_smove /;"	d
key_snext	/usr/include/term.h	/^#define key_snext /;"	d
key_soptions	/usr/include/term.h	/^#define key_soptions /;"	d
key_sprevious	/usr/include/term.h	/^#define key_sprevious /;"	d
key_sprint	/usr/include/term.h	/^#define key_sprint /;"	d
key_sr	/usr/include/term.h	/^#define key_sr /;"	d
key_sredo	/usr/include/term.h	/^#define key_sredo /;"	d
key_sreplace	/usr/include/term.h	/^#define key_sreplace /;"	d
key_sright	/usr/include/term.h	/^#define key_sright /;"	d
key_srsume	/usr/include/term.h	/^#define key_srsume /;"	d
key_ssave	/usr/include/term.h	/^#define key_ssave /;"	d
key_ssuspend	/usr/include/term.h	/^#define key_ssuspend /;"	d
key_stab	/usr/include/term.h	/^#define key_stab /;"	d
key_sundo	/usr/include/term.h	/^#define key_sundo /;"	d
key_suspend	/usr/include/term.h	/^#define key_suspend /;"	d
key_undo	/usr/include/term.h	/^#define key_undo /;"	d
key_up	/usr/include/term.h	/^#define key_up /;"	d
keypad_local	/usr/include/term.h	/^#define keypad_local /;"	d
keypad_xmit	/usr/include/term.h	/^#define keypad_xmit /;"	d
kill	/usr/include/signal.h	/^int	kill(pid_t, int) __DARWIN_ALIAS(kill);$/;"	v
killpg	/usr/include/signal.h	/^int	killpg(pid_t, int) __DARWIN_ALIAS(killpg);$/;"	v
l64a	/usr/include/stdlib.h	/^char	*l64a(long);$/;"	p	signature:(long)
la_attr	/usr/include/ldap.h	/^	struct berval la_attr;$/;"	m	struct:ldap_ava	typeref:struct:ldap_ava::berval	access:public
la_flags	/usr/include/ldap.h	/^	unsigned la_flags;$/;"	m	struct:ldap_ava	access:public
la_private	/usr/include/ldap.h	/^	void *la_private;$/;"	m	struct:ldap_ava	access:public
la_value	/usr/include/ldap.h	/^	struct berval la_value;$/;"	m	struct:ldap_ava	typeref:struct:ldap_ava::berval	access:public
lab_f0	/usr/include/term.h	/^#define lab_f0 /;"	d
lab_f1	/usr/include/term.h	/^#define lab_f1 /;"	d
lab_f10	/usr/include/term.h	/^#define lab_f10 /;"	d
lab_f2	/usr/include/term.h	/^#define lab_f2 /;"	d
lab_f3	/usr/include/term.h	/^#define lab_f3 /;"	d
lab_f4	/usr/include/term.h	/^#define lab_f4 /;"	d
lab_f5	/usr/include/term.h	/^#define lab_f5 /;"	d
lab_f6	/usr/include/term.h	/^#define lab_f6 /;"	d
lab_f7	/usr/include/term.h	/^#define lab_f7 /;"	d
lab_f8	/usr/include/term.h	/^#define lab_f8 /;"	d
lab_f9	/usr/include/term.h	/^#define lab_f9 /;"	d
label_format	/usr/include/term.h	/^#define label_format /;"	d
label_height	/usr/include/term.h	/^#define label_height /;"	d
label_off	/usr/include/term.h	/^#define label_off /;"	d
label_on	/usr/include/term.h	/^#define label_on /;"	d
label_width	/usr/include/term.h	/^#define label_width /;"	d
last	/usr/include/term_entry.h	/^	struct entry	*last;$/;"	m	struct:entry	typeref:struct:entry::entry	access:public
last_insert_rowid	/usr/include/sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
lastchar	/usr/include/histedit.h	/^	const char	*lastchar;$/;"	m	struct:lineinfo	access:public
lastlog	/usr/include/utmp.h	/^struct lastlog {$/;"	s
lastlog::ll_host	/usr/include/utmp.h	/^	char	ll_host[UT_HOSTSIZE];$/;"	m	struct:lastlog	access:public
lastlog::ll_line	/usr/include/utmp.h	/^	char	ll_line[UT_LINESIZE];$/;"	m	struct:lastlog	access:public
lastlog::ll_time	/usr/include/utmp.h	/^	time_t	ll_time;$/;"	m	struct:lastlog	access:public
lastlogx	/usr/include/utmpx.h	/^struct lastlogx {$/;"	s
lastlogx::ll_host	/usr/include/utmpx.h	/^	char ll_host[_UTX_HOSTSIZE];	\/* host name *\/$/;"	m	struct:lastlogx	access:public
lastlogx::ll_line	/usr/include/utmpx.h	/^	char ll_line[_UTX_LINESIZE];	\/* tty name *\/$/;"	m	struct:lastlogx	access:public
lastlogx::ll_tv	/usr/include/utmpx.h	/^	struct timeval ll_tv;		\/* time entry was created *\/$/;"	m	struct:lastlogx	typeref:struct:lastlogx::timeval	access:public
latitude	/usr/include/dns_util.h	/^	uint32_t latitude;$/;"	m	struct:__anon39	access:public
lattice_level	/usr/include/mecab.h	/^    virtual int   lattice_level() const                       = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
launch_data_t	/usr/include/launch.h	/^typedef struct _launch_data *launch_data_t;$/;"	t	typeref:struct:_launch_data
launch_data_type_t	/usr/include/launch.h	/^} launch_data_type_t;$/;"	t	typeref:enum:__anon67
lber_memory_fns	/usr/include/lber.h	/^typedef struct lber_memory_fns {$/;"	s
lber_memory_fns::bmf_calloc	/usr/include/lber.h	/^	BER_MEMCALLOC_FN *bmf_calloc;$/;"	m	struct:lber_memory_fns	access:public
lber_memory_fns::bmf_free	/usr/include/lber.h	/^	BER_MEMFREE_FN *bmf_free;$/;"	m	struct:lber_memory_fns	access:public
lber_memory_fns::bmf_malloc	/usr/include/lber.h	/^	BER_MEMALLOC_FN	*bmf_malloc;$/;"	m	struct:lber_memory_fns	access:public
lber_memory_fns::bmf_realloc	/usr/include/lber.h	/^	BER_MEMREALLOC_FN *bmf_realloc;$/;"	m	struct:lber_memory_fns	access:public
lcAttr	/usr/include/mecab.h	/^  unsigned short               lcAttr;$/;"	m	struct:mecab_learner_node_t	access:public
lcAttr	/usr/include/mecab.h	/^  unsigned short        lcAttr;$/;"	m	struct:mecab_node_t	access:public
lcAttr	/usr/include/mecab.h	/^  unsigned short lcAttr;$/;"	m	struct:mecab_token_t	access:public
lchown	/usr/include/unistd.h	/^int	 lchown(const char *, uid_t, gid_t) __DARWIN_ALIAS(lchown);$/;"	v
lcong48	/usr/include/stdlib.h	/^void	 lcong48(unsigned short[7]);$/;"	p	signature:(unsigned short[7])
lconv	/usr/include/_locale.h	/^struct lconv {$/;"	s
lconv::currency_symbol	/usr/include/_locale.h	/^	char	*currency_symbol;$/;"	m	struct:lconv	access:public
lconv::decimal_point	/usr/include/_locale.h	/^	char	*decimal_point;$/;"	m	struct:lconv	access:public
lconv::frac_digits	/usr/include/_locale.h	/^	char	frac_digits;$/;"	m	struct:lconv	access:public
lconv::grouping	/usr/include/_locale.h	/^	char	*grouping;$/;"	m	struct:lconv	access:public
lconv::int_curr_symbol	/usr/include/_locale.h	/^	char	*int_curr_symbol;$/;"	m	struct:lconv	access:public
lconv::int_frac_digits	/usr/include/_locale.h	/^	char	int_frac_digits;$/;"	m	struct:lconv	access:public
lconv::int_n_cs_precedes	/usr/include/_locale.h	/^	char	int_n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::int_n_sep_by_space	/usr/include/_locale.h	/^	char	int_n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::int_n_sign_posn	/usr/include/_locale.h	/^	char	int_n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::int_p_cs_precedes	/usr/include/_locale.h	/^	char	int_p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::int_p_sep_by_space	/usr/include/_locale.h	/^	char	int_p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::int_p_sign_posn	/usr/include/_locale.h	/^	char	int_p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::mon_decimal_point	/usr/include/_locale.h	/^	char	*mon_decimal_point;$/;"	m	struct:lconv	access:public
lconv::mon_grouping	/usr/include/_locale.h	/^	char	*mon_grouping;$/;"	m	struct:lconv	access:public
lconv::mon_thousands_sep	/usr/include/_locale.h	/^	char	*mon_thousands_sep;$/;"	m	struct:lconv	access:public
lconv::n_cs_precedes	/usr/include/_locale.h	/^	char	n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::n_sep_by_space	/usr/include/_locale.h	/^	char	n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::n_sign_posn	/usr/include/_locale.h	/^	char	n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::negative_sign	/usr/include/_locale.h	/^	char	*negative_sign;$/;"	m	struct:lconv	access:public
lconv::p_cs_precedes	/usr/include/_locale.h	/^	char	p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::p_sep_by_space	/usr/include/_locale.h	/^	char	p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::p_sign_posn	/usr/include/_locale.h	/^	char	p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::positive_sign	/usr/include/_locale.h	/^	char	*positive_sign;$/;"	m	struct:lconv	access:public
lconv::thousands_sep	/usr/include/_locale.h	/^	char	*thousands_sep;$/;"	m	struct:lconv	access:public
ldap_X509dn2bv	/usr/include/ldap.h	/^ldap_X509dn2bv LDAP_P(( void *x509_name, struct berval *dn,$/;"	p	signature:( void *x509_name, struct berval *dn, LDAPDN_rewrite_func *func, unsigned flags )
ldap_abandon	/usr/include/ldap.h	/^ldap_abandon LDAP_P((	\/* deprecated, use ldap_abandon_ext *\/$/;"	p	signature:( LDAP *ld, int msgid )
ldap_abandon_ext	/usr/include/ldap.h	/^ldap_abandon_ext LDAP_P(($/;"	p	signature:( LDAP *ld, int msgid, LDAPControl **serverctrls, LDAPControl **clientctrls )
ldap_add	/usr/include/ldap.h	/^ldap_add LDAP_P((	\/* deprecated, use ldap_add_ext *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **attrs )
ldap_add_ext	/usr/include/ldap.h	/^ldap_add_ext LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **attrs, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_add_ext_s	/usr/include/ldap.h	/^ldap_add_ext_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **attrs, LDAPControl **serverctrls, LDAPControl **clientctrls )
ldap_add_result_entry	/usr/include/ldap.h	/^ldap_add_result_entry LDAP_P(($/;"	p	signature:( LDAPMessage **list, LDAPMessage *e )
ldap_add_s	/usr/include/ldap.h	/^ldap_add_s LDAP_P((	\/* deprecated, use ldap_add_ext_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **attrs )
ldap_apifeature_info	/usr/include/ldap.h	/^typedef struct ldap_apifeature_info {$/;"	s
ldap_apifeature_info::ldapaif_info_version	/usr/include/ldap.h	/^	int		ldapaif_info_version;		\/* version of LDAPAPIFeatureInfo *\/$/;"	m	struct:ldap_apifeature_info	access:public
ldap_apifeature_info::ldapaif_name	/usr/include/ldap.h	/^	char*	ldapaif_name;				\/* LDAP_API_FEATURE_* (less prefix) *\/$/;"	m	struct:ldap_apifeature_info	access:public
ldap_apifeature_info::ldapaif_version	/usr/include/ldap.h	/^	int		ldapaif_version;			\/* value of LDAP_API_FEATURE_... *\/$/;"	m	struct:ldap_apifeature_info	access:public
ldap_attributetype	/usr/include/ldap_schema.h	/^typedef struct ldap_attributetype {$/;"	s
ldap_attributetype2bv	/usr/include/ldap_schema.h	/^ldap_attributetype2bv LDAP_P(($/;"	p	signature:( LDAPAttributeType * at, struct berval *bv )
ldap_attributetype2name	/usr/include/ldap_schema.h	/^ldap_attributetype2name LDAP_P(($/;"	p	signature:( LDAPAttributeType * at )
ldap_attributetype2str	/usr/include/ldap_schema.h	/^ldap_attributetype2str LDAP_P(($/;"	p	signature:( LDAPAttributeType * at )
ldap_attributetype::at_collective	/usr/include/ldap_schema.h	/^	int  at_collective;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_desc	/usr/include/ldap_schema.h	/^	char *at_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_equality_oid	/usr/include/ldap_schema.h	/^	char *at_equality_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **at_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_names	/usr/include/ldap_schema.h	/^	char **at_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_no_user_mod	/usr/include/ldap_schema.h	/^	int  at_no_user_mod;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_obsolete	/usr/include/ldap_schema.h	/^	int  at_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_oid	/usr/include/ldap_schema.h	/^	char *at_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_ordering_oid	/usr/include/ldap_schema.h	/^	char *at_ordering_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_single_value	/usr/include/ldap_schema.h	/^	int  at_single_value;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_substr_oid	/usr/include/ldap_schema.h	/^	char *at_substr_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_sup_oid	/usr/include/ldap_schema.h	/^	char *at_sup_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_syntax_len	/usr/include/ldap_schema.h	/^	int  at_syntax_len;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_syntax_oid	/usr/include/ldap_schema.h	/^	char *at_syntax_oid;	\/* OPTIONAL *\/$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype::at_usage	/usr/include/ldap_schema.h	/^	int  at_usage;		\/* 0=userApplications, 1=directoryOperation,$/;"	m	struct:ldap_attributetype	access:public
ldap_attributetype_free	/usr/include/ldap_schema.h	/^ldap_attributetype_free LDAP_P(($/;"	p	signature:( LDAPAttributeType * at )
ldap_ava	/usr/include/ldap.h	/^typedef struct ldap_ava {$/;"	s
ldap_ava::la_attr	/usr/include/ldap.h	/^	struct berval la_attr;$/;"	m	struct:ldap_ava	typeref:struct:ldap_ava::berval	access:public
ldap_ava::la_flags	/usr/include/ldap.h	/^	unsigned la_flags;$/;"	m	struct:ldap_ava	access:public
ldap_ava::la_private	/usr/include/ldap.h	/^	void *la_private;$/;"	m	struct:ldap_ava	access:public
ldap_ava::la_value	/usr/include/ldap.h	/^	struct berval la_value;$/;"	m	struct:ldap_ava	typeref:struct:ldap_ava::berval	access:public
ldap_bind	/usr/include/ldap.h	/^ldap_bind LDAP_P((	\/* deprecated, use ldap_sasl_bind *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *who, LDAP_CONST char *passwd, int authmethod )
ldap_bind_s	/usr/include/ldap.h	/^ldap_bind_s LDAP_P((	\/* deprecated, use ldap_sasl_bind_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *who, LDAP_CONST char *cred, int authmethod )
ldap_bv2dn	/usr/include/ldap.h	/^ldap_bv2dn LDAP_P(( $/;"	p	signature:( struct berval *bv, LDAPDN *dn, unsigned flags )
ldap_bv2escaped_filter_value	/usr/include/ldap.h	/^ldap_bv2escaped_filter_value LDAP_P(( $/;"	p	signature:( struct berval *in, struct berval *out )
ldap_bv2rdn	/usr/include/ldap.h	/^ldap_bv2rdn LDAP_P(($/;"	p	signature:( struct berval *bv, LDAPRDN *rdn, char **next, unsigned flags )
ldap_cancel	/usr/include/ldap.h	/^ldap_cancel LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, int cancelid, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_cancel_s	/usr/include/ldap.h	/^ldap_cancel_s LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, int cancelid, LDAPControl **sctrl, LDAPControl **cctrl )
ldap_compare	/usr/include/ldap.h	/^ldap_compare LDAP_P((	\/* deprecated, use ldap_compare_ext *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *attr, LDAP_CONST char *value )
ldap_compare_ext	/usr/include/ldap.h	/^ldap_compare_ext LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *attr, struct berval *bvalue, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_compare_ext_s	/usr/include/ldap.h	/^ldap_compare_ext_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *attr, struct berval *bvalue, LDAPControl **serverctrls, LDAPControl **clientctrls )
ldap_compare_s	/usr/include/ldap.h	/^ldap_compare_s LDAP_P((	\/* deprecated, use ldap_compare_ext_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *attr, LDAP_CONST char *value )
ldap_contentrule	/usr/include/ldap_schema.h	/^typedef struct ldap_contentrule {$/;"	s
ldap_contentrule2bv	/usr/include/ldap_schema.h	/^ldap_contentrule2bv LDAP_P(($/;"	p	signature:( LDAPContentRule * cr, struct berval *bv )
ldap_contentrule2name	/usr/include/ldap_schema.h	/^ldap_contentrule2name LDAP_P(($/;"	p	signature:( LDAPContentRule * cr )
ldap_contentrule2str	/usr/include/ldap_schema.h	/^ldap_contentrule2str LDAP_P(($/;"	p	signature:( LDAPContentRule * cr )
ldap_contentrule::cr_at_oids_may	/usr/include/ldap_schema.h	/^	char **cr_at_oids_may;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_at_oids_must	/usr/include/ldap_schema.h	/^	char **cr_at_oids_must;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_at_oids_not	/usr/include/ldap_schema.h	/^	char **cr_at_oids_not;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_desc	/usr/include/ldap_schema.h	/^	char *cr_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **cr_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_names	/usr/include/ldap_schema.h	/^	char **cr_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_obsolete	/usr/include/ldap_schema.h	/^	int  cr_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_oc_oids_aux	/usr/include/ldap_schema.h	/^	char **cr_oc_oids_aux;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_oid	/usr/include/ldap_schema.h	/^	char *cr_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule::cr_sup_oids	/usr/include/ldap_schema.h	/^	char **cr_sup_oids;	\/* OPTIONAL *\/$/;"	m	struct:ldap_contentrule	access:public
ldap_contentrule_free	/usr/include/ldap_schema.h	/^ldap_contentrule_free LDAP_P(($/;"	p	signature:( LDAPContentRule * cr )
ldap_control_create	/usr/include/ldap.h	/^ldap_control_create LDAP_P(($/;"	p	signature:( LDAP_CONST char *requestOID, int iscritical, struct berval *value, int dupval, LDAPControl **ctrlp )
ldap_control_dup	/usr/include/ldap.h	/^ldap_control_dup LDAP_P(($/;"	p	signature:( LDAP_CONST LDAPControl *c )
ldap_control_find	/usr/include/ldap.h	/^ldap_control_find LDAP_P(($/;"	p	signature:( LDAP_CONST char *oid, LDAPControl **ctrls, LDAPControl ***nextctrlp )
ldap_control_free	/usr/include/ldap.h	/^ldap_control_free LDAP_P(($/;"	p	signature:( LDAPControl *ctrl )
ldap_controls_dup	/usr/include/ldap.h	/^ldap_controls_dup LDAP_P(($/;"	p	signature:( LDAPControl *LDAP_CONST *controls )
ldap_controls_free	/usr/include/ldap.h	/^ldap_controls_free LDAP_P(($/;"	p	signature:( LDAPControl **ctrls )
ldap_count_entries	/usr/include/ldap.h	/^ldap_count_entries LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *chain )
ldap_count_messages	/usr/include/ldap.h	/^ldap_count_messages LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *chain )
ldap_count_references	/usr/include/ldap.h	/^ldap_count_references LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *chain )
ldap_count_values	/usr/include/ldap.h	/^ldap_count_values LDAP_P((	\/* deprecated, use ldap_count_values_len *\/$/;"	p	signature:( char **vals )
ldap_count_values_len	/usr/include/ldap.h	/^ldap_count_values_len LDAP_P(($/;"	p	signature:( struct berval **vals )
ldap_create	/usr/include/ldap.h	/^ldap_create LDAP_P(($/;"	p	signature:( LDAP **ldp )
ldap_create_assertion_control	/usr/include/ldap.h	/^ldap_create_assertion_control LDAP_P(($/;"	p	signature:( LDAP *ld, char *filter, int iscritical, LDAPControl **ctrlp )
ldap_create_assertion_control_value	/usr/include/ldap.h	/^ldap_create_assertion_control_value LDAP_P(($/;"	p	signature:( LDAP *ld, char *assertion, struct berval *value )
ldap_create_control	/usr/include/ldap.h	/^ldap_create_control LDAP_P((	\/* deprecated, use ldap_control_create *\/$/;"	p	signature:( LDAP_CONST char *requestOID, BerElement *ber, int iscritical, LDAPControl **ctrlp )
ldap_create_page_control	/usr/include/ldap.h	/^ldap_create_page_control LDAP_P(($/;"	p	signature:( LDAP *ld, ber_int_t pagesize, struct berval *cookie, int iscritical, LDAPControl **ctrlp )
ldap_create_page_control_value	/usr/include/ldap.h	/^ldap_create_page_control_value LDAP_P(($/;"	p	signature:( LDAP *ld, ber_int_t pagesize, struct berval *cookie, struct berval *value )
ldap_create_passwordpolicy_control	/usr/include/ldap.h	/^ldap_create_passwordpolicy_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **ctrlp )
ldap_create_session_tracking	/usr/include/ldap.h	/^ldap_create_session_tracking LDAP_P(($/;"	p	signature:( LDAP *ld, char *sessionSourceIp, char *sessionSourceName, char *formatOID, struct berval *sessionTrackingIdentifier, LDAPControl **ctrlp )
ldap_create_session_tracking_value	/usr/include/ldap.h	/^ldap_create_session_tracking_value LDAP_P(($/;"	p	signature:( LDAP *ld, char *sessionSourceIp, char *sessionSourceName, char *formatOID, struct berval *sessionTrackingIdentifier, struct berval *value )
ldap_create_sort_control	/usr/include/ldap.h	/^ldap_create_sort_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPSortKey **keyList, int iscritical, LDAPControl **ctrlp )
ldap_create_sort_control_value	/usr/include/ldap.h	/^ldap_create_sort_control_value LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPSortKey **keyList, struct berval *value )
ldap_create_sort_keylist	/usr/include/ldap.h	/^ldap_create_sort_keylist LDAP_P(($/;"	p	signature:( LDAPSortKey ***sortKeyList, char *keyString )
ldap_create_vlv_control	/usr/include/ldap.h	/^ldap_create_vlv_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPVLVInfo *ldvlistp, LDAPControl **ctrlp )
ldap_create_vlv_control_value	/usr/include/ldap.h	/^ldap_create_vlv_control_value LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPVLVInfo *ldvlistp, struct berval *value)
ldap_dcedn2dn	/usr/include/ldap.h	/^ldap_dcedn2dn LDAP_P(( \/* deprecated, ldap_str2dn\/dn2str *\/$/;"	p	signature:( LDAP_CONST char *dce )
ldap_delete	/usr/include/ldap.h	/^ldap_delete LDAP_P((	\/* deprecated, use ldap_delete_ext *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn )
ldap_delete_ext	/usr/include/ldap.h	/^ldap_delete_ext LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_delete_ext_s	/usr/include/ldap.h	/^ldap_delete_ext_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPControl **serverctrls, LDAPControl **clientctrls )
ldap_delete_result_entry	/usr/include/ldap.h	/^ldap_delete_result_entry LDAP_P(($/;"	p	signature:( LDAPMessage **list, LDAPMessage *e )
ldap_delete_s	/usr/include/ldap.h	/^ldap_delete_s LDAP_P((	\/* deprecated, use ldap_delete_ext_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn )
ldap_dn2ad_canonical	/usr/include/ldap.h	/^ldap_dn2ad_canonical LDAP_P(( \/* deprecated, ldap_str2dn\/dn2str *\/$/;"	p	signature:( LDAP_CONST char *dn )
ldap_dn2bv	/usr/include/ldap.h	/^ldap_dn2bv LDAP_P(($/;"	p	signature:( LDAPDN dn, struct berval *bv, unsigned flags )
ldap_dn2dcedn	/usr/include/ldap.h	/^ldap_dn2dcedn LDAP_P(( \/* deprecated, ldap_str2dn\/dn2str *\/$/;"	p	signature:( LDAP_CONST char *dn )
ldap_dn2domain	/usr/include/ldap.h	/^ldap_dn2domain LDAP_P(($/;"	p	signature:( LDAP_CONST char* dn, char** domain )
ldap_dn2str	/usr/include/ldap.h	/^ldap_dn2str LDAP_P(($/;"	p	signature:( LDAPDN dn, char **str, unsigned flags )
ldap_dn2ufn	/usr/include/ldap.h	/^ldap_dn2ufn LDAP_P(( \/* deprecated, use ldap_str2dn\/dn2str *\/$/;"	p	signature:( LDAP_CONST char *dn )
ldap_dn_normalize	/usr/include/ldap.h	/^ldap_dn_normalize LDAP_P(($/;"	p	signature:( LDAP_CONST char *in, unsigned iflags, char **out, unsigned oflags )
ldap_dnfree	/usr/include/ldap.h	/^LDAP_F( void ) ldap_dnfree LDAP_P(( LDAPDN dn ));$/;"	p	signature:( LDAPDN dn )
ldap_domain2dn	/usr/include/ldap.h	/^ldap_domain2dn LDAP_P(($/;"	p	signature:( LDAP_CONST char* domain, char** dn )
ldap_domain2hostlist	/usr/include/ldap.h	/^ldap_domain2hostlist LDAP_P(($/;"	p	signature:( LDAP_CONST char *domain, char** hostlist )
ldap_err2string	/usr/include/ldap.h	/^ldap_err2string LDAP_P(($/;"	p	signature:( int err )
ldap_explode_dn	/usr/include/ldap.h	/^ldap_explode_dn LDAP_P(( \/* deprecated, ldap_str2dn *\/$/;"	p	signature:( LDAP_CONST char *dn, int notypes )
ldap_explode_rdn	/usr/include/ldap.h	/^ldap_explode_rdn LDAP_P(( \/* deprecated, ldap_str2rdn *\/$/;"	p	signature:( LDAP_CONST char *rdn, int notypes )
ldap_extended_operation	/usr/include/ldap.h	/^ldap_extended_operation LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *reqoid, struct berval *reqdata, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_extended_operation_s	/usr/include/ldap.h	/^ldap_extended_operation_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *reqoid, struct berval *reqdata, LDAPControl **serverctrls, LDAPControl **clientctrls, char **retoidp, struct berval **retdatap )
ldap_find_control	/usr/include/ldap.h	/^ldap_find_control LDAP_P((	\/* deprecated, use ldap_control_find *\/$/;"	p	signature:( LDAP_CONST char *oid, LDAPControl **ctrls )
ldap_first_attribute	/usr/include/ldap.h	/^ldap_first_attribute LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *entry, BerElement **ber )
ldap_first_entry	/usr/include/ldap.h	/^ldap_first_entry LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *chain )
ldap_first_message	/usr/include/ldap.h	/^ldap_first_message LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *chain )
ldap_first_reference	/usr/include/ldap.h	/^ldap_first_reference LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *chain )
ldap_free_sort_keylist	/usr/include/ldap.h	/^ldap_free_sort_keylist LDAP_P(($/;"	p	signature:( LDAPSortKey **sortkeylist )
ldap_free_urldesc	/usr/include/ldap.h	/^ldap_free_urldesc LDAP_P(($/;"	p	signature:( LDAPURLDesc *ludp )
ldap_get_attribute_ber	/usr/include/ldap.h	/^ldap_get_attribute_ber LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *e, BerElement *ber, struct berval *attr, struct berval **vals )
ldap_get_dn	/usr/include/ldap.h	/^ldap_get_dn LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *entry )
ldap_get_dn_ber	/usr/include/ldap.h	/^ldap_get_dn_ber LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *e, BerElement **berout, struct berval *dn )
ldap_get_entry_controls	/usr/include/ldap.h	/^ldap_get_entry_controls LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *entry, LDAPControl ***serverctrls)
ldap_get_option	/usr/include/ldap.h	/^ldap_get_option LDAP_P(($/;"	p	signature:( LDAP *ld, int option, void *outvalue)
ldap_get_values	/usr/include/ldap.h	/^ldap_get_values LDAP_P((	\/* deprecated, use ldap_get_values_len *\/$/;"	p	signature:( LDAP *ld, LDAPMessage *entry, LDAP_CONST char *target )
ldap_get_values_len	/usr/include/ldap.h	/^ldap_get_values_len LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *entry, LDAP_CONST char *target )
ldap_init	/usr/include/ldap.h	/^ldap_init LDAP_P(( \/* deprecated, use ldap_create or ldap_initialize *\/$/;"	p	signature:( LDAP_CONST char *host, int port )
ldap_initialize	/usr/include/ldap.h	/^ldap_initialize LDAP_P(($/;"	p	signature:( LDAP **ldp, LDAP_CONST char *url )
ldap_install_tls	/usr/include/ldap.h	/^ldap_install_tls LDAP_P(($/;"	p	signature:( LDAP *ld )
ldap_is_ldap_url	/usr/include/ldap.h	/^ldap_is_ldap_url LDAP_P(($/;"	p	signature:( LDAP_CONST char *url )
ldap_is_ldapi_url	/usr/include/ldap.h	/^ldap_is_ldapi_url LDAP_P(($/;"	p	signature:( LDAP_CONST char *url )
ldap_is_ldaps_url	/usr/include/ldap.h	/^ldap_is_ldaps_url LDAP_P(($/;"	p	signature:( LDAP_CONST char *url )
ldap_matchingrule	/usr/include/ldap_schema.h	/^typedef struct ldap_matchingrule {$/;"	s
ldap_matchingrule2bv	/usr/include/ldap_schema.h	/^ldap_matchingrule2bv LDAP_P(($/;"	p	signature:( LDAPMatchingRule * mr, struct berval *bv )
ldap_matchingrule2name	/usr/include/ldap_schema.h	/^ldap_matchingrule2name LDAP_P(($/;"	p	signature:( LDAPMatchingRule * mr )
ldap_matchingrule2str	/usr/include/ldap_schema.h	/^ldap_matchingrule2str LDAP_P(($/;"	p	signature:( LDAPMatchingRule * mr )
ldap_matchingrule::mr_desc	/usr/include/ldap_schema.h	/^	char *mr_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
ldap_matchingrule::mr_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **mr_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
ldap_matchingrule::mr_names	/usr/include/ldap_schema.h	/^	char **mr_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
ldap_matchingrule::mr_obsolete	/usr/include/ldap_schema.h	/^	int  mr_obsolete;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
ldap_matchingrule::mr_oid	/usr/include/ldap_schema.h	/^	char *mr_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_matchingrule	access:public
ldap_matchingrule::mr_syntax_oid	/usr/include/ldap_schema.h	/^	char *mr_syntax_oid;	\/* REQUIRED *\/$/;"	m	struct:ldap_matchingrule	access:public
ldap_matchingrule_free	/usr/include/ldap_schema.h	/^ldap_matchingrule_free LDAP_P(($/;"	p	signature:( LDAPMatchingRule * mr )
ldap_matchingruleuse	/usr/include/ldap_schema.h	/^typedef struct ldap_matchingruleuse {$/;"	s
ldap_matchingruleuse2bv	/usr/include/ldap_schema.h	/^ldap_matchingruleuse2bv LDAP_P(($/;"	p	signature:( LDAPMatchingRuleUse * mru, struct berval *bv )
ldap_matchingruleuse2name	/usr/include/ldap_schema.h	/^ldap_matchingruleuse2name LDAP_P(($/;"	p	signature:( LDAPMatchingRuleUse * mru )
ldap_matchingruleuse2str	/usr/include/ldap_schema.h	/^ldap_matchingruleuse2str LDAP_P(($/;"	p	signature:( LDAPMatchingRuleUse * mru )
ldap_matchingruleuse::mru_applies_oids	/usr/include/ldap_schema.h	/^	char **mru_applies_oids;	\/* REQUIRED *\/$/;"	m	struct:ldap_matchingruleuse	access:public
ldap_matchingruleuse::mru_desc	/usr/include/ldap_schema.h	/^	char *mru_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
ldap_matchingruleuse::mru_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **mru_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
ldap_matchingruleuse::mru_names	/usr/include/ldap_schema.h	/^	char **mru_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
ldap_matchingruleuse::mru_obsolete	/usr/include/ldap_schema.h	/^	int  mru_obsolete;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
ldap_matchingruleuse::mru_oid	/usr/include/ldap_schema.h	/^	char *mru_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_matchingruleuse	access:public
ldap_matchingruleuse_free	/usr/include/ldap_schema.h	/^ldap_matchingruleuse_free LDAP_P(($/;"	p	signature:( LDAPMatchingRuleUse * mr )
ldap_memalloc	/usr/include/ldap.h	/^ldap_memalloc LDAP_P(($/;"	p	signature:( ber_len_t s )
ldap_memcalloc	/usr/include/ldap.h	/^ldap_memcalloc LDAP_P(($/;"	p	signature:( ber_len_t n, ber_len_t s )
ldap_memfree	/usr/include/ldap.h	/^ldap_memfree LDAP_P(($/;"	p	signature:( void* p )
ldap_memrealloc	/usr/include/ldap.h	/^ldap_memrealloc LDAP_P(($/;"	p	signature:( void* p, ber_len_t s )
ldap_memvfree	/usr/include/ldap.h	/^ldap_memvfree LDAP_P(($/;"	p	signature:( void** v )
ldap_modify	/usr/include/ldap.h	/^ldap_modify LDAP_P((	\/* deprecated, use ldap_modify_ext *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **mods )
ldap_modify_ext	/usr/include/ldap.h	/^ldap_modify_ext LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **mods, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_modify_ext_s	/usr/include/ldap.h	/^ldap_modify_ext_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **mods, LDAPControl **serverctrls, LDAPControl **clientctrls )
ldap_modify_s	/usr/include/ldap.h	/^ldap_modify_s LDAP_P((	\/* deprecated, use ldap_modify_ext_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAPMod **mods )
ldap_modrdn	/usr/include/ldap.h	/^ldap_modrdn LDAP_P((	\/* deprecated, use ldap_rename *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn )
ldap_modrdn2	/usr/include/ldap.h	/^ldap_modrdn2 LDAP_P((	\/* deprecated, use ldap_rename *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn, int deleteoldrdn )
ldap_modrdn2_s	/usr/include/ldap.h	/^ldap_modrdn2_s LDAP_P((	\/* deprecated, use ldap_rename_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn, int deleteoldrdn)
ldap_modrdn_s	/usr/include/ldap.h	/^ldap_modrdn_s LDAP_P((	\/* deprecated, use ldap_rename_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn )
ldap_mods_free	/usr/include/ldap.h	/^ldap_mods_free LDAP_P(($/;"	p	signature:( LDAPMod **mods, int freemods )
ldap_msgdelete	/usr/include/ldap.h	/^ldap_msgdelete LDAP_P(($/;"	p	signature:( LDAP *ld, int msgid )
ldap_msgfree	/usr/include/ldap.h	/^ldap_msgfree LDAP_P(($/;"	p	signature:( LDAPMessage *lm )
ldap_msgid	/usr/include/ldap.h	/^ldap_msgid   LDAP_P(($/;"	p	signature:( LDAPMessage *lm )
ldap_msgtype	/usr/include/ldap.h	/^ldap_msgtype LDAP_P(($/;"	p	signature:( LDAPMessage *lm )
ldap_nameform	/usr/include/ldap_schema.h	/^typedef struct ldap_nameform {$/;"	s
ldap_nameform2bv	/usr/include/ldap_schema.h	/^ldap_nameform2bv LDAP_P(($/;"	p	signature:( LDAPNameForm * nf, struct berval *bv )
ldap_nameform2name	/usr/include/ldap_schema.h	/^ldap_nameform2name LDAP_P(($/;"	p	signature:( LDAPNameForm * nf )
ldap_nameform2str	/usr/include/ldap_schema.h	/^ldap_nameform2str LDAP_P(($/;"	p	signature:( LDAPNameForm * nf )
ldap_nameform::nf_at_oids_may	/usr/include/ldap_schema.h	/^	char **nf_at_oids_may;	\/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_at_oids_must	/usr/include/ldap_schema.h	/^	char **nf_at_oids_must;	\/* REQUIRED *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_desc	/usr/include/ldap_schema.h	/^	char *nf_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **nf_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_names	/usr/include/ldap_schema.h	/^	char **nf_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_objectclass	/usr/include/ldap_schema.h	/^	char *nf_objectclass;	\/* REQUIRED *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_obsolete	/usr/include/ldap_schema.h	/^	int  nf_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform::nf_oid	/usr/include/ldap_schema.h	/^	char *nf_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_nameform	access:public
ldap_nameform_free	/usr/include/ldap_schema.h	/^ldap_nameform_free LDAP_P(($/;"	p	signature:( LDAPNameForm * nf )
ldap_next_attribute	/usr/include/ldap.h	/^ldap_next_attribute LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *entry, BerElement *ber )
ldap_next_entry	/usr/include/ldap.h	/^ldap_next_entry LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *entry )
ldap_next_message	/usr/include/ldap.h	/^ldap_next_message LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *msg )
ldap_next_reference	/usr/include/ldap.h	/^ldap_next_reference LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *ref )
ldap_objectclass	/usr/include/ldap_schema.h	/^typedef struct ldap_objectclass {$/;"	s
ldap_objectclass2bv	/usr/include/ldap_schema.h	/^ldap_objectclass2bv LDAP_P(($/;"	p	signature:( LDAPObjectClass * oc, struct berval *bv )
ldap_objectclass2name	/usr/include/ldap_schema.h	/^ldap_objectclass2name LDAP_P(($/;"	p	signature:( LDAPObjectClass * oc )
ldap_objectclass2str	/usr/include/ldap_schema.h	/^ldap_objectclass2str LDAP_P(($/;"	p	signature:( LDAPObjectClass * oc )
ldap_objectclass::oc_at_oids_may	/usr/include/ldap_schema.h	/^	char **oc_at_oids_may;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_at_oids_must	/usr/include/ldap_schema.h	/^	char **oc_at_oids_must;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_desc	/usr/include/ldap_schema.h	/^	char *oc_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **oc_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_kind	/usr/include/ldap_schema.h	/^	int  oc_kind;		\/* 0=ABSTRACT, 1=STRUCTURAL, 2=AUXILIARY *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_names	/usr/include/ldap_schema.h	/^	char **oc_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_obsolete	/usr/include/ldap_schema.h	/^	int  oc_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_oid	/usr/include/ldap_schema.h	/^	char *oc_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass::oc_sup_oids	/usr/include/ldap_schema.h	/^	char **oc_sup_oids;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
ldap_objectclass_free	/usr/include/ldap_schema.h	/^ldap_objectclass_free LDAP_P(($/;"	p	signature:( LDAPObjectClass * oc )
ldap_open	/usr/include/ldap.h	/^ldap_open LDAP_P((	\/* deprecated, use ldap_create or ldap_initialize *\/$/;"	p	signature:( LDAP_CONST char *host, int port )
ldap_parse_extended_result	/usr/include/ldap.h	/^ldap_parse_extended_result LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, char **retoidp, struct berval **retdatap, int freeit )
ldap_parse_intermediate	/usr/include/ldap.h	/^ldap_parse_intermediate LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, char **retoidp, struct berval **retdatap, LDAPControl ***serverctrls, int freeit )
ldap_parse_page_control	/usr/include/ldap.h	/^ldap_parse_page_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **ctrls, ber_int_t *count, struct berval **cookie )
ldap_parse_pageresponse_control	/usr/include/ldap.h	/^ldap_parse_pageresponse_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl *ctrl, ber_int_t *count, struct berval *cookie )
ldap_parse_passwd	/usr/include/ldap.h	/^ldap_parse_passwd LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, struct berval *newpasswd )
ldap_parse_passwordpolicy_control	/usr/include/ldap.h	/^ldap_parse_passwordpolicy_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl *ctrl, ber_int_t *expirep, ber_int_t *gracep, LDAPPasswordPolicyError *errorp )
ldap_parse_reference	/usr/include/ldap.h	/^ldap_parse_reference LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *ref, char ***referralsp, LDAPControl ***serverctrls, int freeit)
ldap_parse_refresh	/usr/include/ldap.h	/^ldap_parse_refresh LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, ber_int_t *newttl )
ldap_parse_result	/usr/include/ldap.h	/^ldap_parse_result LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, int *errcodep, char **matcheddnp, char **errmsgp, char ***referralsp, LDAPControl ***serverctrls, int freeit )
ldap_parse_sasl_bind_result	/usr/include/ldap.h	/^ldap_parse_sasl_bind_result LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, struct berval **servercredp, int freeit )
ldap_parse_session_tracking_control	/usr/include/ldap.h	/^ldap_parse_session_tracking_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl *ctrl, struct berval *ip, struct berval *name, struct berval *oid, struct berval *id )
ldap_parse_sort_control	/usr/include/ldap.h	/^ldap_parse_sort_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **ctrlp, unsigned long *result, char **attribute )
ldap_parse_sortresponse_control	/usr/include/ldap.h	/^ldap_parse_sortresponse_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl *ctrl, ber_int_t *result, char **attribute )
ldap_parse_vlv_control	/usr/include/ldap.h	/^ldap_parse_vlv_control LDAP_P(( $/;"	p	signature:( LDAP *ld, LDAPControl **ctrls, unsigned long *target_posp, unsigned long *list_countp, struct berval **contextp, int *errcodep )
ldap_parse_vlvresponse_control	/usr/include/ldap.h	/^ldap_parse_vlvresponse_control LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl *ctrls, ber_int_t *target_posp, ber_int_t *list_countp, struct berval **contextp, int *errcodep )
ldap_parse_whoami	/usr/include/ldap.h	/^ldap_parse_whoami LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPMessage *res, struct berval **authzid )
ldap_passwd	/usr/include/ldap.h	/^ldap_passwd LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, struct berval *user, struct berval *oldpw, struct berval *newpw, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_passwd_s	/usr/include/ldap.h	/^ldap_passwd_s LDAP_P(($/;"	p	signature:( LDAP *ld, struct berval *user, struct berval *oldpw, struct berval *newpw, struct berval *newpasswd, LDAPControl **sctrls, LDAPControl **cctrls )
ldap_passwordpolicy_err2txt	/usr/include/ldap.h	/^ldap_passwordpolicy_err2txt LDAP_P(( LDAPPasswordPolicyError ));$/;"	p	signature:( LDAPPasswordPolicyError )
ldap_perror	/usr/include/ldap.h	/^ldap_perror LDAP_P((	\/* deprecated, use ldap_err2string *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *s )
ldap_put_vrFilter	/usr/include/ldap.h	/^ldap_put_vrFilter LDAP_P(($/;"	p	signature:( BerElement *ber, const char *vrf )
ldap_rdn2bv	/usr/include/ldap.h	/^ldap_rdn2bv LDAP_P(($/;"	p	signature:( LDAPRDN rdn, struct berval *bv, unsigned flags )
ldap_rdn2str	/usr/include/ldap.h	/^ldap_rdn2str LDAP_P(($/;"	p	signature:( LDAPRDN rdn, char **str, unsigned flags )
ldap_rdnfree	/usr/include/ldap.h	/^LDAP_F( void ) ldap_rdnfree LDAP_P(( LDAPRDN rdn ));$/;"	p	signature:( LDAPRDN rdn )
ldap_refresh	/usr/include/ldap.h	/^ldap_refresh LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, struct berval *dn, ber_int_t ttl, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_refresh_s	/usr/include/ldap.h	/^ldap_refresh_s LDAP_P(($/;"	p	signature:( LDAP *ld, struct berval *dn, ber_int_t ttl, ber_int_t *newttl, LDAPControl **sctrls, LDAPControl **cctrls )
ldap_rename	/usr/include/ldap.h	/^ldap_rename LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn, LDAP_CONST char *newSuperior, int deleteoldrdn, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_rename2	/usr/include/ldap.h	/^ldap_rename2 LDAP_P((	\/* deprecated, use ldap_rename *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn, LDAP_CONST char *newSuperior, int deleteoldrdn )
ldap_rename2_s	/usr/include/ldap.h	/^ldap_rename2_s LDAP_P((	\/* deprecated, use ldap_rename_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn, LDAP_CONST char *newSuperior, int deleteoldrdn )
ldap_rename_s	/usr/include/ldap.h	/^ldap_rename_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *newrdn, LDAP_CONST char *newSuperior, int deleteoldrdn, LDAPControl **sctrls, LDAPControl **cctrls )
ldap_result	/usr/include/ldap.h	/^ldap_result LDAP_P(($/;"	p	signature:( LDAP *ld, int msgid, int all, struct timeval *timeout, LDAPMessage **result )
ldap_result2error	/usr/include/ldap.h	/^ldap_result2error LDAP_P((	\/* deprecated, use ldap_parse_result *\/$/;"	p	signature:( LDAP *ld, LDAPMessage *r, int freeit )
ldap_sasl_bind	/usr/include/ldap.h	/^ldap_sasl_bind LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *mechanism, struct berval *cred, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_sasl_bind_s	/usr/include/ldap.h	/^ldap_sasl_bind_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *mechanism, struct berval *cred, LDAPControl **serverctrls, LDAPControl **clientctrls, struct berval **servercredp )
ldap_sasl_interactive_bind_s	/usr/include/ldap.h	/^ldap_sasl_interactive_bind_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *dn, LDAP_CONST char *saslMechanism, LDAPControl **serverControls, LDAPControl **clientControls, unsigned flags, LDAP_SASL_INTERACT_PROC *proc, void *defaults )
ldap_schema_extension_item	/usr/include/ldap_schema.h	/^typedef struct ldap_schema_extension_item {$/;"	s
ldap_schema_extension_item::lsei_name	/usr/include/ldap_schema.h	/^	char *lsei_name;$/;"	m	struct:ldap_schema_extension_item	access:public
ldap_schema_extension_item::lsei_values	/usr/include/ldap_schema.h	/^	char **lsei_values;$/;"	m	struct:ldap_schema_extension_item	access:public
ldap_search	/usr/include/ldap.h	/^ldap_search LDAP_P((	\/* deprecated, use ldap_search_ext *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *base, int scope, LDAP_CONST char *filter, char **attrs, int attrsonly )
ldap_search_ext	/usr/include/ldap.h	/^ldap_search_ext LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *base, int scope, LDAP_CONST char *filter, char **attrs, int attrsonly, LDAPControl **serverctrls, LDAPControl **clientctrls, struct timeval *timeout, int sizelimit, int *msgidp )
ldap_search_ext_s	/usr/include/ldap.h	/^ldap_search_ext_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_CONST char *base, int scope, LDAP_CONST char *filter, char **attrs, int attrsonly, LDAPControl **serverctrls, LDAPControl **clientctrls, struct timeval *timeout, int sizelimit, LDAPMessage **res )
ldap_search_s	/usr/include/ldap.h	/^ldap_search_s LDAP_P((	\/* deprecated, use ldap_search_ext_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *base, int scope, LDAP_CONST char *filter, char **attrs, int attrsonly, LDAPMessage **res )
ldap_search_st	/usr/include/ldap.h	/^ldap_search_st LDAP_P((	\/* deprecated, use ldap_search_ext_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *base, int scope, LDAP_CONST char *filter, char **attrs, int attrsonly, struct timeval *timeout, LDAPMessage **res )
ldap_set_nextref_proc	/usr/include/ldap.h	/^ldap_set_nextref_proc LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_NEXTREF_PROC *nextref_proc, void *params )
ldap_set_option	/usr/include/ldap.h	/^ldap_set_option LDAP_P(($/;"	p	signature:( LDAP *ld, int option, LDAP_CONST void *invalue)
ldap_set_rebind_proc	/usr/include/ldap.h	/^ldap_set_rebind_proc LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_REBIND_PROC *rebind_proc, void *params )
ldap_set_urllist_proc	/usr/include/ldap.h	/^ldap_set_urllist_proc LDAP_P(($/;"	p	signature:( LDAP *ld, LDAP_URLLIST_PROC *urllist_proc, void *params )
ldap_simple_bind	/usr/include/ldap.h	/^ldap_simple_bind LDAP_P(( \/* deprecated, use ldap_sasl_bind *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *who, LDAP_CONST char *passwd )
ldap_simple_bind_s	/usr/include/ldap.h	/^ldap_simple_bind_s LDAP_P(( \/* deprecated, use ldap_sasl_bind_s *\/$/;"	p	signature:( LDAP *ld, LDAP_CONST char *who, LDAP_CONST char *passwd )
ldap_sort_entries	/usr/include/ldap.h	/^ldap_sort_entries LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, LDAPMessage **chain, LDAP_CONST char *attr, LDAP_SORT_AD_CMP_PROC *cmp )
ldap_sort_strcasecmp	/usr/include/ldap.h	/^ldap_sort_strcasecmp LDAP_P(($/;"	p	signature:( LDAP_CONST void *a, LDAP_CONST void *b )
ldap_sort_values	/usr/include/ldap.h	/^ldap_sort_values LDAP_P(($/;"	p	signature:( LDAP *ld, char **vals, LDAP_SORT_AV_CMP_PROC *cmp )
ldap_start_tls	/usr/include/ldap.h	/^ldap_start_tls LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **serverctrls, LDAPControl **clientctrls, int *msgidp )
ldap_start_tls_s	/usr/include/ldap.h	/^ldap_start_tls_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **serverctrls, LDAPControl **clientctrls )
ldap_str2attributetype	/usr/include/ldap_schema.h	/^ldap_str2attributetype LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2contentrule	/usr/include/ldap_schema.h	/^ldap_str2contentrule LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2dn	/usr/include/ldap.h	/^ldap_str2dn LDAP_P(($/;"	p	signature:( LDAP_CONST char *str, LDAPDN *dn, unsigned flags )
ldap_str2matchingrule	/usr/include/ldap_schema.h	/^ldap_str2matchingrule LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2matchingruleuse	/usr/include/ldap_schema.h	/^ldap_str2matchingruleuse LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2nameform	/usr/include/ldap_schema.h	/^ldap_str2nameform LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2objectclass	/usr/include/ldap_schema.h	/^ldap_str2objectclass LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2rdn	/usr/include/ldap.h	/^ldap_str2rdn LDAP_P(($/;"	p	signature:( LDAP_CONST char *str, LDAPRDN *rdn, char **next, unsigned flags )
ldap_str2structurerule	/usr/include/ldap_schema.h	/^ldap_str2structurerule LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_str2syntax	/usr/include/ldap_schema.h	/^ldap_str2syntax LDAP_P(($/;"	p	signature:( LDAP_CONST char * s, int * code, LDAP_CONST char ** errp, LDAP_CONST unsigned flags )
ldap_strdup	/usr/include/ldap.h	/^ldap_strdup LDAP_P(($/;"	p	signature:( LDAP_CONST char * )
ldap_structurerule	/usr/include/ldap_schema.h	/^typedef struct ldap_structurerule {$/;"	s
ldap_structurerule2bv	/usr/include/ldap_schema.h	/^ldap_structurerule2bv LDAP_P(($/;"	p	signature:( LDAPStructureRule * sr, struct berval *bv )
ldap_structurerule2name	/usr/include/ldap_schema.h	/^ldap_structurerule2name LDAP_P(($/;"	p	signature:( LDAPStructureRule * sr )
ldap_structurerule2str	/usr/include/ldap_schema.h	/^ldap_structurerule2str LDAP_P(($/;"	p	signature:( LDAPStructureRule * sr )
ldap_structurerule::sr_desc	/usr/include/ldap_schema.h	/^	char *sr_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **sr_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_nameform	/usr/include/ldap_schema.h	/^	char *sr_nameform;	\/* REQUIRED *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_names	/usr/include/ldap_schema.h	/^	char **sr_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_nsup_ruleids	/usr/include/ldap_schema.h	/^	int sr_nsup_ruleids;\/* number of sr_sup_ruleids *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_obsolete	/usr/include/ldap_schema.h	/^	int  sr_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_ruleid	/usr/include/ldap_schema.h	/^	int sr_ruleid;		\/* REQUIRED *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule::sr_sup_ruleids	/usr/include/ldap_schema.h	/^	int *sr_sup_ruleids;\/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
ldap_structurerule_free	/usr/include/ldap_schema.h	/^ldap_structurerule_free LDAP_P(($/;"	p	signature:( LDAPStructureRule * sr )
ldap_sync_destroy	/usr/include/ldap.h	/^ldap_sync_destroy LDAP_P(($/;"	p	signature:( ldap_sync_t *ls, int freeit )
ldap_sync_init	/usr/include/ldap.h	/^ldap_sync_init LDAP_P(($/;"	p	signature:( ldap_sync_t *ls, int mode )
ldap_sync_init_refresh_and_persist	/usr/include/ldap.h	/^ldap_sync_init_refresh_and_persist LDAP_P(($/;"	p	signature:( ldap_sync_t *ls )
ldap_sync_init_refresh_only	/usr/include/ldap.h	/^ldap_sync_init_refresh_only LDAP_P(($/;"	p	signature:( ldap_sync_t *ls )
ldap_sync_initialize	/usr/include/ldap.h	/^ldap_sync_initialize LDAP_P(($/;"	p	signature:( ldap_sync_t *ls )
ldap_sync_intermediate_f	/usr/include/ldap.h	/^typedef int (*ldap_sync_intermediate_f) LDAP_P(($/;"	t
ldap_sync_poll	/usr/include/ldap.h	/^ldap_sync_poll LDAP_P(($/;"	p	signature:( ldap_sync_t *ls )
ldap_sync_refresh_t	/usr/include/ldap.h	/^} ldap_sync_refresh_t;$/;"	t	typeref:enum:__anon68
ldap_sync_search_entry_f	/usr/include/ldap.h	/^typedef int (*ldap_sync_search_entry_f) LDAP_P(($/;"	t
ldap_sync_search_reference_f	/usr/include/ldap.h	/^typedef int (*ldap_sync_search_reference_f) LDAP_P(($/;"	t
ldap_sync_search_result_f	/usr/include/ldap.h	/^typedef int (*ldap_sync_search_result_f) LDAP_P(($/;"	t
ldap_sync_t	/usr/include/ldap.h	/^struct ldap_sync_t {$/;"	s
ldap_sync_t	/usr/include/ldap.h	/^typedef struct ldap_sync_t ldap_sync_t;$/;"	t	typeref:struct:ldap_sync_t
ldap_sync_t::ls_attrs	/usr/include/ldap.h	/^	char				**ls_attrs;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_base	/usr/include/ldap.h	/^	char				*ls_base;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_cookie	/usr/include/ldap.h	/^	struct berval			ls_cookie;$/;"	m	struct:ldap_sync_t	typeref:struct:ldap_sync_t::berval	access:public
ldap_sync_t::ls_filter	/usr/include/ldap.h	/^	char				*ls_filter;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_intermediate	/usr/include/ldap.h	/^	ldap_sync_intermediate_f	ls_intermediate;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_ld	/usr/include/ldap.h	/^	LDAP				*ls_ld;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_msgid	/usr/include/ldap.h	/^	int				ls_msgid;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_private	/usr/include/ldap.h	/^	void				*ls_private;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_refreshPhase	/usr/include/ldap.h	/^	ldap_sync_refresh_t		ls_refreshPhase;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_reloadHint	/usr/include/ldap.h	/^	int				ls_reloadHint;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_scope	/usr/include/ldap.h	/^	int				ls_scope;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_search_entry	/usr/include/ldap.h	/^	ldap_sync_search_entry_f	ls_search_entry;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_search_reference	/usr/include/ldap.h	/^	ldap_sync_search_reference_f	ls_search_reference;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_search_result	/usr/include/ldap.h	/^	ldap_sync_search_result_f	ls_search_result;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_sizelimit	/usr/include/ldap.h	/^	int				ls_sizelimit;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_timelimit	/usr/include/ldap.h	/^	int				ls_timelimit;$/;"	m	struct:ldap_sync_t	access:public
ldap_sync_t::ls_timeout	/usr/include/ldap.h	/^	int				ls_timeout;$/;"	m	struct:ldap_sync_t	access:public
ldap_syntax	/usr/include/ldap_schema.h	/^typedef struct ldap_syntax {$/;"	s
ldap_syntax2bv	/usr/include/ldap_schema.h	/^ldap_syntax2bv LDAP_P(($/;"	p	signature:( LDAPSyntax * syn, struct berval *bv )
ldap_syntax2name	/usr/include/ldap_schema.h	/^ldap_syntax2name LDAP_P(($/;"	p	signature:( LDAPSyntax * syn )
ldap_syntax2str	/usr/include/ldap_schema.h	/^ldap_syntax2str LDAP_P(($/;"	p	signature:( LDAPSyntax * syn )
ldap_syntax::syn_desc	/usr/include/ldap_schema.h	/^	char *syn_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_syntax	access:public
ldap_syntax::syn_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **syn_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_syntax	access:public
ldap_syntax::syn_names	/usr/include/ldap_schema.h	/^	char **syn_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_syntax	access:public
ldap_syntax::syn_oid	/usr/include/ldap_schema.h	/^	char *syn_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_syntax	access:public
ldap_syntax_free	/usr/include/ldap_schema.h	/^ldap_syntax_free LDAP_P(($/;"	p	signature:( LDAPSyntax * syn )
ldap_tls_inplace	/usr/include/ldap.h	/^ldap_tls_inplace LDAP_P(($/;"	p	signature:( LDAP *ld )
ldap_turn	/usr/include/ldap.h	/^ldap_turn LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, int mutual, LDAP_CONST char* identifier, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_turn_s	/usr/include/ldap.h	/^ldap_turn_s LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, int mutual, LDAP_CONST char* identifier, LDAPControl **sctrl, LDAPControl **cctrl )
ldap_txn_end	/usr/include/ldap.h	/^ldap_txn_end LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, int commit, struct berval *txnid, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_txn_end_s	/usr/include/ldap.h	/^ldap_txn_end_s LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, int commit, struct berval *txnid, LDAPControl **sctrl, LDAPControl **cctrl, int *retidp )
ldap_txn_start	/usr/include/ldap.h	/^ldap_txn_start LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_txn_start_s	/usr/include/ldap.h	/^ldap_txn_start_s LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, LDAPControl **sctrl, LDAPControl **cctrl, struct berval **rettxnid )
ldap_ucs4_t	/usr/include/ldap_utf8.h	/^typedef ber_int_t ldap_ucs4_t;$/;"	t
ldap_unbind	/usr/include/ldap.h	/^ldap_unbind LDAP_P(( \/* deprecated, use ldap_unbind_ext *\/$/;"	p	signature:( LDAP *ld )
ldap_unbind_ext	/usr/include/ldap.h	/^ldap_unbind_ext LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **serverctrls, LDAPControl **clientctrls)
ldap_unbind_ext_s	/usr/include/ldap.h	/^ldap_unbind_ext_s LDAP_P(($/;"	p	signature:( LDAP *ld, LDAPControl **serverctrls, LDAPControl **clientctrls)
ldap_unbind_s	/usr/include/ldap.h	/^ldap_unbind_s LDAP_P(( \/* deprecated, use ldap_unbind_ext_s *\/$/;"	p	signature:( LDAP *ld )
ldap_url_desc	/usr/include/ldap.h	/^typedef struct ldap_url_desc {$/;"	s
ldap_url_desc2str	/usr/include/ldap.h	/^ldap_url_desc2str LDAP_P(($/;"	p	signature:( LDAPURLDesc *ludp )
ldap_url_desc::lud_attrs	/usr/include/ldap.h	/^	char	**lud_attrs;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_crit_exts	/usr/include/ldap.h	/^	int		lud_crit_exts;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_dn	/usr/include/ldap.h	/^	char	*lud_dn;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_exts	/usr/include/ldap.h	/^	char	**lud_exts;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_filter	/usr/include/ldap.h	/^	char	*lud_filter;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_host	/usr/include/ldap.h	/^	char	*lud_host;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_next	/usr/include/ldap.h	/^	struct ldap_url_desc *lud_next;$/;"	m	struct:ldap_url_desc	typeref:struct:ldap_url_desc::ldap_url_desc	access:public
ldap_url_desc::lud_port	/usr/include/ldap.h	/^	int		lud_port;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_scheme	/usr/include/ldap.h	/^	char	*lud_scheme;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_desc::lud_scope	/usr/include/ldap.h	/^	int		lud_scope;$/;"	m	struct:ldap_url_desc	access:public
ldap_url_parse	/usr/include/ldap.h	/^ldap_url_parse LDAP_P(($/;"	p	signature:( LDAP_CONST char *url, LDAPURLDesc **ludpp )
ldap_value_free	/usr/include/ldap.h	/^ldap_value_free LDAP_P((	\/* deprecated, use ldap_value_free_len *\/$/;"	p	signature:( char **vals )
ldap_value_free_len	/usr/include/ldap.h	/^ldap_value_free_len LDAP_P(($/;"	p	signature:( struct berval **vals )
ldap_whoami	/usr/include/ldap.h	/^ldap_whoami LDAP_P(( LDAP *ld,$/;"	p	signature:( LDAP *ld, LDAPControl **sctrls, LDAPControl **cctrls, int *msgidp )
ldap_whoami_s	/usr/include/ldap.h	/^ldap_whoami_s LDAP_P(($/;"	p	signature:( LDAP *ld, struct berval **authzid, LDAPControl **sctrls, LDAPControl **cctrls )
ldap_x_mb_to_utf8	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_mb_to_utf8 LDAP_P(($/;"	p	signature:( char *utf8char, LDAP_CONST char *mbchar, size_t mbsize, int (*ldap_f_mbtowc)( wchar_t *wchar, LDAP_CONST char *mbchar, size_t count) )
ldap_x_mbs_to_utf8s	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_mbs_to_utf8s LDAP_P(($/;"	p	signature:( char *utf8str, LDAP_CONST char *mbstr, size_t count, size_t (*ldap_f_mbstowcs)( wchar_t *wcstr, LDAP_CONST char *mbstr, size_t count) )
ldap_x_utf8_to_mb	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_utf8_to_mb LDAP_P(($/;"	p	signature:( char *mbchar, LDAP_CONST char *utf8char, int (*ldap_f_wctomb)( char *mbchar, wchar_t wchar ))
ldap_x_utf8_to_wc	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_utf8_to_wc LDAP_P(($/;"	p	signature:( wchar_t *wchar, LDAP_CONST char *utf8char )
ldap_x_utf8s_to_mbs	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_utf8s_to_mbs LDAP_P(($/;"	p	signature:( char *mbstr, LDAP_CONST char *utf8str, size_t count, size_t (*ldap_f_wcstombs)( char *mbstr, LDAP_CONST wchar_t *wcstr, size_t count) )
ldap_x_utf8s_to_wcs	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_utf8s_to_wcs LDAP_P(($/;"	p	signature:( wchar_t *wcstr, LDAP_CONST char *utf8str, size_t count )
ldap_x_wc_to_utf8	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_wc_to_utf8 LDAP_P(($/;"	p	signature:( char *utf8char, wchar_t wchar, size_t count )
ldap_x_wcs_to_utf8s	/usr/include/ldap_utf8.h	/^LDAP_F(int) ldap_x_wcs_to_utf8s LDAP_P(($/;"	p	signature:( char *utf8str, LDAP_CONST wchar_t *wcstr, size_t count )
ldapai_api_version	/usr/include/ldap.h	/^	int		ldapai_api_version;			\/* revision of API supported *\/$/;"	m	struct:ldapapiinfo	access:public
ldapai_extensions	/usr/include/ldap.h	/^	char	**ldapai_extensions;		\/* names of API extensions *\/$/;"	m	struct:ldapapiinfo	access:public
ldapai_info_version	/usr/include/ldap.h	/^	int		ldapai_info_version;		\/* version of LDAPAPIInfo *\/$/;"	m	struct:ldapapiinfo	access:public
ldapai_protocol_version	/usr/include/ldap.h	/^	int		ldapai_protocol_version;	\/* highest LDAP version supported *\/$/;"	m	struct:ldapapiinfo	access:public
ldapai_vendor_name	/usr/include/ldap.h	/^	char	*ldapai_vendor_name;		\/* name of supplier *\/$/;"	m	struct:ldapapiinfo	access:public
ldapai_vendor_version	/usr/include/ldap.h	/^	int		ldapai_vendor_version;		\/* supplier-specific version * 100 *\/$/;"	m	struct:ldapapiinfo	access:public
ldapaif_info_version	/usr/include/ldap.h	/^	int		ldapaif_info_version;		\/* version of LDAPAPIFeatureInfo *\/$/;"	m	struct:ldap_apifeature_info	access:public
ldapaif_name	/usr/include/ldap.h	/^	char*	ldapaif_name;				\/* LDAP_API_FEATURE_* (less prefix) *\/$/;"	m	struct:ldap_apifeature_info	access:public
ldapaif_version	/usr/include/ldap.h	/^	int		ldapaif_version;			\/* value of LDAP_API_FEATURE_... *\/$/;"	m	struct:ldap_apifeature_info	access:public
ldapapiinfo	/usr/include/ldap.h	/^typedef struct ldapapiinfo {$/;"	s
ldapapiinfo::ldapai_api_version	/usr/include/ldap.h	/^	int		ldapai_api_version;			\/* revision of API supported *\/$/;"	m	struct:ldapapiinfo	access:public
ldapapiinfo::ldapai_extensions	/usr/include/ldap.h	/^	char	**ldapai_extensions;		\/* names of API extensions *\/$/;"	m	struct:ldapapiinfo	access:public
ldapapiinfo::ldapai_info_version	/usr/include/ldap.h	/^	int		ldapai_info_version;		\/* version of LDAPAPIInfo *\/$/;"	m	struct:ldapapiinfo	access:public
ldapapiinfo::ldapai_protocol_version	/usr/include/ldap.h	/^	int		ldapai_protocol_version;	\/* highest LDAP version supported *\/$/;"	m	struct:ldapapiinfo	access:public
ldapapiinfo::ldapai_vendor_name	/usr/include/ldap.h	/^	char	*ldapai_vendor_name;		\/* name of supplier *\/$/;"	m	struct:ldapapiinfo	access:public
ldapapiinfo::ldapai_vendor_version	/usr/include/ldap.h	/^	int		ldapai_vendor_version;		\/* supplier-specific version * 100 *\/$/;"	m	struct:ldapapiinfo	access:public
ldapcontrol	/usr/include/ldap.h	/^typedef struct ldapcontrol {$/;"	s
ldapcontrol::ldctl_iscritical	/usr/include/ldap.h	/^	char			ldctl_iscritical;	\/* criticality *\/$/;"	m	struct:ldapcontrol	access:public
ldapcontrol::ldctl_oid	/usr/include/ldap.h	/^	char *			ldctl_oid;			\/* numericoid of control *\/$/;"	m	struct:ldapcontrol	access:public
ldapcontrol::ldctl_value	/usr/include/ldap.h	/^	struct berval	ldctl_value;		\/* encoded value of control *\/$/;"	m	struct:ldapcontrol	typeref:struct:ldapcontrol::berval	access:public
ldapmod	/usr/include/ldap.h	/^typedef struct ldapmod {$/;"	s
ldapmod::mod_op	/usr/include/ldap.h	/^	int		mod_op;$/;"	m	struct:ldapmod	access:public
ldapmod::mod_type	/usr/include/ldap.h	/^	char		*mod_type;$/;"	m	struct:ldapmod	access:public
ldapmod::mod_vals	/usr/include/ldap.h	/^	} mod_vals;$/;"	m	struct:ldapmod	typeref:union:ldapmod::mod_vals_u	access:public
ldapmod::mod_vals_u	/usr/include/ldap.h	/^	union mod_vals_u {$/;"	u	struct:ldapmod	access:public
ldapmod::mod_vals_u::modv_bvals	/usr/include/ldap.h	/^		struct berval	**modv_bvals;$/;"	m	union:ldapmod::mod_vals_u	typeref:struct:ldapmod::mod_vals_u::berval	access:public
ldapmod::mod_vals_u::modv_strvals	/usr/include/ldap.h	/^		char		**modv_strvals;$/;"	m	union:ldapmod::mod_vals_u	access:public
ldapsortkey	/usr/include/ldap.h	/^typedef struct ldapsortkey {$/;"	s
ldapsortkey::attributeType	/usr/include/ldap.h	/^	char *attributeType;$/;"	m	struct:ldapsortkey	access:public
ldapsortkey::orderingRule	/usr/include/ldap.h	/^	char *orderingRule;$/;"	m	struct:ldapsortkey	access:public
ldapsortkey::reverseOrder	/usr/include/ldap.h	/^	int reverseOrder;$/;"	m	struct:ldapsortkey	access:public
ldapvlvinfo	/usr/include/ldap.h	/^typedef struct ldapvlvinfo {$/;"	s
ldapvlvinfo::ldvlv_after_count	/usr/include/ldap.h	/^    ber_int_t ldvlv_after_count;$/;"	m	struct:ldapvlvinfo	access:public
ldapvlvinfo::ldvlv_attrvalue	/usr/include/ldap.h	/^    struct berval *	ldvlv_attrvalue;$/;"	m	struct:ldapvlvinfo	typeref:struct:ldapvlvinfo::berval	access:public
ldapvlvinfo::ldvlv_before_count	/usr/include/ldap.h	/^    ber_int_t ldvlv_before_count;$/;"	m	struct:ldapvlvinfo	access:public
ldapvlvinfo::ldvlv_context	/usr/include/ldap.h	/^    struct berval *	ldvlv_context;$/;"	m	struct:ldapvlvinfo	typeref:struct:ldapvlvinfo::berval	access:public
ldapvlvinfo::ldvlv_count	/usr/include/ldap.h	/^    ber_int_t ldvlv_count;$/;"	m	struct:ldapvlvinfo	access:public
ldapvlvinfo::ldvlv_extradata	/usr/include/ldap.h	/^    void *			ldvlv_extradata;$/;"	m	struct:ldapvlvinfo	access:public
ldapvlvinfo::ldvlv_offset	/usr/include/ldap.h	/^    ber_int_t ldvlv_offset;$/;"	m	struct:ldapvlvinfo	access:public
ldapvlvinfo::ldvlv_version	/usr/include/ldap.h	/^	ber_int_t ldvlv_version;$/;"	m	struct:ldapvlvinfo	access:public
ldctl_iscritical	/usr/include/ldap.h	/^	char			ldctl_iscritical;	\/* criticality *\/$/;"	m	struct:ldapcontrol	access:public
ldctl_oid	/usr/include/ldap.h	/^	char *			ldctl_oid;			\/* numericoid of control *\/$/;"	m	struct:ldapcontrol	access:public
ldctl_value	/usr/include/ldap.h	/^	struct berval	ldctl_value;		\/* encoded value of control *\/$/;"	m	struct:ldapcontrol	typeref:struct:ldapcontrol::berval	access:public
ldiv_t	/usr/include/stdlib.h	/^} ldiv_t;$/;"	t	typeref:struct:__anon110
ldvlv_after_count	/usr/include/ldap.h	/^    ber_int_t ldvlv_after_count;$/;"	m	struct:ldapvlvinfo	access:public
ldvlv_attrvalue	/usr/include/ldap.h	/^    struct berval *	ldvlv_attrvalue;$/;"	m	struct:ldapvlvinfo	typeref:struct:ldapvlvinfo::berval	access:public
ldvlv_before_count	/usr/include/ldap.h	/^    ber_int_t ldvlv_before_count;$/;"	m	struct:ldapvlvinfo	access:public
ldvlv_context	/usr/include/ldap.h	/^    struct berval *	ldvlv_context;$/;"	m	struct:ldapvlvinfo	typeref:struct:ldapvlvinfo::berval	access:public
ldvlv_count	/usr/include/ldap.h	/^    ber_int_t ldvlv_count;$/;"	m	struct:ldapvlvinfo	access:public
ldvlv_extradata	/usr/include/ldap.h	/^    void *			ldvlv_extradata;$/;"	m	struct:ldapvlvinfo	access:public
ldvlv_offset	/usr/include/ldap.h	/^    ber_int_t ldvlv_offset;$/;"	m	struct:ldapvlvinfo	access:public
ldvlv_version	/usr/include/ldap.h	/^	ber_int_t ldvlv_version;$/;"	m	struct:ldapvlvinfo	access:public
leaf	/usr/include/search.h	/^	leaf$/;"	e	enum:__anon106
left	/usr/include/form.h	/^  struct typenode *	left;			\/* ptr to operand for | *\/$/;"	m	struct:typenode	typeref:struct:typenode::typenode	access:public
left	/usr/include/menu.h	/^  struct tagITEM *left;       \/* neighbor items                            *\/$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
len	/usr/include/nameser.h	/^        int len;$/;"	m	struct:ns_tsig_key	access:public
length	/usr/include/dns_util.h	/^	uint16_t length;$/;"	m	struct:__anon24	access:public
length	/usr/include/mecab.h	/^  unsigned short               length;$/;"	m	struct:mecab_learner_node_t	access:public
length	/usr/include/mecab.h	/^  unsigned short        length; \/* length of morph *\/$/;"	m	struct:mecab_node_t	access:public
length	/usr/include/menu.h	/^  unsigned short length;$/;"	m	struct:__anon76	access:public
length	/usr/include/tcl.h	/^    int length;			\/* Number of non-NULL characters in the$/;"	m	struct:Tcl_DString	access:public
length	/usr/include/tcl.h	/^    int length;			\/* The number of bytes at *bytes, not$/;"	m	struct:Tcl_Obj	access:public
level	/usr/include/ftw.h	/^	int level;$/;"	m	struct:FTW	access:public
lfind	/usr/include/search.h	/^void	*lfind(const void *, const void *, size_t *, size_t,$/;"	p	signature:(const void *, const void *, size_t *, size_t, int (*)(const void *, const void *))
libcharset_set_relocation_prefix	/usr/include/libcharset.h	/^extern void libcharset_set_relocation_prefix (const char *orig_prefix,$/;"	p	signature:(const char *orig_prefix, const char *curr_prefix)
libiconv_set_relocation_prefix	/usr/include/iconv.h	/^void libiconv_set_relocation_prefix (const char * \/*orig_prefix*\/,$/;"	p	signature:(const char * , const char * )
libversion	/usr/include/sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	access:public
libversion_number	/usr/include/sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	access:public
limit	/usr/include/sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
line	/usr/include/tcpd.h	/^    int     line;			\/* current line *\/$/;"	m	struct:tcpd_context	access:public
line	/usr/include/term_entry.h	/^	    long		line;$/;"	m	struct:entry::__anon121	access:public
linefeed_if_not_lf	/usr/include/term.h	/^#define linefeed_if_not_lf /;"	d
linefeed_is_newline	/usr/include/term.h	/^#define linefeed_is_newline /;"	d
lineinfo	/usr/include/histedit.h	/^typedef struct lineinfo {$/;"	s
lineinfo::buffer	/usr/include/histedit.h	/^	const char	*buffer;$/;"	m	struct:lineinfo	access:public
lineinfo::cursor	/usr/include/histedit.h	/^	const char	*cursor;$/;"	m	struct:lineinfo	access:public
lineinfo::lastchar	/usr/include/histedit.h	/^	const char	*lastchar;$/;"	m	struct:lineinfo	access:public
lineno	/usr/include/FlexLexer.h	/^	int lineno() const		{ return yylineno; }$/;"	f	class:FlexLexer	access:public	signature:() const
lines	/usr/include/term.h	/^#define lines /;"	d
lines_of_memory	/usr/include/term.h	/^#define lines_of_memory /;"	d
linespace	/usr/include/tk.h	/^    int linespace;		\/* The sum of the ascent and descent. How far$/;"	m	struct:Tk_FontMetrics	access:public
link	/usr/include/form.h	/^  struct fieldnode *	link;		\/* linked field chain		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::fieldnode	access:public
link	/usr/include/term_entry.h	/^	    struct entry	*link;$/;"	m	struct:entry::__anon121	typeref:struct:entry::__anon121::entry	access:public
link	/usr/include/unistd.h	/^int	 link(const char *, const char *);$/;"	p	signature:(const char *, const char *)
linkProc	/usr/include/tcl.h	/^    Tcl_FSLinkProc *linkProc;	\/* Function to process a 'Tcl_FSLink()' call.$/;"	m	struct:Tcl_Filesystem	access:public
listVolumesProc	/usr/include/tcl.h	/^    Tcl_FSListVolumesProc *listVolumesProc;$/;"	m	struct:Tcl_Filesystem	access:public
listen_sock	/usr/include/fcgiapp.h	/^	int listen_sock;$/;"	m	struct:FCGX_Request	access:public
ll_host	/usr/include/utmp.h	/^	char	ll_host[UT_HOSTSIZE];$/;"	m	struct:lastlog	access:public
ll_host	/usr/include/utmpx.h	/^	char ll_host[_UTX_HOSTSIZE];	\/* host name *\/$/;"	m	struct:lastlogx	access:public
ll_line	/usr/include/utmp.h	/^	char	ll_line[UT_LINESIZE];$/;"	m	struct:lastlog	access:public
ll_line	/usr/include/utmpx.h	/^	char ll_line[_UTX_LINESIZE];	\/* tty name *\/$/;"	m	struct:lastlogx	access:public
ll_time	/usr/include/utmp.h	/^	time_t	ll_time;$/;"	m	struct:lastlog	access:public
ll_tv	/usr/include/utmpx.h	/^	struct timeval ll_tv;		\/* time entry was created *\/$/;"	m	struct:lastlogx	typeref:struct:lastlogx::timeval	access:public
llabs	/usr/include/stdlib.h	/^	 llabs(long long);$/;"	p	signature:(long long)
lldiv	/usr/include/stdlib.h	/^lldiv_t	 lldiv(long long, long long);$/;"	p	signature:(long long, long long)
lldiv_t	/usr/include/stdlib.h	/^} lldiv_t;$/;"	t	typeref:struct:__anon111
llink	/usr/include/search.h	/^	struct node  *llink, *rlink;$/;"	m	struct:node	typeref:struct:node::node	access:public
lnext	/usr/include/mecab.h	/^  struct mecab_learner_path_t*  lnext;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_path_t	access:public
lnext	/usr/include/mecab.h	/^  struct mecab_path_t* lnext;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_path_t	access:public
lnode	/usr/include/mecab.h	/^  struct mecab_learner_node_t*  lnode;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_node_t	access:public
lnode	/usr/include/mecab.h	/^  struct mecab_node_t* lnode;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_node_t	access:public
loadFileProc	/usr/include/tcl.h	/^    Tcl_FSLoadFileProc *loadFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
loc_aton	/usr/include/resolv.h	/^#define loc_aton	/;"	d
loc_aton	/usr/include/resolv.h	/^int		loc_aton __P((const char *ascii, u_char *binary));$/;"	p	signature:(const char *ascii, u_char *binary)
loc_ntoa	/usr/include/resolv.h	/^#define loc_ntoa	/;"	d
loc_ntoa	/usr/include/resolv.h	/^const char *	loc_ntoa __P((const u_char *binary, char *ascii));$/;"	p	signature:(const u_char *binary, char *ascii)
locale_charset	/usr/include/localcharset.h	/^extern const char * locale_charset (void);$/;"	p	signature:(void)
locale_t	/usr/include/xlocale.h	/^typedef struct _xlocale *		locale_t;$/;"	t	typeref:struct:_xlocale
localeconv	/usr/include/_locale.h	/^struct lconv	*localeconv(void);$/;"	p	signature:(void)
localeconv_l	/usr/include/xlocale.h	/^struct lconv *	localeconv_l(locale_t);$/;"	p	signature:(locale_t)
localtime	/usr/include/time.h	/^struct tm *localtime(const time_t *);$/;"	p	signature:(const time_t *)
localtime_r	/usr/include/time.h	/^struct tm *localtime_r(const time_t * __restrict, struct tm * __restrict);$/;"	p	signature:(const time_t * __restrict, struct tm * __restrict)
lockf	/usr/include/unistd.h	/^int	 lockf(int, int, off_t) __DARWIN_ALIAS_C(lockf);$/;"	v
login_tty	/usr/include/util.h	/^int	login_tty(int);$/;"	p	signature:(int)
long64	/usr/include/tclTomMath.h	/^      typedef signed __int64     long64;$/;"	t
long64	/usr/include/tclTomMath.h	/^      typedef signed long long   long64;$/;"	t
long64	/usr/include/tclTomMath.h	/^   typedef signed long long   long64;$/;"	t
longValue	/usr/include/tcl.h	/^	long longValue;		\/*   - an long integer value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
longitude	/usr/include/dns_util.h	/^	uint32_t longitude;$/;"	m	struct:__anon39	access:public
lorder	/usr/include/db.h	/^	int		lorder;		\/* byte order *\/$/;"	m	struct:__anon13	access:public
lorder	/usr/include/db.h	/^	int		lorder;		\/* byte order *\/$/;"	m	struct:__anon15	access:public
lorder	/usr/include/db.h	/^	int	lorder;		\/* byte order *\/$/;"	m	struct:__anon14	access:public
lostSlaveProc	/usr/include/tk.h	/^    Tk_GeomLostSlaveProc *lostSlaveProc;$/;"	m	struct:Tk_GeomMgr	access:public
lpath	/usr/include/mecab.h	/^  struct mecab_learner_path_t *lpath;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_path_t	access:public
lpath	/usr/include/mecab.h	/^  struct mecab_path_t  *lpath;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_path_t	access:public
lpi_changes_res	/usr/include/term.h	/^#define lpi_changes_res /;"	d
lqh	/usr/include/mpool.h	/^	TAILQ_HEAD(_lqh, _bkt) lqh;	\/* lru queue head *\/$/;"	m	struct:MPOOL	access:public
lrand48	/usr/include/stdlib.h	/^long	 lrand48(void);$/;"	p	signature:(void)
ls_attrs	/usr/include/ldap.h	/^	char				**ls_attrs;$/;"	m	struct:ldap_sync_t	access:public
ls_base	/usr/include/ldap.h	/^	char				*ls_base;$/;"	m	struct:ldap_sync_t	access:public
ls_cookie	/usr/include/ldap.h	/^	struct berval			ls_cookie;$/;"	m	struct:ldap_sync_t	typeref:struct:ldap_sync_t::berval	access:public
ls_filter	/usr/include/ldap.h	/^	char				*ls_filter;$/;"	m	struct:ldap_sync_t	access:public
ls_intermediate	/usr/include/ldap.h	/^	ldap_sync_intermediate_f	ls_intermediate;$/;"	m	struct:ldap_sync_t	access:public
ls_ld	/usr/include/ldap.h	/^	LDAP				*ls_ld;$/;"	m	struct:ldap_sync_t	access:public
ls_msgid	/usr/include/ldap.h	/^	int				ls_msgid;$/;"	m	struct:ldap_sync_t	access:public
ls_private	/usr/include/ldap.h	/^	void				*ls_private;$/;"	m	struct:ldap_sync_t	access:public
ls_refreshPhase	/usr/include/ldap.h	/^	ldap_sync_refresh_t		ls_refreshPhase;$/;"	m	struct:ldap_sync_t	access:public
ls_reloadHint	/usr/include/ldap.h	/^	int				ls_reloadHint;$/;"	m	struct:ldap_sync_t	access:public
ls_scope	/usr/include/ldap.h	/^	int				ls_scope;$/;"	m	struct:ldap_sync_t	access:public
ls_search_entry	/usr/include/ldap.h	/^	ldap_sync_search_entry_f	ls_search_entry;$/;"	m	struct:ldap_sync_t	access:public
ls_search_reference	/usr/include/ldap.h	/^	ldap_sync_search_reference_f	ls_search_reference;$/;"	m	struct:ldap_sync_t	access:public
ls_search_result	/usr/include/ldap.h	/^	ldap_sync_search_result_f	ls_search_result;$/;"	m	struct:ldap_sync_t	access:public
ls_sizelimit	/usr/include/ldap.h	/^	int				ls_sizelimit;$/;"	m	struct:ldap_sync_t	access:public
ls_timelimit	/usr/include/ldap.h	/^	int				ls_timelimit;$/;"	m	struct:ldap_sync_t	access:public
ls_timeout	/usr/include/ldap.h	/^	int				ls_timeout;$/;"	m	struct:ldap_sync_t	access:public
lsda	/usr/include/libunwind.h	/^    unw_word_t    lsda;             \/* address of language specific data area, or zero if not used *\/$/;"	m	struct:unw_proc_info_t	access:public
lsearch	/usr/include/search.h	/^void	*lsearch(const void *, void *, size_t *, size_t,$/;"	p	signature:(const void *, void *, size_t *, size_t, int (*)(const void *, const void *))
lseek	/usr/include/unistd.h	/^off_t	 lseek(int, off_t, int);$/;"	p	signature:(int, off_t, int)
lsei_name	/usr/include/ldap_schema.h	/^	char *lsei_name;$/;"	m	struct:ldap_schema_extension_item	access:public
lsei_values	/usr/include/ldap_schema.h	/^	char **lsei_values;$/;"	m	struct:ldap_schema_extension_item	access:public
lsize	/usr/include/mecab.h	/^  unsigned int                    lsize;$/;"	m	struct:mecab_dictionary_info_t	access:public
lstatProc	/usr/include/tcl.h	/^    Tcl_FSLstatProc *lstatProc;	\/* Function to process a 'Tcl_FSLstat()' call.$/;"	m	struct:Tcl_Filesystem	access:public
lt_dladdsearchdir	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladdsearchdir	 (const char *search_dir);$/;"	p	signature:(const char *search_dir)
lt_dladvise_destroy	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladvise_destroy  (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_ext	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladvise_ext	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_global	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladvise_global   (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_init	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladvise_init	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_local	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladvise_local	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_resident	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dladvise_resident (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dlcaller_get_data	/usr/include/ltdl.h	/^LT_SCOPE void *	lt_dlcaller_get_data  (lt_dlinterface_id key,$/;"	p	signature:(lt_dlinterface_id key, lt_dlhandle handle)
lt_dlcaller_set_data	/usr/include/ltdl.h	/^LT_SCOPE void *	lt_dlcaller_set_data  (lt_dlinterface_id key,$/;"	p	signature:(lt_dlinterface_id key, lt_dlhandle handle, void *data)
lt_dlclose	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlclose		(lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlerror	/usr/include/ltdl.h	/^LT_SCOPE const char *lt_dlerror		(void);$/;"	p	signature:(void)
lt_dlexit	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlexit		(void);$/;"	p	signature:(void)
lt_dlforeachfile	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlforeachfile	 ($/;"	p	signature:( const char *search_path, int (*func) (const char *filename, void *data), void *data)
lt_dlgetinfo	/usr/include/ltdl.h	/^LT_SCOPE const lt_dlinfo *lt_dlgetinfo	    (lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlgetsearchpath	/usr/include/ltdl.h	/^LT_SCOPE const char *lt_dlgetsearchpath	 (void);$/;"	p	signature:(void)
lt_dlhandle	/usr/include/ltdl.h	/^typedef	struct lt__handle *lt_dlhandle;	\/* A loaded module.  *\/$/;"	t	typeref:struct:lt__handle
lt_dlhandle_fetch	/usr/include/ltdl.h	/^LT_SCOPE lt_dlhandle	lt_dlhandle_fetch   (lt_dlinterface_id iface,$/;"	p	signature:(lt_dlinterface_id iface, const char *module_name)
lt_dlhandle_interface	/usr/include/ltdl.h	/^typedef int lt_dlhandle_interface (lt_dlhandle handle, const char *id_string);$/;"	t
lt_dlhandle_iterate	/usr/include/ltdl.h	/^LT_SCOPE lt_dlhandle	lt_dlhandle_iterate (lt_dlinterface_id iface,$/;"	p	signature:(lt_dlinterface_id iface, lt_dlhandle place)
lt_dlhandle_map	/usr/include/ltdl.h	/^LT_SCOPE int		lt_dlhandle_map	    (lt_dlinterface_id iface,$/;"	p	signature:(lt_dlinterface_id iface, int (*func) (lt_dlhandle handle, void *data), void *data)
lt_dlinfo	/usr/include/ltdl.h	/^} lt_dlinfo;$/;"	t	typeref:struct:__anon75
lt_dlinit	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlinit		(void);$/;"	p	signature:(void)
lt_dlinsertsearchdir	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlinsertsearchdir (const char *before,$/;"	p	signature:(const char *before, const char *search_dir)
lt_dlinterface_free	/usr/include/ltdl.h	/^LT_SCOPE void	lt_dlinterface_free (lt_dlinterface_id key);$/;"	p	signature:(lt_dlinterface_id key)
lt_dlinterface_id	/usr/include/ltdl.h	/^typedef void * lt_dlinterface_id;$/;"	t
lt_dlinterface_register	/usr/include/ltdl.h	/^LT_SCOPE lt_dlinterface_id lt_dlinterface_register (const char *id_string,$/;"	p	signature:(const char *id_string, lt_dlhandle_interface *iface)
lt_dlisresident	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlisresident	(lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlmakeresident	/usr/include/ltdl.h	/^LT_SCOPE int	    lt_dlmakeresident	(lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlopen	/usr/include/ltdl.h	/^LT_SCOPE lt_dlhandle lt_dlopen		(const char *filename);$/;"	p	signature:(const char *filename)
lt_dlopenadvise	/usr/include/ltdl.h	/^LT_SCOPE lt_dlhandle lt_dlopenadvise	(const char *filename,$/;"	p	signature:(const char *filename, lt_dladvise advise)
lt_dlopenext	/usr/include/ltdl.h	/^LT_SCOPE lt_dlhandle lt_dlopenext	(const char *filename);$/;"	p	signature:(const char *filename)
lt_dlpreload	/usr/include/ltdl.h	/^LT_SCOPE int	lt_dlpreload	     (const lt_dlsymlist *preloaded);$/;"	p	signature:(const lt_dlsymlist *preloaded)
lt_dlpreload_callback_func	/usr/include/ltdl.h	/^typedef int lt_dlpreload_callback_func (lt_dlhandle handle);$/;"	t
lt_dlpreload_default	/usr/include/ltdl.h	/^LT_SCOPE int	lt_dlpreload_default (const lt_dlsymlist *preloaded);$/;"	p	signature:(const lt_dlsymlist *preloaded)
lt_dlpreload_open	/usr/include/ltdl.h	/^LT_SCOPE int	lt_dlpreload_open    (const char *originator,$/;"	p	signature:(const char *originator, lt_dlpreload_callback_func *func)
lt_dlsetsearchpath	/usr/include/ltdl.h	/^LT_SCOPE int 	    lt_dlsetsearchpath	 (const char *search_path);$/;"	p	signature:(const char *search_path)
lt_dlsym	/usr/include/ltdl.h	/^LT_SCOPE void *	    lt_dlsym		(lt_dlhandle handle, const char *name);$/;"	p	signature:(lt_dlhandle handle, const char *name)
lt_dlsymlist	/usr/include/ltdl.h	/^} lt_dlsymlist;$/;"	t	typeref:struct:__anon74
lt_preloaded_symbols	/usr/include/ltdl.h	/^#define lt_preloaded_symbols	/;"	d
lt_ptr	/usr/include/ltdl.h	/^#define lt_ptr /;"	d
ltm_prime_callback	/usr/include/tclTomMath.h	/^typedef int ltm_prime_callback(unsigned char *dst, int len, void *dat);$/;"	t
ltm_prime_tab	/usr/include/tclTomMath.h	/^MODULE_SCOPE const mp_digit ltm_prime_tab[];$/;"	v
lud_attrs	/usr/include/ldap.h	/^	char	**lud_attrs;$/;"	m	struct:ldap_url_desc	access:public
lud_crit_exts	/usr/include/ldap.h	/^	int		lud_crit_exts;$/;"	m	struct:ldap_url_desc	access:public
lud_dn	/usr/include/ldap.h	/^	char	*lud_dn;$/;"	m	struct:ldap_url_desc	access:public
lud_exts	/usr/include/ldap.h	/^	char	**lud_exts;$/;"	m	struct:ldap_url_desc	access:public
lud_filter	/usr/include/ldap.h	/^	char	*lud_filter;$/;"	m	struct:ldap_url_desc	access:public
lud_host	/usr/include/ldap.h	/^	char	*lud_host;$/;"	m	struct:ldap_url_desc	access:public
lud_next	/usr/include/ldap.h	/^	struct ldap_url_desc *lud_next;$/;"	m	struct:ldap_url_desc	typeref:struct:ldap_url_desc::ldap_url_desc	access:public
lud_port	/usr/include/ldap.h	/^	int		lud_port;$/;"	m	struct:ldap_url_desc	access:public
lud_scheme	/usr/include/ldap.h	/^	char	*lud_scheme;$/;"	m	struct:ldap_url_desc	access:public
lud_scope	/usr/include/ldap.h	/^	int		lud_scope;$/;"	m	struct:ldap_url_desc	access:public
macCreator	/usr/include/tcl.h	/^    Tcl_Obj *macCreator;	\/* Acceptable mac creator *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
macType	/usr/include/tcl.h	/^    Tcl_Obj *macType;		\/* Acceptable mac type *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
mach_port_t	/usr/include/pthread.h	/^typedef __darwin_mach_port_t		mach_port_t;$/;"	t
magic	/usr/include/tclDecls.h	/^    int magic;$/;"	m	struct:TclStubs	access:public
magic	/usr/include/tclPlatDecls.h	/^    int magic;$/;"	m	struct:TclPlatStubs	access:public
magic	/usr/include/tclTomMathDecls.h	/^    int magic;$/;"	m	struct:TclTomMathStubs	access:public
magic	/usr/include/tkDecls.h	/^    int magic;$/;"	m	struct:TkStubs	access:public
magic	/usr/include/tkIntXlibDecls.h	/^    int magic;$/;"	m	struct:TkIntXlibStubs	access:public
magic	/usr/include/tkPlatDecls.h	/^    int magic;$/;"	m	struct:TkPlatStubs	access:public
magic_cookie_glitch	/usr/include/term.h	/^#define magic_cookie_glitch /;"	d
magic_cookie_glitch_ul	/usr/include/term.h	/^#define magic_cookie_glitch_ul /;"	d
mailbox	/usr/include/dns_util.h	/^	char *mailbox;$/;"	m	struct:__anon34	access:public
major	/usr/include/expat.h	/^  int major;$/;"	m	struct:__anon51	access:public
makearg	/usr/include/form.h	/^  void* (*makearg)(va_list *);			\/* make fieldtype arg	*\/$/;"	m	struct:typenode	access:public
makecontext	/usr/include/ucontext.h	/^void makecontext(ucontext_t *, void (*)(), int, ...);$/;"	p	signature:(ucontext_t *, void (*)(), int, ...)
malloc	/usr/include/sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	access:public
malloc	/usr/include/stdlib.h	/^void	*malloc(size_t);$/;"	p	signature:(size_t)
malloc_fcn	/usr/include/expat.h	/^  void *(*malloc_fcn)(size_t size);$/;"	m	struct:__anon48	access:public
map	/usr/include/dns_util.h	/^	uint8_t *map;$/;"	m	struct:__anon33	access:public
map	/usr/include/expat.h	/^  int map[256];$/;"	m	struct:__anon49	access:public
map_fd	/usr/include/libc.h	/^extern kern_return_t map_fd(int fd, vm_offset_t offset,$/;"	p	signature:(int fd, vm_offset_t offset, vm_offset_t *addr, boolean_t find_space, vm_size_t numbytes)
maplength	/usr/include/dns_util.h	/^	uint32_t maplength;$/;"	m	struct:__anon33	access:public
mark	/usr/include/menu.h	/^  char          *mark;                  \/* Pointer to marker string        *\/$/;"	m	struct:tagMENU	access:public
marklen	/usr/include/menu.h	/^  short          marklen;               \/* Length of mark, if any          *\/$/;"	m	struct:tagMENU	access:public
mask	/usr/include/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	m	struct:_ns_flagdata	access:public
mask	/usr/include/resolv.h	/^		u_int32_t	mask;$/;"	m	struct:__res_state::__anon98	access:public
mask	/usr/include/tcl.h	/^    int mask;			\/* Mask value used in hashing function. *\/$/;"	m	struct:Tcl_HashTable	access:public
matchInDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSMatchInDirectoryProc *matchInDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
matches	/usr/include/tcl.h	/^    Tcl_RegExpIndices *matches;	\/* Array of nsubs match offset pairs. *\/$/;"	m	struct:Tcl_RegExpInfo	access:public
max	/usr/include/fcgimisc.h	/^#define max(/;"	d
max_attributes	/usr/include/term.h	/^#define max_attributes /;"	d
max_colors	/usr/include/term.h	/^#define max_colors /;"	d
max_micro_address	/usr/include/term.h	/^#define max_micro_address /;"	d
max_micro_jump	/usr/include/term.h	/^#define max_micro_jump /;"	d
max_pairs	/usr/include/term.h	/^#define max_pairs /;"	d
maxcache	/usr/include/mpool.h	/^	pgno_t	maxcache;		\/* max number of cached pages *\/$/;"	m	struct:MPOOL	access:public
maxfield	/usr/include/form.h	/^  short			maxfield;	\/* number of fields		*\/$/;"	m	struct:formnode	access:public
maxgrow	/usr/include/form.h	/^  int			maxgrow;	\/* maximum field growth		*\/$/;"	m	struct:fieldnode	access:public
maximum_windows	/usr/include/term.h	/^#define maximum_windows /;"	d
maxkeypage	/usr/include/db.h	/^	int		maxkeypage;	\/* maximum keys per page *\/$/;"	m	struct:__anon13	access:public
maxpage	/usr/include/form.h	/^  short			maxpage;	\/* number of pages		*\/$/;"	m	struct:formnode	access:public
mb_to_uc_fallback	/usr/include/iconv.h	/^  iconv_unicode_mb_to_uc_fallback mb_to_uc_fallback;$/;"	m	struct:iconv_fallbacks	access:public
mb_to_wc_fallback	/usr/include/iconv.h	/^  iconv_wchar_mb_to_wc_fallback mb_to_wc_fallback;$/;"	m	struct:iconv_fallbacks	access:public
mblen	/usr/include/stdlib.h	/^int	 mblen(const char *, size_t);$/;"	p	signature:(const char *, size_t)
mbr_check_membership	/usr/include/membership.h	/^int mbr_check_membership(uuid_t user, uuid_t group, int* ismember);$/;"	p	signature:(uuid_t user, uuid_t group, int* ismember)
mbr_check_service_membership	/usr/include/membership.h	/^int mbr_check_service_membership(const uuid_t user, const char *servicename, $/;"	p	signature:(const uuid_t user, const char *servicename, int *ismember)
mbr_gid_to_uuid	/usr/include/membership.h	/^int mbr_gid_to_uuid(gid_t gid, uuid_t uu);$/;"	p	signature:(gid_t gid, uuid_t uu)
mbr_identifier_to_uuid	/usr/include/membership.h	/^int mbr_identifier_to_uuid(int id_type, const void *identifier, size_t identifier_size,$/;"	p	signature:(int id_type, const void *identifier, size_t identifier_size, uuid_t uu)
mbr_sid_to_uuid	/usr/include/membership.h	/^int mbr_sid_to_uuid(const nt_sid_t* sid, uuid_t uu);$/;"	p	signature:(const nt_sid_t* sid, uuid_t uu)
mbr_uid_to_uuid	/usr/include/membership.h	/^int mbr_uid_to_uuid(uid_t uid, uuid_t uu);$/;"	p	signature:(uid_t uid, uuid_t uu)
mbr_uuid_to_id	/usr/include/membership.h	/^int mbr_uuid_to_id(const uuid_t uu, id_t* uid_or_gid, int* id_type);$/;"	p	signature:(const uuid_t uu, id_t* uid_or_gid, int* id_type)
mbr_uuid_to_sid	/usr/include/membership.h	/^int mbr_uuid_to_sid(const uuid_t uu, nt_sid_t* sid);$/;"	p	signature:(const uuid_t uu, nt_sid_t* sid)
mbrlen	/usr/include/wchar.h	/^size_t	mbrlen(const char * __restrict, size_t, mbstate_t * __restrict);$/;"	p	signature:(const char * __restrict, size_t, mbstate_t * __restrict)
mbrtowc	/usr/include/wchar.h	/^size_t	mbrtowc(wchar_t * __restrict, const char * __restrict, size_t,$/;"	p	signature:(wchar_t * __restrict, const char * __restrict, size_t, mbstate_t * __restrict)
mbsinit	/usr/include/wchar.h	/^int	mbsinit(const mbstate_t *);$/;"	p	signature:(const mbstate_t *)
mbsnrtowcs	/usr/include/wchar.h	/^size_t	mbsnrtowcs(wchar_t * __restrict, const char ** __restrict, size_t,$/;"	p	signature:(wchar_t * __restrict, const char ** __restrict, size_t, size_t, mbstate_t * __restrict)
mbsrtowcs	/usr/include/wchar.h	/^size_t	mbsrtowcs(wchar_t * __restrict, const char ** __restrict, size_t,$/;"	p	signature:(wchar_t * __restrict, const char ** __restrict, size_t, mbstate_t * __restrict)
mbstate_t	/usr/include/wchar.h	/^typedef	__darwin_mbstate_t	mbstate_t;$/;"	t
mbstowcs	/usr/include/stdlib.h	/^size_t	 mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);$/;"	p	signature:(wchar_t * __restrict , const char * __restrict, size_t)
mbtowc	/usr/include/stdlib.h	/^int	 mbtowc(wchar_t * __restrict, const char * __restrict, size_t);$/;"	p	signature:(wchar_t * __restrict, const char * __restrict, size_t)
mecab_cost_train	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_cost_train(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_destroy	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN void          mecab_destroy(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_dict_gen	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_dict_gen(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_dict_index	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_dict_index(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_dictionary_info	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const mecab_dictionary_info_t* mecab_dictionary_info(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_dictionary_info_t	/usr/include/mecab.h	/^  typedef struct mecab_dictionary_info_t mecab_dictionary_info_t;$/;"	t	typeref:struct:mecab_dictionary_info_t
mecab_dictionary_info_t	/usr/include/mecab.h	/^struct mecab_dictionary_info_t {$/;"	s
mecab_dictionary_info_t::charset	/usr/include/mecab.h	/^  const char                     *charset;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::filename	/usr/include/mecab.h	/^  const char                     *filename;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::lsize	/usr/include/mecab.h	/^  unsigned int                    lsize;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::next	/usr/include/mecab.h	/^  struct mecab_dictionary_info_t *next;$/;"	m	struct:mecab_dictionary_info_t	typeref:struct:mecab_dictionary_info_t::mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::rsize	/usr/include/mecab.h	/^  unsigned int                    rsize;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::size	/usr/include/mecab.h	/^  unsigned int                    size;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::type	/usr/include/mecab.h	/^  int                             type;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_dictionary_info_t::version	/usr/include/mecab.h	/^  unsigned short                  version;$/;"	m	struct:mecab_dictionary_info_t	access:public
mecab_do	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_do (int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_format_node	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_format_node(mecab_t *mecab, const mecab_node_t *node);$/;"	p	signature:(mecab_t *mecab, const mecab_node_t *node)
mecab_get_all_morphs	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_get_all_morphs(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_get_lattice_level	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_get_lattice_level(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_get_partial	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_get_partial(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_get_theta	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN float         mecab_get_theta(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_learner_node_t	/usr/include/mecab.h	/^  typedef struct mecab_learner_node_t    mecab_learner_node_t;$/;"	t	typeref:struct:mecab_learner_node_t
mecab_learner_node_t	/usr/include/mecab.h	/^struct mecab_learner_node_t {$/;"	s
mecab_learner_node_t::alpha	/usr/include/mecab.h	/^  double                       alpha;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::anext	/usr/include/mecab.h	/^  struct mecab_learner_node_t *anext;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
mecab_learner_node_t::beta	/usr/include/mecab.h	/^  double                       beta;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::bnext	/usr/include/mecab.h	/^  struct mecab_learner_node_t *bnext;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
mecab_learner_node_t::char_type	/usr/include/mecab.h	/^  unsigned char                char_type;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::cost	/usr/include/mecab.h	/^  double                       cost;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::enext	/usr/include/mecab.h	/^  struct mecab_learner_node_t *enext;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
mecab_learner_node_t::feature	/usr/include/mecab.h	/^  const char                  *feature;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::fvector	/usr/include/mecab.h	/^  const int                    *fvector;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::id	/usr/include/mecab.h	/^  unsigned int                 id;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::isbest	/usr/include/mecab.h	/^  unsigned char                isbest;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::lcAttr	/usr/include/mecab.h	/^  unsigned short               lcAttr;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::length	/usr/include/mecab.h	/^  unsigned short               length;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::lpath	/usr/include/mecab.h	/^  struct mecab_learner_path_t *lpath;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_path_t	access:public
mecab_learner_node_t::next	/usr/include/mecab.h	/^  struct mecab_learner_node_t *next;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
mecab_learner_node_t::posid	/usr/include/mecab.h	/^  unsigned short               posid;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::prev	/usr/include/mecab.h	/^  struct mecab_learner_node_t *prev;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
mecab_learner_node_t::rcAttr	/usr/include/mecab.h	/^  unsigned short               rcAttr;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::rlength	/usr/include/mecab.h	/^  unsigned short               rlength;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::rpath	/usr/include/mecab.h	/^  struct mecab_learner_path_t *rpath;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_path_t	access:public
mecab_learner_node_t::stat	/usr/include/mecab.h	/^  unsigned char                stat;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::surface	/usr/include/mecab.h	/^  const char                  *surface;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::token	/usr/include/mecab.h	/^  struct mecab_token_t         *token;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_token_t	access:public
mecab_learner_node_t::wcost	/usr/include/mecab.h	/^  double                       wcost;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_node_t::wcost2	/usr/include/mecab.h	/^  short                        wcost2;$/;"	m	struct:mecab_learner_node_t	access:public
mecab_learner_path_t	/usr/include/mecab.h	/^  typedef struct mecab_learner_path_t    mecab_learner_path_t;$/;"	t	typeref:struct:mecab_learner_path_t
mecab_learner_path_t	/usr/include/mecab.h	/^struct mecab_learner_path_t {$/;"	s
mecab_learner_path_t::cost	/usr/include/mecab.h	/^  double                        cost;$/;"	m	struct:mecab_learner_path_t	access:public
mecab_learner_path_t::fvector	/usr/include/mecab.h	/^  const int                     *fvector;$/;"	m	struct:mecab_learner_path_t	access:public
mecab_learner_path_t::lnext	/usr/include/mecab.h	/^  struct mecab_learner_path_t*  lnext;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_path_t	access:public
mecab_learner_path_t::lnode	/usr/include/mecab.h	/^  struct mecab_learner_node_t*  lnode;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_node_t	access:public
mecab_learner_path_t::rnext	/usr/include/mecab.h	/^  struct mecab_learner_path_t*  rnext;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_path_t	access:public
mecab_learner_path_t::rnode	/usr/include/mecab.h	/^  struct mecab_learner_node_t*  rnode;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_node_t	access:public
mecab_nbest_init	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_nbest_init(mecab_t *mecab, const char *str);$/;"	p	signature:(mecab_t *mecab, const char *str)
mecab_nbest_init2	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_nbest_init2(mecab_t *mecab, const char *str, size_t len);$/;"	p	signature:(mecab_t *mecab, const char *str, size_t len)
mecab_nbest_next_tonode	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const mecab_node_t* mecab_nbest_next_tonode(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_nbest_next_tostr	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_nbest_next_tostr(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_nbest_next_tostr2	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN char*         mecab_nbest_next_tostr2(mecab_t *mecab, char *ostr, size_t olen);$/;"	p	signature:(mecab_t *mecab, char *ostr, size_t olen)
mecab_nbest_sparse_tostr	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_nbest_sparse_tostr(mecab_t *mecab, size_t N, const char *str);$/;"	p	signature:(mecab_t *mecab, size_t N, const char *str)
mecab_nbest_sparse_tostr2	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_nbest_sparse_tostr2(mecab_t *mecab, size_t N,$/;"	p	signature:(mecab_t *mecab, size_t N, const char *str, size_t len)
mecab_nbest_sparse_tostr3	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN char*         mecab_nbest_sparse_tostr3(mecab_t *mecab, size_t N,$/;"	p	signature:(mecab_t *mecab, size_t N, const char *str, size_t len, char *ostr, size_t olen)
mecab_new	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN mecab_t*      mecab_new(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_new2	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN mecab_t*      mecab_new2(const char *arg);$/;"	p	signature:(const char *arg)
mecab_node_t	/usr/include/mecab.h	/^  typedef struct mecab_node_t            mecab_node_t;$/;"	t	typeref:struct:mecab_node_t
mecab_node_t	/usr/include/mecab.h	/^struct mecab_node_t {$/;"	s
mecab_node_t::alpha	/usr/include/mecab.h	/^  float                 alpha;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::begin_node_list	/usr/include/mecab.h	/^  struct mecab_node_t **begin_node_list;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
mecab_node_t::beta	/usr/include/mecab.h	/^  float                 beta;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::bnext	/usr/include/mecab.h	/^  struct mecab_node_t  *bnext;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
mecab_node_t::char_type	/usr/include/mecab.h	/^  unsigned char         char_type;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::cost	/usr/include/mecab.h	/^  long                  cost;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::end_node_list	/usr/include/mecab.h	/^  struct mecab_node_t **end_node_list;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
mecab_node_t::enext	/usr/include/mecab.h	/^  struct mecab_node_t  *enext;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
mecab_node_t::feature	/usr/include/mecab.h	/^  const char           *feature;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::id	/usr/include/mecab.h	/^  unsigned int          id;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::isbest	/usr/include/mecab.h	/^  unsigned char         isbest;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::lcAttr	/usr/include/mecab.h	/^  unsigned short        lcAttr;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::length	/usr/include/mecab.h	/^  unsigned short        length; \/* length of morph *\/$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::lpath	/usr/include/mecab.h	/^  struct mecab_path_t  *lpath;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_path_t	access:public
mecab_node_t::next	/usr/include/mecab.h	/^  struct mecab_node_t  *next;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
mecab_node_t::posid	/usr/include/mecab.h	/^  unsigned short        posid;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::prev	/usr/include/mecab.h	/^  struct mecab_node_t  *prev;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
mecab_node_t::prob	/usr/include/mecab.h	/^  float                 prob;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::rcAttr	/usr/include/mecab.h	/^  unsigned short        rcAttr;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::rlength	/usr/include/mecab.h	/^  unsigned short        rlength; \/* real length of morph(include white space before the morph) *\/$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::rpath	/usr/include/mecab.h	/^  struct mecab_path_t  *rpath;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_path_t	access:public
mecab_node_t::sentence_length	/usr/include/mecab.h	/^  unsigned int          sentence_length; \/* it is avaialbe only when BOS node *\/$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::stat	/usr/include/mecab.h	/^  unsigned char         stat;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::surface	/usr/include/mecab.h	/^  const char           *surface;$/;"	m	struct:mecab_node_t	access:public
mecab_node_t::token	/usr/include/mecab.h	/^  struct mecab_token_t  *token;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_token_t	access:public
mecab_node_t::wcost	/usr/include/mecab.h	/^  short                 wcost;$/;"	m	struct:mecab_node_t	access:public
mecab_path_t	/usr/include/mecab.h	/^  typedef struct mecab_path_t            mecab_path_t;$/;"	t	typeref:struct:mecab_path_t
mecab_path_t	/usr/include/mecab.h	/^struct mecab_path_t {$/;"	s
mecab_path_t::cost	/usr/include/mecab.h	/^  int                  cost;$/;"	m	struct:mecab_path_t	access:public
mecab_path_t::lnext	/usr/include/mecab.h	/^  struct mecab_path_t* lnext;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_path_t	access:public
mecab_path_t::lnode	/usr/include/mecab.h	/^  struct mecab_node_t* lnode;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_node_t	access:public
mecab_path_t::prob	/usr/include/mecab.h	/^  float                prob;$/;"	m	struct:mecab_path_t	access:public
mecab_path_t::rnext	/usr/include/mecab.h	/^  struct mecab_path_t* rnext;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_path_t	access:public
mecab_path_t::rnode	/usr/include/mecab.h	/^  struct mecab_node_t* rnode;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_node_t	access:public
mecab_set_all_morphs	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN void          mecab_set_all_morphs(mecab_t *mecab, int all_morphs);$/;"	p	signature:(mecab_t *mecab, int all_morphs)
mecab_set_lattice_level	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN void          mecab_set_lattice_level(mecab_t *mecab, int level);$/;"	p	signature:(mecab_t *mecab, int level)
mecab_set_partial	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN void          mecab_set_partial(mecab_t *mecab, int partial);$/;"	p	signature:(mecab_t *mecab, int partial)
mecab_set_theta	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN void          mecab_set_theta(mecab_t *mecab, float theta);$/;"	p	signature:(mecab_t *mecab, float theta)
mecab_sparse_tonode	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const mecab_node_t* mecab_sparse_tonode(mecab_t *mecab, const char*);$/;"	p	signature:(mecab_t *mecab, const char*)
mecab_sparse_tonode2	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const mecab_node_t* mecab_sparse_tonode2(mecab_t *mecab, const char*, size_t);$/;"	p	signature:(mecab_t *mecab, const char*, size_t)
mecab_sparse_tostr	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_sparse_tostr(mecab_t *mecab, const char *str);$/;"	p	signature:(mecab_t *mecab, const char *str)
mecab_sparse_tostr2	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_sparse_tostr2(mecab_t *mecab, const char *str, size_t len);$/;"	p	signature:(mecab_t *mecab, const char *str, size_t len)
mecab_sparse_tostr3	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN char*         mecab_sparse_tostr3(mecab_t *mecab, const char *str, size_t len,$/;"	p	signature:(mecab_t *mecab, const char *str, size_t len, char *ostr, size_t olen)
mecab_strerror	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_strerror(mecab_t *mecab);$/;"	p	signature:(mecab_t *mecab)
mecab_system_eval	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_system_eval(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_t	/usr/include/mecab.h	/^  typedef struct mecab_t                 mecab_t;$/;"	t	typeref:struct:mecab_t
mecab_test_gen	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN int           mecab_test_gen(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
mecab_token_t	/usr/include/mecab.h	/^  typedef struct mecab_token_t           mecab_token_t;$/;"	t	typeref:struct:mecab_token_t
mecab_token_t	/usr/include/mecab.h	/^struct mecab_token_t {$/;"	s
mecab_token_t::compound	/usr/include/mecab.h	/^  unsigned int   compound;  \/* reserved for noun compound *\/$/;"	m	struct:mecab_token_t	access:public
mecab_token_t::feature	/usr/include/mecab.h	/^  unsigned int   feature;$/;"	m	struct:mecab_token_t	access:public
mecab_token_t::lcAttr	/usr/include/mecab.h	/^  unsigned short lcAttr;$/;"	m	struct:mecab_token_t	access:public
mecab_token_t::posid	/usr/include/mecab.h	/^  unsigned short posid;$/;"	m	struct:mecab_token_t	access:public
mecab_token_t::rcAttr	/usr/include/mecab.h	/^  unsigned short rcAttr;$/;"	m	struct:mecab_token_t	access:public
mecab_token_t::wcost	/usr/include/mecab.h	/^  short wcost;$/;"	m	struct:mecab_token_t	access:public
mecab_version	/usr/include/mecab.h	/^  MECAB_DLL_EXTERN const char*   mecab_version();$/;"	p	signature:()
memccpy	/usr/include/string.h	/^void	*memccpy(void *, const void *, int, size_t);$/;"	p	signature:(void *, const void *, int, size_t)
memchr	/usr/include/string.h	/^void	*memchr(const void *, int, size_t);$/;"	p	signature:(const void *, int, size_t)
memcmp	/usr/include/string.h	/^int	 memcmp(const void *, const void *, size_t);$/;"	p	signature:(const void *, const void *, size_t)
memcpy	/usr/include/string.h	/^void	*memcpy(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
memmove	/usr/include/string.h	/^void	*memmove(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
memory_above	/usr/include/term.h	/^#define memory_above /;"	d
memory_below	/usr/include/term.h	/^#define memory_below /;"	d
memory_highwater	/usr/include/sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	access:public
memory_lock	/usr/include/term.h	/^#define memory_lock /;"	d
memory_unlock	/usr/include/term.h	/^#define memory_unlock /;"	d
memory_used	/usr/include/sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	access:public
memset	/usr/include/string.h	/^void	*memset(void *, int, size_t);$/;"	p	signature:(void *, int, size_t)
memset_pattern16	/usr/include/string.h	/^void     memset_pattern16(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
memset_pattern4	/usr/include/string.h	/^void     memset_pattern4(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
memset_pattern8	/usr/include/string.h	/^void     memset_pattern8(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
menuinit	/usr/include/menu.h	/^  Menu_Hook      menuinit;              \/* User hooks                      *\/$/;"	m	struct:tagMENU	access:public
menuterm	/usr/include/menu.h	/^  Menu_Hook      menuterm;$/;"	m	struct:tagMENU	access:public
mergesort	/usr/include/stdlib.h	/^int	 mergesort(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (*)(const void *, const void *))
mergesort_b	/usr/include/stdlib.h	/^int	 mergesort_b(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (^)(const void *, const void *))
messages	/usr/include/com_err.h	/^    const char * const * const messages;$/;"	m	struct:error_table	access:public
meta_off	/usr/include/term.h	/^#define meta_off /;"	d
meta_on	/usr/include/term.h	/^#define meta_on /;"	d
micro	/usr/include/expat.h	/^  int micro;$/;"	m	struct:__anon51	access:public
micro_char_size	/usr/include/term.h	/^#define micro_char_size /;"	d
micro_col_size	/usr/include/term.h	/^#define micro_col_size /;"	d
micro_column_address	/usr/include/term.h	/^#define micro_column_address /;"	d
micro_down	/usr/include/term.h	/^#define micro_down /;"	d
micro_left	/usr/include/term.h	/^#define micro_left /;"	d
micro_line_size	/usr/include/term.h	/^#define micro_line_size /;"	d
micro_right	/usr/include/term.h	/^#define micro_right /;"	d
micro_row_address	/usr/include/term.h	/^#define micro_row_address /;"	d
micro_up	/usr/include/term.h	/^#define micro_up /;"	d
min	/usr/include/fcgimisc.h	/^#define min(/;"	d
minReqHeight	/usr/include/tk.h	/^    int minReqHeight;$/;"	m	struct:Tk_FakeWin	access:public
minReqWidth	/usr/include/tk.h	/^    int minReqWidth;$/;"	m	struct:Tk_FakeWin	access:public
minimum	/usr/include/dns_util.h	/^	uint32_t minimum;$/;"	m	struct:__anon28	access:public
minkeypage	/usr/include/db.h	/^	int		minkeypage;	\/* minimum keys per page *\/$/;"	m	struct:__anon13	access:public
minor	/usr/include/expat.h	/^  int minor;$/;"	m	struct:__anon51	access:public
minute	/usr/include/sqltypes.h	/^    SQLUINTEGER minute;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
minute	/usr/include/sqltypes.h	/^    SQLUSMALLINT minute;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
minute	/usr/include/sqltypes.h	/^    SQLUSMALLINT minute;$/;"	m	struct:tagTIME_STRUCT	access:public
mkdtemp	/usr/include/unistd.h	/^char	*mkdtemp(char *);$/;"	p	signature:(char *)
mknod	/usr/include/unistd.h	/^int	 mknod(const char *, mode_t, dev_t);$/;"	p	signature:(const char *, mode_t, dev_t)
mkstemp	/usr/include/stdlib.h	/^int	 mkstemp(char *);$/;"	p	signature:(char *)
mkstemp	/usr/include/unistd.h	/^int	 mkstemp(char *);$/;"	p	signature:(char *)
mkstemps	/usr/include/unistd.h	/^int	 mkstemps(char *, int);$/;"	p	signature:(char *, int)
mktemp	/usr/include/stdlib.h	/^char	*mktemp(char *);$/;"	p	signature:(char *)
mktemp	/usr/include/unistd.h	/^char	*mktemp(char *);$/;"	p	signature:(char *)
mktime	/usr/include/time.h	/^time_t mktime(struct tm *) __DARWIN_ALIAS(mktime);$/;"	v
mmask_t	/usr/include/curses.h	/^typedef unsigned long mmask_t;$/;"	t
mmask_t	/usr/include/ncurses.h	/^typedef unsigned long mmask_t;$/;"	t
mname	/usr/include/dns_util.h	/^	char *mname;$/;"	m	struct:__anon28	access:public
mod_bvalues	/usr/include/ldap.h	/^#define mod_bvalues	/;"	d
mod_op	/usr/include/ldap.h	/^	int		mod_op;$/;"	m	struct:ldapmod	access:public
mod_type	/usr/include/ldap.h	/^	char		*mod_type;$/;"	m	struct:ldapmod	access:public
mod_vals	/usr/include/ldap.h	/^	} mod_vals;$/;"	m	struct:ldapmod	typeref:union:ldapmod::mod_vals_u	access:public
mod_vals_u	/usr/include/ldap.h	/^	union mod_vals_u {$/;"	u	struct:ldapmod	access:public
mod_values	/usr/include/ldap.h	/^#define mod_values	/;"	d
modalProc	/usr/include/tk.h	/^    Tk_ClassModalProc *modalProc;$/;"	m	struct:Tk_ClassProcs	access:public
mode_t	/usr/include/ndbm.h	/^typedef __darwin_mode_t	mode_t;$/;"	t
mode_t	/usr/include/spawn.h	/^typedef __darwin_mode_t		mode_t;$/;"	t
mode_t	/usr/include/stdlib.h	/^typedef	__darwin_mode_t	mode_t;$/;"	t
mode_t	/usr/include/unistd.h	/^typedef __darwin_mode_t		mode_t;$/;"	t
modtime	/usr/include/utime.h	/^	time_t modtime;		\/* Modification time *\/$/;"	m	struct:utimbuf	access:public
modv_bvals	/usr/include/ldap.h	/^		struct berval	**modv_bvals;$/;"	m	union:ldapmod::mod_vals_u	typeref:struct:ldapmod::mod_vals_u::berval	access:public
modv_strvals	/usr/include/ldap.h	/^		char		**modv_strvals;$/;"	m	union:ldapmod::mod_vals_u	access:public
mon_decimal_point	/usr/include/_locale.h	/^	char	*mon_decimal_point;$/;"	m	struct:lconv	access:public
mon_grouping	/usr/include/_locale.h	/^	char	*mon_grouping;$/;"	m	struct:lconv	access:public
mon_thousands_sep	/usr/include/_locale.h	/^	char	*mon_thousands_sep;$/;"	m	struct:lconv	access:public
moncontrol	/usr/include/monitor.h	/^extern void moncontrol (int mode);$/;"	p	signature:(int mode)
moninit	/usr/include/monitor.h	/^extern void moninit (void);$/;"	p	signature:(void)
monitor	/usr/include/monitor.h	/^extern void monitor (char *lowpc, char *highpc, char *buf, int bufsiz, int cntsiz);$/;"	p	signature:(char *lowpc, char *highpc, char *buf, int bufsiz, int cntsiz)
monoutput	/usr/include/monitor.h	/^extern void monoutput (const char *filename);$/;"	p	signature:(const char *filename)
monreset	/usr/include/monitor.h	/^extern void monreset (void);$/;"	p	signature:(void)
monstartup	/usr/include/monitor.h	/^extern void monstartup (char *lowpc, char *highpc);$/;"	p	signature:(char *lowpc, char *highpc)
month	/usr/include/sqltypes.h	/^    SQLUINTEGER month;$/;"	m	struct:tagSQL_YEAR_MONTH	access:public
month	/usr/include/sqltypes.h	/^    SQLUSMALLINT month;$/;"	m	struct:tagDATE_STRUCT	access:public
month	/usr/include/sqltypes.h	/^    SQLUSMALLINT month;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
mouse_info	/usr/include/term.h	/^#define mouse_info /;"	d
mouse_trafo	/usr/include/curses.h	/^#define mouse_trafo(/;"	d
mouse_trafo	/usr/include/ncurses.h	/^#define mouse_trafo(/;"	d
move	/usr/include/curses.h	/^#define move(/;"	d
move	/usr/include/curses.h	/^#undef move$/;"	d
move	/usr/include/ncurses.h	/^#define move(/;"	d
move	/usr/include/ncurses.h	/^#undef move$/;"	d
move_insert_mode	/usr/include/term.h	/^#define move_insert_mode /;"	d
move_standout_mode	/usr/include/term.h	/^#define move_standout_mode /;"	d
mp_add	/usr/include/tclTomMathDecls.h	/^#define mp_add /;"	d
mp_add_d	/usr/include/tclTomMathDecls.h	/^#define mp_add_d /;"	d
mp_and	/usr/include/tclTomMathDecls.h	/^#define mp_and /;"	d
mp_clamp	/usr/include/tclTomMathDecls.h	/^#define mp_clamp /;"	d
mp_clear	/usr/include/tclTomMathDecls.h	/^#define mp_clear /;"	d
mp_clear_multi	/usr/include/tclTomMathDecls.h	/^#define mp_clear_multi /;"	d
mp_cmp	/usr/include/tclTomMathDecls.h	/^#define mp_cmp /;"	d
mp_cmp_d	/usr/include/tclTomMathDecls.h	/^#define mp_cmp_d /;"	d
mp_cmp_mag	/usr/include/tclTomMathDecls.h	/^#define mp_cmp_mag /;"	d
mp_copy	/usr/include/tclTomMathDecls.h	/^#define mp_copy /;"	d
mp_count_bits	/usr/include/tclTomMathDecls.h	/^#define mp_count_bits /;"	d
mp_digit	/usr/include/tcl.h	/^typedef unsigned long mp_digit;$/;"	t
mp_digit	/usr/include/tclTomMath.h	/^   typedef unsigned char      mp_digit;$/;"	t
mp_digit	/usr/include/tclTomMath.h	/^   typedef unsigned int      mp_digit;$/;"	t
mp_digit	/usr/include/tclTomMath.h	/^   typedef unsigned long      mp_digit;$/;"	t
mp_digit	/usr/include/tclTomMath.h	/^   typedef unsigned short     mp_digit;$/;"	t
mp_div	/usr/include/tclTomMathDecls.h	/^#define mp_div /;"	d
mp_div_2	/usr/include/tclTomMathDecls.h	/^#define mp_div_2 /;"	d
mp_div_2d	/usr/include/tclTomMathDecls.h	/^#define mp_div_2d /;"	d
mp_div_3	/usr/include/tclTomMathDecls.h	/^#define mp_div_3 /;"	d
mp_div_d	/usr/include/tclTomMathDecls.h	/^#define mp_div_d /;"	d
mp_err	/usr/include/tclTomMath.h	/^typedef int           mp_err;$/;"	t
mp_exch	/usr/include/tclTomMathDecls.h	/^#define mp_exch /;"	d
mp_expt_d	/usr/include/tclTomMathDecls.h	/^#define mp_expt_d /;"	d
mp_get_int	/usr/include/tclTomMath.h	/^unsigned long mp_get_int(mp_int * a);$/;"	p	signature:(mp_int * a)
mp_grow	/usr/include/tclTomMathDecls.h	/^#define mp_grow /;"	d
mp_init	/usr/include/tclTomMathDecls.h	/^#define mp_init /;"	d
mp_init_copy	/usr/include/tclTomMathDecls.h	/^#define mp_init_copy /;"	d
mp_init_multi	/usr/include/tclTomMathDecls.h	/^#define mp_init_multi /;"	d
mp_init_set	/usr/include/tclTomMathDecls.h	/^#define mp_init_set /;"	d
mp_init_size	/usr/include/tclTomMathDecls.h	/^#define mp_init_size /;"	d
mp_int	/usr/include/tcl.h	/^typedef struct mp_int mp_int;$/;"	t	typeref:struct:mp_int
mp_int	/usr/include/tclTomMath.h	/^struct mp_int {$/;"	s
mp_int	/usr/include/tclTomMath.h	/^typedef struct mp_int mp_int;$/;"	t	typeref:struct:mp_int
mp_int::alloc	/usr/include/tclTomMath.h	/^    int used, alloc, sign;$/;"	m	struct:mp_int	access:public
mp_int::dp	/usr/include/tclTomMath.h	/^    mp_digit *dp;$/;"	m	struct:mp_int	access:public
mp_int::sign	/usr/include/tclTomMath.h	/^    int used, alloc, sign;$/;"	m	struct:mp_int	access:public
mp_int::used	/usr/include/tclTomMath.h	/^    int used, alloc, sign;$/;"	m	struct:mp_int	access:public
mp_iseven	/usr/include/tclTomMath.h	/^#define mp_iseven(/;"	d
mp_isodd	/usr/include/tclTomMath.h	/^#define mp_isodd(/;"	d
mp_iszero	/usr/include/tclTomMath.h	/^#define mp_iszero(/;"	d
mp_karatsuba_mul	/usr/include/tclTomMathDecls.h	/^#define mp_karatsuba_mul /;"	d
mp_karatsuba_sqr	/usr/include/tclTomMathDecls.h	/^#define mp_karatsuba_sqr /;"	d
mp_lshd	/usr/include/tclTomMathDecls.h	/^#define mp_lshd /;"	d
mp_mag_size	/usr/include/tclTomMath.h	/^#define mp_mag_size(/;"	d
mp_mod	/usr/include/tclTomMathDecls.h	/^#define mp_mod /;"	d
mp_mod_2d	/usr/include/tclTomMathDecls.h	/^#define mp_mod_2d /;"	d
mp_mul	/usr/include/tclTomMathDecls.h	/^#define mp_mul /;"	d
mp_mul_2	/usr/include/tclTomMathDecls.h	/^#define mp_mul_2 /;"	d
mp_mul_2d	/usr/include/tclTomMathDecls.h	/^#define mp_mul_2d /;"	d
mp_mul_d	/usr/include/tclTomMathDecls.h	/^#define mp_mul_d /;"	d
mp_neg	/usr/include/tclTomMathDecls.h	/^#define mp_neg /;"	d
mp_or	/usr/include/tclTomMathDecls.h	/^#define mp_or /;"	d
mp_prime_random	/usr/include/tclTomMath.h	/^#define mp_prime_random(/;"	d
mp_radix_size	/usr/include/tclTomMathDecls.h	/^#define mp_radix_size /;"	d
mp_raw_size	/usr/include/tclTomMath.h	/^#define mp_raw_size(/;"	d
mp_read_mag	/usr/include/tclTomMath.h	/^#define mp_read_mag(/;"	d
mp_read_radix	/usr/include/tclTomMathDecls.h	/^#define mp_read_radix /;"	d
mp_read_raw	/usr/include/tclTomMath.h	/^#define mp_read_raw(/;"	d
mp_rshd	/usr/include/tclTomMathDecls.h	/^#define mp_rshd /;"	d
mp_s_rmap	/usr/include/tclTomMath.h	/^MODULE_SCOPE const char *mp_s_rmap;$/;"	v
mp_s_rmap	/usr/include/tclTomMathDecls.h	/^#define mp_s_rmap /;"	d
mp_set	/usr/include/tclTomMathDecls.h	/^#define mp_set /;"	d
mp_shrink	/usr/include/tclTomMathDecls.h	/^#define mp_shrink /;"	d
mp_sqr	/usr/include/tclTomMathDecls.h	/^#define mp_sqr /;"	d
mp_sqrt	/usr/include/tclTomMathDecls.h	/^#define mp_sqrt /;"	d
mp_sub	/usr/include/tclTomMathDecls.h	/^#define mp_sub /;"	d
mp_sub_d	/usr/include/tclTomMathDecls.h	/^#define mp_sub_d /;"	d
mp_to_unsigned_bin	/usr/include/tclTomMathDecls.h	/^#define mp_to_unsigned_bin /;"	d
mp_to_unsigned_bin_n	/usr/include/tclTomMathDecls.h	/^#define mp_to_unsigned_bin_n /;"	d
mp_tobinary	/usr/include/tclTomMath.h	/^#define mp_tobinary(/;"	d
mp_todecimal	/usr/include/tclTomMath.h	/^#define mp_todecimal(/;"	d
mp_tohex	/usr/include/tclTomMath.h	/^#define mp_tohex(/;"	d
mp_tomag	/usr/include/tclTomMath.h	/^#define mp_tomag(/;"	d
mp_tooctal	/usr/include/tclTomMath.h	/^#define mp_tooctal(/;"	d
mp_toom_mul	/usr/include/tclTomMathDecls.h	/^#define mp_toom_mul /;"	d
mp_toom_sqr	/usr/include/tclTomMathDecls.h	/^#define mp_toom_sqr /;"	d
mp_toradix_n	/usr/include/tclTomMathDecls.h	/^#define mp_toradix_n /;"	d
mp_toraw	/usr/include/tclTomMath.h	/^#define mp_toraw(/;"	d
mp_unsigned_bin_size	/usr/include/tclTomMathDecls.h	/^#define mp_unsigned_bin_size /;"	d
mp_word	/usr/include/tclTomMath.h	/^   typedef ulong64            mp_word;$/;"	t
mp_word	/usr/include/tclTomMath.h	/^   typedef unsigned long      mp_word __attribute__ ((mode(TI)));$/;"	t
mp_word	/usr/include/tclTomMath.h	/^   typedef unsigned long      mp_word;$/;"	t
mp_word	/usr/include/tclTomMath.h	/^   typedef unsigned short     mp_word;$/;"	t
mp_xor	/usr/include/tclTomMathDecls.h	/^#define mp_xor /;"	d
mp_zero	/usr/include/tclTomMathDecls.h	/^#define mp_zero /;"	d
mpool_close	/usr/include/mpool.h	/^int	 mpool_close(MPOOL *);$/;"	p	signature:(MPOOL *)
mpool_filter	/usr/include/mpool.h	/^void	 mpool_filter(MPOOL *, void (*)(void *, pgno_t, void *),$/;"	p	signature:(MPOOL *, void (*)(void *, pgno_t, void *), void (*)(void *, pgno_t, void *), void *)
mpool_get	/usr/include/mpool.h	/^void	*mpool_get(MPOOL *, pgno_t, unsigned int);$/;"	p	signature:(MPOOL *, pgno_t, unsigned int)
mpool_new	/usr/include/mpool.h	/^void	*mpool_new(MPOOL *, pgno_t *);$/;"	p	signature:(MPOOL *, pgno_t *)
mpool_open	/usr/include/mpool.h	/^MPOOL	*mpool_open(void *, int, pgno_t, pgno_t);$/;"	p	signature:(void *, int, pgno_t, pgno_t)
mpool_put	/usr/include/mpool.h	/^int	 mpool_put(MPOOL *, void *, unsigned int);$/;"	p	signature:(MPOOL *, void *, unsigned int)
mpool_stat	/usr/include/mpool.h	/^void	 mpool_stat(MPOOL *);$/;"	p	signature:(MPOOL *)
mpool_sync	/usr/include/mpool.h	/^int	 mpool_sync(MPOOL *);$/;"	p	signature:(MPOOL *)
mprintf	/usr/include/sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	access:public
mr_desc	/usr/include/ldap_schema.h	/^	char *mr_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
mr_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **mr_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
mr_names	/usr/include/ldap_schema.h	/^	char **mr_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
mr_obsolete	/usr/include/ldap_schema.h	/^	int  mr_obsolete;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingrule	access:public
mr_oid	/usr/include/ldap_schema.h	/^	char *mr_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_matchingrule	access:public
mr_syntax_oid	/usr/include/ldap_schema.h	/^	char *mr_syntax_oid;	\/* REQUIRED *\/$/;"	m	struct:ldap_matchingrule	access:public
mrand48	/usr/include/stdlib.h	/^long	 mrand48(void); $/;"	p	signature:(void)
mru_applies_oids	/usr/include/ldap_schema.h	/^	char **mru_applies_oids;	\/* REQUIRED *\/$/;"	m	struct:ldap_matchingruleuse	access:public
mru_desc	/usr/include/ldap_schema.h	/^	char *mru_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
mru_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **mru_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
mru_names	/usr/include/ldap_schema.h	/^	char **mru_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
mru_obsolete	/usr/include/ldap_schema.h	/^	int  mru_obsolete;	\/* OPTIONAL *\/$/;"	m	struct:ldap_matchingruleuse	access:public
mru_oid	/usr/include/ldap_schema.h	/^	char *mru_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_matchingruleuse	access:public
msg	/usr/include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	access:public
mutex_alloc	/usr/include/sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	access:public
mutex_enter	/usr/include/sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
mutex_free	/usr/include/sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
mutex_leave	/usr/include/sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
mutex_try	/usr/include/sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
mvadd_wch	/usr/include/curses.h	/^#define mvadd_wch(/;"	d
mvadd_wch	/usr/include/ncurses.h	/^#define mvadd_wch(/;"	d
mvadd_wchnstr	/usr/include/curses.h	/^#define mvadd_wchnstr(/;"	d
mvadd_wchnstr	/usr/include/ncurses.h	/^#define mvadd_wchnstr(/;"	d
mvadd_wchstr	/usr/include/curses.h	/^#define mvadd_wchstr(/;"	d
mvadd_wchstr	/usr/include/ncurses.h	/^#define mvadd_wchstr(/;"	d
mvaddch	/usr/include/curses.h	/^#define mvaddch(/;"	d
mvaddch	/usr/include/ncurses.h	/^#define mvaddch(/;"	d
mvaddchnstr	/usr/include/curses.h	/^#define mvaddchnstr(/;"	d
mvaddchnstr	/usr/include/ncurses.h	/^#define mvaddchnstr(/;"	d
mvaddchstr	/usr/include/curses.h	/^#define mvaddchstr(/;"	d
mvaddchstr	/usr/include/ncurses.h	/^#define mvaddchstr(/;"	d
mvaddnstr	/usr/include/curses.h	/^#define mvaddnstr(/;"	d
mvaddnstr	/usr/include/ncurses.h	/^#define mvaddnstr(/;"	d
mvaddnwstr	/usr/include/curses.h	/^#define mvaddnwstr(/;"	d
mvaddnwstr	/usr/include/ncurses.h	/^#define mvaddnwstr(/;"	d
mvaddstr	/usr/include/curses.h	/^#define mvaddstr(/;"	d
mvaddstr	/usr/include/ncurses.h	/^#define mvaddstr(/;"	d
mvaddwstr	/usr/include/curses.h	/^#define mvaddwstr(/;"	d
mvaddwstr	/usr/include/ncurses.h	/^#define mvaddwstr(/;"	d
mvchgat	/usr/include/curses.h	/^#define mvchgat(/;"	d
mvchgat	/usr/include/ncurses.h	/^#define mvchgat(/;"	d
mvdelch	/usr/include/curses.h	/^#define mvdelch(/;"	d
mvdelch	/usr/include/ncurses.h	/^#define mvdelch(/;"	d
mvget_wch	/usr/include/curses.h	/^#define mvget_wch(/;"	d
mvget_wch	/usr/include/ncurses.h	/^#define mvget_wch(/;"	d
mvget_wstr	/usr/include/curses.h	/^#define mvget_wstr(/;"	d
mvget_wstr	/usr/include/ncurses.h	/^#define mvget_wstr(/;"	d
mvgetch	/usr/include/curses.h	/^#define mvgetch(/;"	d
mvgetch	/usr/include/ncurses.h	/^#define mvgetch(/;"	d
mvgetn_wstr	/usr/include/curses.h	/^#define mvgetn_wstr(/;"	d
mvgetn_wstr	/usr/include/ncurses.h	/^#define mvgetn_wstr(/;"	d
mvgetnstr	/usr/include/curses.h	/^#define mvgetnstr(/;"	d
mvgetnstr	/usr/include/ncurses.h	/^#define mvgetnstr(/;"	d
mvgetstr	/usr/include/curses.h	/^#define mvgetstr(/;"	d
mvgetstr	/usr/include/ncurses.h	/^#define mvgetstr(/;"	d
mvhline	/usr/include/curses.h	/^#define mvhline(/;"	d
mvhline	/usr/include/ncurses.h	/^#define mvhline(/;"	d
mvhline_set	/usr/include/curses.h	/^#define mvhline_set(/;"	d
mvhline_set	/usr/include/ncurses.h	/^#define mvhline_set(/;"	d
mvin_wch	/usr/include/curses.h	/^#define mvin_wch(/;"	d
mvin_wch	/usr/include/ncurses.h	/^#define mvin_wch(/;"	d
mvin_wchnstr	/usr/include/curses.h	/^#define mvin_wchnstr(/;"	d
mvin_wchnstr	/usr/include/ncurses.h	/^#define mvin_wchnstr(/;"	d
mvin_wchstr	/usr/include/curses.h	/^#define mvin_wchstr(/;"	d
mvin_wchstr	/usr/include/ncurses.h	/^#define mvin_wchstr(/;"	d
mvinch	/usr/include/curses.h	/^#define mvinch(/;"	d
mvinch	/usr/include/ncurses.h	/^#define mvinch(/;"	d
mvinchnstr	/usr/include/curses.h	/^#define mvinchnstr(/;"	d
mvinchnstr	/usr/include/ncurses.h	/^#define mvinchnstr(/;"	d
mvinchstr	/usr/include/curses.h	/^#define mvinchstr(/;"	d
mvinchstr	/usr/include/ncurses.h	/^#define mvinchstr(/;"	d
mvinnstr	/usr/include/curses.h	/^#define mvinnstr(/;"	d
mvinnstr	/usr/include/ncurses.h	/^#define mvinnstr(/;"	d
mvinnwstr	/usr/include/curses.h	/^#define mvinnwstr(/;"	d
mvinnwstr	/usr/include/ncurses.h	/^#define mvinnwstr(/;"	d
mvins_nwstr	/usr/include/curses.h	/^#define mvins_nwstr(/;"	d
mvins_nwstr	/usr/include/ncurses.h	/^#define mvins_nwstr(/;"	d
mvins_wch	/usr/include/curses.h	/^#define mvins_wch(/;"	d
mvins_wch	/usr/include/ncurses.h	/^#define mvins_wch(/;"	d
mvins_wstr	/usr/include/curses.h	/^#define mvins_wstr(/;"	d
mvins_wstr	/usr/include/ncurses.h	/^#define mvins_wstr(/;"	d
mvinsch	/usr/include/curses.h	/^#define mvinsch(/;"	d
mvinsch	/usr/include/ncurses.h	/^#define mvinsch(/;"	d
mvinsnstr	/usr/include/curses.h	/^#define mvinsnstr(/;"	d
mvinsnstr	/usr/include/ncurses.h	/^#define mvinsnstr(/;"	d
mvinsstr	/usr/include/curses.h	/^#define mvinsstr(/;"	d
mvinsstr	/usr/include/ncurses.h	/^#define mvinsstr(/;"	d
mvinstr	/usr/include/curses.h	/^#define mvinstr(/;"	d
mvinstr	/usr/include/ncurses.h	/^#define mvinstr(/;"	d
mvinwstr	/usr/include/curses.h	/^#define mvinwstr(/;"	d
mvinwstr	/usr/include/ncurses.h	/^#define mvinwstr(/;"	d
mvvline	/usr/include/curses.h	/^#define mvvline(/;"	d
mvvline	/usr/include/ncurses.h	/^#define mvvline(/;"	d
mvvline_set	/usr/include/curses.h	/^#define mvvline_set(/;"	d
mvvline_set	/usr/include/ncurses.h	/^#define mvvline_set(/;"	d
mvwadd_wch	/usr/include/curses.h	/^#define mvwadd_wch(/;"	d
mvwadd_wch	/usr/include/ncurses.h	/^#define mvwadd_wch(/;"	d
mvwadd_wchnstr	/usr/include/curses.h	/^#define mvwadd_wchnstr(/;"	d
mvwadd_wchnstr	/usr/include/ncurses.h	/^#define mvwadd_wchnstr(/;"	d
mvwadd_wchstr	/usr/include/curses.h	/^#define mvwadd_wchstr(/;"	d
mvwadd_wchstr	/usr/include/ncurses.h	/^#define mvwadd_wchstr(/;"	d
mvwaddch	/usr/include/curses.h	/^#define mvwaddch(/;"	d
mvwaddch	/usr/include/ncurses.h	/^#define mvwaddch(/;"	d
mvwaddchnstr	/usr/include/curses.h	/^#define mvwaddchnstr(/;"	d
mvwaddchnstr	/usr/include/ncurses.h	/^#define mvwaddchnstr(/;"	d
mvwaddchstr	/usr/include/curses.h	/^#define mvwaddchstr(/;"	d
mvwaddchstr	/usr/include/ncurses.h	/^#define mvwaddchstr(/;"	d
mvwaddnstr	/usr/include/curses.h	/^#define mvwaddnstr(/;"	d
mvwaddnstr	/usr/include/ncurses.h	/^#define mvwaddnstr(/;"	d
mvwaddnwstr	/usr/include/curses.h	/^#define mvwaddnwstr(/;"	d
mvwaddnwstr	/usr/include/ncurses.h	/^#define mvwaddnwstr(/;"	d
mvwaddstr	/usr/include/curses.h	/^#define mvwaddstr(/;"	d
mvwaddstr	/usr/include/ncurses.h	/^#define mvwaddstr(/;"	d
mvwaddwstr	/usr/include/curses.h	/^#define mvwaddwstr(/;"	d
mvwaddwstr	/usr/include/ncurses.h	/^#define mvwaddwstr(/;"	d
mvwchgat	/usr/include/curses.h	/^#define mvwchgat(/;"	d
mvwchgat	/usr/include/ncurses.h	/^#define mvwchgat(/;"	d
mvwdelch	/usr/include/curses.h	/^#define mvwdelch(/;"	d
mvwdelch	/usr/include/ncurses.h	/^#define mvwdelch(/;"	d
mvwget_wch	/usr/include/curses.h	/^#define mvwget_wch(/;"	d
mvwget_wch	/usr/include/ncurses.h	/^#define mvwget_wch(/;"	d
mvwget_wstr	/usr/include/curses.h	/^#define mvwget_wstr(/;"	d
mvwget_wstr	/usr/include/ncurses.h	/^#define mvwget_wstr(/;"	d
mvwgetch	/usr/include/curses.h	/^#define mvwgetch(/;"	d
mvwgetch	/usr/include/ncurses.h	/^#define mvwgetch(/;"	d
mvwgetn_wstr	/usr/include/curses.h	/^#define mvwgetn_wstr(/;"	d
mvwgetn_wstr	/usr/include/ncurses.h	/^#define mvwgetn_wstr(/;"	d
mvwgetnstr	/usr/include/curses.h	/^#define mvwgetnstr(/;"	d
mvwgetnstr	/usr/include/ncurses.h	/^#define mvwgetnstr(/;"	d
mvwgetstr	/usr/include/curses.h	/^#define mvwgetstr(/;"	d
mvwgetstr	/usr/include/ncurses.h	/^#define mvwgetstr(/;"	d
mvwhline	/usr/include/curses.h	/^#define mvwhline(/;"	d
mvwhline	/usr/include/ncurses.h	/^#define mvwhline(/;"	d
mvwhline_set	/usr/include/curses.h	/^#define mvwhline_set(/;"	d
mvwhline_set	/usr/include/ncurses.h	/^#define mvwhline_set(/;"	d
mvwin_wch	/usr/include/curses.h	/^#define mvwin_wch(/;"	d
mvwin_wch	/usr/include/ncurses.h	/^#define mvwin_wch(/;"	d
mvwin_wchnstr	/usr/include/curses.h	/^#define mvwin_wchnstr(/;"	d
mvwin_wchnstr	/usr/include/ncurses.h	/^#define mvwin_wchnstr(/;"	d
mvwin_wchstr	/usr/include/curses.h	/^#define mvwin_wchstr(/;"	d
mvwin_wchstr	/usr/include/ncurses.h	/^#define mvwin_wchstr(/;"	d
mvwinch	/usr/include/curses.h	/^#define mvwinch(/;"	d
mvwinch	/usr/include/ncurses.h	/^#define mvwinch(/;"	d
mvwinchnstr	/usr/include/curses.h	/^#define mvwinchnstr(/;"	d
mvwinchnstr	/usr/include/ncurses.h	/^#define mvwinchnstr(/;"	d
mvwinchstr	/usr/include/curses.h	/^#define mvwinchstr(/;"	d
mvwinchstr	/usr/include/ncurses.h	/^#define mvwinchstr(/;"	d
mvwinnstr	/usr/include/curses.h	/^#define mvwinnstr(/;"	d
mvwinnstr	/usr/include/ncurses.h	/^#define mvwinnstr(/;"	d
mvwinnwstr	/usr/include/curses.h	/^#define mvwinnwstr(/;"	d
mvwinnwstr	/usr/include/ncurses.h	/^#define mvwinnwstr(/;"	d
mvwins_nwstr	/usr/include/curses.h	/^#define mvwins_nwstr(/;"	d
mvwins_nwstr	/usr/include/ncurses.h	/^#define mvwins_nwstr(/;"	d
mvwins_wch	/usr/include/curses.h	/^#define mvwins_wch(/;"	d
mvwins_wch	/usr/include/ncurses.h	/^#define mvwins_wch(/;"	d
mvwins_wstr	/usr/include/curses.h	/^#define mvwins_wstr(/;"	d
mvwins_wstr	/usr/include/ncurses.h	/^#define mvwins_wstr(/;"	d
mvwinsch	/usr/include/curses.h	/^#define mvwinsch(/;"	d
mvwinsch	/usr/include/ncurses.h	/^#define mvwinsch(/;"	d
mvwinsnstr	/usr/include/curses.h	/^#define mvwinsnstr(/;"	d
mvwinsnstr	/usr/include/ncurses.h	/^#define mvwinsnstr(/;"	d
mvwinsstr	/usr/include/curses.h	/^#define mvwinsstr(/;"	d
mvwinsstr	/usr/include/ncurses.h	/^#define mvwinsstr(/;"	d
mvwinstr	/usr/include/curses.h	/^#define mvwinstr(/;"	d
mvwinstr	/usr/include/ncurses.h	/^#define mvwinstr(/;"	d
mvwinwstr	/usr/include/curses.h	/^#define mvwinwstr(/;"	d
mvwinwstr	/usr/include/ncurses.h	/^#define mvwinwstr(/;"	d
mvwvline	/usr/include/curses.h	/^#define mvwvline(/;"	d
mvwvline	/usr/include/ncurses.h	/^#define mvwvline(/;"	d
mvwvline_set	/usr/include/curses.h	/^#define mvwvline_set(/;"	d
mvwvline_set	/usr/include/ncurses.h	/^#define mvwvline_set(/;"	d
mxPathname	/usr/include/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	access:public
my_strtok	/usr/include/tcpd.h	/^extern char *my_strtok();$/;"	p	signature:()
nConstraint	/usr/include/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	access:public
nOrderBy	/usr/include/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	access:public
nRef	/usr/include/sqlite3.h	/^  int nRef;                       \/* Used internally *\/$/;"	m	struct:sqlite3_vtab	access:public
nWriters	/usr/include/fcgiapp.h	/^    int nWriters;             \/* number of open writers (0..2) *\/$/;"	m	struct:FCGX_Request	access:public
n_addrtype	/usr/include/netdb.h	/^	int		n_addrtype;	\/* net address type *\/$/;"	m	struct:netent	access:public
n_aliases	/usr/include/netdb.h	/^	char		**n_aliases;	\/* alias list *\/$/;"	m	struct:netent	access:public
n_cs_precedes	/usr/include/_locale.h	/^	char	n_cs_precedes;$/;"	m	struct:lconv	access:public
n_desc	/usr/include/nlist.h	/^	short n_desc;		\/* used by stab entries *\/$/;"	m	struct:nlist	access:public
n_hash	/usr/include/nlist.h	/^#define	n_hash	/;"	d
n_name	/usr/include/netdb.h	/^	char		*n_name;	\/* official name of net *\/$/;"	m	struct:netent	access:public
n_name	/usr/include/nlist.h	/^		char *n_name;	\/* symbol name (in memory) *\/$/;"	m	union:nlist::__anon89	access:public
n_net	/usr/include/netdb.h	/^	uint32_t	n_net;		\/* network # *\/$/;"	m	struct:netent	access:public
n_other	/usr/include/nlist.h	/^	char n_other;		\/* spare *\/$/;"	m	struct:nlist	access:public
n_sep_by_space	/usr/include/_locale.h	/^	char	n_sep_by_space;$/;"	m	struct:lconv	access:public
n_sign_posn	/usr/include/_locale.h	/^	char	n_sign_posn;$/;"	m	struct:lconv	access:public
n_strx	/usr/include/nlist.h	/^		long n_strx;	\/* file string table offset (on disk) *\/$/;"	m	union:nlist::__anon89	access:public
n_type	/usr/include/nlist.h	/^	unsigned char n_type;	\/* type defines *\/$/;"	m	struct:nlist	access:public
n_un	/usr/include/nlist.h	/^	} n_un;$/;"	m	struct:nlist	typeref:union:nlist::__anon89	access:public
n_value	/usr/include/nlist.h	/^	unsigned long n_value;	\/* address\/value of the symbol *\/$/;"	m	struct:nlist	access:public
name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon23	access:public
name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon27	access:public
name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon31	access:public
name	/usr/include/dns_util.h	/^	char *name;$/;"	m	struct:__anon41	access:public
name	/usr/include/expat.h	/^  XML_Char *                    name;$/;"	m	struct:XML_cp	access:public
name	/usr/include/expat.h	/^  const XML_LChar       *name;$/;"	m	struct:__anon52	access:public
name	/usr/include/getopt.h	/^	const char *name;$/;"	m	struct:option	access:public
name	/usr/include/ltdl.h	/^  char *	name;		\/* module name *\/$/;"	m	struct:__anon75	access:public
name	/usr/include/ltdl.h	/^  const char *name;$/;"	m	struct:__anon74	access:public
name	/usr/include/menu.h	/^  TEXT           name;        \/* name of menu item                         *\/$/;"	m	struct:tagITEM	access:public
name	/usr/include/nameser.h	/^	char		name[NS_MAXDNAME];$/;"	m	struct:__ns_rr	access:public
name	/usr/include/nameser.h	/^        char name[NS_MAXDNAME], alg[NS_MAXDNAME];$/;"	m	struct:ns_tsig_key	access:public
name	/usr/include/resolv.h	/^	const char *	name;	   \/* Its symbolic name, like "MX" *\/$/;"	m	struct:res_sym	access:public
name	/usr/include/tcl.h	/^    char *name;			\/* Name of the type, e.g. "int". *\/$/;"	m	struct:Tcl_ObjType	access:public
name	/usr/include/tcl.h	/^    char *name;			\/* The namespace's name within its parent$/;"	m	struct:Tcl_Namespace	access:public
name	/usr/include/tcpd.h	/^    char    name[STRING_LENGTH];	\/* access via eval_hostname(host) *\/$/;"	m	struct:host_info	access:public
name	/usr/include/term_entry.h	/^	    char		*name;$/;"	m	struct:entry::__anon121	access:public
name	/usr/include/tk.h	/^    Tk_Uid name;		\/* Name of virtual event. *\/$/;"	m	struct:__anon129	access:public
name	/usr/include/tk.h	/^    char *name;			\/* Name of image file format *\/$/;"	m	struct:Tk_PhotoImageFormat	access:public
name	/usr/include/tk.h	/^    char *name;			\/* Name of image type. *\/$/;"	m	struct:Tk_ImageType	access:public
name	/usr/include/tk.h	/^    char *name;			\/* The name of this type of item, such as$/;"	m	struct:Tk_ItemType	access:public
name	/usr/include/tk.h	/^    char *name;                 \/* Name of element. *\/$/;"	m	struct:Tk_ElementSpec	access:public
name	/usr/include/tk.h	/^    char *name;                 \/* Name of the required option. *\/$/;"	m	struct:Tk_ElementOptionSpec	access:public
name	/usr/include/tk.h	/^    char *name;$/;"	m	struct:Tk_SmoothMethod	access:public
name	/usr/include/tk.h	/^    const char *name;		\/* Name of the geometry manager (command used$/;"	m	struct:Tk_GeomMgr	access:public
name	/usr/include/tk.h	/^    const char *name; \/* Name of the custom option. *\/$/;"	m	struct:Tk_ObjCustomOption	access:public
name	/usr/include/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
nameUid	/usr/include/tk.h	/^    Tk_Uid nameUid;$/;"	m	struct:Tk_FakeWin	access:public
name_max	/usr/include/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
name_table_entry	/usr/include/tic.h	/^struct name_table_entry$/;"	s
name_table_entry::nte_index	/usr/include/tic.h	/^	short	nte_index;	\/* index of associated variable in its array *\/$/;"	m	struct:name_table_entry	access:public
name_table_entry::nte_link	/usr/include/tic.h	/^	short	nte_link;	\/* index in table of next hash, or -1 *\/$/;"	m	struct:name_table_entry	access:public
name_table_entry::nte_name	/usr/include/tic.h	/^	const char *nte_name;	\/* name to hash on *\/$/;"	m	struct:name_table_entry	access:public
name_table_entry::nte_type	/usr/include/tic.h	/^	int	nte_type;	\/* BOOLEAN, NUMBER or STRING *\/$/;"	m	struct:name_table_entry	access:public
namelen	/usr/include/menu.h	/^  short          namelen;               \/* Max. name length                *\/$/;"	m	struct:tagMENU	access:public
namespacePtr	/usr/include/tcl.h	/^    Tcl_Namespace *namespacePtr;\/* Points to the namespace that contains this$/;"	m	struct:Tcl_CmdInfo	access:public
nanosleep	/usr/include/time.h	/^int nanosleep(const struct timespec *, struct timespec *) __DARWIN_ALIAS_C(nanosleep);$/;"	v
nbuf	/usr/include/form.h	/^  short			nbuf;		\/* additional buffers		*\/$/;"	m	struct:fieldnode	access:public
ncheck	/usr/include/AssertMacros.h	/^		#define ncheck(/;"	d
ncheck_string	/usr/include/AssertMacros.h	/^		#define ncheck_string(/;"	d
ncrosslinks	/usr/include/term_entry.h	/^	int		ncrosslinks;$/;"	m	struct:entry	access:public
ndots	/usr/include/resolv.h	/^	unsigned ndots:4;		\/* threshold for initial abs. query *\/$/;"	m	struct:__res_state	access:public
needToFreeIdxStr	/usr/include/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	access:public
needs_xon_xoff	/usr/include/term.h	/^#define needs_xon_xoff /;"	d
negative_sign	/usr/include/_locale.h	/^	char	*negative_sign;$/;"	m	struct:lconv	access:public
nelem	/usr/include/db.h	/^	unsigned int	nelem;		\/* number of elements *\/$/;"	m	struct:__anon14	access:public
netent	/usr/include/netdb.h	/^struct netent {$/;"	s
netent::n_addrtype	/usr/include/netdb.h	/^	int		n_addrtype;	\/* net address type *\/$/;"	m	struct:netent	access:public
netent::n_aliases	/usr/include/netdb.h	/^	char		**n_aliases;	\/* alias list *\/$/;"	m	struct:netent	access:public
netent::n_name	/usr/include/netdb.h	/^	char		*n_name;	\/* official name of net *\/$/;"	m	struct:netent	access:public
netent::n_net	/usr/include/netdb.h	/^	uint32_t	n_net;		\/* network # *\/$/;"	m	struct:netent	access:public
new_line_delay	/usr/include/term.h	/^#define new_line_delay /;"	d
newline	/usr/include/term.h	/^#define newline /;"	d
newlocale	/usr/include/xlocale.h	/^locale_t	newlocale(int, __const char *, locale_t);$/;"	p	signature:(int, __const char *, locale_t)
next	/usr/include/form.h	/^  bool	(*next)(FIELD *,const void *);		\/* enumerate next value *\/$/;"	m	struct:typenode	access:public
next	/usr/include/mecab.h	/^    virtual const char* next()                                = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:()
next	/usr/include/mecab.h	/^    virtual const char* next(char *ostr , size_t olen)                        = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(char *ostr , size_t olen)
next	/usr/include/mecab.h	/^  struct mecab_dictionary_info_t *next;$/;"	m	struct:mecab_dictionary_info_t	typeref:struct:mecab_dictionary_info_t::mecab_dictionary_info_t	access:public
next	/usr/include/mecab.h	/^  struct mecab_learner_node_t *next;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
next	/usr/include/mecab.h	/^  struct mecab_node_t  *next;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
next	/usr/include/search.h	/^	struct que_elem *next;$/;"	m	struct:que_elem	typeref:struct:que_elem::que_elem	access:public
next	/usr/include/strhash.h	/^    struct _node *next;$/;"	m	struct:_node	typeref:struct:_node::_node	access:public
next	/usr/include/tcl.h	/^    void *next;			\/* Search position for underlying hash$/;"	m	struct:__anon118	access:public
next	/usr/include/term_entry.h	/^	struct entry	*next;$/;"	m	struct:entry	typeref:struct:entry::entry	access:public
nextEntryPtr	/usr/include/tcl.h	/^    Tcl_HashEntry *nextEntryPtr;\/* Next entry to be enumerated in the current$/;"	m	struct:Tcl_HashSearch	access:public
nextIndex	/usr/include/tcl.h	/^    int nextIndex;		\/* Index of next bucket to be enumerated after$/;"	m	struct:Tcl_HashSearch	access:public
nextNode	/usr/include/mecab.h	/^    virtual const Node* nextNode()                            = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:()
nextPtr	/usr/include/tcl.h	/^    Tcl_HashEntry *nextPtr;	\/* Pointer to next entry in this hash bucket,$/;"	m	struct:Tcl_HashEntry	access:public
nextPtr	/usr/include/tcl.h	/^    struct Tcl_Event *nextPtr;	\/* Next in list of pending events, or NULL. *\/$/;"	m	struct:Tcl_Event	typeref:struct:Tcl_Event::Tcl_Event	access:public
nextPtr	/usr/include/tk.h	/^    struct Tk_ImageType *nextPtr;$/;"	m	struct:Tk_ImageType	typeref:struct:Tk_ImageType::Tk_ImageType	access:public
nextPtr	/usr/include/tk.h	/^    struct Tk_Item *nextPtr;	\/* Next in display list of all items in this$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_Item	access:public
nextPtr	/usr/include/tk.h	/^    struct Tk_ItemType *nextPtr;\/* Used to link types together into a list. *\/$/;"	m	struct:Tk_ItemType	typeref:struct:Tk_ItemType::Tk_ItemType	access:public
nextPtr	/usr/include/tk.h	/^    struct Tk_PhotoImageFormat *nextPtr;$/;"	m	struct:Tk_PhotoImageFormat	typeref:struct:Tk_PhotoImageFormat::Tk_PhotoImageFormat	access:public
nextPtr	/usr/include/tk.h	/^    struct Tk_SavedOptions *nextPtr;$/;"	m	struct:Tk_SavedOptions	typeref:struct:Tk_SavedOptions::Tk_SavedOptions	access:public
next_in	/usr/include/bzlib.h	/^      char *next_in;$/;"	m	struct:__anon3	access:public
next_in	/usr/include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s	access:public
next_out	/usr/include/bzlib.h	/^      char *next_out;$/;"	m	struct:__anon3	access:public
next_out	/usr/include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s	access:public
next_stmt	/usr/include/sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
nextwctype	/usr/include/wctype.h	/^wint_t	nextwctype(wint_t, wctype_t);$/;"	p	signature:(wint_t, wctype_t)
nf_at_oids_may	/usr/include/ldap_schema.h	/^	char **nf_at_oids_may;	\/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
nf_at_oids_must	/usr/include/ldap_schema.h	/^	char **nf_at_oids_must;	\/* REQUIRED *\/$/;"	m	struct:ldap_nameform	access:public
nf_desc	/usr/include/ldap_schema.h	/^	char *nf_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
nf_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **nf_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
nf_names	/usr/include/ldap_schema.h	/^	char **nf_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_nameform	access:public
nf_objectclass	/usr/include/ldap_schema.h	/^	char *nf_objectclass;	\/* REQUIRED *\/$/;"	m	struct:ldap_nameform	access:public
nf_obsolete	/usr/include/ldap_schema.h	/^	int  nf_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_nameform	access:public
nf_oid	/usr/include/ldap_schema.h	/^	char *nf_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_nameform	access:public
nfssvc	/usr/include/unistd.h	/^int	 nfssvc(int, void *);$/;"	p	signature:(int, void *)
nftw	/usr/include/ftw.h	/^	    struct FTW *), int, int) __DARWIN_ALIAS_I(nftw);$/;"	v
nice	/usr/include/unistd.h	/^int	 nice(int) __DARWIN_ALIAS(nice);$/;"	v
nitems	/usr/include/menu.h	/^  short          nitems;                \/* Nr. of items in menu            *\/$/;"	m	struct:tagMENU	access:public
nl_catd	/usr/include/nl_types.h	/^typedef	void	*nl_catd;$/;"	t
nl_item	/usr/include/langinfo.h	/^typedef	__darwin_nl_item	nl_item;$/;"	t
nl_item	/usr/include/nl_types.h	/^typedef	__darwin_nl_item	nl_item;$/;"	t
nl_langinfo	/usr/include/langinfo.h	/^char	*nl_langinfo(nl_item);$/;"	p	signature:(nl_item)
nlink_t	/usr/include/fts.h	/^typedef	__uint16_t		nlink_t;	\/* link count *\/$/;"	t
nlist	/usr/include/nlist.h	/^int nlist(const char *, struct nlist *);$/;"	p	signature:(const char *, struct nlist *)
nlist	/usr/include/nlist.h	/^struct nlist {$/;"	s
nlist::__anon89::n_name	/usr/include/nlist.h	/^		char *n_name;	\/* symbol name (in memory) *\/$/;"	m	union:nlist::__anon89	access:public
nlist::__anon89::n_strx	/usr/include/nlist.h	/^		long n_strx;	\/* file string table offset (on disk) *\/$/;"	m	union:nlist::__anon89	access:public
nlist::n_desc	/usr/include/nlist.h	/^	short n_desc;		\/* used by stab entries *\/$/;"	m	struct:nlist	access:public
nlist::n_other	/usr/include/nlist.h	/^	char n_other;		\/* spare *\/$/;"	m	struct:nlist	access:public
nlist::n_type	/usr/include/nlist.h	/^	unsigned char n_type;	\/* type defines *\/$/;"	m	struct:nlist	access:public
nlist::n_un	/usr/include/nlist.h	/^	} n_un;$/;"	m	struct:nlist	typeref:union:nlist::__anon89	access:public
nlist::n_value	/usr/include/nlist.h	/^	unsigned long n_value;	\/* address\/value of the symbol *\/$/;"	m	struct:nlist	access:public
no_argument	/usr/include/getopt.h	/^#define no_argument /;"	d
no_color_video	/usr/include/term.h	/^#define no_color_video /;"	d
no_correctly_working_cr	/usr/include/term.h	/^#define no_correctly_working_cr /;"	d
no_esc_ctlc	/usr/include/term.h	/^#define no_esc_ctlc /;"	d
no_pad_char	/usr/include/term.h	/^#define no_pad_char /;"	d
nocrmode	/usr/include/curses.h	/^#define nocrmode(/;"	d
nocrmode	/usr/include/ncurses.h	/^#define nocrmode(/;"	d
node	/usr/include/search.h	/^typedef	struct node {$/;"	s
node::key	/usr/include/search.h	/^	char         *key;$/;"	m	struct:node	access:public
node::llink	/usr/include/search.h	/^	struct node  *llink, *rlink;$/;"	m	struct:node	typeref:struct:node::node	access:public
node::rlink	/usr/include/search.h	/^	struct node  *llink, *rlink;$/;"	m	struct:node	typeref:struct:node::	access:public
node_t	/usr/include/search.h	/^} node_t;$/;"	t	typeref:struct:node
non_dest_scroll_region	/usr/include/term.h	/^#define non_dest_scroll_region /;"	d
non_rev_rmcup	/usr/include/term.h	/^#define non_rev_rmcup /;"	d
normalizePathProc	/usr/include/tcl.h	/^    Tcl_FSNormalizePathProc *normalizePathProc;$/;"	m	struct:Tcl_Filesystem	access:public
not	/usr/include/iso646.h	/^#define	not	/;"	d
not_eq	/usr/include/iso646.h	/^#define	not_eq	/;"	d
notify_cancel	/usr/include/notify.h	/^uint32_t notify_cancel(int token);$/;"	p	signature:(int token)
notify_check	/usr/include/notify.h	/^uint32_t notify_check(int token, int *check);$/;"	p	signature:(int token, int *check)
notify_post	/usr/include/notify.h	/^uint32_t notify_post(const char *name);$/;"	p	signature:(const char *name)
notify_register_check	/usr/include/notify.h	/^uint32_t notify_register_check(const char *name, int *out_token);$/;"	p	signature:(const char *name, int *out_token)
notify_register_file_descriptor	/usr/include/notify.h	/^uint32_t notify_register_file_descriptor(const char *name, int *notify_fd, int flags, int *out_token);$/;"	p	signature:(const char *name, int *notify_fd, int flags, int *out_token)
notify_register_mach_port	/usr/include/notify.h	/^uint32_t notify_register_mach_port(const char *name, mach_port_t *notify_port, int flags, int *out_token);$/;"	p	signature:(const char *name, mach_port_t *notify_port, int flags, int *out_token)
notify_register_signal	/usr/include/notify.h	/^uint32_t notify_register_signal(const char *name, int sig, int *out_token);$/;"	p	signature:(const char *name, int sig, int *out_token)
npages	/usr/include/mpool.h	/^	pgno_t	npages;			\/* number of pages in the file *\/$/;"	m	struct:MPOOL	access:public
nrand48	/usr/include/stdlib.h	/^long	 nrand48(unsigned short[3]);$/;"	p	signature:(unsigned short[3])
nrequire	/usr/include/AssertMacros.h	/^		#define nrequire(/;"	d
nrequire_action	/usr/include/AssertMacros.h	/^		#define nrequire_action(/;"	d
nrequire_action_quiet	/usr/include/AssertMacros.h	/^		#define nrequire_action_quiet(/;"	d
nrequire_action_string	/usr/include/AssertMacros.h	/^		#define nrequire_action_string(/;"	d
nrequire_quiet	/usr/include/AssertMacros.h	/^		#define nrequire_quiet(/;"	d
nrequire_string	/usr/include/AssertMacros.h	/^		#define nrequire_string(/;"	d
nrow	/usr/include/form.h	/^  int			nrow;		\/* off-screen rows		*\/$/;"	m	struct:fieldnode	access:public
nsPtr	/usr/include/tcl.h	/^    Tcl_Namespace *nsPtr;$/;"	m	struct:Tcl_CallFrame	access:public
ns_c_2	/usr/include/nameser.h	/^	ns_c_2 = 2,		\/* unallocated\/unsupported. *\/$/;"	e	enum:__ns_class
ns_c_any	/usr/include/nameser.h	/^	ns_c_any = 255,		\/* Wildcard match. *\/$/;"	e	enum:__ns_class
ns_c_chaos	/usr/include/nameser.h	/^	ns_c_chaos = 3,		\/* MIT Chaos-net. *\/$/;"	e	enum:__ns_class
ns_c_hs	/usr/include/nameser.h	/^	ns_c_hs = 4,		\/* MIT Hesiod. *\/$/;"	e	enum:__ns_class
ns_c_in	/usr/include/nameser.h	/^	ns_c_in = 1,		\/* Internet. *\/$/;"	e	enum:__ns_class
ns_c_invalid	/usr/include/nameser.h	/^	ns_c_invalid = 0,	\/* Cookie. *\/$/;"	e	enum:__ns_class
ns_c_max	/usr/include/nameser.h	/^	ns_c_max = 65536$/;"	e	enum:__ns_class
ns_c_none	/usr/include/nameser.h	/^	ns_c_none = 254,	\/* for prereq. sections in update requests *\/$/;"	e	enum:__ns_class
ns_cert_types	/usr/include/nameser.h	/^#define ns_cert_types /;"	d
ns_cert_types	/usr/include/nameser.h	/^} ns_cert_types;$/;"	t	typeref:enum:__ns_cert_types
ns_class	/usr/include/nameser.h	/^#define ns_class /;"	d
ns_class	/usr/include/nameser.h	/^} ns_class;$/;"	t	typeref:enum:__ns_class
ns_datetosecs	/usr/include/nameser.h	/^#define ns_datetosecs	/;"	d
ns_datetosecs	/usr/include/nameser.h	/^u_int32_t	ns_datetosecs __P((const char *cp, int *errp));$/;"	p	signature:(const char *cp, int *errp)
ns_f_aa	/usr/include/nameser.h	/^	ns_f_aa,		\/* Authoritative Answer. *\/$/;"	e	enum:__ns_flag
ns_f_ad	/usr/include/nameser.h	/^	ns_f_ad,		\/* Authentic Data (DNSSEC). *\/$/;"	e	enum:__ns_flag
ns_f_cd	/usr/include/nameser.h	/^	ns_f_cd,		\/* Checking Disabled (DNSSEC). *\/$/;"	e	enum:__ns_flag
ns_f_max	/usr/include/nameser.h	/^	ns_f_max$/;"	e	enum:__ns_flag
ns_f_opcode	/usr/include/nameser.h	/^	ns_f_opcode,		\/* Operation code. *\/$/;"	e	enum:__ns_flag
ns_f_qr	/usr/include/nameser.h	/^	ns_f_qr,		\/* Question\/Response. *\/$/;"	e	enum:__ns_flag
ns_f_ra	/usr/include/nameser.h	/^	ns_f_ra,		\/* Recursion Available. *\/$/;"	e	enum:__ns_flag
ns_f_rcode	/usr/include/nameser.h	/^	ns_f_rcode,		\/* Response code. *\/$/;"	e	enum:__ns_flag
ns_f_rd	/usr/include/nameser.h	/^	ns_f_rd,		\/* Recursion Desired. *\/$/;"	e	enum:__ns_flag
ns_f_tc	/usr/include/nameser.h	/^	ns_f_tc,		\/* Truncation occurred. *\/$/;"	e	enum:__ns_flag
ns_f_z	/usr/include/nameser.h	/^	ns_f_z,			\/* MBZ. *\/$/;"	e	enum:__ns_flag
ns_find_tsig	/usr/include/nameser.h	/^#define ns_find_tsig	/;"	d
ns_find_tsig	/usr/include/nameser.h	/^u_char		*ns_find_tsig __P((u_char *, u_char *));$/;"	p	signature:(u_char *, u_char *)
ns_flag	/usr/include/nameser.h	/^#define ns_flag /;"	d
ns_flag	/usr/include/nameser.h	/^} ns_flag;$/;"	t	typeref:enum:__ns_flag
ns_format_ttl	/usr/include/nameser.h	/^#define	ns_format_ttl	/;"	d
ns_format_ttl	/usr/include/nameser.h	/^int		ns_format_ttl __P((u_long, char *, size_t));$/;"	p	signature:(u_long, char *, size_t)
ns_get16	/usr/include/nameser.h	/^#define ns_get16	/;"	d
ns_get16	/usr/include/nameser.h	/^u_int		ns_get16 __P((const u_char *));$/;"	p	signature:(const u_char *)
ns_get32	/usr/include/nameser.h	/^#define ns_get32	/;"	d
ns_get32	/usr/include/nameser.h	/^u_long		ns_get32 __P((const u_char *));$/;"	p	signature:(const u_char *)
ns_initparse	/usr/include/nameser.h	/^#define ns_initparse	/;"	d
ns_initparse	/usr/include/nameser.h	/^int		ns_initparse __P((const u_char *, int, ns_msg *));$/;"	p	signature:(const u_char *, int, ns_msg *)
ns_key_types	/usr/include/nameser.h	/^#define ns_key_types /;"	d
ns_key_types	/usr/include/nameser.h	/^} ns_key_types;$/;"	t	typeref:enum:__ns_key_types
ns_kt_dh	/usr/include/nameser.h	/^	ns_kt_dh  = 2,		\/* Diffie Hellman *\/$/;"	e	enum:__ns_key_types
ns_kt_dsa	/usr/include/nameser.h	/^	ns_kt_dsa = 3,		\/* Digital Signature Standard (MANDATORY) *\/$/;"	e	enum:__ns_key_types
ns_kt_private	/usr/include/nameser.h	/^	ns_kt_private = 254	\/* Private key type starts with OID *\/$/;"	e	enum:__ns_key_types
ns_kt_rsa	/usr/include/nameser.h	/^	ns_kt_rsa = 1,		\/* key type RSA\/MD5 *\/$/;"	e	enum:__ns_key_types
ns_makecanon	/usr/include/nameser.h	/^#define	ns_makecanon	/;"	d
ns_makecanon	/usr/include/nameser.h	/^int		ns_makecanon __P((const char *, char *, size_t));$/;"	p	signature:(const char *, char *, size_t)
ns_msg	/usr/include/nameser.h	/^#define ns_msg /;"	d
ns_msg	/usr/include/nameser.h	/^} ns_msg;$/;"	t	typeref:struct:__ns_msg
ns_msg_base	/usr/include/nameser.h	/^#define ns_msg_base(/;"	d
ns_msg_count	/usr/include/nameser.h	/^#define ns_msg_count(/;"	d
ns_msg_end	/usr/include/nameser.h	/^#define ns_msg_end(/;"	d
ns_msg_getflag	/usr/include/nameser.h	/^#define	ns_msg_getflag	/;"	d
ns_msg_getflag	/usr/include/nameser.h	/^int		ns_msg_getflag __P((ns_msg, int));$/;"	p	signature:(ns_msg, int)
ns_msg_id	/usr/include/nameser.h	/^#define ns_msg_id(/;"	d
ns_msg_size	/usr/include/nameser.h	/^#define ns_msg_size(/;"	d
ns_name_compress	/usr/include/nameser.h	/^#define	ns_name_compress	/;"	d
ns_name_compress	/usr/include/nameser.h	/^int		ns_name_compress __P((const char *, u_char *, size_t,$/;"	p	signature:(const char *, u_char *, size_t, const u_char **, const u_char **)
ns_name_ntol	/usr/include/nameser.h	/^#define	ns_name_ntol	/;"	d
ns_name_ntol	/usr/include/nameser.h	/^int		ns_name_ntol __P((const u_char *, u_char *, size_t));$/;"	p	signature:(const u_char *, u_char *, size_t)
ns_name_ntop	/usr/include/nameser.h	/^#define	ns_name_ntop	/;"	d
ns_name_ntop	/usr/include/nameser.h	/^int		ns_name_ntop __P((const u_char *, char *, size_t));$/;"	p	signature:(const u_char *, char *, size_t)
ns_name_pack	/usr/include/nameser.h	/^#define	ns_name_pack	/;"	d
ns_name_pack	/usr/include/nameser.h	/^int		ns_name_pack __P((const u_char *, u_char *, int,$/;"	p	signature:(const u_char *, u_char *, int, const u_char **, const u_char **)
ns_name_pton	/usr/include/nameser.h	/^#define	ns_name_pton	/;"	d
ns_name_pton	/usr/include/nameser.h	/^int		ns_name_pton __P((const char *, u_char *, size_t));$/;"	p	signature:(const char *, u_char *, size_t)
ns_name_rollback	/usr/include/nameser.h	/^#define	ns_name_rollback	/;"	d
ns_name_rollback	/usr/include/nameser.h	/^void		ns_name_rollback __P((const u_char *, const u_char **,$/;"	p	signature:(const u_char *, const u_char **, const u_char **)
ns_name_skip	/usr/include/nameser.h	/^#define	ns_name_skip	/;"	d
ns_name_skip	/usr/include/nameser.h	/^int		ns_name_skip __P((const u_char **, const u_char *));$/;"	p	signature:(const u_char **, const u_char *)
ns_name_uncompress	/usr/include/nameser.h	/^#define	ns_name_uncompress	/;"	d
ns_name_uncompress	/usr/include/nameser.h	/^int		ns_name_uncompress __P((const u_char *, const u_char *,$/;"	p	signature:(const u_char *, const u_char *, const u_char *, char *, size_t)
ns_name_unpack	/usr/include/nameser.h	/^#define	ns_name_unpack	/;"	d
ns_name_unpack	/usr/include/nameser.h	/^int		ns_name_unpack __P((const u_char *, const u_char *,$/;"	p	signature:(const u_char *, const u_char *, const u_char *, u_char *, size_t)
ns_o_iquery	/usr/include/nameser.h	/^	ns_o_iquery = 1,	\/* Inverse query (deprecated\/unsupported). *\/$/;"	e	enum:__ns_opcode
ns_o_max	/usr/include/nameser.h	/^	ns_o_max = 6$/;"	e	enum:__ns_opcode
ns_o_notify	/usr/include/nameser.h	/^	ns_o_notify = 4,	\/* Zone change notification. *\/$/;"	e	enum:__ns_opcode
ns_o_query	/usr/include/nameser.h	/^	ns_o_query = 0,		\/* Standard query. *\/$/;"	e	enum:__ns_opcode
ns_o_status	/usr/include/nameser.h	/^	ns_o_status = 2,	\/* Name server status query (unsupported). *\/$/;"	e	enum:__ns_opcode
ns_o_update	/usr/include/nameser.h	/^	ns_o_update = 5,	\/* Zone update message. *\/$/;"	e	enum:__ns_opcode
ns_opcode	/usr/include/nameser.h	/^#define ns_opcode /;"	d
ns_opcode	/usr/include/nameser.h	/^} ns_opcode;$/;"	t	typeref:enum:__ns_opcode
ns_parse_ttl	/usr/include/nameser.h	/^#define	ns_parse_ttl	/;"	d
ns_parse_ttl	/usr/include/nameser.h	/^int		ns_parse_ttl __P((const char *, u_long *));$/;"	p	signature:(const char *, u_long *)
ns_parserr	/usr/include/nameser.h	/^#define ns_parserr	/;"	d
ns_parserr	/usr/include/nameser.h	/^int		ns_parserr __P((ns_msg *, ns_sect, int, ns_rr *));$/;"	p	signature:(ns_msg *, ns_sect, int, ns_rr *)
ns_put16	/usr/include/nameser.h	/^#define ns_put16	/;"	d
ns_put16	/usr/include/nameser.h	/^void		ns_put16 __P((u_int, u_char *));$/;"	p	signature:(u_int, u_char *)
ns_put32	/usr/include/nameser.h	/^#define ns_put32	/;"	d
ns_put32	/usr/include/nameser.h	/^void		ns_put32 __P((u_long, u_char *));$/;"	p	signature:(u_long, u_char *)
ns_r_badkey	/usr/include/nameser.h	/^	ns_r_badkey = 17,$/;"	e	enum:__ns_rcode
ns_r_badsig	/usr/include/nameser.h	/^	ns_r_badsig = 16,$/;"	e	enum:__ns_rcode
ns_r_badtime	/usr/include/nameser.h	/^	ns_r_badtime = 18$/;"	e	enum:__ns_rcode
ns_r_badvers	/usr/include/nameser.h	/^	ns_r_badvers = 16,$/;"	e	enum:__ns_rcode
ns_r_formerr	/usr/include/nameser.h	/^	ns_r_formerr = 1,	\/* Format error. *\/$/;"	e	enum:__ns_rcode
ns_r_max	/usr/include/nameser.h	/^	ns_r_max = 11,$/;"	e	enum:__ns_rcode
ns_r_noerror	/usr/include/nameser.h	/^	ns_r_noerror = 0,	\/* No error occurred. *\/$/;"	e	enum:__ns_rcode
ns_r_notauth	/usr/include/nameser.h	/^	ns_r_notauth = 9,	\/* Not authoritative for zone *\/$/;"	e	enum:__ns_rcode
ns_r_notimpl	/usr/include/nameser.h	/^	ns_r_notimpl = 4,	\/* Unimplemented. *\/$/;"	e	enum:__ns_rcode
ns_r_notzone	/usr/include/nameser.h	/^	ns_r_notzone = 10,	\/* Zone of record different from zone section *\/$/;"	e	enum:__ns_rcode
ns_r_nxdomain	/usr/include/nameser.h	/^	ns_r_nxdomain = 3,	\/* Name error. *\/$/;"	e	enum:__ns_rcode
ns_r_nxrrset	/usr/include/nameser.h	/^	ns_r_nxrrset = 8,	\/* RRset does not exist *\/$/;"	e	enum:__ns_rcode
ns_r_refused	/usr/include/nameser.h	/^	ns_r_refused = 5,	\/* Operation refused. *\/$/;"	e	enum:__ns_rcode
ns_r_servfail	/usr/include/nameser.h	/^	ns_r_servfail = 2,	\/* Server failure. *\/$/;"	e	enum:__ns_rcode
ns_r_yxdomain	/usr/include/nameser.h	/^	ns_r_yxdomain = 6,	\/* Name exists *\/$/;"	e	enum:__ns_rcode
ns_r_yxrrset	/usr/include/nameser.h	/^	ns_r_yxrrset = 7,	\/* RRset exists *\/$/;"	e	enum:__ns_rcode
ns_rcode	/usr/include/nameser.h	/^#define ns_rcode /;"	d
ns_rcode	/usr/include/nameser.h	/^} ns_rcode;$/;"	t	typeref:enum:__ns_rcode
ns_rr	/usr/include/nameser.h	/^#define ns_rr /;"	d
ns_rr	/usr/include/nameser.h	/^} ns_rr;$/;"	t	typeref:struct:__ns_rr
ns_rr_class	/usr/include/nameser.h	/^#define ns_rr_class(/;"	d
ns_rr_name	/usr/include/nameser.h	/^#define ns_rr_name(/;"	d
ns_rr_rdata	/usr/include/nameser.h	/^#define ns_rr_rdata(/;"	d
ns_rr_rdlen	/usr/include/nameser.h	/^#define ns_rr_rdlen(/;"	d
ns_rr_ttl	/usr/include/nameser.h	/^#define ns_rr_ttl(/;"	d
ns_rr_type	/usr/include/nameser.h	/^#define ns_rr_type(/;"	d
ns_s_an	/usr/include/nameser.h	/^	ns_s_an = 1,		\/* Query: Answer. *\/$/;"	e	enum:__ns_sect
ns_s_ar	/usr/include/nameser.h	/^	ns_s_ar = 3,		\/* Query|Update: Additional records. *\/$/;"	e	enum:__ns_sect
ns_s_max	/usr/include/nameser.h	/^	ns_s_max = 4$/;"	e	enum:__ns_sect
ns_s_ns	/usr/include/nameser.h	/^	ns_s_ns = 2,		\/* Query: Name servers. *\/$/;"	e	enum:__ns_sect
ns_s_pr	/usr/include/nameser.h	/^	ns_s_pr = 1,		\/* Update: Prerequisites. *\/$/;"	e	enum:__ns_sect
ns_s_qd	/usr/include/nameser.h	/^	ns_s_qd = 0,		\/* Query: Question. *\/$/;"	e	enum:__ns_sect
ns_s_ud	/usr/include/nameser.h	/^	ns_s_ud = 2,		\/* Update: Update. *\/$/;"	e	enum:__ns_sect
ns_s_zn	/usr/include/nameser.h	/^	ns_s_zn = 0,		\/* Update: Zone. *\/$/;"	e	enum:__ns_sect
ns_samedomain	/usr/include/nameser.h	/^#define	ns_samedomain	/;"	d
ns_samedomain	/usr/include/nameser.h	/^int		ns_samedomain __P((const char *, const char *));$/;"	p	signature:(const char *, const char *)
ns_samename	/usr/include/nameser.h	/^#define	ns_samename	/;"	d
ns_samename	/usr/include/nameser.h	/^int		ns_samename __P((const char *, const char *));$/;"	p	signature:(const char *, const char *)
ns_sect	/usr/include/nameser.h	/^#define ns_sect /;"	d
ns_sect	/usr/include/nameser.h	/^} ns_sect;$/;"	t	typeref:enum:__ns_sect
ns_sign	/usr/include/nameser.h	/^#define	ns_sign	/;"	d
ns_sign	/usr/include/nameser.h	/^int		ns_sign __P((u_char *, int *, int, int, void *,$/;"	p	signature:(u_char *, int *, int, int, void *, const u_char *, int, u_char *, int *, time_t)
ns_sign2	/usr/include/nameser.h	/^#define	ns_sign2	/;"	d
ns_sign2	/usr/include/nameser.h	/^int		ns_sign2 __P((u_char *, int *, int, int, void *,$/;"	p	signature:(u_char *, int *, int, int, void *, const u_char *, int, u_char *, int *, time_t, u_char **, u_char **)
ns_sign_tcp	/usr/include/nameser.h	/^#define	ns_sign_tcp	/;"	d
ns_sign_tcp	/usr/include/nameser.h	/^int		ns_sign_tcp __P((u_char *, int *, int, int,$/;"	p	signature:(u_char *, int *, int, int, ns_tcp_tsig_state *, int)
ns_sign_tcp2	/usr/include/nameser.h	/^#define	ns_sign_tcp2	/;"	d
ns_sign_tcp2	/usr/include/nameser.h	/^int		ns_sign_tcp2 __P((u_char *, int *, int, int,$/;"	p	signature:(u_char *, int *, int, int, ns_tcp_tsig_state *, int, u_char **, u_char **)
ns_sign_tcp_init	/usr/include/nameser.h	/^#define	ns_sign_tcp_init	/;"	d
ns_sign_tcp_init	/usr/include/nameser.h	/^int		ns_sign_tcp_init __P((void *, const u_char *, int,$/;"	p	signature:(void *, const u_char *, int, ns_tcp_tsig_state *)
ns_skiprr	/usr/include/nameser.h	/^#define ns_skiprr	/;"	d
ns_skiprr	/usr/include/nameser.h	/^int		ns_skiprr __P((const u_char *, const u_char *, ns_sect, int));$/;"	p	signature:(const u_char *, const u_char *, ns_sect, int)
ns_sprintrr	/usr/include/nameser.h	/^#define	ns_sprintrr	/;"	d
ns_sprintrr	/usr/include/nameser.h	/^int		ns_sprintrr __P((const ns_msg *, const ns_rr *,$/;"	p	signature:(const ns_msg *, const ns_rr *, const char *, const char *, char *, size_t)
ns_sprintrrf	/usr/include/nameser.h	/^#define	ns_sprintrrf	/;"	d
ns_sprintrrf	/usr/include/nameser.h	/^int		ns_sprintrrf __P((const u_char *, size_t, const char *,$/;"	p	signature:(const u_char *, size_t, const char *, ns_class, ns_type, u_long, const u_char *, size_t, const char *, const char *, char *, size_t)
ns_subdomain	/usr/include/nameser.h	/^#define	ns_subdomain	/;"	d
ns_subdomain	/usr/include/nameser.h	/^int		ns_subdomain __P((const char *, const char *));$/;"	p	signature:(const char *, const char *)
ns_t_a	/usr/include/nameser.h	/^	ns_t_a = 1,		\/* Host address. *\/$/;"	e	enum:__ns_type
ns_t_a6	/usr/include/nameser.h	/^	ns_t_a6 = 38,		\/* IPv6 address (deprecates AAAA) *\/$/;"	e	enum:__ns_type
ns_t_aaaa	/usr/include/nameser.h	/^	ns_t_aaaa = 28,		\/* Ip6 Address. *\/$/;"	e	enum:__ns_type
ns_t_afsdb	/usr/include/nameser.h	/^	ns_t_afsdb = 18,	\/* AFS cell database. *\/$/;"	e	enum:__ns_type
ns_t_any	/usr/include/nameser.h	/^	ns_t_any = 255,		\/* Wildcard match. *\/$/;"	e	enum:__ns_type
ns_t_atma	/usr/include/nameser.h	/^	ns_t_atma = 34,		\/* ATM Address *\/$/;"	e	enum:__ns_type
ns_t_axfr	/usr/include/nameser.h	/^	ns_t_axfr = 252,	\/* Transfer zone of authority. *\/$/;"	e	enum:__ns_type
ns_t_cert	/usr/include/nameser.h	/^	ns_t_cert = 37,		\/* Certification record *\/$/;"	e	enum:__ns_type
ns_t_cname	/usr/include/nameser.h	/^	ns_t_cname = 5,		\/* Canonical name. *\/$/;"	e	enum:__ns_type
ns_t_dname	/usr/include/nameser.h	/^	ns_t_dname = 39,	\/* Non-terminal DNAME (for IPv6) *\/$/;"	e	enum:__ns_type
ns_t_eid	/usr/include/nameser.h	/^	ns_t_eid = 31,		\/* Endpoint identifier. *\/$/;"	e	enum:__ns_type
ns_t_gpos	/usr/include/nameser.h	/^	ns_t_gpos = 27,		\/* Geographical position (withdrawn). *\/$/;"	e	enum:__ns_type
ns_t_hinfo	/usr/include/nameser.h	/^	ns_t_hinfo = 13,	\/* Host information. *\/$/;"	e	enum:__ns_type
ns_t_invalid	/usr/include/nameser.h	/^	ns_t_invalid = 0,	\/* Cookie. *\/$/;"	e	enum:__ns_type
ns_t_isdn	/usr/include/nameser.h	/^	ns_t_isdn = 20,		\/* ISDN calling address. *\/$/;"	e	enum:__ns_type
ns_t_ixfr	/usr/include/nameser.h	/^	ns_t_ixfr = 251,	\/* Incremental zone transfer. *\/$/;"	e	enum:__ns_type
ns_t_key	/usr/include/nameser.h	/^	ns_t_key = 25,		\/* Security key. *\/$/;"	e	enum:__ns_type
ns_t_kx	/usr/include/nameser.h	/^	ns_t_kx = 36,		\/* Key Exchange *\/$/;"	e	enum:__ns_type
ns_t_loc	/usr/include/nameser.h	/^	ns_t_loc = 29,		\/* Location Information. *\/$/;"	e	enum:__ns_type
ns_t_maila	/usr/include/nameser.h	/^	ns_t_maila = 254,	\/* Transfer mail agent records. *\/$/;"	e	enum:__ns_type
ns_t_mailb	/usr/include/nameser.h	/^	ns_t_mailb = 253,	\/* Transfer mailbox records. *\/$/;"	e	enum:__ns_type
ns_t_max	/usr/include/nameser.h	/^	ns_t_max = 65536$/;"	e	enum:__ns_type
ns_t_mb	/usr/include/nameser.h	/^	ns_t_mb = 7,		\/* Mailbox domain name. *\/$/;"	e	enum:__ns_type
ns_t_md	/usr/include/nameser.h	/^	ns_t_md = 3,		\/* Mail destination. *\/$/;"	e	enum:__ns_type
ns_t_mf	/usr/include/nameser.h	/^	ns_t_mf = 4,		\/* Mail forwarder. *\/$/;"	e	enum:__ns_type
ns_t_mg	/usr/include/nameser.h	/^	ns_t_mg = 8,		\/* Mail group member. *\/$/;"	e	enum:__ns_type
ns_t_minfo	/usr/include/nameser.h	/^	ns_t_minfo = 14,	\/* Mailbox information. *\/$/;"	e	enum:__ns_type
ns_t_mr	/usr/include/nameser.h	/^	ns_t_mr = 9,		\/* Mail rename name. *\/$/;"	e	enum:__ns_type
ns_t_mrr_p	/usr/include/nameser.h	/^#define	ns_t_mrr_p(/;"	d
ns_t_mx	/usr/include/nameser.h	/^	ns_t_mx = 15,		\/* Mail routing information. *\/$/;"	e	enum:__ns_type
ns_t_naptr	/usr/include/nameser.h	/^	ns_t_naptr = 35,	\/* Naming Authority PoinTeR *\/$/;"	e	enum:__ns_type
ns_t_nimloc	/usr/include/nameser.h	/^	ns_t_nimloc = 32,	\/* Nimrod Locator. *\/$/;"	e	enum:__ns_type
ns_t_ns	/usr/include/nameser.h	/^	ns_t_ns = 2,		\/* Authoritative server. *\/$/;"	e	enum:__ns_type
ns_t_nsap	/usr/include/nameser.h	/^	ns_t_nsap = 22,		\/* NSAP address. *\/$/;"	e	enum:__ns_type
ns_t_nsap_ptr	/usr/include/nameser.h	/^	ns_t_nsap_ptr = 23,	\/* Reverse NSAP lookup (deprecated). *\/$/;"	e	enum:__ns_type
ns_t_null	/usr/include/nameser.h	/^	ns_t_null = 10,		\/* Null resource record. *\/$/;"	e	enum:__ns_type
ns_t_nxt	/usr/include/nameser.h	/^	ns_t_nxt = 30,		\/* Next domain (security). *\/$/;"	e	enum:__ns_type
ns_t_opt	/usr/include/nameser.h	/^	ns_t_opt = 41,		\/* EDNS0 option (meta-RR) *\/$/;"	e	enum:__ns_type
ns_t_ptr	/usr/include/nameser.h	/^	ns_t_ptr = 12,		\/* Domain name pointer. *\/$/;"	e	enum:__ns_type
ns_t_px	/usr/include/nameser.h	/^	ns_t_px = 26,		\/* X.400 mail mapping. *\/$/;"	e	enum:__ns_type
ns_t_qt_p	/usr/include/nameser.h	/^#define	ns_t_qt_p(/;"	d
ns_t_rp	/usr/include/nameser.h	/^	ns_t_rp = 17,		\/* Responsible person. *\/$/;"	e	enum:__ns_type
ns_t_rr_p	/usr/include/nameser.h	/^#define ns_t_rr_p(/;"	d
ns_t_rt	/usr/include/nameser.h	/^	ns_t_rt = 21,		\/* Router. *\/$/;"	e	enum:__ns_type
ns_t_sig	/usr/include/nameser.h	/^	ns_t_sig = 24,		\/* Security signature. *\/$/;"	e	enum:__ns_type
ns_t_sink	/usr/include/nameser.h	/^	ns_t_sink = 40,		\/* Kitchen sink (experimentatl) *\/$/;"	e	enum:__ns_type
ns_t_soa	/usr/include/nameser.h	/^	ns_t_soa = 6,		\/* Start of authority zone. *\/$/;"	e	enum:__ns_type
ns_t_srv	/usr/include/nameser.h	/^	ns_t_srv = 33,		\/* Server Selection. *\/$/;"	e	enum:__ns_type
ns_t_tkey	/usr/include/nameser.h	/^	ns_t_tkey = 249,	\/* Transaction key *\/$/;"	e	enum:__ns_type
ns_t_tsig	/usr/include/nameser.h	/^	ns_t_tsig = 250,	\/* Transaction signature. *\/$/;"	e	enum:__ns_type
ns_t_txt	/usr/include/nameser.h	/^	ns_t_txt = 16,		\/* Text strings. *\/$/;"	e	enum:__ns_type
ns_t_udp_p	/usr/include/nameser.h	/^#define ns_t_udp_p(/;"	d
ns_t_wks	/usr/include/nameser.h	/^	ns_t_wks = 11,		\/* Well known service. *\/$/;"	e	enum:__ns_type
ns_t_x25	/usr/include/nameser.h	/^	ns_t_x25 = 19,		\/* X_25 calling address. *\/$/;"	e	enum:__ns_type
ns_t_xfr_p	/usr/include/nameser.h	/^#define ns_t_xfr_p(/;"	d
ns_t_zxfr	/usr/include/nameser.h	/^	ns_t_zxfr = 256,	\/* BIND-specific, nonstandard. *\/$/;"	e	enum:__ns_type
ns_tcp_tsig_state	/usr/include/nameser.h	/^#define ns_tcp_tsig_state /;"	d
ns_tcp_tsig_state	/usr/include/nameser.h	/^struct ns_tcp_tsig_state {$/;"	s
ns_tcp_tsig_state	/usr/include/nameser.h	/^typedef struct ns_tcp_tsig_state ns_tcp_tsig_state;$/;"	t	typeref:struct:ns_tcp_tsig_state
ns_tcp_tsig_state::counter	/usr/include/nameser.h	/^	int counter;$/;"	m	struct:ns_tcp_tsig_state	access:public
ns_tcp_tsig_state::ctx	/usr/include/nameser.h	/^	void *ctx;$/;"	m	struct:ns_tcp_tsig_state	access:public
ns_tcp_tsig_state::key	/usr/include/nameser.h	/^	struct dst_key *key;$/;"	m	struct:ns_tcp_tsig_state	typeref:struct:ns_tcp_tsig_state::dst_key	access:public
ns_tcp_tsig_state::sig	/usr/include/nameser.h	/^	unsigned char sig[NS_PACKETSZ];$/;"	m	struct:ns_tcp_tsig_state	access:public
ns_tcp_tsig_state::siglen	/usr/include/nameser.h	/^	int siglen;$/;"	m	struct:ns_tcp_tsig_state	access:public
ns_tsig_key	/usr/include/nameser.h	/^#define ns_tsig_key /;"	d
ns_tsig_key	/usr/include/nameser.h	/^struct ns_tsig_key {$/;"	s
ns_tsig_key	/usr/include/nameser.h	/^typedef struct ns_tsig_key ns_tsig_key;$/;"	t	typeref:struct:ns_tsig_key
ns_tsig_key::alg	/usr/include/nameser.h	/^        char name[NS_MAXDNAME], alg[NS_MAXDNAME];$/;"	m	struct:ns_tsig_key	access:public
ns_tsig_key::data	/usr/include/nameser.h	/^        unsigned char *data;$/;"	m	struct:ns_tsig_key	access:public
ns_tsig_key::len	/usr/include/nameser.h	/^        int len;$/;"	m	struct:ns_tsig_key	access:public
ns_tsig_key::name	/usr/include/nameser.h	/^        char name[NS_MAXDNAME], alg[NS_MAXDNAME];$/;"	m	struct:ns_tsig_key	access:public
ns_type	/usr/include/nameser.h	/^} ns_type;$/;"	t	typeref:enum:__ns_type
ns_typw	/usr/include/nameser.h	/^#define ns_typw /;"	d
ns_uop_add	/usr/include/nameser.h	/^	ns_uop_add = 1,$/;"	e	enum:__ns_update_operation
ns_uop_delete	/usr/include/nameser.h	/^	ns_uop_delete = 0,$/;"	e	enum:__ns_update_operation
ns_uop_max	/usr/include/nameser.h	/^	ns_uop_max = 2$/;"	e	enum:__ns_update_operation
ns_update_operation	/usr/include/nameser.h	/^#define ns_update_operation /;"	d
ns_update_operation	/usr/include/nameser.h	/^} ns_update_operation;$/;"	t	typeref:enum:__ns_update_operation
ns_verify	/usr/include/nameser.h	/^#define	ns_verify	/;"	d
ns_verify	/usr/include/nameser.h	/^int		ns_verify __P((u_char *, int *, void *,$/;"	p	signature:(u_char *, int *, void *, const u_char *, int, u_char *, int *, time_t *, int)
ns_verify_tcp	/usr/include/nameser.h	/^#define	ns_verify_tcp	/;"	d
ns_verify_tcp	/usr/include/nameser.h	/^int		ns_verify_tcp __P((u_char *, int *, ns_tcp_tsig_state *, int));$/;"	p	signature:(u_char *, int *, ns_tcp_tsig_state *, int)
ns_verify_tcp_init	/usr/include/nameser.h	/^#define	ns_verify_tcp_init	/;"	d
ns_verify_tcp_init	/usr/include/nameser.h	/^int		ns_verify_tcp_init __P((void *, const u_char *, int,$/;"	p	signature:(void *, const u_char *, int, ns_tcp_tsig_state *)
nsaddr	/usr/include/resolv.h	/^#define	nsaddr	/;"	d
nsaddr_list	/usr/include/resolv.h	/^		nsaddr_list[MAXNS];	\/* address of name server *\/$/;"	m	struct:__res_state	typeref:struct:__res_state::sockaddr_in	access:public
nscount	/usr/include/dns_util.h	/^	uint16_t nscount;$/;"	m	struct:__anon22	access:public
nscount	/usr/include/resolv.h	/^			u_int16_t		nscount;$/;"	m	struct:__res_state::__anon99::__anon100	access:public
nscount	/usr/include/resolv.h	/^	int	nscount;		\/* number of name servers *\/$/;"	m	struct:__res_state	access:public
nsort	/usr/include/resolv.h	/^	unsigned nsort:4;		\/* number of elements in sort_list[] *\/$/;"	m	struct:__res_state	access:public
nssocks	/usr/include/resolv.h	/^			int			nssocks[MAXNS];$/;"	m	struct:__res_state::__anon99::__anon100	access:public
nstimes	/usr/include/resolv.h	/^			u_int16_t		nstimes[MAXNS];	\/* ms. *\/$/;"	m	struct:__res_state::__anon99::__anon100	access:public
nsubs	/usr/include/tcl.h	/^    int nsubs;			\/* Number of subexpressions in the compiled$/;"	m	struct:Tcl_RegExpInfo	access:public
nt_sid_t	/usr/include/ntsid.h	/^} nt_sid_t __attribute__ ((packed));$/;"	t	typeref:struct:__anon90
nte_index	/usr/include/tic.h	/^	short	nte_index;	\/* index of associated variable in its array *\/$/;"	m	struct:name_table_entry	access:public
nte_link	/usr/include/tic.h	/^	short	nte_link;	\/* index in table of next hash, or -1 *\/$/;"	m	struct:name_table_entry	access:public
nte_name	/usr/include/tic.h	/^	const char *nte_name;	\/* name to hash on *\/$/;"	m	struct:name_table_entry	access:public
nte_type	/usr/include/tic.h	/^	int	nte_type;	\/* BOOLEAN, NUMBER or STRING *\/$/;"	m	struct:name_table_entry	access:public
nullSize	/usr/include/tcl.h	/^    int nullSize;		\/* Number of zero bytes that signify$/;"	m	struct:Tcl_EncodingType	access:public
num	/usr/include/histedit.h	/^	int		 num;$/;"	m	struct:HistEvent	access:public
numBuckets	/usr/include/tcl.h	/^    int numBuckets;		\/* Total number of buckets allocated at$/;"	m	struct:Tcl_HashTable	access:public
numComponents	/usr/include/tcl.h	/^    int numComponents;		\/* If this token is composed of other tokens,$/;"	m	struct:Tcl_Token	access:public
numEntries	/usr/include/tcl.h	/^    int numEntries;		\/* Total number of entries present in$/;"	m	struct:Tcl_HashTable	access:public
numItems	/usr/include/tk.h	/^    int numItems;		\/* The number of valid items in items field. *\/$/;"	m	struct:Tk_SavedOptions	access:public
numTags	/usr/include/tk.h	/^    int numTags;		\/* Number of tag slots actually used at$/;"	m	struct:Tk_Item	access:public
numTokens	/usr/include/tcl.h	/^    int numTokens;		\/* Total number of tokens in command. *\/$/;"	m	struct:Tcl_Parse	access:public
numWords	/usr/include/tcl.h	/^    int numWords;		\/* Total number of words in command. May be$/;"	m	struct:Tcl_Parse	access:public
num_Booleans	/usr/include/term.h	/^    unsigned short num_Booleans;\/* count total Booleans *\/$/;"	m	struct:termtype	access:public
num_Numbers	/usr/include/term.h	/^    unsigned short num_Numbers;	\/* count total Numbers *\/$/;"	m	struct:termtype	access:public
num_Strings	/usr/include/term.h	/^    unsigned short num_Strings;	\/* count total Strings *\/$/;"	m	struct:termtype	access:public
num_labels	/usr/include/term.h	/^#define num_labels /;"	d
number	/usr/include/resolv.h	/^	int		number;	   \/* Identifying number, like T_MX *\/$/;"	m	struct:res_sym	access:public
number	/usr/include/tk.h	/^    int number;$/;"	m	struct:Tk_Dash	access:public
number_of_function_keys	/usr/include/term.h	/^#define number_of_function_keys /;"	d
number_of_pins	/usr/include/term.h	/^#define number_of_pins /;"	d
numchildren	/usr/include/expat.h	/^  unsigned int                  numchildren;$/;"	m	struct:XML_cp	access:public
numeric_addr	/usr/include/tcpd.h	/^extern int numeric_addr();		\/* IP4\/IP6 inet_addr (restricted) *\/$/;"	p	signature:()
nuses	/usr/include/term_entry.h	/^	unsigned	nuses;$/;"	m	struct:entry	access:public
nverify	/usr/include/AssertMacros.h	/^		#define nverify(/;"	d
nverify_string	/usr/include/AssertMacros.h	/^		#define nverify_string(/;"	d
objClientData	/usr/include/tcl.h	/^    ClientData objClientData;	\/* ClientData for object proc. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
objOffset	/usr/include/tk.h	/^    int objOffset;		\/* Where in record to store a Tcl_Obj * that$/;"	m	struct:Tk_OptionSpec	access:public
objProc	/usr/include/tcl.h	/^    Tcl_ObjCmdProc *objProc;	\/* Command's object-based function. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
objPtr	/usr/include/tcl.h	/^	Tcl_Obj *objPtr;	\/* Tcl_Obj * key value. *\/$/;"	m	union:Tcl_HashEntry::__anon117	access:public
objResultPtr	/usr/include/tcl.h	/^    Tcl_Obj *objResultPtr;$/;"	m	struct:Tcl_SavedResult	access:public
oc_at_oids_may	/usr/include/ldap_schema.h	/^	char **oc_at_oids_may;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
oc_at_oids_must	/usr/include/ldap_schema.h	/^	char **oc_at_oids_must;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
oc_desc	/usr/include/ldap_schema.h	/^	char *oc_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
oc_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **oc_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
oc_kind	/usr/include/ldap_schema.h	/^	int  oc_kind;		\/* 0=ABSTRACT, 1=STRUCTURAL, 2=AUXILIARY *\/$/;"	m	struct:ldap_objectclass	access:public
oc_names	/usr/include/ldap_schema.h	/^	char **oc_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
oc_obsolete	/usr/include/ldap_schema.h	/^	int  oc_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_objectclass	access:public
oc_oid	/usr/include/ldap_schema.h	/^	char *oc_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_objectclass	access:public
oc_sup_oids	/usr/include/ldap_schema.h	/^	char **oc_sup_oids;	\/* OPTIONAL *\/$/;"	m	struct:ldap_objectclass	access:public
off_t	/usr/include/stdio.h	/^typedef	__darwin_off_t		off_t;$/;"	t
off_t	/usr/include/unistd.h	/^typedef __darwin_off_t		off_t;$/;"	t
offset	/usr/include/tic.h	/^	unsigned offset;$/;"	m	struct:tinfo_fkeys	access:public
offset	/usr/include/tk.h	/^    int offset;			\/* Dash offset. *\/$/;"	m	struct:Tk_Outline	access:public
offset	/usr/include/tk.h	/^    int offset;			\/* Where in widget record to store value; use$/;"	m	struct:Tk_ConfigSpec	access:public
offset	/usr/include/tk.h	/^    int offset[4];		\/* Address differences between the red, green,$/;"	m	struct:Tk_PhotoImageBlock	access:public
offsetof	/usr/include/stddef.h	/^#define offsetof(/;"	d
oldp	/usr/include/term_entry.h	/^extern NCURSES_EXPORT(ENTRY *) _nc_copy_entry (ENTRY *oldp);$/;"	v
omit	/usr/include/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	access:public
ompi_fortran_bogus_type_t	/usr/include/mpi.h	/^#define ompi_fortran_bogus_type_t /;"	d
ompi_fortran_integer_t	/usr/include/mpi.h	/^#define ompi_fortran_integer_t /;"	d
ompi_status_public_t	/usr/include/mpi.h	/^struct ompi_status_public_t { $/;"	s
ompi_status_public_t	/usr/include/mpi.h	/^typedef struct ompi_status_public_t ompi_status_public_t;$/;"	t	typeref:struct:ompi_status_public_t
ompi_status_public_t::MPI_ERROR	/usr/include/mpi.h	/^  int MPI_ERROR;$/;"	m	struct:ompi_status_public_t	access:public
ompi_status_public_t::MPI_SOURCE	/usr/include/mpi.h	/^  int MPI_SOURCE;$/;"	m	struct:ompi_status_public_t	access:public
ompi_status_public_t::MPI_TAG	/usr/include/mpi.h	/^  int MPI_TAG;$/;"	m	struct:ompi_status_public_t	access:public
ompi_status_public_t::_cancelled	/usr/include/mpi.h	/^  int _cancelled;$/;"	m	struct:ompi_status_public_t	access:public
ompi_status_public_t::_count	/usr/include/mpi.h	/^  int _count;$/;"	m	struct:ompi_status_public_t	access:public
oneWordValue	/usr/include/tcl.h	/^	char *oneWordValue;	\/* One-word value for key. *\/$/;"	m	union:Tcl_HashEntry::__anon117	access:public
op	/usr/include/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
opaque	/usr/include/bzlib.h	/^      void *opaque;$/;"	m	struct:__anon3	access:public
opaque	/usr/include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	access:public
open	/usr/include/sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	access:public
open16	/usr/include/sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	access:public
openFileChannelProc	/usr/include/tcl.h	/^    Tcl_FSOpenFileChannelProc *openFileChannelProc;$/;"	m	struct:Tcl_Filesystem	access:public
open_v2	/usr/include/sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	access:public
opendev	/usr/include/util.h	/^int	opendev(char *, int, int, char **);$/;"	p	signature:(char *, int, int, char **)
opendir	/usr/include/dirent.h	/^DIR *opendir(const char *) __DARWIN_ALIAS_I(opendir);$/;"	v
openpty	/usr/include/util.h	/^int	openpty(int *, int *, char *, struct termios *,$/;"	p	signature:(int *, int *, char *, struct termios *, struct winsize *)
opt	/usr/include/menu.h	/^  Item_Options   opt;         \/* Item options                              *\/ $/;"	m	struct:tagITEM	access:public
opt	/usr/include/menu.h	/^  Menu_Options   opt;                   \/* Menu options                    *\/$/;"	m	struct:tagMENU	access:public
option	/usr/include/getopt.h	/^struct option {$/;"	s
option::flag	/usr/include/getopt.h	/^	int *flag;$/;"	m	struct:option	access:public
option::has_arg	/usr/include/getopt.h	/^	int has_arg;$/;"	m	struct:option	access:public
option::name	/usr/include/getopt.h	/^	const char *name;$/;"	m	struct:option	access:public
option::val	/usr/include/getopt.h	/^	int val;$/;"	m	struct:option	access:public
optionName	/usr/include/tk.h	/^    const char *optionName;	\/* Name used to specify option in Tcl$/;"	m	struct:Tk_OptionSpec	access:public
optionPtr	/usr/include/tk.h	/^    struct TkOption *optionPtr;	\/* Points to information that describes the$/;"	m	struct:Tk_SavedOption	typeref:struct:Tk_SavedOption::TkOption	access:public
optional_argument	/usr/include/getopt.h	/^#define optional_argument /;"	d
options	/usr/include/resolv.h	/^	u_int	options;		\/* option flags - see below. *\/$/;"	m	struct:__res_state	access:public
options	/usr/include/resolv.h	/^	u_long	options;		\/* option flags - see below. *\/$/;"	m	struct:__res_state	access:public
options	/usr/include/tk.h	/^    Tk_ElementOptionSpec *options;$/;"	m	struct:Tk_ElementSpec	access:public
opts	/usr/include/form.h	/^  Field_Options		opts;		\/* options			*\/$/;"	m	struct:fieldnode	access:public
opts	/usr/include/form.h	/^  Form_Options		opts;		\/* options			*\/$/;"	m	struct:formnode	access:public
or	/usr/include/iso646.h	/^#define	or	/;"	d
or_eq	/usr/include/iso646.h	/^#define	or_eq	/;"	d
orderByConsumed	/usr/include/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	access:public
order_of_pins	/usr/include/term.h	/^#define order_of_pins /;"	d
orderingRule	/usr/include/ldap.h	/^	char *orderingRule;$/;"	m	struct:ldapsortkey	access:public
orig_colors	/usr/include/term.h	/^#define orig_colors /;"	d
orig_pair	/usr/include/term.h	/^#define orig_pair /;"	d
os	/usr/include/dns_util.h	/^	char *os;$/;"	m	struct:__anon29	access:public
os	/usr/include/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	access:public
otherValuePtr	/usr/include/tcl.h	/^	VOID *otherValuePtr;	\/*   - another, type-specific value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
other_non_function_keys	/usr/include/term.h	/^#define other_non_function_keys /;"	d
out	/usr/include/fcgiapp.h	/^    FCGX_Stream *out;$/;"	m	struct:FCGX_Request	access:public
out_func	/usr/include/zconf.h	/^#  define out_func /;"	d
out_func	/usr/include/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
outputProc	/usr/include/tcl.h	/^    Tcl_DriverOutputProc *outputProc;$/;"	m	struct:Tcl_ChannelType	access:public
output_res_char	/usr/include/term.h	/^#define output_res_char /;"	d
output_res_horz_inch	/usr/include/term.h	/^#define output_res_horz_inch /;"	d
output_res_line	/usr/include/term.h	/^#define output_res_line /;"	d
output_res_vert_inch	/usr/include/term.h	/^#define output_res_vert_inch /;"	d
over_strike	/usr/include/term.h	/^#define over_strike /;"	d
overflow	/usr/include/fcgio.h	/^    virtual int overflow(int);$/;"	p	class:fcgi_streambuf	access:protected	signature:(int)
overload_function	/usr/include/sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	access:public
pAppData	/usr/include/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	access:public
pAppData	/usr/include/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	access:public
pArg	/usr/include/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	access:public
pConfigDSNFunc	/usr/include/odbcinst.h	/^typedef BOOL INSTAPI (*pConfigDSNFunc) ($/;"	t
pConfigDSNWFunc	/usr/include/odbcinst.h	/^typedef BOOL INSTAPI (*pConfigDSNWFunc) ($/;"	t
pConfigDriverFunc	/usr/include/odbcinst.h	/^typedef BOOL INSTAPI (*pConfigDriverFunc) ($/;"	t
pConfigDriverWFunc	/usr/include/odbcinst.h	/^typedef BOOL INSTAPI (*pConfigDriverWFunc) ($/;"	t
pConfigTranslatorFunc	/usr/include/odbcinst.h	/^typedef BOOL INSTAPI (*pConfigTranslatorFunc) ($/;"	t
pMethods	/usr/include/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	access:public
pModule	/usr/include/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	access:public
pNext	/usr/include/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	access:public
pVtab	/usr/include/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	access:public
p_aliases	/usr/include/netdb.h	/^	char	**p_aliases;	\/* alias list *\/$/;"	m	struct:protoent	access:public
p_bsize	/usr/include/disktab.h	/^		short	p_bsize;	\/* block size in bytes *\/$/;"	m	struct:disktab::partition	access:public
p_cdname	/usr/include/resolv.h	/^#define p_cdname	/;"	d
p_cdname	/usr/include/resolv.h	/^const u_char * p_cdname __P((const u_char *, const u_char *, FILE *));$/;"	p	signature:(const u_char *, const u_char *, FILE *)
p_cdnname	/usr/include/resolv.h	/^#define p_cdnname	/;"	d
p_cdnname	/usr/include/resolv.h	/^const u_char * p_cdnname __P((const u_char *, const u_char *, int, FILE *));$/;"	p	signature:(const u_char *, const u_char *, int, FILE *)
p_class	/usr/include/resolv.h	/^#define p_class	/;"	d
p_class	/usr/include/resolv.h	/^const char * p_class __P((int));$/;"	p	signature:(int)
p_cs_precedes	/usr/include/_locale.h	/^	char	p_cs_precedes;$/;"	m	struct:lconv	access:public
p_fqname	/usr/include/resolv.h	/^#define p_fqname	/;"	d
p_fqname	/usr/include/resolv.h	/^const u_char * p_fqname __P((const u_char *, const u_char *, FILE *));$/;"	p	signature:(const u_char *, const u_char *, FILE *)
p_fqnname	/usr/include/resolv.h	/^#define p_fqnname	/;"	d
p_fqnname	/usr/include/resolv.h	/^const u_char * p_fqnname __P((const u_char *cp, const u_char *msg, int, char *, int));$/;"	p	signature:(const u_char *cp, const u_char *msg, int, char *, int)
p_fsize	/usr/include/disktab.h	/^		short	p_fsize;	\/* frag size in bytes *\/$/;"	m	struct:disktab::partition	access:public
p_name	/usr/include/netdb.h	/^	char	*p_name;	\/* official protocol name *\/$/;"	m	struct:protoent	access:public
p_option	/usr/include/resolv.h	/^#define p_option	/;"	d
p_option	/usr/include/resolv.h	/^const char * p_option __P((u_long option));$/;"	p	signature:(u_long option)
p_proto	/usr/include/netdb.h	/^	int	p_proto;	\/* protocol # *\/$/;"	m	struct:protoent	access:public
p_query	/usr/include/resolv.h	/^#define p_query	/;"	d
p_query	/usr/include/resolv.h	/^void		p_query __P((const u_char *));$/;"	p	signature:(const u_char *)
p_rcode	/usr/include/resolv.h	/^#define p_rcode	/;"	d
p_rcode	/usr/include/resolv.h	/^const char * p_rcode __P((int));$/;"	p	signature:(int)
p_secstodate	/usr/include/resolv.h	/^#define p_secstodate	/;"	d
p_secstodate	/usr/include/resolv.h	/^char * p_secstodate __P((u_long));$/;"	p	signature:(u_long)
p_section	/usr/include/resolv.h	/^#define p_section	/;"	d
p_section	/usr/include/resolv.h	/^const char * p_section __P((int section, int opcode));$/;"	p	signature:(int section, int opcode)
p_sep_by_space	/usr/include/_locale.h	/^	char	p_sep_by_space;$/;"	m	struct:lconv	access:public
p_sign_posn	/usr/include/_locale.h	/^	char	p_sign_posn;$/;"	m	struct:lconv	access:public
p_size	/usr/include/disktab.h	/^		int	p_size;		\/* #sectors in partition *\/$/;"	m	struct:disktab::partition	access:public
p_time	/usr/include/resolv.h	/^#define p_time	/;"	d
p_time	/usr/include/resolv.h	/^const char * p_time __P((u_int32_t));$/;"	p	signature:(u_int32_t)
p_type	/usr/include/resolv.h	/^#define p_type	/;"	d
p_type	/usr/include/resolv.h	/^const char * p_type __P((int));$/;"	p	signature:(int)
pad	/usr/include/form.h	/^  int			pad;		\/* pad character		*\/$/;"	m	struct:fieldnode	access:public
pad	/usr/include/menu.h	/^  unsigned char  pad;                   \/* Pad character                   *\/$/;"	m	struct:tagMENU	access:public
pad	/usr/include/resolv.h	/^		char	pad[72 - 4*sizeof (int) - 2*sizeof (void *)];$/;"	m	union:__res_state::__anon99	access:public
pad_char	/usr/include/term.h	/^#define pad_char /;"	d
paddingLength	/usr/include/fastcgi.h	/^    unsigned char paddingLength;$/;"	m	struct:__anon53	access:public
padding_baud_rate	/usr/include/term.h	/^#define padding_baud_rate /;"	d
page	/usr/include/form.h	/^  _PAGE *		page;		\/* page [maxpage]		*\/$/;"	m	struct:formnode	access:public
page	/usr/include/form.h	/^  short			page;		\/* page on form			*\/$/;"	m	struct:fieldnode	access:public
page	/usr/include/mpool.h	/^	void    *page;			\/* page *\/$/;"	m	struct:_bkt	access:public
pagealloc	/usr/include/mpool.h	/^	unsigned long	pagealloc;$/;"	m	struct:MPOOL	access:public
pageflush	/usr/include/mpool.h	/^	unsigned long	pageflush;$/;"	m	struct:MPOOL	access:public
pageget	/usr/include/mpool.h	/^	unsigned long	pageget;$/;"	m	struct:MPOOL	access:public
pagenew	/usr/include/mpool.h	/^	unsigned long	pagenew;$/;"	m	struct:MPOOL	access:public
pageput	/usr/include/mpool.h	/^	unsigned long	pageput;$/;"	m	struct:MPOOL	access:public
pageread	/usr/include/mpool.h	/^	unsigned long	pageread;$/;"	m	struct:MPOOL	access:public
pagesize	/usr/include/mpool.h	/^	unsigned long	pagesize;	\/* file page size *\/$/;"	m	struct:MPOOL	access:public
pagewrite	/usr/include/mpool.h	/^	unsigned long	pagewrite;$/;"	m	struct:MPOOL	access:public
panel	/usr/include/panel.h	/^typedef struct panel$/;"	s
panel::above	/usr/include/panel.h	/^  struct panel *above;$/;"	m	struct:panel	typeref:struct:panel::panel	access:public
panel::below	/usr/include/panel.h	/^  struct panel *below;$/;"	m	struct:panel	typeref:struct:panel::panel	access:public
panel::user	/usr/include/panel.h	/^  NCURSES_CONST void *user;$/;"	m	struct:panel	access:public
panel::win	/usr/include/panel.h	/^  WINDOW *win;$/;"	m	struct:panel	access:public
panic	/usr/include/tcl.h	/^#   define panic	/;"	d
panicVA	/usr/include/tcl.h	/^#   define panicVA	/;"	d
paramsPtr	/usr/include/fcgiapp.h	/^    struct Params *paramsPtr;$/;"	m	struct:FCGX_Request	typeref:struct:FCGX_Request::Params	access:public
parentPtr	/usr/include/tcl.h	/^    struct Tcl_Namespace *parentPtr;$/;"	m	struct:Tcl_Namespace	typeref:struct:Tcl_Namespace::Tcl_Namespace	access:public
parentPtr	/usr/include/tk.h	/^    Tk_Window parentPtr;	\/* parentPtr *\/$/;"	m	struct:Tk_FakeWin	access:public
parm_dch	/usr/include/term.h	/^#define parm_dch /;"	d
parm_delete_line	/usr/include/term.h	/^#define parm_delete_line /;"	d
parm_down_cursor	/usr/include/term.h	/^#define parm_down_cursor /;"	d
parm_down_micro	/usr/include/term.h	/^#define parm_down_micro /;"	d
parm_ich	/usr/include/term.h	/^#define parm_ich /;"	d
parm_index	/usr/include/term.h	/^#define parm_index /;"	d
parm_insert_line	/usr/include/term.h	/^#define parm_insert_line /;"	d
parm_left_cursor	/usr/include/term.h	/^#define parm_left_cursor /;"	d
parm_left_micro	/usr/include/term.h	/^#define parm_left_micro /;"	d
parm_right_cursor	/usr/include/term.h	/^#define parm_right_cursor /;"	d
parm_right_micro	/usr/include/term.h	/^#define parm_right_micro /;"	d
parm_rindex	/usr/include/term.h	/^#define parm_rindex /;"	d
parm_up_cursor	/usr/include/term.h	/^#define parm_up_cursor /;"	d
parm_up_micro	/usr/include/term.h	/^#define parm_up_micro /;"	d
parse	/usr/include/mecab.h	/^    virtual const char* parse(const char *str)                = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str)
parse	/usr/include/mecab.h	/^    virtual const char* parse(const char *str, size_t len)                          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len)
parse	/usr/include/mecab.h	/^    virtual const char* parse(const char *str, size_t len, char *ostr, size_t olen) = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len, char *ostr, size_t olen)
parseNBest	/usr/include/mecab.h	/^    virtual const char* parseNBest(size_t N, const char *str) = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(size_t N, const char *str)
parseNBest	/usr/include/mecab.h	/^    virtual const char* parseNBest(size_t N, const char *str, size_t len)           = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(size_t N, const char *str, size_t len)
parseNBest	/usr/include/mecab.h	/^    virtual const char* parseNBest(size_t N, const char *str,$/;"	p	class:MeCab::Tagger	access:public	signature:(size_t N, const char *str, size_t len, char *ostr, size_t olen)
parseNBestInit	/usr/include/mecab.h	/^    virtual bool  parseNBestInit(const char *str)             = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str)
parseNBestInit	/usr/include/mecab.h	/^    virtual bool  parseNBestInit(const char *str, size_t len)                       = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len)
parseProc	/usr/include/tk.h	/^    Tk_OptionParseProc *parseProc;$/;"	m	struct:Tk_CustomOption	access:public
parseToNode	/usr/include/mecab.h	/^    virtual const Node* parseToNode(const char *str)          = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str)
parseToNode	/usr/include/mecab.h	/^    virtual const Node* parseToNode(const char *str, size_t len)                    = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(const char *str, size_t len)
parser	/usr/include/expat.h	/^XMLPARSEAPI(XML_Index) XML_GetCurrentByteIndex(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XMLPARSEAPI(XML_Size) XML_GetCurrentColumnNumber(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XMLPARSEAPI(XML_Size) XML_GetCurrentLineNumber(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_DefaultCurrent(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_GetBase(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_GetCurrentByteCount(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_GetErrorCode(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_GetIdAttributeIndex(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_GetSpecifiedAttributeCount(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_ParserFree(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_ResumeParser(XML_Parser parser);$/;"	v
parser	/usr/include/expat.h	/^XML_UseParserAsHandlerArg(XML_Parser parser);$/;"	v
parsing	/usr/include/expat.h	/^  enum XML_Parsing parsing;$/;"	m	struct:__anon50	typeref:enum:__anon50::XML_Parsing	access:public
partial	/usr/include/mecab.h	/^    virtual bool  partial() const                             = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
partition	/usr/include/disktab.h	/^	struct	partition {$/;"	s	struct:disktab	access:public
passpolicyerror_enum	/usr/include/ldap.h	/^typedef enum passpolicyerror_enum {$/;"	g
passwd	/usr/include/pwd.h	/^struct passwd {$/;"	s
passwd::pw_change	/usr/include/pwd.h	/^	__darwin_time_t pw_change;		\/* password change time *\/$/;"	m	struct:passwd	access:public
passwd::pw_class	/usr/include/pwd.h	/^	char	*pw_class;		\/* user access class *\/$/;"	m	struct:passwd	access:public
passwd::pw_dir	/usr/include/pwd.h	/^	char	*pw_dir;		\/* home directory *\/$/;"	m	struct:passwd	access:public
passwd::pw_expire	/usr/include/pwd.h	/^	__darwin_time_t pw_expire;		\/* account expiration *\/$/;"	m	struct:passwd	access:public
passwd::pw_gecos	/usr/include/pwd.h	/^	char	*pw_gecos;		\/* Honeywell login info *\/$/;"	m	struct:passwd	access:public
passwd::pw_gid	/usr/include/pwd.h	/^	gid_t	pw_gid;			\/* user gid *\/$/;"	m	struct:passwd	access:public
passwd::pw_name	/usr/include/pwd.h	/^	char	*pw_name;		\/* user name *\/$/;"	m	struct:passwd	access:public
passwd::pw_passwd	/usr/include/pwd.h	/^	char	*pw_passwd;		\/* encrypted password *\/$/;"	m	struct:passwd	access:public
passwd::pw_shell	/usr/include/pwd.h	/^	char	*pw_shell;		\/* default shell *\/$/;"	m	struct:passwd	access:public
passwd::pw_uid	/usr/include/pwd.h	/^	uid_t	pw_uid;			\/* user uid *\/$/;"	m	struct:passwd	access:public
pathInFilesystemProc	/usr/include/tcl.h	/^    Tcl_FSPathInFilesystemProc *pathInFilesystemProc;$/;"	m	struct:Tcl_Filesystem	access:public
pathName	/usr/include/tk.h	/^    char *pathName;$/;"	m	struct:Tk_FakeWin	access:public
pathconf	/usr/include/unistd.h	/^long	 pathconf(const char *, int);$/;"	p	signature:(const char *, int)
pattern	/usr/include/menu.h	/^  char          *pattern;               \/* Buffer to store match chars     *\/$/;"	m	struct:tagMENU	access:public
pattern	/usr/include/tk.h	/^    } pattern;$/;"	m	struct:Tk_Dash	typeref:union:Tk_Dash::__anon132	access:public
pause	/usr/include/unistd.h	/^int	 pause(void) __DARWIN_ALIAS_C(pause);$/;"	v
pc_term_options	/usr/include/term.h	/^#define pc_term_options /;"	d
pclose	/usr/include/fcgi_stdio.h	/^#define	pclose /;"	d
pclose	/usr/include/fcgi_stdio.h	/^#undef  pclose$/;"	d
pclose	/usr/include/stdio.h	/^int	 pclose(FILE *);$/;"	p	signature:(FILE *)
pdat	/usr/include/curses.h	/^	struct pdat$/;"	s	struct:_win_st	access:public
pdat	/usr/include/ncurses.h	/^	struct pdat$/;"	s	struct:_win_st	access:public
percent_x	/usr/include/tcpd.h	/^extern char *percent_x();		\/* do %<char> expansion *\/$/;"	p	signature:()
perm	/usr/include/tcl.h	/^    int perm;			\/* Corresponds to file permissions *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
perror	/usr/include/fcgi_stdio.h	/^#define	perror /;"	d
perror	/usr/include/fcgi_stdio.h	/^#undef  perror$/;"	d
perror	/usr/include/stdio.h	/^void	 perror(const char *);$/;"	p	signature:(const char *)
pfcode	/usr/include/resolv.h	/^	u_int	pfcode;			\/* RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state	access:public
pfcode	/usr/include/resolv.h	/^	u_long	pfcode;			\/* RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state	access:public
pgcookie	/usr/include/mpool.h	/^	void	*pgcookie;		\/* cookie for page in\/out routines *\/$/;"	m	struct:MPOOL	access:public
pgin	/usr/include/mpool.h	/^	void    (*pgin)(void *, pgno_t, void *);$/;"	m	struct:MPOOL	access:public
pgno	/usr/include/mpool.h	/^	pgno_t   pgno;			\/* page number *\/$/;"	m	struct:_bkt	access:public
pgno_t	/usr/include/db.h	/^typedef u_int32_t	pgno_t;$/;"	t
pgout	/usr/include/mpool.h	/^	void    (*pgout)(void *, pgno_t, void *);$/;"	m	struct:MPOOL	access:public
pid	/usr/include/tcpd.h	/^    char    pid[10];			\/* access via eval_pid(request) *\/$/;"	m	struct:request_info	access:public
pid_t	/usr/include/spawn.h	/^typedef __darwin_pid_t		pid_t;$/;"	t
pid_t	/usr/include/termios.h	/^typedef __darwin_pid_t	pid_t;$/;"	t
pid_t	/usr/include/unistd.h	/^typedef __darwin_pid_t		pid_t;$/;"	t
pid_t	/usr/include/utmpx.h	/^typedef __darwin_pid_t     pid_t;$/;"	t
pidlock	/usr/include/util.h	/^int	pidlock(const char *, int, pid_t *, const char *);$/;"	p	signature:(const char *, int, pid_t *, const char *)
pindex	/usr/include/menu.h	/^  short          pindex;                \/* Index into pattern buffer       *\/$/;"	m	struct:tagMENU	access:public
pipe	/usr/include/unistd.h	/^int	 pipe(int [2]);$/;"	p	signature:(int [2])
pitch	/usr/include/tk.h	/^    int pitch;			\/* Address difference between corresponding$/;"	m	struct:Tk_PhotoImageBlock	access:public
pixelPtr	/usr/include/tk.h	/^    unsigned char *pixelPtr;	\/* Pointer to the first pixel. *\/$/;"	m	struct:Tk_PhotoImageBlock	access:public
pixelSize	/usr/include/tk.h	/^    int pixelSize;		\/* Address difference between successive$/;"	m	struct:Tk_PhotoImageBlock	access:public
pkey_key	/usr/include/term.h	/^#define pkey_key /;"	d
pkey_local	/usr/include/term.h	/^#define pkey_local /;"	d
pkey_plab	/usr/include/term.h	/^#define pkey_plab /;"	d
pkey_xmit	/usr/include/term.h	/^#define pkey_xmit /;"	d
plab_norm	/usr/include/term.h	/^#define plab_norm /;"	d
plugin_referral_entry_callback	/usr/include/slapi-plugin.h	/^typedef int (*plugin_referral_entry_callback)( char * referral,$/;"	t
plugin_result_callback	/usr/include/slapi-plugin.h	/^typedef void (*plugin_result_callback)( int rc, void *callback_data );$/;"	t
plugin_search_entry_callback	/usr/include/slapi-plugin.h	/^typedef int (*plugin_search_entry_callback)( Slapi_Entry *e,$/;"	t
pmax	/usr/include/form.h	/^  short pmax;		\/* index of last field on page			*\/$/;"	m	struct:__anon61	access:public
pmin	/usr/include/form.h	/^  short pmin;		\/* index of first field on page			*\/$/;"	m	struct:__anon61	access:public
pointProc	/usr/include/tk.h	/^    Tk_ItemPointProc *pointProc;\/* Computes distance from item to a given$/;"	m	struct:Tk_ItemType	access:public
popen	/usr/include/fcgi_stdio.h	/^#define popen /;"	d
popen	/usr/include/fcgi_stdio.h	/^#undef  popen$/;"	d
popen	/usr/include/stdio.h	/^FILE	*popen(const char *, const char *) __DARWIN_EXTSN(popen);$/;"	v
port	/usr/include/dns_util.h	/^	uint16_t port;$/;"	m	struct:__anon40	access:public
posid	/usr/include/mecab.h	/^  unsigned short               posid;$/;"	m	struct:mecab_learner_node_t	access:public
posid	/usr/include/mecab.h	/^  unsigned short        posid;$/;"	m	struct:mecab_node_t	access:public
posid	/usr/include/mecab.h	/^  unsigned short posid;$/;"	m	struct:mecab_token_t	access:public
positive_sign	/usr/include/_locale.h	/^	char	*positive_sign;$/;"	m	struct:lconv	access:public
posix2time	/usr/include/time.h	/^time_t posix2time(time_t);$/;"	p	signature:(time_t)
posix_memalign	/usr/include/stdlib.h	/^int 	 posix_memalign(void **, size_t, size_t);$/;"	p	signature:(void **, size_t, size_t)
posix_openpt	/usr/include/stdlib.h	/^int	 posix_openpt(int);$/;"	p	signature:(int)
posix_spawn	/usr/include/spawn.h	/^int	posix_spawn(pid_t * __restrict, const char * __restrict,$/;"	p	signature:(pid_t * __restrict, const char * __restrict, const posix_spawn_file_actions_t *, const posix_spawnattr_t * __restrict, char *const __argv[ __restrict], char *const __envp[ __restrict])
posix_spawn_file_actions_addclose	/usr/include/spawn.h	/^int	posix_spawn_file_actions_addclose(posix_spawn_file_actions_t *, int);$/;"	p	signature:(posix_spawn_file_actions_t *, int)
posix_spawn_file_actions_adddup2	/usr/include/spawn.h	/^int	posix_spawn_file_actions_adddup2(posix_spawn_file_actions_t *, int,$/;"	p	signature:(posix_spawn_file_actions_t *, int, int)
posix_spawn_file_actions_addopen	/usr/include/spawn.h	/^int	posix_spawn_file_actions_addopen($/;"	p	signature:( posix_spawn_file_actions_t * __restrict, int, const char * __restrict, int, mode_t)
posix_spawn_file_actions_destroy	/usr/include/spawn.h	/^int	posix_spawn_file_actions_destroy(posix_spawn_file_actions_t *);$/;"	p	signature:(posix_spawn_file_actions_t *)
posix_spawn_file_actions_init	/usr/include/spawn.h	/^int	posix_spawn_file_actions_init(posix_spawn_file_actions_t *);$/;"	p	signature:(posix_spawn_file_actions_t *)
posix_spawn_file_actions_t	/usr/include/spawn.h	/^typedef  void *posix_spawn_file_actions_t;$/;"	t
posix_spawnattr_destroy	/usr/include/spawn.h	/^int	posix_spawnattr_destroy(posix_spawnattr_t *);$/;"	p	signature:(posix_spawnattr_t *)
posix_spawnattr_getbinpref_np	/usr/include/spawn.h	/^int	posix_spawnattr_getbinpref_np(const posix_spawnattr_t * __restrict,$/;"	p	signature:(const posix_spawnattr_t * __restrict, size_t, cpu_type_t *__restrict, size_t *__restrict)
posix_spawnattr_getflags	/usr/include/spawn.h	/^int	posix_spawnattr_getflags(const posix_spawnattr_t * __restrict,$/;"	p	signature:(const posix_spawnattr_t * __restrict, short * __restrict)
posix_spawnattr_getpgroup	/usr/include/spawn.h	/^int	posix_spawnattr_getpgroup(const posix_spawnattr_t * __restrict,$/;"	p	signature:(const posix_spawnattr_t * __restrict, pid_t * __restrict)
posix_spawnattr_getsigdefault	/usr/include/spawn.h	/^int	posix_spawnattr_getsigdefault(const posix_spawnattr_t * __restrict,$/;"	p	signature:(const posix_spawnattr_t * __restrict, sigset_t * __restrict)
posix_spawnattr_getsigmask	/usr/include/spawn.h	/^int	posix_spawnattr_getsigmask(const posix_spawnattr_t * __restrict,$/;"	p	signature:(const posix_spawnattr_t * __restrict, sigset_t * __restrict)
posix_spawnattr_init	/usr/include/spawn.h	/^int	posix_spawnattr_init(posix_spawnattr_t *);$/;"	p	signature:(posix_spawnattr_t *)
posix_spawnattr_setauditsessionport_np	/usr/include/spawn.h	/^int	posix_spawnattr_setauditsessionport_np(posix_spawnattr_t *__restrict,$/;"	p	signature:(posix_spawnattr_t *__restrict, mach_port_t)
posix_spawnattr_setbinpref_np	/usr/include/spawn.h	/^int	posix_spawnattr_setbinpref_np(posix_spawnattr_t * __restrict,$/;"	p	signature:(posix_spawnattr_t * __restrict, size_t, cpu_type_t *__restrict, size_t *__restrict)
posix_spawnattr_setexceptionports_np	/usr/include/spawn.h	/^int	posix_spawnattr_setexceptionports_np(posix_spawnattr_t *__restrict,$/;"	p	signature:(posix_spawnattr_t *__restrict, exception_mask_t, mach_port_t, exception_behavior_t, thread_state_flavor_t)
posix_spawnattr_setflags	/usr/include/spawn.h	/^int	posix_spawnattr_setflags(posix_spawnattr_t *, short);$/;"	p	signature:(posix_spawnattr_t *, short)
posix_spawnattr_setpgroup	/usr/include/spawn.h	/^int	posix_spawnattr_setpgroup(posix_spawnattr_t *, pid_t);$/;"	p	signature:(posix_spawnattr_t *, pid_t)
posix_spawnattr_setsigdefault	/usr/include/spawn.h	/^int	posix_spawnattr_setsigdefault(posix_spawnattr_t * __restrict,$/;"	p	signature:(posix_spawnattr_t * __restrict, const sigset_t * __restrict)
posix_spawnattr_setsigmask	/usr/include/spawn.h	/^int	posix_spawnattr_setsigmask(posix_spawnattr_t * __restrict,$/;"	p	signature:(posix_spawnattr_t * __restrict, const sigset_t * __restrict)
posix_spawnattr_setspecialport_np	/usr/include/spawn.h	/^int	posix_spawnattr_setspecialport_np(posix_spawnattr_t *__restrict,$/;"	p	signature:(posix_spawnattr_t *__restrict, mach_port_t, int)
posix_spawnattr_t	/usr/include/spawn.h	/^typedef  void *posix_spawnattr_t;$/;"	t
posix_spawnp	/usr/include/spawn.h	/^int	posix_spawnp(pid_t * __restrict, const char * __restrict,$/;"	p	signature:(pid_t * __restrict, const char * __restrict, const posix_spawn_file_actions_t *, const posix_spawnattr_t * __restrict, char *const __argv[ __restrict], char *const __envp[ __restrict])
postorder	/usr/include/search.h	/^	postorder,$/;"	e	enum:__anon106
postscriptProc	/usr/include/tk.h	/^    Tk_ImagePostscriptProc *postscriptProc;$/;"	m	struct:Tk_ImageType	access:public
postscriptProc	/usr/include/tk.h	/^    Tk_ItemPostscriptProc *postscriptProc;$/;"	m	struct:Tk_ItemType	access:public
postscriptProc	/usr/include/tk.h	/^    void (*postscriptProc) _ANSI_ARGS_((Tcl_Interp *interp,$/;"	m	struct:Tk_SmoothMethod	access:public
pread	/usr/include/unistd.h	/^ssize_t	 pread(int, void *, size_t, off_t) __DARWIN_ALIAS_C(pread);$/;"	v
precision	/usr/include/sqltypes.h	/^    SQLCHAR	precision;$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
preference	/usr/include/dns_util.h	/^	uint16_t preference;$/;"	m	struct:__anon31	access:public
preference	/usr/include/dns_util.h	/^	uint16_t preference;$/;"	m	struct:__anon38	access:public
prefix	/usr/include/db.h	/^	size_t		(*prefix)	\/* prefix function *\/$/;"	m	struct:__anon13	access:public
preorder	/usr/include/search.h	/^	preorder,$/;"	e	enum:__anon106
prepare	/usr/include/sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	access:public
prepare16	/usr/include/sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	access:public
prepare16_v2	/usr/include/sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	access:public
prepare_v2	/usr/include/sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	access:public
prev	/usr/include/form.h	/^  bool	(*prev)(FIELD *,const void *);		\/* enumerate prev value *\/$/;"	m	struct:typenode	access:public
prev	/usr/include/mecab.h	/^  struct mecab_learner_node_t *prev;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_node_t	access:public
prev	/usr/include/mecab.h	/^  struct mecab_node_t  *prev;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_node_t	access:public
prev	/usr/include/search.h	/^	struct que_elem *prev;$/;"	m	struct:que_elem	typeref:struct:que_elem::que_elem	access:public
prevPtr	/usr/include/tk.h	/^    struct Tk_Item *prevPtr;	\/* Previous in display list of all items in$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_Item	access:public
printProc	/usr/include/tk.h	/^    Tk_OptionPrintProc *printProc;$/;"	m	struct:Tk_CustomOption	access:public
print_rate	/usr/include/term.h	/^#define print_rate /;"	d
print_screen	/usr/include/term.h	/^#define print_screen /;"	d
printf	/usr/include/assert.h	/^int  printf(const char * __restrict, ...);$/;"	p	signature:(const char * __restrict, ...)
printf	/usr/include/fcgi_stdio.h	/^#define	printf /;"	d
printf	/usr/include/fcgi_stdio.h	/^#undef  printf$/;"	d
printf	/usr/include/stdio.h	/^int	 printf(const char * __restrict, ...) __DARWIN_LDBL_COMPAT(printf);$/;"	v
priority	/usr/include/dns_util.h	/^	uint16_t priority;$/;"	m	struct:__anon40	access:public
prob	/usr/include/mecab.h	/^  float                 prob;$/;"	m	struct:mecab_node_t	access:public
prob	/usr/include/mecab.h	/^  float                prob;$/;"	m	struct:mecab_path_t	access:public
proc	/usr/include/tcl.h	/^    Tcl_CmdProc *proc;		\/* Command's string-based function. *\/$/;"	m	struct:Tcl_CmdInfo	access:public
proc	/usr/include/tcl.h	/^    Tcl_EventProc *proc;	\/* Function to call to service this event. *\/$/;"	m	struct:Tcl_Event	access:public
proc_kmsgbuf	/usr/include/libproc.h	/^int proc_kmsgbuf(void * buffer, uint32_t buffersize);$/;"	p	signature:(void * buffer, uint32_t buffersize)
proc_libversion	/usr/include/libproc.h	/^int proc_libversion(int *major, int * minor);$/;"	p	signature:(int *major, int * minor)
proc_listpids	/usr/include/libproc.h	/^int proc_listpids(uint32_t type, uint32_t typeinfo, void *buffer, int buffersize);$/;"	p	signature:(uint32_t type, uint32_t typeinfo, void *buffer, int buffersize)
proc_listpidspath	/usr/include/libproc.h	/^int	proc_listpidspath(uint32_t	type,$/;"	p	signature:(uint32_t type, uint32_t typeinfo, const char *path, uint32_t pathflags, void *buffer, int buffersize)
proc_name	/usr/include/libproc.h	/^int proc_name(int pid, void * buffer, uint32_t buffersize);$/;"	p	signature:(int pid, void * buffer, uint32_t buffersize)
proc_pidfdinfo	/usr/include/libproc.h	/^int proc_pidfdinfo(int pid, int fd, int flavor, void * buffer, int buffersize); $/;"	p	signature:(int pid, int fd, int flavor, void * buffer, int buffersize)
proc_pidinfo	/usr/include/libproc.h	/^int proc_pidinfo(int pid, int flavor, uint64_t arg,  void *buffer, int buffersize);$/;"	p	signature:(int pid, int flavor, uint64_t arg, void *buffer, int buffersize)
proc_pidpath	/usr/include/libproc.h	/^int proc_pidpath(int pid, void * buffer, uint32_t  buffersize);$/;"	p	signature:(int pid, void * buffer, uint32_t buffersize)
proc_regionfilename	/usr/include/libproc.h	/^int proc_regionfilename(int pid, uint64_t address, void * buffer, uint32_t buffersize);$/;"	p	signature:(int pid, uint64_t address, void * buffer, uint32_t buffersize)
proc_setpcontrol	/usr/include/libproc.h	/^int proc_setpcontrol(const int control);$/;"	p	signature:(const int control)
process_options	/usr/include/tcpd.h	/^extern void process_options();		\/* execute options *\/$/;"	p	signature:()
prof_err_base	/usr/include/profile.h	/^#define prof_err_base /;"	d
profil	/usr/include/unistd.h	/^int	 profil(char *, size_t, unsigned long, unsigned int);$/;"	p	signature:(char *, size_t, unsigned long, unsigned int)
profile	/usr/include/sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	access:public
profile_abandon	/usr/include/profile.h	/^void KRB5_CALLCONV profile_abandon$/;"	p	signature:(profile_t profile)
profile_add_relation	/usr/include/profile.h	/^long KRB5_CALLCONV profile_add_relation$/;"	p	signature:(profile_t profile, const char **names, const char *new_value)
profile_clear_relation	/usr/include/profile.h	/^long KRB5_CALLCONV profile_clear_relation$/;"	p	signature:(profile_t profile, const char **names)
profile_configuration_updated	/usr/include/profile.h	/^void KRB5_CALLCONV profile_configuration_updated$/;"	p	signature:(void)
profile_filespec_list_t	/usr/include/profile.h	/^typedef char* profile_filespec_list_t;	\/* list of : separated paths, C string *\/$/;"	t
profile_filespec_t	/usr/include/profile.h	/^typedef char* profile_filespec_t;	\/* path as C string *\/$/;"	t
profile_flush	/usr/include/profile.h	/^long KRB5_CALLCONV profile_flush$/;"	p	signature:(profile_t profile)
profile_flush_to_buffer	/usr/include/profile.h	/^long KRB5_CALLCONV profile_flush_to_buffer$/;"	p	signature:(profile_t profile, char **bufp)
profile_flush_to_file	/usr/include/profile.h	/^long KRB5_CALLCONV profile_flush_to_file$/;"	p	signature:(profile_t profile, const_profile_filespec_t outfile)
profile_free_buffer	/usr/include/profile.h	/^void KRB5_CALLCONV profile_free_buffer$/;"	p	signature:(profile_t profile, char *buf)
profile_free_list	/usr/include/profile.h	/^void KRB5_CALLCONV profile_free_list$/;"	p	signature:(char **list)
profile_get_boolean	/usr/include/profile.h	/^long KRB5_CALLCONV profile_get_boolean$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, int def_val, int *ret_default)
profile_get_integer	/usr/include/profile.h	/^long KRB5_CALLCONV profile_get_integer$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, int def_val, int *ret_default)
profile_get_relation_names	/usr/include/profile.h	/^long KRB5_CALLCONV profile_get_relation_names$/;"	p	signature:(profile_t profile, const char **names, char ***ret_names)
profile_get_string	/usr/include/profile.h	/^long KRB5_CALLCONV profile_get_string$/;"	p	signature:(profile_t profile, const char *name, const char *subname, const char *subsubname, const char *def_val, char **ret_string)
profile_get_subsection_names	/usr/include/profile.h	/^long KRB5_CALLCONV profile_get_subsection_names$/;"	p	signature:(profile_t profile, const char **names, char ***ret_names)
profile_get_values	/usr/include/profile.h	/^long KRB5_CALLCONV profile_get_values$/;"	p	signature:(profile_t profile, const char *const *names, char ***ret_values)
profile_init	/usr/include/profile.h	/^long KRB5_CALLCONV profile_init$/;"	p	signature:(const_profile_filespec_t *files, profile_t *ret_profile)
profile_init_path	/usr/include/profile.h	/^long KRB5_CALLCONV profile_init_path$/;"	p	signature:(const_profile_filespec_list_t filelist, profile_t *ret_profile)
profile_is_modified	/usr/include/profile.h	/^long KRB5_CALLCONV profile_is_modified$/;"	p	signature:(profile_t profile, int *modified)
profile_is_writable	/usr/include/profile.h	/^long KRB5_CALLCONV profile_is_writable$/;"	p	signature:(profile_t profile, int *writable)
profile_iterator	/usr/include/profile.h	/^long KRB5_CALLCONV profile_iterator$/;"	p	signature:(void **iter_p, char **ret_name, char **ret_value)
profile_iterator_create	/usr/include/profile.h	/^long KRB5_CALLCONV profile_iterator_create$/;"	p	signature:(profile_t profile, const char *const *names, int flags, void **ret_iter)
profile_iterator_free	/usr/include/profile.h	/^void KRB5_CALLCONV profile_iterator_free$/;"	p	signature:(void **iter_p)
profile_release	/usr/include/profile.h	/^void KRB5_CALLCONV profile_release$/;"	p	signature:(profile_t profile)
profile_release_string	/usr/include/profile.h	/^void KRB5_CALLCONV profile_release_string (char *str);$/;"	p	signature:(char *str)
profile_rename_section	/usr/include/profile.h	/^long KRB5_CALLCONV profile_rename_section$/;"	p	signature:(profile_t profile, const char **names, const char *new_name)
profile_t	/usr/include/profile.h	/^typedef struct _profile_t *profile_t;$/;"	t	typeref:struct:_profile_t
profile_update_relation	/usr/include/profile.h	/^long KRB5_CALLCONV profile_update_relation$/;"	p	signature:(profile_t profile, const char **names, const char *old_value, const char *new_value)
progress_handler	/usr/include/sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
protocol	/usr/include/dns_util.h	/^	uint8_t protocol;$/;"	m	struct:__anon33	access:public
protocolStatus	/usr/include/fastcgi.h	/^    unsigned char protocolStatus;$/;"	m	struct:__anon56	access:public
protoent	/usr/include/netdb.h	/^struct protoent {$/;"	s
protoent::p_aliases	/usr/include/netdb.h	/^	char	**p_aliases;	\/* alias list *\/$/;"	m	struct:protoent	access:public
protoent::p_name	/usr/include/netdb.h	/^	char	*p_name;	\/* official protocol name *\/$/;"	m	struct:protoent	access:public
protoent::p_proto	/usr/include/netdb.h	/^	int	p_proto;	\/* protocol # *\/$/;"	m	struct:protoent	access:public
prtr_non	/usr/include/term.h	/^#define prtr_non /;"	d
prtr_off	/usr/include/term.h	/^#define prtr_off /;"	d
prtr_on	/usr/include/term.h	/^#define prtr_on /;"	d
prtr_silent	/usr/include/term.h	/^#define prtr_silent /;"	d
psdn_address	/usr/include/dns_util.h	/^	char *psdn_address;$/;"	m	struct:__anon36	access:public
psignal	/usr/include/signal.h	/^void	psignal(unsigned int, const char *);$/;"	p	signature:(unsigned int, const char *)
psize	/usr/include/db.h	/^	unsigned int	psize;		\/* page size *\/$/;"	m	struct:__anon13	access:public
psize	/usr/include/db.h	/^	unsigned int	psize;		\/* page size *\/$/;"	m	struct:__anon15	access:public
psort	/usr/include/stdlib.h	/^void	 psort(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (*)(const void *, const void *))
psort_b	/usr/include/stdlib.h	/^void	 psort_b(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (^)(const void *, const void *))
psort_r	/usr/include/stdlib.h	/^void	 psort_r(void *, size_t, size_t, void *,$/;"	p	signature:(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))
pt	/usr/include/tk.h	/^	char *pt;$/;"	m	union:Tk_Dash::__anon132	access:public
pthread_atfork	/usr/include/pthread.h	/^int       pthread_atfork(void (*)(void), void (*)(void),$/;"	p	signature:(void (*)(void), void (*)(void), void (*)(void))
pthread_attr_destroy	/usr/include/pthread.h	/^int       pthread_attr_destroy(pthread_attr_t *);$/;"	p	signature:(pthread_attr_t *)
pthread_attr_getdetachstate	/usr/include/pthread.h	/^int       pthread_attr_getdetachstate(const pthread_attr_t *,$/;"	p	signature:(const pthread_attr_t *, int *)
pthread_attr_getguardsize	/usr/include/pthread.h	/^int       pthread_attr_getguardsize(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, size_t * __restrict)
pthread_attr_getinheritsched	/usr/include/pthread.h	/^int       pthread_attr_getinheritsched(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, int * __restrict)
pthread_attr_getschedparam	/usr/include/pthread.h	/^int       pthread_attr_getschedparam(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, struct sched_param * __restrict)
pthread_attr_getschedpolicy	/usr/include/pthread.h	/^int       pthread_attr_getschedpolicy(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, int * __restrict)
pthread_attr_getscope	/usr/include/pthread.h	/^int       pthread_attr_getscope(const pthread_attr_t * __restrict, int * __restrict);$/;"	p	signature:(const pthread_attr_t * __restrict, int * __restrict)
pthread_attr_getstack	/usr/include/pthread.h	/^int       pthread_attr_getstack(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, void ** __restrict, size_t * __restrict)
pthread_attr_getstackaddr	/usr/include/pthread.h	/^int       pthread_attr_getstackaddr(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, void ** __restrict)
pthread_attr_getstacksize	/usr/include/pthread.h	/^int       pthread_attr_getstacksize(const pthread_attr_t * __restrict,$/;"	p	signature:(const pthread_attr_t * __restrict, size_t * __restrict)
pthread_attr_init	/usr/include/pthread.h	/^int       pthread_attr_init(pthread_attr_t *);$/;"	p	signature:(pthread_attr_t *)
pthread_attr_setdetachstate	/usr/include/pthread.h	/^int       pthread_attr_setdetachstate(pthread_attr_t *,$/;"	p	signature:(pthread_attr_t *, int )
pthread_attr_setguardsize	/usr/include/pthread.h	/^int       pthread_attr_setguardsize(pthread_attr_t *, size_t );$/;"	p	signature:(pthread_attr_t *, size_t )
pthread_attr_setinheritsched	/usr/include/pthread.h	/^int       pthread_attr_setinheritsched(pthread_attr_t *,$/;"	p	signature:(pthread_attr_t *, int )
pthread_attr_setschedparam	/usr/include/pthread.h	/^int       pthread_attr_setschedparam(pthread_attr_t * __restrict,$/;"	p	signature:(pthread_attr_t * __restrict, const struct sched_param * __restrict)
pthread_attr_setschedpolicy	/usr/include/pthread.h	/^int       pthread_attr_setschedpolicy(pthread_attr_t *,$/;"	p	signature:(pthread_attr_t *, int )
pthread_attr_setscope	/usr/include/pthread.h	/^int       pthread_attr_setscope(pthread_attr_t *, int);$/;"	p	signature:(pthread_attr_t *, int)
pthread_attr_setstack	/usr/include/pthread.h	/^int       pthread_attr_setstack(pthread_attr_t *,$/;"	p	signature:(pthread_attr_t *, void *, size_t )
pthread_attr_setstackaddr	/usr/include/pthread.h	/^int       pthread_attr_setstackaddr(pthread_attr_t *,$/;"	p	signature:(pthread_attr_t *, void *)
pthread_attr_setstacksize	/usr/include/pthread.h	/^int       pthread_attr_setstacksize(pthread_attr_t *, size_t );$/;"	p	signature:(pthread_attr_t *, size_t )
pthread_attr_t	/usr/include/pthread.h	/^typedef __darwin_pthread_attr_t		pthread_attr_t;$/;"	t
pthread_cancel	/usr/include/pthread.h	/^int       pthread_cancel(pthread_t ) __DARWIN_ALIAS(pthread_cancel);$/;"	v
pthread_cleanup_pop	/usr/include/pthread.h	/^#define pthread_cleanup_pop(/;"	d
pthread_cleanup_push	/usr/include/pthread.h	/^#define pthread_cleanup_push(/;"	d
pthread_cond_broadcast	/usr/include/pthread.h	/^int       pthread_cond_broadcast(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
pthread_cond_destroy	/usr/include/pthread.h	/^int       pthread_cond_destroy(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
pthread_cond_init	/usr/include/pthread.h	/^                            const pthread_condattr_t * __restrict) __DARWIN_ALIAS(pthread_cond_init);$/;"	v
pthread_cond_signal	/usr/include/pthread.h	/^int       pthread_cond_signal(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
pthread_cond_signal_thread_np	/usr/include/pthread.h	/^int		pthread_cond_signal_thread_np(pthread_cond_t *, pthread_t);$/;"	p	signature:(pthread_cond_t *, pthread_t)
pthread_cond_t	/usr/include/pthread.h	/^typedef __darwin_pthread_cond_t		pthread_cond_t;$/;"	t
pthread_cond_timedwait	/usr/include/pthread.h	/^				 const struct timespec * __restrict) __DARWIN_ALIAS_C(pthread_cond_timedwait);$/;"	v
pthread_cond_timedwait_relative_np	/usr/include/pthread.h	/^int		pthread_cond_timedwait_relative_np(pthread_cond_t *,$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)
pthread_cond_wait	/usr/include/pthread.h	/^			    pthread_mutex_t * __restrict) __DARWIN_ALIAS_C(pthread_cond_wait);$/;"	v
pthread_condattr_destroy	/usr/include/pthread.h	/^int       pthread_condattr_destroy(pthread_condattr_t *);$/;"	p	signature:(pthread_condattr_t *)
pthread_condattr_getpshared	/usr/include/pthread.h	/^int       pthread_condattr_getpshared(const pthread_condattr_t * __restrict,$/;"	p	signature:(const pthread_condattr_t * __restrict, int * __restrict)
pthread_condattr_init	/usr/include/pthread.h	/^int       pthread_condattr_init(pthread_condattr_t *);$/;"	p	signature:(pthread_condattr_t *)
pthread_condattr_setpshared	/usr/include/pthread.h	/^int       pthread_condattr_setpshared(pthread_condattr_t *,$/;"	p	signature:(pthread_condattr_t *, int )
pthread_condattr_t	/usr/include/pthread.h	/^typedef __darwin_pthread_condattr_t	pthread_condattr_t;$/;"	t
pthread_create	/usr/include/pthread.h	/^int       pthread_create(pthread_t * __restrict,$/;"	p	signature:(pthread_t * __restrict, const pthread_attr_t * __restrict, void *(*)(void *), void * __restrict)
pthread_create_suspended_np	/usr/include/pthread.h	/^int       pthread_create_suspended_np(pthread_t *,$/;"	p	signature:(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)
pthread_detach	/usr/include/pthread.h	/^int       pthread_detach(pthread_t );$/;"	p	signature:(pthread_t )
pthread_equal	/usr/include/pthread.h	/^int       pthread_equal(pthread_t ,$/;"	p	signature:(pthread_t , pthread_t )
pthread_from_mach_thread_np	/usr/include/pthread.h	/^pthread_t pthread_from_mach_thread_np(mach_port_t);$/;"	p	signature:(mach_port_t)
pthread_get_stackaddr_np	/usr/include/pthread.h	/^void *		pthread_get_stackaddr_np(pthread_t);$/;"	p	signature:(pthread_t)
pthread_get_stacksize_np	/usr/include/pthread.h	/^size_t	 	pthread_get_stacksize_np(pthread_t);$/;"	p	signature:(pthread_t)
pthread_getconcurrency	/usr/include/pthread.h	/^int       pthread_getconcurrency(void);$/;"	p	signature:(void)
pthread_getname_np	/usr/include/pthread.h	/^int		pthread_getname_np(pthread_t,char*,size_t);$/;"	p	signature:(pthread_t,char*,size_t)
pthread_getschedparam	/usr/include/pthread.h	/^int       pthread_getschedparam(pthread_t , int * __restrict, struct sched_param * __restrict);$/;"	p	signature:(pthread_t , int * __restrict, struct sched_param * __restrict)
pthread_getspecific	/usr/include/pthread.h	/^void     *pthread_getspecific(pthread_key_t );$/;"	p	signature:(pthread_key_t )
pthread_getugid_np	/usr/include/unistd.h	/^int	 pthread_getugid_np( uid_t *, gid_t *);$/;"	p	signature:( uid_t *, gid_t *)
pthread_is_threaded_np	/usr/include/pthread.h	/^int		pthread_is_threaded_np(void);$/;"	p	signature:(void)
pthread_join	/usr/include/pthread.h	/^int       pthread_join(pthread_t , void **) __DARWIN_ALIAS_C(pthread_join);$/;"	v
pthread_key_create	/usr/include/pthread.h	/^int       pthread_key_create(pthread_key_t *, void (*)(void *));$/;"	p	signature:(pthread_key_t *, void (*)(void *))
pthread_key_delete	/usr/include/pthread.h	/^int       pthread_key_delete(pthread_key_t );$/;"	p	signature:(pthread_key_t )
pthread_key_t	/usr/include/pthread.h	/^typedef __darwin_pthread_key_t		pthread_key_t;$/;"	t
pthread_kill	/usr/include/pthread.h	/^int       pthread_kill(pthread_t, int);$/;"	p	signature:(pthread_t, int)
pthread_kill	/usr/include/signal.h	/^int	pthread_kill(pthread_t, int);$/;"	p	signature:(pthread_t, int)
pthread_mach_thread_np	/usr/include/pthread.h	/^mach_port_t 	pthread_mach_thread_np(pthread_t);$/;"	p	signature:(pthread_t)
pthread_main_np	/usr/include/pthread.h	/^int		pthread_main_np(void);$/;"	p	signature:(void)
pthread_mutex_destroy	/usr/include/pthread.h	/^int       pthread_mutex_destroy(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutex_getprioceiling	/usr/include/pthread.h	/^int       pthread_mutex_getprioceiling(const pthread_mutex_t * __restrict, int * __restrict);$/;"	p	signature:(const pthread_mutex_t * __restrict, int * __restrict)
pthread_mutex_init	/usr/include/pthread.h	/^int       pthread_mutex_init(pthread_mutex_t * __restrict, const pthread_mutexattr_t * __restrict);$/;"	p	signature:(pthread_mutex_t * __restrict, const pthread_mutexattr_t * __restrict)
pthread_mutex_lock	/usr/include/pthread.h	/^int       pthread_mutex_lock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutex_setprioceiling	/usr/include/pthread.h	/^int       pthread_mutex_setprioceiling(pthread_mutex_t * __restrict, int, int * __restrict);$/;"	p	signature:(pthread_mutex_t * __restrict, int, int * __restrict)
pthread_mutex_t	/usr/include/pthread.h	/^typedef __darwin_pthread_mutex_t	pthread_mutex_t;$/;"	t
pthread_mutex_trylock	/usr/include/pthread.h	/^int       pthread_mutex_trylock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutex_unlock	/usr/include/pthread.h	/^int       pthread_mutex_unlock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutexattr_destroy	/usr/include/pthread.h	/^int       pthread_mutexattr_destroy(pthread_mutexattr_t *) __DARWIN_ALIAS(pthread_mutexattr_destroy);$/;"	v
pthread_mutexattr_getprioceiling	/usr/include/pthread.h	/^int       pthread_mutexattr_getprioceiling(const pthread_mutexattr_t * __restrict, int * __restrict);$/;"	p	signature:(const pthread_mutexattr_t * __restrict, int * __restrict)
pthread_mutexattr_getprotocol	/usr/include/pthread.h	/^int       pthread_mutexattr_getprotocol(const pthread_mutexattr_t * __restrict, int * __restrict);$/;"	p	signature:(const pthread_mutexattr_t * __restrict, int * __restrict)
pthread_mutexattr_getpshared	/usr/include/pthread.h	/^int       pthread_mutexattr_getpshared(const pthread_mutexattr_t * __restrict, int * __restrict);$/;"	p	signature:(const pthread_mutexattr_t * __restrict, int * __restrict)
pthread_mutexattr_gettype	/usr/include/pthread.h	/^int       pthread_mutexattr_gettype(const pthread_mutexattr_t * __restrict, int * __restrict);$/;"	p	signature:(const pthread_mutexattr_t * __restrict, int * __restrict)
pthread_mutexattr_init	/usr/include/pthread.h	/^int       pthread_mutexattr_init(pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutexattr_t *)
pthread_mutexattr_setprioceiling	/usr/include/pthread.h	/^int       pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
pthread_mutexattr_setprotocol	/usr/include/pthread.h	/^int       pthread_mutexattr_setprotocol(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
pthread_mutexattr_setpshared	/usr/include/pthread.h	/^int       pthread_mutexattr_setpshared(pthread_mutexattr_t *, int );$/;"	p	signature:(pthread_mutexattr_t *, int )
pthread_mutexattr_settype	/usr/include/pthread.h	/^int       pthread_mutexattr_settype(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
pthread_mutexattr_t	/usr/include/pthread.h	/^typedef __darwin_pthread_mutexattr_t	pthread_mutexattr_t;$/;"	t
pthread_once	/usr/include/pthread.h	/^int       pthread_once(pthread_once_t *, void (*)(void));$/;"	p	signature:(pthread_once_t *, void (*)(void))
pthread_once_t	/usr/include/pthread.h	/^typedef __darwin_pthread_once_t		pthread_once_t;$/;"	t
pthread_rwlock_destroy	/usr/include/pthread.h	/^int       pthread_rwlock_destroy(pthread_rwlock_t * ) __DARWIN_ALIAS(pthread_rwlock_destroy);$/;"	v
pthread_rwlock_init	/usr/include/pthread.h	/^int       pthread_rwlock_init(pthread_rwlock_t * __restrict, const pthread_rwlockattr_t * __restrict) __DARWIN_ALIAS(pthread_rwlock_init);$/;"	v
pthread_rwlock_rdlock	/usr/include/pthread.h	/^int       pthread_rwlock_rdlock(pthread_rwlock_t *) __DARWIN_ALIAS(pthread_rwlock_rdlock);$/;"	v
pthread_rwlock_t	/usr/include/pthread.h	/^typedef __darwin_pthread_rwlock_t	pthread_rwlock_t;$/;"	t
pthread_rwlock_tryrdlock	/usr/include/pthread.h	/^int       pthread_rwlock_tryrdlock(pthread_rwlock_t *) __DARWIN_ALIAS(pthread_rwlock_tryrdlock);$/;"	v
pthread_rwlock_trywrlock	/usr/include/pthread.h	/^int       pthread_rwlock_trywrlock(pthread_rwlock_t *) __DARWIN_ALIAS(pthread_rwlock_trywrlock);$/;"	v
pthread_rwlock_unlock	/usr/include/pthread.h	/^int       pthread_rwlock_unlock(pthread_rwlock_t *) __DARWIN_ALIAS(pthread_rwlock_unlock);$/;"	v
pthread_rwlock_wrlock	/usr/include/pthread.h	/^int       pthread_rwlock_wrlock(pthread_rwlock_t *) __DARWIN_ALIAS(pthread_rwlock_wrlock);$/;"	v
pthread_rwlockattr_destroy	/usr/include/pthread.h	/^int       pthread_rwlockattr_destroy(pthread_rwlockattr_t *);$/;"	p	signature:(pthread_rwlockattr_t *)
pthread_rwlockattr_getpshared	/usr/include/pthread.h	/^int       pthread_rwlockattr_getpshared(const pthread_rwlockattr_t * __restrict,$/;"	p	signature:(const pthread_rwlockattr_t * __restrict, int * __restrict)
pthread_rwlockattr_init	/usr/include/pthread.h	/^int       pthread_rwlockattr_init(pthread_rwlockattr_t *);$/;"	p	signature:(pthread_rwlockattr_t *)
pthread_rwlockattr_setpshared	/usr/include/pthread.h	/^int       pthread_rwlockattr_setpshared(pthread_rwlockattr_t *,$/;"	p	signature:(pthread_rwlockattr_t *, int )
pthread_rwlockattr_t	/usr/include/pthread.h	/^typedef __darwin_pthread_rwlockattr_t	pthread_rwlockattr_t;$/;"	t
pthread_self	/usr/include/pthread.h	/^pthread_t pthread_self(void);$/;"	p	signature:(void)
pthread_setcancelstate	/usr/include/pthread.h	/^int       pthread_setcancelstate(int , int *) __DARWIN_ALIAS(pthread_setcancelstate);$/;"	v
pthread_setcanceltype	/usr/include/pthread.h	/^int       pthread_setcanceltype(int , int *) __DARWIN_ALIAS(pthread_setcanceltype);$/;"	v
pthread_setconcurrency	/usr/include/pthread.h	/^int       pthread_setconcurrency(int);$/;"	p	signature:(int)
pthread_setname_np	/usr/include/pthread.h	/^int		pthread_setname_np(const char*);$/;"	p	signature:(const char*)
pthread_setschedparam	/usr/include/pthread.h	/^int       pthread_setschedparam(pthread_t ,$/;"	p	signature:(pthread_t , int , const struct sched_param *)
pthread_setspecific	/usr/include/pthread.h	/^int       pthread_setspecific(pthread_key_t ,$/;"	p	signature:(pthread_key_t , const void *)
pthread_setugid_np	/usr/include/unistd.h	/^int	 pthread_setugid_np(uid_t, gid_t);$/;"	p	signature:(uid_t, gid_t)
pthread_sigmask	/usr/include/pthread.h	/^int       pthread_sigmask(int, const sigset_t *, sigset_t *) __DARWIN_ALIAS(pthread_sigmask);$/;"	v
pthread_sigmask	/usr/include/signal.h	/^int	pthread_sigmask(int, const sigset_t *, sigset_t *) __DARWIN_ALIAS(pthread_sigmask);$/;"	v
pthread_t	/usr/include/pthread.h	/^typedef __darwin_pthread_t		pthread_t;$/;"	t
pthread_t	/usr/include/signal.h	/^typedef __darwin_pthread_t	pthread_t;$/;"	t
pthread_testcancel	/usr/include/pthread.h	/^void      pthread_testcancel(void) __DARWIN_ALIAS(pthread_testcancel);$/;"	v
pthread_threadid_np	/usr/include/pthread.h	/^int		pthread_threadid_np(pthread_t,__uint64_t*);$/;"	p	signature:(pthread_t,__uint64_t*)
pthread_yield_np	/usr/include/pthread.h	/^void	  pthread_yield_np(void);$/;"	p	signature:(void)
ptr	/usr/include/tcl.h	/^	    VOID *ptr;		\/* Pointer to digits *\/$/;"	m	struct:Tcl_Obj::__anon114::__anon116	access:public
ptr1	/usr/include/tcl.h	/^	    VOID *ptr1;$/;"	m	struct:Tcl_Obj::__anon114::__anon115	access:public
ptr2	/usr/include/tcl.h	/^	    VOID *ptr2;$/;"	m	struct:Tcl_Obj::__anon114::__anon115	access:public
ptrAndLongRep	/usr/include/tcl.h	/^	} ptrAndLongRep;$/;"	m	union:Tcl_Obj::__anon114	typeref:struct:Tcl_Obj::__anon114::__anon116	access:public
ptrdiff_t	/usr/include/stddef.h	/^typedef	__darwin_ptrdiff_t	ptrdiff_t;$/;"	t
ptsname	/usr/include/stdlib.h	/^char	*ptsname(int);$/;"	p	signature:(int)
pulse	/usr/include/term.h	/^#define pulse /;"	d
put	/usr/include/db.h	/^	int (*put)(const struct __db *, DBT *, const DBT *, unsigned int);$/;"	m	struct:__db	access:public
putc	/usr/include/fcgi_stdio.h	/^#define putc /;"	d
putc	/usr/include/fcgi_stdio.h	/^#undef  putc$/;"	d
putc	/usr/include/stdio.h	/^int	 putc(int, FILE *);$/;"	p	signature:(int, FILE *)
putc_unlocked	/usr/include/stdio.h	/^#define putc_unlocked(/;"	d
putc_unlocked	/usr/include/stdio.h	/^int	 putc_unlocked(int, FILE *);$/;"	p	signature:(int, FILE *)
putchar	/usr/include/fcgi_stdio.h	/^#define	putchar /;"	d
putchar	/usr/include/fcgi_stdio.h	/^#undef  putchar$/;"	d
putchar	/usr/include/stdio.h	/^int	 putchar(int);$/;"	p	signature:(int)
putchar_unlocked	/usr/include/stdio.h	/^#define	putchar_unlocked(/;"	d
putchar_unlocked	/usr/include/stdio.h	/^int	 putchar_unlocked(int);$/;"	p	signature:(int)
putenv	/usr/include/stdlib.h	/^int	 putenv(char *) __DARWIN_ALIAS(putenv);$/;"	v
putlong	/usr/include/resolv.h	/^#define putlong	/;"	d
putlong	/usr/include/resolv.h	/^void		putlong __P((u_int32_t, u_char *));$/;"	p	signature:(u_int32_t, u_char *)
puts	/usr/include/fcgi_stdio.h	/^#define	puts /;"	d
puts	/usr/include/fcgi_stdio.h	/^#undef  puts$/;"	d
puts	/usr/include/stdio.h	/^int	 puts(const char *);$/;"	p	signature:(const char *)
putshort	/usr/include/resolv.h	/^#define putshort	/;"	d
putshort	/usr/include/resolv.h	/^void		putshort __P((u_int16_t, u_char *));$/;"	p	signature:(u_int16_t, u_char *)
pututxline	/usr/include/utmpx.h	/^	pututxline(const struct utmpx *);$/;"	p	signature:(const struct utmpx *)
putw	/usr/include/stdio.h	/^int	 putw(int, FILE *);$/;"	p	signature:(int, FILE *)
putwc	/usr/include/wchar.h	/^wint_t	putwc(wchar_t, FILE *);$/;"	p	signature:(wchar_t, FILE *)
putwchar	/usr/include/wchar.h	/^wint_t	putwchar(wchar_t);$/;"	p	signature:(wchar_t)
pw_change	/usr/include/pwd.h	/^	__darwin_time_t pw_change;		\/* password change time *\/$/;"	m	struct:passwd	access:public
pw_class	/usr/include/pwd.h	/^	char	*pw_class;		\/* user access class *\/$/;"	m	struct:passwd	access:public
pw_dir	/usr/include/pwd.h	/^	char	*pw_dir;		\/* home directory *\/$/;"	m	struct:passwd	access:public
pw_expire	/usr/include/pwd.h	/^	__darwin_time_t pw_expire;		\/* account expiration *\/$/;"	m	struct:passwd	access:public
pw_gecos	/usr/include/pwd.h	/^	char	*pw_gecos;		\/* Honeywell login info *\/$/;"	m	struct:passwd	access:public
pw_gid	/usr/include/pwd.h	/^	gid_t	pw_gid;			\/* user gid *\/$/;"	m	struct:passwd	access:public
pw_name	/usr/include/pwd.h	/^	char	*pw_name;		\/* user name *\/$/;"	m	struct:passwd	access:public
pw_passwd	/usr/include/pwd.h	/^	char	*pw_passwd;		\/* encrypted password *\/$/;"	m	struct:passwd	access:public
pw_shell	/usr/include/pwd.h	/^	char	*pw_shell;		\/* default shell *\/$/;"	m	struct:passwd	access:public
pw_uid	/usr/include/pwd.h	/^	uid_t	pw_uid;			\/* user uid *\/$/;"	m	struct:passwd	access:public
pwrite	/usr/include/unistd.h	/^ssize_t	 pwrite(int, const void *, size_t, off_t) __DARWIN_ALIAS_C(pwrite);$/;"	v
q	/usr/include/mpool.h	/^	TAILQ_ENTRY(_bkt) q;		\/* lru queue *\/$/;"	m	struct:_bkt	access:public
q_back	/usr/include/libc.h	/^        struct qelem *q_back;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
q_data	/usr/include/libc.h	/^        char *q_data;$/;"	m	struct:qelem	access:public
q_forw	/usr/include/libc.h	/^        struct qelem *q_forw;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
qdcount	/usr/include/dns_util.h	/^	uint16_t qdcount;$/;"	m	struct:__anon22	access:public
qelem	/usr/include/libc.h	/^struct qelem {$/;"	s
qelem::q_back	/usr/include/libc.h	/^        struct qelem *q_back;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
qelem::q_data	/usr/include/libc.h	/^        char *q_data;$/;"	m	struct:qelem	access:public
qelem::q_forw	/usr/include/libc.h	/^        struct qelem *q_forw;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
qhook	/usr/include/resolv.h	/^	res_send_qhook qhook;		\/* query hook *\/$/;"	m	struct:__res_state	access:public
qsort	/usr/include/stdlib.h	/^void	 qsort(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (*)(const void *, const void *))
qsort_b	/usr/include/stdlib.h	/^void	 qsort_b(void *, size_t, size_t,$/;"	p	signature:(void *, size_t, size_t, int (^)(const void *, const void *))
qsort_r	/usr/include/stdlib.h	/^void	 qsort_r(void *, size_t, size_t, void *,$/;"	p	signature:(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))
quant	/usr/include/expat.h	/^  enum XML_Content_Quant        quant;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Quant	access:public
que_elem	/usr/include/search.h	/^struct que_elem {$/;"	s
que_elem::next	/usr/include/search.h	/^	struct que_elem *next;$/;"	m	struct:que_elem	typeref:struct:que_elem::que_elem	access:public
que_elem::prev	/usr/include/search.h	/^	struct que_elem *prev;$/;"	m	struct:que_elem	typeref:struct:que_elem::que_elem	access:public
querylocale	/usr/include/xlocale.h	/^__const char *	querylocale(int, locale_t);$/;"	p	signature:(int, locale_t)
question	/usr/include/dns_util.h	/^	dns_question_t **question;$/;"	m	struct:__anon43	access:public
quick_dial	/usr/include/term.h	/^#define quick_dial /;"	d
quot	/usr/include/inttypes.h	/^        intmax_t quot;$/;"	m	struct:__anon66	access:public
quot	/usr/include/stdlib.h	/^	int quot;		\/* quotient *\/$/;"	m	struct:__anon109	access:public
quot	/usr/include/stdlib.h	/^	long long quot;$/;"	m	struct:__anon111	access:public
quot	/usr/include/stdlib.h	/^	long quot;		\/* quotient *\/$/;"	m	struct:__anon110	access:public
r_aliases	/usr/include/netdb.h	/^        char    **r_aliases;    \/* alias list *\/$/;"	m	struct:rpcent	access:public
r_name	/usr/include/netdb.h	/^        char    *r_name;        \/* name of server for this rpc program *\/$/;"	m	struct:rpcent	access:public
r_number	/usr/include/netdb.h	/^        int     r_number;       \/* rpc program number *\/$/;"	m	struct:rpcent	access:public
radixsort	/usr/include/stdlib.h	/^int	 radixsort(const unsigned char **, int, const unsigned char *,$/;"	p	signature:(const unsigned char **, int, const unsigned char *, unsigned)
raise	/usr/include/signal.h	/^int	raise(int);$/;"	p	signature:(int)
ran_name	/usr/include/ranlib.h	/^		char	*ran_name;	\/* symbol defined by *\/$/;"	m	union:ranlib::__anon91	access:public
ran_off	/usr/include/ranlib.h	/^	off_t	ran_off;		\/* library member at this offset *\/$/;"	m	struct:ranlib	access:public
ran_strx	/usr/include/ranlib.h	/^		off_t	ran_strx;	\/* string table index of *\/$/;"	m	union:ranlib::__anon91	access:public
ran_un	/usr/include/ranlib.h	/^	} ran_un;$/;"	m	struct:ranlib	typeref:union:ranlib::__anon91	access:public
rand	/usr/include/stdlib.h	/^int	 rand(void);$/;"	p	signature:(void)
rand_r	/usr/include/stdlib.h	/^int	 rand_r(unsigned *);$/;"	p	signature:(unsigned *)
random	/usr/include/stdlib.h	/^long	 random(void);$/;"	p	signature:(void)
randomness	/usr/include/sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	access:public
ranlib	/usr/include/ranlib.h	/^struct	ranlib {$/;"	s
ranlib::__anon91::ran_name	/usr/include/ranlib.h	/^		char	*ran_name;	\/* symbol defined by *\/$/;"	m	union:ranlib::__anon91	access:public
ranlib::__anon91::ran_strx	/usr/include/ranlib.h	/^		off_t	ran_strx;	\/* string table index of *\/$/;"	m	union:ranlib::__anon91	access:public
ranlib::ran_off	/usr/include/ranlib.h	/^	off_t	ran_off;		\/* library member at this offset *\/$/;"	m	struct:ranlib	access:public
ranlib::ran_un	/usr/include/ranlib.h	/^	} ran_un;$/;"	m	struct:ranlib	typeref:union:ranlib::__anon91	access:public
rcAttr	/usr/include/mecab.h	/^  unsigned short               rcAttr;$/;"	m	struct:mecab_learner_node_t	access:public
rcAttr	/usr/include/mecab.h	/^  unsigned short        rcAttr;$/;"	m	struct:mecab_node_t	access:public
rcAttr	/usr/include/mecab.h	/^  unsigned short rcAttr;$/;"	m	struct:mecab_token_t	access:public
rcmd	/usr/include/unistd.h	/^int	 rcmd(char **, int, const char *, const char *, const char *, int *);$/;"	p	signature:(char **, int, const char *, const char *, const char *, int *)
rcmd_af	/usr/include/unistd.h	/^int	 rcmd_af(char **, int, const char *, const char *, const char *, int *,$/;"	p	signature:(char **, int, const char *, const char *, const char *, int *, int)
rdNext	/usr/include/fcgiapp.h	/^    unsigned char *rdNext;    \/* reader: first valid byte$/;"	m	struct:FCGX_Stream	access:public
rdata	/usr/include/nameser.h	/^	const u_char *	rdata;$/;"	m	struct:__ns_rr	access:public
rdlength	/usr/include/nameser.h	/^	u_int16_t	rdlength;$/;"	m	struct:__ns_rr	access:public
re_endp	/usr/include/regex.h	/^	const char *re_endp;	\/* end pointer for REG_PEND *\/$/;"	m	struct:__anon92	access:public
re_g	/usr/include/regex.h	/^	struct re_guts *re_g;	\/* none of your business :-) *\/$/;"	m	struct:__anon92	typeref:struct:__anon92::re_guts	access:public
re_magic	/usr/include/regex.h	/^	int re_magic;$/;"	m	struct:__anon92	access:public
re_nsub	/usr/include/regex.h	/^	size_t re_nsub;		\/* number of parenthesized subexpressions *\/$/;"	m	struct:__anon92	access:public
read	/usr/include/unistd.h	/^ssize_t	 read(int, void *, size_t) __DARWIN_ALIAS_C(read);$/;"	v
readdir	/usr/include/dirent.h	/^struct dirent *readdir(DIR *) __DARWIN_INODE64(readdir);$/;"	v
readdir_r	/usr/include/dirent.h	/^int readdir_r(DIR *, struct dirent *, struct dirent **) __DARWIN_INODE64(readdir_r);$/;"	v
readlink	/usr/include/unistd.h	/^ssize_t  readlink(const char * __restrict, char * __restrict, size_t);$/;"	p	signature:(const char * __restrict, char * __restrict, size_t)
readpassphrase	/usr/include/readpassphrase.h	/^char * readpassphrase(const char *, char *, size_t, int);$/;"	p	signature:(const char *, char *, size_t, int)
realloc	/usr/include/sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	access:public
realloc	/usr/include/stdlib.h	/^void	*realloc(void *, size_t);$/;"	p	signature:(void *, size_t)
realloc_fcn	/usr/include/expat.h	/^  void *(*realloc_fcn)(void *ptr, size_t size);$/;"	m	struct:__anon48	access:public
reallocf	/usr/include/stdlib.h	/^void	*reallocf(void *, size_t);$/;"	p	signature:(void *, size_t)
realpath	/usr/include/stdlib.h	/^char	*realpath(const char * __restrict, char * __restrict) __DARWIN_ALIAS(realpath);$/;"	v
realpath	/usr/include/stdlib.h	/^char	*realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);$/;"	v
reboot	/usr/include/unistd.h	/^int	 reboot(int);$/;"	p	signature:(int)
rebuildSize	/usr/include/tcl.h	/^    int rebuildSize;		\/* Enlarge table when numEntries gets to be$/;"	m	struct:Tcl_HashTable	access:public
reclen	/usr/include/db.h	/^	size_t		reclen;		\/* record length (fixed-length records) *\/$/;"	m	struct:__anon15	access:public
recno_t	/usr/include/db.h	/^typedef u_int32_t	recno_t;$/;"	t
recordPtr	/usr/include/tk.h	/^    char *recordPtr;		\/* The data structure in which to restore$/;"	m	struct:Tk_SavedOptions	access:public
recvfrom	/usr/include/tcpd.h	/^#define recvfrom /;"	d
redraw_flags	/usr/include/tk.h	/^    int redraw_flags;		\/* Some flags used in the canvas *\/$/;"	m	struct:Tk_Item	access:public
redrawwin	/usr/include/curses.h	/^#define redrawwin(/;"	d
redrawwin	/usr/include/ncurses.h	/^#define redrawwin(/;"	d
ref	/usr/include/form.h	/^  long			ref;			\/* reference count	*\/$/;"	m	struct:typenode	access:public
refCount	/usr/include/tcl.h	/^    int refCount;		\/* When 0 the object will be freed. *\/$/;"	m	struct:Tcl_Obj	access:public
ref_count	/usr/include/ltdl.h	/^  int		ref_count;	\/* number of times lt_dlopened minus$/;"	m	struct:__anon75	access:public
refresh	/usr/include/curses.h	/^#define refresh(/;"	d
refresh	/usr/include/curses.h	/^#undef refresh$/;"	d
refresh	/usr/include/dns_util.h	/^	uint32_t refresh;$/;"	m	struct:__anon28	access:public
refresh	/usr/include/ncurses.h	/^#define refresh(/;"	d
refresh	/usr/include/ncurses.h	/^#undef refresh$/;"	d
refuse	/usr/include/tcpd.h	/^extern void refuse();			\/* clean up and exit *\/$/;"	p	signature:()
regcomp	/usr/include/regex.h	/^int	regcomp(regex_t * __restrict, const char * __restrict, int) __DARWIN_ALIAS(regcomp);$/;"	v
regerror	/usr/include/regex.h	/^size_t	regerror(int, const regex_t * __restrict, char * __restrict, size_t);$/;"	p	signature:(int, const regex_t * __restrict, char * __restrict, size_t)
regex_t	/usr/include/regex.h	/^} regex_t;$/;"	t	typeref:struct:__anon92
regexec	/usr/include/regex.h	/^int	regexec(const regex_t * __restrict, const char * __restrict, size_t,$/;"	p	signature:(const regex_t * __restrict, const char * __restrict, size_t, regmatch_t __pmatch[ __restrict], int)
regfree	/usr/include/regex.h	/^void	regfree(regex_t *);$/;"	p	signature:(regex_t *)
regmatch_t	/usr/include/regex.h	/^} regmatch_t;$/;"	t	typeref:struct:__anon93
regoff_t	/usr/include/regex.h	/^typedef __darwin_off_t regoff_t;$/;"	t
release	/usr/include/expat.h	/^  void (XMLCALL *release)(void *data);$/;"	m	struct:__anon49	access:public
release_memory	/usr/include/sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	access:public
rem	/usr/include/inttypes.h	/^        intmax_t rem;$/;"	m	struct:__anon66	access:public
rem	/usr/include/stdlib.h	/^	int rem;		\/* remainder *\/$/;"	m	struct:__anon109	access:public
rem	/usr/include/stdlib.h	/^	long long rem;$/;"	m	struct:__anon111	access:public
rem	/usr/include/stdlib.h	/^	long rem;		\/* remainder *\/$/;"	m	struct:__anon110	access:public
remove	/usr/include/stdio.h	/^int	 remove(const char *);$/;"	p	signature:(const char *)
removeDirectoryProc	/usr/include/tcl.h	/^    Tcl_FSRemoveDirectoryProc *removeDirectoryProc;$/;"	m	struct:Tcl_Filesystem	access:public
remove_clock	/usr/include/term.h	/^#define remove_clock /;"	d
remove_error_table	/usr/include/com_err.h	/^errcode_t remove_error_table (const struct error_table *et);$/;"	p	signature:(const struct error_table *et)
removefile	/usr/include/removefile.h	/^int removefile(const char* path, removefile_state_t state, removefile_flags_t flags);$/;"	p	signature:(const char* path, removefile_state_t state, removefile_flags_t flags)
removefile_callback_t	/usr/include/removefile.h	/^typedef int (*removefile_callback_t)(removefile_state_t state, const char* path, void* context);$/;"	t
removefile_cancel	/usr/include/removefile.h	/^int removefile_cancel(removefile_state_t state);$/;"	p	signature:(removefile_state_t state)
removefile_flags_t	/usr/include/removefile.h	/^typedef uint32_t removefile_flags_t;$/;"	t
removefile_state_alloc	/usr/include/removefile.h	/^removefile_state_t removefile_state_alloc(void);$/;"	p	signature:(void)
removefile_state_free	/usr/include/removefile.h	/^int removefile_state_free(removefile_state_t);$/;"	p	signature:(removefile_state_t)
removefile_state_get	/usr/include/removefile.h	/^int removefile_state_get(removefile_state_t state, uint32_t key, void * dst);$/;"	p	signature:(removefile_state_t state, uint32_t key, void * dst)
removefile_state_set	/usr/include/removefile.h	/^int removefile_state_set(removefile_state_t state, uint32_t key, const void* value);$/;"	p	signature:(removefile_state_t state, uint32_t key, const void* value)
removefile_state_t	/usr/include/removefile.h	/^typedef struct _removefile_state * removefile_state_t;$/;"	t	typeref:struct:_removefile_state
remque	/usr/include/search.h	/^void	 remque(void *);$/;"	p	signature:(void *)
rename	/usr/include/stdio.h	/^int	 rename (const char *, const char *);$/;"	p	signature:(const char *, const char *)
renameFileProc	/usr/include/tcl.h	/^    Tcl_FSRenameFileProc *renameFileProc;$/;"	m	struct:Tcl_Filesystem	access:public
repeat_char	/usr/include/term.h	/^#define repeat_char /;"	d
reqHeight	/usr/include/tk.h	/^    int reqWidth, reqHeight;$/;"	m	struct:Tk_FakeWin	access:public
reqWidth	/usr/include/tk.h	/^    int reqWidth, reqHeight;$/;"	m	struct:Tk_FakeWin	access:public
req_for_input	/usr/include/term.h	/^#define req_for_input /;"	d
req_mouse_pos	/usr/include/term.h	/^#define req_mouse_pos /;"	d
request	/usr/include/tcpd.h	/^    struct request_info *request;	\/* for shared information *\/$/;"	m	struct:host_info	typeref:struct:host_info::request_info	access:public
requestId	/usr/include/fcgiapp.h	/^    int requestId;            \/* valid if isBeginProcessed *\/$/;"	m	struct:FCGX_Request	access:public
requestIdB0	/usr/include/fastcgi.h	/^    unsigned char requestIdB0;$/;"	m	struct:__anon53	access:public
requestIdB1	/usr/include/fastcgi.h	/^    unsigned char requestIdB1;$/;"	m	struct:__anon53	access:public
requestProc	/usr/include/tk.h	/^    Tk_GeomRequestProc *requestProc;$/;"	m	struct:Tk_GeomMgr	access:public
request_info	/usr/include/tcpd.h	/^struct request_info {$/;"	s
request_info::cleanup	/usr/include/tcpd.h	/^    void  (*cleanup) ();		\/* cleanup function or 0 *\/$/;"	m	struct:request_info	access:public
request_info::client	/usr/include/tcpd.h	/^    struct host_info client[1];		\/* client endpoint info *\/$/;"	m	struct:request_info	typeref:struct:request_info::host_info	access:public
request_info::config	/usr/include/tcpd.h	/^    struct netconfig *config;		\/* netdir handle *\/$/;"	m	struct:request_info	typeref:struct:request_info::netconfig	access:public
request_info::daemon	/usr/include/tcpd.h	/^    char    daemon[STRING_LENGTH];	\/* access via eval_daemon(request) *\/$/;"	m	struct:request_info	access:public
request_info::fd	/usr/include/tcpd.h	/^    int     fd;				\/* socket handle *\/$/;"	m	struct:request_info	access:public
request_info::hostaddr	/usr/include/tcpd.h	/^    void  (*hostaddr) ();		\/* address to printable address *\/$/;"	m	struct:request_info	access:public
request_info::hostname	/usr/include/tcpd.h	/^    void  (*hostname) ();		\/* address to printable hostname *\/$/;"	m	struct:request_info	access:public
request_info::pid	/usr/include/tcpd.h	/^    char    pid[10];			\/* access via eval_pid(request) *\/$/;"	m	struct:request_info	access:public
request_info::server	/usr/include/tcpd.h	/^    struct host_info server[1];		\/* server endpoint info *\/$/;"	m	struct:request_info	typeref:struct:request_info::host_info	access:public
request_info::sink	/usr/include/tcpd.h	/^    void  (*sink) ();			\/* datagram sink function or 0 *\/$/;"	m	struct:request_info	access:public
request_info::user	/usr/include/tcpd.h	/^    char    user[STRING_LENGTH];	\/* access via eval_user(request) *\/$/;"	m	struct:request_info	access:public
request_init	/usr/include/tcpd.h	/^extern struct request_info *request_init();	\/* initialize request *\/$/;"	p	signature:()
request_init	/usr/include/tcpd.h	/^extern struct request_info *request_init(struct request_info *,...);$/;"	p	signature:(struct request_info *,...)
request_set	/usr/include/tcpd.h	/^extern struct request_info *request_set();	\/* update request structure *\/$/;"	p	signature:()
request_set	/usr/include/tcpd.h	/^extern struct request_info *request_set(struct request_info *,...);$/;"	p	signature:(struct request_info *,...)
request_type	/usr/include/Xplugin.h	/^    xp_request_type request_type;$/;"	m	struct:xp_async_error_event_struct	access:public
require	/usr/include/AssertMacros.h	/^		#define require(/;"	d
require_action	/usr/include/AssertMacros.h	/^		#define require_action(/;"	d
require_action_quiet	/usr/include/AssertMacros.h	/^		#define require_action_quiet(/;"	d
require_action_string	/usr/include/AssertMacros.h	/^		#define require_action_string(/;"	d
require_noerr	/usr/include/AssertMacros.h	/^		#define require_noerr(/;"	d
require_noerr_action	/usr/include/AssertMacros.h	/^		#define require_noerr_action(/;"	d
require_noerr_action_quiet	/usr/include/AssertMacros.h	/^		#define require_noerr_action_quiet(/;"	d
require_noerr_action_string	/usr/include/AssertMacros.h	/^		#define require_noerr_action_string(/;"	d
require_noerr_quiet	/usr/include/AssertMacros.h	/^		#define require_noerr_quiet(/;"	d
require_noerr_string	/usr/include/AssertMacros.h	/^		#define require_noerr_string(/;"	d
require_quiet	/usr/include/AssertMacros.h	/^		#define require_quiet(/;"	d
require_string	/usr/include/AssertMacros.h	/^		#define require_string(/;"	d
required_argument	/usr/include/getopt.h	/^#define required_argument /;"	d
res_buildprotolist	/usr/include/resolv.h	/^void		res_buildprotolist __P((void));$/;"	p	signature:(void)
res_close	/usr/include/resolv.h	/^#define res_close	/;"	d
res_close	/usr/include/resolv.h	/^void		res_close __P((void));$/;"	p	signature:(void)
res_destroyprotolist	/usr/include/resolv.h	/^void		res_destroyprotolist __P((void));$/;"	p	signature:(void)
res_destroyservicelist	/usr/include/resolv.h	/^void		res_destroyservicelist __P((void));$/;"	p	signature:(void)
res_dnok	/usr/include/resolv.h	/^#define res_dnok	/;"	d
res_dnok	/usr/include/resolv.h	/^int		res_dnok __P((const char *));$/;"	p	signature:(const char *)
res_done	/usr/include/resolv.h	/^	res_done,$/;"	e	enum:__anon97
res_done	/usr/include/resolv.h	/^#define res_done /;"	d
res_error	/usr/include/resolv.h	/^	res_error$/;"	e	enum:__anon97
res_error	/usr/include/resolv.h	/^#define res_error /;"	d
res_findzonecut	/usr/include/resolv.h	/^#define res_findzonecut	/;"	d
res_findzonecut	/usr/include/resolv.h	/^int		res_findzonecut __P((res_state, const char *, ns_class, int, char *, size_t, struct in_addr *, int));$/;"	p	signature:(res_state, const char *, ns_class, int, char *, size_t, struct in_addr *, int)
res_findzonecut2	/usr/include/resolv.h	/^#define res_findzonecut2	/;"	d
res_findzonecut2	/usr/include/resolv.h	/^int		res_findzonecut2 __P((res_state, const char *, ns_class, int, char *, size_t, union res_sockaddr_union *, int));$/;"	p	signature:(res_state, const char *, ns_class, int, char *, size_t, union res_sockaddr_union *, int)
res_get_bitstringsuffix	/usr/include/resolv.h	/^const char *	res_get_bitstringsuffix __P((res_state));$/;"	p	signature:(res_state)
res_get_nibblesuffix	/usr/include/resolv.h	/^const char *	res_get_nibblesuffix __P((res_state));$/;"	p	signature:(res_state)
res_get_nibblesuffix2	/usr/include/resolv.h	/^const char *	res_get_nibblesuffix2 __P((res_state));$/;"	p	signature:(res_state)
res_getservers	/usr/include/resolv.h	/^#define res_getservers	/;"	d
res_getservers	/usr/include/resolv.h	/^int		res_getservers __P((res_state, union res_sockaddr_union *, int));$/;"	p	signature:(res_state, union res_sockaddr_union *, int)
res_goahead	/usr/include/resolv.h	/^	res_goahead,$/;"	e	enum:__anon97
res_goahead	/usr/include/resolv.h	/^#define res_goahead /;"	d
res_h_errno	/usr/include/resolv.h	/^	int	res_h_errno;		\/* last one set for this context *\/$/;"	m	struct:__res_state	access:public
res_hnok	/usr/include/resolv.h	/^#define res_hnok	/;"	d
res_hnok	/usr/include/resolv.h	/^int		res_hnok __P((const char *));$/;"	p	signature:(const char *)
res_hostalias	/usr/include/resolv.h	/^#define res_hostalias	/;"	d
res_hostalias	/usr/include/resolv.h	/^const char *res_hostalias __P((const res_state, const char *, char *, size_t));$/;"	p	signature:(const res_state, const char *, char *, size_t)
res_init	/usr/include/resolv.h	/^#define res_init	/;"	d
res_init	/usr/include/resolv.h	/^int		res_init __P((void));$/;"	p	signature:(void)
res_isourserver	/usr/include/resolv.h	/^#define res_isourserver	/;"	d
res_isourserver	/usr/include/resolv.h	/^int		res_isourserver __P((const struct sockaddr_in *));$/;"	p	signature:(const struct sockaddr_in *)
res_mailok	/usr/include/resolv.h	/^#define res_mailok	/;"	d
res_mailok	/usr/include/resolv.h	/^int		res_mailok __P((const char *));$/;"	p	signature:(const char *)
res_mkquery	/usr/include/resolv.h	/^#define res_mkquery	/;"	d
res_mkquery	/usr/include/resolv.h	/^int		res_mkquery __P((int, const char *, int, int, const u_char *,$/;"	p	signature:(int, const char *, int, int, const u_char *, int, const u_char *, u_char *, int)
res_modified	/usr/include/resolv.h	/^	res_modified,$/;"	e	enum:__anon97
res_modified	/usr/include/resolv.h	/^#define res_modified /;"	d
res_nameinquery	/usr/include/resolv.h	/^#define res_nameinquery	/;"	d
res_nameinquery	/usr/include/resolv.h	/^int		res_nameinquery __P((const char *, int, int, const u_char *, const u_char *));$/;"	p	signature:(const char *, int, int, const u_char *, const u_char *)
res_nametoclass	/usr/include/resolv.h	/^#define res_nametoclass	/;"	d
res_nametoclass	/usr/include/resolv.h	/^u_int16_t	res_nametoclass __P((const char *buf, int *success));$/;"	p	signature:(const char *buf, int *success)
res_nametotype	/usr/include/resolv.h	/^#define res_nametotype	/;"	d
res_nametotype	/usr/include/resolv.h	/^u_int16_t	res_nametotype __P((const char *buf, int *success));$/;"	p	signature:(const char *buf, int *success)
res_nclose	/usr/include/resolv.h	/^#define res_nclose	/;"	d
res_nclose	/usr/include/resolv.h	/^void		res_nclose __P((res_state));$/;"	p	signature:(res_state)
res_ndestroy	/usr/include/resolv.h	/^#define res_ndestroy	/;"	d
res_ndestroy	/usr/include/resolv.h	/^void		res_ndestroy __P((res_state));$/;"	p	signature:(res_state)
res_nextns	/usr/include/resolv.h	/^	res_nextns,$/;"	e	enum:__anon97
res_nextns	/usr/include/resolv.h	/^#define res_nextns /;"	d
res_ninit	/usr/include/resolv.h	/^#define res_ninit	/;"	d
res_ninit	/usr/include/resolv.h	/^int		res_ninit __P((res_state));$/;"	p	signature:(res_state)
res_nisourserver	/usr/include/resolv.h	/^#define res_nisourserver	/;"	d
res_nisourserver	/usr/include/resolv.h	/^int		res_nisourserver __P((const res_state, const struct sockaddr_in *));$/;"	p	signature:(const res_state, const struct sockaddr_in *)
res_nmkquery	/usr/include/resolv.h	/^#define res_nmkquery	/;"	d
res_nmkquery	/usr/include/resolv.h	/^int		res_nmkquery __P((res_state, int, const char *, int, int, const u_char *, int, const u_char *, u_char *, int));$/;"	p	signature:(res_state, int, const char *, int, int, const u_char *, int, const u_char *, u_char *, int)
res_nopt	/usr/include/resolv.h	/^#define res_nopt	/;"	d
res_nopt	/usr/include/resolv.h	/^int		res_nopt __P((res_state, int, u_char *, int, int));$/;"	p	signature:(res_state, int, u_char *, int, int)
res_nquery	/usr/include/resolv.h	/^#define res_nquery	/;"	d
res_nquery	/usr/include/resolv.h	/^int		res_nquery __P((res_state, const char *, int, int, u_char *, int));$/;"	p	signature:(res_state, const char *, int, int, u_char *, int)
res_nquerydomain	/usr/include/resolv.h	/^#define res_nquerydomain	/;"	d
res_nquerydomain	/usr/include/resolv.h	/^int		res_nquerydomain __P((res_state, const char *, const char *, int, int, u_char *, int));$/;"	p	signature:(res_state, const char *, const char *, int, int, u_char *, int)
res_nsearch	/usr/include/resolv.h	/^#define res_nsearch	/;"	d
res_nsearch	/usr/include/resolv.h	/^int		res_nsearch __P((res_state, const char *, int, int, u_char *, int));$/;"	p	signature:(res_state, const char *, int, int, u_char *, int)
res_nsend	/usr/include/resolv.h	/^#define res_nsend	/;"	d
res_nsend	/usr/include/resolv.h	/^int		res_nsend __P((res_state, const u_char *, int, u_char *, int));$/;"	p	signature:(res_state, const u_char *, int, u_char *, int)
res_nsendsigned	/usr/include/resolv.h	/^#define res_nsendsigned	/;"	d
res_nsendsigned	/usr/include/resolv.h	/^int		res_nsendsigned __P((res_state, const u_char *, int, ns_tsig_key *, u_char *, int));$/;"	p	signature:(res_state, const u_char *, int, ns_tsig_key *, u_char *, int)
res_ownok	/usr/include/resolv.h	/^#define res_ownok	/;"	d
res_ownok	/usr/include/resolv.h	/^int		res_ownok __P((const char *));$/;"	p	signature:(const char *)
res_pquery	/usr/include/resolv.h	/^#define res_pquery	/;"	d
res_pquery	/usr/include/resolv.h	/^void		res_pquery __P((const res_state, const u_char *, int, FILE *));$/;"	p	signature:(const res_state, const u_char *, int, FILE *)
res_protocolname	/usr/include/resolv.h	/^const char *	res_protocolname __P((int num));$/;"	p	signature:(int num)
res_queriesmatch	/usr/include/resolv.h	/^#define res_queriesmatch	/;"	d
res_queriesmatch	/usr/include/resolv.h	/^int		res_queriesmatch __P((const u_char *, const u_char *, const u_char *, const u_char *));$/;"	p	signature:(const u_char *, const u_char *, const u_char *, const u_char *)
res_query	/usr/include/resolv.h	/^#define res_query	/;"	d
res_query	/usr/include/resolv.h	/^int		res_query __P((const char *, int, int, u_char *, int));$/;"	p	signature:(const char *, int, int, u_char *, int)
res_querydomain	/usr/include/resolv.h	/^#define res_querydomain	/;"	d
res_querydomain	/usr/include/resolv.h	/^int		res_querydomain __P((const char *, const char *, int, int,$/;"	p	signature:(const char *, const char *, int, int, u_char *, int)
res_randomid	/usr/include/resolv.h	/^#define res_randomid	/;"	d
res_randomid	/usr/include/resolv.h	/^u_int		res_randomid __P((void));$/;"	p	signature:(void)
res_search	/usr/include/resolv.h	/^#define res_search	/;"	d
res_search	/usr/include/resolv.h	/^int		res_search __P((const char *, int, int, u_char *, int));$/;"	p	signature:(const char *, int, int, u_char *, int)
res_send	/usr/include/resolv.h	/^#define res_send	/;"	d
res_send	/usr/include/resolv.h	/^int		res_send __P((const u_char *, int, u_char *, int));$/;"	p	signature:(const u_char *, int, u_char *, int)
res_send_qhook	/usr/include/resolv.h	/^typedef res_sendhookact (*res_send_qhook)__P((struct sockaddr * const *ns,$/;"	t
res_send_rhook	/usr/include/resolv.h	/^typedef res_sendhookact (*res_send_rhook)__P((const struct sockaddr *ns,$/;"	t
res_send_setqhook	/usr/include/resolv.h	/^void		res_send_setqhook __P((res_send_qhook hook));$/;"	p	signature:(res_send_qhook hook)
res_send_setrhook	/usr/include/resolv.h	/^void		res_send_setrhook __P((res_send_rhook hook));$/;"	p	signature:(res_send_rhook hook)
res_sendhookact	/usr/include/resolv.h	/^#define res_sendhookact /;"	d
res_sendhookact	/usr/include/resolv.h	/^} res_sendhookact;$/;"	t	typeref:enum:__anon97
res_sendsigned	/usr/include/resolv.h	/^#define res_sendsigned	/;"	d
res_sendsigned	/usr/include/resolv.h	/^int		res_sendsigned __P((const u_char *, int, ns_tsig_key *,$/;"	p	signature:(const u_char *, int, ns_tsig_key *, u_char *, int)
res_servicename	/usr/include/resolv.h	/^const char *	res_servicename __P((u_int16_t port, const char *proto));$/;"	p	signature:(u_int16_t port, const char *proto)
res_setservers	/usr/include/resolv.h	/^#define res_setservers	/;"	d
res_setservers	/usr/include/resolv.h	/^void		res_setservers __P((res_state, const union res_sockaddr_union *, int));$/;"	p	signature:(res_state, const union res_sockaddr_union *, int)
res_sockaddr_union	/usr/include/resolv.h	/^#define res_sockaddr_union /;"	d
res_sockaddr_union	/usr/include/resolv.h	/^union res_sockaddr_union {$/;"	u
res_sockaddr_union::__align32	/usr/include/resolv.h	/^	int32_t			__align32;	\/* 32bit alignment *\/$/;"	m	union:res_sockaddr_union	access:public
res_sockaddr_union::__align64	/usr/include/resolv.h	/^	int64_t			__align64;	\/* 64bit alignment *\/$/;"	m	union:res_sockaddr_union	access:public
res_sockaddr_union::__space	/usr/include/resolv.h	/^	char			__space[128];   \/* max size *\/$/;"	m	union:res_sockaddr_union	access:public
res_sockaddr_union::sin	/usr/include/resolv.h	/^	struct sockaddr_in	sin;$/;"	m	union:res_sockaddr_union	typeref:struct:res_sockaddr_union::sockaddr_in	access:public
res_sockaddr_union::sin6	/usr/include/resolv.h	/^	struct sockaddr_in6	sin6;$/;"	m	union:res_sockaddr_union	typeref:struct:res_sockaddr_union::sockaddr_in6	access:public
res_state	/usr/include/resolv.h	/^#define res_state /;"	d
res_state	/usr/include/resolv.h	/^typedef struct __res_state *res_state;$/;"	t	typeref:struct:__res_state
res_sym	/usr/include/resolv.h	/^#define res_sym /;"	d
res_sym	/usr/include/resolv.h	/^struct res_sym$/;"	s
res_sym::humanname	/usr/include/resolv.h	/^	const char *	humanname; \/* Its fun name, like "mail exchanger" *\/$/;"	m	struct:res_sym	access:public
res_sym::name	/usr/include/resolv.h	/^	const char *	name;	   \/* Its symbolic name, like "MX" *\/$/;"	m	struct:res_sym	access:public
res_sym::number	/usr/include/resolv.h	/^	int		number;	   \/* Identifying number, like T_MX *\/$/;"	m	struct:res_sym	access:public
reserved	/usr/include/fastcgi.h	/^    unsigned char reserved;$/;"	m	struct:__anon53	access:public
reserved	/usr/include/fastcgi.h	/^    unsigned char reserved[3];$/;"	m	struct:__anon56	access:public
reserved	/usr/include/fastcgi.h	/^    unsigned char reserved[5];$/;"	m	struct:__anon54	access:public
reserved	/usr/include/fastcgi.h	/^    unsigned char reserved[7];$/;"	m	struct:__anon58	access:public
reserved	/usr/include/tcl.h	/^    long reserved;		\/* Reserved for later use. *\/$/;"	m	struct:Tcl_RegExpInfo	access:public
reserved	/usr/include/tk.h	/^    char *reserved;		\/* reserved for future expansion *\/$/;"	m	struct:Tk_ImageType	access:public
reserved	/usr/include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	access:public
reserved1	/usr/include/tk.h	/^    VOID *reserved1;		\/* Reserved for future expansion. *\/$/;"	m	struct:Tk_Outline	access:public
reserved1	/usr/include/tk.h	/^    char *reserved1;		\/* Reserved for future extension. *\/$/;"	m	struct:Tk_ItemType	access:public
reserved1	/usr/include/tk.h	/^    char *reserved1;		\/* reserved for future use *\/$/;"	m	struct:Tk_Item	access:public
reserved10	/usr/include/tclDecls.h	/^    void *reserved10;$/;"	m	struct:TclStubs	access:public
reserved167	/usr/include/tclDecls.h	/^    void *reserved167;$/;"	m	struct:TclStubs	access:public
reserved188	/usr/include/tclDecls.h	/^    void *reserved188;$/;"	m	struct:TclStubs	access:public
reserved2	/usr/include/tk.h	/^    VOID *reserved2;$/;"	m	struct:Tk_Outline	access:public
reserved2	/usr/include/tk.h	/^    int reserved2;		\/* Carefully compatible with *\/$/;"	m	struct:Tk_ItemType	access:public
reserved218	/usr/include/tkDecls.h	/^    void *reserved218;$/;"	m	struct:TkStubs	access:public
reserved219	/usr/include/tkDecls.h	/^    void *reserved219;$/;"	m	struct:TkStubs	access:public
reserved285	/usr/include/tclDecls.h	/^    void *reserved285;$/;"	m	struct:TclStubs	access:public
reserved3	/usr/include/tk.h	/^    VOID *reserved3;$/;"	m	struct:Tk_Outline	access:public
reserved3	/usr/include/tk.h	/^    char *reserved3;		\/* Jan Nijtmans dash patch *\/$/;"	m	struct:Tk_ItemType	access:public
reserved4	/usr/include/tk.h	/^    char *reserved4;$/;"	m	struct:Tk_ItemType	access:public
reserved81	/usr/include/tkIntXlibDecls.h	/^    void *reserved81;$/;"	m	struct:TkIntXlibStubs	access:public
reserved9	/usr/include/tclDecls.h	/^    void *reserved9;$/;"	m	struct:TclStubs	access:public
reset	/usr/include/fcgio.h	/^    void reset(void);$/;"	p	class:fcgi_streambuf	access:private	signature:(void)
reset	/usr/include/sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
reset_1string	/usr/include/term.h	/^#define reset_1string /;"	d
reset_2string	/usr/include/term.h	/^#define reset_2string /;"	d
reset_3string	/usr/include/term.h	/^#define reset_3string /;"	d
reset_com_err_hook	/usr/include/com_err.h	/^com_err_handler_t reset_com_err_hook(void);$/;"	p	signature:(void)
reset_file	/usr/include/term.h	/^#define reset_file /;"	d
resetterm	/usr/include/curses.h	/^#define resetterm(/;"	d
resetterm	/usr/include/ncurses.h	/^#define resetterm(/;"	d
restoreProc	/usr/include/tk.h	/^    Tk_CustomOptionRestoreProc *restoreProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
restore_cursor	/usr/include/term.h	/^#define restore_cursor /;"	d
restrict	/usr/include/inttypes.h	/^#    define restrict$/;"	d
restrict	/usr/include/inttypes.h	/^#  undef restrict$/;"	d
result	/usr/include/curses.h	/^	    unsigned int result;$/;"	m	struct:__anon6::__anon7::__anon8	access:public
result	/usr/include/ncurses.h	/^	    unsigned int result;$/;"	m	struct:__anon82::__anon83::__anon84	access:public
result	/usr/include/tcl.h	/^    char *result;		\/* If the last command returned a string$/;"	m	struct:Tcl_Interp	access:public
result	/usr/include/tcl.h	/^    char *result;$/;"	m	struct:Tcl_SavedResult	access:public
resultSpace	/usr/include/tcl.h	/^    char resultSpace[TCL_RESULT_SIZE+1];$/;"	m	struct:Tcl_SavedResult	access:public
result_blob	/usr/include/sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
result_double	/usr/include/sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	access:public
result_error	/usr/include/sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	access:public
result_error16	/usr/include/sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	access:public
result_error_code	/usr/include/sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
result_error_nomem	/usr/include/sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
result_error_toobig	/usr/include/sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
result_flags	/usr/include/curses.h	/^    int result_flags;	\/* _NC_EVENT_TIMEOUT_MSEC or _NC_EVENT_FILE_READABLE *\/$/;"	m	struct:__anon9	access:public
result_flags	/usr/include/ncurses.h	/^    int result_flags;	\/* _NC_EVENT_TIMEOUT_MSEC or _NC_EVENT_FILE_READABLE *\/$/;"	m	struct:__anon85	access:public
result_int	/usr/include/sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
result_int64	/usr/include/sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	access:public
result_null	/usr/include/sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
result_text	/usr/include/sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
result_text16	/usr/include/sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
result_text16be	/usr/include/sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
result_text16le	/usr/include/sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
result_value	/usr/include/sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
result_zeroblob	/usr/include/sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
retrans	/usr/include/resolv.h	/^	int	retrans;	 	\/* retransmition time interval *\/$/;"	m	struct:__res_state	access:public
retry	/usr/include/dns_util.h	/^	uint32_t retry;$/;"	m	struct:__anon28	access:public
retry	/usr/include/resolv.h	/^	int	retry;			\/* number of times to transmit (attempts, not retries) *\/$/;"	m	struct:__res_state	access:public
return_does_clr_eol	/usr/include/term.h	/^#define return_does_clr_eol /;"	d
reverseOrder	/usr/include/ldap.h	/^	int reverseOrder;$/;"	m	struct:ldapsortkey	access:public
revoke	/usr/include/unistd.h	/^int	 revoke(const char *);$/;"	p	signature:(const char *)
rewind	/usr/include/fcgi_stdio.h	/^#define rewind /;"	d
rewind	/usr/include/fcgi_stdio.h	/^#undef  rewind$/;"	d
rewind	/usr/include/stdio.h	/^void	 rewind(FILE *);$/;"	p	signature:(FILE *)
rewinddir	/usr/include/dirent.h	/^void rewinddir(DIR *) __DARWIN_ALIAS_I(rewinddir);$/;"	v
rfc931	/usr/include/tcpd.h	/^extern void rfc931();			\/* client name from RFC 931 daemon *\/$/;"	p	signature:()
rhook	/usr/include/resolv.h	/^	res_send_rhook rhook;		\/* response hook *\/$/;"	m	struct:__res_state	access:public
right	/usr/include/form.h	/^  struct typenode *	right;			\/* ptr to operand for | *\/$/;"	m	struct:typenode	typeref:struct:typenode::typenode	access:public
right	/usr/include/menu.h	/^  struct tagITEM *right;$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
rindex	/usr/include/string.h	/^char	*rindex(const char *, int);$/;"	p	signature:(const char *, int)
rindex	/usr/include/strings.h	/^char    *rindex(const char *, int); $/;"	p	signature:(const char *, int)
rlength	/usr/include/mecab.h	/^  unsigned short               rlength;$/;"	m	struct:mecab_learner_node_t	access:public
rlength	/usr/include/mecab.h	/^  unsigned short        rlength; \/* real length of morph(include white space before the morph) *\/$/;"	m	struct:mecab_node_t	access:public
rlink	/usr/include/search.h	/^	struct node  *llink, *rlink;$/;"	m	struct:node	typeref:struct:node::	access:public
rm_eo	/usr/include/regex.h	/^	regoff_t rm_eo;		\/* end of match *\/$/;"	m	struct:__anon93	access:public
rm_so	/usr/include/regex.h	/^	regoff_t rm_so;		\/* start of match *\/$/;"	m	struct:__anon93	access:public
rmailbx	/usr/include/dns_util.h	/^	char *rmailbx;$/;"	m	struct:__anon30	access:public
rmdir	/usr/include/unistd.h	/^int	 rmdir(const char *);$/;"	p	signature:(const char *)
rname	/usr/include/dns_util.h	/^	char *rname;$/;"	m	struct:__anon28	access:public
rnext	/usr/include/mecab.h	/^  struct mecab_learner_path_t*  rnext;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_path_t	access:public
rnext	/usr/include/mecab.h	/^  struct mecab_path_t* rnext;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_path_t	access:public
rnode	/usr/include/mecab.h	/^  struct mecab_learner_node_t*  rnode;$/;"	m	struct:mecab_learner_path_t	typeref:struct:mecab_learner_path_t::mecab_learner_node_t	access:public
rnode	/usr/include/mecab.h	/^  struct mecab_node_t* rnode;$/;"	m	struct:mecab_path_t	typeref:struct:mecab_path_t::mecab_node_t	access:public
role	/usr/include/fcgiapp.h	/^    int role;$/;"	m	struct:FCGX_Request	access:public
roleB0	/usr/include/fastcgi.h	/^    unsigned char roleB0;$/;"	m	struct:__anon54	access:public
roleB1	/usr/include/fastcgi.h	/^    unsigned char roleB1;$/;"	m	struct:__anon54	access:public
rollback_hook	/usr/include/sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
root	/usr/include/tk.h	/^    Window root;		\/* Root window that the event occured on. *\/$/;"	m	struct:__anon129	access:public
row_addr_glitch	/usr/include/term.h	/^#define row_addr_glitch /;"	d
row_address	/usr/include/term.h	/^#define row_address /;"	d
rows	/usr/include/form.h	/^  short			rows;		\/* size in rows			*\/$/;"	m	struct:fieldnode	access:public
rows	/usr/include/form.h	/^  short			rows;		\/* size in rows			*\/$/;"	m	struct:formnode	access:public
rows	/usr/include/menu.h	/^  short          rows;                  \/* Nr. of items high               *\/$/;"	m	struct:tagMENU	access:public
rpath	/usr/include/mecab.h	/^  struct mecab_learner_path_t *rpath;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_learner_path_t	access:public
rpath	/usr/include/mecab.h	/^  struct mecab_path_t  *rpath;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_path_t	access:public
rpcent	/usr/include/netdb.h	/^struct rpcent {$/;"	s
rpcent::r_aliases	/usr/include/netdb.h	/^        char    **r_aliases;    \/* alias list *\/$/;"	m	struct:rpcent	access:public
rpcent::r_name	/usr/include/netdb.h	/^        char    *r_name;        \/* name of server for this rpc program *\/$/;"	m	struct:rpcent	access:public
rpcent::r_number	/usr/include/netdb.h	/^        int     r_number;       \/* rpc program number *\/$/;"	m	struct:rpcent	access:public
rr_class	/usr/include/nameser.h	/^	u_int16_t	rr_class;$/;"	m	struct:__ns_rr	access:public
rresvport	/usr/include/unistd.h	/^int	 rresvport(int *);$/;"	p	signature:(int *)
rresvport_af	/usr/include/unistd.h	/^int	 rresvport_af(int *, int);$/;"	p	signature:(int *, int)
rsize	/usr/include/mecab.h	/^  unsigned int                    rsize;$/;"	m	struct:mecab_dictionary_info_t	access:public
rune_t	/usr/include/runetype.h	/^typedef	__darwin_rune_t		rune_t;$/;"	t
rune_t	/usr/include/stdlib.h	/^typedef __darwin_rune_t   	rune_t;$/;"	t
rune_t	/usr/include/wchar.h	/^typedef	__darwin_rune_t		rune_t;$/;"	t
ruserok	/usr/include/unistd.h	/^int	 ruserok(const char *, int, const char *, const char *);$/;"	p	signature:(const char *, int, const char *, const char *)
s_aliases	/usr/include/netdb.h	/^	char	**s_aliases;	\/* alias list *\/$/;"	m	struct:servent	access:public
s_mp_add	/usr/include/tclTomMathDecls.h	/^#define s_mp_add /;"	d
s_mp_mul	/usr/include/tclTomMath.h	/^#define s_mp_mul(/;"	d
s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^#define s_mp_mul_digs /;"	d
s_mp_sqr	/usr/include/tclTomMathDecls.h	/^#define s_mp_sqr /;"	d
s_mp_sub	/usr/include/tclTomMathDecls.h	/^#define s_mp_sub /;"	d
s_name	/usr/include/netdb.h	/^	char	*s_name;	\/* official service name *\/$/;"	m	struct:servent	access:public
s_port	/usr/include/netdb.h	/^	int	s_port;		\/* port # *\/$/;"	m	struct:servent	access:public
s_proto	/usr/include/netdb.h	/^	char	*s_proto;	\/* protocol to use *\/$/;"	m	struct:servent	access:public
same_screen	/usr/include/tk.h	/^    Bool same_screen;		\/* Same screen flag. *\/$/;"	m	struct:__anon129	access:public
sandbox_check	/usr/include/sandbox.h	/^int sandbox_check(pid_t pid, const char *operation, enum sandbox_filter_type type, ...);$/;"	p	signature:(pid_t pid, const char *operation, enum sandbox_filter_type type, ...)
sandbox_filter_type	/usr/include/sandbox.h	/^enum sandbox_filter_type {$/;"	g
sandbox_free_error	/usr/include/sandbox.h	/^void sandbox_free_error(char *errorbuf);$/;"	p	signature:(char *errorbuf)
sandbox_init	/usr/include/sandbox.h	/^int sandbox_init(const char *profile, uint64_t flags, char **errorbuf);$/;"	p	signature:(const char *profile, uint64_t flags, char **errorbuf)
save_cursor	/usr/include/term.h	/^#define save_cursor /;"	d
saveterm	/usr/include/curses.h	/^#define saveterm(/;"	d
saveterm	/usr/include/ncurses.h	/^#define saveterm(/;"	d
sbi_close	/usr/include/lber.h	/^	int (*sbi_close)( Sockbuf_IO_Desc *sbiod );$/;"	m	struct:sockbuf_io	access:public
sbi_ctrl	/usr/include/lber.h	/^	int (*sbi_ctrl)( Sockbuf_IO_Desc *sbiod, int opt, void *arg);$/;"	m	struct:sockbuf_io	access:public
sbi_read	/usr/include/lber.h	/^	ber_slen_t (*sbi_read)( Sockbuf_IO_Desc *sbiod, void *buf,$/;"	m	struct:sockbuf_io	access:public
sbi_remove	/usr/include/lber.h	/^	int (*sbi_remove)( Sockbuf_IO_Desc *sbiod );$/;"	m	struct:sockbuf_io	access:public
sbi_setup	/usr/include/lber.h	/^	int (*sbi_setup)( Sockbuf_IO_Desc *sbiod, void *arg );$/;"	m	struct:sockbuf_io	access:public
sbi_write	/usr/include/lber.h	/^	ber_slen_t (*sbi_write)( Sockbuf_IO_Desc *sbiod, void *buf,$/;"	m	struct:sockbuf_io	access:public
sbiod_io	/usr/include/lber.h	/^	Sockbuf_IO		*sbiod_io;$/;"	m	struct:sockbuf_io_desc	access:public
sbiod_level	/usr/include/lber.h	/^	int			sbiod_level;$/;"	m	struct:sockbuf_io_desc	access:public
sbiod_next	/usr/include/lber.h	/^	struct sockbuf_io_desc	*sbiod_next;$/;"	m	struct:sockbuf_io_desc	typeref:struct:sockbuf_io_desc::sockbuf_io_desc	access:public
sbiod_pvt	/usr/include/lber.h	/^	void 			*sbiod_pvt;$/;"	m	struct:sockbuf_io_desc	access:public
sbiod_sb	/usr/include/lber.h	/^	Sockbuf			*sbiod_sb;$/;"	m	struct:sockbuf_io_desc	access:public
sbrk	/usr/include/unistd.h	/^void	*sbrk(int);$/;"	p	signature:(int)
scale	/usr/include/sqltypes.h	/^    SQLSCHAR	scale;$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
scaleProc	/usr/include/tk.h	/^    Tk_ItemScaleProc *scaleProc;\/* Procedure to rescale items of this type. *\/$/;"	m	struct:Tk_ItemType	access:public
scancode_escape	/usr/include/term.h	/^#define scancode_escape /;"	d
scandir	/usr/include/dirent.h	/^    int (*)(struct dirent *), int (*)(const void *, const void *)) __DARWIN_INODE64(scandir);$/;"	v
scandir_b	/usr/include/dirent.h	/^    int (^)(struct dirent *), int (^)(const void *, const void *)) __DARWIN_INODE64(scandir_b);$/;"	v
scanf	/usr/include/stdio.h	/^int	 scanf(const char * __restrict, ...) __DARWIN_LDBL_COMPAT(scanf);$/;"	v
sched_get_priority_max	/usr/include/sched.h	/^extern int sched_get_priority_max(int);$/;"	p	signature:(int)
sched_get_priority_min	/usr/include/sched.h	/^extern int sched_get_priority_min(int);$/;"	p	signature:(int)
sched_param	/usr/include/sched.h	/^struct sched_param { int sched_priority;  char __opaque[__SCHED_PARAM_SIZE__]; };$/;"	s
sched_param::__opaque	/usr/include/sched.h	/^struct sched_param { int sched_priority;  char __opaque[__SCHED_PARAM_SIZE__]; };$/;"	m	struct:sched_param	access:public
sched_param::sched_priority	/usr/include/sched.h	/^struct sched_param { int sched_priority;  char __opaque[__SCHED_PARAM_SIZE__]; };$/;"	m	struct:sched_param	access:public
sched_priority	/usr/include/sched.h	/^struct sched_param { int sched_priority;  char __opaque[__SCHED_PARAM_SIZE__]; };$/;"	m	struct:sched_param	access:public
sched_yield	/usr/include/sched.h	/^extern int sched_yield(void);$/;"	p	signature:(void)
screenNum	/usr/include/tk.h	/^    int screenNum;$/;"	m	struct:Tk_FakeWin	access:public
scrl	/usr/include/curses.h	/^#define scrl(/;"	d
scrl	/usr/include/ncurses.h	/^#define scrl(/;"	d
scroll	/usr/include/curses.h	/^#define scroll(/;"	d
scroll	/usr/include/ncurses.h	/^#define scroll(/;"	d
scroll_forward	/usr/include/term.h	/^#define scroll_forward /;"	d
scroll_reverse	/usr/include/term.h	/^#define scroll_reverse /;"	d
searchfs	/usr/include/unistd.h	/^int	 searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *);$/;"	p	signature:(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *)
sec	/usr/include/tcl.h	/^    long sec;			\/* Seconds. *\/$/;"	m	struct:Tcl_Time	access:public
second	/usr/include/sqltypes.h	/^    SQLUINTEGER second;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
second	/usr/include/sqltypes.h	/^    SQLUSMALLINT second;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
second	/usr/include/sqltypes.h	/^    SQLUSMALLINT second;$/;"	m	struct:tagTIME_STRUCT	access:public
seed48	/usr/include/stdlib.h	/^	*seed48(unsigned short[3]);$/;"	p	signature:(unsigned short[3])
seekProc	/usr/include/tcl.h	/^    Tcl_DriverSeekProc *seekProc;$/;"	m	struct:Tcl_ChannelType	access:public
seekdir	/usr/include/dirent.h	/^void seekdir(DIR *, long) __DARWIN_ALIAS_I(seekdir);$/;"	v
selBorder	/usr/include/tk.h	/^    Tk_3DBorder selBorder;	\/* Border and background for selected$/;"	m	struct:Tk_CanvasTextInfo	access:public
selBorderWidth	/usr/include/tk.h	/^    int selBorderWidth;		\/* Width of border around selection. Read-only$/;"	m	struct:Tk_CanvasTextInfo	access:public
selFgColorPtr	/usr/include/tk.h	/^    XColor *selFgColorPtr;	\/* Foreground color for selected text.$/;"	m	struct:Tk_CanvasTextInfo	access:public
selItemPtr	/usr/include/tk.h	/^    Tk_Item *selItemPtr;	\/* Pointer to selected item. NULL means$/;"	m	struct:Tk_CanvasTextInfo	access:public
selectAnchor	/usr/include/tk.h	/^    int selectAnchor;		\/* Character index of fixed end of selection$/;"	m	struct:Tk_CanvasTextInfo	access:public
selectFirst	/usr/include/tk.h	/^    int selectFirst;		\/* Character index of first selected$/;"	m	struct:Tk_CanvasTextInfo	access:public
selectLast	/usr/include/tk.h	/^    int selectLast;		\/* Character index of last selected character.$/;"	m	struct:Tk_CanvasTextInfo	access:public
select_char_set	/usr/include/term.h	/^#define select_char_set /;"	d
selectionProc	/usr/include/tk.h	/^    Tk_ItemSelectionProc *selectionProc;$/;"	m	struct:Tk_ItemType	access:public
semi_auto_right_margin	/usr/include/term.h	/^#define semi_auto_right_margin /;"	d
send_event	/usr/include/tk.h	/^    Bool send_event;		\/* True if this came from a SendEvent$/;"	m	struct:__anon129	access:public
send_event	/usr/include/tk.h	/^    Bool send_event;		\/* True if this came from a SendEvent$/;"	m	struct:__anon130	access:public
sentence_length	/usr/include/mecab.h	/^  unsigned int          sentence_length; \/* it is avaialbe only when BOS node *\/$/;"	m	struct:mecab_node_t	access:public
seq	/usr/include/db.h	/^	int (*seq)(const struct __db *, DBT *, DBT *, unsigned int);$/;"	m	struct:__db	access:public
serial	/usr/include/dns_util.h	/^	uint32_t serial;$/;"	m	struct:__anon28	access:public
serial	/usr/include/tk.h	/^    unsigned long serial;	\/* # of last request processed by server. *\/$/;"	m	struct:__anon129	access:public
serial	/usr/include/tk.h	/^    unsigned long serial;	\/* # of last request processed by server. *\/$/;"	m	struct:__anon130	access:public
servent	/usr/include/netdb.h	/^struct servent {$/;"	s
servent::s_aliases	/usr/include/netdb.h	/^	char	**s_aliases;	\/* alias list *\/$/;"	m	struct:servent	access:public
servent::s_name	/usr/include/netdb.h	/^	char	*s_name;	\/* official service name *\/$/;"	m	struct:servent	access:public
servent::s_port	/usr/include/netdb.h	/^	int	s_port;		\/* port # *\/$/;"	m	struct:servent	access:public
servent::s_proto	/usr/include/netdb.h	/^	char	*s_proto;	\/* protocol to use *\/$/;"	m	struct:servent	access:public
server	/usr/include/dns_util.h	/^	struct sockaddr *server;$/;"	m	struct:__anon43	typeref:struct:__anon43::sockaddr	access:public
server	/usr/include/tcpd.h	/^    struct host_info server[1];		\/* server endpoint info *\/$/;"	m	struct:request_info	typeref:struct:request_info::host_info	access:public
serviceModeHookProc	/usr/include/tcl.h	/^    Tcl_ServiceModeHookProc *serviceModeHookProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
set0_des_seq	/usr/include/term.h	/^#define set0_des_seq /;"	d
set1_des_seq	/usr/include/term.h	/^#define set1_des_seq /;"	d
set2_des_seq	/usr/include/term.h	/^#define set2_des_seq /;"	d
set3_des_seq	/usr/include/term.h	/^#define set3_des_seq /;"	d
setFromAnyProc	/usr/include/tcl.h	/^    Tcl_SetFromAnyProc *setFromAnyProc;$/;"	m	struct:Tcl_ObjType	access:public
setOptionProc	/usr/include/tcl.h	/^    Tcl_DriverSetOptionProc *setOptionProc;$/;"	m	struct:Tcl_ChannelType	access:public
setProc	/usr/include/tk.h	/^    Tk_CustomOptionSetProc *setProc;$/;"	m	struct:Tk_ObjCustomOption	access:public
setTimerProc	/usr/include/tcl.h	/^    Tcl_SetTimerProc *setTimerProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
set_a_attributes	/usr/include/term.h	/^#define set_a_attributes /;"	d
set_a_background	/usr/include/term.h	/^#define set_a_background /;"	d
set_a_foreground	/usr/include/term.h	/^#define set_a_foreground /;"	d
set_all_morphs	/usr/include/mecab.h	/^    virtual void  set_all_morphs(bool all_morphs)             = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(bool all_morphs)
set_attributes	/usr/include/term.h	/^#define set_attributes /;"	d
set_authorizer	/usr/include/sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,const char*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
set_auxdata	/usr/include/sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
set_background	/usr/include/term.h	/^#define set_background /;"	d
set_bottom_margin	/usr/include/term.h	/^#define set_bottom_margin /;"	d
set_bottom_margin_parm	/usr/include/term.h	/^#define set_bottom_margin_parm /;"	d
set_clock	/usr/include/term.h	/^#define set_clock /;"	d
set_color_band	/usr/include/term.h	/^#define set_color_band /;"	d
set_color_pair	/usr/include/term.h	/^#define set_color_pair /;"	d
set_com_err_hook	/usr/include/com_err.h	/^com_err_handler_t set_com_err_hook(com_err_handler_t handler);$/;"	p	signature:(com_err_handler_t handler)
set_debug	/usr/include/FlexLexer.h	/^	void set_debug( int flag )	{ yy_flex_debug = flag; }$/;"	f	class:FlexLexer	access:public	signature:( int flag )
set_foreground	/usr/include/term.h	/^#define set_foreground /;"	d
set_lattice_level	/usr/include/mecab.h	/^    virtual void  set_lattice_level(int level)                = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(int level)
set_left_margin	/usr/include/term.h	/^#define set_left_margin /;"	d
set_left_margin_parm	/usr/include/term.h	/^#define set_left_margin_parm /;"	d
set_lr_margin	/usr/include/term.h	/^#define set_lr_margin /;"	d
set_page_length	/usr/include/term.h	/^#define set_page_length /;"	d
set_partial	/usr/include/mecab.h	/^    virtual void  set_partial(bool partial)                   = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(bool partial)
set_pglen_inch	/usr/include/term.h	/^#define set_pglen_inch /;"	d
set_right_margin	/usr/include/term.h	/^#define set_right_margin /;"	d
set_right_margin_parm	/usr/include/term.h	/^#define set_right_margin_parm /;"	d
set_tab	/usr/include/term.h	/^#define set_tab /;"	d
set_tb_margin	/usr/include/term.h	/^#define set_tb_margin /;"	d
set_theta	/usr/include/mecab.h	/^    virtual void  set_theta(float theta)                      = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:(float theta)
set_top_margin	/usr/include/term.h	/^#define set_top_margin /;"	d
set_top_margin_parm	/usr/include/term.h	/^#define set_top_margin_parm /;"	d
set_trace_level	/usr/include/tic.h	/^#define set_trace_level(/;"	d
set_window	/usr/include/term.h	/^#define set_window /;"	d
setattrlist	/usr/include/unistd.h	/^int	setattrlist(const char*,void*,void*,size_t,unsigned long) __DARWIN_ALIAS(setattrlist);$/;"	v
setattrlist	/usr/include/unistd.h	/^int    setattrlist(const char*,void*,void*,size_t,unsigned int) __DARWIN_ALIAS(setattrlist);$/;"	v
setbuf	/usr/include/fcgi_stdio.h	/^#define	setbuf /;"	d
setbuf	/usr/include/fcgi_stdio.h	/^#undef  setbuf$/;"	d
setbuf	/usr/include/fcgio.h	/^    virtual std::streambuf * setbuf(char_type * buf, std::streamsize len);$/;"	p	class:fcgi_streambuf	access:protected	signature:(char_type * buf, std::streamsize len)
setbuf	/usr/include/stdio.h	/^void	 setbuf(FILE * __restrict, char * __restrict);$/;"	p	signature:(FILE * __restrict, char * __restrict)
setbuffer	/usr/include/stdio.h	/^void	 setbuffer(FILE *, char *, int);$/;"	p	signature:(FILE *, char *, int)
setcontext	/usr/include/ucontext.h	/^int  setcontext(const ucontext_t *);$/;"	p	signature:(const ucontext_t *)
setdomainname	/usr/include/unistd.h	/^int	 setdomainname(const char *, int);$/;"	p	signature:(const char *, int)
setegid	/usr/include/unistd.h	/^int	 setegid(gid_t);$/;"	p	signature:(gid_t)
setenv	/usr/include/stdlib.h	/^int	 setenv(const char *, const char *, int) __DARWIN_ALIAS(setenv);$/;"	v
seteuid	/usr/include/unistd.h	/^int	 seteuid(uid_t);$/;"	p	signature:(uid_t)
setfsent	/usr/include/fstab.h	/^int setfsent(void);$/;"	p	signature:(void)
setgid	/usr/include/unistd.h	/^int	 setgid(gid_t);$/;"	p	signature:(gid_t)
setgrent	/usr/include/grp.h	/^void setgrent(void);$/;"	p	signature:(void)
setgrfile	/usr/include/grp.h	/^void setgrfile(const char *);$/;"	p	signature:(const char *)
setgroupent	/usr/include/grp.h	/^int setgroupent(int);$/;"	p	signature:(int)
setgroups	/usr/include/unistd.h	/^int	 setgroups(int, const gid_t *);$/;"	p	signature:(int, const gid_t *)
sethostent	/usr/include/netdb.h	/^void		sethostent(int);$/;"	p	signature:(int)
sethostid	/usr/include/unistd.h	/^void	 sethostid(long);$/;"	p	signature:(long)
sethostname	/usr/include/unistd.h	/^int	 sethostname(const char *, int);$/;"	p	signature:(const char *, int)
setkey	/usr/include/stdlib.h	/^int	 setkey(const char *);$/;"	p	signature:(const char *)
setkey	/usr/include/stdlib.h	/^void	 setkey(const char *) __DARWIN_ALIAS(setkey);$/;"	v
setkey	/usr/include/unistd.h	/^int	 setkey(const char *);$/;"	p	signature:(const char *)
setkey	/usr/include/unistd.h	/^void	 setkey(const char *) __DARWIN_ALIAS(setkey);$/;"	v
setlinebuf	/usr/include/stdio.h	/^int	 setlinebuf(FILE *);$/;"	p	signature:(FILE *)
setlocale	/usr/include/locale.h	/^char		*setlocale(int, const char *);$/;"	p	signature:(int, const char *)
setlogin	/usr/include/unistd.h	/^int	 setlogin(const char *);$/;"	p	signature:(const char *)
setmode	/usr/include/unistd.h	/^void	*setmode(const char *) __DARWIN_ALIAS(setmode);$/;"	v
setnetent	/usr/include/netdb.h	/^void		setnetent(int);$/;"	p	signature:(int)
setnetgrent	/usr/include/netdb.h	/^void		setnetgrent(const char *);$/;"	p	signature:(const char *)
setpassent	/usr/include/pwd.h	/^int		 setpassent(int);$/;"	p	signature:(int)
setpgid	/usr/include/unistd.h	/^int	 setpgid(pid_t, pid_t);$/;"	p	signature:(pid_t, pid_t)
setpgrp	/usr/include/unistd.h	/^int	 setpgrp(pid_t pid, pid_t pgrp);	\/* obsoleted by setpgid() *\/$/;"	p	signature:(pid_t pid, pid_t pgrp)
setpgrp	/usr/include/unistd.h	/^pid_t	 setpgrp(void) __DARWIN_ALIAS(setpgrp);$/;"	v
setprogname	/usr/include/stdlib.h	/^void	 setprogname(const char *);$/;"	p	signature:(const char *)
setprotoent	/usr/include/netdb.h	/^void		setprotoent(int);$/;"	p	signature:(int)
setpwent	/usr/include/pwd.h	/^void		 setpwent(void);$/;"	p	signature:(void)
setregid	/usr/include/unistd.h	/^int	 setregid(gid_t, gid_t) __DARWIN_ALIAS(setregid);$/;"	v
setreuid	/usr/include/unistd.h	/^int	 setreuid(uid_t, uid_t) __DARWIN_ALIAS(setreuid);$/;"	v
setrgid	/usr/include/unistd.h	/^int	 setrgid(gid_t);$/;"	p	signature:(gid_t)
setrpcent	/usr/include/netdb.h	/^void		setrpcent(int stayopen);$/;"	p	signature:(int stayopen)
setruid	/usr/include/unistd.h	/^int	 setruid(uid_t);$/;"	p	signature:(uid_t)
setscrreg	/usr/include/curses.h	/^#define setscrreg(/;"	d
setscrreg	/usr/include/ncurses.h	/^#define setscrreg(/;"	d
setservent	/usr/include/netdb.h	/^void		setservent(int);$/;"	p	signature:(int)
setsgroups_np	/usr/include/unistd.h	/^int	 setsgroups_np(int, const uuid_t);$/;"	p	signature:(int, const uuid_t)
setsid	/usr/include/unistd.h	/^pid_t	 setsid(void);$/;"	p	signature:(void)
setstate	/usr/include/stdlib.h	/^char	*setstate(const char *);$/;"	p	signature:(const char *)
setsyx	/usr/include/curses.h	/^#define setsyx(/;"	d
setsyx	/usr/include/ncurses.h	/^#define setsyx(/;"	d
setterm	/usr/include/curses.h	/^#define setterm(/;"	d
setterm	/usr/include/ncurses.h	/^#define setterm(/;"	d
setttyent	/usr/include/ttyent.h	/^int setttyent(void);$/;"	p	signature:(void)
setuid	/usr/include/unistd.h	/^int	 setuid(uid_t);$/;"	p	signature:(uid_t)
setusershell	/usr/include/unistd.h	/^void	 setusershell(void);$/;"	p	signature:(void)
setutxent	/usr/include/utmpx.h	/^void	setutxent(void);$/;"	p	signature:(void)
setutxent_wtmp	/usr/include/utmpx.h	/^void	setutxent_wtmp(int);$/;"	p	signature:(int)
setvbuf	/usr/include/fcgi_stdio.h	/^#define	setvbuf /;"	d
setvbuf	/usr/include/fcgi_stdio.h	/^#undef  setvbuf$/;"	d
setvbuf	/usr/include/stdio.h	/^int	 setvbuf(FILE * __restrict, char * __restrict, int, size_t);$/;"	p	signature:(FILE * __restrict, char * __restrict, int, size_t)
setwgroups_np	/usr/include/unistd.h	/^int	 setwgroups_np(int, const uuid_t);$/;"	p	signature:(int, const uuid_t)
sg_addr	/usr/include/tcpd.h	/^    } sg_addr;$/;"	m	struct:sockaddr_gen	typeref:union:sockaddr_gen::__anon120	access:public
sg_family	/usr/include/tcpd.h	/^#define sg_family	/;"	d
sg_sa	/usr/include/tcpd.h	/^#define sg_sa	/;"	d
sg_sin	/usr/include/tcpd.h	/^#define sg_sin	/;"	d
sg_sin6	/usr/include/tcpd.h	/^#define sg_sin6	/;"	d
sgetrune	/usr/include/rune.h	/^#define sgetrune(/;"	d
shape_nrects	/usr/include/Xplugin.h	/^    int shape_nrects;			\/* -1 = remove shape *\/$/;"	m	struct:xp_window_changes_struct	access:public
shape_rects	/usr/include/Xplugin.h	/^    xp_box *shape_rects;$/;"	m	struct:xp_window_changes_struct	access:public
shape_tx	/usr/include/Xplugin.h	/^    int shape_tx, shape_ty;		\/* translation for shape *\/$/;"	m	struct:xp_window_changes_struct	access:public
shape_ty	/usr/include/Xplugin.h	/^    int shape_tx, shape_ty;		\/* translation for shape *\/$/;"	m	struct:xp_window_changes_struct	access:public
shell_cmd	/usr/include/tcpd.h	/^extern void shell_cmd();		\/* execute shell command *\/$/;"	p	signature:()
shift	/usr/include/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	m	struct:_ns_flagdata	access:public
sibling	/usr/include/Xplugin.h	/^    xp_window_id sibling;		\/* may be zero; in ABOVE\/BELOW modes$/;"	m	struct:xp_window_changes_struct	access:public
sid_authcount	/usr/include/ntsid.h	/^	u_int8_t		sid_authcount;$/;"	m	struct:__anon90	access:public
sid_authorities	/usr/include/ntsid.h	/^	u_int32_t		sid_authorities[NTSID_MAX_AUTHORITIES];$/;"	m	struct:__anon90	access:public
sid_authority	/usr/include/ntsid.h	/^	u_int8_t		sid_authority[6];$/;"	m	struct:__anon90	access:public
sid_kind	/usr/include/ntsid.h	/^	u_int8_t		sid_kind;$/;"	m	struct:__anon90	access:public
sig	/usr/include/nameser.h	/^	unsigned char sig[NS_PACKETSZ];$/;"	m	struct:ns_tcp_tsig_state	access:public
sigaction	/usr/include/signal.h	/^int	sigaction(int, const struct sigaction * __restrict,$/;"	p	signature:(int, const struct sigaction * __restrict, struct sigaction * __restrict)
sigaddset	/usr/include/signal.h	/^#define	sigaddset(/;"	d
sigaddset	/usr/include/signal.h	/^int	sigaddset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
sigaltstack	/usr/include/signal.h	/^int	sigaltstack(const stack_t * __restrict, stack_t * __restrict)  __DARWIN_ALIAS(sigaltstack);$/;"	v
sigblock	/usr/include/signal.h	/^int	sigblock(int);$/;"	p	signature:(int)
sigdelset	/usr/include/signal.h	/^#define	sigdelset(/;"	d
sigdelset	/usr/include/signal.h	/^int	sigdelset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
sigemptyset	/usr/include/signal.h	/^#define	sigemptyset(/;"	d
sigemptyset	/usr/include/signal.h	/^int	sigemptyset(sigset_t *);$/;"	p	signature:(sigset_t *)
sigfillset	/usr/include/signal.h	/^#define	sigfillset(/;"	d
sigfillset	/usr/include/signal.h	/^int	sigfillset(sigset_t *);$/;"	p	signature:(sigset_t *)
sighold	/usr/include/signal.h	/^int	sighold(int);$/;"	p	signature:(int)
sigignore	/usr/include/signal.h	/^int	sigignore(int);$/;"	p	signature:(int)
siginterrupt	/usr/include/signal.h	/^int	siginterrupt(int, int);$/;"	p	signature:(int, int)
sigismember	/usr/include/signal.h	/^#define	sigismember(/;"	d
sigismember	/usr/include/signal.h	/^int	sigismember(const sigset_t *, int);$/;"	p	signature:(const sigset_t *, int)
siglen	/usr/include/nameser.h	/^	int siglen;$/;"	m	struct:ns_tcp_tsig_state	access:public
sign	/usr/include/sqltypes.h	/^    SQLCHAR	sign;		\/* 0 for negative, 1 for positive *\/$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
sign	/usr/include/tclTomMath.h	/^    int used, alloc, sign;$/;"	m	struct:mp_int	access:public
sigpause	/usr/include/signal.h	/^int	sigpause(int) __DARWIN_ALIAS_C(sigpause);$/;"	v
sigpending	/usr/include/signal.h	/^int	sigpending(sigset_t *);$/;"	p	signature:(sigset_t *)
sigprocmask	/usr/include/signal.h	/^int	sigprocmask(int, const sigset_t * __restrict, sigset_t * __restrict);$/;"	p	signature:(int, const sigset_t * __restrict, sigset_t * __restrict)
sigrelse	/usr/include/signal.h	/^int	sigrelse(int);$/;"	p	signature:(int)
sigset	/usr/include/signal.h	/^void    (*sigset(int, void (*)(int)))(int); $/;"	p	signature:(int, void (*)(int))
sigset_t	/usr/include/pthread.h	/^typedef __darwin_sigset_t		sigset_t;$/;"	t
sigset_t	/usr/include/spawn.h	/^typedef __darwin_sigset_t	sigset_t;$/;"	t
sigsetmask	/usr/include/signal.h	/^int	sigsetmask(int);$/;"	p	signature:(int)
sigsuspend	/usr/include/signal.h	/^int	sigsuspend(const sigset_t *) __DARWIN_ALIAS_C(sigsuspend);$/;"	v
sigvec	/usr/include/signal.h	/^int	sigvec(int, struct sigvec *, struct sigvec *);$/;"	p	signature:(int, struct sigvec *, struct sigvec *)
sigwait	/usr/include/signal.h	/^int	sigwait(const sigset_t * __restrict, int * __restrict) __DARWIN_ALIAS_C(sigwait);$/;"	v
sin	/usr/include/resolv.h	/^	struct sockaddr_in	sin;$/;"	m	union:res_sockaddr_union	typeref:struct:res_sockaddr_union::sockaddr_in	access:public
sin	/usr/include/tcpd.h	/^    struct sockaddr_gen *sin;		\/* socket address or 0 *\/$/;"	m	struct:host_info	typeref:struct:host_info::sockaddr_gen	access:public
sin6	/usr/include/resolv.h	/^	struct sockaddr_in6	sin6;$/;"	m	union:res_sockaddr_union	typeref:struct:res_sockaddr_union::sockaddr_in6	access:public
sink	/usr/include/tcpd.h	/^    void  (*sink) ();			\/* datagram sink function or 0 *\/$/;"	m	struct:request_info	access:public
size	/usr/include/db.h	/^	size_t	 size;			\/* data length *\/$/;"	m	struct:__anon11	access:public
size	/usr/include/dns_util.h	/^	uint8_t size;$/;"	m	struct:__anon39	access:public
size	/usr/include/mecab.h	/^  unsigned int                    size;$/;"	m	struct:mecab_dictionary_info_t	access:public
size	/usr/include/strhash.h	/^    int size;$/;"	m	struct:__anon112	access:public
size	/usr/include/tcl.h	/^    int size;			\/* Number of bytes in token. *\/$/;"	m	struct:Tcl_Token	access:public
size	/usr/include/tk.h	/^    unsigned int size;$/;"	m	struct:Tk_ClassProcs	access:public
size_t	/usr/include/alloca.h	/^typedef	__darwin_size_t	size_t;$/;"	t
size_t	/usr/include/glob.h	/^typedef	__darwin_size_t	size_t;$/;"	t
size_t	/usr/include/grp.h	/^typedef __darwin_size_t	size_t;		\/* [???] *\/$/;"	t
size_t	/usr/include/iconv.h	/^typedef __darwin_size_t     size_t;$/;"	t
size_t	/usr/include/monetary.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/ndbm.h	/^typedef __darwin_size_t	size_t;$/;"	t
size_t	/usr/include/netdb.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/pwd.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/readpassphrase.h	/^typedef	__darwin_size_t	size_t;$/;"	t
size_t	/usr/include/regex.h	/^typedef __darwin_size_t	size_t;$/;"	t
size_t	/usr/include/runetype.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/search.h	/^typedef __darwin_size_t	size_t;$/;"	t
size_t	/usr/include/spawn.h	/^typedef __darwin_size_t		size_t;$/;"	t
size_t	/usr/include/stddef.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/stdio.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/stdlib.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/string.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/strings.h	/^typedef	__darwin_size_t	size_t;$/;"	t
size_t	/usr/include/time.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/unistd.h	/^typedef __darwin_size_t		size_t;$/;"	t
size_t	/usr/include/vis.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/wchar.h	/^typedef	__darwin_size_t		size_t;$/;"	t
size_t	/usr/include/wordexp.h	/^typedef	__darwin_size_t		size_t;$/;"	t
skip_ipv6_addrs	/usr/include/tcpd.h	/^#define skip_ipv6_addrs(/;"	d
skip_ipv6_addrs	/usr/include/tcpd.h	/^extern char *skip_ipv6_addrs();		\/* skip over colons in IPv6 addrs *\/$/;"	p	signature:()
sl_add	/usr/include/stringlist.h	/^int	 sl_add(StringList *, char *);$/;"	p	signature:(StringList *, char *)
sl_cur	/usr/include/stringlist.h	/^	size_t	  sl_cur;$/;"	m	struct:_stringlist	access:public
sl_find	/usr/include/stringlist.h	/^char	*sl_find(StringList *, char *);$/;"	p	signature:(StringList *, char *)
sl_free	/usr/include/stringlist.h	/^void	 sl_free(StringList *, int);$/;"	p	signature:(StringList *, int)
sl_init	/usr/include/stringlist.h	/^StringList *sl_init(void);$/;"	p	signature:(void)
sl_max	/usr/include/stringlist.h	/^	size_t	  sl_max;$/;"	m	struct:_stringlist	access:public
sl_str	/usr/include/stringlist.h	/^	char	**sl_str;$/;"	m	struct:_stringlist	access:public
slapi_access_allowed	/usr/include/slapi-plugin.h	/^int slapi_access_allowed( Slapi_PBlock *pb, Slapi_Entry *e, char *attr, struct berval *val, int access );$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e, char *attr, struct berval *val, int access )
slapi_acl_callback_t	/usr/include/slapi-plugin.h	/^typedef int (*slapi_acl_callback_t)(Slapi_PBlock *pb,$/;"	t
slapi_acl_check_mods	/usr/include/slapi-plugin.h	/^int slapi_acl_check_mods( Slapi_PBlock *pb, Slapi_Entry *e, LDAPMod **mods, char **errbuf );$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e, LDAPMod **mods, char **errbuf )
slapi_add_entry_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_add_entry_internal( Slapi_Entry * e,$/;"	p	signature:( Slapi_Entry * e, LDAPControl **controls, int log_change )
slapi_add_entry_internal_set_pb	/usr/include/slapi-plugin.h	/^void slapi_add_entry_internal_set_pb( Slapi_PBlock *pb, Slapi_Entry *e,$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e, LDAPControl **controls, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_add_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_add_internal( char * dn, LDAPMod **attrs,$/;"	p	signature:( char * dn, LDAPMod **attrs, LDAPControl **controls, int log_changes )
slapi_add_internal_pb	/usr/include/slapi-plugin.h	/^int slapi_add_internal_pb( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_add_internal_set_pb	/usr/include/slapi-plugin.h	/^int slapi_add_internal_set_pb( Slapi_PBlock *pb, const char *dn,$/;"	p	signature:( Slapi_PBlock *pb, const char *dn, LDAPMod **attrs, LDAPControl **controls, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_attr_add_value	/usr/include/slapi-plugin.h	/^int slapi_attr_add_value( Slapi_Attr *a, const Slapi_Value *v );$/;"	p	signature:( Slapi_Attr *a, const Slapi_Value *v )
slapi_attr_dup	/usr/include/slapi-plugin.h	/^Slapi_Attr *slapi_attr_dup( const Slapi_Attr *attr );$/;"	p	signature:( const Slapi_Attr *attr )
slapi_attr_first_value	/usr/include/slapi-plugin.h	/^int slapi_attr_first_value( Slapi_Attr *a, Slapi_Value **v );$/;"	p	signature:( Slapi_Attr *a, Slapi_Value **v )
slapi_attr_flag_is_set	/usr/include/slapi-plugin.h	/^int slapi_attr_flag_is_set( const Slapi_Attr *attr, unsigned long flag );$/;"	p	signature:( const Slapi_Attr *attr, unsigned long flag )
slapi_attr_free	/usr/include/slapi-plugin.h	/^void slapi_attr_free( Slapi_Attr **a );$/;"	p	signature:( Slapi_Attr **a )
slapi_attr_get_bervals_copy	/usr/include/slapi-plugin.h	/^int slapi_attr_get_bervals_copy( Slapi_Attr *a, struct berval ***vals );$/;"	p	signature:( Slapi_Attr *a, struct berval ***vals )
slapi_attr_get_flags	/usr/include/slapi-plugin.h	/^int slapi_attr_get_flags( const Slapi_Attr *attr, unsigned long *flags );$/;"	p	signature:( const Slapi_Attr *attr, unsigned long *flags )
slapi_attr_get_numvalues	/usr/include/slapi-plugin.h	/^int slapi_attr_get_numvalues( const Slapi_Attr *a, int *numValues );$/;"	p	signature:( const Slapi_Attr *a, int *numValues )
slapi_attr_get_oid_copy	/usr/include/slapi-plugin.h	/^int slapi_attr_get_oid_copy( const Slapi_Attr *attr, char **oidp );$/;"	p	signature:( const Slapi_Attr *attr, char **oidp )
slapi_attr_get_type	/usr/include/slapi-plugin.h	/^int slapi_attr_get_type( const Slapi_Attr *attr, char **type );$/;"	p	signature:( const Slapi_Attr *attr, char **type )
slapi_attr_get_values	/usr/include/slapi-plugin.h	/^int slapi_attr_get_values( Slapi_Attr *attr, struct berval ***vals );$/;"	p	signature:( Slapi_Attr *attr, struct berval ***vals )
slapi_attr_get_valueset	/usr/include/slapi-plugin.h	/^int slapi_attr_get_valueset( const Slapi_Attr *a, Slapi_ValueSet **vs );$/;"	p	signature:( const Slapi_Attr *a, Slapi_ValueSet **vs )
slapi_attr_init	/usr/include/slapi-plugin.h	/^Slapi_Attr *slapi_attr_init( Slapi_Attr *a, const char *type );$/;"	p	signature:( Slapi_Attr *a, const char *type )
slapi_attr_new	/usr/include/slapi-plugin.h	/^Slapi_Attr *slapi_attr_new( void );$/;"	p	signature:( void )
slapi_attr_next_value	/usr/include/slapi-plugin.h	/^int slapi_attr_next_value( Slapi_Attr *a, int hint, Slapi_Value **v );$/;"	p	signature:( Slapi_Attr *a, int hint, Slapi_Value **v )
slapi_attr_syntax_normalize	/usr/include/slapi-plugin.h	/^char *slapi_attr_syntax_normalize( const char *s );$/;"	p	signature:( const char *s )
slapi_attr_type2plugin	/usr/include/slapi-plugin.h	/^int slapi_attr_type2plugin( const char *type, void **pi );$/;"	p	signature:( const char *type, void **pi )
slapi_attr_type_cmp	/usr/include/slapi-plugin.h	/^int slapi_attr_type_cmp( const char *t1, const char *t2, int opt );$/;"	p	signature:( const char *t1, const char *t2, int opt )
slapi_attr_types_equivalent	/usr/include/slapi-plugin.h	/^int slapi_attr_types_equivalent( const char *t1, const char *t2 );$/;"	p	signature:( const char *t1, const char *t2 )
slapi_attr_value_cmp	/usr/include/slapi-plugin.h	/^int slapi_attr_value_cmp( const Slapi_Attr *attr, const struct berval *v1, const struct berval *v2 );$/;"	p	signature:( const Slapi_Attr *attr, const struct berval *v1, const struct berval *v2 )
slapi_attr_value_find	/usr/include/slapi-plugin.h	/^int slapi_attr_value_find( const Slapi_Attr *a, struct berval *v );$/;"	p	signature:( const Slapi_Attr *a, struct berval *v )
slapi_be_get_readonly	/usr/include/slapi-plugin.h	/^int slapi_be_get_readonly( Slapi_Backend *be );$/;"	p	signature:( Slapi_Backend *be )
slapi_be_select	/usr/include/slapi-plugin.h	/^Slapi_Backend *slapi_be_select( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_be_set_readonly	/usr/include/slapi-plugin.h	/^void slapi_be_set_readonly( Slapi_Backend *be, int readonly );$/;"	p	signature:( Slapi_Backend *be, int readonly )
slapi_ch_array_free	/usr/include/slapi-plugin.h	/^void slapi_ch_array_free( char **arrayp );$/;"	p	signature:( char **arrayp )
slapi_ch_bvdup	/usr/include/slapi-plugin.h	/^struct berval *slapi_ch_bvdup(const struct berval *v);$/;"	p	signature:(const struct berval *v)
slapi_ch_bvecdup	/usr/include/slapi-plugin.h	/^struct berval **slapi_ch_bvecdup(const struct berval **v);$/;"	p	signature:(const struct berval **v)
slapi_ch_calloc	/usr/include/slapi-plugin.h	/^char *slapi_ch_calloc( unsigned long nelem, unsigned long size );$/;"	p	signature:( unsigned long nelem, unsigned long size )
slapi_ch_free	/usr/include/slapi-plugin.h	/^void slapi_ch_free( void **ptr );$/;"	p	signature:( void **ptr )
slapi_ch_free_string	/usr/include/slapi-plugin.h	/^void slapi_ch_free_string( char **ptr );$/;"	p	signature:( char **ptr )
slapi_ch_malloc	/usr/include/slapi-plugin.h	/^char *slapi_ch_malloc( unsigned long size );$/;"	p	signature:( unsigned long size )
slapi_ch_realloc	/usr/include/slapi-plugin.h	/^char *slapi_ch_realloc( char *block, unsigned long size );$/;"	p	signature:( char *block, unsigned long size )
slapi_ch_strdup	/usr/include/slapi-plugin.h	/^char *slapi_ch_strdup( const char *s );$/;"	p	signature:( const char *s )
slapi_compute_add_evaluator	/usr/include/slapi-plugin.h	/^int slapi_compute_add_evaluator(slapi_compute_callback_t function);$/;"	p	signature:(slapi_compute_callback_t function)
slapi_compute_add_search_rewriter	/usr/include/slapi-plugin.h	/^int slapi_compute_add_search_rewriter(slapi_search_rewrite_callback_t function);$/;"	p	signature:(slapi_search_rewrite_callback_t function)
slapi_compute_callback_t	/usr/include/slapi-plugin.h	/^typedef int (*slapi_compute_callback_t)(computed_attr_context *c, char *type, Slapi_Entry *e, slapi_compute_output_t outputfn);$/;"	t
slapi_compute_output_t	/usr/include/slapi-plugin.h	/^typedef int (*slapi_compute_output_t)(computed_attr_context *c, Slapi_Attr *a, Slapi_Entry *e);$/;"	t
slapi_control_present	/usr/include/slapi-plugin.h	/^int slapi_control_present( LDAPControl **controls, char *oid,$/;"	p	signature:( LDAPControl **controls, char *oid, struct berval **val, int *iscritical)
slapi_delete_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_delete_internal( char * dn,  LDAPControl **controls,$/;"	p	signature:( char * dn, LDAPControl **controls, int log_change )
slapi_delete_internal_pb	/usr/include/slapi-plugin.h	/^int slapi_delete_internal_pb( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_delete_internal_set_pb	/usr/include/slapi-plugin.h	/^void slapi_delete_internal_set_pb( Slapi_PBlock *pb, const char *dn,$/;"	p	signature:( Slapi_PBlock *pb, const char *dn, LDAPControl **controls, const char *uniqueid, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_destroy_condvar	/usr/include/slapi-plugin.h	/^void slapi_destroy_condvar( Slapi_CondVar *cvar );$/;"	p	signature:( Slapi_CondVar *cvar )
slapi_destroy_mutex	/usr/include/slapi-plugin.h	/^void slapi_destroy_mutex( Slapi_Mutex *mutex );$/;"	p	signature:( Slapi_Mutex *mutex )
slapi_dn_beparent	/usr/include/slapi-plugin.h	/^char *slapi_dn_beparent( Slapi_PBlock *pb, const char *dn );$/;"	p	signature:( Slapi_PBlock *pb, const char *dn )
slapi_dn_ignore_case	/usr/include/slapi-plugin.h	/^char *slapi_dn_ignore_case( char *dn );$/;"	p	signature:( char *dn )
slapi_dn_isbesuffix	/usr/include/slapi-plugin.h	/^int slapi_dn_isbesuffix( Slapi_PBlock *pb, char *dn );$/;"	p	signature:( Slapi_PBlock *pb, char *dn )
slapi_dn_isparent	/usr/include/slapi-plugin.h	/^int slapi_dn_isparent( const char *parentdn, const char *childdn );$/;"	p	signature:( const char *parentdn, const char *childdn )
slapi_dn_issuffix	/usr/include/slapi-plugin.h	/^int slapi_dn_issuffix( char *dn, char *suffix );$/;"	p	signature:( char *dn, char *suffix )
slapi_dn_normalize	/usr/include/slapi-plugin.h	/^char *slapi_dn_normalize( char *dn );$/;"	p	signature:( char *dn )
slapi_dn_normalize_case	/usr/include/slapi-plugin.h	/^char *slapi_dn_normalize_case( char *dn );$/;"	p	signature:( char *dn )
slapi_dn_parent	/usr/include/slapi-plugin.h	/^char *slapi_dn_parent( const char *dn );$/;"	p	signature:( const char *dn )
slapi_dn_plus_rdn	/usr/include/slapi-plugin.h	/^char *slapi_dn_plus_rdn(const char *dn, const char *rdn);$/;"	p	signature:(const char *dn, const char *rdn)
slapi_dup_control	/usr/include/slapi-plugin.h	/^LDAPControl *slapi_dup_control(LDAPControl *ctrl);$/;"	p	signature:(LDAPControl *ctrl)
slapi_entry2str	/usr/include/slapi-plugin.h	/^char *slapi_entry2str( Slapi_Entry *e, int *len );$/;"	p	signature:( Slapi_Entry *e, int *len )
slapi_entry_add_rdn_values	/usr/include/slapi-plugin.h	/^int slapi_entry_add_rdn_values( Slapi_Entry *e );$/;"	p	signature:( Slapi_Entry *e )
slapi_entry_add_string	/usr/include/slapi-plugin.h	/^int slapi_entry_add_string(Slapi_Entry *e, const char *type, const char *value);$/;"	p	signature:(Slapi_Entry *e, const char *type, const char *value)
slapi_entry_add_value	/usr/include/slapi-plugin.h	/^int slapi_entry_add_value(Slapi_Entry *e, const char *type, const Slapi_Value *value);$/;"	p	signature:(Slapi_Entry *e, const char *type, const Slapi_Value *value)
slapi_entry_add_values_sv	/usr/include/slapi-plugin.h	/^int slapi_entry_add_values_sv( Slapi_Entry *e, const char *type, Slapi_Value **vals );$/;"	p	signature:( Slapi_Entry *e, const char *type, Slapi_Value **vals )
slapi_entry_add_valueset	/usr/include/slapi-plugin.h	/^int slapi_entry_add_valueset(Slapi_Entry *e, const char *type, Slapi_ValueSet *vs);$/;"	p	signature:(Slapi_Entry *e, const char *type, Slapi_ValueSet *vs)
slapi_entry_alloc	/usr/include/slapi-plugin.h	/^Slapi_Entry *slapi_entry_alloc();$/;"	p	signature:()
slapi_entry_attr_delete	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_delete( Slapi_Entry *e, char *type );$/;"	p	signature:( Slapi_Entry *e, char *type )
slapi_entry_attr_find	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_find( Slapi_Entry *e, char *type, Slapi_Attr **attr );$/;"	p	signature:( Slapi_Entry *e, char *type, Slapi_Attr **attr )
slapi_entry_attr_get_charptr	/usr/include/slapi-plugin.h	/^char *slapi_entry_attr_get_charptr( const Slapi_Entry *e, const char *type );$/;"	p	signature:( const Slapi_Entry *e, const char *type )
slapi_entry_attr_get_int	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_get_int( const Slapi_Entry *e, const char *type );$/;"	p	signature:( const Slapi_Entry *e, const char *type )
slapi_entry_attr_get_long	/usr/include/slapi-plugin.h	/^long slapi_entry_attr_get_long( const Slapi_Entry *e, const char *type );$/;"	p	signature:( const Slapi_Entry *e, const char *type )
slapi_entry_attr_get_uint	/usr/include/slapi-plugin.h	/^unsigned int slapi_entry_attr_get_uint( const Slapi_Entry *e, const char *type );$/;"	p	signature:( const Slapi_Entry *e, const char *type )
slapi_entry_attr_get_ulong	/usr/include/slapi-plugin.h	/^unsigned long slapi_entry_attr_get_ulong( const Slapi_Entry *e, const char *type );$/;"	p	signature:( const Slapi_Entry *e, const char *type )
slapi_entry_attr_hasvalue	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_hasvalue( Slapi_Entry *e, const char *type, const char *value );$/;"	p	signature:( Slapi_Entry *e, const char *type, const char *value )
slapi_entry_attr_merge	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_merge( Slapi_Entry *e, char *type, struct berval **vals );$/;"	p	signature:( Slapi_Entry *e, char *type, struct berval **vals )
slapi_entry_attr_merge_sv	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_merge_sv( Slapi_Entry *e, const char *type, Slapi_Value **vals );$/;"	p	signature:( Slapi_Entry *e, const char *type, Slapi_Value **vals )
slapi_entry_attr_replace_sv	/usr/include/slapi-plugin.h	/^int slapi_entry_attr_replace_sv( Slapi_Entry *e, const char *type, Slapi_Value **vals );$/;"	p	signature:( Slapi_Entry *e, const char *type, Slapi_Value **vals )
slapi_entry_attr_set_charptr	/usr/include/slapi-plugin.h	/^void slapi_entry_attr_set_charptr(Slapi_Entry* e, const char *type, const char *value);$/;"	p	signature:(Slapi_Entry* e, const char *type, const char *value)
slapi_entry_attr_set_int	/usr/include/slapi-plugin.h	/^void slapi_entry_attr_set_int( Slapi_Entry* e, const char *type, int l);$/;"	p	signature:( Slapi_Entry* e, const char *type, int l)
slapi_entry_attr_set_long	/usr/include/slapi-plugin.h	/^void slapi_entry_attr_set_long(Slapi_Entry* e, const char *type, long l);$/;"	p	signature:(Slapi_Entry* e, const char *type, long l)
slapi_entry_attr_set_uint	/usr/include/slapi-plugin.h	/^void slapi_entry_attr_set_uint( Slapi_Entry* e, const char *type, unsigned int l);$/;"	p	signature:( Slapi_Entry* e, const char *type, unsigned int l)
slapi_entry_attr_set_ulong	/usr/include/slapi-plugin.h	/^void slapi_entry_attr_set_ulong(Slapi_Entry* e, const char *type, unsigned long l);$/;"	p	signature:(Slapi_Entry* e, const char *type, unsigned long l)
slapi_entry_delete_string	/usr/include/slapi-plugin.h	/^int slapi_entry_delete_string(Slapi_Entry *e, const char *type, const char *value);$/;"	p	signature:(Slapi_Entry *e, const char *type, const char *value)
slapi_entry_delete_values_sv	/usr/include/slapi-plugin.h	/^int slapi_entry_delete_values_sv( Slapi_Entry *e, const char *type, Slapi_Value **vals );$/;"	p	signature:( Slapi_Entry *e, const char *type, Slapi_Value **vals )
slapi_entry_dup	/usr/include/slapi-plugin.h	/^Slapi_Entry *slapi_entry_dup( Slapi_Entry *e );$/;"	p	signature:( Slapi_Entry *e )
slapi_entry_first_attr	/usr/include/slapi-plugin.h	/^int slapi_entry_first_attr( const Slapi_Entry *e, Slapi_Attr **attr );$/;"	p	signature:( const Slapi_Entry *e, Slapi_Attr **attr )
slapi_entry_free	/usr/include/slapi-plugin.h	/^void slapi_entry_free( Slapi_Entry *e );$/;"	p	signature:( Slapi_Entry *e )
slapi_entry_get_dn	/usr/include/slapi-plugin.h	/^char *slapi_entry_get_dn( Slapi_Entry *e );$/;"	p	signature:( Slapi_Entry *e )
slapi_entry_get_uniqueid	/usr/include/slapi-plugin.h	/^const char *slapi_entry_get_uniqueid( const Slapi_Entry *e );$/;"	p	signature:( const Slapi_Entry *e )
slapi_entry_has_children	/usr/include/slapi-plugin.h	/^int slapi_entry_has_children(const Slapi_Entry *e);$/;"	p	signature:(const Slapi_Entry *e)
slapi_entry_merge_values_sv	/usr/include/slapi-plugin.h	/^int slapi_entry_merge_values_sv( Slapi_Entry *e, const char *type, Slapi_Value **vals );$/;"	p	signature:( Slapi_Entry *e, const char *type, Slapi_Value **vals )
slapi_entry_next_attr	/usr/include/slapi-plugin.h	/^int slapi_entry_next_attr( const Slapi_Entry *e, Slapi_Attr *prevattr, Slapi_Attr **attr );$/;"	p	signature:( const Slapi_Entry *e, Slapi_Attr *prevattr, Slapi_Attr **attr )
slapi_entry_rdn_values_present	/usr/include/slapi-plugin.h	/^int slapi_entry_rdn_values_present( const Slapi_Entry *e );$/;"	p	signature:( const Slapi_Entry *e )
slapi_entry_schema_check	/usr/include/slapi-plugin.h	/^int slapi_entry_schema_check( Slapi_PBlock *pb, Slapi_Entry *e );$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e )
slapi_entry_set_dn	/usr/include/slapi-plugin.h	/^void slapi_entry_set_dn( Slapi_Entry *e, char *dn );$/;"	p	signature:( Slapi_Entry *e, char *dn )
slapi_entry_set_uniqueid	/usr/include/slapi-plugin.h	/^void slapi_entry_set_uniqueid( Slapi_Entry *e, char *uniqueid );$/;"	p	signature:( Slapi_Entry *e, char *uniqueid )
slapi_entry_size	/usr/include/slapi-plugin.h	/^size_t slapi_entry_size(Slapi_Entry *e);$/;"	p	signature:(Slapi_Entry *e)
slapi_extension_constructor_fnptr	/usr/include/slapi-plugin.h	/^typedef void *(*slapi_extension_constructor_fnptr)(void *object, void *parent);$/;"	t
slapi_extension_destructor_fnptr	/usr/include/slapi-plugin.h	/^typedef void (*slapi_extension_destructor_fnptr)(void *extension,$/;"	t
slapi_filter_apply	/usr/include/slapi-plugin.h	/^int slapi_filter_apply( Slapi_Filter *f, FILTER_APPLY_FN fn, void *arg, int *error_code );$/;"	p	signature:( Slapi_Filter *f, FILTER_APPLY_FN fn, void *arg, int *error_code )
slapi_filter_dup	/usr/include/slapi-plugin.h	/^Slapi_Filter *slapi_filter_dup( Slapi_Filter *f );$/;"	p	signature:( Slapi_Filter *f )
slapi_filter_free	/usr/include/slapi-plugin.h	/^void slapi_filter_free( Slapi_Filter *f, int recurse );$/;"	p	signature:( Slapi_Filter *f, int recurse )
slapi_filter_get_attribute_type	/usr/include/slapi-plugin.h	/^int slapi_filter_get_attribute_type( Slapi_Filter *f, char **type ); $/;"	p	signature:( Slapi_Filter *f, char **type )
slapi_filter_get_ava	/usr/include/slapi-plugin.h	/^int slapi_filter_get_ava( Slapi_Filter *f, char **type, struct berval **bval );$/;"	p	signature:( Slapi_Filter *f, char **type, struct berval **bval )
slapi_filter_get_choice	/usr/include/slapi-plugin.h	/^int slapi_filter_get_choice( Slapi_Filter *f);$/;"	p	signature:( Slapi_Filter *f)
slapi_filter_get_subfilt	/usr/include/slapi-plugin.h	/^int slapi_filter_get_subfilt( Slapi_Filter *f, char **type, char **initial,$/;"	p	signature:( Slapi_Filter *f, char **type, char **initial, char ***any, char **final )
slapi_filter_join	/usr/include/slapi-plugin.h	/^Slapi_Filter *slapi_filter_join( int ftype, Slapi_Filter *f1, Slapi_Filter *f2);$/;"	p	signature:( int ftype, Slapi_Filter *f1, Slapi_Filter *f2)
slapi_filter_list_first	/usr/include/slapi-plugin.h	/^Slapi_Filter *slapi_filter_list_first( Slapi_Filter *f );$/;"	p	signature:( Slapi_Filter *f )
slapi_filter_list_next	/usr/include/slapi-plugin.h	/^Slapi_Filter *slapi_filter_list_next( Slapi_Filter *f, Slapi_Filter *fprev );$/;"	p	signature:( Slapi_Filter *f, Slapi_Filter *fprev )
slapi_filter_test	/usr/include/slapi-plugin.h	/^int slapi_filter_test( Slapi_PBlock *pb, Slapi_Entry *e, Slapi_Filter *f,$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e, Slapi_Filter *f, int verify_access )
slapi_filter_test_simple	/usr/include/slapi-plugin.h	/^int slapi_filter_test_simple( Slapi_Entry *e, Slapi_Filter *f );$/;"	p	signature:( Slapi_Entry *e, Slapi_Filter *f )
slapi_free_search_results_internal	/usr/include/slapi-plugin.h	/^void slapi_free_search_results_internal( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_free_search_results_internal	/usr/include/slapi-plugin.h	/^void slapi_free_search_results_internal(Slapi_PBlock *pb);$/;"	p	signature:(Slapi_PBlock *pb)
slapi_get_client_port	/usr/include/slapi-plugin.h	/^int slapi_get_client_port(Slapi_PBlock *pPB, int *fromPort);$/;"	p	signature:(Slapi_PBlock *pPB, int *fromPort)
slapi_get_object_extension	/usr/include/slapi-plugin.h	/^void *slapi_get_object_extension(int objecttype, void *object,$/;"	p	signature:(int objecttype, void *object, int extensionhandle)
slapi_get_supported_controls	/usr/include/slapi-plugin.h	/^int slapi_get_supported_controls(char ***ctrloidsp, unsigned long **ctrlopsp);$/;"	p	signature:(char ***ctrloidsp, unsigned long **ctrlopsp)
slapi_get_supported_extended_ops	/usr/include/slapi-plugin.h	/^char **slapi_get_supported_extended_ops(void);$/;"	p	signature:(void)
slapi_get_supported_saslmechanisms	/usr/include/slapi-plugin.h	/^char **slapi_get_supported_saslmechanisms();$/;"	p	signature:()
slapi_is_connection_ssl	/usr/include/slapi-plugin.h	/^int slapi_is_connection_ssl(Slapi_PBlock *pPB, int *isSSL);$/;"	p	signature:(Slapi_PBlock *pPB, int *isSSL)
slapi_is_rootdse	/usr/include/slapi-plugin.h	/^int slapi_is_rootdse( const char *dn );$/;"	p	signature:( const char *dn )
slapi_ldap_init	/usr/include/slapi-plugin.h	/^LDAP *slapi_ldap_init( char *ldaphost, int ldapport, int secure, int shared );$/;"	p	signature:( char *ldaphost, int ldapport, int secure, int shared )
slapi_ldap_unbind	/usr/include/slapi-plugin.h	/^void slapi_ldap_unbind( LDAP *ld );$/;"	p	signature:( LDAP *ld )
slapi_lock_mutex	/usr/include/slapi-plugin.h	/^void slapi_lock_mutex( Slapi_Mutex *mutex );$/;"	p	signature:( Slapi_Mutex *mutex )
slapi_log_error	/usr/include/slapi-plugin.h	/^int slapi_log_error( int severity, char *subsystem, char *fmt, ... );$/;"	p	signature:( int severity, char *subsystem, char *fmt, ... )
slapi_moddn_get_newdn	/usr/include/slapi-plugin.h	/^char * slapi_moddn_get_newdn( Slapi_DN *dn_olddn, char *newrdn, char *newsuperiordn );$/;"	p	signature:( Slapi_DN *dn_olddn, char *newrdn, char *newsuperiordn )
slapi_modify_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_modify_internal( char *dn, LDAPMod **mods,$/;"	p	signature:( char *dn, LDAPMod **mods, LDAPControl **controls, int log_change )
slapi_modify_internal_pb	/usr/include/slapi-plugin.h	/^int slapi_modify_internal_pb( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_modify_internal_set_pb	/usr/include/slapi-plugin.h	/^void slapi_modify_internal_set_pb( Slapi_PBlock *pb, const char *dn,$/;"	p	signature:( Slapi_PBlock *pb, const char *dn, LDAPMod **mods, LDAPControl **controls, const char *uniqueid, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_modrdn_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_modrdn_internal( char * olddn, char * newrdn,$/;"	p	signature:( char * olddn, char * newrdn, int deloldrdn, LDAPControl **controls, int log_change )
slapi_modrdn_internal_pb	/usr/include/slapi-plugin.h	/^int slapi_modrdn_internal_pb( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_new_condvar	/usr/include/slapi-plugin.h	/^Slapi_CondVar *slapi_new_condvar( Slapi_Mutex *mutex );$/;"	p	signature:( Slapi_Mutex *mutex )
slapi_new_mutex	/usr/include/slapi-plugin.h	/^Slapi_Mutex *slapi_new_mutex( void );$/;"	p	signature:( void )
slapi_notify_condvar	/usr/include/slapi-plugin.h	/^int slapi_notify_condvar( Slapi_CondVar *cvar, int notify_all );$/;"	p	signature:( Slapi_CondVar *cvar, int notify_all )
slapi_op_abandoned	/usr/include/slapi-plugin.h	/^int slapi_op_abandoned( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_op_get_type	/usr/include/slapi-plugin.h	/^unsigned long slapi_op_get_type(Slapi_Operation * op);$/;"	p	signature:(Slapi_Operation * op)
slapi_op_type_to_string	/usr/include/slapi-plugin.h	/^char *slapi_op_type_to_string(unsigned long type);$/;"	p	signature:(unsigned long type)
slapi_operation_clear_flag	/usr/include/slapi-plugin.h	/^void slapi_operation_clear_flag(Slapi_Operation *op, unsigned long flag);$/;"	p	signature:(Slapi_Operation *op, unsigned long flag)
slapi_operation_is_flag_set	/usr/include/slapi-plugin.h	/^int slapi_operation_is_flag_set(Slapi_Operation *op, unsigned long flag);$/;"	p	signature:(Slapi_Operation *op, unsigned long flag)
slapi_operation_set_flag	/usr/include/slapi-plugin.h	/^void slapi_operation_set_flag(Slapi_Operation *op, unsigned long flag);$/;"	p	signature:(Slapi_Operation *op, unsigned long flag)
slapi_pblock_destroy	/usr/include/slapi-plugin.h	/^void slapi_pblock_destroy( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_pblock_get	/usr/include/slapi-plugin.h	/^int slapi_pblock_get( Slapi_PBlock *pb, int arg, void *value );$/;"	p	signature:( Slapi_PBlock *pb, int arg, void *value )
slapi_pblock_new	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_pblock_new( void );$/;"	p	signature:( void )
slapi_pblock_set	/usr/include/slapi-plugin.h	/^int slapi_pblock_set( Slapi_PBlock *pb, int arg, void *value );$/;"	p	signature:( Slapi_PBlock *pb, int arg, void *value )
slapi_plugindesc	/usr/include/slapi-plugin.h	/^typedef struct slapi_plugindesc {$/;"	s
slapi_plugindesc::spd_description	/usr/include/slapi-plugin.h	/^        char    *spd_description;$/;"	m	struct:slapi_plugindesc	access:public
slapi_plugindesc::spd_id	/usr/include/slapi-plugin.h	/^        char    *spd_id;$/;"	m	struct:slapi_plugindesc	access:public
slapi_plugindesc::spd_vendor	/usr/include/slapi-plugin.h	/^        char    *spd_vendor;$/;"	m	struct:slapi_plugindesc	access:public
slapi_plugindesc::spd_version	/usr/include/slapi-plugin.h	/^        char    *spd_version;$/;"	m	struct:slapi_plugindesc	access:public
slapi_rdn2typeval	/usr/include/slapi-plugin.h	/^int slapi_rdn2typeval( char *rdn, char **type, struct berval *bv );$/;"	p	signature:( char *rdn, char **type, struct berval *bv )
slapi_rdn_add	/usr/include/slapi-plugin.h	/^int slapi_rdn_add( Slapi_RDN *rdn, const char *type, const char *value );$/;"	p	signature:( Slapi_RDN *rdn, const char *type, const char *value )
slapi_rdn_compare	/usr/include/slapi-plugin.h	/^int slapi_rdn_compare( Slapi_RDN *rdn1, Slapi_RDN *rdn2 );$/;"	p	signature:( Slapi_RDN *rdn1, Slapi_RDN *rdn2 )
slapi_rdn_contains	/usr/include/slapi-plugin.h	/^int slapi_rdn_contains( Slapi_RDN *rdn, const char *type, const char *value,size_t length );$/;"	p	signature:( Slapi_RDN *rdn, const char *type, const char *value,size_t length )
slapi_rdn_contains_attr	/usr/include/slapi-plugin.h	/^int slapi_rdn_contains_attr( Slapi_RDN *rdn, const char *type, char **value );$/;"	p	signature:( Slapi_RDN *rdn, const char *type, char **value )
slapi_rdn_done	/usr/include/slapi-plugin.h	/^void slapi_rdn_done( Slapi_RDN *rdn );$/;"	p	signature:( Slapi_RDN *rdn )
slapi_rdn_free	/usr/include/slapi-plugin.h	/^void slapi_rdn_free( Slapi_RDN **rdn );$/;"	p	signature:( Slapi_RDN **rdn )
slapi_rdn_get_first	/usr/include/slapi-plugin.h	/^int slapi_rdn_get_first( Slapi_RDN *rdn, char **type, char **value );$/;"	p	signature:( Slapi_RDN *rdn, char **type, char **value )
slapi_rdn_get_index	/usr/include/slapi-plugin.h	/^int slapi_rdn_get_index( Slapi_RDN *rdn, const char *type, const char *value, size_t length );$/;"	p	signature:( Slapi_RDN *rdn, const char *type, const char *value, size_t length )
slapi_rdn_get_index_attr	/usr/include/slapi-plugin.h	/^int slapi_rdn_get_index_attr( Slapi_RDN *rdn, const char *type, char **value );$/;"	p	signature:( Slapi_RDN *rdn, const char *type, char **value )
slapi_rdn_get_next	/usr/include/slapi-plugin.h	/^int slapi_rdn_get_next( Slapi_RDN *rdn, int index, char **type, char **value );$/;"	p	signature:( Slapi_RDN *rdn, int index, char **type, char **value )
slapi_rdn_get_nrdn	/usr/include/slapi-plugin.h	/^const char *slapi_rdn_get_nrdn( const Slapi_RDN *rdn );$/;"	p	signature:( const Slapi_RDN *rdn )
slapi_rdn_get_num_components	/usr/include/slapi-plugin.h	/^int slapi_rdn_get_num_components( Slapi_RDN *rdn );$/;"	p	signature:( Slapi_RDN *rdn )
slapi_rdn_get_rdn	/usr/include/slapi-plugin.h	/^const char *slapi_rdn_get_rdn( const Slapi_RDN *rdn );$/;"	p	signature:( const Slapi_RDN *rdn )
slapi_rdn_init	/usr/include/slapi-plugin.h	/^void slapi_rdn_init( Slapi_RDN *rdn );$/;"	p	signature:( Slapi_RDN *rdn )
slapi_rdn_init_dn	/usr/include/slapi-plugin.h	/^void slapi_rdn_init_dn( Slapi_RDN *rdn, const char *dn );$/;"	p	signature:( Slapi_RDN *rdn, const char *dn )
slapi_rdn_init_rdn	/usr/include/slapi-plugin.h	/^void slapi_rdn_init_rdn( Slapi_RDN *rdn, const Slapi_RDN *fromrdn ); $/;"	p	signature:( Slapi_RDN *rdn, const Slapi_RDN *fromrdn )
slapi_rdn_init_sdn	/usr/include/slapi-plugin.h	/^void slapi_rdn_init_sdn( Slapi_RDN *rdn, const Slapi_DN *sdn );$/;"	p	signature:( Slapi_RDN *rdn, const Slapi_DN *sdn )
slapi_rdn_isempty	/usr/include/slapi-plugin.h	/^int slapi_rdn_isempty( const Slapi_RDN *rdn );$/;"	p	signature:( const Slapi_RDN *rdn )
slapi_rdn_new	/usr/include/slapi-plugin.h	/^Slapi_RDN *slapi_rdn_new( void );$/;"	p	signature:( void )
slapi_rdn_new_dn	/usr/include/slapi-plugin.h	/^Slapi_RDN *slapi_rdn_new_dn( const char *dn );$/;"	p	signature:( const char *dn )
slapi_rdn_new_rdn	/usr/include/slapi-plugin.h	/^Slapi_RDN *slapi_rdn_new_rdn( const Slapi_RDN *fromrdn ); $/;"	p	signature:( const Slapi_RDN *fromrdn )
slapi_rdn_new_sdn	/usr/include/slapi-plugin.h	/^Slapi_RDN *slapi_rdn_new_sdn( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_rdn_remove	/usr/include/slapi-plugin.h	/^int slapi_rdn_remove( Slapi_RDN *rdn, const char *type, const char *value, size_t length );$/;"	p	signature:( Slapi_RDN *rdn, const char *type, const char *value, size_t length )
slapi_rdn_remove_attr	/usr/include/slapi-plugin.h	/^int slapi_rdn_remove_attr( Slapi_RDN *rdn, const char *type );$/;"	p	signature:( Slapi_RDN *rdn, const char *type )
slapi_rdn_remove_index	/usr/include/slapi-plugin.h	/^int slapi_rdn_remove_index( Slapi_RDN *rdn, int atindex );$/;"	p	signature:( Slapi_RDN *rdn, int atindex )
slapi_rdn_set_dn	/usr/include/slapi-plugin.h	/^void slapi_rdn_set_dn( Slapi_RDN *rdn, const char *dn );$/;"	p	signature:( Slapi_RDN *rdn, const char *dn )
slapi_rdn_set_rdn	/usr/include/slapi-plugin.h	/^void slapi_rdn_set_rdn( Slapi_RDN *rdn, const Slapi_RDN *fromrdn );$/;"	p	signature:( Slapi_RDN *rdn, const Slapi_RDN *fromrdn )
slapi_rdn_set_sdn	/usr/include/slapi-plugin.h	/^void slapi_rdn_set_sdn( Slapi_RDN *rdn, const Slapi_DN *sdn );$/;"	p	signature:( Slapi_RDN *rdn, const Slapi_DN *sdn )
slapi_register_object_extension	/usr/include/slapi-plugin.h	/^int slapi_register_object_extension( const char *pluginname,$/;"	p	signature:( const char *pluginname, const char *objectname, slapi_extension_constructor_fnptr constructor, slapi_extension_destructor_fnptr destructor, int *objecttype, int *extensionhandle)
slapi_register_supported_control	/usr/include/slapi-plugin.h	/^void slapi_register_supported_control(char *controloid,$/;"	p	signature:(char *controloid, unsigned long controlops)
slapi_register_supported_saslmechanism	/usr/include/slapi-plugin.h	/^void slapi_register_supported_saslmechanism(char *mechanism);$/;"	p	signature:(char *mechanism)
slapi_rename_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_rename_internal( const char * olddn, const char *newrdn,$/;"	p	signature:( const char * olddn, const char *newrdn, const char *newsuperior, int delolrdn, LDAPControl **controls, int log_change )
slapi_rename_internal_set_pb	/usr/include/slapi-plugin.h	/^void slapi_rename_internal_set_pb( Slapi_PBlock *pb, const char *olddn,$/;"	p	signature:( Slapi_PBlock *pb, const char *olddn, const char *newrdn, const char *newsuperior, int deloldrdn, LDAPControl **controls, const char *uniqueid, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_sdn_add_rdn	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_add_rdn( Slapi_DN *sdn, const Slapi_RDN *rdn );$/;"	p	signature:( Slapi_DN *sdn, const Slapi_RDN *rdn )
slapi_sdn_compare	/usr/include/slapi-plugin.h	/^int slapi_sdn_compare( const Slapi_DN *sdn1, const Slapi_DN *sdn2 );$/;"	p	signature:( const Slapi_DN *sdn1, const Slapi_DN *sdn2 )
slapi_sdn_copy	/usr/include/slapi-plugin.h	/^void slapi_sdn_copy( const Slapi_DN *from, Slapi_DN *to );$/;"	p	signature:( const Slapi_DN *from, Slapi_DN *to )
slapi_sdn_done	/usr/include/slapi-plugin.h	/^void slapi_sdn_done( Slapi_DN *sdn );$/;"	p	signature:( Slapi_DN *sdn )
slapi_sdn_dup	/usr/include/slapi-plugin.h	/^Slapi_DN * slapi_sdn_dup( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_sdn_free	/usr/include/slapi-plugin.h	/^void slapi_sdn_free( Slapi_DN **sdn );$/;"	p	signature:( Slapi_DN **sdn )
slapi_sdn_get_backend_parent	/usr/include/slapi-plugin.h	/^void slapi_sdn_get_backend_parent( const Slapi_DN *sdn, Slapi_DN *sdn_parent, const Slapi_Backend *backend );$/;"	p	signature:( const Slapi_DN *sdn, Slapi_DN *sdn_parent, const Slapi_Backend *backend )
slapi_sdn_get_dn	/usr/include/slapi-plugin.h	/^const char * slapi_sdn_get_dn( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_sdn_get_ndn	/usr/include/slapi-plugin.h	/^const char * slapi_sdn_get_ndn( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_sdn_get_ndn_len	/usr/include/slapi-plugin.h	/^int slapi_sdn_get_ndn_len( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_sdn_get_parent	/usr/include/slapi-plugin.h	/^void slapi_sdn_get_parent( const Slapi_DN *sdn,Slapi_DN *sdn_parent );$/;"	p	signature:( const Slapi_DN *sdn,Slapi_DN *sdn_parent )
slapi_sdn_get_rdn	/usr/include/slapi-plugin.h	/^void slapi_sdn_get_rdn( const Slapi_DN *sdn,Slapi_RDN *rdn );$/;"	p	signature:( const Slapi_DN *sdn,Slapi_RDN *rdn )
slapi_sdn_is_rdn_component	/usr/include/slapi-plugin.h	/^int slapi_sdn_is_rdn_component( const Slapi_DN *rdn, const Slapi_Attr *a, const Slapi_Value *v );$/;"	p	signature:( const Slapi_DN *rdn, const Slapi_Attr *a, const Slapi_Value *v )
slapi_sdn_isempty	/usr/include/slapi-plugin.h	/^int slapi_sdn_isempty( const Slapi_DN *sdn );$/;"	p	signature:( const Slapi_DN *sdn )
slapi_sdn_isgrandparent	/usr/include/slapi-plugin.h	/^int slapi_sdn_isgrandparent( const Slapi_DN *parent, const Slapi_DN *child );$/;"	p	signature:( const Slapi_DN *parent, const Slapi_DN *child )
slapi_sdn_isparent	/usr/include/slapi-plugin.h	/^int slapi_sdn_isparent( const Slapi_DN *parent, const Slapi_DN *child );$/;"	p	signature:( const Slapi_DN *parent, const Slapi_DN *child )
slapi_sdn_issuffix	/usr/include/slapi-plugin.h	/^int slapi_sdn_issuffix(const Slapi_DN *sdn, const Slapi_DN *suffixsdn );$/;"	p	signature:(const Slapi_DN *sdn, const Slapi_DN *suffixsdn )
slapi_sdn_new	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_new( void );$/;"	p	signature:( void )
slapi_sdn_new_dn_byref	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_new_dn_byref( const char *dn );$/;"	p	signature:( const char *dn )
slapi_sdn_new_dn_byval	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_new_dn_byval( const char *dn );$/;"	p	signature:( const char *dn )
slapi_sdn_new_dn_passin	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_new_dn_passin( const char *dn );$/;"	p	signature:( const char *dn )
slapi_sdn_new_ndn_byref	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_new_ndn_byref( const char *ndn );$/;"	p	signature:( const char *ndn )
slapi_sdn_new_ndn_byval	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_new_ndn_byval( const char *ndn );$/;"	p	signature:( const char *ndn )
slapi_sdn_scope_test	/usr/include/slapi-plugin.h	/^int slapi_sdn_scope_test( const Slapi_DN *dn, const Slapi_DN *base, int scope );$/;"	p	signature:( const Slapi_DN *dn, const Slapi_DN *base, int scope )
slapi_sdn_set_dn_byref	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_dn_byref( Slapi_DN *sdn, const char *dn );$/;"	p	signature:( Slapi_DN *sdn, const char *dn )
slapi_sdn_set_dn_byval	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_dn_byval( Slapi_DN *sdn, const char *dn );$/;"	p	signature:( Slapi_DN *sdn, const char *dn )
slapi_sdn_set_dn_passin	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_dn_passin( Slapi_DN *sdn, const char *dn );$/;"	p	signature:( Slapi_DN *sdn, const char *dn )
slapi_sdn_set_ndn_byref	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_ndn_byref( Slapi_DN *sdn, const char *ndn );$/;"	p	signature:( Slapi_DN *sdn, const char *ndn )
slapi_sdn_set_ndn_byval	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_ndn_byval( Slapi_DN *sdn, const char *ndn );$/;"	p	signature:( Slapi_DN *sdn, const char *ndn )
slapi_sdn_set_parent	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_parent( Slapi_DN *sdn, const Slapi_DN *parentdn );$/;"	p	signature:( Slapi_DN *sdn, const Slapi_DN *parentdn )
slapi_sdn_set_rdn	/usr/include/slapi-plugin.h	/^Slapi_DN *slapi_sdn_set_rdn( Slapi_DN *sdn, const Slapi_RDN *rdn );$/;"	p	signature:( Slapi_DN *sdn, const Slapi_RDN *rdn )
slapi_search_internal	/usr/include/slapi-plugin.h	/^Slapi_PBlock *slapi_search_internal( char *base, int scope, char *filter, $/;"	p	signature:( char *base, int scope, char *filter, LDAPControl **controls, char **attrs, int attrsonly )
slapi_search_internal_callback_pb	/usr/include/slapi-plugin.h	/^int slapi_search_internal_callback_pb( Slapi_PBlock *pb, void *callback_data,$/;"	p	signature:( Slapi_PBlock *pb, void *callback_data, plugin_result_callback prc, plugin_search_entry_callback psec, plugin_referral_entry_callback prec )
slapi_search_internal_pb	/usr/include/slapi-plugin.h	/^int slapi_search_internal_pb( Slapi_PBlock *pb );$/;"	p	signature:( Slapi_PBlock *pb )
slapi_search_internal_set_pb	/usr/include/slapi-plugin.h	/^void slapi_search_internal_set_pb( Slapi_PBlock *pb, const char *base,$/;"	p	signature:( Slapi_PBlock *pb, const char *base, int scope, const char *filter, char **attrs, int attrsonly, LDAPControl **controls, const char *uniqueid, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_search_rewrite_callback_t	/usr/include/slapi-plugin.h	/^typedef int (*slapi_search_rewrite_callback_t)(Slapi_PBlock *pb);$/;"	t
slapi_send_ldap_result	/usr/include/slapi-plugin.h	/^void slapi_send_ldap_result( Slapi_PBlock *pb, int err, char *matched,$/;"	p	signature:( Slapi_PBlock *pb, int err, char *matched, char *text, int nentries, struct berval **urls )
slapi_send_ldap_search_entry	/usr/include/slapi-plugin.h	/^int slapi_send_ldap_search_entry( Slapi_PBlock *pb, Slapi_Entry *e,$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e, LDAPControl **ectrls, char **attrs, int attrsonly )
slapi_send_ldap_search_reference	/usr/include/slapi-plugin.h	/^int slapi_send_ldap_search_reference( Slapi_PBlock *pb, Slapi_Entry *e,$/;"	p	signature:( Slapi_PBlock *pb, Slapi_Entry *e, struct berval **urls, LDAPControl **ectrls, struct berval **v2refs )
slapi_seq_internal_callback_pb	/usr/include/slapi-plugin.h	/^int slapi_seq_internal_callback_pb(Slapi_PBlock *pb, void *callback_data,$/;"	p	signature:(Slapi_PBlock *pb, void *callback_data, plugin_result_callback res_callback, plugin_search_entry_callback srch_callback, plugin_referral_entry_callback ref_callback)
slapi_seq_internal_set_pb	/usr/include/slapi-plugin.h	/^void slapi_seq_internal_set_pb( Slapi_PBlock *pb, char *ibase, int type,$/;"	p	signature:( Slapi_PBlock *pb, char *ibase, int type, char *attrname, char *val, char **attrs, int attrsonly, LDAPControl **controls, Slapi_ComponentId *plugin_identity, int operation_flags )
slapi_set_object_extension	/usr/include/slapi-plugin.h	/^void slapi_set_object_extension(int objecttype, void *object,$/;"	p	signature:(int objecttype, void *object, int extensionhandle, void *extension)
slapi_str2entry	/usr/include/slapi-plugin.h	/^Slapi_Entry *slapi_str2entry( char *s, int flags );$/;"	p	signature:( char *s, int flags )
slapi_str2filter	/usr/include/slapi-plugin.h	/^Slapi_Filter *slapi_str2filter( char *str );$/;"	p	signature:( char *str )
slapi_unlock_mutex	/usr/include/slapi-plugin.h	/^int slapi_unlock_mutex( Slapi_Mutex *mutex );$/;"	p	signature:( Slapi_Mutex *mutex )
slapi_value_compare	/usr/include/slapi-plugin.h	/^int slapi_value_compare(const Slapi_Attr *a, const Slapi_Value *v1, const Slapi_Value *v2);$/;"	p	signature:(const Slapi_Attr *a, const Slapi_Value *v1, const Slapi_Value *v2)
slapi_value_dup	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_dup(const Slapi_Value *v);$/;"	p	signature:(const Slapi_Value *v)
slapi_value_free	/usr/include/slapi-plugin.h	/^void slapi_value_free(Slapi_Value **value);$/;"	p	signature:(Slapi_Value **value)
slapi_value_get_berval	/usr/include/slapi-plugin.h	/^const struct berval *slapi_value_get_berval( const Slapi_Value *value );$/;"	p	signature:( const Slapi_Value *value )
slapi_value_get_int	/usr/include/slapi-plugin.h	/^int slapi_value_get_int(const Slapi_Value *value); $/;"	p	signature:(const Slapi_Value *value)
slapi_value_get_length	/usr/include/slapi-plugin.h	/^size_t slapi_value_get_length(const Slapi_Value *value);$/;"	p	signature:(const Slapi_Value *value)
slapi_value_get_long	/usr/include/slapi-plugin.h	/^long slapi_value_get_long(const Slapi_Value *value); $/;"	p	signature:(const Slapi_Value *value)
slapi_value_get_string	/usr/include/slapi-plugin.h	/^const char*slapi_value_get_string(const Slapi_Value *value);$/;"	p	signature:(const Slapi_Value *value)
slapi_value_get_uint	/usr/include/slapi-plugin.h	/^unsigned int slapi_value_get_uint(const Slapi_Value *value); $/;"	p	signature:(const Slapi_Value *value)
slapi_value_get_ulong	/usr/include/slapi-plugin.h	/^unsigned long slapi_value_get_ulong(const Slapi_Value *value); $/;"	p	signature:(const Slapi_Value *value)
slapi_value_init	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_init(Slapi_Value *v);$/;"	p	signature:(Slapi_Value *v)
slapi_value_init_berval	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_init_berval(Slapi_Value *v, struct berval *bval);$/;"	p	signature:(Slapi_Value *v, struct berval *bval)
slapi_value_init_string	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_init_string(Slapi_Value *v, const char *s);$/;"	p	signature:(Slapi_Value *v, const char *s)
slapi_value_new	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_new( void );$/;"	p	signature:( void )
slapi_value_new_berval	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_new_berval(const struct berval *bval);$/;"	p	signature:(const struct berval *bval)
slapi_value_new_string	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_new_string(const char *s);$/;"	p	signature:(const char *s)
slapi_value_new_value	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_new_value(const Slapi_Value *v);$/;"	p	signature:(const Slapi_Value *v)
slapi_value_set	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_set( Slapi_Value *value, void *val, unsigned long len);$/;"	p	signature:( Slapi_Value *value, void *val, unsigned long len)
slapi_value_set_berval	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_set_berval( Slapi_Value *value, const struct berval *bval );$/;"	p	signature:( Slapi_Value *value, const struct berval *bval )
slapi_value_set_int	/usr/include/slapi-plugin.h	/^int slapi_value_set_int(Slapi_Value *value, int intVal);$/;"	p	signature:(Slapi_Value *value, int intVal)
slapi_value_set_string	/usr/include/slapi-plugin.h	/^int slapi_value_set_string(Slapi_Value *value, const char *strVal);$/;"	p	signature:(Slapi_Value *value, const char *strVal)
slapi_value_set_value	/usr/include/slapi-plugin.h	/^Slapi_Value *slapi_value_set_value( Slapi_Value *value, const Slapi_Value *vfrom);$/;"	p	signature:( Slapi_Value *value, const Slapi_Value *vfrom)
slapi_valueset_add_value	/usr/include/slapi-plugin.h	/^void slapi_valueset_add_value(Slapi_ValueSet *vs, const Slapi_Value *addval);$/;"	p	signature:(Slapi_ValueSet *vs, const Slapi_Value *addval)
slapi_valueset_count	/usr/include/slapi-plugin.h	/^int slapi_valueset_count( const Slapi_ValueSet *vs);$/;"	p	signature:( const Slapi_ValueSet *vs)
slapi_valueset_done	/usr/include/slapi-plugin.h	/^void slapi_valueset_done(Slapi_ValueSet *vs);$/;"	p	signature:(Slapi_ValueSet *vs)
slapi_valueset_first_value	/usr/include/slapi-plugin.h	/^int slapi_valueset_first_value( Slapi_ValueSet *vs, Slapi_Value **v );$/;"	p	signature:( Slapi_ValueSet *vs, Slapi_Value **v )
slapi_valueset_free	/usr/include/slapi-plugin.h	/^void slapi_valueset_free(Slapi_ValueSet *vs);$/;"	p	signature:(Slapi_ValueSet *vs)
slapi_valueset_init	/usr/include/slapi-plugin.h	/^void slapi_valueset_init(Slapi_ValueSet *vs);$/;"	p	signature:(Slapi_ValueSet *vs)
slapi_valueset_new	/usr/include/slapi-plugin.h	/^Slapi_ValueSet *slapi_valueset_new( void );$/;"	p	signature:( void )
slapi_valueset_next_value	/usr/include/slapi-plugin.h	/^int slapi_valueset_next_value( Slapi_ValueSet *vs, int index, Slapi_Value **v);$/;"	p	signature:( Slapi_ValueSet *vs, int index, Slapi_Value **v)
slapi_valueset_set_valueset	/usr/include/slapi-plugin.h	/^void slapi_valueset_set_valueset(Slapi_ValueSet *vs1, const Slapi_ValueSet *vs2);$/;"	p	signature:(Slapi_ValueSet *vs1, const Slapi_ValueSet *vs2)
slapi_wait_condvar	/usr/include/slapi-plugin.h	/^int slapi_wait_condvar( Slapi_CondVar *cvar, struct timeval *timeout );$/;"	p	signature:( Slapi_CondVar *cvar, struct timeval *timeout )
slapi_x_backend_get_flags	/usr/include/slapi-plugin.h	/^int slapi_x_backend_get_flags( const Slapi_Backend *be, unsigned long *flags );$/;"	p	signature:( const Slapi_Backend *be, unsigned long *flags )
slapi_x_be_get_updatedn	/usr/include/slapi-plugin.h	/^const char *slapi_x_be_get_updatedn( Slapi_Backend *be );$/;"	p	signature:( Slapi_Backend *be )
slapi_x_compute_get_pblock	/usr/include/slapi-plugin.h	/^int slapi_x_compute_get_pblock(computed_attr_context *c, Slapi_PBlock **pb);$/;"	p	signature:(computed_attr_context *c, Slapi_PBlock **pb)
slapi_x_entry_get_id	/usr/include/slapi-plugin.h	/^int slapi_x_entry_get_id( Slapi_Entry *e );$/;"	p	signature:( Slapi_Entry *e )
slapi_x_filter_append	/usr/include/slapi-plugin.h	/^int slapi_x_filter_append( int choice, Slapi_Filter **pContainingFilter,$/;"	p	signature:( int choice, Slapi_Filter **pContainingFilter, Slapi_Filter **pNextFilter, Slapi_Filter *filterToAppend )
slapi_x_filter_set_attribute_type	/usr/include/slapi-plugin.h	/^int slapi_x_filter_set_attribute_type( Slapi_Filter *f, const char *type );$/;"	p	signature:( Slapi_Filter *f, const char *type )
sleep	/usr/include/sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sleep	/usr/include/unistd.h	/^	 sleep(unsigned int) __DARWIN_ALIAS_C(sleep);$/;"	v
slk_attr_off	/usr/include/curses.h	/^#define slk_attr_off(/;"	d
slk_attr_off	/usr/include/ncurses.h	/^#define slk_attr_off(/;"	d
slk_attr_on	/usr/include/curses.h	/^#define slk_attr_on(/;"	d
slk_attr_on	/usr/include/ncurses.h	/^#define slk_attr_on(/;"	d
small	/usr/include/bzlib.h	/^#      undef small$/;"	d
smax	/usr/include/form.h	/^  short smax;		\/* index of bottom rightmost field on page	*\/$/;"	m	struct:__anon61	access:public
smin	/usr/include/form.h	/^  short smin;		\/* index of top leftmost field on page		*\/$/;"	m	struct:__anon61	access:public
snext	/usr/include/form.h	/^  struct fieldnode *	snext;		\/* sorted order pointer		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::fieldnode	access:public
snprintf	/usr/include/sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	access:public
snprintf	/usr/include/stdio.h	/^int	 snprintf(char * __restrict, size_t, const char * __restrict, ...) __DARWIN_LDBL_COMPAT(snprintf);$/;"	v
sock_host	/usr/include/tcpd.h	/^extern void sock_host();		\/* look up endpoint addresses *\/$/;"	p	signature:()
sock_hostaddr	/usr/include/tcpd.h	/^extern void sock_hostaddr();		\/* address to printable address *\/$/;"	p	signature:()
sock_hostname	/usr/include/tcpd.h	/^extern void sock_hostname();		\/* translate address to hostname *\/$/;"	p	signature:()
sock_methods	/usr/include/tcpd.h	/^#define sock_methods(/;"	d
sockaddr_gen	/usr/include/tcpd.h	/^typedef struct sockaddr_gen {$/;"	s
sockaddr_gen	/usr/include/tcpd.h	/^} sockaddr_gen;$/;"	t	typeref:struct:sockaddr_gen
sockaddr_gen::__anon120::_sg_sa	/usr/include/tcpd.h	/^	struct sockaddr	_sg_sa;$/;"	m	union:sockaddr_gen::__anon120	typeref:struct:sockaddr_gen::__anon120::sockaddr	access:public
sockaddr_gen::__anon120::_sg_sin	/usr/include/tcpd.h	/^	struct sockaddr_in	_sg_sin;$/;"	m	union:sockaddr_gen::__anon120	typeref:struct:sockaddr_gen::__anon120::sockaddr_in	access:public
sockaddr_gen::__anon120::_sg_sin6	/usr/include/tcpd.h	/^	struct sockaddr_in6	_sg_sin6;$/;"	m	union:sockaddr_gen::__anon120	typeref:struct:sockaddr_gen::__anon120::sockaddr_in6	access:public
sockaddr_gen::sg_addr	/usr/include/tcpd.h	/^    } sg_addr;$/;"	m	struct:sockaddr_gen	typeref:union:sockaddr_gen::__anon120	access:public
sockbuf_io	/usr/include/lber.h	/^struct sockbuf_io {$/;"	s
sockbuf_io::sbi_close	/usr/include/lber.h	/^	int (*sbi_close)( Sockbuf_IO_Desc *sbiod );$/;"	m	struct:sockbuf_io	access:public
sockbuf_io::sbi_ctrl	/usr/include/lber.h	/^	int (*sbi_ctrl)( Sockbuf_IO_Desc *sbiod, int opt, void *arg);$/;"	m	struct:sockbuf_io	access:public
sockbuf_io::sbi_read	/usr/include/lber.h	/^	ber_slen_t (*sbi_read)( Sockbuf_IO_Desc *sbiod, void *buf,$/;"	m	struct:sockbuf_io	access:public
sockbuf_io::sbi_remove	/usr/include/lber.h	/^	int (*sbi_remove)( Sockbuf_IO_Desc *sbiod );$/;"	m	struct:sockbuf_io	access:public
sockbuf_io::sbi_setup	/usr/include/lber.h	/^	int (*sbi_setup)( Sockbuf_IO_Desc *sbiod, void *arg );$/;"	m	struct:sockbuf_io	access:public
sockbuf_io::sbi_write	/usr/include/lber.h	/^	ber_slen_t (*sbi_write)( Sockbuf_IO_Desc *sbiod, void *buf,$/;"	m	struct:sockbuf_io	access:public
sockbuf_io_desc	/usr/include/lber.h	/^typedef struct sockbuf_io_desc {$/;"	s
sockbuf_io_desc::sbiod_io	/usr/include/lber.h	/^	Sockbuf_IO		*sbiod_io;$/;"	m	struct:sockbuf_io_desc	access:public
sockbuf_io_desc::sbiod_level	/usr/include/lber.h	/^	int			sbiod_level;$/;"	m	struct:sockbuf_io_desc	access:public
sockbuf_io_desc::sbiod_next	/usr/include/lber.h	/^	struct sockbuf_io_desc	*sbiod_next;$/;"	m	struct:sockbuf_io_desc	typeref:struct:sockbuf_io_desc::sockbuf_io_desc	access:public
sockbuf_io_desc::sbiod_pvt	/usr/include/lber.h	/^	void 			*sbiod_pvt;$/;"	m	struct:sockbuf_io_desc	access:public
sockbuf_io_desc::sbiod_sb	/usr/include/lber.h	/^	Sockbuf			*sbiod_sb;$/;"	m	struct:sockbuf_io_desc	access:public
sockgen_simplify	/usr/include/tcpd.h	/^extern void sockgen_simplify();$/;"	p	signature:()
socklen_t	/usr/include/netdb.h	/^typedef __darwin_socklen_t	socklen_t;$/;"	t
soft_heap_limit	/usr/include/sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sort_list	/usr/include/resolv.h	/^	} sort_list[MAXRESOLVSORT];$/;"	m	struct:__res_state	typeref:struct:__res_state::__anon98	access:public
source	/usr/include/tic.h	/^	const char	*source;$/;"	m	struct:alias	access:public
spaceAvl	/usr/include/tcl.h	/^    int spaceAvl;		\/* Total number of bytes available for the$/;"	m	struct:Tcl_DString	access:public
spc_cols	/usr/include/menu.h	/^  short          spc_cols;              \/* Spacing for columns             *\/$/;"	m	struct:tagMENU	access:public
spc_desc	/usr/include/menu.h	/^  short          spc_desc;              \/* Spacing for descriptor          *\/$/;"	m	struct:tagMENU	access:public
spc_rows	/usr/include/menu.h	/^  short          spc_rows;              \/* Spacing for rows                *\/ $/;"	m	struct:tagMENU	access:public
spd_description	/usr/include/slapi-plugin.h	/^        char    *spd_description;$/;"	m	struct:slapi_plugindesc	access:public
spd_id	/usr/include/slapi-plugin.h	/^        char    *spd_id;$/;"	m	struct:slapi_plugindesc	access:public
spd_vendor	/usr/include/slapi-plugin.h	/^        char    *spd_vendor;$/;"	m	struct:slapi_plugindesc	access:public
spd_version	/usr/include/slapi-plugin.h	/^        char    *spd_version;$/;"	m	struct:slapi_plugindesc	access:public
specFlags	/usr/include/tk.h	/^    int specFlags;		\/* Any combination of the values defined$/;"	m	struct:Tk_ConfigSpec	access:public
split_at	/usr/include/tcpd.h	/^extern char *split_at();		\/* strchr() and split *\/$/;"	p	signature:()
sprev	/usr/include/form.h	/^  struct fieldnode *	sprev;		\/* sorted order pointer		*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::fieldnode	access:public
sprintf	/usr/include/stdio.h	/^int	 sprintf(char * __restrict, const char * __restrict, ...) __DARWIN_LDBL_COMPAT(sprintf);$/;"	v
sputrune	/usr/include/rune.h	/^#define sputrune(/;"	d
sql	/usr/include/sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3	/usr/include/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3_aggregate_context	/usr/include/sqlite3.h	/^void *sqlite3_aggregate_context(sqlite3_context*, int nBytes);$/;"	p	signature:(sqlite3_context*, int nBytes)
sqlite3_aggregate_context	/usr/include/sqlite3ext.h	/^#define sqlite3_aggregate_context /;"	d
sqlite3_aggregate_count	/usr/include/sqlite3.h	/^SQLITE_DEPRECATED int sqlite3_aggregate_count(sqlite3_context*);$/;"	p	signature:(sqlite3_context*)
sqlite3_aggregate_count	/usr/include/sqlite3ext.h	/^#define sqlite3_aggregate_count /;"	d
sqlite3_api_routines	/usr/include/sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_api_routines	/usr/include/sqlite3ext.h	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines
sqlite3_api_routines::aggregate_context	/usr/include/sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::aggregate_count	/usr/include/sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_blob	/usr/include/sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_double	/usr/include/sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_int	/usr/include/sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_int64	/usr/include/sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_null	/usr/include/sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_parameter_count	/usr/include/sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_parameter_index	/usr/include/sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_parameter_name	/usr/include/sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_text	/usr/include/sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_text16	/usr/include/sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_value	/usr/include/sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::bind_zeroblob	/usr/include/sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::blob_bytes	/usr/include/sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::blob_close	/usr/include/sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::blob_open	/usr/include/sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,int,sqlite3_blob**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::blob_read	/usr/include/sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::blob_write	/usr/include/sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::busy_handler	/usr/include/sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::busy_timeout	/usr/include/sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::changes	/usr/include/sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::clear_bindings	/usr/include/sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::close	/usr/include/sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::collation_needed	/usr/include/sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const char*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::collation_needed16	/usr/include/sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_blob	/usr/include/sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_bytes	/usr/include/sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_bytes16	/usr/include/sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_count	/usr/include/sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_database_name	/usr/include/sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_database_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_decltype	/usr/include/sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_decltype16	/usr/include/sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_double	/usr/include/sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_int	/usr/include/sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_int64	/usr/include/sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_name	/usr/include/sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_origin_name	/usr/include/sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_origin_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_table_name	/usr/include/sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_table_name16	/usr/include/sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_text	/usr/include/sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_text16	/usr/include/sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_type	/usr/include/sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::column_value	/usr/include/sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::commit_hook	/usr/include/sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::complete	/usr/include/sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::complete16	/usr/include/sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::context_db_handle	/usr/include/sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_collation	/usr/include/sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_collation16	/usr/include/sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,int(*)(void*,int,const void*,int,const void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_collation_v2	/usr/include/sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*),void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_function	/usr/include/sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_function16	/usr/include/sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_module	/usr/include/sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::create_module_v2	/usr/include/sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,void (*xDestroy)(void *));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::data_count	/usr/include/sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::db_handle	/usr/include/sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::declare_vtab	/usr/include/sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::enable_shared_cache	/usr/include/sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::errcode	/usr/include/sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::errmsg	/usr/include/sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::errmsg16	/usr/include/sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::exec	/usr/include/sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::expired	/usr/include/sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::extended_result_codes	/usr/include/sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::file_control	/usr/include/sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::finalize	/usr/include/sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::free	/usr/include/sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::free_table	/usr/include/sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::get_autocommit	/usr/include/sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::get_auxdata	/usr/include/sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::get_table	/usr/include/sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::global_recover	/usr/include/sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::interruptx	/usr/include/sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::last_insert_rowid	/usr/include/sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::libversion	/usr/include/sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::libversion_number	/usr/include/sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::limit	/usr/include/sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::malloc	/usr/include/sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::memory_highwater	/usr/include/sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::memory_used	/usr/include/sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::mprintf	/usr/include/sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::mutex_alloc	/usr/include/sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::mutex_enter	/usr/include/sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::mutex_free	/usr/include/sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::mutex_leave	/usr/include/sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::mutex_try	/usr/include/sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::next_stmt	/usr/include/sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::open	/usr/include/sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::open16	/usr/include/sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::open_v2	/usr/include/sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::overload_function	/usr/include/sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::prepare	/usr/include/sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::prepare16	/usr/include/sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::prepare16_v2	/usr/include/sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::prepare_v2	/usr/include/sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::profile	/usr/include/sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::progress_handler	/usr/include/sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::randomness	/usr/include/sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::realloc	/usr/include/sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::release_memory	/usr/include/sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::reset	/usr/include/sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_blob	/usr/include/sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_double	/usr/include/sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_error	/usr/include/sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_error16	/usr/include/sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_error_code	/usr/include/sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_error_nomem	/usr/include/sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_error_toobig	/usr/include/sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_int	/usr/include/sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_int64	/usr/include/sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_null	/usr/include/sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_text	/usr/include/sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_text16	/usr/include/sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_text16be	/usr/include/sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_text16le	/usr/include/sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_value	/usr/include/sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::result_zeroblob	/usr/include/sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::rollback_hook	/usr/include/sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::set_authorizer	/usr/include/sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,const char*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::set_auxdata	/usr/include/sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::sleep	/usr/include/sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::snprintf	/usr/include/sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::soft_heap_limit	/usr/include/sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::sql	/usr/include/sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::status	/usr/include/sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::step	/usr/include/sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::table_column_metadata	/usr/include/sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,char const**,char const**,int*,int*,int*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::test_control	/usr/include/sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::thread_cleanup	/usr/include/sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::total_changes	/usr/include/sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::trace	/usr/include/sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::transfer_bindings	/usr/include/sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::update_hook	/usr/include/sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,sqlite_int64),void*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::user_data	/usr/include/sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_blob	/usr/include/sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_bytes	/usr/include/sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_bytes16	/usr/include/sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_double	/usr/include/sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_int	/usr/include/sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_int64	/usr/include/sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_numeric_type	/usr/include/sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_text	/usr/include/sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_text16	/usr/include/sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_text16be	/usr/include/sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_text16le	/usr/include/sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::value_type	/usr/include/sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::vfs_find	/usr/include/sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::vfs_register	/usr/include/sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::vfs_unregister	/usr/include/sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::vmprintf	/usr/include/sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_api_routines::xthreadsafe	/usr/include/sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	access:public
sqlite3_auto_extension	/usr/include/sqlite3.h	/^int sqlite3_auto_extension(void (*xEntryPoint)(void));$/;"	p	signature:(void (*xEntryPoint)(void))
sqlite3_backup	/usr/include/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup_finish	/usr/include/sqlite3.h	/^int sqlite3_backup_finish(sqlite3_backup *p);$/;"	p	signature:(sqlite3_backup *p)
sqlite3_backup_init	/usr/include/sqlite3.h	/^sqlite3_backup *sqlite3_backup_init($/;"	p	signature:( sqlite3 *pDest, const char *zDestName, sqlite3 *pSource, const char *zSourceName )
sqlite3_backup_pagecount	/usr/include/sqlite3.h	/^int sqlite3_backup_pagecount(sqlite3_backup *p);$/;"	p	signature:(sqlite3_backup *p)
sqlite3_backup_remaining	/usr/include/sqlite3.h	/^int sqlite3_backup_remaining(sqlite3_backup *p);$/;"	p	signature:(sqlite3_backup *p)
sqlite3_backup_step	/usr/include/sqlite3.h	/^int sqlite3_backup_step(sqlite3_backup *p, int nPage);$/;"	p	signature:(sqlite3_backup *p, int nPage)
sqlite3_bind_blob	/usr/include/sqlite3.h	/^int sqlite3_bind_blob(sqlite3_stmt*, int, const void*, int n, void(*)(void*));$/;"	p	signature:(sqlite3_stmt*, int, const void*, int n, void(*)(void*))
sqlite3_bind_blob	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_blob /;"	d
sqlite3_bind_double	/usr/include/sqlite3.h	/^int sqlite3_bind_double(sqlite3_stmt*, int, double);$/;"	p	signature:(sqlite3_stmt*, int, double)
sqlite3_bind_double	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_double /;"	d
sqlite3_bind_int	/usr/include/sqlite3.h	/^int sqlite3_bind_int(sqlite3_stmt*, int, int);$/;"	p	signature:(sqlite3_stmt*, int, int)
sqlite3_bind_int	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_int /;"	d
sqlite3_bind_int64	/usr/include/sqlite3.h	/^int sqlite3_bind_int64(sqlite3_stmt*, int, sqlite3_int64);$/;"	p	signature:(sqlite3_stmt*, int, sqlite3_int64)
sqlite3_bind_int64	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_int64 /;"	d
sqlite3_bind_null	/usr/include/sqlite3.h	/^int sqlite3_bind_null(sqlite3_stmt*, int);$/;"	p	signature:(sqlite3_stmt*, int)
sqlite3_bind_null	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_null /;"	d
sqlite3_bind_parameter_count	/usr/include/sqlite3.h	/^int sqlite3_bind_parameter_count(sqlite3_stmt*);$/;"	p	signature:(sqlite3_stmt*)
sqlite3_bind_parameter_count	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_parameter_count /;"	d
sqlite3_bind_parameter_index	/usr/include/sqlite3.h	/^int sqlite3_bind_parameter_index(sqlite3_stmt*, const char *zName);$/;"	p	signature:(sqlite3_stmt*, const char *zName)
sqlite3_bind_parameter_index	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_parameter_index /;"	d
sqlite3_bind_parameter_name	/usr/include/sqlite3.h	/^const char *sqlite3_bind_parameter_name(sqlite3_stmt*, int);$/;"	p	signature:(sqlite3_stmt*, int)
sqlite3_bind_parameter_name	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_parameter_name /;"	d
sqlite3_bind_text	/usr/include/sqlite3.h	/^int sqlite3_bind_text(sqlite3_stmt*, int, const char*, int n, void(*)(void*));$/;"	p	signature:(sqlite3_stmt*, int, const char*, int n, void(*)(void*))
sqlite3_bind_text	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_text /;"	d
sqlite3_bind_text16	/usr/include/sqlite3.h	/^int sqlite3_bind_text16(sqlite3_stmt*, int, const void*, int, void(*)(void*));$/;"	p	signature:(sqlite3_stmt*, int, const void*, int, void(*)(void*))
sqlite3_bind_text16	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_text16 /;"	d
sqlite3_bind_value	/usr/include/sqlite3.h	/^int sqlite3_bind_value(sqlite3_stmt*, int, const sqlite3_value*);$/;"	p	signature:(sqlite3_stmt*, int, const sqlite3_value*)
sqlite3_bind_value	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_value /;"	d
sqlite3_bind_zeroblob	/usr/include/sqlite3.h	/^int sqlite3_bind_zeroblob(sqlite3_stmt*, int, int n);$/;"	p	signature:(sqlite3_stmt*, int, int n)
sqlite3_bind_zeroblob	/usr/include/sqlite3ext.h	/^#define sqlite3_bind_zeroblob /;"	d
sqlite3_blob	/usr/include/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob_bytes	/usr/include/sqlite3.h	/^int sqlite3_blob_bytes(sqlite3_blob *);$/;"	p	signature:(sqlite3_blob *)
sqlite3_blob_bytes	/usr/include/sqlite3ext.h	/^#define sqlite3_blob_bytes /;"	d
sqlite3_blob_close	/usr/include/sqlite3.h	/^int sqlite3_blob_close(sqlite3_blob *);$/;"	p	signature:(sqlite3_blob *)
sqlite3_blob_close	/usr/include/sqlite3ext.h	/^#define sqlite3_blob_close /;"	d
sqlite3_blob_open	/usr/include/sqlite3.h	/^int sqlite3_blob_open($/;"	p	signature:( sqlite3*, const char *zDb, const char *zTable, const char *zColumn, sqlite3_int64 iRow, int flags, sqlite3_blob **ppBlob )
sqlite3_blob_open	/usr/include/sqlite3ext.h	/^#define sqlite3_blob_open /;"	d
sqlite3_blob_read	/usr/include/sqlite3.h	/^int sqlite3_blob_read(sqlite3_blob *, void *Z, int N, int iOffset);$/;"	p	signature:(sqlite3_blob *, void *Z, int N, int iOffset)
sqlite3_blob_read	/usr/include/sqlite3ext.h	/^#define sqlite3_blob_read /;"	d
sqlite3_blob_write	/usr/include/sqlite3.h	/^int sqlite3_blob_write(sqlite3_blob *, const void *z, int n, int iOffset);$/;"	p	signature:(sqlite3_blob *, const void *z, int n, int iOffset)
sqlite3_blob_write	/usr/include/sqlite3ext.h	/^#define sqlite3_blob_write /;"	d
sqlite3_busy_handler	/usr/include/sqlite3.h	/^int sqlite3_busy_handler(sqlite3*, int(*)(void*,int), void*);$/;"	p	signature:(sqlite3*, int(*)(void*,int), void*)
sqlite3_busy_handler	/usr/include/sqlite3ext.h	/^#define sqlite3_busy_handler /;"	d
sqlite3_busy_timeout	/usr/include/sqlite3.h	/^int sqlite3_busy_timeout(sqlite3*, int ms);$/;"	p	signature:(sqlite3*, int ms)
sqlite3_busy_timeout	/usr/include/sqlite3ext.h	/^#define sqlite3_busy_timeout /;"	d
sqlite3_callback	/usr/include/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_changes	/usr/include/sqlite3.h	/^int sqlite3_changes(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_changes	/usr/include/sqlite3ext.h	/^#define sqlite3_changes /;"	d
sqlite3_clear_bindings	/usr/include/sqlite3.h	/^int sqlite3_clear_bindings(sqlite3_stmt*);$/;"	p	signature:(sqlite3_stmt*)
sqlite3_clear_bindings	/usr/include/sqlite3ext.h	/^#define sqlite3_clear_bindings /;"	d
sqlite3_close	/usr/include/sqlite3.h	/^int sqlite3_close(sqlite3 *);$/;"	p	signature:(sqlite3 *)
sqlite3_close	/usr/include/sqlite3ext.h	/^#define sqlite3_close /;"	d
sqlite3_collation_needed	/usr/include/sqlite3.h	/^int sqlite3_collation_needed($/;"	p	signature:( sqlite3*, void*, void(*)(void*,sqlite3*,int eTextRep,const char*) )
sqlite3_collation_needed	/usr/include/sqlite3ext.h	/^#define sqlite3_collation_needed /;"	d
sqlite3_collation_needed16	/usr/include/sqlite3.h	/^int sqlite3_collation_needed16($/;"	p	signature:( sqlite3*, void*, void(*)(void*,sqlite3*,int eTextRep,const void*) )
sqlite3_collation_needed16	/usr/include/sqlite3ext.h	/^#define sqlite3_collation_needed16 /;"	d
sqlite3_column_blob	/usr/include/sqlite3.h	/^const void *sqlite3_column_blob(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_blob	/usr/include/sqlite3ext.h	/^#define sqlite3_column_blob /;"	d
sqlite3_column_bytes	/usr/include/sqlite3.h	/^int sqlite3_column_bytes(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_bytes	/usr/include/sqlite3ext.h	/^#define sqlite3_column_bytes /;"	d
sqlite3_column_bytes16	/usr/include/sqlite3.h	/^int sqlite3_column_bytes16(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_bytes16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_bytes16 /;"	d
sqlite3_column_count	/usr/include/sqlite3.h	/^int sqlite3_column_count(sqlite3_stmt *pStmt);$/;"	p	signature:(sqlite3_stmt *pStmt)
sqlite3_column_count	/usr/include/sqlite3ext.h	/^#define sqlite3_column_count /;"	d
sqlite3_column_database_name	/usr/include/sqlite3.h	/^const char *sqlite3_column_database_name(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_database_name	/usr/include/sqlite3ext.h	/^#define sqlite3_column_database_name /;"	d
sqlite3_column_database_name16	/usr/include/sqlite3.h	/^const void *sqlite3_column_database_name16(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_database_name16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_database_name16 /;"	d
sqlite3_column_decltype	/usr/include/sqlite3.h	/^const char *sqlite3_column_decltype(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_decltype	/usr/include/sqlite3ext.h	/^#define sqlite3_column_decltype /;"	d
sqlite3_column_decltype16	/usr/include/sqlite3.h	/^const void *sqlite3_column_decltype16(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_decltype16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_decltype16 /;"	d
sqlite3_column_double	/usr/include/sqlite3.h	/^double sqlite3_column_double(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_double	/usr/include/sqlite3ext.h	/^#define sqlite3_column_double /;"	d
sqlite3_column_int	/usr/include/sqlite3.h	/^int sqlite3_column_int(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_int	/usr/include/sqlite3ext.h	/^#define sqlite3_column_int /;"	d
sqlite3_column_int64	/usr/include/sqlite3.h	/^sqlite3_int64 sqlite3_column_int64(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_int64	/usr/include/sqlite3ext.h	/^#define sqlite3_column_int64 /;"	d
sqlite3_column_name	/usr/include/sqlite3.h	/^const char *sqlite3_column_name(sqlite3_stmt*, int N);$/;"	p	signature:(sqlite3_stmt*, int N)
sqlite3_column_name	/usr/include/sqlite3ext.h	/^#define sqlite3_column_name /;"	d
sqlite3_column_name16	/usr/include/sqlite3.h	/^const void *sqlite3_column_name16(sqlite3_stmt*, int N);$/;"	p	signature:(sqlite3_stmt*, int N)
sqlite3_column_name16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_name16 /;"	d
sqlite3_column_origin_name	/usr/include/sqlite3.h	/^const char *sqlite3_column_origin_name(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_origin_name	/usr/include/sqlite3ext.h	/^#define sqlite3_column_origin_name /;"	d
sqlite3_column_origin_name16	/usr/include/sqlite3.h	/^const void *sqlite3_column_origin_name16(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_origin_name16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_origin_name16 /;"	d
sqlite3_column_table_name	/usr/include/sqlite3.h	/^const char *sqlite3_column_table_name(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_table_name	/usr/include/sqlite3ext.h	/^#define sqlite3_column_table_name /;"	d
sqlite3_column_table_name16	/usr/include/sqlite3.h	/^const void *sqlite3_column_table_name16(sqlite3_stmt*,int);$/;"	p	signature:(sqlite3_stmt*,int)
sqlite3_column_table_name16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_table_name16 /;"	d
sqlite3_column_text	/usr/include/sqlite3.h	/^const unsigned char *sqlite3_column_text(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_text	/usr/include/sqlite3ext.h	/^#define sqlite3_column_text /;"	d
sqlite3_column_text16	/usr/include/sqlite3.h	/^const void *sqlite3_column_text16(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_text16	/usr/include/sqlite3ext.h	/^#define sqlite3_column_text16 /;"	d
sqlite3_column_type	/usr/include/sqlite3.h	/^int sqlite3_column_type(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_type	/usr/include/sqlite3ext.h	/^#define sqlite3_column_type /;"	d
sqlite3_column_value	/usr/include/sqlite3.h	/^sqlite3_value *sqlite3_column_value(sqlite3_stmt*, int iCol);$/;"	p	signature:(sqlite3_stmt*, int iCol)
sqlite3_column_value	/usr/include/sqlite3ext.h	/^#define sqlite3_column_value /;"	d
sqlite3_commit_hook	/usr/include/sqlite3.h	/^void *sqlite3_commit_hook(sqlite3*, int(*)(void*), void*);$/;"	p	signature:(sqlite3*, int(*)(void*), void*)
sqlite3_commit_hook	/usr/include/sqlite3ext.h	/^#define sqlite3_commit_hook /;"	d
sqlite3_complete	/usr/include/sqlite3.h	/^int sqlite3_complete(const char *sql);$/;"	p	signature:(const char *sql)
sqlite3_complete	/usr/include/sqlite3ext.h	/^#define sqlite3_complete /;"	d
sqlite3_complete16	/usr/include/sqlite3.h	/^int sqlite3_complete16(const void *sql);$/;"	p	signature:(const void *sql)
sqlite3_complete16	/usr/include/sqlite3ext.h	/^#define sqlite3_complete16 /;"	d
sqlite3_config	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_config(int, ...);$/;"	p	signature:(int, ...)
sqlite3_context	/usr/include/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context_db_handle	/usr/include/sqlite3.h	/^sqlite3 *sqlite3_context_db_handle(sqlite3_context*);$/;"	p	signature:(sqlite3_context*)
sqlite3_context_db_handle	/usr/include/sqlite3ext.h	/^#define sqlite3_context_db_handle /;"	d
sqlite3_create_collation	/usr/include/sqlite3.h	/^int sqlite3_create_collation($/;"	p	signature:( sqlite3*, const char *zName, int eTextRep, void*, int(*xCompare)(void*,int,const void*,int,const void*) )
sqlite3_create_collation	/usr/include/sqlite3ext.h	/^#define sqlite3_create_collation /;"	d
sqlite3_create_collation16	/usr/include/sqlite3.h	/^int sqlite3_create_collation16($/;"	p	signature:( sqlite3*, const void *zName, int eTextRep, void*, int(*xCompare)(void*,int,const void*,int,const void*) )
sqlite3_create_collation16	/usr/include/sqlite3ext.h	/^#define sqlite3_create_collation16 /;"	d
sqlite3_create_collation_v2	/usr/include/sqlite3.h	/^int sqlite3_create_collation_v2($/;"	p	signature:( sqlite3*, const char *zName, int eTextRep, void*, int(*xCompare)(void*,int,const void*,int,const void*), void(*xDestroy)(void*) )
sqlite3_create_collation_v2	/usr/include/sqlite3ext.h	/^#define sqlite3_create_collation_v2 /;"	d
sqlite3_create_function	/usr/include/sqlite3.h	/^int sqlite3_create_function($/;"	p	signature:( sqlite3 *db, const char *zFunctionName, int nArg, int eTextRep, void *pApp, void (*xFunc)(sqlite3_context*,int,sqlite3_value**), void (*xStep)(sqlite3_context*,int,sqlite3_value**), void (*xFinal)(sqlite3_context*) )
sqlite3_create_function	/usr/include/sqlite3ext.h	/^#define sqlite3_create_function /;"	d
sqlite3_create_function16	/usr/include/sqlite3.h	/^int sqlite3_create_function16($/;"	p	signature:( sqlite3 *db, const void *zFunctionName, int nArg, int eTextRep, void *pApp, void (*xFunc)(sqlite3_context*,int,sqlite3_value**), void (*xStep)(sqlite3_context*,int,sqlite3_value**), void (*xFinal)(sqlite3_context*) )
sqlite3_create_function16	/usr/include/sqlite3ext.h	/^#define sqlite3_create_function16 /;"	d
sqlite3_create_module	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_create_module($/;"	p	signature:( sqlite3 *db, const char *zName, const sqlite3_module *, void * )
sqlite3_create_module	/usr/include/sqlite3ext.h	/^#define sqlite3_create_module /;"	d
sqlite3_create_module_v2	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_create_module_v2($/;"	p	signature:( sqlite3 *db, const char *zName, const sqlite3_module *, void *, void(*xDestroy)(void*) )
sqlite3_create_module_v2	/usr/include/sqlite3ext.h	/^#define sqlite3_create_module_v2 /;"	d
sqlite3_data_count	/usr/include/sqlite3.h	/^int sqlite3_data_count(sqlite3_stmt *pStmt);$/;"	p	signature:(sqlite3_stmt *pStmt)
sqlite3_data_count	/usr/include/sqlite3ext.h	/^#define sqlite3_data_count /;"	d
sqlite3_db_config	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_db_config(sqlite3*, int op, ...);$/;"	p	signature:(sqlite3*, int op, ...)
sqlite3_db_handle	/usr/include/sqlite3.h	/^sqlite3 *sqlite3_db_handle(sqlite3_stmt*);$/;"	p	signature:(sqlite3_stmt*)
sqlite3_db_handle	/usr/include/sqlite3ext.h	/^#define sqlite3_db_handle /;"	d
sqlite3_db_mutex	/usr/include/sqlite3.h	/^sqlite3_mutex *sqlite3_db_mutex(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_db_status	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_db_status(sqlite3*, int op, int *pCur, int *pHiwtr, int resetFlg);$/;"	p	signature:(sqlite3*, int op, int *pCur, int *pHiwtr, int resetFlg)
sqlite3_declare_vtab	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_declare_vtab(sqlite3*, const char *zCreateTable);$/;"	p	signature:(sqlite3*, const char *zCreateTable)
sqlite3_declare_vtab	/usr/include/sqlite3ext.h	/^#define sqlite3_declare_vtab /;"	d
sqlite3_destructor_type	/usr/include/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_enable_load_extension	/usr/include/sqlite3.h	/^int sqlite3_enable_load_extension(sqlite3 *db, int onoff);$/;"	p	signature:(sqlite3 *db, int onoff)
sqlite3_enable_shared_cache	/usr/include/sqlite3.h	/^int sqlite3_enable_shared_cache(int);$/;"	p	signature:(int)
sqlite3_enable_shared_cache	/usr/include/sqlite3ext.h	/^#define sqlite3_enable_shared_cache /;"	d
sqlite3_errcode	/usr/include/sqlite3.h	/^int sqlite3_errcode(sqlite3 *db);$/;"	p	signature:(sqlite3 *db)
sqlite3_errcode	/usr/include/sqlite3ext.h	/^#define sqlite3_errcode /;"	d
sqlite3_errmsg	/usr/include/sqlite3.h	/^const char *sqlite3_errmsg(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_errmsg	/usr/include/sqlite3ext.h	/^#define sqlite3_errmsg /;"	d
sqlite3_errmsg16	/usr/include/sqlite3.h	/^const void *sqlite3_errmsg16(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_errmsg16	/usr/include/sqlite3ext.h	/^#define sqlite3_errmsg16 /;"	d
sqlite3_exec	/usr/include/sqlite3.h	/^int sqlite3_exec($/;"	p	signature:( sqlite3*, const char *sql, int (*callback)(void*,int,char**,char**), void *, char **errmsg )
sqlite3_exec	/usr/include/sqlite3ext.h	/^#define sqlite3_exec /;"	d
sqlite3_expired	/usr/include/sqlite3.h	/^SQLITE_DEPRECATED int sqlite3_expired(sqlite3_stmt*);$/;"	p	signature:(sqlite3_stmt*)
sqlite3_expired	/usr/include/sqlite3ext.h	/^#define sqlite3_expired /;"	d
sqlite3_extended_errcode	/usr/include/sqlite3.h	/^int sqlite3_extended_errcode(sqlite3 *db);$/;"	p	signature:(sqlite3 *db)
sqlite3_extended_result_codes	/usr/include/sqlite3.h	/^int sqlite3_extended_result_codes(sqlite3*, int onoff);$/;"	p	signature:(sqlite3*, int onoff)
sqlite3_extended_result_codes	/usr/include/sqlite3ext.h	/^#define sqlite3_extended_result_codes /;"	d
sqlite3_file	/usr/include/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	/usr/include/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file::pMethods	/usr/include/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	access:public
sqlite3_file_control	/usr/include/sqlite3.h	/^int sqlite3_file_control(sqlite3*, const char *zDbName, int op, void*);$/;"	p	signature:(sqlite3*, const char *zDbName, int op, void*)
sqlite3_file_control	/usr/include/sqlite3ext.h	/^#define sqlite3_file_control /;"	d
sqlite3_finalize	/usr/include/sqlite3.h	/^int sqlite3_finalize(sqlite3_stmt *pStmt);$/;"	p	signature:(sqlite3_stmt *pStmt)
sqlite3_finalize	/usr/include/sqlite3ext.h	/^#define sqlite3_finalize /;"	d
sqlite3_free	/usr/include/sqlite3.h	/^void sqlite3_free(void*);$/;"	p	signature:(void*)
sqlite3_free	/usr/include/sqlite3ext.h	/^#define sqlite3_free /;"	d
sqlite3_free_table	/usr/include/sqlite3.h	/^void sqlite3_free_table(char **result);$/;"	p	signature:(char **result)
sqlite3_free_table	/usr/include/sqlite3ext.h	/^#define sqlite3_free_table /;"	d
sqlite3_get_autocommit	/usr/include/sqlite3.h	/^int sqlite3_get_autocommit(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_get_autocommit	/usr/include/sqlite3ext.h	/^#define sqlite3_get_autocommit /;"	d
sqlite3_get_auxdata	/usr/include/sqlite3.h	/^void *sqlite3_get_auxdata(sqlite3_context*, int N);$/;"	p	signature:(sqlite3_context*, int N)
sqlite3_get_auxdata	/usr/include/sqlite3ext.h	/^#define sqlite3_get_auxdata /;"	d
sqlite3_get_table	/usr/include/sqlite3.h	/^int sqlite3_get_table($/;"	p	signature:( sqlite3 *db, const char *zSql, char ***pazResult, int *pnRow, int *pnColumn, char **pzErrmsg )
sqlite3_get_table	/usr/include/sqlite3ext.h	/^#define sqlite3_get_table /;"	d
sqlite3_global_recover	/usr/include/sqlite3.h	/^SQLITE_DEPRECATED int sqlite3_global_recover(void);$/;"	p	signature:(void)
sqlite3_global_recover	/usr/include/sqlite3ext.h	/^#define sqlite3_global_recover /;"	d
sqlite3_index_constraint	/usr/include/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	access:public
sqlite3_index_constraint_usage	/usr/include/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	access:public
sqlite3_index_info	/usr/include/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	/usr/include/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_info::aConstraint	/usr/include/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	access:public
sqlite3_index_info::aConstraintUsage	/usr/include/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	access:public
sqlite3_index_info::aOrderBy	/usr/include/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	access:public
sqlite3_index_info::estimatedCost	/usr/include/sqlite3.h	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::idxNum	/usr/include/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::idxStr	/usr/include/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::nConstraint	/usr/include/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::nOrderBy	/usr/include/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::needToFreeIdxStr	/usr/include/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::orderByConsumed	/usr/include/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	access:public
sqlite3_index_info::sqlite3_index_constraint	/usr/include/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	access:public
sqlite3_index_info::sqlite3_index_constraint::iColumn	/usr/include/sqlite3.h	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
sqlite3_index_info::sqlite3_index_constraint::iTermOffset	/usr/include/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
sqlite3_index_info::sqlite3_index_constraint::op	/usr/include/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
sqlite3_index_info::sqlite3_index_constraint::usable	/usr/include/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
sqlite3_index_info::sqlite3_index_constraint_usage	/usr/include/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	access:public
sqlite3_index_info::sqlite3_index_constraint_usage::argvIndex	/usr/include/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	access:public
sqlite3_index_info::sqlite3_index_constraint_usage::omit	/usr/include/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	access:public
sqlite3_index_info::sqlite3_index_orderby	/usr/include/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	access:public
sqlite3_index_info::sqlite3_index_orderby::desc	/usr/include/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	access:public
sqlite3_index_info::sqlite3_index_orderby::iColumn	/usr/include/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	access:public
sqlite3_index_orderby	/usr/include/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	access:public
sqlite3_initialize	/usr/include/sqlite3.h	/^int sqlite3_initialize(void);$/;"	p	signature:(void)
sqlite3_int64	/usr/include/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_interrupt	/usr/include/sqlite3.h	/^void sqlite3_interrupt(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_interrupt	/usr/include/sqlite3ext.h	/^#define sqlite3_interrupt /;"	d
sqlite3_io_methods	/usr/include/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	/usr/include/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_io_methods::iVersion	/usr/include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xCheckReservedLock	/usr/include/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xClose	/usr/include/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xDeviceCharacteristics	/usr/include/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xFileControl	/usr/include/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xFileSize	/usr/include/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xLock	/usr/include/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xRead	/usr/include/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xSectorSize	/usr/include/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xSync	/usr/include/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xTruncate	/usr/include/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xUnlock	/usr/include/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_io_methods::xWrite	/usr/include/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	access:public
sqlite3_key	/usr/include/sqlite3.h	/^int sqlite3_key($/;"	p	signature:( sqlite3 *db, const void *pKey, int nKey )
sqlite3_last_insert_rowid	/usr/include/sqlite3.h	/^sqlite3_int64 sqlite3_last_insert_rowid(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_last_insert_rowid	/usr/include/sqlite3ext.h	/^#define sqlite3_last_insert_rowid /;"	d
sqlite3_libversion	/usr/include/sqlite3.h	/^const char *sqlite3_libversion(void);$/;"	p	signature:(void)
sqlite3_libversion	/usr/include/sqlite3ext.h	/^#define sqlite3_libversion /;"	d
sqlite3_libversion_number	/usr/include/sqlite3.h	/^int sqlite3_libversion_number(void);$/;"	p	signature:(void)
sqlite3_libversion_number	/usr/include/sqlite3ext.h	/^#define sqlite3_libversion_number /;"	d
sqlite3_limit	/usr/include/sqlite3.h	/^int sqlite3_limit(sqlite3*, int id, int newVal);$/;"	p	signature:(sqlite3*, int id, int newVal)
sqlite3_limit	/usr/include/sqlite3ext.h	/^#define sqlite3_limit /;"	d
sqlite3_load_extension	/usr/include/sqlite3.h	/^int sqlite3_load_extension($/;"	p	signature:( sqlite3 *db, const char *zFile, const char *zProc, char **pzErrMsg )
sqlite3_malloc	/usr/include/sqlite3.h	/^void *sqlite3_malloc(int);$/;"	p	signature:(int)
sqlite3_malloc	/usr/include/sqlite3ext.h	/^#define sqlite3_malloc /;"	d
sqlite3_mem_methods	/usr/include/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	/usr/include/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_mem_methods::pAppData	/usr/include/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xFree	/usr/include/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xInit	/usr/include/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xMalloc	/usr/include/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xRealloc	/usr/include/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xRoundup	/usr/include/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xShutdown	/usr/include/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_mem_methods::xSize	/usr/include/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	access:public
sqlite3_memory_alarm	/usr/include/sqlite3.h	/^SQLITE_DEPRECATED int sqlite3_memory_alarm(void(*)(void*,sqlite3_int64,int),void*,sqlite3_int64);$/;"	p	signature:(void(*)(void*,sqlite3_int64,int),void*,sqlite3_int64)
sqlite3_memory_highwater	/usr/include/sqlite3.h	/^sqlite3_int64 sqlite3_memory_highwater(int resetFlag);$/;"	p	signature:(int resetFlag)
sqlite3_memory_highwater	/usr/include/sqlite3ext.h	/^#define sqlite3_memory_highwater /;"	d
sqlite3_memory_used	/usr/include/sqlite3.h	/^sqlite3_int64 sqlite3_memory_used(void);$/;"	p	signature:(void)
sqlite3_memory_used	/usr/include/sqlite3ext.h	/^#define sqlite3_memory_used /;"	d
sqlite3_module	/usr/include/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	/usr/include/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_module::iVersion	/usr/include/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xBegin	/usr/include/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xBestIndex	/usr/include/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xClose	/usr/include/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xColumn	/usr/include/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xCommit	/usr/include/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xConnect	/usr/include/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xCreate	/usr/include/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xDestroy	/usr/include/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xDisconnect	/usr/include/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xEof	/usr/include/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xFilter	/usr/include/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xFindFunction	/usr/include/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xNext	/usr/include/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xOpen	/usr/include/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xRename	/usr/include/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xRollback	/usr/include/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xRowid	/usr/include/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xSync	/usr/include/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
sqlite3_module::xUpdate	/usr/include/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	access:public
sqlite3_mprintf	/usr/include/sqlite3.h	/^char *sqlite3_mprintf(const char*,...);$/;"	p	signature:(const char*,...)
sqlite3_mprintf	/usr/include/sqlite3ext.h	/^#define sqlite3_mprintf /;"	d
sqlite3_mutex	/usr/include/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_alloc	/usr/include/sqlite3.h	/^sqlite3_mutex *sqlite3_mutex_alloc(int);$/;"	p	signature:(int)
sqlite3_mutex_alloc	/usr/include/sqlite3ext.h	/^#define sqlite3_mutex_alloc /;"	d
sqlite3_mutex_enter	/usr/include/sqlite3.h	/^void sqlite3_mutex_enter(sqlite3_mutex*);$/;"	p	signature:(sqlite3_mutex*)
sqlite3_mutex_enter	/usr/include/sqlite3ext.h	/^#define sqlite3_mutex_enter /;"	d
sqlite3_mutex_free	/usr/include/sqlite3.h	/^void sqlite3_mutex_free(sqlite3_mutex*);$/;"	p	signature:(sqlite3_mutex*)
sqlite3_mutex_free	/usr/include/sqlite3ext.h	/^#define sqlite3_mutex_free /;"	d
sqlite3_mutex_held	/usr/include/sqlite3.h	/^int sqlite3_mutex_held(sqlite3_mutex*);$/;"	p	signature:(sqlite3_mutex*)
sqlite3_mutex_leave	/usr/include/sqlite3.h	/^void sqlite3_mutex_leave(sqlite3_mutex*);$/;"	p	signature:(sqlite3_mutex*)
sqlite3_mutex_leave	/usr/include/sqlite3ext.h	/^#define sqlite3_mutex_leave /;"	d
sqlite3_mutex_methods	/usr/include/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	/usr/include/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_methods::xMutexAlloc	/usr/include/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexEnd	/usr/include/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexEnter	/usr/include/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexFree	/usr/include/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexHeld	/usr/include/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexInit	/usr/include/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexLeave	/usr/include/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexNotheld	/usr/include/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_methods::xMutexTry	/usr/include/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
sqlite3_mutex_notheld	/usr/include/sqlite3.h	/^int sqlite3_mutex_notheld(sqlite3_mutex*);$/;"	p	signature:(sqlite3_mutex*)
sqlite3_mutex_try	/usr/include/sqlite3.h	/^int sqlite3_mutex_try(sqlite3_mutex*);$/;"	p	signature:(sqlite3_mutex*)
sqlite3_mutex_try	/usr/include/sqlite3ext.h	/^#define sqlite3_mutex_try /;"	d
sqlite3_next_stmt	/usr/include/sqlite3.h	/^sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt);$/;"	p	signature:(sqlite3 *pDb, sqlite3_stmt *pStmt)
sqlite3_next_stmt	/usr/include/sqlite3ext.h	/^#define sqlite3_next_stmt /;"	d
sqlite3_open	/usr/include/sqlite3.h	/^int sqlite3_open($/;"	p	signature:( const char *filename, sqlite3 **ppDb )
sqlite3_open	/usr/include/sqlite3ext.h	/^#define sqlite3_open /;"	d
sqlite3_open16	/usr/include/sqlite3.h	/^int sqlite3_open16($/;"	p	signature:( const void *filename, sqlite3 **ppDb )
sqlite3_open16	/usr/include/sqlite3ext.h	/^#define sqlite3_open16 /;"	d
sqlite3_open_v2	/usr/include/sqlite3.h	/^int sqlite3_open_v2($/;"	p	signature:( const char *filename, sqlite3 **ppDb, int flags, const char *zVfs )
sqlite3_open_v2	/usr/include/sqlite3ext.h	/^#define sqlite3_open_v2 /;"	d
sqlite3_os_end	/usr/include/sqlite3.h	/^int sqlite3_os_end(void);$/;"	p	signature:(void)
sqlite3_os_init	/usr/include/sqlite3.h	/^int sqlite3_os_init(void);$/;"	p	signature:(void)
sqlite3_overload_function	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_overload_function(sqlite3*, const char *zFuncName, int nArg);$/;"	p	signature:(sqlite3*, const char *zFuncName, int nArg)
sqlite3_overload_function	/usr/include/sqlite3ext.h	/^#define sqlite3_overload_function /;"	d
sqlite3_pcache	/usr/include/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	/usr/include/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	/usr/include/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods::pArg	/usr/include/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xCachesize	/usr/include/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xCreate	/usr/include/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xDestroy	/usr/include/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xFetch	/usr/include/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xInit	/usr/include/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xPagecount	/usr/include/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xRekey	/usr/include/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xShutdown	/usr/include/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xTruncate	/usr/include/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_pcache_methods::xUnpin	/usr/include/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	access:public
sqlite3_prepare	/usr/include/sqlite3.h	/^int sqlite3_prepare($/;"	p	signature:( sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail )
sqlite3_prepare	/usr/include/sqlite3ext.h	/^#define sqlite3_prepare /;"	d
sqlite3_prepare16	/usr/include/sqlite3.h	/^int sqlite3_prepare16($/;"	p	signature:( sqlite3 *db, const void *zSql, int nByte, sqlite3_stmt **ppStmt, const void **pzTail )
sqlite3_prepare16	/usr/include/sqlite3ext.h	/^#define sqlite3_prepare16 /;"	d
sqlite3_prepare16_v2	/usr/include/sqlite3.h	/^int sqlite3_prepare16_v2($/;"	p	signature:( sqlite3 *db, const void *zSql, int nByte, sqlite3_stmt **ppStmt, const void **pzTail )
sqlite3_prepare16_v2	/usr/include/sqlite3ext.h	/^#define sqlite3_prepare16_v2 /;"	d
sqlite3_prepare_v2	/usr/include/sqlite3.h	/^int sqlite3_prepare_v2($/;"	p	signature:( sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail )
sqlite3_prepare_v2	/usr/include/sqlite3ext.h	/^#define sqlite3_prepare_v2 /;"	d
sqlite3_profile	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL void *sqlite3_profile(sqlite3*,$/;"	p	signature:(sqlite3*, void(*xProfile)(void*,const char*,sqlite3_uint64), void*)
sqlite3_profile	/usr/include/sqlite3ext.h	/^#define sqlite3_profile /;"	d
sqlite3_progress_handler	/usr/include/sqlite3.h	/^void sqlite3_progress_handler(sqlite3*, int, int(*)(void*), void*);$/;"	p	signature:(sqlite3*, int, int(*)(void*), void*)
sqlite3_progress_handler	/usr/include/sqlite3ext.h	/^#define sqlite3_progress_handler /;"	d
sqlite3_randomness	/usr/include/sqlite3.h	/^void sqlite3_randomness(int N, void *P);$/;"	p	signature:(int N, void *P)
sqlite3_randomness	/usr/include/sqlite3ext.h	/^#define sqlite3_randomness /;"	d
sqlite3_realloc	/usr/include/sqlite3.h	/^void *sqlite3_realloc(void*, int);$/;"	p	signature:(void*, int)
sqlite3_realloc	/usr/include/sqlite3ext.h	/^#define sqlite3_realloc /;"	d
sqlite3_rekey	/usr/include/sqlite3.h	/^int sqlite3_rekey($/;"	p	signature:( sqlite3 *db, const void *pKey, int nKey )
sqlite3_release_memory	/usr/include/sqlite3.h	/^int sqlite3_release_memory(int);$/;"	p	signature:(int)
sqlite3_release_memory	/usr/include/sqlite3ext.h	/^#define sqlite3_release_memory /;"	d
sqlite3_reset	/usr/include/sqlite3.h	/^int sqlite3_reset(sqlite3_stmt *pStmt);$/;"	p	signature:(sqlite3_stmt *pStmt)
sqlite3_reset	/usr/include/sqlite3ext.h	/^#define sqlite3_reset /;"	d
sqlite3_reset_auto_extension	/usr/include/sqlite3.h	/^void sqlite3_reset_auto_extension(void);$/;"	p	signature:(void)
sqlite3_result_blob	/usr/include/sqlite3.h	/^void sqlite3_result_blob(sqlite3_context*, const void*, int, void(*)(void*));$/;"	p	signature:(sqlite3_context*, const void*, int, void(*)(void*))
sqlite3_result_blob	/usr/include/sqlite3ext.h	/^#define sqlite3_result_blob /;"	d
sqlite3_result_double	/usr/include/sqlite3.h	/^void sqlite3_result_double(sqlite3_context*, double);$/;"	p	signature:(sqlite3_context*, double)
sqlite3_result_double	/usr/include/sqlite3ext.h	/^#define sqlite3_result_double /;"	d
sqlite3_result_error	/usr/include/sqlite3.h	/^void sqlite3_result_error(sqlite3_context*, const char*, int);$/;"	p	signature:(sqlite3_context*, const char*, int)
sqlite3_result_error	/usr/include/sqlite3ext.h	/^#define sqlite3_result_error /;"	d
sqlite3_result_error16	/usr/include/sqlite3.h	/^void sqlite3_result_error16(sqlite3_context*, const void*, int);$/;"	p	signature:(sqlite3_context*, const void*, int)
sqlite3_result_error16	/usr/include/sqlite3ext.h	/^#define sqlite3_result_error16 /;"	d
sqlite3_result_error_code	/usr/include/sqlite3.h	/^void sqlite3_result_error_code(sqlite3_context*, int);$/;"	p	signature:(sqlite3_context*, int)
sqlite3_result_error_code	/usr/include/sqlite3ext.h	/^#define sqlite3_result_error_code /;"	d
sqlite3_result_error_nomem	/usr/include/sqlite3.h	/^void sqlite3_result_error_nomem(sqlite3_context*);$/;"	p	signature:(sqlite3_context*)
sqlite3_result_error_nomem	/usr/include/sqlite3ext.h	/^#define sqlite3_result_error_nomem /;"	d
sqlite3_result_error_toobig	/usr/include/sqlite3.h	/^void sqlite3_result_error_toobig(sqlite3_context*);$/;"	p	signature:(sqlite3_context*)
sqlite3_result_error_toobig	/usr/include/sqlite3ext.h	/^#define sqlite3_result_error_toobig /;"	d
sqlite3_result_int	/usr/include/sqlite3.h	/^void sqlite3_result_int(sqlite3_context*, int);$/;"	p	signature:(sqlite3_context*, int)
sqlite3_result_int	/usr/include/sqlite3ext.h	/^#define sqlite3_result_int /;"	d
sqlite3_result_int64	/usr/include/sqlite3.h	/^void sqlite3_result_int64(sqlite3_context*, sqlite3_int64);$/;"	p	signature:(sqlite3_context*, sqlite3_int64)
sqlite3_result_int64	/usr/include/sqlite3ext.h	/^#define sqlite3_result_int64 /;"	d
sqlite3_result_null	/usr/include/sqlite3.h	/^void sqlite3_result_null(sqlite3_context*);$/;"	p	signature:(sqlite3_context*)
sqlite3_result_null	/usr/include/sqlite3ext.h	/^#define sqlite3_result_null /;"	d
sqlite3_result_text	/usr/include/sqlite3.h	/^void sqlite3_result_text(sqlite3_context*, const char*, int, void(*)(void*));$/;"	p	signature:(sqlite3_context*, const char*, int, void(*)(void*))
sqlite3_result_text	/usr/include/sqlite3ext.h	/^#define sqlite3_result_text /;"	d
sqlite3_result_text16	/usr/include/sqlite3.h	/^void sqlite3_result_text16(sqlite3_context*, const void*, int, void(*)(void*));$/;"	p	signature:(sqlite3_context*, const void*, int, void(*)(void*))
sqlite3_result_text16	/usr/include/sqlite3ext.h	/^#define sqlite3_result_text16 /;"	d
sqlite3_result_text16be	/usr/include/sqlite3.h	/^void sqlite3_result_text16be(sqlite3_context*, const void*, int,void(*)(void*));$/;"	p	signature:(sqlite3_context*, const void*, int,void(*)(void*))
sqlite3_result_text16be	/usr/include/sqlite3ext.h	/^#define sqlite3_result_text16be /;"	d
sqlite3_result_text16le	/usr/include/sqlite3.h	/^void sqlite3_result_text16le(sqlite3_context*, const void*, int,void(*)(void*));$/;"	p	signature:(sqlite3_context*, const void*, int,void(*)(void*))
sqlite3_result_text16le	/usr/include/sqlite3ext.h	/^#define sqlite3_result_text16le /;"	d
sqlite3_result_value	/usr/include/sqlite3.h	/^void sqlite3_result_value(sqlite3_context*, sqlite3_value*);$/;"	p	signature:(sqlite3_context*, sqlite3_value*)
sqlite3_result_value	/usr/include/sqlite3ext.h	/^#define sqlite3_result_value /;"	d
sqlite3_result_zeroblob	/usr/include/sqlite3.h	/^void sqlite3_result_zeroblob(sqlite3_context*, int n);$/;"	p	signature:(sqlite3_context*, int n)
sqlite3_result_zeroblob	/usr/include/sqlite3ext.h	/^#define sqlite3_result_zeroblob /;"	d
sqlite3_rollback_hook	/usr/include/sqlite3.h	/^void *sqlite3_rollback_hook(sqlite3*, void(*)(void *), void*);$/;"	p	signature:(sqlite3*, void(*)(void *), void*)
sqlite3_rollback_hook	/usr/include/sqlite3ext.h	/^#define sqlite3_rollback_hook /;"	d
sqlite3_set_authorizer	/usr/include/sqlite3.h	/^int sqlite3_set_authorizer($/;"	p	signature:( sqlite3*, int (*xAuth)(void*,int,const char*,const char*,const char*,const char*), void *pUserData )
sqlite3_set_authorizer	/usr/include/sqlite3ext.h	/^#define sqlite3_set_authorizer /;"	d
sqlite3_set_auxdata	/usr/include/sqlite3.h	/^void sqlite3_set_auxdata(sqlite3_context*, int N, void*, void (*)(void*));$/;"	p	signature:(sqlite3_context*, int N, void*, void (*)(void*))
sqlite3_set_auxdata	/usr/include/sqlite3ext.h	/^#define sqlite3_set_auxdata /;"	d
sqlite3_shutdown	/usr/include/sqlite3.h	/^int sqlite3_shutdown(void);$/;"	p	signature:(void)
sqlite3_sleep	/usr/include/sqlite3.h	/^int sqlite3_sleep(int);$/;"	p	signature:(int)
sqlite3_sleep	/usr/include/sqlite3ext.h	/^#define sqlite3_sleep /;"	d
sqlite3_snprintf	/usr/include/sqlite3.h	/^char *sqlite3_snprintf(int,char*,const char*, ...);$/;"	p	signature:(int,char*,const char*, ...)
sqlite3_snprintf	/usr/include/sqlite3ext.h	/^#define sqlite3_snprintf /;"	d
sqlite3_soft_heap_limit	/usr/include/sqlite3.h	/^void sqlite3_soft_heap_limit(int);$/;"	p	signature:(int)
sqlite3_soft_heap_limit	/usr/include/sqlite3ext.h	/^#define sqlite3_soft_heap_limit /;"	d
sqlite3_sql	/usr/include/sqlite3.h	/^const char *sqlite3_sql(sqlite3_stmt *pStmt);$/;"	p	signature:(sqlite3_stmt *pStmt)
sqlite3_sql	/usr/include/sqlite3ext.h	/^#define sqlite3_sql /;"	d
sqlite3_status	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag);$/;"	p	signature:(int op, int *pCurrent, int *pHighwater, int resetFlag)
sqlite3_status	/usr/include/sqlite3ext.h	/^#define sqlite3_status /;"	d
sqlite3_step	/usr/include/sqlite3.h	/^int sqlite3_step(sqlite3_stmt*);$/;"	p	signature:(sqlite3_stmt*)
sqlite3_step	/usr/include/sqlite3ext.h	/^#define sqlite3_step /;"	d
sqlite3_stmt	/usr/include/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt_status	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL int sqlite3_stmt_status(sqlite3_stmt*, int op,int resetFlg);$/;"	p	signature:(sqlite3_stmt*, int op,int resetFlg)
sqlite3_table_column_metadata	/usr/include/sqlite3.h	/^int sqlite3_table_column_metadata($/;"	p	signature:( sqlite3 *db, const char *zDbName, const char *zTableName, const char *zColumnName, char const **pzDataType, char const **pzCollSeq, int *pNotNull, int *pPrimaryKey, int *pAutoinc )
sqlite3_table_column_metadata	/usr/include/sqlite3ext.h	/^#define sqlite3_table_column_metadata /;"	d
sqlite3_temp_directory	/usr/include/sqlite3.h	/^SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	/usr/include/sqlite3.h	/^int sqlite3_test_control(int op, ...);$/;"	p	signature:(int op, ...)
sqlite3_test_control	/usr/include/sqlite3ext.h	/^#define sqlite3_test_control /;"	d
sqlite3_thread_cleanup	/usr/include/sqlite3.h	/^SQLITE_DEPRECATED void sqlite3_thread_cleanup(void);$/;"	p	signature:(void)
sqlite3_thread_cleanup	/usr/include/sqlite3ext.h	/^#define sqlite3_thread_cleanup /;"	d
sqlite3_threadsafe	/usr/include/sqlite3.h	/^int sqlite3_threadsafe(void);$/;"	p	signature:(void)
sqlite3_threadsafe	/usr/include/sqlite3ext.h	/^#define sqlite3_threadsafe /;"	d
sqlite3_total_changes	/usr/include/sqlite3.h	/^int sqlite3_total_changes(sqlite3*);$/;"	p	signature:(sqlite3*)
sqlite3_total_changes	/usr/include/sqlite3ext.h	/^#define sqlite3_total_changes /;"	d
sqlite3_trace	/usr/include/sqlite3.h	/^SQLITE_EXPERIMENTAL void *sqlite3_trace(sqlite3*, void(*xTrace)(void*,const char*), void*);$/;"	p	signature:(sqlite3*, void(*xTrace)(void*,const char*), void*)
sqlite3_trace	/usr/include/sqlite3ext.h	/^#define sqlite3_trace /;"	d
sqlite3_transfer_bindings	/usr/include/sqlite3.h	/^SQLITE_DEPRECATED int sqlite3_transfer_bindings(sqlite3_stmt*, sqlite3_stmt*);$/;"	p	signature:(sqlite3_stmt*, sqlite3_stmt*)
sqlite3_transfer_bindings	/usr/include/sqlite3ext.h	/^#define sqlite3_transfer_bindings /;"	d
sqlite3_uint64	/usr/include/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_unlock_notify	/usr/include/sqlite3.h	/^int sqlite3_unlock_notify($/;"	p	signature:( sqlite3 *pBlocked, void (*xNotify)(void **apArg, int nArg), void *pNotifyArg )
sqlite3_update_hook	/usr/include/sqlite3.h	/^void *sqlite3_update_hook($/;"	p	signature:( sqlite3*, void(*)(void *,int ,char const *,char const *,sqlite3_int64), void* )
sqlite3_update_hook	/usr/include/sqlite3ext.h	/^#define sqlite3_update_hook /;"	d
sqlite3_user_data	/usr/include/sqlite3.h	/^void *sqlite3_user_data(sqlite3_context*);$/;"	p	signature:(sqlite3_context*)
sqlite3_user_data	/usr/include/sqlite3ext.h	/^#define sqlite3_user_data /;"	d
sqlite3_value	/usr/include/sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value_blob	/usr/include/sqlite3.h	/^const void *sqlite3_value_blob(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_blob	/usr/include/sqlite3ext.h	/^#define sqlite3_value_blob /;"	d
sqlite3_value_bytes	/usr/include/sqlite3.h	/^int sqlite3_value_bytes(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_bytes	/usr/include/sqlite3ext.h	/^#define sqlite3_value_bytes /;"	d
sqlite3_value_bytes16	/usr/include/sqlite3.h	/^int sqlite3_value_bytes16(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_bytes16	/usr/include/sqlite3ext.h	/^#define sqlite3_value_bytes16 /;"	d
sqlite3_value_double	/usr/include/sqlite3.h	/^double sqlite3_value_double(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_double	/usr/include/sqlite3ext.h	/^#define sqlite3_value_double /;"	d
sqlite3_value_int	/usr/include/sqlite3.h	/^int sqlite3_value_int(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_int	/usr/include/sqlite3ext.h	/^#define sqlite3_value_int /;"	d
sqlite3_value_int64	/usr/include/sqlite3.h	/^sqlite3_int64 sqlite3_value_int64(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_int64	/usr/include/sqlite3ext.h	/^#define sqlite3_value_int64 /;"	d
sqlite3_value_numeric_type	/usr/include/sqlite3.h	/^int sqlite3_value_numeric_type(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_numeric_type	/usr/include/sqlite3ext.h	/^#define sqlite3_value_numeric_type /;"	d
sqlite3_value_text	/usr/include/sqlite3.h	/^const unsigned char *sqlite3_value_text(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_text	/usr/include/sqlite3ext.h	/^#define sqlite3_value_text /;"	d
sqlite3_value_text16	/usr/include/sqlite3.h	/^const void *sqlite3_value_text16(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_text16	/usr/include/sqlite3ext.h	/^#define sqlite3_value_text16 /;"	d
sqlite3_value_text16be	/usr/include/sqlite3.h	/^const void *sqlite3_value_text16be(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_text16be	/usr/include/sqlite3ext.h	/^#define sqlite3_value_text16be /;"	d
sqlite3_value_text16le	/usr/include/sqlite3.h	/^const void *sqlite3_value_text16le(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_text16le	/usr/include/sqlite3ext.h	/^#define sqlite3_value_text16le /;"	d
sqlite3_value_type	/usr/include/sqlite3.h	/^int sqlite3_value_type(sqlite3_value*);$/;"	p	signature:(sqlite3_value*)
sqlite3_value_type	/usr/include/sqlite3ext.h	/^#define sqlite3_value_type /;"	d
sqlite3_version	/usr/include/sqlite3.h	/^SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	/usr/include/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	/usr/include/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs::iVersion	/usr/include/sqlite3.h	/^  int iVersion;            \/* Structure version number *\/$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::mxPathname	/usr/include/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::pAppData	/usr/include/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::pNext	/usr/include/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::szOsFile	/usr/include/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xAccess	/usr/include/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xCurrentTime	/usr/include/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xDelete	/usr/include/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xDlClose	/usr/include/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xDlError	/usr/include/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xDlOpen	/usr/include/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xDlSym	/usr/include/sqlite3.h	/^  void (*(*xDlSym)(sqlite3_vfs*,void*, const char *zSymbol))(void);$/;"	p	struct:sqlite3_vfs	access:public	signature:(sqlite3_vfs*,void*, const char *zSymbol)
sqlite3_vfs::xFullPathname	/usr/include/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xGetLastError	/usr/include/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xOpen	/usr/include/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xRandomness	/usr/include/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::xSleep	/usr/include/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs::zName	/usr/include/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	access:public
sqlite3_vfs_find	/usr/include/sqlite3.h	/^sqlite3_vfs *sqlite3_vfs_find(const char *zVfsName);$/;"	p	signature:(const char *zVfsName)
sqlite3_vfs_find	/usr/include/sqlite3ext.h	/^#define sqlite3_vfs_find /;"	d
sqlite3_vfs_register	/usr/include/sqlite3.h	/^int sqlite3_vfs_register(sqlite3_vfs*, int makeDflt);$/;"	p	signature:(sqlite3_vfs*, int makeDflt)
sqlite3_vfs_register	/usr/include/sqlite3ext.h	/^#define sqlite3_vfs_register /;"	d
sqlite3_vfs_unregister	/usr/include/sqlite3.h	/^int sqlite3_vfs_unregister(sqlite3_vfs*);$/;"	p	signature:(sqlite3_vfs*)
sqlite3_vfs_unregister	/usr/include/sqlite3ext.h	/^#define sqlite3_vfs_unregister /;"	d
sqlite3_vmprintf	/usr/include/sqlite3.h	/^char *sqlite3_vmprintf(const char*, va_list);$/;"	p	signature:(const char*, va_list)
sqlite3_vmprintf	/usr/include/sqlite3ext.h	/^#define sqlite3_vmprintf /;"	d
sqlite3_vtab	/usr/include/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	/usr/include/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab::nRef	/usr/include/sqlite3.h	/^  int nRef;                       \/* Used internally *\/$/;"	m	struct:sqlite3_vtab	access:public
sqlite3_vtab::pModule	/usr/include/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	access:public
sqlite3_vtab::zErrMsg	/usr/include/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	access:public
sqlite3_vtab_cursor	/usr/include/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	/usr/include/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_cursor::pVtab	/usr/include/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	access:public
sqlite_int64	/usr/include/sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	/usr/include/sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	/usr/include/sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	/usr/include/sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	/usr/include/sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	/usr/include/sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
sr_desc	/usr/include/ldap_schema.h	/^	char *sr_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
sr_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **sr_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
sr_nameform	/usr/include/ldap_schema.h	/^	char *sr_nameform;	\/* REQUIRED *\/$/;"	m	struct:ldap_structurerule	access:public
sr_names	/usr/include/ldap_schema.h	/^	char **sr_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
sr_nsup_ruleids	/usr/include/ldap_schema.h	/^	int sr_nsup_ruleids;\/* number of sr_sup_ruleids *\/$/;"	m	struct:ldap_structurerule	access:public
sr_obsolete	/usr/include/ldap_schema.h	/^	int  sr_obsolete;	\/* 0=no, 1=yes *\/$/;"	m	struct:ldap_structurerule	access:public
sr_ruleid	/usr/include/ldap_schema.h	/^	int sr_ruleid;		\/* REQUIRED *\/$/;"	m	struct:ldap_structurerule	access:public
sr_sup_ruleids	/usr/include/ldap_schema.h	/^	int *sr_sup_ruleids;\/* OPTIONAL *\/$/;"	m	struct:ldap_structurerule	access:public
sradixsort	/usr/include/stdlib.h	/^int	 sradixsort(const unsigned char **, int, const unsigned char *,$/;"	p	signature:(const unsigned char **, int, const unsigned char *, unsigned)
srand	/usr/include/stdlib.h	/^void	 srand(unsigned);$/;"	p	signature:(unsigned)
srand48	/usr/include/stdlib.h	/^void	 srand48(long);$/;"	p	signature:(long)
sranddev	/usr/include/stdlib.h	/^void	 sranddev(void);$/;"	p	signature:(void)
srandom	/usr/include/stdlib.h	/^void	 srandom(unsigned long);$/;"	p	signature:(unsigned long)
srandom	/usr/include/stdlib.h	/^void	 srandom(unsigned);$/;"	p	signature:(unsigned)
srandomdev	/usr/include/stdlib.h	/^void	 srandomdev(void);$/;"	p	signature:(void)
src	/usr/include/tk.h	/^    char *src;			\/* Value to be used in setting dst; usage$/;"	m	struct:__anon125	access:public
sscanf	/usr/include/stdio.h	/^int	 sscanf(const char * __restrict, const char * __restrict, ...) __DARWIN_LDBL_COMPAT(sscanf);$/;"	v
ssize_t	/usr/include/monetary.h	/^typedef	__darwin_ssize_t	ssize_t;$/;"	t
ssize_t	/usr/include/string.h	/^typedef __darwin_ssize_t	ssize_t;$/;"	t
ssize_t	/usr/include/unistd.h	/^typedef	__darwin_ssize_t	ssize_t;$/;"	t
st_info	/usr/include/dtrace.h	/^	unsigned char	st_info;	\/* bind, type: ELF_64_ST_... *\/$/;"	m	struct:__anon44	access:public
st_name	/usr/include/dtrace.h	/^	GElf_Sxword	st_name;$/;"	m	struct:__anon44	access:public
st_other	/usr/include/dtrace.h	/^	unsigned char	st_other;$/;"	m	struct:__anon44	access:public
st_shndx	/usr/include/dtrace.h	/^	GElf_Half	st_shndx;	\/* SHN_... *\/$/;"	m	struct:__anon44	access:public
st_size	/usr/include/dtrace.h	/^	GElf_Xword	st_size;$/;"	m	struct:__anon44	access:public
st_value	/usr/include/dtrace.h	/^	GElf_Addr	st_value;$/;"	m	struct:__anon44	access:public
stack_mode	/usr/include/Xplugin.h	/^    int stack_mode;$/;"	m	struct:xp_window_changes_struct	access:public
standend	/usr/include/curses.h	/^#define standend(/;"	d
standend	/usr/include/ncurses.h	/^#define standend(/;"	d
standout	/usr/include/curses.h	/^#define standout(/;"	d
standout	/usr/include/ncurses.h	/^#define standout(/;"	d
start	/usr/include/tcl.h	/^    CONST char *start;		\/* First character in token. *\/$/;"	m	struct:Tcl_Token	access:public
start	/usr/include/tcl.h	/^    long start;			\/* Character offset of first character in$/;"	m	struct:Tcl_RegExpIndices	access:public
startSaturn	/usr/include/Saturn.h	/^void startSaturn (void);$/;"	p	signature:(void)
start_bit_image	/usr/include/term.h	/^#define start_bit_image /;"	d
start_char_set_def	/usr/include/term.h	/^#define start_char_set_def /;"	d
start_ip	/usr/include/libunwind.h	/^    unw_word_t    start_ip;         \/* start address of function *\/$/;"	m	struct:unw_proc_info_t	access:public
startline	/usr/include/term_entry.h	/^	long		startline;$/;"	m	struct:entry	access:public
stat	/usr/include/mecab.h	/^  unsigned char                stat;$/;"	m	struct:mecab_learner_node_t	access:public
stat	/usr/include/mecab.h	/^  unsigned char         stat;$/;"	m	struct:mecab_node_t	access:public
statProc	/usr/include/tcl.h	/^    Tcl_FSStatProc *statProc;	\/* Function to process a 'Tcl_FSStat()' call.$/;"	m	struct:Tcl_Filesystem	access:public
state	/usr/include/Xplugin.h	/^    unsigned int state;$/;"	m	struct:xp_window_state_event_struct	access:public
state	/usr/include/bzlib.h	/^      void *state;$/;"	m	struct:__anon3	access:public
state	/usr/include/tk.h	/^    Tk_State state;		\/* State of item. *\/$/;"	m	struct:Tk_Item	access:public
state	/usr/include/tk.h	/^    unsigned int state;		\/* Key or button mask *\/$/;"	m	struct:__anon129	access:public
state	/usr/include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR	access:public
staticBuckets	/usr/include/tcl.h	/^    Tcl_HashEntry *staticBuckets[TCL_SMALL_HASH_TABLE];$/;"	m	struct:Tcl_HashTable	access:public
staticSpace	/usr/include/tcl.h	/^    char staticSpace[TCL_DSTRING_STATIC_SIZE];$/;"	m	struct:Tcl_DString	access:public
staticTagSpace	/usr/include/tk.h	/^    Tk_Uid staticTagSpace[TK_TAG_SPACE];$/;"	m	struct:Tk_Item	access:public
staticTokens	/usr/include/tcl.h	/^    Tcl_Token staticTokens[NUM_STATIC_TOKENS];$/;"	m	struct:Tcl_Parse	access:public
status	/usr/include/dns_util.h	/^	uint32_t status;$/;"	m	struct:__anon43	access:public
status	/usr/include/form.h	/^  unsigned short	status;			\/* flags		*\/$/;"	m	struct:typenode	access:public
status	/usr/include/form.h	/^  unsigned short	status;		\/* flags			*\/$/;"	m	struct:fieldnode	access:public
status	/usr/include/form.h	/^  unsigned short	status;		\/* flags			*\/$/;"	m	struct:formnode	access:public
status	/usr/include/menu.h	/^  unsigned short status;                \/* Internal state of menu          *\/$/;"	m	struct:tagMENU	access:public
status	/usr/include/sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	access:public
status_line_esc_ok	/usr/include/term.h	/^#define status_line_esc_ok /;"	d
stderr	/usr/include/fcgi_stdio.h	/^#define	stderr /;"	d
stderr	/usr/include/fcgi_stdio.h	/^#undef  stderr$/;"	d
stderr	/usr/include/stdio.h	/^#define	stderr	/;"	d
stdin	/usr/include/fcgi_stdio.h	/^#define	stdin /;"	d
stdin	/usr/include/fcgi_stdio.h	/^#undef  stdin$/;"	d
stdin	/usr/include/stdio.h	/^#define	stdin	/;"	d
stdio_stream	/usr/include/fcgi_stdio.h	/^    FILE *stdio_stream;$/;"	m	struct:__anon60	access:public
stdout	/usr/include/fcgi_stdio.h	/^#define	stdout /;"	d
stdout	/usr/include/fcgi_stdio.h	/^#undef  stdout$/;"	d
stdout	/usr/include/stdio.h	/^#define	stdout	/;"	d
step	/usr/include/sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
stipple	/usr/include/tk.h	/^    Pixmap stipple;		\/* Outline Stipple pattern. *\/$/;"	m	struct:Tk_Outline	access:public
stop	/usr/include/fcgiapp.h	/^    unsigned char *stop;      \/* reader: last valid byte + 1$/;"	m	struct:FCGX_Stream	access:public
stopSaturn	/usr/include/Saturn.h	/^void stopSaturn (void);$/;"	p	signature:(void)
stopUnget	/usr/include/fcgiapp.h	/^    unsigned char *stopUnget; \/* reader: first byte of current buffer$/;"	m	struct:FCGX_Stream	access:public
stop_bit_image	/usr/include/term.h	/^#define stop_bit_image /;"	d
stop_char_set_def	/usr/include/term.h	/^#define stop_char_set_def /;"	d
stpcpy	/usr/include/string.h	/^char	*stpcpy(char *, const char *);$/;"	p	signature:(char *, const char *)
str	/usr/include/histedit.h	/^	const char	*str;$/;"	m	struct:HistEvent	access:public
str	/usr/include/menu.h	/^  const char* str;$/;"	m	struct:__anon76	access:public
str_table	/usr/include/term.h	/^    char  *str_table;		\/* pointer to string table *\/$/;"	m	struct:termtype	access:public
strbase	/usr/include/struct.h	/^#define	strbase(/;"	d
strcasecmp	/usr/include/string.h	/^int	 strcasecmp(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcasecmp	/usr/include/strings.h	/^int      strcasecmp(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcasestr	/usr/include/string.h	/^char	*strcasestr(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcat	/usr/include/string.h	/^char	*strcat(char *, const char *);$/;"	p	signature:(char *, const char *)
strchr	/usr/include/string.h	/^char	*strchr(const char *, int);$/;"	p	signature:(const char *, int)
strcmp	/usr/include/string.h	/^int	 strcmp(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcoll	/usr/include/string.h	/^int	 strcoll(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcpy	/usr/include/string.h	/^char	*strcpy(char *, const char *);$/;"	p	signature:(char *, const char *)
strcspn	/usr/include/string.h	/^size_t	 strcspn(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strdup	/usr/include/string.h	/^char	*strdup(const char *);$/;"	p	signature:(const char *)
strerror	/usr/include/string.h	/^char	*strerror(int) __DARWIN_ALIAS(strerror);$/;"	v
strerror_r	/usr/include/string.h	/^int	 strerror_r(int, char *, size_t);$/;"	p	signature:(int, char *, size_t)
strfmon	/usr/include/monetary.h	/^ssize_t	strfmon(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
strftime	/usr/include/time.h	/^size_t strftime(char * __restrict, size_t, const char * __restrict, const struct tm * __restrict) __DARWIN_ALIAS(strftime);$/;"	v
string	/usr/include/tcl.h	/^	char string[4];		\/* String for key. The actual size will be as$/;"	m	union:Tcl_HashEntry::__anon117	access:public
string	/usr/include/tcl.h	/^    CONST char *string;		\/* The original command string passed to$/;"	m	struct:Tcl_Parse	access:public
string	/usr/include/tcl.h	/^    char *string;		\/* Points to beginning of string: either$/;"	m	struct:Tcl_DString	access:public
stringMatchProc	/usr/include/tk.h	/^    Tk_ImageStringMatchProc *stringMatchProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
stringReadProc	/usr/include/tk.h	/^    Tk_ImageStringReadProc *stringReadProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
stringWriteProc	/usr/include/tk.h	/^    Tk_ImageStringWriteProc *stringWriteProc;$/;"	m	struct:Tk_PhotoImageFormat	access:public
string_count	/usr/include/dns_util.h	/^	uint32_t string_count;$/;"	m	struct:__anon32	access:public
strings	/usr/include/dns_util.h	/^	char **strings;$/;"	m	struct:__anon32	access:public
strlcat	/usr/include/string.h	/^size_t	 strlcat(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strlcpy	/usr/include/string.h	/^size_t	 strlcpy(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strlen	/usr/include/string.h	/^size_t	 strlen(const char *);$/;"	p	signature:(const char *)
strmode	/usr/include/string.h	/^void	 strmode(int, char *);$/;"	p	signature:(int, char *)
strncasecmp	/usr/include/string.h	/^int	 strncasecmp(const char *, const char *, size_t);$/;"	p	signature:(const char *, const char *, size_t)
strncasecmp	/usr/include/strings.h	/^int      strncasecmp(const char *, const char *, size_t);$/;"	p	signature:(const char *, const char *, size_t)
strncat	/usr/include/string.h	/^char	*strncat(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strncmp	/usr/include/string.h	/^int	 strncmp(const char *, const char *, size_t);$/;"	p	signature:(const char *, const char *, size_t)
strncpy	/usr/include/string.h	/^char	*strncpy(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strnstr	/usr/include/string.h	/^char	*strnstr(const char *, const char *, size_t);$/;"	p	signature:(const char *, const char *, size_t)
strpbrk	/usr/include/string.h	/^char	*strpbrk(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strptime	/usr/include/time.h	/^char *strptime(const char * __restrict, const char * __restrict, struct tm * __restrict) __DARWIN_ALIAS(strptime);$/;"	v
strrchr	/usr/include/string.h	/^char	*strrchr(const char *, int);$/;"	p	signature:(const char *, int)
strsep	/usr/include/string.h	/^char	*strsep(char **, const char *);$/;"	p	signature:(char **, const char *)
strsignal	/usr/include/string.h	/^char	*strsignal(int sig);$/;"	p	signature:(int sig)
strspn	/usr/include/string.h	/^size_t	 strspn(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strstr	/usr/include/string.h	/^char	*strstr(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strtod	/usr/include/stdlib.h	/^double	 strtod(const char *, char **) __DARWIN_ALIAS(strtod);$/;"	v
strtof	/usr/include/stdlib.h	/^float	 strtof(const char *, char **) __DARWIN_ALIAS(strtof);$/;"	v
strtofflags	/usr/include/unistd.h	/^int	 strtofflags(char **, unsigned long *, unsigned long *);$/;"	p	signature:(char **, unsigned long *, unsigned long *)
strtoimax	/usr/include/inttypes.h	/^  extern intmax_t strtoimax(const char * restrict nptr, char ** restrict endptr, int base);$/;"	p	signature:(const char * restrict nptr, char ** restrict endptr, int base)
strtok	/usr/include/string.h	/^char	*strtok(char *, const char *);$/;"	p	signature:(char *, const char *)
strtok	/usr/include/tcpd.h	/^#define strtok	/;"	d
strtok_r	/usr/include/string.h	/^char	*strtok_r(char *, const char *, char **);$/;"	p	signature:(char *, const char *, char **)
strtol	/usr/include/stdlib.h	/^long	 strtol(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtold	/usr/include/stdlib.h	/^	 strtold(const char *, char **) __DARWIN_LDBL_COMPAT(strtold);$/;"	v
strtoll	/usr/include/stdlib.h	/^	 strtoll(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoq	/usr/include/stdlib.h	/^	 strtoq(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoul	/usr/include/stdlib.h	/^	 strtoul(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoull	/usr/include/stdlib.h	/^	 strtoull(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoumax	/usr/include/inttypes.h	/^  extern uintmax_t strtoumax(const char * restrict nptr, char ** restrict endptr, int base);$/;"	p	signature:(const char * restrict nptr, char ** restrict endptr, int base)
strtouq	/usr/include/stdlib.h	/^	 strtouq(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
structureLength	/usr/include/tcl.h	/^    int structureLength;	\/* Length of this structure, so future binary$/;"	m	struct:Tcl_Filesystem	access:public
strunvis	/usr/include/vis.h	/^int	strunvis(char *, const char *);$/;"	p	signature:(char *, const char *)
strunvisx	/usr/include/vis.h	/^int	strunvisx(char *, const char *, int);$/;"	p	signature:(char *, const char *, int)
strvis	/usr/include/vis.h	/^int	strvis(char *, const char *, int);$/;"	p	signature:(char *, const char *, int)
strvisx	/usr/include/vis.h	/^int	strvisx(char *, const char *, size_t, int);$/;"	p	signature:(char *, const char *, size_t, int)
strxfrm	/usr/include/string.h	/^size_t	 strxfrm(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
stty	/usr/include/sgtty.h	/^#define	stty(/;"	d
stty	/usr/include/sgtty.h	/^int	stty(int, struct sgttyb *);$/;"	p	signature:(int, struct sgttyb *)
sub	/usr/include/form.h	/^  WINDOW *		sub;		\/* subwindow			*\/$/;"	m	struct:formnode	access:public
sub	/usr/include/menu.h	/^  WINDOW        *sub;                   \/* Subwindow for menu display      *\/$/;"	m	struct:tagMENU	access:public
subaddress	/usr/include/dns_util.h	/^	char *subaddress;$/;"	m	struct:__anon37	access:public
subscript_characters	/usr/include/term.h	/^#define subscript_characters /;"	d
subtype	/usr/include/dns_util.h	/^	uint32_t subtype;$/;"	m	struct:__anon35	access:public
subwindow	/usr/include/tk.h	/^    Window subwindow;		\/* Child window. *\/$/;"	m	struct:__anon129	access:public
superscript_characters	/usr/include/term.h	/^#define superscript_characters /;"	d
surface	/usr/include/mecab.h	/^  const char                  *surface;$/;"	m	struct:mecab_learner_node_t	access:public
surface	/usr/include/mecab.h	/^  const char           *surface;$/;"	m	struct:mecab_node_t	access:public
swab	/usr/include/string.h	/^void	 swab(const void * __restrict, void * __restrict, ssize_t);$/;"	p	signature:(const void * __restrict, void * __restrict, ssize_t)
swab	/usr/include/unistd.h	/^void     swab(const void * __restrict, void * __restrict, ssize_t);$/;"	p	signature:(const void * __restrict, void * __restrict, ssize_t)
swapcontext	/usr/include/ucontext.h	/^int  swapcontext(ucontext_t * __restrict, const ucontext_t * __restrict);$/;"	p	signature:(ucontext_t * __restrict, const ucontext_t * __restrict)
swapon	/usr/include/unistd.h	/^int	 swapon(const char *);$/;"	p	signature:(const char *)
switch_streams	/usr/include/FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in = 0,$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in = 0, FLEX_STD ostream* new_out = 0 )
switch_streams	/usr/include/FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
swprintf	/usr/include/wchar.h	/^	    ...) __DARWIN_LDBL_COMPAT(swprintf);$/;"	v
swscanf	/usr/include/wchar.h	/^int	swscanf(const wchar_t * __restrict, const wchar_t * __restrict, ...) __DARWIN_LDBL_COMPAT(swscanf);$/;"	v
sym_ntop	/usr/include/resolv.h	/^#define sym_ntop	/;"	d
sym_ntop	/usr/include/resolv.h	/^const char *sym_ntop __P((const struct res_sym *, int, int *));$/;"	p	signature:(const struct res_sym *, int, int *)
sym_ntos	/usr/include/resolv.h	/^#define sym_ntos	/;"	d
sym_ntos	/usr/include/resolv.h	/^const char *	sym_ntos __P((const struct res_sym *, int, int *));$/;"	p	signature:(const struct res_sym *, int, int *)
sym_ston	/usr/include/resolv.h	/^#define sym_ston	/;"	d
sym_ston	/usr/include/resolv.h	/^int		sym_ston __P((const struct res_sym *, const char *, int *));$/;"	p	signature:(const struct res_sym *, const char *, int *)
symlink	/usr/include/unistd.h	/^int	 symlink(const char *, const char *);$/;"	p	signature:(const char *, const char *)
syn_desc	/usr/include/ldap_schema.h	/^	char *syn_desc;		\/* OPTIONAL *\/$/;"	m	struct:ldap_syntax	access:public
syn_extensions	/usr/include/ldap_schema.h	/^	LDAPSchemaExtensionItem **syn_extensions; \/* OPTIONAL *\/$/;"	m	struct:ldap_syntax	access:public
syn_names	/usr/include/ldap_schema.h	/^	char **syn_names;	\/* OPTIONAL *\/$/;"	m	struct:ldap_syntax	access:public
syn_oid	/usr/include/ldap_schema.h	/^	char *syn_oid;		\/* REQUIRED *\/$/;"	m	struct:ldap_syntax	access:public
sync	/usr/include/db.h	/^	int (*sync)(const struct __db *, unsigned int);$/;"	m	struct:__db	access:public
sync	/usr/include/fcgio.h	/^    virtual int sync();$/;"	p	class:fcgi_streambuf	access:protected	signature:()
sync	/usr/include/unistd.h	/^void	 sync(void);$/;"	p	signature:(void)
syscall	/usr/include/unistd.h	/^int	 syscall(int, ...);$/;"	p	signature:(int, ...)
sysconf	/usr/include/unistd.h	/^long	 sysconf(int);$/;"	p	signature:(int)
system	/usr/include/stdlib.h	/^int	 system(const char *) __DARWIN_ALIAS_C(system);$/;"	v
szOsFile	/usr/include/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	access:public
tab	/usr/include/term.h	/^#define tab /;"	d
tablePtr	/usr/include/tcl.h	/^    Tcl_HashTable *tablePtr;	\/* Pointer to table containing entry. *\/$/;"	m	struct:Tcl_HashEntry	access:public
tablePtr	/usr/include/tcl.h	/^    Tcl_HashTable *tablePtr;	\/* Table being searched. *\/$/;"	m	struct:Tcl_HashSearch	access:public
table_column_metadata	/usr/include/sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,char const**,char const**,int*,int*,int*);$/;"	m	struct:sqlite3_api_routines	access:public
tagDATE_STRUCT	/usr/include/sqltypes.h	/^typedef struct tagDATE_STRUCT$/;"	s
tagDATE_STRUCT::day	/usr/include/sqltypes.h	/^    SQLUSMALLINT day;$/;"	m	struct:tagDATE_STRUCT	access:public
tagDATE_STRUCT::month	/usr/include/sqltypes.h	/^    SQLUSMALLINT month;$/;"	m	struct:tagDATE_STRUCT	access:public
tagDATE_STRUCT::year	/usr/include/sqltypes.h	/^    SQLSMALLINT year;$/;"	m	struct:tagDATE_STRUCT	access:public
tagITEM	/usr/include/menu.h	/^typedef struct tagITEM $/;"	s
tagITEM::description	/usr/include/menu.h	/^  TEXT           description; \/* description of item, optional in display  *\/ $/;"	m	struct:tagITEM	access:public
tagITEM::down	/usr/include/menu.h	/^  struct tagITEM *down;$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
tagITEM::imenu	/usr/include/menu.h	/^  struct tagMENU *imenu;      \/* Pointer to parent menu                    *\/$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagMENU	access:public
tagITEM::index	/usr/include/menu.h	/^  short          index;       \/* Item number if connected to a menu        *\/$/;"	m	struct:tagITEM	access:public
tagITEM::left	/usr/include/menu.h	/^  struct tagITEM *left;       \/* neighbor items                            *\/$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
tagITEM::name	/usr/include/menu.h	/^  TEXT           name;        \/* name of menu item                         *\/$/;"	m	struct:tagITEM	access:public
tagITEM::opt	/usr/include/menu.h	/^  Item_Options   opt;         \/* Item options                              *\/ $/;"	m	struct:tagITEM	access:public
tagITEM::right	/usr/include/menu.h	/^  struct tagITEM *right;$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
tagITEM::up	/usr/include/menu.h	/^  struct tagITEM *up;$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
tagITEM::userptr	/usr/include/menu.h	/^  void           *userptr;    \/* Pointer to user defined per item data     *\/ $/;"	m	struct:tagITEM	access:public
tagITEM::value	/usr/include/menu.h	/^  bool           value;       \/* Selection value                           *\/$/;"	m	struct:tagITEM	access:public
tagITEM::x	/usr/include/menu.h	/^  short          x;$/;"	m	struct:tagITEM	access:public
tagITEM::y	/usr/include/menu.h	/^  short          y;           \/* y and x location of item in menu          *\/$/;"	m	struct:tagITEM	access:public
tagMENU	/usr/include/menu.h	/^typedef struct tagMENU $/;"	s
tagMENU::arows	/usr/include/menu.h	/^  short          arows;                 \/* Nr. of items high (actual)      *\/$/;"	m	struct:tagMENU	access:public
tagMENU::back	/usr/include/menu.h	/^  chtype         back;                  \/* Nonselection attribute          *\/$/;"	m	struct:tagMENU	access:public
tagMENU::cols	/usr/include/menu.h	/^  short          cols;                  \/* Nr. of items wide               *\/$/;"	m	struct:tagMENU	access:public
tagMENU::curitem	/usr/include/menu.h	/^  ITEM          *curitem;               \/* Current item                    *\/$/;"	m	struct:tagMENU	access:public
tagMENU::desclen	/usr/include/menu.h	/^  short          desclen;               \/* Max. description length         *\/$/;"	m	struct:tagMENU	access:public
tagMENU::fcols	/usr/include/menu.h	/^  short          fcols;                 \/* Nr. of formatted items wide     *\/$/;"	m	struct:tagMENU	access:public
tagMENU::fore	/usr/include/menu.h	/^  chtype         fore;                  \/* Selection attribute             *\/$/;"	m	struct:tagMENU	access:public
tagMENU::frows	/usr/include/menu.h	/^  short          frows;                 \/* Nr. of formatted items high     *\/$/;"	m	struct:tagMENU	access:public
tagMENU::grey	/usr/include/menu.h	/^  chtype         grey;                  \/* Inactive attribute              *\/$/;"	m	struct:tagMENU	access:public
tagMENU::height	/usr/include/menu.h	/^  short          height;                \/* Nr. of chars high               *\/$/;"	m	struct:tagMENU	access:public
tagMENU::iteminit	/usr/include/menu.h	/^  Menu_Hook      iteminit;$/;"	m	struct:tagMENU	access:public
tagMENU::itemlen	/usr/include/menu.h	/^  short          itemlen;               \/* Length of one item              *\/$/;"	m	struct:tagMENU	access:public
tagMENU::items	/usr/include/menu.h	/^  ITEM          **items;                \/* array of items                  *\/ $/;"	m	struct:tagMENU	access:public
tagMENU::itemterm	/usr/include/menu.h	/^  Menu_Hook      itemterm;$/;"	m	struct:tagMENU	access:public
tagMENU::mark	/usr/include/menu.h	/^  char          *mark;                  \/* Pointer to marker string        *\/$/;"	m	struct:tagMENU	access:public
tagMENU::marklen	/usr/include/menu.h	/^  short          marklen;               \/* Length of mark, if any          *\/$/;"	m	struct:tagMENU	access:public
tagMENU::menuinit	/usr/include/menu.h	/^  Menu_Hook      menuinit;              \/* User hooks                      *\/$/;"	m	struct:tagMENU	access:public
tagMENU::menuterm	/usr/include/menu.h	/^  Menu_Hook      menuterm;$/;"	m	struct:tagMENU	access:public
tagMENU::namelen	/usr/include/menu.h	/^  short          namelen;               \/* Max. name length                *\/$/;"	m	struct:tagMENU	access:public
tagMENU::nitems	/usr/include/menu.h	/^  short          nitems;                \/* Nr. of items in menu            *\/$/;"	m	struct:tagMENU	access:public
tagMENU::opt	/usr/include/menu.h	/^  Menu_Options   opt;                   \/* Menu options                    *\/$/;"	m	struct:tagMENU	access:public
tagMENU::pad	/usr/include/menu.h	/^  unsigned char  pad;                   \/* Pad character                   *\/$/;"	m	struct:tagMENU	access:public
tagMENU::pattern	/usr/include/menu.h	/^  char          *pattern;               \/* Buffer to store match chars     *\/$/;"	m	struct:tagMENU	access:public
tagMENU::pindex	/usr/include/menu.h	/^  short          pindex;                \/* Index into pattern buffer       *\/$/;"	m	struct:tagMENU	access:public
tagMENU::rows	/usr/include/menu.h	/^  short          rows;                  \/* Nr. of items high               *\/$/;"	m	struct:tagMENU	access:public
tagMENU::spc_cols	/usr/include/menu.h	/^  short          spc_cols;              \/* Spacing for columns             *\/$/;"	m	struct:tagMENU	access:public
tagMENU::spc_desc	/usr/include/menu.h	/^  short          spc_desc;              \/* Spacing for descriptor          *\/$/;"	m	struct:tagMENU	access:public
tagMENU::spc_rows	/usr/include/menu.h	/^  short          spc_rows;              \/* Spacing for rows                *\/ $/;"	m	struct:tagMENU	access:public
tagMENU::status	/usr/include/menu.h	/^  unsigned short status;                \/* Internal state of menu          *\/$/;"	m	struct:tagMENU	access:public
tagMENU::sub	/usr/include/menu.h	/^  WINDOW        *sub;                   \/* Subwindow for menu display      *\/$/;"	m	struct:tagMENU	access:public
tagMENU::toprow	/usr/include/menu.h	/^  short          toprow;                \/* Top row of menu                 *\/$/;"	m	struct:tagMENU	access:public
tagMENU::userptr	/usr/include/menu.h	/^  void          *userptr;               \/* Pointer to menus user data      *\/$/;"	m	struct:tagMENU	access:public
tagMENU::usersub	/usr/include/menu.h	/^  WINDOW        *usersub;               \/* User's subwindow                *\/$/;"	m	struct:tagMENU	access:public
tagMENU::userwin	/usr/include/menu.h	/^  WINDOW        *userwin;               \/* User's window                   *\/$/;"	m	struct:tagMENU	access:public
tagMENU::width	/usr/include/menu.h	/^  short          width;                 \/* Nr. of chars wide               *\/$/;"	m	struct:tagMENU	access:public
tagMENU::win	/usr/include/menu.h	/^  WINDOW        *win;                   \/* Window containing menu          *\/$/;"	m	struct:tagMENU	access:public
tagPtr	/usr/include/tk.h	/^    Tk_Uid *tagPtr;		\/* Pointer to array of tags. Usually points to$/;"	m	struct:Tk_Item	access:public
tagSQLGUID	/usr/include/sqltypes.h	/^typedef struct tagSQLGUID$/;"	s
tagSQLGUID::Data1	/usr/include/sqltypes.h	/^    unsigned int	Data1;$/;"	m	struct:tagSQLGUID	access:public
tagSQLGUID::Data2	/usr/include/sqltypes.h	/^    unsigned short	Data2;$/;"	m	struct:tagSQLGUID	access:public
tagSQLGUID::Data3	/usr/include/sqltypes.h	/^    unsigned short	Data3;$/;"	m	struct:tagSQLGUID	access:public
tagSQLGUID::Data4	/usr/include/sqltypes.h	/^    unsigned char	Data4[8];	\/* BYTE *\/$/;"	m	struct:tagSQLGUID	access:public
tagSQL_DAY_SECOND	/usr/include/sqltypes.h	/^typedef struct tagSQL_DAY_SECOND$/;"	s
tagSQL_DAY_SECOND::day	/usr/include/sqltypes.h	/^    SQLUINTEGER day;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
tagSQL_DAY_SECOND::fraction	/usr/include/sqltypes.h	/^    SQLUINTEGER fraction;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
tagSQL_DAY_SECOND::hour	/usr/include/sqltypes.h	/^    SQLUINTEGER hour;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
tagSQL_DAY_SECOND::minute	/usr/include/sqltypes.h	/^    SQLUINTEGER minute;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
tagSQL_DAY_SECOND::second	/usr/include/sqltypes.h	/^    SQLUINTEGER second;$/;"	m	struct:tagSQL_DAY_SECOND	access:public
tagSQL_INTERVAL_STRUCT	/usr/include/sqltypes.h	/^typedef struct tagSQL_INTERVAL_STRUCT$/;"	s
tagSQL_INTERVAL_STRUCT::__anon108::day_second	/usr/include/sqltypes.h	/^	SQL_DAY_SECOND_STRUCT day_second;$/;"	m	union:tagSQL_INTERVAL_STRUCT::__anon108	access:public
tagSQL_INTERVAL_STRUCT::__anon108::year_month	/usr/include/sqltypes.h	/^	SQL_YEAR_MONTH_STRUCT year_month;$/;"	m	union:tagSQL_INTERVAL_STRUCT::__anon108	access:public
tagSQL_INTERVAL_STRUCT::interval_sign	/usr/include/sqltypes.h	/^    SQLSMALLINT interval_sign;$/;"	m	struct:tagSQL_INTERVAL_STRUCT	access:public
tagSQL_INTERVAL_STRUCT::interval_type	/usr/include/sqltypes.h	/^    SQLINTERVAL interval_type;$/;"	m	struct:tagSQL_INTERVAL_STRUCT	access:public
tagSQL_INTERVAL_STRUCT::intval	/usr/include/sqltypes.h	/^    intval;$/;"	m	struct:tagSQL_INTERVAL_STRUCT	typeref:union:tagSQL_INTERVAL_STRUCT::__anon108	access:public
tagSQL_NUMERIC_STRUCT	/usr/include/sqltypes.h	/^typedef struct tagSQL_NUMERIC_STRUCT$/;"	s
tagSQL_NUMERIC_STRUCT::precision	/usr/include/sqltypes.h	/^    SQLCHAR	precision;$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
tagSQL_NUMERIC_STRUCT::scale	/usr/include/sqltypes.h	/^    SQLSCHAR	scale;$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
tagSQL_NUMERIC_STRUCT::sign	/usr/include/sqltypes.h	/^    SQLCHAR	sign;		\/* 0 for negative, 1 for positive *\/$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
tagSQL_NUMERIC_STRUCT::val	/usr/include/sqltypes.h	/^    SQLCHAR	val[SQL_MAX_NUMERIC_LEN];$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
tagSQL_YEAR_MONTH	/usr/include/sqltypes.h	/^typedef struct tagSQL_YEAR_MONTH$/;"	s
tagSQL_YEAR_MONTH::month	/usr/include/sqltypes.h	/^    SQLUINTEGER month;$/;"	m	struct:tagSQL_YEAR_MONTH	access:public
tagSQL_YEAR_MONTH::year	/usr/include/sqltypes.h	/^    SQLUINTEGER year;$/;"	m	struct:tagSQL_YEAR_MONTH	access:public
tagSpace	/usr/include/tk.h	/^    int tagSpace;		\/* Total amount of tag space available at$/;"	m	struct:Tk_Item	access:public
tagTIMESTAMP_STRUCT	/usr/include/sqltypes.h	/^typedef struct tagTIMESTAMP_STRUCT$/;"	s
tagTIMESTAMP_STRUCT::day	/usr/include/sqltypes.h	/^    SQLUSMALLINT day;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIMESTAMP_STRUCT::fraction	/usr/include/sqltypes.h	/^    SQLUINTEGER fraction;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIMESTAMP_STRUCT::hour	/usr/include/sqltypes.h	/^    SQLUSMALLINT hour;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIMESTAMP_STRUCT::minute	/usr/include/sqltypes.h	/^    SQLUSMALLINT minute;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIMESTAMP_STRUCT::month	/usr/include/sqltypes.h	/^    SQLUSMALLINT month;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIMESTAMP_STRUCT::second	/usr/include/sqltypes.h	/^    SQLUSMALLINT second;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIMESTAMP_STRUCT::year	/usr/include/sqltypes.h	/^    SQLSMALLINT year;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
tagTIME_STRUCT	/usr/include/sqltypes.h	/^typedef struct tagTIME_STRUCT$/;"	s
tagTIME_STRUCT::hour	/usr/include/sqltypes.h	/^    SQLUSMALLINT hour;$/;"	m	struct:tagTIME_STRUCT	access:public
tagTIME_STRUCT::minute	/usr/include/sqltypes.h	/^    SQLUSMALLINT minute;$/;"	m	struct:tagTIME_STRUCT	access:public
tagTIME_STRUCT::second	/usr/include/sqltypes.h	/^    SQLUSMALLINT second;$/;"	m	struct:tagTIME_STRUCT	access:public
target	/usr/include/dns_util.h	/^	char *target;$/;"	m	struct:__anon40	access:public
tcgetpgrp	/usr/include/unistd.h	/^pid_t	 tcgetpgrp(int);$/;"	p	signature:(int)
tcgetsid	/usr/include/termios.h	/^pid_t	tcgetsid(int);$/;"	p	signature:(int)
tclBN_epoch	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_epoch) (void); \/* 0 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_fast_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_fast_s_mp_mul_digs) (mp_int * a, mp_int * b, mp_int * c, int digs); \/* 51 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_fast_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_fast_s_mp_sqr) (mp_int* a, mp_int* b); \/* 52 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_add	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_add) (mp_int* a, mp_int* b, mp_int* c); \/* 2 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_add_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_add_d) (mp_int* a, mp_digit b, mp_int* c); \/* 3 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_and	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_and) (mp_int* a, mp_int* b, mp_int* c); \/* 4 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_clamp	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_clamp) (mp_int* a); \/* 5 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_clear	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_clear) (mp_int* a); \/* 6 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_clear_multi	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_clear_multi) (mp_int* a, ...); \/* 7 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_cmp	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_cmp) (mp_int* a, mp_int* b); \/* 8 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_cmp_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_cmp_d) (mp_int* a, mp_digit b); \/* 9 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_cmp_mag	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_cmp_mag) (mp_int* a, mp_int* b); \/* 10 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_copy	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_copy) (mp_int* a, mp_int* b); \/* 11 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_count_bits	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_count_bits) (mp_int* a); \/* 12 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_div	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div) (mp_int* a, mp_int* b, mp_int* q, mp_int* r); \/* 13 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_div_2	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_2) (mp_int* a, mp_int* q); \/* 15 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_div_2d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_2d) (mp_int* a, int b, mp_int* q, mp_int* r); \/* 16 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_div_3	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_3) (mp_int* a, mp_int* q, mp_digit* r); \/* 17 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_div_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_div_d) (mp_int* a, mp_digit b, mp_int* q, mp_digit* r); \/* 14 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_exch	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_exch) (mp_int* a, mp_int* b); \/* 18 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_expt_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_expt_d) (mp_int* a, mp_digit b, mp_int* c); \/* 19 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_grow	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_grow) (mp_int* a, int size); \/* 20 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_init	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init) (mp_int* a); \/* 21 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_init_copy	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_copy) (mp_int * a, mp_int* b); \/* 22 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_init_multi	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_multi) (mp_int* a, ...); \/* 23 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_init_set	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_set) (mp_int* a, mp_digit b); \/* 24 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_init_size	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_init_size) (mp_int* a, int size); \/* 25 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_karatsuba_mul	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_karatsuba_mul) (mp_int* a, mp_int* b, mp_int* c); \/* 53 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_karatsuba_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_karatsuba_sqr) (mp_int* a, mp_int* b); \/* 54 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_lshd	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_lshd) (mp_int* a, int shift); \/* 26 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_mod	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mod) (mp_int* a, mp_int* b, mp_int* r); \/* 27 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_mod_2d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mod_2d) (mp_int* a, int b, mp_int* r); \/* 28 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_mul	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul) (mp_int* a, mp_int* b, mp_int* p); \/* 29 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_mul_2	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul_2) (mp_int* a, mp_int* p); \/* 31 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_mul_2d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul_2d) (mp_int* a, int d, mp_int* p); \/* 32 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_mul_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_mul_d) (mp_int* a, mp_digit b, mp_int* p); \/* 30 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_neg	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_neg) (mp_int* a, mp_int* b); \/* 33 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_or	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_or) (mp_int* a, mp_int* b, mp_int* c); \/* 34 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_radix_size	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_radix_size) (mp_int* a, int radix, int* size); \/* 35 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_read_radix	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_read_radix) (mp_int* a, const char* str, int radix); \/* 36 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_rshd	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_rshd) (mp_int * a, int shift); \/* 37 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_set	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_set) (mp_int* a, mp_digit b); \/* 39 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_shrink	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_shrink) (mp_int* a); \/* 38 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sqr) (mp_int* a, mp_int* b); \/* 40 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_sqrt	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sqrt) (mp_int* a, mp_int* b); \/* 41 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_sub	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sub) (mp_int* a, mp_int* b, mp_int* c); \/* 42 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_sub_d	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_sub_d) (mp_int* a, mp_digit b, mp_int* c); \/* 43 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_to_unsigned_bin	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_to_unsigned_bin) (mp_int* a, unsigned char* b); \/* 44 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_to_unsigned_bin_n	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_to_unsigned_bin_n) (mp_int* a, unsigned char* b, unsigned long* outlen); \/* 45 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_toom_mul	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_toom_mul) (mp_int* a, mp_int* b, mp_int* c); \/* 55 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_toom_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_toom_sqr) (mp_int* a, mp_int* b); \/* 56 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_toradix_n	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_toradix_n) (mp_int* a, char* str, int radix, int maxlen); \/* 46 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_unsigned_bin_size	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_unsigned_bin_size) (mp_int* a); \/* 47 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_xor	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_mp_xor) (mp_int* a, mp_int* b, mp_int* c); \/* 48 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_mp_zero	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_mp_zero) (mp_int* a); \/* 49 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_reverse	/usr/include/tclTomMathDecls.h	/^    void (*tclBN_reverse) (unsigned char* s, int len); \/* 50 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_revision	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_revision) (void); \/* 1 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_s_mp_add	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_add) (mp_int* a, mp_int* b, mp_int* c); \/* 57 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_s_mp_mul_digs	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_mul_digs) (mp_int* a, mp_int* b, mp_int* c, int digs); \/* 58 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_s_mp_sqr	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_sqr) (mp_int* a, mp_int* b); \/* 59 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclBN_s_mp_sub	/usr/include/tclTomMathDecls.h	/^    int (*tclBN_s_mp_sub) (mp_int* a, mp_int* b, mp_int* c); \/* 60 *\/$/;"	m	struct:TclTomMathStubs	access:public
tclFreeObj	/usr/include/tclDecls.h	/^    void (*tclFreeObj) (Tcl_Obj * objPtr); \/* 30 *\/$/;"	m	struct:TclStubs	access:public
tclIntPlatStubs	/usr/include/tclDecls.h	/^    struct TclIntPlatStubs *tclIntPlatStubs;$/;"	m	struct:TclStubHooks	typeref:struct:TclStubHooks::TclIntPlatStubs	access:public
tclIntStubs	/usr/include/tclDecls.h	/^    struct TclIntStubs *tclIntStubs;$/;"	m	struct:TclStubHooks	typeref:struct:TclStubHooks::TclIntStubs	access:public
tclPlatStubs	/usr/include/tclDecls.h	/^    struct TclPlatStubs *tclPlatStubs;$/;"	m	struct:TclStubHooks	typeref:struct:TclStubHooks::TclPlatStubs	access:public
tcl_Access	/usr/include/tclDecls.h	/^    int (*tcl_Access) (CONST char * path, int mode); \/* 367 *\/$/;"	m	struct:TclStubs	access:public
tcl_AddErrorInfo	/usr/include/tclDecls.h	/^    void (*tcl_AddErrorInfo) (Tcl_Interp * interp, CONST char * message); \/* 66 *\/$/;"	m	struct:TclStubs	access:public
tcl_AddObjErrorInfo	/usr/include/tclDecls.h	/^    void (*tcl_AddObjErrorInfo) (Tcl_Interp * interp, CONST char * message, int length); \/* 67 *\/$/;"	m	struct:TclStubs	access:public
tcl_AlertNotifier	/usr/include/tclDecls.h	/^    void (*tcl_AlertNotifier) (ClientData clientData); \/* 343 *\/$/;"	m	struct:TclStubs	access:public
tcl_Alloc	/usr/include/tclDecls.h	/^    char * (*tcl_Alloc) (unsigned int size); \/* 3 *\/$/;"	m	struct:TclStubs	access:public
tcl_AllocStatBuf	/usr/include/tclDecls.h	/^    Tcl_StatBuf * (*tcl_AllocStatBuf) (void); \/* 490 *\/$/;"	m	struct:TclStubs	access:public
tcl_AllowExceptions	/usr/include/tclDecls.h	/^    void (*tcl_AllowExceptions) (Tcl_Interp * interp); \/* 68 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendAllObjTypes	/usr/include/tclDecls.h	/^    int (*tcl_AppendAllObjTypes) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 14 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendElement	/usr/include/tclDecls.h	/^    void (*tcl_AppendElement) (Tcl_Interp * interp, CONST char * element); \/* 69 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendExportList	/usr/include/tclDecls.h	/^    int (*tcl_AppendExportList) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, Tcl_Obj * objPtr); \/* 508 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendFormatToObj	/usr/include/tclDecls.h	/^    int (*tcl_AppendFormatToObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, CONST char * format, int objc, Tcl_Obj * CONST objv[]); \/* 577 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendLimitedToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendLimitedToObj) (Tcl_Obj * objPtr, CONST char * bytes, int length, int limit, CONST char * ellipsis); \/* 575 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendObjToErrorInfo	/usr/include/tclDecls.h	/^    void (*tcl_AppendObjToErrorInfo) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 574 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendObjToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendObjToObj) (Tcl_Obj * objPtr, Tcl_Obj * appendObjPtr); \/* 286 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendPrintfToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendPrintfToObj) (Tcl_Obj * objPtr, CONST char * format, ...); \/* 579 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendResult	/usr/include/tclDecls.h	/^    void (*tcl_AppendResult) (Tcl_Interp * interp, ...); \/* 70 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendResultVA	/usr/include/tclDecls.h	/^    void (*tcl_AppendResultVA) (Tcl_Interp * interp, va_list argList); \/* 267 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendStringsToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendStringsToObj) (Tcl_Obj * objPtr, ...); \/* 15 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendStringsToObjVA	/usr/include/tclDecls.h	/^    void (*tcl_AppendStringsToObjVA) (Tcl_Obj * objPtr, va_list argList); \/* 268 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendToObj) (Tcl_Obj* objPtr, CONST char* bytes, int length); \/* 16 *\/$/;"	m	struct:TclStubs	access:public
tcl_AppendUnicodeToObj	/usr/include/tclDecls.h	/^    void (*tcl_AppendUnicodeToObj) (Tcl_Obj * objPtr, CONST Tcl_UniChar * unicode, int length); \/* 384 *\/$/;"	m	struct:TclStubs	access:public
tcl_AsyncCreate	/usr/include/tclDecls.h	/^    Tcl_AsyncHandler (*tcl_AsyncCreate) (Tcl_AsyncProc * proc, ClientData clientData); \/* 71 *\/$/;"	m	struct:TclStubs	access:public
tcl_AsyncDelete	/usr/include/tclDecls.h	/^    void (*tcl_AsyncDelete) (Tcl_AsyncHandler async); \/* 72 *\/$/;"	m	struct:TclStubs	access:public
tcl_AsyncInvoke	/usr/include/tclDecls.h	/^    int (*tcl_AsyncInvoke) (Tcl_Interp * interp, int code); \/* 73 *\/$/;"	m	struct:TclStubs	access:public
tcl_AsyncMark	/usr/include/tclDecls.h	/^    void (*tcl_AsyncMark) (Tcl_AsyncHandler async); \/* 74 *\/$/;"	m	struct:TclStubs	access:public
tcl_AsyncReady	/usr/include/tclDecls.h	/^    int (*tcl_AsyncReady) (void); \/* 75 *\/$/;"	m	struct:TclStubs	access:public
tcl_AttemptAlloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptAlloc) (unsigned int size); \/* 428 *\/$/;"	m	struct:TclStubs	access:public
tcl_AttemptDbCkalloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptDbCkalloc) (unsigned int size, CONST char * file, int line); \/* 429 *\/$/;"	m	struct:TclStubs	access:public
tcl_AttemptDbCkrealloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptDbCkrealloc) (char * ptr, unsigned int size, CONST char * file, int line); \/* 431 *\/$/;"	m	struct:TclStubs	access:public
tcl_AttemptRealloc	/usr/include/tclDecls.h	/^    char * (*tcl_AttemptRealloc) (char * ptr, unsigned int size); \/* 430 *\/$/;"	m	struct:TclStubs	access:public
tcl_AttemptSetObjLength	/usr/include/tclDecls.h	/^    int (*tcl_AttemptSetObjLength) (Tcl_Obj * objPtr, int length); \/* 432 *\/$/;"	m	struct:TclStubs	access:public
tcl_BackgroundError	/usr/include/tclDecls.h	/^    void (*tcl_BackgroundError) (Tcl_Interp * interp); \/* 76 *\/$/;"	m	struct:TclStubs	access:public
tcl_Backslash	/usr/include/tclDecls.h	/^    char (*tcl_Backslash) (CONST char * src, int * readPtr); \/* 77 *\/$/;"	m	struct:TclStubs	access:public
tcl_BadChannelOption	/usr/include/tclDecls.h	/^    int (*tcl_BadChannelOption) (Tcl_Interp * interp, CONST char * optionName, CONST char * optionList); \/* 78 *\/$/;"	m	struct:TclStubs	access:public
tcl_CallWhenDeleted	/usr/include/tclDecls.h	/^    void (*tcl_CallWhenDeleted) (Tcl_Interp * interp, Tcl_InterpDeleteProc * proc, ClientData clientData); \/* 79 *\/$/;"	m	struct:TclStubs	access:public
tcl_CancelIdleCall	/usr/include/tclDecls.h	/^    void (*tcl_CancelIdleCall) (Tcl_IdleProc * idleProc, ClientData clientData); \/* 80 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelBlockModeProc	/usr/include/tclDecls.h	/^    Tcl_DriverBlockModeProc * (*tcl_ChannelBlockModeProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 400 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelBuffered	/usr/include/tclDecls.h	/^    int (*tcl_ChannelBuffered) (Tcl_Channel chan); \/* 397 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelClose2Proc	/usr/include/tclDecls.h	/^    Tcl_DriverClose2Proc * (*tcl_ChannelClose2Proc) (CONST Tcl_ChannelType * chanTypePtr); \/* 402 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelCloseProc	/usr/include/tclDecls.h	/^    Tcl_DriverCloseProc * (*tcl_ChannelCloseProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 401 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelFlushProc	/usr/include/tclDecls.h	/^    Tcl_DriverFlushProc * (*tcl_ChannelFlushProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 410 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelGetHandleProc	/usr/include/tclDecls.h	/^    Tcl_DriverGetHandleProc * (*tcl_ChannelGetHandleProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 409 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelGetOptionProc	/usr/include/tclDecls.h	/^    Tcl_DriverGetOptionProc * (*tcl_ChannelGetOptionProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 407 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelHandlerProc	/usr/include/tclDecls.h	/^    Tcl_DriverHandlerProc * (*tcl_ChannelHandlerProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 411 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelInputProc	/usr/include/tclDecls.h	/^    Tcl_DriverInputProc * (*tcl_ChannelInputProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 403 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ChannelName) (CONST Tcl_ChannelType * chanTypePtr); \/* 398 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelOutputProc	/usr/include/tclDecls.h	/^    Tcl_DriverOutputProc * (*tcl_ChannelOutputProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 404 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelSeekProc	/usr/include/tclDecls.h	/^    Tcl_DriverSeekProc * (*tcl_ChannelSeekProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 405 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelSetOptionProc	/usr/include/tclDecls.h	/^    Tcl_DriverSetOptionProc * (*tcl_ChannelSetOptionProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 406 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelThreadActionProc	/usr/include/tclDecls.h	/^    Tcl_DriverThreadActionProc * (*tcl_ChannelThreadActionProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 554 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelTruncateProc	/usr/include/tclDecls.h	/^    Tcl_DriverTruncateProc * (*tcl_ChannelTruncateProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 561 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelVersion	/usr/include/tclDecls.h	/^    Tcl_ChannelTypeVersion (*tcl_ChannelVersion) (CONST Tcl_ChannelType * chanTypePtr); \/* 399 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelWatchProc	/usr/include/tclDecls.h	/^    Tcl_DriverWatchProc * (*tcl_ChannelWatchProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 408 *\/$/;"	m	struct:TclStubs	access:public
tcl_ChannelWideSeekProc	/usr/include/tclDecls.h	/^    Tcl_DriverWideSeekProc * (*tcl_ChannelWideSeekProc) (CONST Tcl_ChannelType * chanTypePtr); \/* 493 *\/$/;"	m	struct:TclStubs	access:public
tcl_Chdir	/usr/include/tclDecls.h	/^    int (*tcl_Chdir) (CONST char * dirName); \/* 366 *\/$/;"	m	struct:TclStubs	access:public
tcl_ClearChannelHandlers	/usr/include/tclDecls.h	/^    void (*tcl_ClearChannelHandlers) (Tcl_Channel channel); \/* 417 *\/$/;"	m	struct:TclStubs	access:public
tcl_Close	/usr/include/tclDecls.h	/^    int (*tcl_Close) (Tcl_Interp * interp, Tcl_Channel chan); \/* 81 *\/$/;"	m	struct:TclStubs	access:public
tcl_CommandComplete	/usr/include/tclDecls.h	/^    int (*tcl_CommandComplete) (CONST char * cmd); \/* 82 *\/$/;"	m	struct:TclStubs	access:public
tcl_CommandTraceInfo	/usr/include/tclDecls.h	/^    ClientData (*tcl_CommandTraceInfo) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * procPtr, ClientData prevClientData); \/* 425 *\/$/;"	m	struct:TclStubs	access:public
tcl_Concat	/usr/include/tclDecls.h	/^    char * (*tcl_Concat) (int argc, CONST84 char * CONST * argv); \/* 83 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConcatObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ConcatObj) (int objc, Tcl_Obj *CONST objv[]); \/* 17 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConditionFinalize	/usr/include/tclDecls.h	/^    void (*tcl_ConditionFinalize) (Tcl_Condition * condPtr); \/* 391 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConditionNotify	/usr/include/tclDecls.h	/^    void (*tcl_ConditionNotify) (Tcl_Condition * condPtr); \/* 310 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConditionWait	/usr/include/tclDecls.h	/^    void (*tcl_ConditionWait) (Tcl_Condition * condPtr, Tcl_Mutex * mutexPtr, Tcl_Time * timePtr); \/* 311 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConvertCountedElement	/usr/include/tclDecls.h	/^    int (*tcl_ConvertCountedElement) (CONST char * src, int length, char * dst, int flags); \/* 85 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConvertElement	/usr/include/tclDecls.h	/^    int (*tcl_ConvertElement) (CONST char * src, char * dst, int flags); \/* 84 *\/$/;"	m	struct:TclStubs	access:public
tcl_ConvertToType	/usr/include/tclDecls.h	/^    int (*tcl_ConvertToType) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_ObjType * typePtr); \/* 18 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateAlias	/usr/include/tclDecls.h	/^    int (*tcl_CreateAlias) (Tcl_Interp * slave, CONST char * slaveCmd, Tcl_Interp * target, CONST char * targetCmd, int argc, CONST84 char * CONST * argv); \/* 86 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateAliasObj	/usr/include/tclDecls.h	/^    int (*tcl_CreateAliasObj) (Tcl_Interp * slave, CONST char * slaveCmd, Tcl_Interp * target, CONST char * targetCmd, int objc, Tcl_Obj *CONST objv[]); \/* 87 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_CreateChannel) (Tcl_ChannelType * typePtr, CONST char * chanName, ClientData instanceData, int mask); \/* 88 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateChannelHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateChannelHandler) (Tcl_Channel chan, int mask, Tcl_ChannelProc * proc, ClientData clientData); \/* 89 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateCloseHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateCloseHandler) (Tcl_Channel chan, Tcl_CloseProc * proc, ClientData clientData); \/* 90 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateCommand	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_CreateCommand) (Tcl_Interp * interp, CONST char * cmdName, Tcl_CmdProc * proc, ClientData clientData, Tcl_CmdDeleteProc * deleteProc); \/* 91 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateEncoding	/usr/include/tclDecls.h	/^    Tcl_Encoding (*tcl_CreateEncoding) (const Tcl_EncodingType * typePtr); \/* 287 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateEnsemble	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_CreateEnsemble) (Tcl_Interp * interp, CONST char * name, Tcl_Namespace * namespacePtr, int flags); \/* 541 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateEventSource	/usr/include/tclDecls.h	/^    void (*tcl_CreateEventSource) (Tcl_EventSetupProc * setupProc, Tcl_EventCheckProc * checkProc, ClientData clientData); \/* 92 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 93 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateFileHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateFileHandler) (int fd, int mask, Tcl_FileProc * proc, ClientData clientData); \/* 9 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_CreateHashEntry) (Tcl_HashTable * tablePtr, CONST char * key, int * newPtr); \/* 422 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateInterp	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_CreateInterp) (void); \/* 94 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateMathFunc	/usr/include/tclDecls.h	/^    void (*tcl_CreateMathFunc) (Tcl_Interp * interp, CONST char * name, int numArgs, Tcl_ValueType * argTypes, Tcl_MathProc * proc, ClientData clientData); \/* 95 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_CreateNamespace) (Tcl_Interp * interp, CONST char * name, ClientData clientData, Tcl_NamespaceDeleteProc * deleteProc); \/* 506 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateObjCommand	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_CreateObjCommand) (Tcl_Interp * interp, CONST char * cmdName, Tcl_ObjCmdProc * proc, ClientData clientData, Tcl_CmdDeleteProc * deleteProc); \/* 96 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateObjTrace	/usr/include/tclDecls.h	/^    Tcl_Trace (*tcl_CreateObjTrace) (Tcl_Interp* interp, int level, int flags, Tcl_CmdObjTraceProc* objProc, ClientData clientData, Tcl_CmdObjTraceDeleteProc* delProc); \/* 483 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateSlave	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_CreateSlave) (Tcl_Interp * interp, CONST char * slaveName, int isSafe); \/* 97 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateThread	/usr/include/tclDecls.h	/^    int (*tcl_CreateThread) (Tcl_ThreadId * idPtr, Tcl_ThreadCreateProc proc, ClientData clientData, int stackSize, int flags); \/* 393 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateThreadExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_CreateThreadExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 288 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateTimerHandler	/usr/include/tclDecls.h	/^    Tcl_TimerToken (*tcl_CreateTimerHandler) (int milliseconds, Tcl_TimerProc * proc, ClientData clientData); \/* 98 *\/$/;"	m	struct:TclStubs	access:public
tcl_CreateTrace	/usr/include/tclDecls.h	/^    Tcl_Trace (*tcl_CreateTrace) (Tcl_Interp * interp, int level, Tcl_CmdTraceProc * proc, ClientData clientData); \/* 99 *\/$/;"	m	struct:TclStubs	access:public
tcl_CutChannel	/usr/include/tclDecls.h	/^    void (*tcl_CutChannel) (Tcl_Channel channel); \/* 415 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringAppend	/usr/include/tclDecls.h	/^    char * (*tcl_DStringAppend) (Tcl_DString * dsPtr, CONST char * bytes, int length); \/* 117 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringAppendElement	/usr/include/tclDecls.h	/^    char * (*tcl_DStringAppendElement) (Tcl_DString * dsPtr, CONST char * element); \/* 118 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringEndSublist	/usr/include/tclDecls.h	/^    void (*tcl_DStringEndSublist) (Tcl_DString * dsPtr); \/* 119 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringFree	/usr/include/tclDecls.h	/^    void (*tcl_DStringFree) (Tcl_DString * dsPtr); \/* 120 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringGetResult	/usr/include/tclDecls.h	/^    void (*tcl_DStringGetResult) (Tcl_Interp * interp, Tcl_DString * dsPtr); \/* 121 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringInit	/usr/include/tclDecls.h	/^    void (*tcl_DStringInit) (Tcl_DString * dsPtr); \/* 122 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringResult	/usr/include/tclDecls.h	/^    void (*tcl_DStringResult) (Tcl_Interp * interp, Tcl_DString * dsPtr); \/* 123 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringSetLength	/usr/include/tclDecls.h	/^    void (*tcl_DStringSetLength) (Tcl_DString * dsPtr, int length); \/* 124 *\/$/;"	m	struct:TclStubs	access:public
tcl_DStringStartSublist	/usr/include/tclDecls.h	/^    void (*tcl_DStringStartSublist) (Tcl_DString * dsPtr); \/* 125 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbCkalloc	/usr/include/tclDecls.h	/^    char * (*tcl_DbCkalloc) (unsigned int size, CONST char * file, int line); \/* 6 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbCkfree	/usr/include/tclDecls.h	/^    int (*tcl_DbCkfree) (char * ptr, CONST char * file, int line); \/* 7 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbCkrealloc	/usr/include/tclDecls.h	/^    char * (*tcl_DbCkrealloc) (char * ptr, unsigned int size, CONST char * file, int line); \/* 8 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbDecrRefCount	/usr/include/tclDecls.h	/^    void (*tcl_DbDecrRefCount) (Tcl_Obj * objPtr, CONST char * file, int line); \/* 19 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbIncrRefCount	/usr/include/tclDecls.h	/^    void (*tcl_DbIncrRefCount) (Tcl_Obj * objPtr, CONST char * file, int line); \/* 20 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbIsShared	/usr/include/tclDecls.h	/^    int (*tcl_DbIsShared) (Tcl_Obj * objPtr, CONST char * file, int line); \/* 21 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewBignumObj	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_DbNewBignumObj) (mp_int* value, CONST char* file, int line); \/* 556 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewBooleanObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewBooleanObj) (int boolValue, CONST char * file, int line); \/* 22 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewByteArrayObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewByteArrayObj) (CONST unsigned char * bytes, int length, CONST char * file, int line); \/* 23 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewDictObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewDictObj) (CONST char * file, int line); \/* 504 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewDoubleObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewDoubleObj) (double doubleValue, CONST char * file, int line); \/* 24 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewListObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewListObj) (int objc, Tcl_Obj *CONST * objv, CONST char * file, int line); \/* 25 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewLongObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewLongObj) (long longValue, CONST char * file, int line); \/* 26 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewObj) (CONST char * file, int line); \/* 27 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewStringObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewStringObj) (CONST char * bytes, int length, CONST char * file, int line); \/* 28 *\/$/;"	m	struct:TclStubs	access:public
tcl_DbNewWideIntObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewWideIntObj) (Tcl_WideInt wideValue, CONST char * file, int line); \/* 486 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteAssocData	/usr/include/tclDecls.h	/^    void (*tcl_DeleteAssocData) (Tcl_Interp * interp, CONST char * name); \/* 100 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteChannelHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteChannelHandler) (Tcl_Channel chan, Tcl_ChannelProc * proc, ClientData clientData); \/* 101 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteCloseHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteCloseHandler) (Tcl_Channel chan, Tcl_CloseProc * proc, ClientData clientData); \/* 102 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteCommand	/usr/include/tclDecls.h	/^    int (*tcl_DeleteCommand) (Tcl_Interp * interp, CONST char * cmdName); \/* 103 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteCommandFromToken	/usr/include/tclDecls.h	/^    int (*tcl_DeleteCommandFromToken) (Tcl_Interp * interp, Tcl_Command command); \/* 104 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteEventSource	/usr/include/tclDecls.h	/^    void (*tcl_DeleteEventSource) (Tcl_EventSetupProc * setupProc, Tcl_EventCheckProc * checkProc, ClientData clientData); \/* 106 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteEvents	/usr/include/tclDecls.h	/^    void (*tcl_DeleteEvents) (Tcl_EventDeleteProc * proc, ClientData clientData); \/* 105 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 107 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteFileHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteFileHandler) (int fd); \/* 10 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteHashEntry	/usr/include/tclDecls.h	/^    void (*tcl_DeleteHashEntry) (Tcl_HashEntry * entryPtr); \/* 108 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteHashTable	/usr/include/tclDecls.h	/^    void (*tcl_DeleteHashTable) (Tcl_HashTable * tablePtr); \/* 109 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteInterp	/usr/include/tclDecls.h	/^    void (*tcl_DeleteInterp) (Tcl_Interp * interp); \/* 110 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteNamespace	/usr/include/tclDecls.h	/^    void (*tcl_DeleteNamespace) (Tcl_Namespace * nsPtr); \/* 507 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteThreadExitHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteThreadExitHandler) (Tcl_ExitProc * proc, ClientData clientData); \/* 289 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteTimerHandler	/usr/include/tclDecls.h	/^    void (*tcl_DeleteTimerHandler) (Tcl_TimerToken token); \/* 112 *\/$/;"	m	struct:TclStubs	access:public
tcl_DeleteTrace	/usr/include/tclDecls.h	/^    void (*tcl_DeleteTrace) (Tcl_Interp * interp, Tcl_Trace trace); \/* 113 *\/$/;"	m	struct:TclStubs	access:public
tcl_DetachChannel	/usr/include/tclDecls.h	/^    int (*tcl_DetachChannel) (Tcl_Interp* interp, Tcl_Channel channel); \/* 438 *\/$/;"	m	struct:TclStubs	access:public
tcl_DetachPids	/usr/include/tclDecls.h	/^    void (*tcl_DetachPids) (int numPids, Tcl_Pid * pidPtr); \/* 111 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjDone	/usr/include/tclDecls.h	/^    void (*tcl_DictObjDone) (Tcl_DictSearch * searchPtr); \/* 500 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjFirst	/usr/include/tclDecls.h	/^    int (*tcl_DictObjFirst) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr); \/* 498 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjGet	/usr/include/tclDecls.h	/^    int (*tcl_DictObjGet) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj ** valuePtrPtr); \/* 495 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjNext	/usr/include/tclDecls.h	/^    void (*tcl_DictObjNext) (Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr); \/* 499 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjPut	/usr/include/tclDecls.h	/^    int (*tcl_DictObjPut) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj * valuePtr); \/* 494 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjPutKeyList	/usr/include/tclDecls.h	/^    int (*tcl_DictObjPutKeyList) (Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv, Tcl_Obj * valuePtr); \/* 501 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjRemove	/usr/include/tclDecls.h	/^    int (*tcl_DictObjRemove) (Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr); \/* 496 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjRemoveKeyList	/usr/include/tclDecls.h	/^    int (*tcl_DictObjRemoveKeyList) (Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv); \/* 502 *\/$/;"	m	struct:TclStubs	access:public
tcl_DictObjSize	/usr/include/tclDecls.h	/^    int (*tcl_DictObjSize) (Tcl_Interp * interp, Tcl_Obj * dictPtr, int * sizePtr); \/* 497 *\/$/;"	m	struct:TclStubs	access:public
tcl_DiscardInterpState	/usr/include/tclDecls.h	/^    void (*tcl_DiscardInterpState) (Tcl_InterpState state); \/* 537 *\/$/;"	m	struct:TclStubs	access:public
tcl_DiscardResult	/usr/include/tclDecls.h	/^    void (*tcl_DiscardResult) (Tcl_SavedResult * statePtr); \/* 290 *\/$/;"	m	struct:TclStubs	access:public
tcl_DoOneEvent	/usr/include/tclDecls.h	/^    int (*tcl_DoOneEvent) (int flags); \/* 115 *\/$/;"	m	struct:TclStubs	access:public
tcl_DoWhenIdle	/usr/include/tclDecls.h	/^    void (*tcl_DoWhenIdle) (Tcl_IdleProc * proc, ClientData clientData); \/* 116 *\/$/;"	m	struct:TclStubs	access:public
tcl_DontCallWhenDeleted	/usr/include/tclDecls.h	/^    void (*tcl_DontCallWhenDeleted) (Tcl_Interp * interp, Tcl_InterpDeleteProc * proc, ClientData clientData); \/* 114 *\/$/;"	m	struct:TclStubs	access:public
tcl_DumpActiveMemory	/usr/include/tclDecls.h	/^    int (*tcl_DumpActiveMemory) (CONST char * fileName); \/* 265 *\/$/;"	m	struct:TclStubs	access:public
tcl_DuplicateObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_DuplicateObj) (Tcl_Obj * objPtr); \/* 29 *\/$/;"	m	struct:TclStubs	access:public
tcl_Eof	/usr/include/tclDecls.h	/^    int (*tcl_Eof) (Tcl_Channel chan); \/* 126 *\/$/;"	m	struct:TclStubs	access:public
tcl_ErrnoId	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ErrnoId) (void); \/* 127 *\/$/;"	m	struct:TclStubs	access:public
tcl_ErrnoMsg	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ErrnoMsg) (int err); \/* 128 *\/$/;"	m	struct:TclStubs	access:public
tcl_Eval	/usr/include/tclDecls.h	/^    int (*tcl_Eval) (Tcl_Interp * interp, CONST char * script); \/* 129 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalEx	/usr/include/tclDecls.h	/^    int (*tcl_EvalEx) (Tcl_Interp * interp, CONST char * script, int numBytes, int flags); \/* 291 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalFile	/usr/include/tclDecls.h	/^    int (*tcl_EvalFile) (Tcl_Interp * interp, CONST char * fileName); \/* 130 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalObj	/usr/include/tclDecls.h	/^    int (*tcl_EvalObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 131 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalObjEx	/usr/include/tclDecls.h	/^    int (*tcl_EvalObjEx) (Tcl_Interp * interp, Tcl_Obj * objPtr, int flags); \/* 293 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalObjv	/usr/include/tclDecls.h	/^    int (*tcl_EvalObjv) (Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], int flags); \/* 292 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalTokens	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_EvalTokens) (Tcl_Interp * interp, Tcl_Token * tokenPtr, int count); \/* 357 *\/$/;"	m	struct:TclStubs	access:public
tcl_EvalTokensStandard	/usr/include/tclDecls.h	/^    int (*tcl_EvalTokensStandard) (Tcl_Interp * interp, Tcl_Token * tokenPtr, int count); \/* 481 *\/$/;"	m	struct:TclStubs	access:public
tcl_EventuallyFree	/usr/include/tclDecls.h	/^    void (*tcl_EventuallyFree) (ClientData clientData, Tcl_FreeProc * freeProc); \/* 132 *\/$/;"	m	struct:TclStubs	access:public
tcl_Exit	/usr/include/tclDecls.h	/^    void (*tcl_Exit) (int status); \/* 133 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExitThread	/usr/include/tclDecls.h	/^    void (*tcl_ExitThread) (int status); \/* 294 *\/$/;"	m	struct:TclStubs	access:public
tcl_Export	/usr/include/tclDecls.h	/^    int (*tcl_Export) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern, int resetListFirst); \/* 509 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExposeCommand	/usr/include/tclDecls.h	/^    int (*tcl_ExposeCommand) (Tcl_Interp * interp, CONST char * hiddenCmdToken, CONST char * cmdName); \/* 134 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprBoolean	/usr/include/tclDecls.h	/^    int (*tcl_ExprBoolean) (Tcl_Interp * interp, CONST char * expr, int * ptr); \/* 135 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprBooleanObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprBooleanObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * ptr); \/* 136 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprDouble	/usr/include/tclDecls.h	/^    int (*tcl_ExprDouble) (Tcl_Interp * interp, CONST char * expr, double * ptr); \/* 137 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprDoubleObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprDoubleObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, double * ptr); \/* 138 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprLong	/usr/include/tclDecls.h	/^    int (*tcl_ExprLong) (Tcl_Interp * interp, CONST char * expr, long * ptr); \/* 139 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprLongObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprLongObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, long * ptr); \/* 140 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprObj	/usr/include/tclDecls.h	/^    int (*tcl_ExprObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_Obj ** resultPtrPtr); \/* 141 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExprString	/usr/include/tclDecls.h	/^    int (*tcl_ExprString) (Tcl_Interp * interp, CONST char * expr); \/* 142 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExternalToUtf	/usr/include/tclDecls.h	/^    int (*tcl_ExternalToUtf) (Tcl_Interp * interp, Tcl_Encoding encoding, CONST char * src, int srcLen, int flags, Tcl_EncodingState * statePtr, char * dst, int dstLen, int * srcReadPtr, int * dstWrotePtr, int * dstCharsPtr); \/* 295 *\/$/;"	m	struct:TclStubs	access:public
tcl_ExternalToUtfDString	/usr/include/tclDecls.h	/^    char * (*tcl_ExternalToUtfDString) (Tcl_Encoding encoding, CONST char * src, int srcLen, Tcl_DString * dsPtr); \/* 296 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSAccess	/usr/include/tclDecls.h	/^    int (*tcl_FSAccess) (Tcl_Obj * pathPtr, int mode); \/* 455 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSChdir	/usr/include/tclDecls.h	/^    int (*tcl_FSChdir) (Tcl_Obj * pathPtr); \/* 458 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSConvertToPathType	/usr/include/tclDecls.h	/^    int (*tcl_FSConvertToPathType) (Tcl_Interp * interp, Tcl_Obj * pathPtr); \/* 459 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSCopyDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSCopyDirectory) (Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr, Tcl_Obj ** errorPtr); \/* 441 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSCopyFile	/usr/include/tclDecls.h	/^    int (*tcl_FSCopyFile) (Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr); \/* 440 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSCreateDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSCreateDirectory) (Tcl_Obj * pathPtr); \/* 442 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSData	/usr/include/tclDecls.h	/^    ClientData (*tcl_FSData) (Tcl_Filesystem * fsPtr); \/* 475 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSDeleteFile	/usr/include/tclDecls.h	/^    int (*tcl_FSDeleteFile) (Tcl_Obj * pathPtr); \/* 443 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSEqualPaths	/usr/include/tclDecls.h	/^    int (*tcl_FSEqualPaths) (Tcl_Obj* firstPtr, Tcl_Obj* secondPtr); \/* 462 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSEvalFile	/usr/include/tclDecls.h	/^    int (*tcl_FSEvalFile) (Tcl_Interp * interp, Tcl_Obj * fileName); \/* 467 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSEvalFileEx	/usr/include/tclDecls.h	/^    int (*tcl_FSEvalFileEx) (Tcl_Interp * interp, Tcl_Obj * fileName, CONST char * encodingName); \/* 518 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSFileAttrStrings	/usr/include/tclDecls.h	/^    CONST char ** (*tcl_FSFileAttrStrings) (Tcl_Obj * pathPtr, Tcl_Obj ** objPtrRef); \/* 453 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSFileAttrsGet	/usr/include/tclDecls.h	/^    int (*tcl_FSFileAttrsGet) (Tcl_Interp * interp, int index, Tcl_Obj * pathPtr, Tcl_Obj ** objPtrRef); \/* 451 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSFileAttrsSet	/usr/include/tclDecls.h	/^    int (*tcl_FSFileAttrsSet) (Tcl_Interp * interp, int index, Tcl_Obj * pathPtr, Tcl_Obj * objPtr); \/* 452 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSFileSystemInfo	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSFileSystemInfo) (Tcl_Obj* pathPtr); \/* 470 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetCwd	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSGetCwd) (Tcl_Interp * interp); \/* 457 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetFileSystemForPath	/usr/include/tclDecls.h	/^    Tcl_Filesystem* (*tcl_FSGetFileSystemForPath) (Tcl_Obj* pathPtr); \/* 477 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetInternalRep	/usr/include/tclDecls.h	/^    ClientData (*tcl_FSGetInternalRep) (Tcl_Obj* pathPtr, Tcl_Filesystem * fsPtr); \/* 465 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetNativePath	/usr/include/tclDecls.h	/^    CONST char* (*tcl_FSGetNativePath) (Tcl_Obj* pathPtr); \/* 469 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetNormalizedPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSGetNormalizedPath) (Tcl_Interp * interp, Tcl_Obj* pathPtr); \/* 463 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetPathType	/usr/include/tclDecls.h	/^    Tcl_PathType (*tcl_FSGetPathType) (Tcl_Obj * pathPtr); \/* 478 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetTranslatedPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSGetTranslatedPath) (Tcl_Interp * interp, Tcl_Obj* pathPtr); \/* 466 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSGetTranslatedStringPath	/usr/include/tclDecls.h	/^    CONST char* (*tcl_FSGetTranslatedStringPath) (Tcl_Interp * interp, Tcl_Obj* pathPtr); \/* 476 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSJoinPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSJoinPath) (Tcl_Obj * listObj, int elements); \/* 460 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSJoinToPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSJoinToPath) (Tcl_Obj * pathPtr, int objc, Tcl_Obj *CONST objv[]); \/* 464 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSLink	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_FSLink) (Tcl_Obj * pathPtr, Tcl_Obj * toPtr, int linkAction); \/* 446 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSListVolumes	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSListVolumes) (void); \/* 472 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSLoadFile	/usr/include/tclDecls.h	/^    int (*tcl_FSLoadFile) (Tcl_Interp * interp, Tcl_Obj * pathPtr, CONST char * sym1, CONST char * sym2, Tcl_PackageInitProc ** proc1Ptr, Tcl_PackageInitProc ** proc2Ptr, Tcl_LoadHandle * handlePtr, Tcl_FSUnloadFileProc ** unloadProcPtr); \/* 444 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSLstat	/usr/include/tclDecls.h	/^    int (*tcl_FSLstat) (Tcl_Obj * pathPtr, Tcl_StatBuf * buf); \/* 449 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSMatchInDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSMatchInDirectory) (Tcl_Interp * interp, Tcl_Obj * result, Tcl_Obj * pathPtr, CONST char * pattern, Tcl_GlobTypeData * types); \/* 445 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSMountsChanged	/usr/include/tclDecls.h	/^    void (*tcl_FSMountsChanged) (Tcl_Filesystem * fsPtr); \/* 480 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSNewNativePath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSNewNativePath) (Tcl_Filesystem* fromFilesystem, ClientData clientData); \/* 468 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSOpenFileChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_FSOpenFileChannel) (Tcl_Interp * interp, Tcl_Obj * pathPtr, CONST char * modeString, int permissions); \/* 456 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSPathSeparator	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSPathSeparator) (Tcl_Obj* pathPtr); \/* 471 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSRegister	/usr/include/tclDecls.h	/^    int (*tcl_FSRegister) (ClientData clientData, Tcl_Filesystem * fsPtr); \/* 473 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSRemoveDirectory	/usr/include/tclDecls.h	/^    int (*tcl_FSRemoveDirectory) (Tcl_Obj * pathPtr, int recursive, Tcl_Obj ** errorPtr); \/* 447 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSRenameFile	/usr/include/tclDecls.h	/^    int (*tcl_FSRenameFile) (Tcl_Obj * srcPathPtr, Tcl_Obj * destPathPtr); \/* 448 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSSplitPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_FSSplitPath) (Tcl_Obj* pathPtr, int * lenPtr); \/* 461 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSStat	/usr/include/tclDecls.h	/^    int (*tcl_FSStat) (Tcl_Obj * pathPtr, Tcl_StatBuf * buf); \/* 454 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSUnregister	/usr/include/tclDecls.h	/^    int (*tcl_FSUnregister) (Tcl_Filesystem * fsPtr); \/* 474 *\/$/;"	m	struct:TclStubs	access:public
tcl_FSUtime	/usr/include/tclDecls.h	/^    int (*tcl_FSUtime) (Tcl_Obj * pathPtr, struct utimbuf * tval); \/* 450 *\/$/;"	m	struct:TclStubs	access:public
tcl_Finalize	/usr/include/tclDecls.h	/^    void (*tcl_Finalize) (void); \/* 143 *\/$/;"	m	struct:TclStubs	access:public
tcl_FinalizeNotifier	/usr/include/tclDecls.h	/^    void (*tcl_FinalizeNotifier) (ClientData clientData); \/* 298 *\/$/;"	m	struct:TclStubs	access:public
tcl_FinalizeThread	/usr/include/tclDecls.h	/^    void (*tcl_FinalizeThread) (void); \/* 297 *\/$/;"	m	struct:TclStubs	access:public
tcl_FindCommand	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_FindCommand) (Tcl_Interp * interp, CONST char * name, Tcl_Namespace * contextNsPtr, int flags); \/* 515 *\/$/;"	m	struct:TclStubs	access:public
tcl_FindEnsemble	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_FindEnsemble) (Tcl_Interp * interp, Tcl_Obj * cmdNameObj, int flags); \/* 542 *\/$/;"	m	struct:TclStubs	access:public
tcl_FindExecutable	/usr/include/tclDecls.h	/^    void (*tcl_FindExecutable) (CONST char * argv0); \/* 144 *\/$/;"	m	struct:TclStubs	access:public
tcl_FindHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_FindHashEntry) (Tcl_HashTable * tablePtr, CONST char * key); \/* 421 *\/$/;"	m	struct:TclStubs	access:public
tcl_FindNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_FindNamespace) (Tcl_Interp * interp, CONST char * name, Tcl_Namespace * contextNsPtr, int flags); \/* 514 *\/$/;"	m	struct:TclStubs	access:public
tcl_FirstHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_FirstHashEntry) (Tcl_HashTable * tablePtr, Tcl_HashSearch * searchPtr); \/* 145 *\/$/;"	m	struct:TclStubs	access:public
tcl_Flush	/usr/include/tclDecls.h	/^    int (*tcl_Flush) (Tcl_Channel chan); \/* 146 *\/$/;"	m	struct:TclStubs	access:public
tcl_ForgetImport	/usr/include/tclDecls.h	/^    int (*tcl_ForgetImport) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern); \/* 511 *\/$/;"	m	struct:TclStubs	access:public
tcl_Format	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_Format) (Tcl_Interp * interp, CONST char * format, int objc, Tcl_Obj * CONST objv[]); \/* 576 *\/$/;"	m	struct:TclStubs	access:public
tcl_Free	/usr/include/tclDecls.h	/^    void (*tcl_Free) (char * ptr); \/* 4 *\/$/;"	m	struct:TclStubs	access:public
tcl_FreeEncoding	/usr/include/tclDecls.h	/^    void (*tcl_FreeEncoding) (Tcl_Encoding encoding); \/* 299 *\/$/;"	m	struct:TclStubs	access:public
tcl_FreeParse	/usr/include/tclDecls.h	/^    void (*tcl_FreeParse) (Tcl_Parse * parsePtr); \/* 358 *\/$/;"	m	struct:TclStubs	access:public
tcl_FreeResult	/usr/include/tclDecls.h	/^    void (*tcl_FreeResult) (Tcl_Interp * interp); \/* 147 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetAlias	/usr/include/tclDecls.h	/^    int (*tcl_GetAlias) (Tcl_Interp * interp, CONST char * slaveCmd, Tcl_Interp ** targetInterpPtr, CONST84 char ** targetCmdPtr, int * argcPtr, CONST84 char *** argvPtr); \/* 148 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetAliasObj	/usr/include/tclDecls.h	/^    int (*tcl_GetAliasObj) (Tcl_Interp * interp, CONST char * slaveCmd, Tcl_Interp ** targetInterpPtr, CONST84 char ** targetCmdPtr, int * objcPtr, Tcl_Obj *** objv); \/* 149 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetAllocMutex	/usr/include/tclDecls.h	/^    Tcl_Mutex * (*tcl_GetAllocMutex) (void); \/* 387 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetAssocData	/usr/include/tclDecls.h	/^    ClientData (*tcl_GetAssocData) (Tcl_Interp * interp, CONST char * name, Tcl_InterpDeleteProc ** procPtr); \/* 150 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetBignumFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetBignumFromObj) (Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value); \/* 558 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetBoolean	/usr/include/tclDecls.h	/^    int (*tcl_GetBoolean) (Tcl_Interp * interp, CONST char * src, int * boolPtr); \/* 31 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetBooleanFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetBooleanFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * boolPtr); \/* 32 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetByteArrayFromObj	/usr/include/tclDecls.h	/^    unsigned char * (*tcl_GetByteArrayFromObj) (Tcl_Obj * objPtr, int * lengthPtr); \/* 33 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetChannel) (Tcl_Interp * interp, CONST char * chanName, int * modePtr); \/* 151 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelBufferSize	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelBufferSize) (Tcl_Channel chan); \/* 152 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelError	/usr/include/tclDecls.h	/^    void (*tcl_GetChannelError) (Tcl_Channel chan, Tcl_Obj** msg); \/* 565 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelErrorInterp	/usr/include/tclDecls.h	/^    void (*tcl_GetChannelErrorInterp) (Tcl_Interp* interp, Tcl_Obj** msg); \/* 563 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelHandle	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelHandle) (Tcl_Channel chan, int direction, ClientData * handlePtr); \/* 153 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelInstanceData	/usr/include/tclDecls.h	/^    ClientData (*tcl_GetChannelInstanceData) (Tcl_Channel chan); \/* 154 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelMode	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelMode) (Tcl_Channel chan); \/* 155 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetChannelName) (Tcl_Channel chan); \/* 156 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelNames	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelNames) (Tcl_Interp * interp); \/* 388 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelNamesEx	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelNamesEx) (Tcl_Interp * interp, CONST char * pattern); \/* 389 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelOption	/usr/include/tclDecls.h	/^    int (*tcl_GetChannelOption) (Tcl_Interp * interp, Tcl_Channel chan, CONST char * optionName, Tcl_DString * dsPtr); \/* 157 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelThread	/usr/include/tclDecls.h	/^    Tcl_ThreadId (*tcl_GetChannelThread) (Tcl_Channel channel); \/* 433 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetChannelType	/usr/include/tclDecls.h	/^    Tcl_ChannelType * (*tcl_GetChannelType) (Tcl_Channel chan); \/* 158 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCharLength	/usr/include/tclDecls.h	/^    int (*tcl_GetCharLength) (Tcl_Obj * objPtr); \/* 380 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCommandFromObj	/usr/include/tclDecls.h	/^    Tcl_Command (*tcl_GetCommandFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 516 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCommandFullName	/usr/include/tclDecls.h	/^    void (*tcl_GetCommandFullName) (Tcl_Interp * interp, Tcl_Command command, Tcl_Obj * objPtr); \/* 517 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCommandInfo	/usr/include/tclDecls.h	/^    int (*tcl_GetCommandInfo) (Tcl_Interp * interp, CONST char * cmdName, Tcl_CmdInfo * infoPtr); \/* 159 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCommandInfoFromToken	/usr/include/tclDecls.h	/^    int (*tcl_GetCommandInfoFromToken) (Tcl_Command token, Tcl_CmdInfo* infoPtr); \/* 484 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCommandName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetCommandName) (Tcl_Interp * interp, Tcl_Command command); \/* 160 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCurrentNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_GetCurrentNamespace) (Tcl_Interp * interp); \/* 512 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCurrentThread	/usr/include/tclDecls.h	/^    Tcl_ThreadId (*tcl_GetCurrentThread) (void); \/* 300 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetCwd	/usr/include/tclDecls.h	/^    char * (*tcl_GetCwd) (Tcl_Interp * interp, Tcl_DString * cwdPtr); \/* 365 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetDefaultEncodingDir	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetDefaultEncodingDir) (void); \/* 341 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetDouble	/usr/include/tclDecls.h	/^    int (*tcl_GetDouble) (Tcl_Interp * interp, CONST char * src, double * doublePtr); \/* 34 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetDoubleFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetDoubleFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, double * doublePtr); \/* 35 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEncoding	/usr/include/tclDecls.h	/^    Tcl_Encoding (*tcl_GetEncoding) (Tcl_Interp * interp, CONST char * name); \/* 301 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEncodingFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetEncodingFromObj) (Tcl_Interp* interp, Tcl_Obj* objPtr, Tcl_Encoding* encodingPtr); \/* 569 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEncodingName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetEncodingName) (Tcl_Encoding encoding); \/* 302 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEncodingNameFromEnvironment	/usr/include/tclDecls.h	/^    CONST char * (*tcl_GetEncodingNameFromEnvironment) (Tcl_DString* bufPtr); \/* 572 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEncodingNames	/usr/include/tclDecls.h	/^    void (*tcl_GetEncodingNames) (Tcl_Interp * interp); \/* 303 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEncodingSearchPath	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_GetEncodingSearchPath) (void); \/* 570 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEnsembleFlags	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleFlags) (Tcl_Interp * interp, Tcl_Command token, int * flagsPtr); \/* 550 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEnsembleMappingDict	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleMappingDict) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** mapDictPtr); \/* 548 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEnsembleNamespace	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleNamespace) (Tcl_Interp * interp, Tcl_Command token, Tcl_Namespace ** namespacePtrPtr); \/* 551 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEnsembleSubcommandList	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleSubcommandList) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** subcmdListPtr); \/* 547 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^    int (*tcl_GetEnsembleUnknownHandler) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj ** unknownListPtr); \/* 549 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetErrno	/usr/include/tclDecls.h	/^    int (*tcl_GetErrno) (void); \/* 161 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetGlobalNamespace	/usr/include/tclDecls.h	/^    Tcl_Namespace * (*tcl_GetGlobalNamespace) (Tcl_Interp * interp); \/* 513 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetHostName	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetHostName) (void); \/* 162 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetIndexFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetIndexFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, CONST84 char ** tablePtr, CONST char * msg, int flags, int * indexPtr); \/* 36 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetIndexFromObjStruct	/usr/include/tclDecls.h	/^    int (*tcl_GetIndexFromObjStruct) (Tcl_Interp * interp, Tcl_Obj * objPtr, CONST VOID * tablePtr, int offset, CONST char * msg, int flags, int * indexPtr); \/* 304 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetInt	/usr/include/tclDecls.h	/^    int (*tcl_GetInt) (Tcl_Interp * interp, CONST char * src, int * intPtr); \/* 37 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetIntFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetIntFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * intPtr); \/* 38 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetInterpPath	/usr/include/tclDecls.h	/^    int (*tcl_GetInterpPath) (Tcl_Interp * askInterp, Tcl_Interp * slaveInterp); \/* 163 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetLongFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetLongFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, long * longPtr); \/* 39 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetMaster	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_GetMaster) (Tcl_Interp * interp); \/* 164 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetMathFuncInfo	/usr/include/tclDecls.h	/^    int (*tcl_GetMathFuncInfo) (Tcl_Interp * interp, CONST char * name, int * numArgsPtr, Tcl_ValueType ** argTypesPtr, Tcl_MathProc ** procPtr, ClientData * clientDataPtr); \/* 435 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetNameOfExecutable	/usr/include/tclDecls.h	/^    CONST char * (*tcl_GetNameOfExecutable) (void); \/* 165 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetNamespaceUnknownHandler) (Tcl_Interp * interp, Tcl_Namespace * nsPtr); \/* 567 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetObjResult	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetObjResult) (Tcl_Interp * interp); \/* 166 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetObjType	/usr/include/tclDecls.h	/^    Tcl_ObjType * (*tcl_GetObjType) (CONST char * typeName); \/* 40 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetOpenFile	/usr/include/tclDecls.h	/^    int (*tcl_GetOpenFile) (Tcl_Interp * interp, CONST char * chanID, int forWriting, int checkUsage, ClientData * filePtr); \/* 167 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetPathType	/usr/include/tclDecls.h	/^    Tcl_PathType (*tcl_GetPathType) (CONST char * path); \/* 168 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetRange	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetRange) (Tcl_Obj * objPtr, int first, int last); \/* 383 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetRegExpFromObj	/usr/include/tclDecls.h	/^    Tcl_RegExp (*tcl_GetRegExpFromObj) (Tcl_Interp * interp, Tcl_Obj * patObj, int flags); \/* 356 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetReturnOptions	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetReturnOptions) (Tcl_Interp * interp, int result); \/* 539 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetServiceMode	/usr/include/tclDecls.h	/^    int (*tcl_GetServiceMode) (void); \/* 171 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetSlave	/usr/include/tclDecls.h	/^    Tcl_Interp * (*tcl_GetSlave) (Tcl_Interp * interp, CONST char * slaveName); \/* 172 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetStackedChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetStackedChannel) (Tcl_Channel chan); \/* 283 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetStdChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetStdChannel) (int type); \/* 173 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetString	/usr/include/tclDecls.h	/^    char * (*tcl_GetString) (Tcl_Obj * objPtr); \/* 340 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetStringFromObj	/usr/include/tclDecls.h	/^    char * (*tcl_GetStringFromObj) (Tcl_Obj * objPtr, int * lengthPtr); \/* 41 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetStringResult	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetStringResult) (Tcl_Interp * interp); \/* 174 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetThreadData	/usr/include/tclDecls.h	/^    VOID * (*tcl_GetThreadData) (Tcl_ThreadDataKey * keyPtr, int size); \/* 305 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetTime	/usr/include/tclDecls.h	/^    void (*tcl_GetTime) (Tcl_Time* timeBuf); \/* 482 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetTopChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_GetTopChannel) (Tcl_Channel chan); \/* 396 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetUniChar	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_GetUniChar) (Tcl_Obj * objPtr, int index); \/* 381 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetUnicode	/usr/include/tclDecls.h	/^    Tcl_UniChar * (*tcl_GetUnicode) (Tcl_Obj * objPtr); \/* 382 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetUnicodeFromObj	/usr/include/tclDecls.h	/^    Tcl_UniChar * (*tcl_GetUnicodeFromObj) (Tcl_Obj * objPtr, int * lengthPtr); \/* 434 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetVar	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetVar) (Tcl_Interp * interp, CONST char * varName, int flags); \/* 175 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetVar2	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_GetVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags); \/* 176 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetVar2Ex	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_GetVar2Ex) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags); \/* 306 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetVersion	/usr/include/tclDecls.h	/^    void (*tcl_GetVersion) (int * major, int * minor, int * patchLevel, int * type); \/* 279 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetWideIntFromObj	/usr/include/tclDecls.h	/^    int (*tcl_GetWideIntFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tcl_WideInt * widePtr); \/* 487 *\/$/;"	m	struct:TclStubs	access:public
tcl_Gets	/usr/include/tclDecls.h	/^    int (*tcl_Gets) (Tcl_Channel chan, Tcl_DString * dsPtr); \/* 169 *\/$/;"	m	struct:TclStubs	access:public
tcl_GetsObj	/usr/include/tclDecls.h	/^    int (*tcl_GetsObj) (Tcl_Channel chan, Tcl_Obj * objPtr); \/* 170 *\/$/;"	m	struct:TclStubs	access:public
tcl_GlobalEval	/usr/include/tclDecls.h	/^    int (*tcl_GlobalEval) (Tcl_Interp * interp, CONST char * command); \/* 177 *\/$/;"	m	struct:TclStubs	access:public
tcl_GlobalEvalObj	/usr/include/tclDecls.h	/^    int (*tcl_GlobalEvalObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 178 *\/$/;"	m	struct:TclStubs	access:public
tcl_HashStats	/usr/include/tclDecls.h	/^    char * (*tcl_HashStats) (Tcl_HashTable * tablePtr); \/* 269 *\/$/;"	m	struct:TclStubs	access:public
tcl_HideCommand	/usr/include/tclDecls.h	/^    int (*tcl_HideCommand) (Tcl_Interp * interp, CONST char * cmdName, CONST char * hiddenCmdToken); \/* 179 *\/$/;"	m	struct:TclStubs	access:public
tcl_Import	/usr/include/tclDecls.h	/^    int (*tcl_Import) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, CONST char * pattern, int allowOverwrite); \/* 510 *\/$/;"	m	struct:TclStubs	access:public
tcl_Init	/usr/include/tclDecls.h	/^    int (*tcl_Init) (Tcl_Interp * interp); \/* 180 *\/$/;"	m	struct:TclStubs	access:public
tcl_InitBignumFromDouble	/usr/include/tclDecls.h	/^    int (*tcl_InitBignumFromDouble) (Tcl_Interp* interp, double initval, mp_int * toInit); \/* 566 *\/$/;"	m	struct:TclStubs	access:public
tcl_InitCustomHashTable	/usr/include/tclDecls.h	/^    void (*tcl_InitCustomHashTable) (Tcl_HashTable * tablePtr, int keyType, Tcl_HashKeyType * typePtr); \/* 423 *\/$/;"	m	struct:TclStubs	access:public
tcl_InitHashTable	/usr/include/tclDecls.h	/^    void (*tcl_InitHashTable) (Tcl_HashTable * tablePtr, int keyType); \/* 181 *\/$/;"	m	struct:TclStubs	access:public
tcl_InitMemory	/usr/include/tclDecls.h	/^    void (*tcl_InitMemory) (Tcl_Interp * interp); \/* 280 *\/$/;"	m	struct:TclStubs	access:public
tcl_InitNotifier	/usr/include/tclDecls.h	/^    ClientData (*tcl_InitNotifier) (void); \/* 307 *\/$/;"	m	struct:TclStubs	access:public
tcl_InitObjHashTable	/usr/include/tclDecls.h	/^    void (*tcl_InitObjHashTable) (Tcl_HashTable * tablePtr); \/* 424 *\/$/;"	m	struct:TclStubs	access:public
tcl_InputBlocked	/usr/include/tclDecls.h	/^    int (*tcl_InputBlocked) (Tcl_Channel chan); \/* 182 *\/$/;"	m	struct:TclStubs	access:public
tcl_InputBuffered	/usr/include/tclDecls.h	/^    int (*tcl_InputBuffered) (Tcl_Channel chan); \/* 183 *\/$/;"	m	struct:TclStubs	access:public
tcl_InterpDeleted	/usr/include/tclDecls.h	/^    int (*tcl_InterpDeleted) (Tcl_Interp * interp); \/* 184 *\/$/;"	m	struct:TclStubs	access:public
tcl_InvalidateStringRep	/usr/include/tclDecls.h	/^    void (*tcl_InvalidateStringRep) (Tcl_Obj * objPtr); \/* 42 *\/$/;"	m	struct:TclStubs	access:public
tcl_IsChannelExisting	/usr/include/tclDecls.h	/^    int (*tcl_IsChannelExisting) (CONST char* channelName); \/* 418 *\/$/;"	m	struct:TclStubs	access:public
tcl_IsChannelRegistered	/usr/include/tclDecls.h	/^    int (*tcl_IsChannelRegistered) (Tcl_Interp* interp, Tcl_Channel channel); \/* 414 *\/$/;"	m	struct:TclStubs	access:public
tcl_IsChannelShared	/usr/include/tclDecls.h	/^    int (*tcl_IsChannelShared) (Tcl_Channel channel); \/* 413 *\/$/;"	m	struct:TclStubs	access:public
tcl_IsEnsemble	/usr/include/tclDecls.h	/^    int (*tcl_IsEnsemble) (Tcl_Command token); \/* 540 *\/$/;"	m	struct:TclStubs	access:public
tcl_IsSafe	/usr/include/tclDecls.h	/^    int (*tcl_IsSafe) (Tcl_Interp * interp); \/* 185 *\/$/;"	m	struct:TclStubs	access:public
tcl_IsStandardChannel	/usr/include/tclDecls.h	/^    int (*tcl_IsStandardChannel) (Tcl_Channel channel); \/* 439 *\/$/;"	m	struct:TclStubs	access:public
tcl_JoinPath	/usr/include/tclDecls.h	/^    char * (*tcl_JoinPath) (int argc, CONST84 char * CONST * argv, Tcl_DString * resultPtr); \/* 186 *\/$/;"	m	struct:TclStubs	access:public
tcl_JoinThread	/usr/include/tclDecls.h	/^    int (*tcl_JoinThread) (Tcl_ThreadId threadId, int* result); \/* 412 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitAddHandler	/usr/include/tclDecls.h	/^    void (*tcl_LimitAddHandler) (Tcl_Interp * interp, int type, Tcl_LimitHandlerProc * handlerProc, ClientData clientData, Tcl_LimitHandlerDeleteProc * deleteProc); \/* 520 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitCheck	/usr/include/tclDecls.h	/^    int (*tcl_LimitCheck) (Tcl_Interp * interp); \/* 523 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitExceeded	/usr/include/tclDecls.h	/^    int (*tcl_LimitExceeded) (Tcl_Interp * interp); \/* 524 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitGetCommands	/usr/include/tclDecls.h	/^    int (*tcl_LimitGetCommands) (Tcl_Interp * interp); \/* 532 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitGetGranularity	/usr/include/tclDecls.h	/^    int (*tcl_LimitGetGranularity) (Tcl_Interp * interp, int type); \/* 534 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitGetTime	/usr/include/tclDecls.h	/^    void (*tcl_LimitGetTime) (Tcl_Interp * interp, Tcl_Time * timeLimitPtr); \/* 533 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitReady	/usr/include/tclDecls.h	/^    int (*tcl_LimitReady) (Tcl_Interp * interp); \/* 522 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitRemoveHandler	/usr/include/tclDecls.h	/^    void (*tcl_LimitRemoveHandler) (Tcl_Interp * interp, int type, Tcl_LimitHandlerProc * handlerProc, ClientData clientData); \/* 521 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitSetCommands	/usr/include/tclDecls.h	/^    void (*tcl_LimitSetCommands) (Tcl_Interp * interp, int commandLimit); \/* 525 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitSetGranularity	/usr/include/tclDecls.h	/^    void (*tcl_LimitSetGranularity) (Tcl_Interp * interp, int type, int granularity); \/* 527 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitSetTime	/usr/include/tclDecls.h	/^    void (*tcl_LimitSetTime) (Tcl_Interp * interp, Tcl_Time * timeLimitPtr); \/* 526 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitTypeEnabled	/usr/include/tclDecls.h	/^    int (*tcl_LimitTypeEnabled) (Tcl_Interp * interp, int type); \/* 528 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitTypeExceeded	/usr/include/tclDecls.h	/^    int (*tcl_LimitTypeExceeded) (Tcl_Interp * interp, int type); \/* 529 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitTypeReset	/usr/include/tclDecls.h	/^    void (*tcl_LimitTypeReset) (Tcl_Interp * interp, int type); \/* 531 *\/$/;"	m	struct:TclStubs	access:public
tcl_LimitTypeSet	/usr/include/tclDecls.h	/^    void (*tcl_LimitTypeSet) (Tcl_Interp * interp, int type); \/* 530 *\/$/;"	m	struct:TclStubs	access:public
tcl_LinkVar	/usr/include/tclDecls.h	/^    int (*tcl_LinkVar) (Tcl_Interp * interp, CONST char * varName, char * addr, int type); \/* 187 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListMathFuncs	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ListMathFuncs) (Tcl_Interp * interp, CONST char * pattern); \/* 436 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListObjAppendElement	/usr/include/tclDecls.h	/^    int (*tcl_ListObjAppendElement) (Tcl_Interp * interp, Tcl_Obj * listPtr, Tcl_Obj * objPtr); \/* 44 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListObjAppendList	/usr/include/tclDecls.h	/^    int (*tcl_ListObjAppendList) (Tcl_Interp * interp, Tcl_Obj * listPtr, Tcl_Obj * elemListPtr); \/* 43 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListObjGetElements	/usr/include/tclDecls.h	/^    int (*tcl_ListObjGetElements) (Tcl_Interp * interp, Tcl_Obj * listPtr, int * objcPtr, Tcl_Obj *** objvPtr); \/* 45 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListObjIndex	/usr/include/tclDecls.h	/^    int (*tcl_ListObjIndex) (Tcl_Interp * interp, Tcl_Obj * listPtr, int index, Tcl_Obj ** objPtrPtr); \/* 46 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListObjLength	/usr/include/tclDecls.h	/^    int (*tcl_ListObjLength) (Tcl_Interp * interp, Tcl_Obj * listPtr, int * lengthPtr); \/* 47 *\/$/;"	m	struct:TclStubs	access:public
tcl_ListObjReplace	/usr/include/tclDecls.h	/^    int (*tcl_ListObjReplace) (Tcl_Interp * interp, Tcl_Obj * listPtr, int first, int count, int objc, Tcl_Obj *CONST objv[]); \/* 48 *\/$/;"	m	struct:TclStubs	access:public
tcl_LogCommandInfo	/usr/include/tclDecls.h	/^    void (*tcl_LogCommandInfo) (Tcl_Interp * interp, CONST char * script, CONST char * command, int length); \/* 359 *\/$/;"	m	struct:TclStubs	access:public
tcl_MacOSXOpenBundleResources	/usr/include/tclPlatDecls.h	/^    int (*tcl_MacOSXOpenBundleResources) (Tcl_Interp * interp, CONST char * bundleName, int hasResourceFile, int maxPathLen, char * libraryPath); \/* 0 *\/$/;"	m	struct:TclPlatStubs	access:public
tcl_MacOSXOpenVersionedBundleResources	/usr/include/tclPlatDecls.h	/^    int (*tcl_MacOSXOpenVersionedBundleResources) (Tcl_Interp * interp, CONST char * bundleName, CONST char * bundleVersion, int hasResourceFile, int maxPathLen, char * libraryPath); \/* 1 *\/$/;"	m	struct:TclPlatStubs	access:public
tcl_MakeFileChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_MakeFileChannel) (ClientData handle, int mode); \/* 189 *\/$/;"	m	struct:TclStubs	access:public
tcl_MakeSafe	/usr/include/tclDecls.h	/^    int (*tcl_MakeSafe) (Tcl_Interp * interp); \/* 190 *\/$/;"	m	struct:TclStubs	access:public
tcl_MakeTcpClientChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_MakeTcpClientChannel) (ClientData tcpSocket); \/* 191 *\/$/;"	m	struct:TclStubs	access:public
tcl_Merge	/usr/include/tclDecls.h	/^    char * (*tcl_Merge) (int argc, CONST84 char * CONST * argv); \/* 192 *\/$/;"	m	struct:TclStubs	access:public
tcl_MutexFinalize	/usr/include/tclDecls.h	/^    void (*tcl_MutexFinalize) (Tcl_Mutex * mutex); \/* 392 *\/$/;"	m	struct:TclStubs	access:public
tcl_MutexLock	/usr/include/tclDecls.h	/^    void (*tcl_MutexLock) (Tcl_Mutex * mutexPtr); \/* 308 *\/$/;"	m	struct:TclStubs	access:public
tcl_MutexUnlock	/usr/include/tclDecls.h	/^    void (*tcl_MutexUnlock) (Tcl_Mutex * mutexPtr); \/* 309 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewBignumObj	/usr/include/tclDecls.h	/^    Tcl_Obj* (*tcl_NewBignumObj) (mp_int* value); \/* 555 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewBooleanObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewBooleanObj) (int boolValue); \/* 49 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewByteArrayObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewByteArrayObj) (CONST unsigned char* bytes, int length); \/* 50 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewDictObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewDictObj) (void); \/* 503 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewDoubleObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewDoubleObj) (double doubleValue); \/* 51 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewIntObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewIntObj) (int intValue); \/* 52 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewListObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewListObj) (int objc, Tcl_Obj *CONST objv[]); \/* 53 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewLongObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewLongObj) (long longValue); \/* 54 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewObj) (void); \/* 55 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewStringObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewStringObj) (CONST char * bytes, int length); \/* 56 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewUnicodeObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewUnicodeObj) (CONST Tcl_UniChar * unicode, int numChars); \/* 378 *\/$/;"	m	struct:TclStubs	access:public
tcl_NewWideIntObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_NewWideIntObj) (Tcl_WideInt wideValue); \/* 488 *\/$/;"	m	struct:TclStubs	access:public
tcl_NextHashEntry	/usr/include/tclDecls.h	/^    Tcl_HashEntry * (*tcl_NextHashEntry) (Tcl_HashSearch * searchPtr); \/* 193 *\/$/;"	m	struct:TclStubs	access:public
tcl_NotifyChannel	/usr/include/tclDecls.h	/^    void (*tcl_NotifyChannel) (Tcl_Channel channel, int mask); \/* 194 *\/$/;"	m	struct:TclStubs	access:public
tcl_NumUtfChars	/usr/include/tclDecls.h	/^    int (*tcl_NumUtfChars) (CONST char * src, int length); \/* 312 *\/$/;"	m	struct:TclStubs	access:public
tcl_ObjGetVar2	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjGetVar2) (Tcl_Interp * interp, Tcl_Obj * part1Ptr, Tcl_Obj * part2Ptr, int flags); \/* 195 *\/$/;"	m	struct:TclStubs	access:public
tcl_ObjPrintf	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjPrintf) (CONST char * format, ...); \/* 578 *\/$/;"	m	struct:TclStubs	access:public
tcl_ObjSetVar2	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjSetVar2) (Tcl_Interp * interp, Tcl_Obj * part1Ptr, Tcl_Obj * part2Ptr, Tcl_Obj * newValuePtr, int flags); \/* 196 *\/$/;"	m	struct:TclStubs	access:public
tcl_OpenCommandChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenCommandChannel) (Tcl_Interp * interp, int argc, CONST84 char ** argv, int flags); \/* 197 *\/$/;"	m	struct:TclStubs	access:public
tcl_OpenFileChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenFileChannel) (Tcl_Interp * interp, CONST char * fileName, CONST char * modeString, int permissions); \/* 198 *\/$/;"	m	struct:TclStubs	access:public
tcl_OpenTcpClient	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpClient) (Tcl_Interp * interp, int port, CONST char * address, CONST char * myaddr, int myport, int async); \/* 199 *\/$/;"	m	struct:TclStubs	access:public
tcl_OpenTcpServer	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpServer) (Tcl_Interp * interp, int port, CONST char * host, Tcl_TcpAcceptProc * acceptProc, ClientData callbackData); \/* 200 *\/$/;"	m	struct:TclStubs	access:public
tcl_OutputBuffered	/usr/include/tclDecls.h	/^    int (*tcl_OutputBuffered) (Tcl_Channel chan); \/* 479 *\/$/;"	m	struct:TclStubs	access:public
tcl_Panic	/usr/include/tclDecls.h	/^    void (*tcl_Panic) (CONST char * format, ...); \/* 2 *\/$/;"	m	struct:TclStubs	access:public
tcl_PanicVA	/usr/include/tclDecls.h	/^    void (*tcl_PanicVA) (CONST char * format, va_list argList); \/* 278 *\/$/;"	m	struct:TclStubs	access:public
tcl_ParseBraces	/usr/include/tclDecls.h	/^    int (*tcl_ParseBraces) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append, CONST84 char ** termPtr); \/* 360 *\/$/;"	m	struct:TclStubs	access:public
tcl_ParseCommand	/usr/include/tclDecls.h	/^    int (*tcl_ParseCommand) (Tcl_Interp * interp, CONST char * start, int numBytes, int nested, Tcl_Parse * parsePtr); \/* 361 *\/$/;"	m	struct:TclStubs	access:public
tcl_ParseExpr	/usr/include/tclDecls.h	/^    int (*tcl_ParseExpr) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr); \/* 362 *\/$/;"	m	struct:TclStubs	access:public
tcl_ParseQuotedString	/usr/include/tclDecls.h	/^    int (*tcl_ParseQuotedString) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append, CONST84 char ** termPtr); \/* 363 *\/$/;"	m	struct:TclStubs	access:public
tcl_ParseVar	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_ParseVar) (Tcl_Interp * interp, CONST char * start, CONST84 char ** termPtr); \/* 270 *\/$/;"	m	struct:TclStubs	access:public
tcl_ParseVarName	/usr/include/tclDecls.h	/^    int (*tcl_ParseVarName) (Tcl_Interp * interp, CONST char * start, int numBytes, Tcl_Parse * parsePtr, int append); \/* 364 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgPresent	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgPresent) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact); \/* 271 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgPresentEx	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgPresentEx) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact, ClientData * clientDataPtr); \/* 272 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgProvide	/usr/include/tclDecls.h	/^    int (*tcl_PkgProvide) (Tcl_Interp * interp, CONST char * name, CONST char * version); \/* 273 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgProvideEx	/usr/include/tclDecls.h	/^    int (*tcl_PkgProvideEx) (Tcl_Interp* interp, CONST char* name, CONST char* version, ClientData clientData); \/* 0 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgRequire	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgRequire) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact); \/* 274 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgRequireEx	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PkgRequireEx) (Tcl_Interp * interp, CONST char * name, CONST char * version, int exact, ClientData * clientDataPtr); \/* 1 *\/$/;"	m	struct:TclStubs	access:public
tcl_PkgRequireProc	/usr/include/tclDecls.h	/^    int (*tcl_PkgRequireProc) (Tcl_Interp * interp, CONST char * name, int objc, Tcl_Obj *CONST objv[], ClientData * clientDataPtr); \/* 573 *\/$/;"	m	struct:TclStubs	access:public
tcl_PosixError	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_PosixError) (Tcl_Interp * interp); \/* 204 *\/$/;"	m	struct:TclStubs	access:public
tcl_Preserve	/usr/include/tclDecls.h	/^    void (*tcl_Preserve) (ClientData data); \/* 201 *\/$/;"	m	struct:TclStubs	access:public
tcl_PrintDouble	/usr/include/tclDecls.h	/^    void (*tcl_PrintDouble) (Tcl_Interp * interp, double value, char * dst); \/* 202 *\/$/;"	m	struct:TclStubs	access:public
tcl_ProcObjCmd	/usr/include/tclDecls.h	/^    int (*tcl_ProcObjCmd) (ClientData clientData, Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[]); \/* 390 *\/$/;"	m	struct:TclStubs	access:public
tcl_PutEnv	/usr/include/tclDecls.h	/^    int (*tcl_PutEnv) (CONST char * assignment); \/* 203 *\/$/;"	m	struct:TclStubs	access:public
tcl_QueryTimeProc	/usr/include/tclDecls.h	/^    void (*tcl_QueryTimeProc) (Tcl_GetTimeProc** getProc, Tcl_ScaleTimeProc** scaleProc, ClientData* clientData); \/* 553 *\/$/;"	m	struct:TclStubs	access:public
tcl_QueueEvent	/usr/include/tclDecls.h	/^    void (*tcl_QueueEvent) (Tcl_Event * evPtr, Tcl_QueuePosition position); \/* 205 *\/$/;"	m	struct:TclStubs	access:public
tcl_Read	/usr/include/tclDecls.h	/^    int (*tcl_Read) (Tcl_Channel chan, char * bufPtr, int toRead); \/* 206 *\/$/;"	m	struct:TclStubs	access:public
tcl_ReadChars	/usr/include/tclDecls.h	/^    int (*tcl_ReadChars) (Tcl_Channel channel, Tcl_Obj * objPtr, int charsToRead, int appendFlag); \/* 313 *\/$/;"	m	struct:TclStubs	access:public
tcl_ReadRaw	/usr/include/tclDecls.h	/^    int (*tcl_ReadRaw) (Tcl_Channel chan, char * dst, int bytesToRead); \/* 394 *\/$/;"	m	struct:TclStubs	access:public
tcl_Realloc	/usr/include/tclDecls.h	/^    char * (*tcl_Realloc) (char * ptr, unsigned int size); \/* 5 *\/$/;"	m	struct:TclStubs	access:public
tcl_ReapDetachedProcs	/usr/include/tclDecls.h	/^    void (*tcl_ReapDetachedProcs) (void); \/* 207 *\/$/;"	m	struct:TclStubs	access:public
tcl_RecordAndEval	/usr/include/tclDecls.h	/^    int (*tcl_RecordAndEval) (Tcl_Interp * interp, CONST char * cmd, int flags); \/* 208 *\/$/;"	m	struct:TclStubs	access:public
tcl_RecordAndEvalObj	/usr/include/tclDecls.h	/^    int (*tcl_RecordAndEvalObj) (Tcl_Interp * interp, Tcl_Obj * cmdPtr, int flags); \/* 209 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpCompile	/usr/include/tclDecls.h	/^    Tcl_RegExp (*tcl_RegExpCompile) (Tcl_Interp * interp, CONST char * pattern); \/* 212 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpExec	/usr/include/tclDecls.h	/^    int (*tcl_RegExpExec) (Tcl_Interp * interp, Tcl_RegExp regexp, CONST char * text, CONST char * start); \/* 213 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpExecObj	/usr/include/tclDecls.h	/^    int (*tcl_RegExpExecObj) (Tcl_Interp * interp, Tcl_RegExp regexp, Tcl_Obj * textObj, int offset, int nmatches, int flags); \/* 376 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpGetInfo	/usr/include/tclDecls.h	/^    void (*tcl_RegExpGetInfo) (Tcl_RegExp regexp, Tcl_RegExpInfo * infoPtr); \/* 377 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpMatch	/usr/include/tclDecls.h	/^    int (*tcl_RegExpMatch) (Tcl_Interp * interp, CONST char * text, CONST char * pattern); \/* 214 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpMatchObj	/usr/include/tclDecls.h	/^    int (*tcl_RegExpMatchObj) (Tcl_Interp * interp, Tcl_Obj * textObj, Tcl_Obj * patternObj); \/* 385 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegExpRange	/usr/include/tclDecls.h	/^    void (*tcl_RegExpRange) (Tcl_RegExp regexp, int index, CONST84 char ** startPtr, CONST84 char ** endPtr); \/* 215 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegisterChannel	/usr/include/tclDecls.h	/^    void (*tcl_RegisterChannel) (Tcl_Interp * interp, Tcl_Channel chan); \/* 210 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegisterConfig	/usr/include/tclDecls.h	/^    void (*tcl_RegisterConfig) (Tcl_Interp* interp, CONST char* pkgName, Tcl_Config* configuration, CONST char* valEncoding); \/* 505 *\/$/;"	m	struct:TclStubs	access:public
tcl_RegisterObjType	/usr/include/tclDecls.h	/^    void (*tcl_RegisterObjType) (Tcl_ObjType * typePtr); \/* 211 *\/$/;"	m	struct:TclStubs	access:public
tcl_Release	/usr/include/tclDecls.h	/^    void (*tcl_Release) (ClientData clientData); \/* 216 *\/$/;"	m	struct:TclStubs	access:public
tcl_ResetResult	/usr/include/tclDecls.h	/^    void (*tcl_ResetResult) (Tcl_Interp * interp); \/* 217 *\/$/;"	m	struct:TclStubs	access:public
tcl_RestoreInterpState	/usr/include/tclDecls.h	/^    int (*tcl_RestoreInterpState) (Tcl_Interp * interp, Tcl_InterpState state); \/* 536 *\/$/;"	m	struct:TclStubs	access:public
tcl_RestoreResult	/usr/include/tclDecls.h	/^    void (*tcl_RestoreResult) (Tcl_Interp * interp, Tcl_SavedResult * statePtr); \/* 314 *\/$/;"	m	struct:TclStubs	access:public
tcl_SaveInterpState	/usr/include/tclDecls.h	/^    Tcl_InterpState (*tcl_SaveInterpState) (Tcl_Interp * interp, int status); \/* 535 *\/$/;"	m	struct:TclStubs	access:public
tcl_SaveResult	/usr/include/tclDecls.h	/^    void (*tcl_SaveResult) (Tcl_Interp * interp, Tcl_SavedResult * statePtr); \/* 315 *\/$/;"	m	struct:TclStubs	access:public
tcl_ScanCountedElement	/usr/include/tclDecls.h	/^    int (*tcl_ScanCountedElement) (CONST char * str, int length, int * flagPtr); \/* 219 *\/$/;"	m	struct:TclStubs	access:public
tcl_ScanElement	/usr/include/tclDecls.h	/^    int (*tcl_ScanElement) (CONST char * str, int * flagPtr); \/* 218 *\/$/;"	m	struct:TclStubs	access:public
tcl_Seek	/usr/include/tclDecls.h	/^    Tcl_WideInt (*tcl_Seek) (Tcl_Channel chan, Tcl_WideInt offset, int mode); \/* 491 *\/$/;"	m	struct:TclStubs	access:public
tcl_SeekOld	/usr/include/tclDecls.h	/^    int (*tcl_SeekOld) (Tcl_Channel chan, int offset, int mode); \/* 220 *\/$/;"	m	struct:TclStubs	access:public
tcl_ServiceAll	/usr/include/tclDecls.h	/^    int (*tcl_ServiceAll) (void); \/* 221 *\/$/;"	m	struct:TclStubs	access:public
tcl_ServiceEvent	/usr/include/tclDecls.h	/^    int (*tcl_ServiceEvent) (int flags); \/* 222 *\/$/;"	m	struct:TclStubs	access:public
tcl_ServiceModeHook	/usr/include/tclDecls.h	/^    void (*tcl_ServiceModeHook) (int mode); \/* 344 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetAssocData	/usr/include/tclDecls.h	/^    void (*tcl_SetAssocData) (Tcl_Interp * interp, CONST char * name, Tcl_InterpDeleteProc * proc, ClientData clientData); \/* 223 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetBignumObj	/usr/include/tclDecls.h	/^    void (*tcl_SetBignumObj) (Tcl_Obj* obj, mp_int* value); \/* 557 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetBooleanObj	/usr/include/tclDecls.h	/^    void (*tcl_SetBooleanObj) (Tcl_Obj * objPtr, int boolValue); \/* 57 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetByteArrayLength	/usr/include/tclDecls.h	/^    unsigned char * (*tcl_SetByteArrayLength) (Tcl_Obj * objPtr, int length); \/* 58 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetByteArrayObj	/usr/include/tclDecls.h	/^    void (*tcl_SetByteArrayObj) (Tcl_Obj * objPtr, CONST unsigned char * bytes, int length); \/* 59 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetChannelBufferSize	/usr/include/tclDecls.h	/^    void (*tcl_SetChannelBufferSize) (Tcl_Channel chan, int sz); \/* 224 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetChannelError	/usr/include/tclDecls.h	/^    void (*tcl_SetChannelError) (Tcl_Channel chan, Tcl_Obj* msg); \/* 564 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetChannelErrorInterp	/usr/include/tclDecls.h	/^    void (*tcl_SetChannelErrorInterp) (Tcl_Interp* interp, Tcl_Obj* msg); \/* 562 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetChannelOption	/usr/include/tclDecls.h	/^    int (*tcl_SetChannelOption) (Tcl_Interp * interp, Tcl_Channel chan, CONST char * optionName, CONST char * newValue); \/* 225 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetCommandInfo	/usr/include/tclDecls.h	/^    int (*tcl_SetCommandInfo) (Tcl_Interp * interp, CONST char * cmdName, CONST Tcl_CmdInfo * infoPtr); \/* 226 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetCommandInfoFromToken	/usr/include/tclDecls.h	/^    int (*tcl_SetCommandInfoFromToken) (Tcl_Command token, CONST Tcl_CmdInfo* infoPtr); \/* 485 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetDefaultEncodingDir	/usr/include/tclDecls.h	/^    void (*tcl_SetDefaultEncodingDir) (CONST char * path); \/* 342 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetDoubleObj	/usr/include/tclDecls.h	/^    void (*tcl_SetDoubleObj) (Tcl_Obj * objPtr, double doubleValue); \/* 60 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetEncodingSearchPath	/usr/include/tclDecls.h	/^    int (*tcl_SetEncodingSearchPath) (Tcl_Obj* searchPath); \/* 571 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetEnsembleFlags	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleFlags) (Tcl_Interp * interp, Tcl_Command token, int flags); \/* 546 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetEnsembleMappingDict	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleMappingDict) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * mapDict); \/* 544 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetEnsembleSubcommandList	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleSubcommandList) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * subcmdList); \/* 543 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetEnsembleUnknownHandler	/usr/include/tclDecls.h	/^    int (*tcl_SetEnsembleUnknownHandler) (Tcl_Interp * interp, Tcl_Command token, Tcl_Obj * unknownList); \/* 545 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetErrno	/usr/include/tclDecls.h	/^    void (*tcl_SetErrno) (int err); \/* 227 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetErrorCode	/usr/include/tclDecls.h	/^    void (*tcl_SetErrorCode) (Tcl_Interp * interp, ...); \/* 228 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetErrorCodeVA	/usr/include/tclDecls.h	/^    void (*tcl_SetErrorCodeVA) (Tcl_Interp * interp, va_list argList); \/* 275 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetExitProc	/usr/include/tclDecls.h	/^    Tcl_ExitProc * (*tcl_SetExitProc) (Tcl_ExitProc * proc); \/* 519 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetIntObj	/usr/include/tclDecls.h	/^    void (*tcl_SetIntObj) (Tcl_Obj * objPtr, int intValue); \/* 61 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetListObj	/usr/include/tclDecls.h	/^    void (*tcl_SetListObj) (Tcl_Obj * objPtr, int objc, Tcl_Obj *CONST objv[]); \/* 62 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetLongObj	/usr/include/tclDecls.h	/^    void (*tcl_SetLongObj) (Tcl_Obj * objPtr, long longValue); \/* 63 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetMainLoop	/usr/include/tclDecls.h	/^    void (*tcl_SetMainLoop) (Tcl_MainLoopProc * proc); \/* 284 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetMaxBlockTime	/usr/include/tclDecls.h	/^    void (*tcl_SetMaxBlockTime) (Tcl_Time * timePtr); \/* 229 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetNamespaceUnknownHandler	/usr/include/tclDecls.h	/^    int (*tcl_SetNamespaceUnknownHandler) (Tcl_Interp * interp, Tcl_Namespace * nsPtr, Tcl_Obj * handlerPtr); \/* 568 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetNotifier	/usr/include/tclDecls.h	/^    void (*tcl_SetNotifier) (Tcl_NotifierProcs * notifierProcPtr); \/* 386 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetObjErrorCode	/usr/include/tclDecls.h	/^    void (*tcl_SetObjErrorCode) (Tcl_Interp * interp, Tcl_Obj * errorObjPtr); \/* 234 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetObjLength	/usr/include/tclDecls.h	/^    void (*tcl_SetObjLength) (Tcl_Obj * objPtr, int length); \/* 64 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetObjResult	/usr/include/tclDecls.h	/^    void (*tcl_SetObjResult) (Tcl_Interp * interp, Tcl_Obj * resultObjPtr); \/* 235 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetPanicProc	/usr/include/tclDecls.h	/^    void (*tcl_SetPanicProc) (Tcl_PanicProc * panicProc); \/* 230 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetRecursionLimit	/usr/include/tclDecls.h	/^    int (*tcl_SetRecursionLimit) (Tcl_Interp * interp, int depth); \/* 231 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetResult	/usr/include/tclDecls.h	/^    void (*tcl_SetResult) (Tcl_Interp * interp, char * result, Tcl_FreeProc * freeProc); \/* 232 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetReturnOptions	/usr/include/tclDecls.h	/^    int (*tcl_SetReturnOptions) (Tcl_Interp * interp, Tcl_Obj * options); \/* 538 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetServiceMode	/usr/include/tclDecls.h	/^    int (*tcl_SetServiceMode) (int mode); \/* 233 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetStdChannel	/usr/include/tclDecls.h	/^    void (*tcl_SetStdChannel) (Tcl_Channel channel, int type); \/* 236 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetStringObj	/usr/include/tclDecls.h	/^    void (*tcl_SetStringObj) (Tcl_Obj* objPtr, CONST char* bytes, int length); \/* 65 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetSystemEncoding	/usr/include/tclDecls.h	/^    int (*tcl_SetSystemEncoding) (Tcl_Interp * interp, CONST char * name); \/* 316 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetTimeProc	/usr/include/tclDecls.h	/^    void (*tcl_SetTimeProc) (Tcl_GetTimeProc* getProc, Tcl_ScaleTimeProc* scaleProc, ClientData clientData); \/* 552 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetTimer	/usr/include/tclDecls.h	/^    void (*tcl_SetTimer) (Tcl_Time * timePtr); \/* 11 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetUnicodeObj	/usr/include/tclDecls.h	/^    void (*tcl_SetUnicodeObj) (Tcl_Obj * objPtr, CONST Tcl_UniChar * unicode, int numChars); \/* 379 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetVar	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SetVar) (Tcl_Interp * interp, CONST char * varName, CONST char * newValue, int flags); \/* 237 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetVar2	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SetVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, CONST char * newValue, int flags); \/* 238 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetVar2Ex	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_SetVar2Ex) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, Tcl_Obj * newValuePtr, int flags); \/* 317 *\/$/;"	m	struct:TclStubs	access:public
tcl_SetWideIntObj	/usr/include/tclDecls.h	/^    void (*tcl_SetWideIntObj) (Tcl_Obj * objPtr, Tcl_WideInt wideValue); \/* 489 *\/$/;"	m	struct:TclStubs	access:public
tcl_SignalId	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SignalId) (int sig); \/* 239 *\/$/;"	m	struct:TclStubs	access:public
tcl_SignalMsg	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_SignalMsg) (int sig); \/* 240 *\/$/;"	m	struct:TclStubs	access:public
tcl_Sleep	/usr/include/tclDecls.h	/^    void (*tcl_Sleep) (int ms); \/* 12 *\/$/;"	m	struct:TclStubs	access:public
tcl_SourceRCFile	/usr/include/tclDecls.h	/^    void (*tcl_SourceRCFile) (Tcl_Interp * interp); \/* 241 *\/$/;"	m	struct:TclStubs	access:public
tcl_SpliceChannel	/usr/include/tclDecls.h	/^    void (*tcl_SpliceChannel) (Tcl_Channel channel); \/* 416 *\/$/;"	m	struct:TclStubs	access:public
tcl_SplitList	/usr/include/tclDecls.h	/^    int (*tcl_SplitList) (Tcl_Interp * interp, CONST char * listStr, int * argcPtr, CONST84 char *** argvPtr); \/* 242 *\/$/;"	m	struct:TclStubs	access:public
tcl_SplitPath	/usr/include/tclDecls.h	/^    void (*tcl_SplitPath) (CONST char * path, int * argcPtr, CONST84 char *** argvPtr); \/* 243 *\/$/;"	m	struct:TclStubs	access:public
tcl_StackChannel	/usr/include/tclDecls.h	/^    Tcl_Channel (*tcl_StackChannel) (Tcl_Interp * interp, Tcl_ChannelType * typePtr, ClientData instanceData, int mask, Tcl_Channel prevChan); \/* 281 *\/$/;"	m	struct:TclStubs	access:public
tcl_Stat	/usr/include/tclDecls.h	/^    int (*tcl_Stat) (CONST char * path, struct stat * bufPtr); \/* 368 *\/$/;"	m	struct:TclStubs	access:public
tcl_StaticPackage	/usr/include/tclDecls.h	/^    void (*tcl_StaticPackage) (Tcl_Interp * interp, CONST char * pkgName, Tcl_PackageInitProc * initProc, Tcl_PackageInitProc * safeInitProc); \/* 244 *\/$/;"	m	struct:TclStubs	access:public
tcl_StringCaseMatch	/usr/include/tclDecls.h	/^    int (*tcl_StringCaseMatch) (CONST char * str, CONST char * pattern, int nocase); \/* 371 *\/$/;"	m	struct:TclStubs	access:public
tcl_StringMatch	/usr/include/tclDecls.h	/^    int (*tcl_StringMatch) (CONST char * str, CONST char * pattern); \/* 245 *\/$/;"	m	struct:TclStubs	access:public
tcl_SubstObj	/usr/include/tclDecls.h	/^    Tcl_Obj * (*tcl_SubstObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int flags); \/* 437 *\/$/;"	m	struct:TclStubs	access:public
tcl_TakeBignumFromObj	/usr/include/tclDecls.h	/^    int (*tcl_TakeBignumFromObj) (Tcl_Interp* interp, Tcl_Obj* obj, mp_int* value); \/* 559 *\/$/;"	m	struct:TclStubs	access:public
tcl_Tell	/usr/include/tclDecls.h	/^    Tcl_WideInt (*tcl_Tell) (Tcl_Channel chan); \/* 492 *\/$/;"	m	struct:TclStubs	access:public
tcl_TellOld	/usr/include/tclDecls.h	/^    int (*tcl_TellOld) (Tcl_Channel chan); \/* 246 *\/$/;"	m	struct:TclStubs	access:public
tcl_ThreadAlert	/usr/include/tclDecls.h	/^    void (*tcl_ThreadAlert) (Tcl_ThreadId threadId); \/* 318 *\/$/;"	m	struct:TclStubs	access:public
tcl_ThreadQueueEvent	/usr/include/tclDecls.h	/^    void (*tcl_ThreadQueueEvent) (Tcl_ThreadId threadId, Tcl_Event* evPtr, Tcl_QueuePosition position); \/* 319 *\/$/;"	m	struct:TclStubs	access:public
tcl_TraceCommand	/usr/include/tclDecls.h	/^    int (*tcl_TraceCommand) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * proc, ClientData clientData); \/* 426 *\/$/;"	m	struct:TclStubs	access:public
tcl_TraceVar	/usr/include/tclDecls.h	/^    int (*tcl_TraceVar) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 247 *\/$/;"	m	struct:TclStubs	access:public
tcl_TraceVar2	/usr/include/tclDecls.h	/^    int (*tcl_TraceVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 248 *\/$/;"	m	struct:TclStubs	access:public
tcl_TranslateFileName	/usr/include/tclDecls.h	/^    char * (*tcl_TranslateFileName) (Tcl_Interp * interp, CONST char * name, Tcl_DString * bufferPtr); \/* 249 *\/$/;"	m	struct:TclStubs	access:public
tcl_TruncateChannel	/usr/include/tclDecls.h	/^    int (*tcl_TruncateChannel) (Tcl_Channel chan, Tcl_WideInt length); \/* 560 *\/$/;"	m	struct:TclStubs	access:public
tcl_Ungets	/usr/include/tclDecls.h	/^    int (*tcl_Ungets) (Tcl_Channel chan, CONST char * str, int len, int atHead); \/* 250 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharAtIndex	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharAtIndex) (CONST char * src, int index); \/* 320 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharCaseMatch	/usr/include/tclDecls.h	/^    int (*tcl_UniCharCaseMatch) (CONST Tcl_UniChar * uniStr, CONST Tcl_UniChar * uniPattern, int nocase); \/* 420 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsAlnum	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsAlnum) (int ch); \/* 345 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsAlpha	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsAlpha) (int ch); \/* 346 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsControl	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsControl) (int ch); \/* 372 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsDigit	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsDigit) (int ch); \/* 347 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsGraph	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsGraph) (int ch); \/* 373 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsLower	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsLower) (int ch); \/* 348 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsPrint	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsPrint) (int ch); \/* 374 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsPunct	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsPunct) (int ch); \/* 375 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsSpace	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsSpace) (int ch); \/* 349 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsUpper	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsUpper) (int ch); \/* 350 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharIsWordChar	/usr/include/tclDecls.h	/^    int (*tcl_UniCharIsWordChar) (int ch); \/* 351 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharLen	/usr/include/tclDecls.h	/^    int (*tcl_UniCharLen) (CONST Tcl_UniChar * uniStr); \/* 352 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharNcasecmp	/usr/include/tclDecls.h	/^    int (*tcl_UniCharNcasecmp) (CONST Tcl_UniChar * ucs, CONST Tcl_UniChar * uct, unsigned long numChars); \/* 419 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharNcmp	/usr/include/tclDecls.h	/^    int (*tcl_UniCharNcmp) (CONST Tcl_UniChar * ucs, CONST Tcl_UniChar * uct, unsigned long numChars); \/* 353 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharToLower	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharToLower) (int ch); \/* 321 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharToTitle	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharToTitle) (int ch); \/* 322 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharToUpper	/usr/include/tclDecls.h	/^    Tcl_UniChar (*tcl_UniCharToUpper) (int ch); \/* 323 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharToUtf	/usr/include/tclDecls.h	/^    int (*tcl_UniCharToUtf) (int ch, char * buf); \/* 324 *\/$/;"	m	struct:TclStubs	access:public
tcl_UniCharToUtfDString	/usr/include/tclDecls.h	/^    char * (*tcl_UniCharToUtfDString) (CONST Tcl_UniChar * uniStr, int uniLength, Tcl_DString * dsPtr); \/* 354 *\/$/;"	m	struct:TclStubs	access:public
tcl_UnlinkVar	/usr/include/tclDecls.h	/^    void (*tcl_UnlinkVar) (Tcl_Interp * interp, CONST char * varName); \/* 251 *\/$/;"	m	struct:TclStubs	access:public
tcl_UnregisterChannel	/usr/include/tclDecls.h	/^    int (*tcl_UnregisterChannel) (Tcl_Interp * interp, Tcl_Channel chan); \/* 252 *\/$/;"	m	struct:TclStubs	access:public
tcl_UnsetVar	/usr/include/tclDecls.h	/^    int (*tcl_UnsetVar) (Tcl_Interp * interp, CONST char * varName, int flags); \/* 253 *\/$/;"	m	struct:TclStubs	access:public
tcl_UnsetVar2	/usr/include/tclDecls.h	/^    int (*tcl_UnsetVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags); \/* 254 *\/$/;"	m	struct:TclStubs	access:public
tcl_UnstackChannel	/usr/include/tclDecls.h	/^    int (*tcl_UnstackChannel) (Tcl_Interp * interp, Tcl_Channel chan); \/* 282 *\/$/;"	m	struct:TclStubs	access:public
tcl_UntraceCommand	/usr/include/tclDecls.h	/^    void (*tcl_UntraceCommand) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_CommandTraceProc * proc, ClientData clientData); \/* 427 *\/$/;"	m	struct:TclStubs	access:public
tcl_UntraceVar	/usr/include/tclDecls.h	/^    void (*tcl_UntraceVar) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 255 *\/$/;"	m	struct:TclStubs	access:public
tcl_UntraceVar2	/usr/include/tclDecls.h	/^    void (*tcl_UntraceVar2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * proc, ClientData clientData); \/* 256 *\/$/;"	m	struct:TclStubs	access:public
tcl_UpVar	/usr/include/tclDecls.h	/^    int (*tcl_UpVar) (Tcl_Interp * interp, CONST char * frameName, CONST char * varName, CONST char * localName, int flags); \/* 258 *\/$/;"	m	struct:TclStubs	access:public
tcl_UpVar2	/usr/include/tclDecls.h	/^    int (*tcl_UpVar2) (Tcl_Interp * interp, CONST char * frameName, CONST char * part1, CONST char * part2, CONST char * localName, int flags); \/* 259 *\/$/;"	m	struct:TclStubs	access:public
tcl_UpdateLinkedVar	/usr/include/tclDecls.h	/^    void (*tcl_UpdateLinkedVar) (Tcl_Interp * interp, CONST char * varName); \/* 257 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfAtIndex	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfAtIndex) (CONST char * src, int index); \/* 325 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfBackslash	/usr/include/tclDecls.h	/^    int (*tcl_UtfBackslash) (CONST char * src, int * readPtr, char * dst); \/* 327 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfCharComplete	/usr/include/tclDecls.h	/^    int (*tcl_UtfCharComplete) (CONST char * src, int length); \/* 326 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfFindFirst	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfFindFirst) (CONST char * src, int ch); \/* 328 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfFindLast	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfFindLast) (CONST char * src, int ch); \/* 329 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfNcasecmp	/usr/include/tclDecls.h	/^    int (*tcl_UtfNcasecmp) (CONST char * s1, CONST char * s2, unsigned long n); \/* 370 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfNcmp	/usr/include/tclDecls.h	/^    int (*tcl_UtfNcmp) (CONST char * s1, CONST char * s2, unsigned long n); \/* 369 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfNext	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfNext) (CONST char * src); \/* 330 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfPrev	/usr/include/tclDecls.h	/^    CONST84_RETURN char * (*tcl_UtfPrev) (CONST char * src, CONST char * start); \/* 331 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToExternal	/usr/include/tclDecls.h	/^    int (*tcl_UtfToExternal) (Tcl_Interp * interp, Tcl_Encoding encoding, CONST char * src, int srcLen, int flags, Tcl_EncodingState * statePtr, char * dst, int dstLen, int * srcReadPtr, int * dstWrotePtr, int * dstCharsPtr); \/* 332 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToExternalDString	/usr/include/tclDecls.h	/^    char * (*tcl_UtfToExternalDString) (Tcl_Encoding encoding, CONST char * src, int srcLen, Tcl_DString * dsPtr); \/* 333 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToLower	/usr/include/tclDecls.h	/^    int (*tcl_UtfToLower) (char * src); \/* 334 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToTitle	/usr/include/tclDecls.h	/^    int (*tcl_UtfToTitle) (char * src); \/* 335 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToUniChar	/usr/include/tclDecls.h	/^    int (*tcl_UtfToUniChar) (CONST char * src, Tcl_UniChar * chPtr); \/* 336 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToUniCharDString	/usr/include/tclDecls.h	/^    Tcl_UniChar * (*tcl_UtfToUniCharDString) (CONST char * src, int length, Tcl_DString * dsPtr); \/* 355 *\/$/;"	m	struct:TclStubs	access:public
tcl_UtfToUpper	/usr/include/tclDecls.h	/^    int (*tcl_UtfToUpper) (char * src); \/* 337 *\/$/;"	m	struct:TclStubs	access:public
tcl_ValidateAllMemory	/usr/include/tclDecls.h	/^    void (*tcl_ValidateAllMemory) (CONST char * file, int line); \/* 266 *\/$/;"	m	struct:TclStubs	access:public
tcl_VarEval	/usr/include/tclDecls.h	/^    int (*tcl_VarEval) (Tcl_Interp * interp, ...); \/* 260 *\/$/;"	m	struct:TclStubs	access:public
tcl_VarEvalVA	/usr/include/tclDecls.h	/^    int (*tcl_VarEvalVA) (Tcl_Interp * interp, va_list argList); \/* 276 *\/$/;"	m	struct:TclStubs	access:public
tcl_VarTraceInfo	/usr/include/tclDecls.h	/^    ClientData (*tcl_VarTraceInfo) (Tcl_Interp * interp, CONST char * varName, int flags, Tcl_VarTraceProc * procPtr, ClientData prevClientData); \/* 261 *\/$/;"	m	struct:TclStubs	access:public
tcl_VarTraceInfo2	/usr/include/tclDecls.h	/^    ClientData (*tcl_VarTraceInfo2) (Tcl_Interp * interp, CONST char * part1, CONST char * part2, int flags, Tcl_VarTraceProc * procPtr, ClientData prevClientData); \/* 262 *\/$/;"	m	struct:TclStubs	access:public
tcl_WaitForEvent	/usr/include/tclDecls.h	/^    int (*tcl_WaitForEvent) (Tcl_Time * timePtr); \/* 13 *\/$/;"	m	struct:TclStubs	access:public
tcl_WaitPid	/usr/include/tclDecls.h	/^    Tcl_Pid (*tcl_WaitPid) (Tcl_Pid pid, int * statPtr, int options); \/* 277 *\/$/;"	m	struct:TclStubs	access:public
tcl_WinTCharToUtf	/usr/include/tclPlatDecls.h	/^    char * (*tcl_WinTCharToUtf) (CONST TCHAR * str, int len, Tcl_DString * dsPtr); \/* 1 *\/$/;"	m	struct:TclPlatStubs	access:public
tcl_WinUtfToTChar	/usr/include/tclPlatDecls.h	/^    TCHAR * (*tcl_WinUtfToTChar) (CONST char * str, int len, Tcl_DString * dsPtr); \/* 0 *\/$/;"	m	struct:TclPlatStubs	access:public
tcl_Write	/usr/include/tclDecls.h	/^    int (*tcl_Write) (Tcl_Channel chan, CONST char * s, int slen); \/* 263 *\/$/;"	m	struct:TclStubs	access:public
tcl_WriteChars	/usr/include/tclDecls.h	/^    int (*tcl_WriteChars) (Tcl_Channel chan, CONST char * src, int srcLen); \/* 338 *\/$/;"	m	struct:TclStubs	access:public
tcl_WriteObj	/usr/include/tclDecls.h	/^    int (*tcl_WriteObj) (Tcl_Channel chan, Tcl_Obj * objPtr); \/* 339 *\/$/;"	m	struct:TclStubs	access:public
tcl_WriteRaw	/usr/include/tclDecls.h	/^    int (*tcl_WriteRaw) (Tcl_Channel chan, CONST char * src, int srcLen); \/* 395 *\/$/;"	m	struct:TclStubs	access:public
tcl_WrongNumArgs	/usr/include/tclDecls.h	/^    void (*tcl_WrongNumArgs) (Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], CONST char * message); \/* 264 *\/$/;"	m	struct:TclStubs	access:public
tcpd_context	/usr/include/tcpd.h	/^struct tcpd_context {$/;"	s
tcpd_context::file	/usr/include/tcpd.h	/^    char   *file;			\/* current file *\/$/;"	m	struct:tcpd_context	access:public
tcpd_context::line	/usr/include/tcpd.h	/^    int     line;			\/* current line *\/$/;"	m	struct:tcpd_context	access:public
tcpd_gethostbyname	/usr/include/tcpd.h	/^extern struct hostent *tcpd_gethostbyname();$/;"	p	signature:()
tcpd_jump	/usr/include/tcpd.h	/^extern void tcpd_jump();$/;"	p	signature:()
tcpd_jump	/usr/include/tcpd.h	/^extern void tcpd_jump(char *, ...);	\/* report problem and jump *\/$/;"	p	signature:(char *, ...)
tcpd_warn	/usr/include/tcpd.h	/^extern void tcpd_warn();$/;"	p	signature:()
tcpd_warn	/usr/include/tcpd.h	/^extern void tcpd_warn(char *, ...);	\/* report problem and proceed *\/$/;"	p	signature:(char *, ...)
tcsetpgrp	/usr/include/unistd.h	/^int	 tcsetpgrp(int, pid_t);$/;"	p	signature:(int, pid_t)
tdelete	/usr/include/search.h	/^void	*tdelete(const void * __restrict, void ** __restrict,$/;"	p	signature:(const void * __restrict, void ** __restrict, int (*)(const void *, const void *))
teleray_glitch	/usr/include/term.h	/^#define teleray_glitch	/;"	d
telldir	/usr/include/dirent.h	/^long telldir(DIR *) __DARWIN_ALIAS_I(telldir);$/;"	v
tempnam	/usr/include/stdio.h	/^char	*tempnam(const char *, const char *) __DARWIN_ALIAS(tempnam);$/;"	v
term	/usr/include/tcl.h	/^    CONST char *term;		\/* Points to character in string that$/;"	m	struct:Tcl_Parse	access:public
term	/usr/include/term.h	/^typedef struct term {		\/* describe an actual terminal *\/$/;"	s
term::Filedes	/usr/include/term.h	/^    short	Filedes;	\/* file description being written to *\/$/;"	m	struct:term	access:public
term::Nttyb	/usr/include/term.h	/^		Nttyb;		\/* current state of the terminal *\/$/;"	m	struct:term	access:public
term::Ottyb	/usr/include/term.h	/^    TTY		Ottyb,		\/* original state of the terminal *\/$/;"	m	struct:term	access:public
term::_baudrate	/usr/include/term.h	/^    int		_baudrate;	\/* used to compute padding *\/$/;"	m	struct:term	access:public
term::_termname	/usr/include/term.h	/^    char *      _termname;      \/* used for termname() *\/$/;"	m	struct:term	access:public
term::type	/usr/include/term.h	/^    TERMTYPE	type;		\/* terminal type description *\/$/;"	m	struct:term	access:public
term_names	/usr/include/term.h	/^    char  *term_names;		\/* str_table offset of term names *\/$/;"	m	struct:termtype	access:public
termcap_init2	/usr/include/term.h	/^#define termcap_init2 /;"	d
termcap_reset	/usr/include/term.h	/^#define termcap_reset /;"	d
termtype	/usr/include/term.h	/^typedef struct termtype {	\/* in-core form of terminfo data *\/$/;"	s
termtype::Booleans	/usr/include/term.h	/^    NCURSES_SBOOL  *Booleans;	\/* array of boolean values *\/$/;"	m	struct:termtype	access:public
termtype::Numbers	/usr/include/term.h	/^    short *Numbers;		\/* array of integer values *\/$/;"	m	struct:termtype	access:public
termtype::Strings	/usr/include/term.h	/^    char  **Strings;		\/* array of string offsets *\/$/;"	m	struct:termtype	access:public
termtype::ext_Booleans	/usr/include/term.h	/^    unsigned short ext_Booleans;\/* count extensions to Booleans *\/$/;"	m	struct:termtype	access:public
termtype::ext_Names	/usr/include/term.h	/^    char  **ext_Names;		\/* corresponding names *\/$/;"	m	struct:termtype	access:public
termtype::ext_Numbers	/usr/include/term.h	/^    unsigned short ext_Numbers;	\/* count extensions to Numbers *\/$/;"	m	struct:termtype	access:public
termtype::ext_Strings	/usr/include/term.h	/^    unsigned short ext_Strings;	\/* count extensions to Strings *\/$/;"	m	struct:termtype	access:public
termtype::ext_str_table	/usr/include/term.h	/^    char  *ext_str_table;	\/* pointer to extended string table *\/$/;"	m	struct:termtype	access:public
termtype::num_Booleans	/usr/include/term.h	/^    unsigned short num_Booleans;\/* count total Booleans *\/$/;"	m	struct:termtype	access:public
termtype::num_Numbers	/usr/include/term.h	/^    unsigned short num_Numbers;	\/* count total Numbers *\/$/;"	m	struct:termtype	access:public
termtype::num_Strings	/usr/include/term.h	/^    unsigned short num_Strings;	\/* count total Strings *\/$/;"	m	struct:termtype	access:public
termtype::str_table	/usr/include/term.h	/^    char  *str_table;		\/* pointer to string table *\/$/;"	m	struct:termtype	access:public
termtype::term_names	/usr/include/term.h	/^    char  *term_names;		\/* str_table offset of term names *\/$/;"	m	struct:termtype	access:public
test_control	/usr/include/sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	access:public
text	/usr/include/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	access:public
tfind	/usr/include/search.h	/^void	*tfind(const void *, void * const *,$/;"	p	signature:(const void *, void * const *, int (*)(const void *, const void *))
these_cause_cr	/usr/include/term.h	/^#define these_cause_cr /;"	d
theta	/usr/include/mecab.h	/^    virtual float theta() const                               = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:() const
thousands_sep	/usr/include/_locale.h	/^	char	*thousands_sep;$/;"	m	struct:lconv	access:public
threadActionProc	/usr/include/tcl.h	/^    Tcl_DriverThreadActionProc *threadActionProc;$/;"	m	struct:Tcl_ChannelType	access:public
thread_cleanup	/usr/include/sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	access:public
tilde_glitch	/usr/include/term.h	/^#define tilde_glitch /;"	d
time	/usr/include/time.h	/^time_t time(time_t *);$/;"	p	signature:(time_t *)
time	/usr/include/tk.h	/^    Time time;			\/* Milliseconds. *\/$/;"	m	struct:__anon129	access:public
time	/usr/include/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	access:public
time2posix	/usr/include/time.h	/^time_t time2posix(time_t);$/;"	p	signature:(time_t)
time_t	/usr/include/time.h	/^typedef	__darwin_time_t		time_t;$/;"	t
time_t	/usr/include/utime.h	/^typedef __darwin_time_t		time_t;$/;"	t
time_t	/usr/include/utmp.h	/^typedef __darwin_time_t	time_t;$/;"	t
timegm	/usr/include/time.h	/^time_t timegm(struct tm * const);$/;"	p	signature:(struct tm * const)
timelocal	/usr/include/time.h	/^time_t timelocal(struct tm * const);$/;"	p	signature:(struct tm * const)
timeout	/usr/include/curses.h	/^#define timeout(/;"	d
timeout	/usr/include/ncurses.h	/^#define timeout(/;"	d
timeout_msec	/usr/include/curses.h	/^	long timeout_msec;	\/* _NC_EVENT_TIMEOUT_MSEC *\/$/;"	m	union:__anon6::__anon7	access:public
timeout_msec	/usr/include/ncurses.h	/^	long timeout_msec;	\/* _NC_EVENT_TIMEOUT_MSEC *\/$/;"	m	union:__anon82::__anon83	access:public
timezone	/usr/include/time.h	/^char *timezone(int, int);$/;"	p	signature:(int, int)
tinfo_fkeys	/usr/include/tic.h	/^struct tinfo_fkeys {$/;"	s
tinfo_fkeys::code	/usr/include/tic.h	/^	chtype code;$/;"	m	struct:tinfo_fkeys	access:public
tinfo_fkeys::offset	/usr/include/tic.h	/^	unsigned offset;$/;"	m	struct:tinfo_fkeys	access:public
tkGenWMConfigureEvent	/usr/include/tkPlatDecls.h	/^    void (*tkGenWMConfigureEvent) (Tk_Window tkwin, int x, int y, int width, int height, int flags); \/* 5 *\/$/;"	m	struct:TkPlatStubs	access:public
tkIntPlatStubs	/usr/include/tkDecls.h	/^    struct TkIntPlatStubs *tkIntPlatStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkIntPlatStubs	access:public
tkIntStubs	/usr/include/tkDecls.h	/^    struct TkIntStubs *tkIntStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkIntStubs	access:public
tkIntXlibStubs	/usr/include/tkDecls.h	/^    struct TkIntXlibStubs *tkIntXlibStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkIntXlibStubs	access:public
tkMacOSXGetDrawablePort	/usr/include/tkPlatDecls.h	/^    void * (*tkMacOSXGetDrawablePort) (Drawable drawable); \/* 7 *\/$/;"	m	struct:TkPlatStubs	access:public
tkMacOSXGetRootControl	/usr/include/tkPlatDecls.h	/^    void * (*tkMacOSXGetRootControl) (Drawable drawable); \/* 8 *\/$/;"	m	struct:TkPlatStubs	access:public
tkMacOSXInitAppleEvents	/usr/include/tkPlatDecls.h	/^    void (*tkMacOSXInitAppleEvents) (Tcl_Interp * interp); \/* 4 *\/$/;"	m	struct:TkPlatStubs	access:public
tkMacOSXInitMenus	/usr/include/tkPlatDecls.h	/^    void (*tkMacOSXInitMenus) (Tcl_Interp * interp); \/* 3 *\/$/;"	m	struct:TkPlatStubs	access:public
tkMacOSXInvalClipRgns	/usr/include/tkPlatDecls.h	/^    void (*tkMacOSXInvalClipRgns) (Tk_Window tkwin); \/* 6 *\/$/;"	m	struct:TkPlatStubs	access:public
tkPlatStubs	/usr/include/tkDecls.h	/^    struct TkPlatStubs *tkPlatStubs;$/;"	m	struct:TkStubHooks	typeref:struct:TkStubHooks::TkPlatStubs	access:public
tkPutImage	/usr/include/tkIntXlibDecls.h	/^    void (*tkPutImage) (unsigned long * colors, int ncolors, Display * display, Drawable d, GC gc, XImage * image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height); \/* 57 *\/$/;"	m	struct:TkIntXlibStubs	access:public
tkPutImage	/usr/include/tkIntXlibDecls.h	/^    void (*tkPutImage) (unsigned long * colors, int ncolors, Display * display, Drawable d, GC gc, XImage * image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height); \/* 80 *\/$/;"	m	struct:TkIntXlibStubs	access:public
tk_3DBorderColor	/usr/include/tkDecls.h	/^    XColor * (*tk_3DBorderColor) (Tk_3DBorder border); \/* 1 *\/$/;"	m	struct:TkStubs	access:public
tk_3DBorderGC	/usr/include/tkDecls.h	/^    GC (*tk_3DBorderGC) (Tk_Window tkwin, Tk_3DBorder border, int which); \/* 2 *\/$/;"	m	struct:TkStubs	access:public
tk_3DHorizontalBevel	/usr/include/tkDecls.h	/^    void (*tk_3DHorizontalBevel) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftIn, int rightIn, int topBevel, int relief); \/* 3 *\/$/;"	m	struct:TkStubs	access:public
tk_3DVerticalBevel	/usr/include/tkDecls.h	/^    void (*tk_3DVerticalBevel) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftBevel, int relief); \/* 4 *\/$/;"	m	struct:TkStubs	access:public
tk_AddOption	/usr/include/tkDecls.h	/^    void (*tk_AddOption) (Tk_Window tkwin, CONST char * name, CONST char * value, int priority); \/* 5 *\/$/;"	m	struct:TkStubs	access:public
tk_Alloc3DBorderFromObj	/usr/include/tkDecls.h	/^    Tk_3DBorder (*tk_Alloc3DBorderFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 186 *\/$/;"	m	struct:TkStubs	access:public
tk_AllocBitmapFromObj	/usr/include/tkDecls.h	/^    Pixmap (*tk_AllocBitmapFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 185 *\/$/;"	m	struct:TkStubs	access:public
tk_AllocColorFromObj	/usr/include/tkDecls.h	/^    XColor * (*tk_AllocColorFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 187 *\/$/;"	m	struct:TkStubs	access:public
tk_AllocCursorFromObj	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_AllocCursorFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 188 *\/$/;"	m	struct:TkStubs	access:public
tk_AllocFontFromObj	/usr/include/tkDecls.h	/^    Tk_Font (*tk_AllocFontFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr); \/* 189 *\/$/;"	m	struct:TkStubs	access:public
tk_AllocStyleFromObj	/usr/include/tkDecls.h	/^    Tk_Style (*tk_AllocStyleFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr); \/* 257 *\/$/;"	m	struct:TkStubs	access:public
tk_AttachHWND	/usr/include/tkPlatDecls.h	/^    Window (*tk_AttachHWND) (Tk_Window tkwin, HWND hwnd); \/* 0 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_BindEvent	/usr/include/tkDecls.h	/^    void (*tk_BindEvent) (Tk_BindingTable bindingTable, XEvent * eventPtr, Tk_Window tkwin, int numObjects, ClientData * objectPtr); \/* 6 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasDrawableCoords	/usr/include/tkDecls.h	/^    void (*tk_CanvasDrawableCoords) (Tk_Canvas canvas, double x, double y, short * drawableXPtr, short * drawableYPtr); \/* 7 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasEventuallyRedraw	/usr/include/tkDecls.h	/^    void (*tk_CanvasEventuallyRedraw) (Tk_Canvas canvas, int x1, int y1, int x2, int y2); \/* 8 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasGetCoord	/usr/include/tkDecls.h	/^    int (*tk_CanvasGetCoord) (Tcl_Interp * interp, Tk_Canvas canvas, CONST char * str, double * doublePtr); \/* 9 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasGetCoordFromObj	/usr/include/tkDecls.h	/^    int (*tk_CanvasGetCoordFromObj) (Tcl_Interp * interp, Tk_Canvas canvas, Tcl_Obj * obj, double * doublePtr); \/* 228 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasGetTextInfo	/usr/include/tkDecls.h	/^    Tk_CanvasTextInfo * (*tk_CanvasGetTextInfo) (Tk_Canvas canvas); \/* 10 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsBitmap	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsBitmap) (Tcl_Interp * interp, Tk_Canvas canvas, Pixmap bitmap, int x, int y, int width, int height); \/* 11 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsColor	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsColor) (Tcl_Interp * interp, Tk_Canvas canvas, XColor * colorPtr); \/* 12 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsFont	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsFont) (Tcl_Interp * interp, Tk_Canvas canvas, Tk_Font font); \/* 13 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsOutline	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsOutline) (Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 226 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsPath	/usr/include/tkDecls.h	/^    void (*tk_CanvasPsPath) (Tcl_Interp * interp, Tk_Canvas canvas, double * coordPtr, int numPoints); \/* 14 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsStipple	/usr/include/tkDecls.h	/^    int (*tk_CanvasPsStipple) (Tcl_Interp * interp, Tk_Canvas canvas, Pixmap bitmap); \/* 15 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasPsY	/usr/include/tkDecls.h	/^    double (*tk_CanvasPsY) (Tk_Canvas canvas, double y); \/* 16 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasSetOffset	/usr/include/tkDecls.h	/^    void (*tk_CanvasSetOffset) (Tk_Canvas canvas, GC gc, Tk_TSOffset * offset); \/* 229 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasSetStippleOrigin	/usr/include/tkDecls.h	/^    void (*tk_CanvasSetStippleOrigin) (Tk_Canvas canvas, GC gc); \/* 17 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasTagsParseProc	/usr/include/tkDecls.h	/^    int (*tk_CanvasTagsParseProc) (ClientData clientData, Tcl_Interp * interp, Tk_Window tkwin, CONST char * value, char * widgRec, int offset); \/* 18 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasTagsPrintProc	/usr/include/tkDecls.h	/^    char * (*tk_CanvasTagsPrintProc) (ClientData clientData, Tk_Window tkwin, char * widgRec, int offset, Tcl_FreeProc ** freeProcPtr); \/* 19 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasTkwin	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CanvasTkwin) (Tk_Canvas canvas); \/* 20 *\/$/;"	m	struct:TkStubs	access:public
tk_CanvasWindowCoords	/usr/include/tkDecls.h	/^    void (*tk_CanvasWindowCoords) (Tk_Canvas canvas, double x, double y, short * screenXPtr, short * screenYPtr); \/* 21 *\/$/;"	m	struct:TkStubs	access:public
tk_ChangeOutlineGC	/usr/include/tkDecls.h	/^    int (*tk_ChangeOutlineGC) (Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 224 *\/$/;"	m	struct:TkStubs	access:public
tk_ChangeWindowAttributes	/usr/include/tkDecls.h	/^    void (*tk_ChangeWindowAttributes) (Tk_Window tkwin, unsigned long valueMask, XSetWindowAttributes * attsPtr); \/* 22 *\/$/;"	m	struct:TkStubs	access:public
tk_CharBbox	/usr/include/tkDecls.h	/^    int (*tk_CharBbox) (Tk_TextLayout layout, int index, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr); \/* 23 *\/$/;"	m	struct:TkStubs	access:public
tk_ClearSelection	/usr/include/tkDecls.h	/^    void (*tk_ClearSelection) (Tk_Window tkwin, Atom selection); \/* 24 *\/$/;"	m	struct:TkStubs	access:public
tk_ClipboardAppend	/usr/include/tkDecls.h	/^    int (*tk_ClipboardAppend) (Tcl_Interp * interp, Tk_Window tkwin, Atom target, Atom format, char* buffer); \/* 25 *\/$/;"	m	struct:TkStubs	access:public
tk_ClipboardClear	/usr/include/tkDecls.h	/^    int (*tk_ClipboardClear) (Tcl_Interp * interp, Tk_Window tkwin); \/* 26 *\/$/;"	m	struct:TkStubs	access:public
tk_CollapseMotionEvents	/usr/include/tkDecls.h	/^    int (*tk_CollapseMotionEvents) (Display * display, int collapse); \/* 248 *\/$/;"	m	struct:TkStubs	access:public
tk_ComputeTextLayout	/usr/include/tkDecls.h	/^    Tk_TextLayout (*tk_ComputeTextLayout) (Tk_Font font, CONST char * str, int numChars, int wrapLength, Tk_Justify justify, int flags, int * widthPtr, int * heightPtr); \/* 31 *\/$/;"	m	struct:TkStubs	access:public
tk_ConfigOutlineGC	/usr/include/tkDecls.h	/^    int (*tk_ConfigOutlineGC) (XGCValues * gcValues, Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 223 *\/$/;"	m	struct:TkStubs	access:public
tk_ConfigureInfo	/usr/include/tkDecls.h	/^    int (*tk_ConfigureInfo) (Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, char * widgRec, CONST char * argvName, int flags); \/* 27 *\/$/;"	m	struct:TkStubs	access:public
tk_ConfigureValue	/usr/include/tkDecls.h	/^    int (*tk_ConfigureValue) (Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, char * widgRec, CONST char * argvName, int flags); \/* 28 *\/$/;"	m	struct:TkStubs	access:public
tk_ConfigureWidget	/usr/include/tkDecls.h	/^    int (*tk_ConfigureWidget) (Tcl_Interp * interp, Tk_Window tkwin, Tk_ConfigSpec * specs, int argc, CONST84 char ** argv, char * widgRec, int flags); \/* 29 *\/$/;"	m	struct:TkStubs	access:public
tk_ConfigureWindow	/usr/include/tkDecls.h	/^    void (*tk_ConfigureWindow) (Tk_Window tkwin, unsigned int valueMask, XWindowChanges * valuePtr); \/* 30 *\/$/;"	m	struct:TkStubs	access:public
tk_CoordsToWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CoordsToWindow) (int rootX, int rootY, Tk_Window tkwin); \/* 32 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateAnonymousWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CreateAnonymousWindow) (Tcl_Interp * interp, Tk_Window parent, CONST char * screenName); \/* 241 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateBinding	/usr/include/tkDecls.h	/^    unsigned long (*tk_CreateBinding) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr, CONST char * command, int append); \/* 33 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateBindingTable	/usr/include/tkDecls.h	/^    Tk_BindingTable (*tk_CreateBindingTable) (Tcl_Interp * interp); \/* 34 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateClientMessageHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateClientMessageHandler) (Tk_ClientMessageProc * proc); \/* 239 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateConsoleWindow	/usr/include/tkDecls.h	/^    int (*tk_CreateConsoleWindow) (Tcl_Interp * interp); \/* 216 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateErrorHandler	/usr/include/tkDecls.h	/^    Tk_ErrorHandler (*tk_CreateErrorHandler) (Display * display, int errNum, int request, int minorCode, Tk_ErrorProc * errorProc, ClientData clientData); \/* 35 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateEventHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateEventHandler) (Tk_Window token, unsigned long mask, Tk_EventProc * proc, ClientData clientData); \/* 36 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateGenericHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateGenericHandler) (Tk_GenericProc * proc, ClientData clientData); \/* 37 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateImageType	/usr/include/tkDecls.h	/^    void (*tk_CreateImageType) (Tk_ImageType * typePtr); \/* 38 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateItemType	/usr/include/tkDecls.h	/^    void (*tk_CreateItemType) (Tk_ItemType * typePtr); \/* 39 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateOldImageType	/usr/include/tkDecls.h	/^    void (*tk_CreateOldImageType) (Tk_ImageType * typePtr); \/* 272 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateOldPhotoImageFormat	/usr/include/tkDecls.h	/^    void (*tk_CreateOldPhotoImageFormat) (Tk_PhotoImageFormat * formatPtr); \/* 273 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateOptionTable	/usr/include/tkDecls.h	/^    Tk_OptionTable (*tk_CreateOptionTable) (Tcl_Interp * interp, CONST Tk_OptionSpec * templatePtr); \/* 190 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateOutline	/usr/include/tkDecls.h	/^    void (*tk_CreateOutline) (Tk_Outline * outline); \/* 221 *\/$/;"	m	struct:TkStubs	access:public
tk_CreatePhotoImageFormat	/usr/include/tkDecls.h	/^    void (*tk_CreatePhotoImageFormat) (Tk_PhotoImageFormat * formatPtr); \/* 40 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateSelHandler	/usr/include/tkDecls.h	/^    void (*tk_CreateSelHandler) (Tk_Window tkwin, Atom selection, Atom target, Tk_SelectionProc * proc, ClientData clientData, Atom format); \/* 41 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateSmoothMethod	/usr/include/tkDecls.h	/^    void (*tk_CreateSmoothMethod) (Tcl_Interp * interp, Tk_SmoothMethod * method); \/* 217 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateStyle	/usr/include/tkDecls.h	/^    Tk_Style (*tk_CreateStyle) (CONST char * name, Tk_StyleEngine engine, ClientData clientData); \/* 253 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CreateWindow) (Tcl_Interp * interp, Tk_Window parent, CONST char * name, CONST char * screenName); \/* 42 *\/$/;"	m	struct:TkStubs	access:public
tk_CreateWindowFromPath	/usr/include/tkDecls.h	/^    Tk_Window (*tk_CreateWindowFromPath) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * pathName, CONST char * screenName); \/* 43 *\/$/;"	m	struct:TkStubs	access:public
tk_DefineBitmap	/usr/include/tkDecls.h	/^    int (*tk_DefineBitmap) (Tcl_Interp * interp, CONST char * name, CONST char * source, int width, int height); \/* 44 *\/$/;"	m	struct:TkStubs	access:public
tk_DefineCursor	/usr/include/tkDecls.h	/^    void (*tk_DefineCursor) (Tk_Window window, Tk_Cursor cursor); \/* 45 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteAllBindings	/usr/include/tkDecls.h	/^    void (*tk_DeleteAllBindings) (Tk_BindingTable bindingTable, ClientData object); \/* 46 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteBinding	/usr/include/tkDecls.h	/^    int (*tk_DeleteBinding) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr); \/* 47 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteBindingTable	/usr/include/tkDecls.h	/^    void (*tk_DeleteBindingTable) (Tk_BindingTable bindingTable); \/* 48 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteClientMessageHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteClientMessageHandler) (Tk_ClientMessageProc * proc); \/* 240 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteErrorHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteErrorHandler) (Tk_ErrorHandler handler); \/* 49 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteEventHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteEventHandler) (Tk_Window token, unsigned long mask, Tk_EventProc * proc, ClientData clientData); \/* 50 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteGenericHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteGenericHandler) (Tk_GenericProc * proc, ClientData clientData); \/* 51 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteImage	/usr/include/tkDecls.h	/^    void (*tk_DeleteImage) (Tcl_Interp * interp, CONST char * name); \/* 52 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteOptionTable	/usr/include/tkDecls.h	/^    void (*tk_DeleteOptionTable) (Tk_OptionTable optionTable); \/* 191 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteOutline	/usr/include/tkDecls.h	/^    void (*tk_DeleteOutline) (Display * display, Tk_Outline * outline); \/* 222 *\/$/;"	m	struct:TkStubs	access:public
tk_DeleteSelHandler	/usr/include/tkDecls.h	/^    void (*tk_DeleteSelHandler) (Tk_Window tkwin, Atom selection, Atom target); \/* 53 *\/$/;"	m	struct:TkStubs	access:public
tk_DestroyWindow	/usr/include/tkDecls.h	/^    void (*tk_DestroyWindow) (Tk_Window tkwin); \/* 54 *\/$/;"	m	struct:TkStubs	access:public
tk_DisplayName	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_DisplayName) (Tk_Window tkwin); \/* 55 *\/$/;"	m	struct:TkStubs	access:public
tk_DistanceToTextLayout	/usr/include/tkDecls.h	/^    int (*tk_DistanceToTextLayout) (Tk_TextLayout layout, int x, int y); \/* 56 *\/$/;"	m	struct:TkStubs	access:public
tk_DitherPhoto	/usr/include/tkDecls.h	/^    void (*tk_DitherPhoto) (Tk_PhotoHandle handle, int x, int y, int width, int height); \/* 230 *\/$/;"	m	struct:TkStubs	access:public
tk_Draw3DPolygon	/usr/include/tkDecls.h	/^    void (*tk_Draw3DPolygon) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint * pointPtr, int numPoints, int borderWidth, int leftRelief); \/* 57 *\/$/;"	m	struct:TkStubs	access:public
tk_Draw3DRectangle	/usr/include/tkDecls.h	/^    void (*tk_Draw3DRectangle) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief); \/* 58 *\/$/;"	m	struct:TkStubs	access:public
tk_DrawChars	/usr/include/tkDecls.h	/^    void (*tk_DrawChars) (Display * display, Drawable drawable, GC gc, Tk_Font tkfont, CONST char * source, int numBytes, int x, int y); \/* 59 *\/$/;"	m	struct:TkStubs	access:public
tk_DrawElement	/usr/include/tkDecls.h	/^    void (*tk_DrawElement) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, Drawable d, int x, int y, int width, int height, int state); \/* 264 *\/$/;"	m	struct:TkStubs	access:public
tk_DrawFocusHighlight	/usr/include/tkDecls.h	/^    void (*tk_DrawFocusHighlight) (Tk_Window tkwin, GC gc, int width, Drawable drawable); \/* 60 *\/$/;"	m	struct:TkStubs	access:public
tk_DrawTextLayout	/usr/include/tkDecls.h	/^    void (*tk_DrawTextLayout) (Display * display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int firstChar, int lastChar); \/* 61 *\/$/;"	m	struct:TkStubs	access:public
tk_Fill3DPolygon	/usr/include/tkDecls.h	/^    void (*tk_Fill3DPolygon) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint * pointPtr, int numPoints, int borderWidth, int leftRelief); \/* 62 *\/$/;"	m	struct:TkStubs	access:public
tk_Fill3DRectangle	/usr/include/tkDecls.h	/^    void (*tk_Fill3DRectangle) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief); \/* 63 *\/$/;"	m	struct:TkStubs	access:public
tk_FindPhoto	/usr/include/tkDecls.h	/^    Tk_PhotoHandle (*tk_FindPhoto) (Tcl_Interp * interp, CONST char * imageName); \/* 64 *\/$/;"	m	struct:TkStubs	access:public
tk_FontId	/usr/include/tkDecls.h	/^    Font (*tk_FontId) (Tk_Font font); \/* 65 *\/$/;"	m	struct:TkStubs	access:public
tk_Free3DBorder	/usr/include/tkDecls.h	/^    void (*tk_Free3DBorder) (Tk_3DBorder border); \/* 66 *\/$/;"	m	struct:TkStubs	access:public
tk_Free3DBorderFromObj	/usr/include/tkDecls.h	/^    void (*tk_Free3DBorderFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 192 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeBitmap	/usr/include/tkDecls.h	/^    void (*tk_FreeBitmap) (Display * display, Pixmap bitmap); \/* 67 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeBitmapFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeBitmapFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 193 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeColor	/usr/include/tkDecls.h	/^    void (*tk_FreeColor) (XColor * colorPtr); \/* 68 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeColorFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeColorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 194 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeColormap	/usr/include/tkDecls.h	/^    void (*tk_FreeColormap) (Display * display, Colormap colormap); \/* 69 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeConfigOptions	/usr/include/tkDecls.h	/^    void (*tk_FreeConfigOptions) (char * recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin); \/* 195 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeCursor	/usr/include/tkDecls.h	/^    void (*tk_FreeCursor) (Display * display, Tk_Cursor cursor); \/* 70 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeCursorFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeCursorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 197 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeFont	/usr/include/tkDecls.h	/^    void (*tk_FreeFont) (Tk_Font f); \/* 71 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeFontFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeFontFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 198 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeGC	/usr/include/tkDecls.h	/^    void (*tk_FreeGC) (Display * display, GC gc); \/* 72 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeImage	/usr/include/tkDecls.h	/^    void (*tk_FreeImage) (Tk_Image image); \/* 73 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeOptions	/usr/include/tkDecls.h	/^    void (*tk_FreeOptions) (Tk_ConfigSpec * specs, char * widgRec, Display * display, int needFlags); \/* 74 *\/$/;"	m	struct:TkStubs	access:public
tk_FreePixmap	/usr/include/tkDecls.h	/^    void (*tk_FreePixmap) (Display * display, Pixmap pixmap); \/* 75 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeSavedOptions	/usr/include/tkDecls.h	/^    void (*tk_FreeSavedOptions) (Tk_SavedOptions * savePtr); \/* 196 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeStyle	/usr/include/tkDecls.h	/^    void (*tk_FreeStyle) (Tk_Style style); \/* 255 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeStyleFromObj	/usr/include/tkDecls.h	/^    void (*tk_FreeStyleFromObj) (Tcl_Obj * objPtr); \/* 259 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeTextLayout	/usr/include/tkDecls.h	/^    void (*tk_FreeTextLayout) (Tk_TextLayout textLayout); \/* 76 *\/$/;"	m	struct:TkStubs	access:public
tk_FreeXId	/usr/include/tkDecls.h	/^    void (*tk_FreeXId) (Display * display, XID xid); \/* 77 *\/$/;"	m	struct:TkStubs	access:public
tk_GCForColor	/usr/include/tkDecls.h	/^    GC (*tk_GCForColor) (XColor * colorPtr, Drawable drawable); \/* 78 *\/$/;"	m	struct:TkStubs	access:public
tk_GeometryRequest	/usr/include/tkDecls.h	/^    void (*tk_GeometryRequest) (Tk_Window tkwin, int reqWidth, int reqHeight); \/* 79 *\/$/;"	m	struct:TkStubs	access:public
tk_Get3DBorder	/usr/include/tkDecls.h	/^    Tk_3DBorder (*tk_Get3DBorder) (Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid colorName); \/* 80 *\/$/;"	m	struct:TkStubs	access:public
tk_Get3DBorderFromObj	/usr/include/tkDecls.h	/^    Tk_3DBorder (*tk_Get3DBorderFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 199 *\/$/;"	m	struct:TkStubs	access:public
tk_GetAllBindings	/usr/include/tkDecls.h	/^    void (*tk_GetAllBindings) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object); \/* 81 *\/$/;"	m	struct:TkStubs	access:public
tk_GetAnchor	/usr/include/tkDecls.h	/^    int (*tk_GetAnchor) (Tcl_Interp * interp, CONST char * str, Tk_Anchor * anchorPtr); \/* 82 *\/$/;"	m	struct:TkStubs	access:public
tk_GetAnchorFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetAnchorFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tk_Anchor * anchorPtr); \/* 200 *\/$/;"	m	struct:TkStubs	access:public
tk_GetAtomName	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_GetAtomName) (Tk_Window tkwin, Atom atom); \/* 83 *\/$/;"	m	struct:TkStubs	access:public
tk_GetBinding	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_GetBinding) (Tcl_Interp * interp, Tk_BindingTable bindingTable, ClientData object, CONST char * eventStr); \/* 84 *\/$/;"	m	struct:TkStubs	access:public
tk_GetBitmap	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetBitmap) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str); \/* 85 *\/$/;"	m	struct:TkStubs	access:public
tk_GetBitmapFromData	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetBitmapFromData) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * source, int width, int height); \/* 86 *\/$/;"	m	struct:TkStubs	access:public
tk_GetBitmapFromObj	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetBitmapFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 201 *\/$/;"	m	struct:TkStubs	access:public
tk_GetCapStyle	/usr/include/tkDecls.h	/^    int (*tk_GetCapStyle) (Tcl_Interp * interp, CONST char * str, int * capPtr); \/* 87 *\/$/;"	m	struct:TkStubs	access:public
tk_GetColor	/usr/include/tkDecls.h	/^    XColor * (*tk_GetColor) (Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid name); \/* 88 *\/$/;"	m	struct:TkStubs	access:public
tk_GetColorByValue	/usr/include/tkDecls.h	/^    XColor * (*tk_GetColorByValue) (Tk_Window tkwin, XColor * colorPtr); \/* 89 *\/$/;"	m	struct:TkStubs	access:public
tk_GetColorFromObj	/usr/include/tkDecls.h	/^    XColor * (*tk_GetColorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 202 *\/$/;"	m	struct:TkStubs	access:public
tk_GetColormap	/usr/include/tkDecls.h	/^    Colormap (*tk_GetColormap) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str); \/* 90 *\/$/;"	m	struct:TkStubs	access:public
tk_GetCursor	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_GetCursor) (Tcl_Interp * interp, Tk_Window tkwin, Tk_Uid str); \/* 91 *\/$/;"	m	struct:TkStubs	access:public
tk_GetCursorFromData	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_GetCursorFromData) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * source, CONST char * mask, int width, int height, int xHot, int yHot, Tk_Uid fg, Tk_Uid bg); \/* 92 *\/$/;"	m	struct:TkStubs	access:public
tk_GetCursorFromObj	/usr/include/tkDecls.h	/^    Tk_Cursor (*tk_GetCursorFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 203 *\/$/;"	m	struct:TkStubs	access:public
tk_GetDash	/usr/include/tkDecls.h	/^    int (*tk_GetDash) (Tcl_Interp * interp, CONST char * value, Tk_Dash * dash); \/* 220 *\/$/;"	m	struct:TkStubs	access:public
tk_GetElementBorderWidth	/usr/include/tkDecls.h	/^    int (*tk_GetElementBorderWidth) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin); \/* 263 *\/$/;"	m	struct:TkStubs	access:public
tk_GetElementBox	/usr/include/tkDecls.h	/^    void (*tk_GetElementBox) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, int x, int y, int width, int height, int inner, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr); \/* 262 *\/$/;"	m	struct:TkStubs	access:public
tk_GetElementId	/usr/include/tkDecls.h	/^    int (*tk_GetElementId) (CONST char * name); \/* 252 *\/$/;"	m	struct:TkStubs	access:public
tk_GetElementSize	/usr/include/tkDecls.h	/^    void (*tk_GetElementSize) (Tk_Style style, Tk_StyledElement element, char * recordPtr, Tk_Window tkwin, int width, int height, int inner, int * widthPtr, int * heightPtr); \/* 261 *\/$/;"	m	struct:TkStubs	access:public
tk_GetFont	/usr/include/tkDecls.h	/^    Tk_Font (*tk_GetFont) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str); \/* 93 *\/$/;"	m	struct:TkStubs	access:public
tk_GetFontFromObj	/usr/include/tkDecls.h	/^    Tk_Font (*tk_GetFontFromObj) (Tk_Window tkwin, Tcl_Obj * objPtr); \/* 94 *\/$/;"	m	struct:TkStubs	access:public
tk_GetFontMetrics	/usr/include/tkDecls.h	/^    void (*tk_GetFontMetrics) (Tk_Font font, Tk_FontMetrics * fmPtr); \/* 95 *\/$/;"	m	struct:TkStubs	access:public
tk_GetGC	/usr/include/tkDecls.h	/^    GC (*tk_GetGC) (Tk_Window tkwin, unsigned long valueMask, XGCValues * valuePtr); \/* 96 *\/$/;"	m	struct:TkStubs	access:public
tk_GetHINSTANCE	/usr/include/tkPlatDecls.h	/^    HINSTANCE (*tk_GetHINSTANCE) (void); \/* 1 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_GetHWND	/usr/include/tkPlatDecls.h	/^    HWND (*tk_GetHWND) (Window window); \/* 2 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_GetImage	/usr/include/tkDecls.h	/^    Tk_Image (*tk_GetImage) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * name, Tk_ImageChangedProc * changeProc, ClientData clientData); \/* 97 *\/$/;"	m	struct:TkStubs	access:public
tk_GetImageMasterData	/usr/include/tkDecls.h	/^    ClientData (*tk_GetImageMasterData) (Tcl_Interp * interp, CONST char * name, Tk_ImageType ** typePtrPtr); \/* 98 *\/$/;"	m	struct:TkStubs	access:public
tk_GetItemTypes	/usr/include/tkDecls.h	/^    Tk_ItemType * (*tk_GetItemTypes) (void); \/* 99 *\/$/;"	m	struct:TkStubs	access:public
tk_GetJoinStyle	/usr/include/tkDecls.h	/^    int (*tk_GetJoinStyle) (Tcl_Interp * interp, CONST char * str, int * joinPtr); \/* 100 *\/$/;"	m	struct:TkStubs	access:public
tk_GetJustify	/usr/include/tkDecls.h	/^    int (*tk_GetJustify) (Tcl_Interp * interp, CONST char * str, Tk_Justify * justifyPtr); \/* 101 *\/$/;"	m	struct:TkStubs	access:public
tk_GetJustifyFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetJustifyFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, Tk_Justify * justifyPtr); \/* 206 *\/$/;"	m	struct:TkStubs	access:public
tk_GetMMFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetMMFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr, double * doublePtr); \/* 207 *\/$/;"	m	struct:TkStubs	access:public
tk_GetNumMainWindows	/usr/include/tkDecls.h	/^    int (*tk_GetNumMainWindows) (void); \/* 102 *\/$/;"	m	struct:TkStubs	access:public
tk_GetOption	/usr/include/tkDecls.h	/^    Tk_Uid (*tk_GetOption) (Tk_Window tkwin, CONST char * name, CONST char * className); \/* 103 *\/$/;"	m	struct:TkStubs	access:public
tk_GetOptionInfo	/usr/include/tkDecls.h	/^    Tcl_Obj * (*tk_GetOptionInfo) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, Tcl_Obj * namePtr, Tk_Window tkwin); \/* 204 *\/$/;"	m	struct:TkStubs	access:public
tk_GetOptionValue	/usr/include/tkDecls.h	/^    Tcl_Obj * (*tk_GetOptionValue) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, Tcl_Obj * namePtr, Tk_Window tkwin); \/* 205 *\/$/;"	m	struct:TkStubs	access:public
tk_GetPixels	/usr/include/tkDecls.h	/^    int (*tk_GetPixels) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, int * intPtr); \/* 104 *\/$/;"	m	struct:TkStubs	access:public
tk_GetPixelsFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetPixelsFromObj) (Tcl_Interp * interp, Tk_Window tkwin, Tcl_Obj * objPtr, int * intPtr); \/* 208 *\/$/;"	m	struct:TkStubs	access:public
tk_GetPixmap	/usr/include/tkDecls.h	/^    Pixmap (*tk_GetPixmap) (Display * display, Drawable d, int width, int height, int depth); \/* 105 *\/$/;"	m	struct:TkStubs	access:public
tk_GetRelief	/usr/include/tkDecls.h	/^    int (*tk_GetRelief) (Tcl_Interp * interp, CONST char * name, int * reliefPtr); \/* 106 *\/$/;"	m	struct:TkStubs	access:public
tk_GetReliefFromObj	/usr/include/tkDecls.h	/^    int (*tk_GetReliefFromObj) (Tcl_Interp * interp, Tcl_Obj * objPtr, int * resultPtr); \/* 209 *\/$/;"	m	struct:TkStubs	access:public
tk_GetRootCoords	/usr/include/tkDecls.h	/^    void (*tk_GetRootCoords) (Tk_Window tkwin, int * xPtr, int * yPtr); \/* 107 *\/$/;"	m	struct:TkStubs	access:public
tk_GetScreenMM	/usr/include/tkDecls.h	/^    int (*tk_GetScreenMM) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, double * doublePtr); \/* 109 *\/$/;"	m	struct:TkStubs	access:public
tk_GetScrollInfo	/usr/include/tkDecls.h	/^    int (*tk_GetScrollInfo) (Tcl_Interp * interp, int argc, CONST84 char ** argv, double * dblPtr, int * intPtr); \/* 108 *\/$/;"	m	struct:TkStubs	access:public
tk_GetScrollInfoObj	/usr/include/tkDecls.h	/^    int (*tk_GetScrollInfoObj) (Tcl_Interp * interp, int objc, Tcl_Obj *CONST objv[], double * dblPtr, int * intPtr); \/* 210 *\/$/;"	m	struct:TkStubs	access:public
tk_GetSelection	/usr/include/tkDecls.h	/^    int (*tk_GetSelection) (Tcl_Interp * interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc * proc, ClientData clientData); \/* 110 *\/$/;"	m	struct:TkStubs	access:public
tk_GetStyle	/usr/include/tkDecls.h	/^    Tk_Style (*tk_GetStyle) (Tcl_Interp * interp, CONST char * name); \/* 254 *\/$/;"	m	struct:TkStubs	access:public
tk_GetStyleEngine	/usr/include/tkDecls.h	/^    Tk_StyleEngine (*tk_GetStyleEngine) (CONST char * name); \/* 250 *\/$/;"	m	struct:TkStubs	access:public
tk_GetStyleFromObj	/usr/include/tkDecls.h	/^    Tk_Style (*tk_GetStyleFromObj) (Tcl_Obj * objPtr); \/* 258 *\/$/;"	m	struct:TkStubs	access:public
tk_GetStyledElement	/usr/include/tkDecls.h	/^    Tk_StyledElement (*tk_GetStyledElement) (Tk_Style style, int elementId, Tk_OptionTable optionTable); \/* 260 *\/$/;"	m	struct:TkStubs	access:public
tk_GetUid	/usr/include/tkDecls.h	/^    Tk_Uid (*tk_GetUid) (CONST char * str); \/* 111 *\/$/;"	m	struct:TkStubs	access:public
tk_GetUserInactiveTime	/usr/include/tkDecls.h	/^    long (*tk_GetUserInactiveTime) (Display * dpy); \/* 269 *\/$/;"	m	struct:TkStubs	access:public
tk_GetVRootGeometry	/usr/include/tkDecls.h	/^    void (*tk_GetVRootGeometry) (Tk_Window tkwin, int * xPtr, int * yPtr, int * widthPtr, int * heightPtr); \/* 113 *\/$/;"	m	struct:TkStubs	access:public
tk_GetVisual	/usr/include/tkDecls.h	/^    Visual * (*tk_GetVisual) (Tcl_Interp * interp, Tk_Window tkwin, CONST char * str, int * depthPtr, Colormap * colormapPtr); \/* 112 *\/$/;"	m	struct:TkStubs	access:public
tk_Grab	/usr/include/tkDecls.h	/^    int (*tk_Grab) (Tcl_Interp * interp, Tk_Window tkwin, int grabGlobal); \/* 114 *\/$/;"	m	struct:TkStubs	access:public
tk_HWNDToWindow	/usr/include/tkPlatDecls.h	/^    Tk_Window (*tk_HWNDToWindow) (HWND hwnd); \/* 3 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_HandleEvent	/usr/include/tkDecls.h	/^    void (*tk_HandleEvent) (XEvent * eventPtr); \/* 115 *\/$/;"	m	struct:TkStubs	access:public
tk_IdToWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_IdToWindow) (Display * display, Window window); \/* 116 *\/$/;"	m	struct:TkStubs	access:public
tk_ImageChanged	/usr/include/tkDecls.h	/^    void (*tk_ImageChanged) (Tk_ImageMaster master, int x, int y, int width, int height, int imageWidth, int imageHeight); \/* 117 *\/$/;"	m	struct:TkStubs	access:public
tk_Init	/usr/include/tkDecls.h	/^    int (*tk_Init) (Tcl_Interp * interp); \/* 118 *\/$/;"	m	struct:TkStubs	access:public
tk_InitConsoleChannels	/usr/include/tkDecls.h	/^    void (*tk_InitConsoleChannels) (Tcl_Interp * interp); \/* 215 *\/$/;"	m	struct:TkStubs	access:public
tk_InitOptions	/usr/include/tkDecls.h	/^    int (*tk_InitOptions) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin); \/* 211 *\/$/;"	m	struct:TkStubs	access:public
tk_InternAtom	/usr/include/tkDecls.h	/^    Atom (*tk_InternAtom) (Tk_Window tkwin, CONST char * name); \/* 119 *\/$/;"	m	struct:TkStubs	access:public
tk_Interp	/usr/include/tkDecls.h	/^    Tcl_Interp * (*tk_Interp) (Tk_Window tkwin); \/* 271 *\/$/;"	m	struct:TkStubs	access:public
tk_IntersectTextLayout	/usr/include/tkDecls.h	/^    int (*tk_IntersectTextLayout) (Tk_TextLayout layout, int x, int y, int width, int height); \/* 120 *\/$/;"	m	struct:TkStubs	access:public
tk_MacOSXIsAppInFront	/usr/include/tkPlatDecls.h	/^    int (*tk_MacOSXIsAppInFront) (void); \/* 10 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_MacOSXSetEmbedHandler	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXSetEmbedHandler) (Tk_MacOSXEmbedRegisterWinProc * registerWinProcPtr, Tk_MacOSXEmbedGetGrafPortProc * getPortProcPtr, Tk_MacOSXEmbedMakeContainerExistProc * containerExistProcPtr, Tk_MacOSXEmbedGetClipProc * getClipProc, Tk_MacOSXEmbedGetOffsetInParentProc * getOffsetProc); \/* 0 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_MacOSXSetupTkNotifier	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXSetupTkNotifier) (void); \/* 9 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_MacOSXTkOwnsCursor	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXTkOwnsCursor) (int tkOwnsIt); \/* 2 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_MacOSXTurnOffMenus	/usr/include/tkPlatDecls.h	/^    void (*tk_MacOSXTurnOffMenus) (void); \/* 1 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_MainEx	/usr/include/tkDecls.h	/^    void (*tk_MainEx) (int argc, char ** argv, Tcl_AppInitProc * appInitProc, Tcl_Interp * interp); \/* 212 *\/$/;"	m	struct:TkStubs	access:public
tk_MainLoop	/usr/include/tkDecls.h	/^    void (*tk_MainLoop) (void); \/* 0 *\/$/;"	m	struct:TkStubs	access:public
tk_MainWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_MainWindow) (Tcl_Interp * interp); \/* 122 *\/$/;"	m	struct:TkStubs	access:public
tk_MaintainGeometry	/usr/include/tkDecls.h	/^    void (*tk_MaintainGeometry) (Tk_Window slave, Tk_Window master, int x, int y, int width, int height); \/* 121 *\/$/;"	m	struct:TkStubs	access:public
tk_MakeWindowExist	/usr/include/tkDecls.h	/^    void (*tk_MakeWindowExist) (Tk_Window tkwin); \/* 123 *\/$/;"	m	struct:TkStubs	access:public
tk_ManageGeometry	/usr/include/tkDecls.h	/^    void (*tk_ManageGeometry) (Tk_Window tkwin, CONST Tk_GeomMgr * mgrPtr, ClientData clientData); \/* 124 *\/$/;"	m	struct:TkStubs	access:public
tk_MapWindow	/usr/include/tkDecls.h	/^    void (*tk_MapWindow) (Tk_Window tkwin); \/* 125 *\/$/;"	m	struct:TkStubs	access:public
tk_MeasureChars	/usr/include/tkDecls.h	/^    int (*tk_MeasureChars) (Tk_Font tkfont, CONST char * source, int numBytes, int maxPixels, int flags, int * lengthPtr); \/* 126 *\/$/;"	m	struct:TkStubs	access:public
tk_MoveResizeWindow	/usr/include/tkDecls.h	/^    void (*tk_MoveResizeWindow) (Tk_Window tkwin, int x, int y, int width, int height); \/* 127 *\/$/;"	m	struct:TkStubs	access:public
tk_MoveToplevelWindow	/usr/include/tkDecls.h	/^    void (*tk_MoveToplevelWindow) (Tk_Window tkwin, int x, int y); \/* 129 *\/$/;"	m	struct:TkStubs	access:public
tk_MoveWindow	/usr/include/tkDecls.h	/^    void (*tk_MoveWindow) (Tk_Window tkwin, int x, int y); \/* 128 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOf3DBorder	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOf3DBorder) (Tk_3DBorder border); \/* 130 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfAnchor	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfAnchor) (Tk_Anchor anchor); \/* 131 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfBitmap	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfBitmap) (Display * display, Pixmap bitmap); \/* 132 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfCapStyle	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfCapStyle) (int cap); \/* 133 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfColor	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfColor) (XColor * colorPtr); \/* 134 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfCursor	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfCursor) (Display * display, Tk_Cursor cursor); \/* 135 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfFont	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfFont) (Tk_Font font); \/* 136 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfImage	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfImage) (Tk_ImageMaster imageMaster); \/* 137 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfJoinStyle	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfJoinStyle) (int join); \/* 138 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfJustify	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfJustify) (Tk_Justify justify); \/* 139 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfRelief	/usr/include/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfRelief) (int relief); \/* 140 *\/$/;"	m	struct:TkStubs	access:public
tk_NameOfStyle	/usr/include/tkDecls.h	/^    CONST char * (*tk_NameOfStyle) (Tk_Style style); \/* 256 *\/$/;"	m	struct:TkStubs	access:public
tk_NameToWindow	/usr/include/tkDecls.h	/^    Tk_Window (*tk_NameToWindow) (Tcl_Interp * interp, CONST char * pathName, Tk_Window tkwin); \/* 141 *\/$/;"	m	struct:TkStubs	access:public
tk_OwnSelection	/usr/include/tkDecls.h	/^    void (*tk_OwnSelection) (Tk_Window tkwin, Atom selection, Tk_LostSelProc * proc, ClientData clientData); \/* 142 *\/$/;"	m	struct:TkStubs	access:public
tk_ParseArgv	/usr/include/tkDecls.h	/^    int (*tk_ParseArgv) (Tcl_Interp * interp, Tk_Window tkwin, int * argcPtr, CONST84 char ** argv, Tk_ArgvInfo * argTable, int flags); \/* 143 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoBlank	/usr/include/tkDecls.h	/^    void (*tk_PhotoBlank) (Tk_PhotoHandle handle); \/* 147 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoExpand	/usr/include/tkDecls.h	/^    int (*tk_PhotoExpand) (Tcl_Interp * interp, Tk_PhotoHandle handle, int width, int height); \/* 265 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoExpand_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoExpand_Panic) (Tk_PhotoHandle handle, int width, int height); \/* 148 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoGetImage	/usr/include/tkDecls.h	/^    int (*tk_PhotoGetImage) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr); \/* 146 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoGetSize	/usr/include/tkDecls.h	/^    void (*tk_PhotoGetSize) (Tk_PhotoHandle handle, int * widthPtr, int * heightPtr); \/* 149 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoPutBlock	/usr/include/tkDecls.h	/^    int (*tk_PhotoPutBlock) (Tcl_Interp * interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int compRule); \/* 266 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoPutBlock_NoComposite	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutBlock_NoComposite) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height); \/* 144 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoPutBlock_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutBlock_Panic) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int compRule); \/* 246 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoPutZoomedBlock	/usr/include/tkDecls.h	/^    int (*tk_PhotoPutZoomedBlock) (Tcl_Interp * interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule); \/* 267 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoPutZoomedBlock_NoComposite	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutZoomedBlock_NoComposite) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY); \/* 145 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoPutZoomedBlock_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoPutZoomedBlock_Panic) (Tk_PhotoHandle handle, Tk_PhotoImageBlock * blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule); \/* 247 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoSetSize	/usr/include/tkDecls.h	/^    int (*tk_PhotoSetSize) (Tcl_Interp * interp, Tk_PhotoHandle handle, int width, int height); \/* 268 *\/$/;"	m	struct:TkStubs	access:public
tk_PhotoSetSize_Panic	/usr/include/tkDecls.h	/^    void (*tk_PhotoSetSize_Panic) (Tk_PhotoHandle handle, int width, int height); \/* 150 *\/$/;"	m	struct:TkStubs	access:public
tk_PointToChar	/usr/include/tkDecls.h	/^    int (*tk_PointToChar) (Tk_TextLayout layout, int x, int y); \/* 151 *\/$/;"	m	struct:TkStubs	access:public
tk_PointerEvent	/usr/include/tkPlatDecls.h	/^    void (*tk_PointerEvent) (HWND hwnd, int x, int y); \/* 4 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_PostscriptBitmap	/usr/include/tkDecls.h	/^    int (*tk_PostscriptBitmap) (Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap, int startX, int startY, int width, int height); \/* 231 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptColor	/usr/include/tkDecls.h	/^    int (*tk_PostscriptColor) (Tcl_Interp * interp, Tk_PostscriptInfo psInfo, XColor * colorPtr); \/* 232 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptFont	/usr/include/tkDecls.h	/^    int (*tk_PostscriptFont) (Tcl_Interp * interp, Tk_PostscriptInfo psInfo, Tk_Font font); \/* 233 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptFontName	/usr/include/tkDecls.h	/^    int (*tk_PostscriptFontName) (Tk_Font tkfont, Tcl_DString * dsPtr); \/* 152 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptImage	/usr/include/tkDecls.h	/^    int (*tk_PostscriptImage) (Tk_Image image, Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psinfo, int x, int y, int width, int height, int prepass); \/* 234 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptPath	/usr/include/tkDecls.h	/^    void (*tk_PostscriptPath) (Tcl_Interp * interp, Tk_PostscriptInfo psInfo, double * coordPtr, int numPoints); \/* 235 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptPhoto	/usr/include/tkDecls.h	/^    int (*tk_PostscriptPhoto) (Tcl_Interp * interp, Tk_PhotoImageBlock * blockPtr, Tk_PostscriptInfo psInfo, int width, int height); \/* 238 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptStipple	/usr/include/tkDecls.h	/^    int (*tk_PostscriptStipple) (Tcl_Interp * interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap); \/* 236 *\/$/;"	m	struct:TkStubs	access:public
tk_PostscriptY	/usr/include/tkDecls.h	/^    double (*tk_PostscriptY) (double y, Tk_PostscriptInfo psInfo); \/* 237 *\/$/;"	m	struct:TkStubs	access:public
tk_PreserveColormap	/usr/include/tkDecls.h	/^    void (*tk_PreserveColormap) (Display * display, Colormap colormap); \/* 153 *\/$/;"	m	struct:TkStubs	access:public
tk_QueueWindowEvent	/usr/include/tkDecls.h	/^    void (*tk_QueueWindowEvent) (XEvent * eventPtr, Tcl_QueuePosition position); \/* 154 *\/$/;"	m	struct:TkStubs	access:public
tk_RedrawImage	/usr/include/tkDecls.h	/^    void (*tk_RedrawImage) (Tk_Image image, int imageX, int imageY, int width, int height, Drawable drawable, int drawableX, int drawableY); \/* 155 *\/$/;"	m	struct:TkStubs	access:public
tk_RegisterStyleEngine	/usr/include/tkDecls.h	/^    Tk_StyleEngine (*tk_RegisterStyleEngine) (CONST char * name, Tk_StyleEngine parent); \/* 249 *\/$/;"	m	struct:TkStubs	access:public
tk_RegisterStyledElement	/usr/include/tkDecls.h	/^    int (*tk_RegisterStyledElement) (Tk_StyleEngine engine, Tk_ElementSpec * templatePtr); \/* 251 *\/$/;"	m	struct:TkStubs	access:public
tk_ResetOutlineGC	/usr/include/tkDecls.h	/^    int (*tk_ResetOutlineGC) (Tk_Canvas canvas, Tk_Item * item, Tk_Outline * outline); \/* 225 *\/$/;"	m	struct:TkStubs	access:public
tk_ResetUserInactiveTime	/usr/include/tkDecls.h	/^    void (*tk_ResetUserInactiveTime) (Display * dpy); \/* 270 *\/$/;"	m	struct:TkStubs	access:public
tk_ResizeWindow	/usr/include/tkDecls.h	/^    void (*tk_ResizeWindow) (Tk_Window tkwin, int width, int height); \/* 156 *\/$/;"	m	struct:TkStubs	access:public
tk_RestackWindow	/usr/include/tkDecls.h	/^    int (*tk_RestackWindow) (Tk_Window tkwin, int aboveBelow, Tk_Window other); \/* 157 *\/$/;"	m	struct:TkStubs	access:public
tk_RestoreSavedOptions	/usr/include/tkDecls.h	/^    void (*tk_RestoreSavedOptions) (Tk_SavedOptions * savePtr); \/* 213 *\/$/;"	m	struct:TkStubs	access:public
tk_RestrictEvents	/usr/include/tkDecls.h	/^    Tk_RestrictProc * (*tk_RestrictEvents) (Tk_RestrictProc * proc, ClientData arg, ClientData * prevArgPtr); \/* 158 *\/$/;"	m	struct:TkStubs	access:public
tk_SafeInit	/usr/include/tkDecls.h	/^    int (*tk_SafeInit) (Tcl_Interp * interp); \/* 159 *\/$/;"	m	struct:TkStubs	access:public
tk_SetAppName	/usr/include/tkDecls.h	/^    CONST char * (*tk_SetAppName) (Tk_Window tkwin, CONST char * name); \/* 160 *\/$/;"	m	struct:TkStubs	access:public
tk_SetBackgroundFromBorder	/usr/include/tkDecls.h	/^    void (*tk_SetBackgroundFromBorder) (Tk_Window tkwin, Tk_3DBorder border); \/* 161 *\/$/;"	m	struct:TkStubs	access:public
tk_SetCaretPos	/usr/include/tkDecls.h	/^    void (*tk_SetCaretPos) (Tk_Window tkwin, int x, int y, int height); \/* 245 *\/$/;"	m	struct:TkStubs	access:public
tk_SetClass	/usr/include/tkDecls.h	/^    void (*tk_SetClass) (Tk_Window tkwin, CONST char * className); \/* 162 *\/$/;"	m	struct:TkStubs	access:public
tk_SetClassProcs	/usr/include/tkDecls.h	/^    void (*tk_SetClassProcs) (Tk_Window tkwin, Tk_ClassProcs * procs, ClientData instanceData); \/* 242 *\/$/;"	m	struct:TkStubs	access:public
tk_SetGrid	/usr/include/tkDecls.h	/^    void (*tk_SetGrid) (Tk_Window tkwin, int reqWidth, int reqHeight, int gridWidth, int gridHeight); \/* 163 *\/$/;"	m	struct:TkStubs	access:public
tk_SetInternalBorder	/usr/include/tkDecls.h	/^    void (*tk_SetInternalBorder) (Tk_Window tkwin, int width); \/* 164 *\/$/;"	m	struct:TkStubs	access:public
tk_SetInternalBorderEx	/usr/include/tkDecls.h	/^    void (*tk_SetInternalBorderEx) (Tk_Window tkwin, int left, int right, int top, int bottom); \/* 243 *\/$/;"	m	struct:TkStubs	access:public
tk_SetMinimumRequestSize	/usr/include/tkDecls.h	/^    void (*tk_SetMinimumRequestSize) (Tk_Window tkwin, int minWidth, int minHeight); \/* 244 *\/$/;"	m	struct:TkStubs	access:public
tk_SetOptions	/usr/include/tkDecls.h	/^    int (*tk_SetOptions) (Tcl_Interp * interp, char * recordPtr, Tk_OptionTable optionTable, int objc, Tcl_Obj *CONST objv[], Tk_Window tkwin, Tk_SavedOptions * savePtr, int * maskPtr); \/* 214 *\/$/;"	m	struct:TkStubs	access:public
tk_SetTSOrigin	/usr/include/tkDecls.h	/^    void (*tk_SetTSOrigin) (Tk_Window tkwin, GC gc, int x, int y); \/* 227 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowBackground	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBackground) (Tk_Window tkwin, unsigned long pixel); \/* 165 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowBackgroundPixmap	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBackgroundPixmap) (Tk_Window tkwin, Pixmap pixmap); \/* 166 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowBorder	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBorder) (Tk_Window tkwin, unsigned long pixel); \/* 167 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowBorderPixmap	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBorderPixmap) (Tk_Window tkwin, Pixmap pixmap); \/* 169 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowBorderWidth	/usr/include/tkDecls.h	/^    void (*tk_SetWindowBorderWidth) (Tk_Window tkwin, int width); \/* 168 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowColormap	/usr/include/tkDecls.h	/^    void (*tk_SetWindowColormap) (Tk_Window tkwin, Colormap colormap); \/* 170 *\/$/;"	m	struct:TkStubs	access:public
tk_SetWindowVisual	/usr/include/tkDecls.h	/^    int (*tk_SetWindowVisual) (Tk_Window tkwin, Visual * visual, int depth, Colormap colormap); \/* 171 *\/$/;"	m	struct:TkStubs	access:public
tk_SizeOfBitmap	/usr/include/tkDecls.h	/^    void (*tk_SizeOfBitmap) (Display * display, Pixmap bitmap, int * widthPtr, int * heightPtr); \/* 172 *\/$/;"	m	struct:TkStubs	access:public
tk_SizeOfImage	/usr/include/tkDecls.h	/^    void (*tk_SizeOfImage) (Tk_Image image, int * widthPtr, int * heightPtr); \/* 173 *\/$/;"	m	struct:TkStubs	access:public
tk_StrictMotif	/usr/include/tkDecls.h	/^    int (*tk_StrictMotif) (Tk_Window tkwin); \/* 174 *\/$/;"	m	struct:TkStubs	access:public
tk_TextLayoutToPostscript	/usr/include/tkDecls.h	/^    void (*tk_TextLayoutToPostscript) (Tcl_Interp * interp, Tk_TextLayout layout); \/* 175 *\/$/;"	m	struct:TkStubs	access:public
tk_TextWidth	/usr/include/tkDecls.h	/^    int (*tk_TextWidth) (Tk_Font font, CONST char * str, int numBytes); \/* 176 *\/$/;"	m	struct:TkStubs	access:public
tk_TranslateWinEvent	/usr/include/tkPlatDecls.h	/^    int (*tk_TranslateWinEvent) (HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam, LRESULT * result); \/* 5 *\/$/;"	m	struct:TkPlatStubs	access:public
tk_UndefineCursor	/usr/include/tkDecls.h	/^    void (*tk_UndefineCursor) (Tk_Window window); \/* 177 *\/$/;"	m	struct:TkStubs	access:public
tk_UnderlineChars	/usr/include/tkDecls.h	/^    void (*tk_UnderlineChars) (Display * display, Drawable drawable, GC gc, Tk_Font tkfont, CONST char * source, int x, int y, int firstByte, int lastByte); \/* 178 *\/$/;"	m	struct:TkStubs	access:public
tk_UnderlineTextLayout	/usr/include/tkDecls.h	/^    void (*tk_UnderlineTextLayout) (Display * display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int underline); \/* 179 *\/$/;"	m	struct:TkStubs	access:public
tk_Ungrab	/usr/include/tkDecls.h	/^    void (*tk_Ungrab) (Tk_Window tkwin); \/* 180 *\/$/;"	m	struct:TkStubs	access:public
tk_UnmaintainGeometry	/usr/include/tkDecls.h	/^    void (*tk_UnmaintainGeometry) (Tk_Window slave, Tk_Window master); \/* 181 *\/$/;"	m	struct:TkStubs	access:public
tk_UnmapWindow	/usr/include/tkDecls.h	/^    void (*tk_UnmapWindow) (Tk_Window tkwin); \/* 182 *\/$/;"	m	struct:TkStubs	access:public
tk_UnsetGrid	/usr/include/tkDecls.h	/^    void (*tk_UnsetGrid) (Tk_Window tkwin); \/* 183 *\/$/;"	m	struct:TkStubs	access:public
tk_UpdatePointer	/usr/include/tkDecls.h	/^    void (*tk_UpdatePointer) (Tk_Window tkwin, int x, int y, int state); \/* 184 *\/$/;"	m	struct:TkStubs	access:public
tk_name	/usr/include/tic.h	/^	char	*tk_name;		\/* name of capability *\/$/;"	m	struct:token	access:public
tk_valnumber	/usr/include/tic.h	/^	int	tk_valnumber;	\/* value of capability (if a number) *\/$/;"	m	struct:token	access:public
tk_valstring	/usr/include/tic.h	/^	char	*tk_valstring;	\/* value of capability (if a string) *\/$/;"	m	struct:token	access:public
tkwin	/usr/include/tk.h	/^    Tk_Window tkwin;		\/* Window associated with recordPtr; needed to$/;"	m	struct:Tk_SavedOptions	access:public
tli_host	/usr/include/tcpd.h	/^extern void tli_host();			\/* look up endpoint addresses etc. *\/$/;"	p	signature:()
tm	/usr/include/time.h	/^struct tm {$/;"	s
tm::tm_gmtoff	/usr/include/time.h	/^	long	tm_gmtoff;	\/* offset from CUT in seconds *\/$/;"	m	struct:tm	access:public
tm::tm_hour	/usr/include/time.h	/^	int	tm_hour;	\/* hours since midnight [0-23] *\/$/;"	m	struct:tm	access:public
tm::tm_isdst	/usr/include/time.h	/^	int	tm_isdst;	\/* Daylight Savings Time flag *\/$/;"	m	struct:tm	access:public
tm::tm_mday	/usr/include/time.h	/^	int	tm_mday;	\/* day of the month [1-31] *\/$/;"	m	struct:tm	access:public
tm::tm_min	/usr/include/time.h	/^	int	tm_min;		\/* minutes after the hour [0-59] *\/$/;"	m	struct:tm	access:public
tm::tm_mon	/usr/include/time.h	/^	int	tm_mon;		\/* months since January [0-11] *\/$/;"	m	struct:tm	access:public
tm::tm_sec	/usr/include/time.h	/^	int	tm_sec;		\/* seconds after the minute [0-60] *\/$/;"	m	struct:tm	access:public
tm::tm_wday	/usr/include/time.h	/^	int	tm_wday;	\/* days since Sunday [0-6] *\/$/;"	m	struct:tm	access:public
tm::tm_yday	/usr/include/time.h	/^	int	tm_yday;	\/* days since January 1 [0-365] *\/$/;"	m	struct:tm	access:public
tm::tm_year	/usr/include/time.h	/^	int	tm_year;	\/* years since 1900 *\/$/;"	m	struct:tm	access:public
tm::tm_zone	/usr/include/time.h	/^	char	*tm_zone;	\/* timezone abbreviation *\/$/;"	m	struct:tm	access:public
tm_gmtoff	/usr/include/time.h	/^	long	tm_gmtoff;	\/* offset from CUT in seconds *\/$/;"	m	struct:tm	access:public
tm_hour	/usr/include/time.h	/^	int	tm_hour;	\/* hours since midnight [0-23] *\/$/;"	m	struct:tm	access:public
tm_isdst	/usr/include/time.h	/^	int	tm_isdst;	\/* Daylight Savings Time flag *\/$/;"	m	struct:tm	access:public
tm_mday	/usr/include/time.h	/^	int	tm_mday;	\/* day of the month [1-31] *\/$/;"	m	struct:tm	access:public
tm_min	/usr/include/time.h	/^	int	tm_min;		\/* minutes after the hour [0-59] *\/$/;"	m	struct:tm	access:public
tm_mon	/usr/include/time.h	/^	int	tm_mon;		\/* months since January [0-11] *\/$/;"	m	struct:tm	access:public
tm_sec	/usr/include/time.h	/^	int	tm_sec;		\/* seconds after the minute [0-60] *\/$/;"	m	struct:tm	access:public
tm_wday	/usr/include/time.h	/^	int	tm_wday;	\/* days since Sunday [0-6] *\/$/;"	m	struct:tm	access:public
tm_yday	/usr/include/time.h	/^	int	tm_yday;	\/* days since January 1 [0-365] *\/$/;"	m	struct:tm	access:public
tm_year	/usr/include/time.h	/^	int	tm_year;	\/* years since 1900 *\/$/;"	m	struct:tm	access:public
tm_zone	/usr/include/time.h	/^	char	*tm_zone;	\/* timezone abbreviation *\/$/;"	m	struct:tm	access:public
tmpfile	/usr/include/fcgi_stdio.h	/^#define tmpfile /;"	d
tmpfile	/usr/include/fcgi_stdio.h	/^#undef  tmpfile$/;"	d
tmpfile	/usr/include/stdio.h	/^FILE	*tmpfile(void);$/;"	p	signature:(void)
tmpnam	/usr/include/stdio.h	/^char	*tmpnam(char *);$/;"	p	signature:(char *)
to	/usr/include/tic.h	/^	const char	*to;$/;"	m	struct:alias	access:public
toUtfProc	/usr/include/tcl.h	/^    Tcl_EncodingConvertProc *toUtfProc;$/;"	m	struct:Tcl_EncodingType	access:public
to_status_line	/usr/include/term.h	/^#define to_status_line /;"	d
toascii	/usr/include/ctype.h	/^int     toascii(int);$/;"	p	signature:(int)
toascii	/usr/include/ctype.h	/^toascii(int _c)$/;"	f	signature:(int _c)
tok_end	/usr/include/histedit.h	/^void		 tok_end(Tokenizer *);$/;"	p	signature:(Tokenizer *)
tok_init	/usr/include/histedit.h	/^Tokenizer	*tok_init(const char *);$/;"	p	signature:(const char *)
tok_line	/usr/include/histedit.h	/^int		 tok_line(Tokenizer *, const LineInfo *,$/;"	p	signature:(Tokenizer *, const LineInfo *, int *, const char ***, int *, int *)
tok_reset	/usr/include/histedit.h	/^void		 tok_reset(Tokenizer *);$/;"	p	signature:(Tokenizer *)
tok_str	/usr/include/histedit.h	/^int		 tok_str(Tokenizer *, const char *,$/;"	p	signature:(Tokenizer *, const char *, int *, const char ***)
token	/usr/include/mecab.h	/^  struct mecab_token_t         *token;$/;"	m	struct:mecab_learner_node_t	typeref:struct:mecab_learner_node_t::mecab_token_t	access:public
token	/usr/include/mecab.h	/^  struct mecab_token_t  *token;$/;"	m	struct:mecab_node_t	typeref:struct:mecab_node_t::mecab_token_t	access:public
token	/usr/include/notify.h	/^typedef void (^notify_handler_t)(int token);$/;"	v
token	/usr/include/tic.h	/^struct token$/;"	s
token::tk_name	/usr/include/tic.h	/^	char	*tk_name;		\/* name of capability *\/$/;"	m	struct:token	access:public
token::tk_valnumber	/usr/include/tic.h	/^	int	tk_valnumber;	\/* value of capability (if a number) *\/$/;"	m	struct:token	access:public
token::tk_valstring	/usr/include/tic.h	/^	char	*tk_valstring;	\/* value of capability (if a string) *\/$/;"	m	struct:token	access:public
tokenPtr	/usr/include/tcl.h	/^    Tcl_Token *tokenPtr;	\/* Pointer to first token representing the$/;"	m	struct:Tcl_Parse	access:public
tokensAvailable	/usr/include/tcl.h	/^    int tokensAvailable;	\/* Total number of tokens available at$/;"	m	struct:Tcl_Parse	access:public
tolower	/usr/include/ctype.h	/^int     tolower(int);$/;"	p	signature:(int)
tolower	/usr/include/ctype.h	/^tolower(int _c)$/;"	f	signature:(int _c)
tone	/usr/include/term.h	/^#define tone /;"	d
toprow	/usr/include/form.h	/^  int			toprow;		\/* in scrollable field window	*\/$/;"	m	struct:formnode	access:public
toprow	/usr/include/menu.h	/^  short          toprow;                \/* Top row of menu                 *\/$/;"	m	struct:tagMENU	access:public
total_changes	/usr/include/sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	access:public
total_in	/usr/include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s	access:public
total_in_hi32	/usr/include/bzlib.h	/^      unsigned int total_in_hi32;$/;"	m	struct:__anon3	access:public
total_in_lo32	/usr/include/bzlib.h	/^      unsigned int total_in_lo32;$/;"	m	struct:__anon3	access:public
total_out	/usr/include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s	access:public
total_out_hi32	/usr/include/bzlib.h	/^      unsigned int total_out_hi32;$/;"	m	struct:__anon3	access:public
total_out_lo32	/usr/include/bzlib.h	/^      unsigned int total_out_lo32;$/;"	m	struct:__anon3	access:public
touchline	/usr/include/curses.h	/^#define touchline(/;"	d
touchline	/usr/include/ncurses.h	/^#define touchline(/;"	d
touchwin	/usr/include/curses.h	/^#define touchwin(/;"	d
touchwin	/usr/include/ncurses.h	/^#define touchwin(/;"	d
toupper	/usr/include/ctype.h	/^int     toupper(int);$/;"	p	signature:(int)
toupper	/usr/include/ctype.h	/^toupper(int _c)$/;"	f	signature:(int _c)
towctrans	/usr/include/wctype.h	/^wint_t	towctrans(wint_t, wctrans_t);$/;"	p	signature:(wint_t, wctrans_t)
towlower	/usr/include/_wctype.h	/^towlower(wint_t _wc)$/;"	f	signature:(wint_t _wc)
towlower	/usr/include/_wctype.h	/^wint_t	towlower(wint_t);$/;"	p	signature:(wint_t)
towupper	/usr/include/_wctype.h	/^towupper(wint_t _wc)$/;"	f	signature:(wint_t _wc)
towupper	/usr/include/_wctype.h	/^wint_t	towupper(wint_t);$/;"	p	signature:(wint_t)
trace	/usr/include/sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	access:public
transfer_bindings	/usr/include/sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	access:public
transient_for	/usr/include/Xplugin.h	/^    xp_window_id transient_for;$/;"	m	struct:xp_window_changes_struct	access:public
translateProc	/usr/include/tk.h	/^    Tk_ItemTranslateProc *translateProc;$/;"	m	struct:Tk_ItemType	access:public
transparent_underline	/usr/include/term.h	/^#define transparent_underline /;"	d
true	/usr/include/stdbool.h	/^#define	true	/;"	d
truncate	/usr/include/unistd.h	/^int	 truncate(const char *, off_t);$/;"	p	signature:(const char *, off_t)
truncateProc	/usr/include/tcl.h	/^    Tcl_DriverTruncateProc *truncateProc;$/;"	m	struct:Tcl_ChannelType	access:public
tsearch	/usr/include/search.h	/^void	*tsearch(const void *, void **, int (*)(const void *, const void *));$/;"	p	signature:(const void *, void **, int (*)(const void *, const void *))
tsoffset	/usr/include/tk.h	/^    Tk_TSOffset tsoffset;	\/* Stipple offset for outline. *\/$/;"	m	struct:Tk_Outline	access:public
tterm	/usr/include/term_entry.h	/^	TERMTYPE	tterm;$/;"	m	struct:entry	access:public
ttl	/usr/include/dns_util.h	/^	uint32_t ttl;$/;"	m	struct:__anon41	access:public
ttl	/usr/include/nameser.h	/^	u_int32_t	ttl;$/;"	m	struct:__ns_rr	access:public
ttyaction	/usr/include/util.h	/^int	ttyaction(char *tty, char *act, char *user);$/;"	p	signature:(char *tty, char *act, char *user)
ttyent	/usr/include/ttyent.h	/^struct ttyent {$/;"	s
ttyent::ty_comment	/usr/include/ttyent.h	/^	char	*ty_comment;	\/* comment field *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_getty	/usr/include/ttyent.h	/^	char	*ty_getty;	\/* command to execute, usually getty *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_name	/usr/include/ttyent.h	/^	char	*ty_name;	\/* terminal device name *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_onerror	/usr/include/ttyent.h	/^	char    *ty_onerror;    \/* command to execute after getty failure *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_onoption	/usr/include/ttyent.h	/^	char    *ty_onoption;   \/* command to execute after console login *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_status	/usr/include/ttyent.h	/^	int	ty_status;	\/* status flags *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_type	/usr/include/ttyent.h	/^	char	*ty_type;	\/* terminal type for termcap *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_window	/usr/include/ttyent.h	/^	char 	*ty_window;	\/* command to start up window manager *\/$/;"	m	struct:ttyent	access:public
ttylock	/usr/include/util.h	/^int	ttylock(const char *, int, pid_t *);$/;"	p	signature:(const char *, int, pid_t *)
ttymsg	/usr/include/util.h	/^char   *ttymsg(struct iovec *, int, const char *, int);$/;"	p	signature:(struct iovec *, int, const char *, int)
ttyname	/usr/include/unistd.h	/^char	*ttyname(int);$/;"	p	signature:(int)
ttyname_r	/usr/include/unistd.h	/^char	*ttyname_r(int, char *, size_t);$/;"	p	signature:(int, char *, size_t)
ttyname_r	/usr/include/unistd.h	/^int	 ttyname_r(int, char *, size_t) __DARWIN_ALIAS(ttyname_r);$/;"	v
ttyslot	/usr/include/unistd.h	/^int	 ttyslot(void);$/;"	p	signature:(void)
ttyunlock	/usr/include/util.h	/^int	ttyunlock(const char *);$/;"	p	signature:(const char *)
twalk	/usr/include/search.h	/^void	 twalk(const void *, void (*)(const void *, VISIT, int));$/;"	p	signature:(const void *, void (*)(const void *, VISIT, int))
twoPtrValue	/usr/include/tcl.h	/^	} twoPtrValue;$/;"	m	union:Tcl_Obj::__anon114	typeref:struct:Tcl_Obj::__anon114::__anon115	access:public
txtdname	/usr/include/dns_util.h	/^	char *txtdname;$/;"	m	struct:__anon34	access:public
ty_comment	/usr/include/ttyent.h	/^	char	*ty_comment;	\/* comment field *\/$/;"	m	struct:ttyent	access:public
ty_getty	/usr/include/ttyent.h	/^	char	*ty_getty;	\/* command to execute, usually getty *\/$/;"	m	struct:ttyent	access:public
ty_name	/usr/include/ttyent.h	/^	char	*ty_name;	\/* terminal device name *\/$/;"	m	struct:ttyent	access:public
ty_onerror	/usr/include/ttyent.h	/^	char    *ty_onerror;    \/* command to execute after getty failure *\/$/;"	m	struct:ttyent	access:public
ty_onoption	/usr/include/ttyent.h	/^	char    *ty_onoption;   \/* command to execute after console login *\/$/;"	m	struct:ttyent	access:public
ty_status	/usr/include/ttyent.h	/^	int	ty_status;	\/* status flags *\/$/;"	m	struct:ttyent	access:public
ty_type	/usr/include/ttyent.h	/^	char	*ty_type;	\/* terminal type for termcap *\/$/;"	m	struct:ttyent	access:public
ty_window	/usr/include/ttyent.h	/^	char 	*ty_window;	\/* command to start up window manager *\/$/;"	m	struct:ttyent	access:public
type	/usr/include/curses.h	/^    int type;$/;"	m	struct:__anon6	access:public
type	/usr/include/db.h	/^	DBTYPE type;			\/* Underlying db type. *\/$/;"	m	struct:__db	access:public
type	/usr/include/expat.h	/^  enum XML_Content_Type         type;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Type	access:public
type	/usr/include/fastcgi.h	/^    unsigned char type;    $/;"	m	struct:__anon58	access:public
type	/usr/include/fastcgi.h	/^    unsigned char type;$/;"	m	struct:__anon53	access:public
type	/usr/include/form.h	/^  struct typenode *	type;		\/* field type			*\/$/;"	m	struct:fieldnode	typeref:struct:fieldnode::typenode	access:public
type	/usr/include/mecab.h	/^  int                             type;$/;"	m	struct:mecab_dictionary_info_t	access:public
type	/usr/include/nameser.h	/^	u_int16_t	type;$/;"	m	struct:__ns_rr	access:public
type	/usr/include/ncurses.h	/^    int type;$/;"	m	struct:__anon82	access:public
type	/usr/include/tcl.h	/^    Tcl_ValueType type;		\/* Indicates intValue or doubleValue is valid,$/;"	m	struct:Tcl_Value	access:public
type	/usr/include/tcl.h	/^    int type;			\/* Corresponds to bcdpfls as in 'find -t' *\/$/;"	m	struct:Tcl_GlobTypeData	access:public
type	/usr/include/tcl.h	/^    int type;			\/* Type of token, such as TCL_TOKEN_WORD; see$/;"	m	struct:Tcl_Token	access:public
type	/usr/include/term.h	/^    TERMTYPE	type;		\/* terminal type description *\/$/;"	m	struct:term	access:public
type	/usr/include/tk.h	/^    Tk_OptionType type;		\/* Type of option, such as TK_OPTION_COLOR;$/;"	m	struct:Tk_OptionSpec	access:public
type	/usr/include/tk.h	/^    Tk_OptionType type;         \/* Accepted option type. TK_OPTION_END means$/;"	m	struct:Tk_ElementOptionSpec	access:public
type	/usr/include/tk.h	/^    int type;			\/* Indicates option type; see below. *\/$/;"	m	struct:__anon125	access:public
type	/usr/include/tk.h	/^    int type;			\/* Type of option, such as TK_CONFIG_COLOR;$/;"	m	struct:Tk_ConfigSpec	access:public
type	/usr/include/tk.h	/^    int type;$/;"	m	struct:__anon129	access:public
type	/usr/include/tk.h	/^    int type;$/;"	m	struct:__anon130	access:public
typeMask	/usr/include/tk.h	/^    int typeMask;		\/* An arbitrary bit mask defined by the class$/;"	m	struct:Tk_OptionSpec	access:public
typeName	/usr/include/tcl.h	/^    CONST char *typeName;	\/* The name of the filesystem. *\/$/;"	m	struct:Tcl_Filesystem	access:public
typeName	/usr/include/tcl.h	/^    char *typeName;		\/* The name of the channel type in Tcl$/;"	m	struct:Tcl_ChannelType	access:public
typePtr	/usr/include/tcl.h	/^    Tcl_HashKeyType *typePtr;	\/* Type of the keys used in the$/;"	m	struct:Tcl_HashTable	access:public
typePtr	/usr/include/tcl.h	/^    Tcl_ObjType *typePtr;	\/* Denotes the object's type. Always$/;"	m	struct:Tcl_Obj	access:public
typePtr	/usr/include/tk.h	/^    struct Tk_ItemType *typePtr;\/* Table of procedures that implement this$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_ItemType	access:public
typenode	/usr/include/form.h	/^typedef struct typenode {$/;"	s
typenode::ccheck	/usr/include/form.h	/^  bool	(*ccheck)(int,const void *);		\/* character validation *\/$/;"	m	struct:typenode	access:public
typenode::copyarg	/usr/include/form.h	/^  void* (*copyarg)(const void *);		\/* copy fieldtype arg	*\/$/;"	m	struct:typenode	access:public
typenode::fcheck	/usr/include/form.h	/^  bool	(*fcheck)(FIELD *,const void *);	\/* field validation	*\/$/;"	m	struct:typenode	access:public
typenode::freearg	/usr/include/form.h	/^  void	(*freearg)(void *);			\/* free fieldtype arg	*\/$/;"	m	struct:typenode	access:public
typenode::left	/usr/include/form.h	/^  struct typenode *	left;			\/* ptr to operand for | *\/$/;"	m	struct:typenode	typeref:struct:typenode::typenode	access:public
typenode::makearg	/usr/include/form.h	/^  void* (*makearg)(va_list *);			\/* make fieldtype arg	*\/$/;"	m	struct:typenode	access:public
typenode::next	/usr/include/form.h	/^  bool	(*next)(FIELD *,const void *);		\/* enumerate next value *\/$/;"	m	struct:typenode	access:public
typenode::prev	/usr/include/form.h	/^  bool	(*prev)(FIELD *,const void *);		\/* enumerate prev value *\/$/;"	m	struct:typenode	access:public
typenode::ref	/usr/include/form.h	/^  long			ref;			\/* reference count	*\/$/;"	m	struct:typenode	access:public
typenode::right	/usr/include/form.h	/^  struct typenode *	right;			\/* ptr to operand for | *\/$/;"	m	struct:typenode	typeref:struct:typenode::typenode	access:public
typenode::status	/usr/include/form.h	/^  unsigned short	status;			\/* flags		*\/$/;"	m	struct:typenode	access:public
tzh_charcnt	/usr/include/tzfile.h	/^	char	tzh_charcnt[4];		\/* coded number of abbr. chars *\/$/;"	m	struct:tzhead	access:public
tzh_leapcnt	/usr/include/tzfile.h	/^	char	tzh_leapcnt[4];		\/* coded number of leap seconds *\/$/;"	m	struct:tzhead	access:public
tzh_magic	/usr/include/tzfile.h	/^ 	char	tzh_magic[4];		\/* TZ_MAGIC *\/$/;"	m	struct:tzhead	access:public
tzh_reserved	/usr/include/tzfile.h	/^	char	tzh_reserved[16];	\/* reserved for future use *\/$/;"	m	struct:tzhead	access:public
tzh_timecnt	/usr/include/tzfile.h	/^	char	tzh_timecnt[4];		\/* coded number of transition times *\/$/;"	m	struct:tzhead	access:public
tzh_ttisgmtcnt	/usr/include/tzfile.h	/^	char	tzh_ttisgmtcnt[4];	\/* coded number of trans. time flags *\/$/;"	m	struct:tzhead	access:public
tzh_ttisstdcnt	/usr/include/tzfile.h	/^	char	tzh_ttisstdcnt[4];	\/* coded number of trans. time flags *\/$/;"	m	struct:tzhead	access:public
tzh_typecnt	/usr/include/tzfile.h	/^	char	tzh_typecnt[4];		\/* coded number of local time types *\/$/;"	m	struct:tzhead	access:public
tzhead	/usr/include/tzfile.h	/^struct tzhead {$/;"	s
tzhead::tzh_charcnt	/usr/include/tzfile.h	/^	char	tzh_charcnt[4];		\/* coded number of abbr. chars *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_leapcnt	/usr/include/tzfile.h	/^	char	tzh_leapcnt[4];		\/* coded number of leap seconds *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_magic	/usr/include/tzfile.h	/^ 	char	tzh_magic[4];		\/* TZ_MAGIC *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_reserved	/usr/include/tzfile.h	/^	char	tzh_reserved[16];	\/* reserved for future use *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_timecnt	/usr/include/tzfile.h	/^	char	tzh_timecnt[4];		\/* coded number of transition times *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_ttisgmtcnt	/usr/include/tzfile.h	/^	char	tzh_ttisgmtcnt[4];	\/* coded number of trans. time flags *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_ttisstdcnt	/usr/include/tzfile.h	/^	char	tzh_ttisstdcnt[4];	\/* coded number of trans. time flags *\/$/;"	m	struct:tzhead	access:public
tzhead::tzh_typecnt	/usr/include/tzfile.h	/^	char	tzh_typecnt[4];		\/* coded number of local time types *\/$/;"	m	struct:tzhead	access:public
tzset	/usr/include/time.h	/^void tzset(void);$/;"	p	signature:(void)
tzsetwall	/usr/include/time.h	/^void tzsetwall(void);$/;"	p	signature:(void)
uInt	/usr/include/zconf.h	/^#  define uInt /;"	d
uInt	/usr/include/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uIntf	/usr/include/zconf.h	/^#  define uIntf /;"	d
uIntf	/usr/include/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uLong	/usr/include/zconf.h	/^#  define uLong /;"	d
uLong	/usr/include/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLongf	/usr/include/zconf.h	/^#  define uLongf /;"	d
uLongf	/usr/include/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
ualarm	/usr/include/unistd.h	/^	 ualarm(useconds_t, useconds_t);$/;"	p	signature:(useconds_t, useconds_t)
uc_hook	/usr/include/iconv.h	/^  iconv_unicode_char_hook uc_hook;$/;"	m	struct:iconv_hooks	access:public
uc_to_mb_fallback	/usr/include/iconv.h	/^  iconv_unicode_uc_to_mb_fallback uc_to_mb_fallback;$/;"	m	struct:iconv_fallbacks	access:public
uflow	/usr/include/fcgio.h	/^    virtual int uflow();$/;"	p	class:fcgi_streambuf	access:protected	signature:()
uid_t	/usr/include/pwd.h	/^typedef __darwin_uid_t		uid_t;$/;"	t
uid_t	/usr/include/unistd.h	/^typedef __darwin_uid_t		uid_t;	\/* user id 	*\/$/;"	t
uid_t	/usr/include/utmpx.h	/^typedef __darwin_uid_t     uid_t;$/;"	t
uint16_t	/usr/include/dns_sd.h	/^typedef UINT16      uint16_t;$/;"	t
uint16_t	/usr/include/stdint.h	/^typedef unsigned short       uint16_t;$/;"	t
uint32_t	/usr/include/dns_sd.h	/^typedef UINT32      uint32_t;$/;"	t
uint32_t	/usr/include/stdint.h	/^typedef unsigned int         uint32_t;$/;"	t
uint64_t	/usr/include/stdint.h	/^typedef unsigned long long   uint64_t;$/;"	t
uint8_t	/usr/include/dns_sd.h	/^typedef UINT8       uint8_t;$/;"	t
uint8_t	/usr/include/stdint.h	/^typedef unsigned char         uint8_t;$/;"	t
uint_fast16_t	/usr/include/stdint.h	/^typedef uint16_t        uint_fast16_t;$/;"	t
uint_fast32_t	/usr/include/stdint.h	/^typedef uint32_t        uint_fast32_t;$/;"	t
uint_fast64_t	/usr/include/stdint.h	/^typedef uint64_t        uint_fast64_t;$/;"	t
uint_fast8_t	/usr/include/stdint.h	/^typedef uint8_t          uint_fast8_t;$/;"	t
uint_least16_t	/usr/include/stdint.h	/^typedef uint16_t       uint_least16_t;$/;"	t
uint_least32_t	/usr/include/stdint.h	/^typedef uint32_t       uint_least32_t;$/;"	t
uint_least64_t	/usr/include/stdint.h	/^typedef uint64_t       uint_least64_t;$/;"	t
uint_least8_t	/usr/include/stdint.h	/^typedef uint8_t         uint_least8_t;$/;"	t
uintmax_t	/usr/include/stdint.h	/^typedef __UINTMAX_TYPE__             uintmax_t;$/;"	t
uintmax_t	/usr/include/stdint.h	/^typedef unsigned long long      uintmax_t;$/;"	t
uintptr_t	/usr/include/stdint.h	/^typedef unsigned long   uintptr_t;$/;"	t
ulimit	/usr/include/ulimit.h	/^long	ulimit(int, ...);$/;"	p	signature:(int, ...)
ulong64	/usr/include/tclTomMath.h	/^      typedef unsigned __int64   ulong64;$/;"	t
ulong64	/usr/include/tclTomMath.h	/^      typedef unsigned long long ulong64;$/;"	t
ulong64	/usr/include/tclTomMath.h	/^   typedef unsigned long long ulong64;$/;"	t
uncompress	/usr/include/zconf.h	/^#  define uncompress /;"	d
uncompress	/usr/include/zlib.h	/^ZEXTERN int ZEXPORT uncompress OF((Bytef *dest,   uLongf *destLen,$/;"	p	signature:(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
unctrl	/usr/include/unctrl.h	/^#undef unctrl$/;"	d
undelete	/usr/include/unistd.h	/^int	 undelete(const char *);$/;"	p	signature:(const char *)
underflow	/usr/include/fcgio.h	/^    virtual int underflow();$/;"	p	class:fcgi_streambuf	access:protected	signature:()
underline_char	/usr/include/term.h	/^#define underline_char /;"	d
ungetc	/usr/include/fcgi_stdio.h	/^#define ungetc /;"	d
ungetc	/usr/include/fcgi_stdio.h	/^#undef  ungetc$/;"	d
ungetc	/usr/include/stdio.h	/^int	 ungetc(int, FILE *);$/;"	p	signature:(int, FILE *)
ungetwc	/usr/include/wchar.h	/^wint_t	ungetwc(wint_t, FILE *);$/;"	p	signature:(wint_t, FILE *)
unit	/usr/include/tcpd.h	/^    struct t_unitdata *unit;		\/* TLI transport address or 0 *\/$/;"	m	struct:host_info	typeref:struct:host_info::t_unitdata	access:public
unlink	/usr/include/unistd.h	/^int	 unlink(const char *);$/;"	p	signature:(const char *)
unlockpt	/usr/include/stdlib.h	/^int	 unlockpt(int);$/;"	p	signature:(int)
unsetenv	/usr/include/stdlib.h	/^int	 unsetenv(const char *) __DARWIN_ALIAS(unsetenv);$/;"	v
unsetenv	/usr/include/stdlib.h	/^void	 unsetenv(const char *);$/;"	p	signature:(const char *)
untouchwin	/usr/include/curses.h	/^#define untouchwin(/;"	d
untouchwin	/usr/include/ncurses.h	/^#define untouchwin(/;"	d
unused	/usr/include/resolv.h	/^	char	unused[3];$/;"	m	struct:__res_state	access:public
unvis	/usr/include/vis.h	/^int	unvis(char *, int, int *, int);$/;"	p	signature:(char *, int, int *, int)
unw_addr_space_t	/usr/include/libunwind.h	/^typedef struct unw_addr_space*   unw_addr_space_t;$/;"	t	typeref:struct:unw_addr_space
unw_context_t	/usr/include/libunwind.h	/^struct unw_context_t { uint64_t data[128]; };$/;"	s
unw_context_t	/usr/include/libunwind.h	/^typedef struct unw_context_t     unw_context_t;$/;"	t	typeref:struct:unw_context_t
unw_context_t::data	/usr/include/libunwind.h	/^struct unw_context_t { uint64_t data[128]; };$/;"	m	struct:unw_context_t	access:public
unw_create_addr_space_for_task	/usr/include/libunwind.h	/^extern unw_addr_space_t    unw_create_addr_space_for_task(task_t);$/;"	p	signature:(task_t)
unw_cursor_t	/usr/include/libunwind.h	/^struct unw_cursor_t { uint64_t data[140]; };$/;"	s
unw_cursor_t	/usr/include/libunwind.h	/^typedef struct unw_cursor_t      unw_cursor_t;$/;"	t	typeref:struct:unw_cursor_t
unw_cursor_t::data	/usr/include/libunwind.h	/^struct unw_cursor_t { uint64_t data[140]; };$/;"	m	struct:unw_cursor_t	access:public
unw_destroy_addr_space	/usr/include/libunwind.h	/^extern void                unw_destroy_addr_space(unw_addr_space_t);$/;"	p	signature:(unw_addr_space_t)
unw_fpreg_t	/usr/include/libunwind.h	/^typedef double                   unw_fpreg_t;$/;"	t
unw_init_remote_thread	/usr/include/libunwind.h	/^extern int                 unw_init_remote_thread(unw_cursor_t*, unw_addr_space_t, thread_t*);$/;"	p	signature:(unw_cursor_t*, unw_addr_space_t, thread_t*)
unw_proc_info_t	/usr/include/libunwind.h	/^struct unw_proc_info_t$/;"	s
unw_proc_info_t	/usr/include/libunwind.h	/^typedef struct unw_proc_info_t unw_proc_info_t;$/;"	t	typeref:struct:unw_proc_info_t
unw_proc_info_t::end_ip	/usr/include/libunwind.h	/^    unw_word_t    end_ip;           \/* address after end of function *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::extra	/usr/include/libunwind.h	/^    unw_word_t    extra;            \/* mach_header of mach-o image containing function *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::flags	/usr/include/libunwind.h	/^    unw_word_t    flags;            \/* not used *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::format	/usr/include/libunwind.h	/^    uint32_t      format;           \/* compact unwind encoding, or zero if none *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::gp	/usr/include/libunwind.h	/^    unw_word_t    gp;               \/* not used *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::handler	/usr/include/libunwind.h	/^    unw_word_t    handler;          \/* personality routine, or zero if not used *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::lsda	/usr/include/libunwind.h	/^    unw_word_t    lsda;             \/* address of language specific data area, or zero if not used *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::start_ip	/usr/include/libunwind.h	/^    unw_word_t    start_ip;         \/* start address of function *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::unwind_info	/usr/include/libunwind.h	/^    unw_word_t    unwind_info;      \/* address of dwarf unwind info, or zero if none *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_proc_info_t::unwind_info_size	/usr/include/libunwind.h	/^    uint32_t      unwind_info_size; \/* size of dwarf unwind info, or zero if none *\/$/;"	m	struct:unw_proc_info_t	access:public
unw_regnum_t	/usr/include/libunwind.h	/^typedef int                      unw_regnum_t;$/;"	t
unw_word_t	/usr/include/libunwind.h	/^typedef uint64_t                 unw_word_t;$/;"	t
unwhiteout	/usr/include/unistd.h	/^int	 unwhiteout(const char *);$/;"	p	signature:(const char *)
unwind_info	/usr/include/libunwind.h	/^    unw_word_t    unwind_info;      \/* address of dwarf unwind info, or zero if none *\/$/;"	m	struct:unw_proc_info_t	access:public
unwind_info_size	/usr/include/libunwind.h	/^    uint32_t      unwind_info_size; \/* size of dwarf unwind info, or zero if none *\/$/;"	m	struct:unw_proc_info_t	access:public
up	/usr/include/menu.h	/^  struct tagITEM *up;$/;"	m	struct:tagITEM	typeref:struct:tagITEM::tagITEM	access:public
up_half_line	/usr/include/term.h	/^#define up_half_line /;"	d
updateStringProc	/usr/include/tcl.h	/^    Tcl_UpdateStringProc *updateStringProc;$/;"	m	struct:Tcl_ObjType	access:public
update_hook	/usr/include/sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,sqlite_int64),void*);$/;"	m	struct:sqlite3_api_routines	access:public
usable	/usr/include/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	access:public
usec	/usr/include/tcl.h	/^    long usec;			\/* Microseconds. *\/$/;"	m	struct:Tcl_Time	access:public
useconds_t	/usr/include/unistd.h	/^typedef __darwin_useconds_t	useconds_t;$/;"	t
used	/usr/include/tclTomMath.h	/^    int used, alloc, sign;$/;"	m	struct:mp_int	access:public
uselocale	/usr/include/xlocale.h	/^locale_t	uselocale(locale_t);$/;"	p	signature:(locale_t)
user	/usr/include/panel.h	/^  NCURSES_CONST void *user;$/;"	m	struct:panel	access:public
user	/usr/include/tcpd.h	/^    char    user[STRING_LENGTH];	\/* access via eval_user(request) *\/$/;"	m	struct:request_info	access:public
user0	/usr/include/term.h	/^#define user0 /;"	d
user1	/usr/include/term.h	/^#define user1 /;"	d
user2	/usr/include/term.h	/^#define user2 /;"	d
user3	/usr/include/term.h	/^#define user3 /;"	d
user4	/usr/include/term.h	/^#define user4 /;"	d
user5	/usr/include/term.h	/^#define user5 /;"	d
user6	/usr/include/term.h	/^#define user6 /;"	d
user7	/usr/include/term.h	/^#define user7 /;"	d
user8	/usr/include/term.h	/^#define user8 /;"	d
user9	/usr/include/term.h	/^#define user9 /;"	d
user_data	/usr/include/cache.h	/^    void *user_data;$/;"	m	struct:cache_attributes_s	access:public
user_data	/usr/include/sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	access:public
user_data	/usr/include/tk.h	/^    Tcl_Obj *user_data;		\/* Application-specific data reference; Tk$/;"	m	struct:__anon129	access:public
user_from_uid	/usr/include/pwd.h	/^char 		*user_from_uid(uid_t, int);$/;"	p	signature:(uid_t, int)
userptr	/usr/include/menu.h	/^  void           *userptr;    \/* Pointer to user defined per item data     *\/ $/;"	m	struct:tagITEM	access:public
userptr	/usr/include/menu.h	/^  void          *userptr;               \/* Pointer to menus user data      *\/$/;"	m	struct:tagMENU	access:public
usersub	/usr/include/menu.h	/^  WINDOW        *usersub;               \/* User's subwindow                *\/$/;"	m	struct:tagMENU	access:public
userwin	/usr/include/menu.h	/^  WINDOW        *userwin;               \/* User's window                   *\/$/;"	m	struct:tagMENU	access:public
uses	/usr/include/term_entry.h	/^	uses[MAX_USES];$/;"	m	struct:entry	typeref:struct:entry::__anon121	access:public
usleep	/usr/include/unistd.h	/^int	 usleep(useconds_t) __DARWIN_ALIAS_C(usleep);$/;"	v
usrptr	/usr/include/form.h	/^  void *		usrptr;		\/* user pointer			*\/$/;"	m	struct:fieldnode	access:public
usrptr	/usr/include/form.h	/^  void *		usrptr;		\/* user pointer			*\/$/;"	m	struct:formnode	access:public
ut_host	/usr/include/utmp.h	/^	char	ut_host[UT_HOSTSIZE];$/;"	m	struct:utmp	access:public
ut_host	/usr/include/utmpx.h	/^	char ut_host[_UTX_HOSTSIZE];	\/* host name *\/$/;"	m	struct:utmpx	access:public
ut_id	/usr/include/utmpx.h	/^	char ut_id[_UTX_IDSIZE];	\/* id *\/$/;"	m	struct:utmpx	access:public
ut_line	/usr/include/utmp.h	/^	char	ut_line[UT_LINESIZE];$/;"	m	struct:utmp	access:public
ut_line	/usr/include/utmpx.h	/^	char ut_line[_UTX_LINESIZE];	\/* tty name *\/$/;"	m	struct:utmpx	access:public
ut_name	/usr/include/utmp.h	/^	char	ut_name[UT_NAMESIZE];$/;"	m	struct:utmp	access:public
ut_pad	/usr/include/utmpx.h	/^	__uint32_t ut_pad[16];		\/* reserved for future use *\/$/;"	m	struct:utmpx	access:public
ut_pid	/usr/include/utmpx.h	/^	pid_t ut_pid;			\/* process id creating the entry *\/$/;"	m	struct:utmpx	access:public
ut_time	/usr/include/utmp.h	/^	long	ut_time;$/;"	m	struct:utmp	access:public
ut_tv	/usr/include/utmpx.h	/^	struct timeval ut_tv;		\/* time entry was created *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::timeval	access:public
ut_type	/usr/include/utmpx.h	/^	short ut_type;			\/* type of this entry *\/$/;"	m	struct:utmpx	access:public
ut_user	/usr/include/utmpx.h	/^	char ut_user[_UTX_USERSIZE];	\/* login name *\/$/;"	m	struct:utmpx	access:public
ut_user	/usr/include/utmpx.h	/^#define ut_user /;"	d
ut_xtime	/usr/include/utmpx.h	/^#define ut_xtime /;"	d
utimbuf	/usr/include/utime.h	/^struct utimbuf {$/;"	s
utimbuf::actime	/usr/include/utime.h	/^	time_t actime;		\/* Access time *\/$/;"	m	struct:utimbuf	access:public
utimbuf::modtime	/usr/include/utime.h	/^	time_t modtime;		\/* Modification time *\/$/;"	m	struct:utimbuf	access:public
utime	/usr/include/utime.h	/^int utime(const char *, const struct utimbuf *);$/;"	p	signature:(const char *, const struct utimbuf *)
utimeProc	/usr/include/tcl.h	/^    Tcl_FSUtimeProc *utimeProc;	\/* Function to process a 'Tcl_FSUtime()' call.$/;"	m	struct:Tcl_Filesystem	access:public
utmp	/usr/include/utmp.h	/^struct utmp {$/;"	s
utmp::ut_host	/usr/include/utmp.h	/^	char	ut_host[UT_HOSTSIZE];$/;"	m	struct:utmp	access:public
utmp::ut_line	/usr/include/utmp.h	/^	char	ut_line[UT_LINESIZE];$/;"	m	struct:utmp	access:public
utmp::ut_name	/usr/include/utmp.h	/^	char	ut_name[UT_NAMESIZE];$/;"	m	struct:utmp	access:public
utmp::ut_time	/usr/include/utmp.h	/^	long	ut_time;$/;"	m	struct:utmp	access:public
utmpx	/usr/include/utmpx.h	/^struct utmpx {$/;"	s
utmpx::ut_host	/usr/include/utmpx.h	/^	char ut_host[_UTX_HOSTSIZE];	\/* host name *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_id	/usr/include/utmpx.h	/^	char ut_id[_UTX_IDSIZE];	\/* id *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_line	/usr/include/utmpx.h	/^	char ut_line[_UTX_LINESIZE];	\/* tty name *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_pad	/usr/include/utmpx.h	/^	__uint32_t ut_pad[16];		\/* reserved for future use *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_pid	/usr/include/utmpx.h	/^	pid_t ut_pid;			\/* process id creating the entry *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_tv	/usr/include/utmpx.h	/^	struct timeval ut_tv;		\/* time entry was created *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::timeval	access:public
utmpx::ut_type	/usr/include/utmpx.h	/^	short ut_type;			\/* type of this entry *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_user	/usr/include/utmpx.h	/^	char ut_user[_UTX_USERSIZE];	\/* login name *\/$/;"	m	struct:utmpx	access:public
utmpxname	/usr/include/utmpx.h	/^int	utmpxname(const char *);$/;"	p	signature:(const char *)
uuid_t	/usr/include/unistd.h	/^typedef __darwin_uuid_t		uuid_t;$/;"	t
va_list	/usr/include/stdio.h	/^typedef __darwin_va_list	va_list;$/;"	t
val	/usr/include/getopt.h	/^	int val;$/;"	m	struct:option	access:public
val	/usr/include/sqltypes.h	/^    SQLCHAR	val[SQL_MAX_NUMERIC_LEN];$/;"	m	struct:tagSQL_NUMERIC_STRUCT	access:public
valloc	/usr/include/stdlib.h	/^void	*valloc(size_t);$/;"	p	signature:(size_t)
valloc	/usr/include/unistd.h	/^void	*valloc(size_t);			$/;"	p	signature:(size_t)
value	/usr/include/expat.h	/^  long int              value;$/;"	m	struct:__anon52	access:public
value	/usr/include/menu.h	/^  bool           value;       \/* Selection value                           *\/$/;"	m	struct:tagITEM	access:public
value	/usr/include/tcl.h	/^	    unsigned long value;\/* Alloc, used, and signum packed into a$/;"	m	struct:Tcl_Obj::__anon114::__anon116	access:public
value	/usr/include/tcl.h	/^    CONST char *value;		\/* The value associated with the key. System$/;"	m	struct:Tcl_Config	access:public
valuePtr	/usr/include/tk.h	/^    Tcl_Obj *valuePtr;		\/* The old value of the option, in the form of$/;"	m	struct:Tk_SavedOption	access:public
value_blob	/usr/include/sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_bytes	/usr/include/sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_bytes16	/usr/include/sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_double	/usr/include/sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_int	/usr/include/sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_int64	/usr/include/sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_make_nonpurgeable_cb	/usr/include/cache.h	/^    cache_value_make_nonpurgeable_cb_t value_make_nonpurgeable_cb; $/;"	m	struct:cache_attributes_s	access:public
value_make_purgeable_cb	/usr/include/cache.h	/^    cache_value_make_purgeable_cb_t value_make_purgeable_cb;       $/;"	m	struct:cache_attributes_s	access:public
value_numeric_type	/usr/include/sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_release_cb	/usr/include/cache.h	/^    cache_release_cb_t value_release_cb;                           $/;"	m	struct:cache_attributes_s	access:public
value_retain_cb	/usr/include/cache.h	/^	cache_value_retain_cb_t value_retain_cb;$/;"	m	struct:cache_attributes_s	access:public
value_text	/usr/include/sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_text16	/usr/include/sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_text16be	/usr/include/sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_text16le	/usr/include/sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
value_type	/usr/include/sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	access:public
vasprintf	/usr/include/stdio.h	/^int	 vasprintf(char **, const char *, va_list) __DARWIN_LDBL_COMPAT(vasprintf);$/;"	v
verify	/usr/include/AssertMacros.h	/^		#define verify(/;"	d
verify_action	/usr/include/AssertMacros.h	/^		#define verify_action(/;"	d
verify_noerr	/usr/include/AssertMacros.h	/^		#define verify_noerr(/;"	d
verify_noerr_action	/usr/include/AssertMacros.h	/^		#define verify_noerr_action(/;"	d
verify_noerr_string	/usr/include/AssertMacros.h	/^		#define verify_noerr_string(/;"	d
verify_string	/usr/include/AssertMacros.h	/^		#define verify_string(/;"	d
version	/usr/include/cache.h	/^    uint32_t version;$/;"	m	struct:cache_attributes_s	access:public
version	/usr/include/dns_util.h	/^	uint8_t version;$/;"	m	struct:__anon39	access:public
version	/usr/include/fastcgi.h	/^    unsigned char version;$/;"	m	struct:__anon53	access:public
version	/usr/include/mecab.h	/^    static const char *version();$/;"	p	class:MeCab::Tagger	access:public	signature:()
version	/usr/include/mecab.h	/^  unsigned short                  version;$/;"	m	struct:mecab_dictionary_info_t	access:public
version	/usr/include/tcl.h	/^    Tcl_ChannelTypeVersion version;$/;"	m	struct:Tcl_ChannelType	access:public
version	/usr/include/tcl.h	/^    Tcl_FSVersion version;	\/* Version of the filesystem type. *\/$/;"	m	struct:Tcl_Filesystem	access:public
version	/usr/include/tcl.h	/^    int version;		\/* Version of the table. If this structure is$/;"	m	struct:Tcl_HashKeyType	access:public
version	/usr/include/tk.h	/^    int version;                \/* Version of the style support. *\/$/;"	m	struct:Tk_ElementSpec	access:public
vertical_precision	/usr/include/dns_util.h	/^	uint8_t vertical_precision;$/;"	m	struct:__anon39	access:public
vfork	/usr/include/unistd.h	/^pid_t	 vfork(void);$/;"	p	signature:(void)
vfprintf	/usr/include/fcgi_stdio.h	/^#define vfprintf /;"	d
vfprintf	/usr/include/fcgi_stdio.h	/^#undef  vfprintf$/;"	d
vfprintf	/usr/include/stdio.h	/^int	 vfprintf(FILE * __restrict, const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vfprintf);$/;"	v
vfs_find	/usr/include/sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	access:public
vfs_register	/usr/include/sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	access:public
vfs_unregister	/usr/include/sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	access:public
vfscanf	/usr/include/stdio.h	/^int	 vfscanf(FILE * __restrict, const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vfscanf);$/;"	v
vfwprintf	/usr/include/wchar.h	/^	    __darwin_va_list) __DARWIN_LDBL_COMPAT(vfwprintf);$/;"	v
vfwscanf	/usr/include/wchar.h	/^	    __darwin_va_list) __DARWIN_LDBL_COMPAT(vfwscanf);$/;"	v
vid_attr	/usr/include/curses.h	/^#define vid_attr(/;"	d
vid_attr	/usr/include/ncurses.h	/^#define vid_attr(/;"	d
virtual_terminal	/usr/include/term.h	/^#define virtual_terminal /;"	d
vis	/usr/include/vis.h	/^char	*vis(char *, int, int, int);$/;"	p	signature:(char *, int, int, int)
visual	/usr/include/tk.h	/^    Visual *visual;$/;"	m	struct:Tk_FakeWin	access:public
vline	/usr/include/curses.h	/^#define vline(/;"	d
vline	/usr/include/ncurses.h	/^#define vline(/;"	d
vline_set	/usr/include/curses.h	/^#define vline_set(/;"	d
vline_set	/usr/include/ncurses.h	/^#define vline_set(/;"	d
vmprintf	/usr/include/sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	access:public
voidp	/usr/include/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	/usr/include/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	/usr/include/zconf.h	/^#  define voidp /;"	d
voidpc	/usr/include/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	/usr/include/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpf	/usr/include/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	/usr/include/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	/usr/include/zconf.h	/^#  define voidpf /;"	d
vprintf	/usr/include/fcgi_stdio.h	/^#define vprintf /;"	d
vprintf	/usr/include/fcgi_stdio.h	/^#undef  vprintf$/;"	d
vprintf	/usr/include/stdio.h	/^int	 vprintf(const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vprintf);$/;"	v
vproc_err_t	/usr/include/vproc.h	/^typedef void * vproc_err_t;$/;"	t
vproc_standby_t	/usr/include/vproc.h	/^typedef struct vproc_standby_s *vproc_standby_t;$/;"	t	typeref:struct:vproc_standby_s
vproc_strerror	/usr/include/vproc.h	/^const char *vproc_strerror(vproc_err_t r);$/;"	p	signature:(vproc_err_t r)
vproc_t	/usr/include/vproc.h	/^typedef struct vproc_s * vproc_t;$/;"	t	typeref:struct:vproc_s
vproc_transaction_t	/usr/include/vproc.h	/^typedef struct vproc_transaction_s *vproc_transaction_t;$/;"	t	typeref:struct:vproc_transaction_s
vprocmgr_t	/usr/include/vproc.h	/^typedef void * vprocmgr_t;$/;"	t
vscanf	/usr/include/stdio.h	/^int	 vscanf(const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vscanf);$/;"	v
vsnprintf	/usr/include/stdio.h	/^int	 vsnprintf(char * __restrict, size_t, const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vsnprintf);$/;"	v
vsprintf	/usr/include/stdio.h	/^int	 vsprintf(char * __restrict, const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vsprintf);$/;"	v
vsscanf	/usr/include/curses.h	/^#define vsscanf(/;"	d
vsscanf	/usr/include/ncurses.h	/^#define vsscanf(/;"	d
vsscanf	/usr/include/stdio.h	/^int	 vsscanf(const char * __restrict, const char * __restrict, va_list) __DARWIN_LDBL_COMPAT(vsscanf);$/;"	v
vswprintf	/usr/include/wchar.h	/^	    __darwin_va_list) __DARWIN_LDBL_COMPAT(vswprintf);$/;"	v
vswscanf	/usr/include/wchar.h	/^	    __darwin_va_list) __DARWIN_LDBL_COMPAT(vswscanf);$/;"	v
vw_printw	/usr/include/curses.h	/^#define vw_printw	/;"	d
vw_printw	/usr/include/ncurses.h	/^#define vw_printw	/;"	d
vw_scanw	/usr/include/curses.h	/^#define vw_scanw	/;"	d
vw_scanw	/usr/include/ncurses.h	/^#define vw_scanw	/;"	d
vwarn	/usr/include/err.h	/^void	vwarn(const char *, __darwin_va_list) __DARWIN_LDBL_COMPAT(vwarn);$/;"	v
vwarnc	/usr/include/err.h	/^void	vwarnc(int, const char *, __darwin_va_list) __DARWIN_LDBL_COMPAT(vwarnc);$/;"	v
vwarnx	/usr/include/err.h	/^void	vwarnx(const char *, __darwin_va_list) __DARWIN_LDBL_COMPAT(vwarnx);$/;"	v
vwprintf	/usr/include/wchar.h	/^int	vwprintf(const wchar_t * __restrict, __darwin_va_list) __DARWIN_LDBL_COMPAT(vwprintf);$/;"	v
vwscanf	/usr/include/wchar.h	/^int	vwscanf(const wchar_t * __restrict, __darwin_va_list) __DARWIN_LDBL_COMPAT(vwscanf);$/;"	v
w	/usr/include/form.h	/^  WINDOW *		w;		\/* window for current field	*\/$/;"	m	struct:formnode	access:public
wadd_wchstr	/usr/include/curses.h	/^#define wadd_wchstr(/;"	d
wadd_wchstr	/usr/include/ncurses.h	/^#define wadd_wchstr(/;"	d
waddchstr	/usr/include/curses.h	/^#define waddchstr(/;"	d
waddchstr	/usr/include/ncurses.h	/^#define waddchstr(/;"	d
waddstr	/usr/include/curses.h	/^#define waddstr(/;"	d
waddstr	/usr/include/ncurses.h	/^#define waddstr(/;"	d
waddwstr	/usr/include/curses.h	/^#define waddwstr(/;"	d
waddwstr	/usr/include/ncurses.h	/^#define waddwstr(/;"	d
waitForEventProc	/usr/include/tcl.h	/^    Tcl_WaitForEventProc *waitForEventProc;$/;"	m	struct:Tcl_NotifierProcs	access:public
wait_tone	/usr/include/term.h	/^#define wait_tone /;"	d
warn	/usr/include/err.h	/^void	warn(const char *, ...) __DARWIN_LDBL_COMPAT(warn);$/;"	v
warnc	/usr/include/err.h	/^void	warnc(int, const char *, ...) __DARWIN_LDBL_COMPAT(warnc);$/;"	v
warnx	/usr/include/err.h	/^void	warnx(const char *, ...) __DARWIN_LDBL_COMPAT(warnx);$/;"	v
wasFCloseCalled	/usr/include/fcgiapp.h	/^    int wasFCloseCalled;$/;"	m	struct:FCGX_Stream	access:public
watchProc	/usr/include/tcl.h	/^    Tcl_DriverWatchProc *watchProc;$/;"	m	struct:Tcl_ChannelType	access:public
wattr_get	/usr/include/curses.h	/^#define wattr_get(/;"	d
wattr_get	/usr/include/ncurses.h	/^#define wattr_get(/;"	d
wattr_set	/usr/include/curses.h	/^#define wattr_set(/;"	d
wattr_set	/usr/include/ncurses.h	/^#define wattr_set(/;"	d
wattroff	/usr/include/curses.h	/^#define wattroff(/;"	d
wattroff	/usr/include/ncurses.h	/^#define wattroff(/;"	d
wattron	/usr/include/curses.h	/^#define wattron(/;"	d
wattron	/usr/include/ncurses.h	/^#define wattron(/;"	d
wattrset	/usr/include/curses.h	/^#define wattrset(/;"	d
wattrset	/usr/include/ncurses.h	/^#define wattrset(/;"	d
wc_hook	/usr/include/iconv.h	/^  iconv_wide_char_hook wc_hook;$/;"	m	struct:iconv_hooks	access:public
wc_to_mb_fallback	/usr/include/iconv.h	/^  iconv_wchar_wc_to_mb_fallback wc_to_mb_fallback;$/;"	m	struct:iconv_fallbacks	access:public
wcost	/usr/include/mecab.h	/^  double                       wcost;$/;"	m	struct:mecab_learner_node_t	access:public
wcost	/usr/include/mecab.h	/^  short                 wcost;$/;"	m	struct:mecab_node_t	access:public
wcost	/usr/include/mecab.h	/^  short wcost;$/;"	m	struct:mecab_token_t	access:public
wcost2	/usr/include/mecab.h	/^  short                        wcost2;$/;"	m	struct:mecab_learner_node_t	access:public
wcrtomb	/usr/include/wchar.h	/^size_t	wcrtomb(char * __restrict, wchar_t, mbstate_t * __restrict);$/;"	p	signature:(char * __restrict, wchar_t, mbstate_t * __restrict)
wcscat	/usr/include/wchar.h	/^wchar_t	*wcscat(wchar_t * __restrict, const wchar_t * __restrict);$/;"	p	signature:(wchar_t * __restrict, const wchar_t * __restrict)
wcschr	/usr/include/wchar.h	/^wchar_t	*wcschr(const wchar_t *, wchar_t);$/;"	p	signature:(const wchar_t *, wchar_t)
wcscmp	/usr/include/wchar.h	/^int	wcscmp(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcscoll	/usr/include/wchar.h	/^int	wcscoll(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcscpy	/usr/include/wchar.h	/^wchar_t	*wcscpy(wchar_t * __restrict, const wchar_t * __restrict);$/;"	p	signature:(wchar_t * __restrict, const wchar_t * __restrict)
wcscspn	/usr/include/wchar.h	/^size_t	wcscspn(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcsftime	/usr/include/wchar.h	/^	    const struct tm * __restrict) __DARWIN_ALIAS(wcsftime);$/;"	v
wcslcat	/usr/include/wchar.h	/^size_t	wcslcat(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wcslcpy	/usr/include/wchar.h	/^size_t	wcslcpy(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wcslen	/usr/include/wchar.h	/^size_t	wcslen(const wchar_t *);$/;"	p	signature:(const wchar_t *)
wcsncat	/usr/include/wchar.h	/^wchar_t	*wcsncat(wchar_t * __restrict, const wchar_t * __restrict, size_t);$/;"	p	signature:(wchar_t * __restrict, const wchar_t * __restrict, size_t)
wcsncmp	/usr/include/wchar.h	/^int	wcsncmp(const wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, const wchar_t *, size_t)
wcsncpy	/usr/include/wchar.h	/^wchar_t	*wcsncpy(wchar_t * __restrict , const wchar_t * __restrict, size_t);$/;"	p	signature:(wchar_t * __restrict , const wchar_t * __restrict, size_t)
wcsnrtombs	/usr/include/wchar.h	/^size_t	wcsnrtombs(char * __restrict, const wchar_t ** __restrict, size_t,$/;"	p	signature:(char * __restrict, const wchar_t ** __restrict, size_t, size_t, mbstate_t * __restrict)
wcspbrk	/usr/include/wchar.h	/^wchar_t	*wcspbrk(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcsrchr	/usr/include/wchar.h	/^wchar_t	*wcsrchr(const wchar_t *, wchar_t);$/;"	p	signature:(const wchar_t *, wchar_t)
wcsrtombs	/usr/include/wchar.h	/^size_t	wcsrtombs(char * __restrict, const wchar_t ** __restrict, size_t,$/;"	p	signature:(char * __restrict, const wchar_t ** __restrict, size_t, mbstate_t * __restrict)
wcsspn	/usr/include/wchar.h	/^size_t	wcsspn(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcsstr	/usr/include/wchar.h	/^wchar_t	*wcsstr(const wchar_t * __restrict, const wchar_t * __restrict);$/;"	p	signature:(const wchar_t * __restrict, const wchar_t * __restrict)
wcstod	/usr/include/wchar.h	/^double	wcstod(const wchar_t * __restrict, wchar_t ** __restrict);$/;"	p	signature:(const wchar_t * __restrict, wchar_t ** __restrict)
wcstof	/usr/include/wchar.h	/^float	wcstof(const wchar_t * __restrict, wchar_t ** __restrict);$/;"	p	signature:(const wchar_t * __restrict, wchar_t ** __restrict)
wcstoimax	/usr/include/inttypes.h	/^  extern intmax_t wcstoimax(const wchar_t * restrict nptr, wchar_t ** restrict endptr, int base);$/;"	p	signature:(const wchar_t * restrict nptr, wchar_t ** restrict endptr, int base)
wcstok	/usr/include/wchar.h	/^wchar_t	*wcstok(wchar_t * __restrict, const wchar_t * __restrict,$/;"	p	signature:(wchar_t * __restrict, const wchar_t * __restrict, wchar_t ** __restrict)
wcstol	/usr/include/wchar.h	/^long	 wcstol(const wchar_t * __restrict, wchar_t ** __restrict, int);$/;"	p	signature:(const wchar_t * __restrict, wchar_t ** __restrict, int)
wcstold	/usr/include/wchar.h	/^	wcstold(const wchar_t * __restrict, wchar_t ** __restrict) __DARWIN_LDBL_COMPAT(wcstold);$/;"	v
wcstoll	/usr/include/wchar.h	/^	wcstoll(const wchar_t * __restrict, wchar_t ** __restrict, int);$/;"	p	signature:(const wchar_t * __restrict, wchar_t ** __restrict, int)
wcstombs	/usr/include/stdlib.h	/^size_t	 wcstombs(char * __restrict, const wchar_t * __restrict, size_t);$/;"	p	signature:(char * __restrict, const wchar_t * __restrict, size_t)
wcstoul	/usr/include/wchar.h	/^	 wcstoul(const wchar_t * __restrict, wchar_t ** __restrict, int);$/;"	p	signature:(const wchar_t * __restrict, wchar_t ** __restrict, int)
wcstoull	/usr/include/wchar.h	/^	wcstoull(const wchar_t * __restrict, wchar_t ** __restrict, int);$/;"	p	signature:(const wchar_t * __restrict, wchar_t ** __restrict, int)
wcstoumax	/usr/include/inttypes.h	/^  extern uintmax_t wcstoumax(const wchar_t * restrict nptr, wchar_t ** restrict endptr, int base);$/;"	p	signature:(const wchar_t * restrict nptr, wchar_t ** restrict endptr, int base)
wcswidth	/usr/include/wchar.h	/^int	wcswidth(const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, size_t)
wcsxfrm	/usr/include/wchar.h	/^size_t	wcsxfrm(wchar_t * __restrict, const wchar_t * __restrict, size_t);$/;"	p	signature:(wchar_t * __restrict, const wchar_t * __restrict, size_t)
wctob	/usr/include/wchar.h	/^int	wctob(wint_t);$/;"	p	signature:(wint_t)
wctomb	/usr/include/stdlib.h	/^int	 wctomb(char *, wchar_t);$/;"	p	signature:(char *, wchar_t)
wctrans	/usr/include/wctype.h	/^	wctrans(const char *);$/;"	p	signature:(const char *)
wctrans_t	/usr/include/wctype.h	/^typedef	__darwin_wctrans_t	wctrans_t;$/;"	t
wctype	/usr/include/_wctype.h	/^	wctype(const char *);$/;"	p	signature:(const char *)
wctype_t	/usr/include/_wctype.h	/^typedef __darwin_wctype_t	wctype_t;$/;"	t
wcwidth	/usr/include/wchar.h	/^int	wcwidth(wchar_t);$/;"	p	signature:(wchar_t)
wdeleteln	/usr/include/curses.h	/^#define wdeleteln(/;"	d
wdeleteln	/usr/include/ncurses.h	/^#define wdeleteln(/;"	d
we_offs	/usr/include/wordexp.h	/^	size_t we_offs;$/;"	m	struct:__anon133	access:public
we_wordc	/usr/include/wordexp.h	/^	size_t we_wordc;$/;"	m	struct:__anon133	access:public
we_wordv	/usr/include/wordexp.h	/^	char **we_wordv;$/;"	m	struct:__anon133	access:public
weight	/usr/include/dns_util.h	/^	uint16_t weight;$/;"	m	struct:__anon40	access:public
wget_wstr	/usr/include/curses.h	/^#define wget_wstr(/;"	d
wget_wstr	/usr/include/ncurses.h	/^#define wget_wstr(/;"	d
wgetbkgrnd	/usr/include/curses.h	/^#define wgetbkgrnd(/;"	d
wgetbkgrnd	/usr/include/ncurses.h	/^#define wgetbkgrnd(/;"	d
wgetparent	/usr/include/curses.h	/^#define wgetparent(/;"	d
wgetparent	/usr/include/ncurses.h	/^#define wgetparent(/;"	d
wgetscrreg	/usr/include/curses.h	/^#define wgetscrreg(/;"	d
wgetscrreg	/usr/include/ncurses.h	/^#define wgetscrreg(/;"	d
wgetstr	/usr/include/curses.h	/^#define wgetstr(/;"	d
wgetstr	/usr/include/ncurses.h	/^#define wgetstr(/;"	d
what	/usr/include/mecab.h	/^    virtual const char* what() = 0;$/;"	p	class:MeCab::Tagger	access:public	signature:()
wideSeekProc	/usr/include/tcl.h	/^    Tcl_DriverWideSeekProc *wideSeekProc;$/;"	m	struct:Tcl_ChannelType	access:public
wideValue	/usr/include/tcl.h	/^	Tcl_WideInt wideValue;	\/*   - a long long value *\/$/;"	m	union:Tcl_Obj::__anon114	access:public
wideValue	/usr/include/tcl.h	/^    Tcl_WideInt wideValue;	\/* Wide (min. 64-bit) integer value. *\/$/;"	m	struct:Tcl_Value	access:public
wide_char_size	/usr/include/term.h	/^#define wide_char_size /;"	d
width	/usr/include/Xplugin.h	/^    unsigned int width, height;$/;"	m	struct:xp_window_changes_struct	access:public
width	/usr/include/menu.h	/^  short          width;                 \/* Nr. of chars wide               *\/$/;"	m	struct:tagMENU	access:public
width	/usr/include/tk.h	/^    double width;		\/* Width of outline. *\/$/;"	m	struct:Tk_Outline	access:public
width	/usr/include/tk.h	/^    int width;			\/* Width of block, in pixels. *\/$/;"	m	struct:Tk_PhotoImageBlock	access:public
width_status_line	/usr/include/term.h	/^#define width_status_line /;"	d
win	/usr/include/form.h	/^  WINDOW *		win;		\/* window			*\/$/;"	m	struct:formnode	access:public
win	/usr/include/menu.h	/^  WINDOW        *win;                   \/* Window containing menu          *\/$/;"	m	struct:tagMENU	access:public
win	/usr/include/panel.h	/^  WINDOW *win;$/;"	m	struct:panel	access:public
win_wchstr	/usr/include/curses.h	/^#define win_wchstr(/;"	d
win_wchstr	/usr/include/ncurses.h	/^#define win_wchstr(/;"	d
winchstr	/usr/include/curses.h	/^#define winchstr(/;"	d
winchstr	/usr/include/ncurses.h	/^#define winchstr(/;"	d
window	/usr/include/tk.h	/^    Window window;		\/* Window in which event occurred. *\/$/;"	m	struct:__anon130	access:public
window	/usr/include/tk.h	/^    Window window;$/;"	m	struct:Tk_FakeWin	access:public
window_level	/usr/include/Xplugin.h	/^    int window_level;$/;"	m	struct:xp_window_changes_struct	access:public
wins_wstr	/usr/include/curses.h	/^#define wins_wstr(/;"	d
wins_wstr	/usr/include/ncurses.h	/^#define wins_wstr(/;"	d
winsertln	/usr/include/curses.h	/^#define winsertln(/;"	d
winsertln	/usr/include/ncurses.h	/^#define winsertln(/;"	d
winsstr	/usr/include/curses.h	/^#define winsstr(/;"	d
winsstr	/usr/include/ncurses.h	/^#define winsstr(/;"	d
winstr	/usr/include/curses.h	/^#define winstr(/;"	d
winstr	/usr/include/ncurses.h	/^#define winstr(/;"	d
wint_t	/usr/include/_wctype.h	/^typedef __darwin_wint_t		wint_t;$/;"	t
wint_t	/usr/include/runetype.h	/^typedef	__darwin_wint_t		wint_t;$/;"	t
wint_t	/usr/include/stddef.h	/^typedef	__darwin_wint_t		wint_t;$/;"	t
wmemchr	/usr/include/wchar.h	/^wchar_t	*wmemchr(const wchar_t *, wchar_t, size_t);$/;"	p	signature:(const wchar_t *, wchar_t, size_t)
wmemcmp	/usr/include/wchar.h	/^int	wmemcmp(const wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, const wchar_t *, size_t)
wmemcpy	/usr/include/wchar.h	/^wchar_t	*wmemcpy(wchar_t * __restrict, const wchar_t * __restrict, size_t);$/;"	p	signature:(wchar_t * __restrict, const wchar_t * __restrict, size_t)
wmemmove	/usr/include/wchar.h	/^wchar_t	*wmemmove(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wmemset	/usr/include/wchar.h	/^wchar_t	*wmemset(wchar_t *, wchar_t, size_t);$/;"	p	signature:(wchar_t *, wchar_t, size_t)
wordexp	/usr/include/wordexp.h	/^int wordexp(const char * __restrict, wordexp_t * __restrict, int);$/;"	p	signature:(const char * __restrict, wordexp_t * __restrict, int)
wordexp_t	/usr/include/wordexp.h	/^} wordexp_t;$/;"	t	typeref:struct:__anon133
wordfree	/usr/include/wordexp.h	/^void wordfree(wordexp_t *);$/;"	p	signature:(wordexp_t *)
words	/usr/include/tcl.h	/^	int words[1];		\/* Multiple integer words for key. The actual$/;"	m	union:Tcl_HashEntry::__anon117	access:public
worldChangedProc	/usr/include/tk.h	/^    Tk_ClassWorldChangedProc *worldChangedProc;$/;"	m	struct:Tk_ClassProcs	access:public
wprintf	/usr/include/wchar.h	/^int	wprintf(const wchar_t * __restrict, ...) __DARWIN_LDBL_COMPAT(wprintf);$/;"	v
wrNext	/usr/include/fcgiapp.h	/^    unsigned char *wrNext;    \/* writer: first free byte$/;"	m	struct:FCGX_Stream	access:public
write	/usr/include/unistd.h	/^ssize_t	 write(int, const void *, size_t) __DARWIN_ALIAS_C(write);$/;"	v
wscanf	/usr/include/wchar.h	/^int	wscanf(const wchar_t * __restrict, ...) __DARWIN_LDBL_COMPAT(wscanf);$/;"	v
wstandend	/usr/include/curses.h	/^#define wstandend(/;"	d
wstandend	/usr/include/ncurses.h	/^#define wstandend(/;"	d
wstandout	/usr/include/curses.h	/^#define wstandout(/;"	d
wstandout	/usr/include/ncurses.h	/^#define wstandout(/;"	d
wtmpxname	/usr/include/utmpx.h	/^int	wtmpxname(const char *);$/;"	p	signature:(const char *)
x	/usr/include/Xplugin.h	/^    int x, y;$/;"	m	struct:xp_window_changes_struct	access:public
x	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon10	access:public
x	/usr/include/menu.h	/^  short          x;$/;"	m	struct:tagITEM	access:public
x	/usr/include/ncurses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon86	access:public
x	/usr/include/tk.h	/^    int x, y;			\/* Pointer x, y coordinates in event$/;"	m	struct:__anon129	access:public
x1	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
x1	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
x2	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
x2	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
xAccess	/usr/include/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	access:public
xAllocColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xAllocColor) (Display * d, Colormap c, XColor * xp); \/* 12 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xAllocColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xAllocColor) (Display * d, Colormap c, XColor * xp); \/* 18 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xBegin	/usr/include/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
xBell	/usr/include/tkIntXlibDecls.h	/^    void (*xBell) (Display * d, int i); \/* 13 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xBell	/usr/include/tkIntXlibDecls.h	/^    void (*xBell) (Display * d, int i); \/* 19 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xBestIndex	/usr/include/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	access:public
xCachesize	/usr/include/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	access:public
xChangeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeGC) (Display * d, GC gc, unsigned long mask, XGCValues * values); \/* 67 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xChangeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeGC) (Display * d, GC gc, unsigned long mask, XGCValues * values); \/* 91 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xChangeProperty	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeProperty) (Display * d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char * c, int i3); \/* 14 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xChangeProperty	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeProperty) (Display * d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char * c, int i3); \/* 20 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xChangeWindowAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeWindowAttributes) (Display * d, Window w, unsigned long ul, XSetWindowAttributes * x); \/* 15 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xChangeWindowAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xChangeWindowAttributes) (Display * d, Window w, unsigned long ul, XSetWindowAttributes * x); \/* 21 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCheckReservedLock	/usr/include/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	access:public
xClearWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xClearWindow) (Display * d, Window w); \/* 22 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xClearWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xClearWindow) (Display * d, Window w); \/* 84 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xClose	/usr/include/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	access:public
xClose	/usr/include/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	access:public
xColumn	/usr/include/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	access:public
xCommit	/usr/include/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
xConfigureWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xConfigureWindow) (Display * d, Window w, unsigned int i, XWindowChanges * x); \/* 16 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xConfigureWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xConfigureWindow) (Display * d, Window w, unsigned int i, XWindowChanges * x); \/* 23 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xConnect	/usr/include/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	access:public
xCopyArea	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyArea) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 17 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCopyArea	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyArea) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 24 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCopyPlane	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyPlane) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul); \/* 18 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCopyPlane	/usr/include/tkIntXlibDecls.h	/^    void (*xCopyPlane) (Display * d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul); \/* 25 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreate	/usr/include/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	access:public
xCreate	/usr/include/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	access:public
xCreateBitmapFromData	/usr/include/tkIntXlibDecls.h	/^    Pixmap (*xCreateBitmapFromData) (Display * display, Drawable d, _Xconst char * data, unsigned int width, unsigned int height); \/* 19 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateBitmapFromData	/usr/include/tkIntXlibDecls.h	/^    Pixmap (*xCreateBitmapFromData) (Display * display, Drawable d, _Xconst char * data, unsigned int width, unsigned int height); \/* 26 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateColormap	/usr/include/tkIntXlibDecls.h	/^    Colormap (*xCreateColormap) (Display * d, Window w, Visual * v, int i); \/* 6 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateGC	/usr/include/tkIntXlibDecls.h	/^    GC (*xCreateGC) (Display * display, Drawable d, unsigned long valuemask, XGCValues * values); \/* 59 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateGC	/usr/include/tkIntXlibDecls.h	/^    GC (*xCreateGC) (Display * display, Drawable d, unsigned long valuemask, XGCValues * values); \/* 83 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateGlyphCursor	/usr/include/tkIntXlibDecls.h	/^    Cursor (*xCreateGlyphCursor) (Display * d, Font f1, Font f2, unsigned int ui1, unsigned int ui2, XColor * x1, XColor * x2); \/* 8 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateIC	/usr/include/tkIntXlibDecls.h	/^    XIC (*xCreateIC) (void); \/* 100 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateIC	/usr/include/tkIntXlibDecls.h	/^    XIC (*xCreateIC) (void); \/* 76 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreateImage	/usr/include/tkIntXlibDecls.h	/^    XImage * (*xCreateImage) (Display * d, Visual * v, unsigned int ui1, int i1, int i2, char * cp, unsigned int ui2, unsigned int ui3, int i3, int i4); \/* 2 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCreatePixmapCursor	/usr/include/tkIntXlibDecls.h	/^    Cursor (*xCreatePixmapCursor) (Display * d, Pixmap p1, Pixmap p2, XColor * x1, XColor * x2, unsigned int ui1, unsigned int ui2); \/* 7 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xCurrentTime	/usr/include/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	access:public
xDefineCursor	/usr/include/tkIntXlibDecls.h	/^    void (*xDefineCursor) (Display * d, Window w, Cursor c); \/* 20 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDefineCursor	/usr/include/tkIntXlibDecls.h	/^    void (*xDefineCursor) (Display * d, Window w, Cursor c); \/* 27 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDelete	/usr/include/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	access:public
xDeleteProperty	/usr/include/tkIntXlibDecls.h	/^    void (*xDeleteProperty) (Display * d, Window w, Atom a); \/* 28 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDestroy	/usr/include/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
xDestroy	/usr/include/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	access:public
xDestroyIC	/usr/include/tkIntXlibDecls.h	/^    void (*xDestroyIC) (XIC x); \/* 77 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDestroyWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xDestroyWindow) (Display * d, Window w); \/* 21 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDestroyWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xDestroyWindow) (Display * d, Window w); \/* 29 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDeviceCharacteristics	/usr/include/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	access:public
xDisconnect	/usr/include/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
xDlClose	/usr/include/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	access:public
xDlError	/usr/include/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	access:public
xDlOpen	/usr/include/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	access:public
xDlSym	/usr/include/sqlite3.h	/^  void (*(*xDlSym)(sqlite3_vfs*,void*, const char *zSymbol))(void);$/;"	p	struct:sqlite3_vfs	access:public	signature:(sqlite3_vfs*,void*, const char *zSymbol)
xDrawArc	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 22 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawArc	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 30 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawLine	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLine) (Display * d, Drawable dr, GC g, int x1, int y1, int x2, int y2); \/* 104 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawLine	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLine) (Display * d, Drawable dr, GC g, int x1, int y1, int x2, int y2); \/* 82 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawLines	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLines) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2); \/* 23 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawLines	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawLines) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2); \/* 31 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawPoint	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawPoint) (Display * display, Drawable d, GC gc, int x, int y); \/* 85 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawPoints	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawPoints) (Display * display, Drawable d, GC gc, XPoint * points, int npoints, int mode); \/* 86 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawRectangle) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 24 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawRectangle) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 32 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xDrawSegments	/usr/include/tkIntXlibDecls.h	/^    void (*xDrawSegments) (Display * display, Drawable d, GC gc, XSegment * segments, int nsegments); \/* 80 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xEof	/usr/include/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	access:public
xFetch	/usr/include/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	access:public
xFileControl	/usr/include/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	access:public
xFileSize	/usr/include/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	access:public
xFillArc	/usr/include/tkIntXlibDecls.h	/^    void (*xFillArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 25 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillArc	/usr/include/tkIntXlibDecls.h	/^    void (*xFillArc) (Display * d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 33 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillPolygon	/usr/include/tkIntXlibDecls.h	/^    void (*xFillPolygon) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2, int i3); \/* 26 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillPolygon	/usr/include/tkIntXlibDecls.h	/^    void (*xFillPolygon) (Display * d, Drawable dr, GC g, XPoint * x, int i1, int i2, int i3); \/* 34 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangle) (Display * display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height); \/* 106 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillRectangle	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangle) (Display * display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height); \/* 83 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillRectangles	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangles) (Display * d, Drawable dr, GC g, XRectangle * x, int i); \/* 27 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFillRectangles	/usr/include/tkIntXlibDecls.h	/^    void (*xFillRectangles) (Display * d, Drawable dr, GC g, XRectangle * x, int i); \/* 35 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFilter	/usr/include/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	access:public
xFilterEvent	/usr/include/tkIntXlibDecls.h	/^    Bool (*xFilterEvent) (XEvent * x, Window w); \/* 78 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFindFunction	/usr/include/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	access:public
xForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^    void (*xForceScreenSaver) (Display * d, int i); \/* 36 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xForceScreenSaver	/usr/include/tkIntXlibDecls.h	/^    void (*xForceScreenSaver) (Display * display, int mode); \/* 81 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFree	/usr/include/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xFreeColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColormap) (Display * d, Colormap c); \/* 28 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColormap) (Display * d, Colormap c); \/* 37 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeColors	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColors) (Display * d, Colormap c, unsigned long * ulp, int i, unsigned long ul); \/* 29 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeColors	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeColors) (Display * d, Colormap c, unsigned long * ulp, int i, unsigned long ul); \/* 38 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeCursor	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeCursor) (Display * d, Cursor c); \/* 39 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeGC) (Display * display, GC gc); \/* 60 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeGC	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeGC) (Display * display, GC gc); \/* 84 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeModifiermap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeModifiermap) (XModifierKeymap * x); \/* 30 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFreeModifiermap	/usr/include/tkIntXlibDecls.h	/^    void (*xFreeModifiermap) (XModifierKeymap * x); \/* 40 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xFullPathname	/usr/include/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	access:public
xGContextFromGC	/usr/include/tkIntXlibDecls.h	/^    GContext (*xGContextFromGC) (GC g); \/* 7 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGContextFromGC	/usr/include/tkIntXlibDecls.h	/^    GContext (*xGContextFromGC) (GC g); \/* 9 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetAtomName	/usr/include/tkIntXlibDecls.h	/^    char * (*xGetAtomName) (Display * d, Atom a); \/* 4 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetGeometry	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetGeometry) (Display * d, Drawable dr, Window * w, int * i1, int * i2, unsigned int * ui1, unsigned int * ui2, unsigned int * ui3, unsigned int * ui4); \/* 31 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetGeometry	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetGeometry) (Display * d, Drawable dr, Window * w, int * i1, int * i2, unsigned int * ui1, unsigned int * ui2, unsigned int * ui3, unsigned int * ui4); \/* 41 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetImage	/usr/include/tkIntXlibDecls.h	/^    XImage * (*xGetImage) (Display * d, Drawable dr, int i1, int i2, unsigned int ui1, unsigned int ui2, unsigned long ul, int i3); \/* 3 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetInputFocus	/usr/include/tkIntXlibDecls.h	/^    void (*xGetInputFocus) (Display * d, Window * w, int * i); \/* 42 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetLastError	/usr/include/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	access:public
xGetModifierMapping	/usr/include/tkIntXlibDecls.h	/^    XModifierKeymap * (*xGetModifierMapping) (Display * d); \/* 1 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetVisualInfo	/usr/include/tkIntXlibDecls.h	/^    XVisualInfo * (*xGetVisualInfo) (Display * display, long vinfo_mask, XVisualInfo * vinfo_template, int * nitems_return); \/* 101 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetVisualInfo	/usr/include/tkIntXlibDecls.h	/^    XVisualInfo * (*xGetVisualInfo) (Display * display, long vinfo_mask, XVisualInfo * vinfo_template, int * nitems_return); \/* 77 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetWMColormapWindows	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetWMColormapWindows) (Display * d, Window w, Window ** wpp, int * ip); \/* 17 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetWindowAttributes	/usr/include/tkIntXlibDecls.h	/^    Status (*xGetWindowAttributes) (Display * d, Window w, XWindowAttributes * x); \/* 44 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetWindowProperty	/usr/include/tkIntXlibDecls.h	/^    int (*xGetWindowProperty) (Display * d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom * ap, int * ip, unsigned long * ulp1, unsigned long * ulp2, unsigned char ** cpp); \/* 32 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGetWindowProperty	/usr/include/tkIntXlibDecls.h	/^    int (*xGetWindowProperty) (Display * d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom * ap, int * ip, unsigned long * ulp1, unsigned long * ulp2, unsigned char ** cpp); \/* 43 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabKeyboard) (Display * d, Window w, Bool b, int i1, int i2, Time t); \/* 33 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabKeyboard) (Display * d, Window w, Bool b, int i1, int i2, Time t); \/* 45 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGrabPointer	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabPointer) (Display * d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t); \/* 34 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xGrabPointer	/usr/include/tkIntXlibDecls.h	/^    int (*xGrabPointer) (Display * d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t); \/* 46 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xIconifyWindow	/usr/include/tkIntXlibDecls.h	/^    Status (*xIconifyWindow) (Display * d, Window w, int i); \/* 15 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xInit	/usr/include/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xInit	/usr/include/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	access:public
xInternAtom	/usr/include/tkIntXlibDecls.h	/^    Atom (*xInternAtom) (Display * display, _Xconst char * atom_name, Bool only_if_exists); \/* 61 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xInternAtom	/usr/include/tkIntXlibDecls.h	/^    Atom (*xInternAtom) (Display * display, _Xconst char * atom_name, Bool only_if_exists); \/* 85 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xKeycodeToKeysym) (Display * d, KeyCode k, int i); \/* 8 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xKeycodeToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xKeycodeToKeysym) (Display * d, unsigned int k, int i); \/* 11 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xKeysymToKeycode	/usr/include/tkIntXlibDecls.h	/^    KeyCode (*xKeysymToKeycode) (Display * d, KeySym k); \/* 35 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xKeysymToKeycode	/usr/include/tkIntXlibDecls.h	/^    KeyCode (*xKeysymToKeycode) (Display * d, KeySym k); \/* 47 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xKeysymToString	/usr/include/tkIntXlibDecls.h	/^    char * (*xKeysymToString) (KeySym k); \/* 5 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xListHosts	/usr/include/tkIntXlibDecls.h	/^    XHostAddress * (*xListHosts) (Display * d, int * i, Bool * b); \/* 10 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xLock	/usr/include/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	access:public
xLookupColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xLookupColor) (Display * d, Colormap c1, _Xconst char * c2, XColor * x1, XColor * x2); \/* 48 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMalloc	/usr/include/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xMapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMapWindow) (Display * d, Window w); \/* 36 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMapWindow) (Display * d, Window w); \/* 49 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMoveResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveResizeWindow) (Display * d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 37 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMoveResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveResizeWindow) (Display * d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 50 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMoveWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveWindow) (Display * d, Window w, int i1, int i2); \/* 38 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMoveWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xMoveWindow) (Display * d, Window w, int i1, int i2); \/* 51 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xMutexAlloc	/usr/include/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexEnd	/usr/include/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexEnter	/usr/include/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexFree	/usr/include/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexHeld	/usr/include/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexInit	/usr/include/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexLeave	/usr/include/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexNotheld	/usr/include/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
xMutexTry	/usr/include/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	access:public
xNext	/usr/include/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	access:public
xNextEvent	/usr/include/tkIntXlibDecls.h	/^    void (*xNextEvent) (Display * d, XEvent * x); \/* 52 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xOpen	/usr/include/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	access:public
xOpen	/usr/include/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	access:public
xPagecount	/usr/include/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	access:public
xParseColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xParseColor) (Display * display, Colormap map, _Xconst char * spec, XColor * colorPtr); \/* 58 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xParseColor	/usr/include/tkIntXlibDecls.h	/^    Status (*xParseColor) (Display * display, Colormap map, _Xconst char * spec, XColor * colorPtr); \/* 82 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xPutBackEvent	/usr/include/tkIntXlibDecls.h	/^    void (*xPutBackEvent) (Display * d, XEvent * x); \/* 53 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryColor	/usr/include/tkIntXlibDecls.h	/^    void (*xQueryColor) (Display * display, Colormap colormap, XColor * def_in_out); \/* 88 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryColors	/usr/include/tkIntXlibDecls.h	/^    void (*xQueryColors) (Display * d, Colormap c, XColor * x, int i); \/* 54 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryColors	/usr/include/tkIntXlibDecls.h	/^    void (*xQueryColors) (Display * display, Colormap colormap, XColor * defs_in_out, int ncolors); \/* 89 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryPointer	/usr/include/tkIntXlibDecls.h	/^    Bool (*xQueryPointer) (Display * d, Window w1, Window * w2, Window * w3, int * i1, int * i2, int * i3, int * i4, unsigned int * ui); \/* 39 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryPointer	/usr/include/tkIntXlibDecls.h	/^    Bool (*xQueryPointer) (Display * d, Window w1, Window * w2, Window * w3, int * i1, int * i2, int * i3, int * i4, unsigned int * ui); \/* 55 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryTree	/usr/include/tkIntXlibDecls.h	/^    Status (*xQueryTree) (Display * d, Window w1, Window * w2, Window * w3, Window ** w4, unsigned int * ui); \/* 56 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xQueryTree	/usr/include/tkIntXlibDecls.h	/^    Status (*xQueryTree) (Display * d, Window w1, Window * w2, Window * w3, Window ** w4, unsigned int * ui); \/* 90 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRaiseWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xRaiseWindow) (Display * d, Window w); \/* 40 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRaiseWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xRaiseWindow) (Display * d, Window w); \/* 57 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRandomness	/usr/include/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	access:public
xRead	/usr/include/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	access:public
xRealloc	/usr/include/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xRefreshKeyboardMapping	/usr/include/tkIntXlibDecls.h	/^    void (*xRefreshKeyboardMapping) (XMappingEvent * x); \/* 41 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRefreshKeyboardMapping	/usr/include/tkIntXlibDecls.h	/^    void (*xRefreshKeyboardMapping) (XMappingEvent * x); \/* 58 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRekey	/usr/include/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	access:public
xRename	/usr/include/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	access:public
xResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xResizeWindow) (Display * d, Window w, unsigned int ui1, unsigned int ui2); \/* 42 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xResizeWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xResizeWindow) (Display * d, Window w, unsigned int ui1, unsigned int ui2); \/* 59 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRollback	/usr/include/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
xRootWindow	/usr/include/tkIntXlibDecls.h	/^    Window (*xRootWindow) (Display * d, int i); \/* 10 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRootWindow	/usr/include/tkIntXlibDecls.h	/^    Window (*xRootWindow) (Display * d, int i); \/* 13 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xRoundup	/usr/include/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xRowid	/usr/include/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	access:public
xSectorSize	/usr/include/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	access:public
xSelectInput	/usr/include/tkIntXlibDecls.h	/^    void (*xSelectInput) (Display * d, Window w, long l); \/* 43 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSelectInput	/usr/include/tkIntXlibDecls.h	/^    void (*xSelectInput) (Display * d, Window w, long l); \/* 60 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSendEvent	/usr/include/tkIntXlibDecls.h	/^    Status (*xSendEvent) (Display * d, Window w, Bool b, long l, XEvent * x); \/* 44 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSendEvent	/usr/include/tkIntXlibDecls.h	/^    Status (*xSendEvent) (Display * d, Window w, Bool b, long l, XEvent * x); \/* 61 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetArcMode	/usr/include/tkIntXlibDecls.h	/^    void (*xSetArcMode) (Display * display, GC gc, int arc_mode); \/* 69 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetArcMode	/usr/include/tkIntXlibDecls.h	/^    void (*xSetArcMode) (Display * display, GC gc, int arc_mode); \/* 93 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetBackground) (Display * display, GC gc, unsigned long foreground); \/* 62 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetBackground) (Display * display, GC gc, unsigned long foreground); \/* 86 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetClipMask	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipMask) (Display * display, GC gc, Pixmap pixmap); \/* 64 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetClipMask	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipMask) (Display * display, GC gc, Pixmap pixmap); \/* 88 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetClipOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipOrigin) (Display * display, GC gc, int clip_x_origin, int clip_y_origin); \/* 65 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetClipOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetClipOrigin) (Display * display, GC gc, int clip_x_origin, int clip_y_origin); \/* 89 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetCommand	/usr/include/tkIntXlibDecls.h	/^    void (*xSetCommand) (Display * d, Window w, CONST char ** c, int i); \/* 62 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetDashes	/usr/include/tkIntXlibDecls.h	/^    void (*xSetDashes) (Display * display, GC gc, int dash_offset, _Xconst char * dash_list, int n); \/* 0 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetErrorHandler	/usr/include/tkIntXlibDecls.h	/^    XErrorHandler (*xSetErrorHandler) (XErrorHandler x); \/* 11 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetErrorHandler	/usr/include/tkIntXlibDecls.h	/^    XErrorHandler (*xSetErrorHandler) (XErrorHandler x); \/* 14 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFillRule	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillRule) (Display * display, GC gc, int fill_rule); \/* 71 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFillRule	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillRule) (Display * display, GC gc, int fill_rule); \/* 95 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFillStyle	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillStyle) (Display * display, GC gc, int fill_style); \/* 72 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFillStyle	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFillStyle) (Display * display, GC gc, int fill_style); \/* 96 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFont	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFont) (Display * display, GC gc, Font font); \/* 68 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFont	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFont) (Display * display, GC gc, Font font); \/* 92 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetForeground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetForeground) (Display * display, GC gc, unsigned long foreground); \/* 63 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetForeground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetForeground) (Display * display, GC gc, unsigned long foreground); \/* 87 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFunction	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFunction) (Display * display, GC gc, int function); \/* 73 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetFunction	/usr/include/tkIntXlibDecls.h	/^    void (*xSetFunction) (Display * display, GC gc, int function); \/* 97 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetIconName	/usr/include/tkIntXlibDecls.h	/^    void (*xSetIconName) (Display * d, Window w, _Xconst char * c); \/* 45 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetIconName	/usr/include/tkIntXlibDecls.h	/^    void (*xSetIconName) (Display * d, Window w, _Xconst char * c); \/* 63 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetInputFocus	/usr/include/tkIntXlibDecls.h	/^    void (*xSetInputFocus) (Display * d, Window w, int i, Time t); \/* 46 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetInputFocus	/usr/include/tkIntXlibDecls.h	/^    void (*xSetInputFocus) (Display * d, Window w, int i, Time t); \/* 64 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetLineAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xSetLineAttributes) (Display * display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style); \/* 74 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetLineAttributes	/usr/include/tkIntXlibDecls.h	/^    void (*xSetLineAttributes) (Display * display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style); \/* 98 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetSelectionOwner	/usr/include/tkIntXlibDecls.h	/^    void (*xSetSelectionOwner) (Display * d, Atom a, Window w, Time t); \/* 47 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetSelectionOwner	/usr/include/tkIntXlibDecls.h	/^    void (*xSetSelectionOwner) (Display * d, Atom a, Window w, Time t); \/* 65 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetStipple	/usr/include/tkIntXlibDecls.h	/^    void (*xSetStipple) (Display * display, GC gc, Pixmap stipple); \/* 70 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetStipple	/usr/include/tkIntXlibDecls.h	/^    void (*xSetStipple) (Display * display, GC gc, Pixmap stipple); \/* 94 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetTSOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetTSOrigin) (Display * display, GC gc, int ts_x_origin, int ts_y_origin); \/* 66 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetTSOrigin	/usr/include/tkIntXlibDecls.h	/^    void (*xSetTSOrigin) (Display * display, GC gc, int ts_x_origin, int ts_y_origin); \/* 90 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWMClientMachine	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWMClientMachine) (Display * display, Window w, XTextProperty * text_prop); \/* 102 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWMClientMachine	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWMClientMachine) (Display * display, Window w, XTextProperty * text_prop); \/* 78 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackground) (Display * d, Window w, unsigned long ul); \/* 48 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBackground	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackground) (Display * d, Window w, unsigned long ul); \/* 66 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBackgroundPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackgroundPixmap) (Display * d, Window w, Pixmap p); \/* 49 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBackgroundPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBackgroundPixmap) (Display * d, Window w, Pixmap p); \/* 67 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBorder	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorder) (Display * d, Window w, unsigned long ul); \/* 50 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBorder	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorder) (Display * d, Window w, unsigned long ul); \/* 68 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBorderPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderPixmap) (Display * d, Window w, Pixmap p); \/* 51 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBorderPixmap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderPixmap) (Display * d, Window w, Pixmap p); \/* 69 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBorderWidth	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderWidth) (Display * d, Window w, unsigned int ui); \/* 52 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowBorderWidth	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowBorderWidth) (Display * d, Window w, unsigned int ui); \/* 70 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowColormap) (Display * d, Window w, Colormap c); \/* 53 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSetWindowColormap	/usr/include/tkIntXlibDecls.h	/^    void (*xSetWindowColormap) (Display * d, Window w, Colormap c); \/* 71 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xShutdown	/usr/include/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xShutdown	/usr/include/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	access:public
xSize	/usr/include/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	access:public
xSleep	/usr/include/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	access:public
xStringListToTextProperty	/usr/include/tkIntXlibDecls.h	/^    Status (*xStringListToTextProperty) (char ** list, int count, XTextProperty * text_prop_return); \/* 103 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xStringListToTextProperty	/usr/include/tkIntXlibDecls.h	/^    Status (*xStringListToTextProperty) (char ** list, int count, XTextProperty * text_prop_return); \/* 79 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xStringToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xStringToKeysym) (_Xconst char * c); \/* 12 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xStringToKeysym	/usr/include/tkIntXlibDecls.h	/^    KeySym (*xStringToKeysym) (_Xconst char * c); \/* 9 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xSync	/usr/include/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	access:public
xSync	/usr/include/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	access:public
xSync	/usr/include/tkIntXlibDecls.h	/^    int (*xSync) (Display * display, Bool flag); \/* 91 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xTranslateCoordinates	/usr/include/tkIntXlibDecls.h	/^    Bool (*xTranslateCoordinates) (Display * d, Window w1, Window w2, int i1, int i2, int * i3, int * i4, Window * w3); \/* 72 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xTruncate	/usr/include/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	access:public
xTruncate	/usr/include/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	access:public
xUngrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabKeyboard) (Display * d, Time t); \/* 54 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xUngrabKeyboard	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabKeyboard) (Display * d, Time t); \/* 73 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xUngrabPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabPointer) (Display * d, Time t); \/* 55 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xUngrabPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xUngrabPointer) (Display * d, Time t); \/* 74 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xUnlock	/usr/include/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	access:public
xUnmapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xUnmapWindow) (Display * d, Window w); \/* 56 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xUnmapWindow	/usr/include/tkIntXlibDecls.h	/^    void (*xUnmapWindow) (Display * d, Window w); \/* 75 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xUnpin	/usr/include/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	access:public
xUpdate	/usr/include/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	access:public
xWarpPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xWarpPointer) (Display * d, Window s, Window dw, int sx, int sy, unsigned int sw, unsigned int sh, int dx, int dy); \/* 105 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xWarpPointer	/usr/include/tkIntXlibDecls.h	/^    void (*xWarpPointer) (Display * display, Window src_w, Window dest_w, int src_x, int src_y, unsigned int src_width, unsigned int src_height, int dest_x, int dest_y); \/* 87 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xWindowEvent	/usr/include/tkIntXlibDecls.h	/^    void (*xWindowEvent) (Display * d, Window w, long l, XEvent * x); \/* 76 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xWithdrawWindow	/usr/include/tkIntXlibDecls.h	/^    Status (*xWithdrawWindow) (Display * d, Window w, int i); \/* 16 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xWrite	/usr/include/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	access:public
x_root	/usr/include/tk.h	/^    int x_root, y_root;		\/* Coordinates relative to root. *\/$/;"	m	struct:__anon129	access:public
xflags	/usr/include/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	access:public
xgets	/usr/include/tcpd.h	/^extern char *xgets();			\/* fgets() on steroids *\/$/;"	p	signature:()
xid	/usr/include/dns_util.h	/^	uint16_t xid;$/;"	m	struct:__anon22	access:public
xmbLookupString	/usr/include/tkIntXlibDecls.h	/^    int (*xmbLookupString) (XIC xi, XKeyPressedEvent * xk, char * c, int i, KeySym * k, Status * s); \/* 79 *\/$/;"	m	struct:TkIntXlibStubs	access:public
xoff_character	/usr/include/term.h	/^#define xoff_character /;"	d
xoffset	/usr/include/tk.h	/^    int xoffset;		\/* x offset *\/$/;"	m	struct:Tk_TSOffset	access:public
xon_character	/usr/include/term.h	/^#define xon_character /;"	d
xon_xoff	/usr/include/term.h	/^#define xon_xoff /;"	d
xor	/usr/include/iso646.h	/^#define	xor	/;"	d
xor_eq	/usr/include/iso646.h	/^#define	xor_eq	/;"	d
xp_async_error_event	/usr/include/Xplugin.h	/^typedef struct xp_async_error_event_struct xp_async_error_event;$/;"	t	typeref:struct:xp_async_error_event_struct
xp_async_error_event_struct	/usr/include/Xplugin.h	/^struct xp_async_error_event_struct {$/;"	s
xp_async_error_event_struct::error	/usr/include/Xplugin.h	/^    xp_error error;$/;"	m	struct:xp_async_error_event_struct	access:public
xp_async_error_event_struct::id	/usr/include/Xplugin.h	/^    xp_resource_id id;$/;"	m	struct:xp_async_error_event_struct	access:public
xp_async_error_event_struct::request_type	/usr/include/Xplugin.h	/^    xp_request_type request_type;$/;"	m	struct:xp_async_error_event_struct	access:public
xp_attach_gl_context	/usr/include/Xplugin.h	/^extern xp_error xp_attach_gl_context (void *cgl_ctx, xp_surface_id sid);$/;"	p	signature:(void *cgl_ctx, xp_surface_id sid)
xp_bit_gravity_enum	/usr/include/Xplugin.h	/^enum xp_bit_gravity_enum {$/;"	g
xp_bool	/usr/include/Xplugin.h	/^typedef int xp_bool;$/;"	t
xp_box	/usr/include/Xplugin.h	/^  typedef BoxRec xp_box;$/;"	t
xp_box	/usr/include/Xplugin.h	/^  typedef struct xp_box_struct xp_box;$/;"	t	typeref:struct:xp_box_struct
xp_box_struct	/usr/include/Xplugin.h	/^  struct xp_box_struct {$/;"	s
xp_box_struct::x1	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
xp_box_struct::x2	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
xp_box_struct::y1	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
xp_box_struct::y2	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
xp_client_id	/usr/include/Xplugin.h	/^typedef unsigned int xp_client_id;$/;"	t
xp_colormap_fun	/usr/include/Xplugin.h	/^typedef xp_error (xp_colormap_fun) (void *data, int first_color,$/;"	t
xp_composite_op_enum	/usr/include/Xplugin.h	/^enum xp_composite_op_enum {$/;"	g
xp_composite_pixels	/usr/include/Xplugin.h	/^extern xp_error xp_composite_pixels (unsigned int width, unsigned int height,$/;"	p	signature:(unsigned int width, unsigned int height, unsigned int function, void *src[2], unsigned int src_rowbytes[2], void *mask, unsigned int mask_rowbytes, void *dest[2], unsigned int dest_rowbytes[2])
xp_configure_surface	/usr/include/Xplugin.h	/^extern xp_error xp_configure_surface (xp_surface_id sid, unsigned int mask,$/;"	p	signature:(xp_surface_id sid, unsigned int mask, const xp_window_changes *values)
xp_configure_window	/usr/include/Xplugin.h	/^extern xp_error xp_configure_window (xp_window_id id, unsigned int mask,$/;"	p	signature:(xp_window_id id, unsigned int mask, const xp_window_changes *values)
xp_copy_bytes	/usr/include/Xplugin.h	/^extern void xp_copy_bytes (unsigned int width, unsigned int height,$/;"	p	signature:(unsigned int width, unsigned int height, const void *src, unsigned int src_rowbytes, void *dst, unsigned int dst_rowbytes)
xp_copy_window	/usr/include/Xplugin.h	/^extern xp_error xp_copy_window (xp_window_id src_id, xp_window_id dst_id,$/;"	p	signature:(xp_window_id src_id, xp_window_id dst_id, int dst_nrects, const xp_box *dst_rects, int dx, int dy)
xp_create_surface	/usr/include/Xplugin.h	/^extern xp_error xp_create_surface (xp_window_id id, xp_surface_id *ret_sid);$/;"	p	signature:(xp_window_id id, xp_surface_id *ret_sid)
xp_create_window	/usr/include/Xplugin.h	/^extern xp_error xp_create_window (unsigned int mask,$/;"	p	signature:(unsigned int mask, const xp_window_changes *values, xp_window_id *ret_id)
xp_depth_enum	/usr/include/Xplugin.h	/^enum xp_depth_enum {$/;"	g
xp_destroy_surface	/usr/include/Xplugin.h	/^extern xp_error xp_destroy_surface (xp_surface_id sid);$/;"	p	signature:(xp_surface_id sid)
xp_destroy_window	/usr/include/Xplugin.h	/^extern xp_error xp_destroy_window (xp_window_id id);$/;"	p	signature:(xp_window_id id)
xp_disable_hot_keys	/usr/include/Xplugin.h	/^extern xp_error xp_disable_hot_keys(xp_bool state);$/;"	p	signature:(xp_bool state)
xp_disable_update	/usr/include/Xplugin.h	/^extern xp_error xp_disable_update (void);$/;"	p	signature:(void)
xp_error	/usr/include/Xplugin.h	/^typedef int xp_error;$/;"	t
xp_error_enum	/usr/include/Xplugin.h	/^enum xp_error_enum {$/;"	g
xp_event_fun	/usr/include/Xplugin.h	/^typedef void (xp_event_fun) (unsigned int type, const void *arg,$/;"	t
xp_event_type_enum	/usr/include/Xplugin.h	/^enum xp_event_type_enum {$/;"	g
xp_export_surface	/usr/include/Xplugin.h	/^extern xp_error xp_export_surface (xp_window_id wid, xp_surface_id sid,$/;"	p	signature:(xp_window_id wid, xp_surface_id sid, xp_client_id client, unsigned int ret_key[2])
xp_fill_bytes	/usr/include/Xplugin.h	/^extern void xp_fill_bytes (unsigned int width,$/;"	p	signature:(unsigned int width, unsigned int height, uint32_t value, void *dst, unsigned int dst_rowbytes)
xp_find_window	/usr/include/Xplugin.h	/^extern xp_error xp_find_window (int x, int y, xp_window_id above_id,$/;"	p	signature:(int x, int y, xp_window_id above_id, xp_window_id *ret_id)
xp_flush_window	/usr/include/Xplugin.h	/^extern xp_error xp_flush_window (xp_window_id id);$/;"	p	signature:(xp_window_id id)
xp_frame_attr_enum	/usr/include/Xplugin.h	/^enum xp_frame_attr_enum {$/;"	g
xp_frame_class_enum	/usr/include/Xplugin.h	/^enum xp_frame_class_enum {$/;"	g
xp_frame_draw	/usr/include/Xplugin.h	/^extern xp_error xp_frame_draw (xp_window_id wid, int class, unsigned int attr,$/;"	p	signature:(xp_window_id wid, int class, unsigned int attr, const xp_box *outer, const xp_box *inner, unsigned int title_len, const unsigned char *title_bytes)
xp_frame_get_rect	/usr/include/Xplugin.h	/^extern xp_error xp_frame_get_rect (int type, int class, const xp_box *outer,$/;"	p	signature:(int type, int class, const xp_box *outer, const xp_box *inner, xp_box *ret)
xp_frame_hit_test	/usr/include/Xplugin.h	/^extern xp_error xp_frame_hit_test (int class, int x, int y,$/;"	p	signature:(int class, int x, int y, const xp_box *outer, const xp_box *inner, int *ret)
xp_frame_rect_enum	/usr/include/Xplugin.h	/^enum xp_frame_rect_enum {$/;"	g
xp_free_shape	/usr/include/Xplugin.h	/^extern void xp_free_shape (int nrects, xp_box *rects);$/;"	p	signature:(int nrects, xp_box *rects)
xp_get_client_id	/usr/include/Xplugin.h	/^extern xp_error xp_get_client_id (xp_client_id *ret_client);$/;"	p	signature:(xp_client_id *ret_client)
xp_get_marked_shape	/usr/include/Xplugin.h	/^extern xp_error xp_get_marked_shape (xp_window_id id,$/;"	p	signature:(xp_window_id id, int *ret_nrects, xp_box **ret_rects)
xp_get_native_window	/usr/include/Xplugin.h	/^extern xp_error xp_get_native_window (xp_window_id id,$/;"	p	signature:(xp_window_id id, unsigned int *ret_native_id)
xp_get_window_bounds	/usr/include/Xplugin.h	/^extern xp_error xp_get_window_bounds (xp_window_id id, xp_box *bounds_ret);$/;"	p	signature:(xp_window_id id, xp_box *bounds_ret)
xp_get_window_surface_count	/usr/include/Xplugin.h	/^extern xp_error xp_get_window_surface_count (xp_window_id id,$/;"	p	signature:(xp_window_id id, unsigned int *ret)
xp_hide_cursor	/usr/include/Xplugin.h	/^extern xp_error xp_hide_cursor (void);$/;"	p	signature:(void)
xp_import_surface	/usr/include/Xplugin.h	/^extern xp_error xp_import_surface (const unsigned int key[2],$/;"	p	signature:(const unsigned int key[2], xp_surface_id *sid_ret)
xp_init	/usr/include/Xplugin.h	/^extern xp_error xp_init (unsigned int options);$/;"	p	signature:(unsigned int options)
xp_init_options_enum	/usr/include/Xplugin.h	/^enum xp_init_options_enum {$/;"	g
xp_is_symbolic_hotkey_event	/usr/include/Xplugin.h	/^extern xp_bool xp_is_symbolic_hotkey_event(const void *e);$/;"	p	signature:(const void *e)
xp_is_window_marked	/usr/include/Xplugin.h	/^extern xp_bool xp_is_window_marked (xp_window_id id);$/;"	p	signature:(xp_window_id id)
xp_lock_window	/usr/include/Xplugin.h	/^extern xp_error xp_lock_window (xp_window_id id,$/;"	p	signature:(xp_window_id id, const xp_box *in_rect, unsigned int *depth, void *bits[2], unsigned int rowbytes[2], xp_box *out_rect)
xp_lookup_native_window	/usr/include/Xplugin.h	/^extern xp_bool xp_lookup_native_window (unsigned int native_id,$/;"	p	signature:(unsigned int native_id, xp_window_id *ret_id)
xp_mark_window	/usr/include/Xplugin.h	/^extern xp_error xp_mark_window (xp_window_id id, int shape_nrects,$/;"	p	signature:(xp_window_id id, int shape_nrects, const xp_box *shape_rects, int shape_tx, int shape_ty)
xp_reenable_update	/usr/include/Xplugin.h	/^extern xp_error xp_reenable_update (void);$/;"	p	signature:(void)
xp_request_type	/usr/include/Xplugin.h	/^typedef unsigned int xp_request_type;$/;"	t
xp_request_type_enum	/usr/include/Xplugin.h	/^enum xp_request_type_enum {$/;"	g
xp_resource_id	/usr/include/Xplugin.h	/^typedef unsigned int xp_resource_id;$/;"	t
xp_select_events	/usr/include/Xplugin.h	/^extern xp_error xp_select_events (unsigned int mask,$/;"	p	signature:(unsigned int mask, xp_event_fun *callback, void *callback_data)
xp_set_cursor	/usr/include/Xplugin.h	/^extern xp_error xp_set_cursor (unsigned int width, unsigned int height,$/;"	p	signature:(unsigned int width, unsigned int height, unsigned int hot_x, unsigned int hot_y, const uint32_t *argb_data, unsigned int rowbytes)
xp_set_dock_proxy	/usr/include/Xplugin.h	/^extern xp_error xp_set_dock_proxy(uint32_t hi, uint32_t lo);$/;"	p	signature:(uint32_t hi, uint32_t lo)
xp_show_cursor	/usr/include/Xplugin.h	/^extern xp_error xp_show_cursor (void);$/;"	p	signature:(void)
xp_surface_id	/usr/include/Xplugin.h	/^typedef xp_resource_id xp_surface_id;$/;"	t
xp_synchronize	/usr/include/Xplugin.h	/^extern xp_error xp_synchronize (void);$/;"	p	signature:(void)
xp_unlock_window	/usr/include/Xplugin.h	/^extern xp_error xp_unlock_window (xp_window_id id, xp_bool flush);$/;"	p	signature:(xp_window_id id, xp_bool flush)
xp_update_gl_context	/usr/include/Xplugin.h	/^extern xp_error xp_update_gl_context (void *cgl_ctx);$/;"	p	signature:(void *cgl_ctx)
xp_window_changes	/usr/include/Xplugin.h	/^typedef struct xp_window_changes_struct xp_window_changes;$/;"	t	typeref:struct:xp_window_changes_struct
xp_window_changes_enum	/usr/include/Xplugin.h	/^enum xp_window_changes_enum {$/;"	g
xp_window_changes_struct	/usr/include/Xplugin.h	/^struct xp_window_changes_struct {$/;"	s
xp_window_changes_struct::bit_gravity	/usr/include/Xplugin.h	/^    int bit_gravity;			\/* how to resize the backing store *\/$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::colormap	/usr/include/Xplugin.h	/^    xp_colormap_fun *colormap;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::colormap_data	/usr/include/Xplugin.h	/^    void *colormap_data;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::depth	/usr/include/Xplugin.h	/^    unsigned int depth;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::height	/usr/include/Xplugin.h	/^    unsigned int width, height;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::shape_nrects	/usr/include/Xplugin.h	/^    int shape_nrects;			\/* -1 = remove shape *\/$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::shape_rects	/usr/include/Xplugin.h	/^    xp_box *shape_rects;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::shape_tx	/usr/include/Xplugin.h	/^    int shape_tx, shape_ty;		\/* translation for shape *\/$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::shape_ty	/usr/include/Xplugin.h	/^    int shape_tx, shape_ty;		\/* translation for shape *\/$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::sibling	/usr/include/Xplugin.h	/^    xp_window_id sibling;		\/* may be zero; in ABOVE\/BELOW modes$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::stack_mode	/usr/include/Xplugin.h	/^    int stack_mode;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::transient_for	/usr/include/Xplugin.h	/^    xp_window_id transient_for;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::width	/usr/include/Xplugin.h	/^    unsigned int width, height;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::window_level	/usr/include/Xplugin.h	/^    int window_level;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::x	/usr/include/Xplugin.h	/^    int x, y;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_changes_struct::y	/usr/include/Xplugin.h	/^    int x, y;$/;"	m	struct:xp_window_changes_struct	access:public
xp_window_id	/usr/include/Xplugin.h	/^typedef xp_resource_id xp_window_id;$/;"	t
xp_window_stack_mode_enum	/usr/include/Xplugin.h	/^enum xp_window_stack_mode_enum {$/;"	g
xp_window_state_enum	/usr/include/Xplugin.h	/^enum xp_window_state_enum {$/;"	g
xp_window_state_event	/usr/include/Xplugin.h	/^typedef struct xp_window_state_event_struct xp_window_state_event;$/;"	t	typeref:struct:xp_window_state_event_struct
xp_window_state_event_struct	/usr/include/Xplugin.h	/^struct xp_window_state_event_struct {$/;"	s
xp_window_state_event_struct::id	/usr/include/Xplugin.h	/^    xp_window_id id;$/;"	m	struct:xp_window_state_event_struct	access:public
xp_window_state_event_struct::state	/usr/include/Xplugin.h	/^    unsigned int state;$/;"	m	struct:xp_window_state_event_struct	access:public
xsgetn	/usr/include/fcgio.h	/^    virtual std::streamsize xsgetn(char_type * s, std::streamsize n);$/;"	p	class:fcgi_streambuf	access:protected	signature:(char_type * s, std::streamsize n)
xsputn	/usr/include/fcgio.h	/^    virtual std::streamsize xsputn(const char_type * s, std::streamsize n);$/;"	p	class:fcgi_streambuf	access:protected	signature:(const char_type * s, std::streamsize n)
xthreadsafe	/usr/include/sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	access:public
y	/usr/include/Xplugin.h	/^    int x, y;$/;"	m	struct:xp_window_changes_struct	access:public
y	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon10	access:public
y	/usr/include/menu.h	/^  short          y;           \/* y and x location of item in menu          *\/$/;"	m	struct:tagITEM	access:public
y	/usr/include/ncurses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon86	access:public
y	/usr/include/tk.h	/^    int x, y;			\/* Pointer x, y coordinates in event$/;"	m	struct:__anon129	access:public
y1	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
y1	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
y2	/usr/include/Xplugin.h	/^      short x1, y1, x2, y2;$/;"	m	struct:xp_box_struct	access:public
y2	/usr/include/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item	access:public
y_root	/usr/include/tk.h	/^    int x_root, y_root;		\/* Coordinates relative to root. *\/$/;"	m	struct:__anon129	access:public
year	/usr/include/sqltypes.h	/^    SQLSMALLINT year;$/;"	m	struct:tagDATE_STRUCT	access:public
year	/usr/include/sqltypes.h	/^    SQLSMALLINT year;$/;"	m	struct:tagTIMESTAMP_STRUCT	access:public
year	/usr/include/sqltypes.h	/^    SQLUINTEGER year;$/;"	m	struct:tagSQL_YEAR_MONTH	access:public
year_month	/usr/include/sqltypes.h	/^	SQL_YEAR_MONTH_STRUCT year_month;$/;"	m	union:tagSQL_INTERVAL_STRUCT::__anon108	access:public
yoffset	/usr/include/tk.h	/^    int yoffset;		\/* y offset *\/$/;"	m	struct:Tk_TSOffset	access:public
yyFlexLexer	/usr/include/FlexLexer.h	/^	yyFlexLexer( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 )
yyFlexLexer	/usr/include/FlexLexer.h	/^class yyFlexLexer : public FlexLexer {$/;"	c	inherits:FlexLexer
yyFlexLexer::LexerError	/usr/include/FlexLexer.h	/^	virtual void LexerError( const char* msg );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* msg )
yyFlexLexer::LexerInput	/usr/include/FlexLexer.h	/^	virtual int LexerInput( char* buf, int max_size );$/;"	p	class:yyFlexLexer	access:protected	signature:( char* buf, int max_size )
yyFlexLexer::LexerOutput	/usr/include/FlexLexer.h	/^	virtual void LexerOutput( const char* buf, int size );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* buf, int size )
yyFlexLexer::switch_streams	/usr/include/FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
yyFlexLexer::yyFlexLexer	/usr/include/FlexLexer.h	/^	yyFlexLexer( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 )
yyFlexLexer::yy_buffer_stack	/usr/include/FlexLexer.h	/^	struct yy_buffer_state ** yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	class:yyFlexLexer	typeref:struct:yyFlexLexer::yy_buffer_state	access:protected
yyFlexLexer::yy_buffer_stack_max	/usr/include/FlexLexer.h	/^	size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_buffer_stack_top	/usr/include/FlexLexer.h	/^	size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_c_buf_p	/usr/include/FlexLexer.h	/^	char* yy_c_buf_p;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_create_buffer	/usr/include/FlexLexer.h	/^	struct yy_buffer_state* yy_create_buffer( FLEX_STD istream* s, int size );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
yyFlexLexer::yy_delete_buffer	/usr/include/FlexLexer.h	/^	void yy_delete_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* b )
yyFlexLexer::yy_did_buffer_switch_on_eof	/usr/include/FlexLexer.h	/^	int yy_did_buffer_switch_on_eof;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_flush_buffer	/usr/include/FlexLexer.h	/^	void yy_flush_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b )
yyFlexLexer::yy_full_lp	/usr/include/FlexLexer.h	/^	int yy_full_lp;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_full_match	/usr/include/FlexLexer.h	/^	char* yy_full_match;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_full_state	/usr/include/FlexLexer.h	/^	int* yy_full_state;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_get_next_buffer	/usr/include/FlexLexer.h	/^	int yy_get_next_buffer();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_get_previous_state	/usr/include/FlexLexer.h	/^	yy_state_type yy_get_previous_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_hold_char	/usr/include/FlexLexer.h	/^	char yy_hold_char;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_init	/usr/include/FlexLexer.h	/^	int yy_init;		\/\/ whether we need to initialize$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_init_buffer	/usr/include/FlexLexer.h	/^	void yy_init_buffer( struct yy_buffer_state* b, FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b, FLEX_STD istream* s )
yyFlexLexer::yy_last_accepting_cpos	/usr/include/FlexLexer.h	/^	char* yy_last_accepting_cpos;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_last_accepting_state	/usr/include/FlexLexer.h	/^	yy_state_type yy_last_accepting_state;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_load_buffer_state	/usr/include/FlexLexer.h	/^	void yy_load_buffer_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_looking_for_trail_begin	/usr/include/FlexLexer.h	/^	int yy_looking_for_trail_begin;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_lp	/usr/include/FlexLexer.h	/^	int yy_lp;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_more_flag	/usr/include/FlexLexer.h	/^	int yy_more_flag;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_more_len	/usr/include/FlexLexer.h	/^	int yy_more_len;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_more_offset	/usr/include/FlexLexer.h	/^	int yy_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_n_chars	/usr/include/FlexLexer.h	/^	int yy_n_chars;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_pop_state	/usr/include/FlexLexer.h	/^	void yy_pop_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_prev_more_offset	/usr/include/FlexLexer.h	/^	int yy_prev_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_push_state	/usr/include/FlexLexer.h	/^	void yy_push_state( int new_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( int new_state )
yyFlexLexer::yy_start	/usr/include/FlexLexer.h	/^	int yy_start;		\/\/ start state number$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_start_stack	/usr/include/FlexLexer.h	/^	int* yy_start_stack;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_start_stack_depth	/usr/include/FlexLexer.h	/^	int yy_start_stack_depth;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_start_stack_ptr	/usr/include/FlexLexer.h	/^	int yy_start_stack_ptr;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_state_buf	/usr/include/FlexLexer.h	/^	yy_state_type* yy_state_buf;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_state_ptr	/usr/include/FlexLexer.h	/^	yy_state_type* yy_state_ptr;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_switch_to_buffer	/usr/include/FlexLexer.h	/^	void yy_switch_to_buffer( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yyFlexLexer::yy_top_state	/usr/include/FlexLexer.h	/^	int yy_top_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_try_NUL_trans	/usr/include/FlexLexer.h	/^	yy_state_type yy_try_NUL_trans( yy_state_type current_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( yy_state_type current_state )
yyFlexLexer::yyensure_buffer_stack	/usr/include/FlexLexer.h	/^	void yyensure_buffer_stack(void);$/;"	p	class:yyFlexLexer	access:protected	signature:(void)
yyFlexLexer::yyin	/usr/include/FlexLexer.h	/^	FLEX_STD istream* yyin;	\/\/ input source for default LexerInput$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yyinput	/usr/include/FlexLexer.h	/^	int yyinput();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yylex	/usr/include/FlexLexer.h	/^	virtual int yylex();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexer::yyout	/usr/include/FlexLexer.h	/^	FLEX_STD ostream* yyout;	\/\/ output sink for default LexerOutput$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yypop_buffer_state	/usr/include/FlexLexer.h	/^	void yypop_buffer_state();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexer::yypush_buffer_state	/usr/include/FlexLexer.h	/^	void yypush_buffer_state( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yyFlexLexer::yyrestart	/usr/include/FlexLexer.h	/^	void yyrestart( FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s )
yyFlexLexer::yyunput	/usr/include/FlexLexer.h	/^	void yyunput( int c, char* buf_ptr );$/;"	p	class:yyFlexLexer	access:protected	signature:( int c, char* buf_ptr )
yyFlexLexer::yywrap	/usr/include/FlexLexer.h	/^	virtual int yywrap();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexer::~yyFlexLexer	/usr/include/FlexLexer.h	/^	virtual ~yyFlexLexer();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexerOnce	/usr/include/FlexLexer.h	/^#define yyFlexLexerOnce$/;"	d
yy_buffer_stack	/usr/include/FlexLexer.h	/^	struct yy_buffer_state ** yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	class:yyFlexLexer	typeref:struct:yyFlexLexer::yy_buffer_state	access:protected
yy_buffer_stack_max	/usr/include/FlexLexer.h	/^	size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yy_buffer_stack_top	/usr/include/FlexLexer.h	/^	size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yy_c_buf_p	/usr/include/FlexLexer.h	/^	char* yy_c_buf_p;$/;"	m	class:yyFlexLexer	access:protected
yy_create_buffer	/usr/include/FlexLexer.h	/^		yy_create_buffer( FLEX_STD istream* s, int size ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
yy_create_buffer	/usr/include/FlexLexer.h	/^	struct yy_buffer_state* yy_create_buffer( FLEX_STD istream* s, int size );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
yy_delete_buffer	/usr/include/FlexLexer.h	/^	virtual void yy_delete_buffer( struct yy_buffer_state* b ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* b )
yy_delete_buffer	/usr/include/FlexLexer.h	/^	void yy_delete_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* b )
yy_did_buffer_switch_on_eof	/usr/include/FlexLexer.h	/^	int yy_did_buffer_switch_on_eof;$/;"	m	class:yyFlexLexer	access:protected
yy_flex_debug	/usr/include/FlexLexer.h	/^	int yy_flex_debug;	\/\/ only has effect with -d or "%option debug"$/;"	m	class:FlexLexer	access:protected
yy_flush_buffer	/usr/include/FlexLexer.h	/^	void yy_flush_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b )
yy_full_lp	/usr/include/FlexLexer.h	/^	int yy_full_lp;$/;"	m	class:yyFlexLexer	access:protected
yy_full_match	/usr/include/FlexLexer.h	/^	char* yy_full_match;$/;"	m	class:yyFlexLexer	access:protected
yy_full_state	/usr/include/FlexLexer.h	/^	int* yy_full_state;$/;"	m	class:yyFlexLexer	access:protected
yy_get_next_buffer	/usr/include/FlexLexer.h	/^	int yy_get_next_buffer();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_get_previous_state	/usr/include/FlexLexer.h	/^	yy_state_type yy_get_previous_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_hold_char	/usr/include/FlexLexer.h	/^	char yy_hold_char;$/;"	m	class:yyFlexLexer	access:protected
yy_init	/usr/include/FlexLexer.h	/^	int yy_init;		\/\/ whether we need to initialize$/;"	m	class:yyFlexLexer	access:protected
yy_init_buffer	/usr/include/FlexLexer.h	/^	void yy_init_buffer( struct yy_buffer_state* b, FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b, FLEX_STD istream* s )
yy_last_accepting_cpos	/usr/include/FlexLexer.h	/^	char* yy_last_accepting_cpos;$/;"	m	class:yyFlexLexer	access:protected
yy_last_accepting_state	/usr/include/FlexLexer.h	/^	yy_state_type yy_last_accepting_state;$/;"	m	class:yyFlexLexer	access:protected
yy_load_buffer_state	/usr/include/FlexLexer.h	/^	void yy_load_buffer_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_looking_for_trail_begin	/usr/include/FlexLexer.h	/^	int yy_looking_for_trail_begin;$/;"	m	class:yyFlexLexer	access:protected
yy_lp	/usr/include/FlexLexer.h	/^	int yy_lp;$/;"	m	class:yyFlexLexer	access:protected
yy_more_flag	/usr/include/FlexLexer.h	/^	int yy_more_flag;$/;"	m	class:yyFlexLexer	access:protected
yy_more_len	/usr/include/FlexLexer.h	/^	int yy_more_len;$/;"	m	class:yyFlexLexer	access:protected
yy_more_offset	/usr/include/FlexLexer.h	/^	int yy_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yy_n_chars	/usr/include/FlexLexer.h	/^	int yy_n_chars;$/;"	m	class:yyFlexLexer	access:protected
yy_pop_state	/usr/include/FlexLexer.h	/^	void yy_pop_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_prev_more_offset	/usr/include/FlexLexer.h	/^	int yy_prev_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yy_push_state	/usr/include/FlexLexer.h	/^	void yy_push_state( int new_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( int new_state )
yy_start	/usr/include/FlexLexer.h	/^	int yy_start;		\/\/ start state number$/;"	m	class:yyFlexLexer	access:protected
yy_start_stack	/usr/include/FlexLexer.h	/^	int* yy_start_stack;$/;"	m	class:yyFlexLexer	access:protected
yy_start_stack_depth	/usr/include/FlexLexer.h	/^	int yy_start_stack_depth;$/;"	m	class:yyFlexLexer	access:protected
yy_start_stack_ptr	/usr/include/FlexLexer.h	/^	int yy_start_stack_ptr;$/;"	m	class:yyFlexLexer	access:protected
yy_state_buf	/usr/include/FlexLexer.h	/^	yy_state_type* yy_state_buf;$/;"	m	class:yyFlexLexer	access:protected
yy_state_ptr	/usr/include/FlexLexer.h	/^	yy_state_type* yy_state_ptr;$/;"	m	class:yyFlexLexer	access:protected
yy_state_type	/usr/include/FlexLexer.h	/^typedef int yy_state_type;$/;"	t
yy_switch_to_buffer	/usr/include/FlexLexer.h	/^		yy_switch_to_buffer( struct yy_buffer_state* new_buffer ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yy_switch_to_buffer	/usr/include/FlexLexer.h	/^	void yy_switch_to_buffer( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yy_top_state	/usr/include/FlexLexer.h	/^	int yy_top_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_try_NUL_trans	/usr/include/FlexLexer.h	/^	yy_state_type yy_try_NUL_trans( yy_state_type current_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( yy_state_type current_state )
yyensure_buffer_stack	/usr/include/FlexLexer.h	/^	void yyensure_buffer_stack(void);$/;"	p	class:yyFlexLexer	access:protected	signature:(void)
yyin	/usr/include/FlexLexer.h	/^	FLEX_STD istream* yyin;	\/\/ input source for default LexerInput$/;"	m	class:yyFlexLexer	access:protected
yyinput	/usr/include/FlexLexer.h	/^	int yyinput();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyleng	/usr/include/FlexLexer.h	/^	int yyleng;$/;"	m	class:FlexLexer	access:protected
yylex	/usr/include/FlexLexer.h	/^	int yylex( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )$/;"	f	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
yylex	/usr/include/FlexLexer.h	/^	virtual int yylex() = 0;$/;"	p	class:FlexLexer	access:public	signature:()
yylex	/usr/include/FlexLexer.h	/^	virtual int yylex();$/;"	p	class:yyFlexLexer	access:public	signature:()
yylineno	/usr/include/FlexLexer.h	/^	int yylineno;		\/\/ only maintained if you use %option yylineno$/;"	m	class:FlexLexer	access:protected
yyout	/usr/include/FlexLexer.h	/^	FLEX_STD ostream* yyout;	\/\/ output sink for default LexerOutput$/;"	m	class:yyFlexLexer	access:protected
yypop_buffer_state	/usr/include/FlexLexer.h	/^	void yypop_buffer_state();$/;"	p	class:yyFlexLexer	access:public	signature:()
yypush_buffer_state	/usr/include/FlexLexer.h	/^	void yypush_buffer_state( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yyrestart	/usr/include/FlexLexer.h	/^	virtual void yyrestart( FLEX_STD istream* s ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s )
yyrestart	/usr/include/FlexLexer.h	/^	void yyrestart( FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s )
yytext	/usr/include/FlexLexer.h	/^	char* yytext;$/;"	m	class:FlexLexer	access:protected
yyunput	/usr/include/FlexLexer.h	/^	void yyunput( int c, char* buf_ptr );$/;"	p	class:yyFlexLexer	access:protected	signature:( int c, char* buf_ptr )
yywrap	/usr/include/FlexLexer.h	/^	virtual int yywrap();$/;"	p	class:yyFlexLexer	access:public	signature:()
z	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon10	access:public
z	/usr/include/ncurses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon86	access:public
zErrMsg	/usr/include/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	access:public
zError	/usr/include/zconf.h	/^#  define zError /;"	d
zError	/usr/include/zlib.h	/^ZEXTERN const char   * ZEXPORT zError           OF((int));$/;"	p	signature:(int)
zName	/usr/include/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	access:public
z_off_t	/usr/include/zconf.h	/^#define  z_off_t /;"	d
z_stream	/usr/include/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	/usr/include/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_stream_s::adler	/usr/include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::avail_in	/usr/include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::avail_out	/usr/include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::data_type	/usr/include/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::msg	/usr/include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::next_in	/usr/include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::next_out	/usr/include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::opaque	/usr/include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::reserved	/usr/include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::state	/usr/include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR	access:public
z_stream_s::total_in	/usr/include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::total_out	/usr/include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::zalloc	/usr/include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::zfree	/usr/include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	access:public
z_streamp	/usr/include/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	/usr/include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	access:public
zero_motion	/usr/include/term.h	/^#define zero_motion /;"	d
zfree	/usr/include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	access:public
zlibCompileFlags	/usr/include/zlib.h	/^ZEXTERN uLong ZEXPORT zlibCompileFlags OF((void));$/;"	p	signature:(void)
zlibVersion	/usr/include/zlib.h	/^ZEXTERN const char * ZEXPORT zlibVersion OF((void));$/;"	p	signature:(void)
zlib_version	/usr/include/zlib.h	/^#define zlib_version /;"	d
zopen	/usr/include/stdio.h	/^FILE	*zopen(const char *, const char *, int);$/;"	p	signature:(const char *, const char *, int)
~FlexLexer	/usr/include/FlexLexer.h	/^	virtual ~FlexLexer()	{ }$/;"	f	class:FlexLexer	access:public	signature:()
~Tagger	/usr/include/mecab.h	/^    virtual ~Tagger() {}$/;"	f	class:MeCab::Tagger	access:public	signature:()
~fcgi_istream	/usr/include/fcgio.h	/^    ~fcgi_istream(void) {}$/;"	f	class:fcgi_istream	access:public	signature:(void)
~fcgi_ostream	/usr/include/fcgio.h	/^    ~fcgi_ostream(void) {}$/;"	f	class:fcgi_ostream	access:public	signature:(void)
~fcgi_streambuf	/usr/include/fcgio.h	/^    ~fcgi_streambuf(void);$/;"	p	class:fcgi_streambuf	access:public	signature:(void)
~yyFlexLexer	/usr/include/FlexLexer.h	/^	virtual ~yyFlexLexer();$/;"	p	class:yyFlexLexer	access:public	signature:()
